

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Apr 16 18:37:49 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	param0,global,class=BANK0,space=1,delta=1
    75  0000                     
    76                           	psect	idataCOMRAM
    77  001D90                     __pidataCOMRAM:
    78                           	opt stack 0
    79                           
    80                           ;initializer for i2c_slave_int_handler@F9158
    81  001D90  01                 	db	1
    82  001D91  01                 	db	1
    83  001D92  02                 	db	2
    84  001D93  03                 	db	3
    85  001D94  06                 	db	6
    86                           
    87                           ;initializer for i2c_slave_int_handler@F9160
    88  001D95  03                 	db	3
    89  001D96  04                 	db	4
    90  001D97  04                 	db	4
    91  001D98  00                 	db	0
    92  001D99  00                 	db	0
    93                           
    94                           ;initializer for i2c_slave_int_handler@F9162
    95  001D9A  9F                 	db	159
    96  001D9B  1F                 	db	31
    97                           
    98                           	psect	idataBANK1
    99  001D0E                     __pidataBANK1:
   100                           	opt stack 0
   101                           
   102                           ;initializer for main@F9247
   103  001D0E  BC                 	db	188
   104  001D0F  00                 	db	0
   105  001D10  00                 	db	0
   106  001D11  00                 	db	0
   107  001D12  00                 	db	0
   108  001D13  00                 	db	0
   109                           
   110                           ;initializer for main@F9249
   111  001D14  BC                 	db	188
   112  001D15  00                 	db	0
   113  001D16  00                 	db	0
   114  001D17  00                 	db	0
   115  001D18  00                 	db	0
   116  001D19  00                 	db	0
   117                           
   118                           ;initializer for main@F9254
   119  001D1A  03                 	db	3
   120  001D1B  00                 	db	0
   121  001D1C  00                 	db	0
   122  001D1D  00                 	db	0
   123  001D1E  00                 	db	0
   124  001D1F  00                 	db	0
   125                           
   126                           ;initializer for main@F9242
   127  001D20  01                 	db	1
   128  001D21  02                 	db	2
   129                           
   130                           ;initializer for main@F9252
   131  001D22  AA                 	db	170
   132  0000                     _ADCON0	set	4034
   133  0000                     _ADCON0bits	set	4034
   134  0000                     _ADCON1	set	4033
   135  0000                     _ANCON0	set	3912
   136  0000                     _ANCON1	set	3913
   137  0000                     _INTCON2bits	set	4081
   138  0000                     _INTCONbits	set	4082
   139  0000                     _IPR1bits	set	3999
   140  0000                     _LATA	set	3977
   141  0000                     _LATAbits	set	3977
   142  0000                     _LATB	set	3978
   143  0000                     _LATBbits	set	3978
   144  0000                     _OSCCON	set	4051
   145  0000                     _OSCCONbits	set	4051
   146  0000                     _OSCTUNEbits	set	3995
   147  0000                     _PIE1bits	set	3997
   148  0000                     _PIR1bits	set	3998
   149  0000                     _PORTA	set	3968
   150  0000                     _PORTBbits	set	3969
   151  0000                     _RCONbits	set	4048
   152  0000                     _RCREG1	set	4015
   153  0000                     _RCSTA1	set	4012
   154  0000                     _RCSTA1bits	set	4012
   155  0000                     _RCSTAbits	set	4012
   156  0000                     _SPBRG1	set	4016
   157  0000                     _SPBRGH1	set	3967
   158  0000                     _SSPADD	set	4040
   159  0000                     _SSPBUF	set	4041
   160  0000                     _SSPCON1	set	4038
   161  0000                     _SSPCON1bits	set	4038
   162  0000                     _SSPCON2	set	4037
   163  0000                     _SSPCON2bits	set	4037
   164  0000                     _SSPSTAT	set	4039
   165  0000                     _SSPSTATbits	set	4039
   166  0000                     _T0CON	set	4053
   167  0000                     _T0CONbits	set	4053
   168  0000                     _T1CON	set	4045
   169  0000                     _T1CONbits	set	4045
   170  0000                     _T1GCON	set	3994
   171  0000                     _T1GCONbits	set	3994
   172  0000                     _TMR0H	set	4055
   173  0000                     _TMR0L	set	4054
   174  0000                     _TMR1H	set	4047
   175  0000                     _TMR1L	set	4046
   176  0000                     _TRISA	set	3986
   177  0000                     _TRISB	set	3987
   178  0000                     _TRISBbits	set	3987
   179  0000                     _TRISC	set	3988
   180  0000                     _TRISCbits	set	3988
   181  0000                     _TXREG	set	4014
   182  0000                     _TXSTA1	set	4013
   183  0000                     _TXSTA1bits	set	4013
   184  0000                     _TXSTAbits	set	4013
   185                           
   186                           	psect	nvCOMRAM
   187  00003F                     __pnvCOMRAM:
   188                           	opt stack 0
   189  00003F                     _uc_ptr:
   190                           	opt stack 0
   191  00003F                     	ds	2
   192                           
   193                           	psect	nvBANK0
   194  0000C8                     __pnvBANK0:
   195                           	opt stack 0
   196  0000C8                     _ic_ptr:
   197                           	opt stack 0
   198  0000C8                     	ds	2
   199                           
   200                           ; #config settings
   201  0000                     
   202                           	psect	cinit
   203  0015A6                     __pcinit:
   204                           	opt stack 0
   205  0015A6                     start_initialization:
   206                           	opt stack 0
   207  0015A6                     __initialization:
   208                           	opt stack 0
   209                           
   210                           ; Clear objects allocated to BANK2 (134 bytes)
   211  0015A6  EE02  F000         	lfsr	0,__pbssBANK2
   212  0015AA  0E86               	movlw	134
   213  0015AC                     clear_0:
   214  0015AC  6AEE               	clrf	postinc0,c
   215  0015AE  06E8               	decf	wreg,f,c
   216  0015B0  E1FD               	bnz	clear_0
   217                           
   218                           ; Clear objects allocated to BANK1 (134 bytes)
   219  0015B2  EE01  F000         	lfsr	0,__pbssBANK1
   220  0015B6  0E86               	movlw	134
   221  0015B8                     clear_1:
   222  0015B8  6AEE               	clrf	postinc0,c
   223  0015BA  06E8               	decf	wreg,f,c
   224  0015BC  E1FD               	bnz	clear_1
   225                           
   226                           ; Clear objects allocated to BANK0 (28 bytes)
   227  0015BE  EE00  F0AC         	lfsr	0,__pbssBANK0
   228  0015C2  0E1C               	movlw	28
   229  0015C4                     clear_2:
   230  0015C4  6AEE               	clrf	postinc0,c
   231  0015C6  06E8               	decf	wreg,f,c
   232  0015C8  E1FD               	bnz	clear_2
   233                           
   234                           ; Clear objects allocated to COMRAM (6 bytes)
   235  0015CA  6A3E               	clrf	(__pbssCOMRAM+5)& (0+255),c
   236  0015CC  6A3D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   237  0015CE  6A3C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   238  0015D0  6A3B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   239  0015D2  6A3A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   240  0015D4  6A39               	clrf	__pbssCOMRAM& (0+255),c
   241                           
   242                           ; Initialize objects allocated to BANK1 (21 bytes)
   243                           ; load TBLPTR registers with __pidataBANK1
   244  0015D6  0E0E               	movlw	low __pidataBANK1
   245  0015D8  6EF6               	movwf	tblptrl,c
   246  0015DA  0E1D               	movlw	high __pidataBANK1
   247  0015DC  6EF7               	movwf	tblptrh,c
   248  0015DE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   249  0015E0  6EF8               	movwf	tblptru,c
   250  0015E2  EE01  F0DD         	lfsr	0,__pdataBANK1
   251  0015E6  EE10 F015          	lfsr	1,21
   252  0015EA                     copy_data0:
   253  0015EA  0009               	tblrd		*+
   254  0015EC  CFF5 FFEE          	movff	tablat,postinc0
   255  0015F0  50E5               	movf	postdec1,w,c
   256  0015F2  50E1               	movf	fsr1l,w,c
   257  0015F4  E1FA               	bnz	copy_data0
   258                           
   259                           ; Initialize objects allocated to COMRAM (12 bytes)
   260                           ; load TBLPTR registers with __pidataCOMRAM
   261  0015F6  0E90               	movlw	low __pidataCOMRAM
   262  0015F8  6EF6               	movwf	tblptrl,c
   263  0015FA  0E1D               	movlw	high __pidataCOMRAM
   264  0015FC  6EF7               	movwf	tblptrh,c
   265  0015FE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   266  001600  6EF8               	movwf	tblptru,c
   267  001602  EE00  F02D         	lfsr	0,__pdataCOMRAM
   268  001606  EE10 F00C          	lfsr	1,12
   269  00160A                     copy_data1:
   270  00160A  0009               	tblrd		*+
   271  00160C  CFF5 FFEE          	movff	tablat,postinc0
   272  001610  50E5               	movf	postdec1,w,c
   273  001612  50E1               	movf	fsr1l,w,c
   274  001614  E1FA               	bnz	copy_data1
   275  001616                     end_of_initialization:
   276                           	opt stack 0
   277  001616                     __end_of__initialization:
   278                           	opt stack 0
   279  001616  0E00               	movlw	low (__Lmediumconst shr (0+16))
   280  001618  6EF8               	movwf	tblptru,c
   281  00161A  0100               	movlb	0
   282  00161C  EF65  F000         	goto	_main	;jump to C main() function
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           postdec1	equ	0xFE5
   290                           fsr1l	equ	0xFE1
   291                           
   292                           	psect	bssCOMRAM
   293  000039                     __pbssCOMRAM:
   294                           	opt stack 0
   295  000039                     _UART_timeout:
   296                           	opt stack 0
   297  000039                     	ds	2
   298  00003B                     _t1Mult:
   299                           	opt stack 0
   300  00003B                     	ds	2
   301  00003D                     _MQ_Main_Willing_to_block:
   302                           	opt stack 0
   303  00003D                     	ds	1
   304  00003E                     _USART1_Status:
   305                           	opt stack 0
   306  00003E                     	ds	1
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	dataCOMRAM
   317  00002D                     __pdataCOMRAM:
   318                           	opt stack 0
   319  00002D                     i2c_slave_int_handler@F9158:
   320                           	opt stack 0
   321  00002D                     	ds	5
   322  000032                     i2c_slave_int_handler@F9160:
   323                           	opt stack 0
   324  000032                     	ds	5
   325  000037                     i2c_slave_int_handler@F9162:
   326                           	opt stack 0
   327  000037                     	ds	2
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	bssBANK0
   338  0000AC                     __pbssBANK0:
   339                           	opt stack 0
   340  0000AC                     _adcbuffer:
   341                           	opt stack 0
   342  0000AC                     	ds	28
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           postdec1	equ	0xFE5
   350                           fsr1l	equ	0xFE1
   351                           
   352                           	psect	bssBANK1
   353  000100                     __pbssBANK1:
   354                           	opt stack 0
   355  000100                     _ToMainHigh_MQ:
   356                           	opt stack 0
   357  000100                     	ds	67
   358  000143                     _ToMainLow_MQ:
   359                           	opt stack 0
   360  000143                     	ds	67
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           postdec1	equ	0xFE5
   368                           fsr1l	equ	0xFE1
   369                           
   370                           	psect	dataBANK1
   371  0001DD                     __pdataBANK1:
   372                           	opt stack 0
   373  0001DD                     main@F9247:
   374                           	opt stack 0
   375  0001DD                     	ds	6
   376  0001E3                     main@F9249:
   377                           	opt stack 0
   378  0001E3                     	ds	6
   379  0001E9                     main@F9254:
   380                           	opt stack 0
   381  0001E9                     	ds	6
   382  0001EF                     main@F9242:
   383                           	opt stack 0
   384  0001EF                     	ds	2
   385  0001F1                     main@F9252:
   386                           	opt stack 0
   387  0001F1                     	ds	1
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           postdec1	equ	0xFE5
   395                           fsr1l	equ	0xFE1
   396                           
   397                           	psect	bssBANK2
   398  000200                     __pbssBANK2:
   399                           	opt stack 0
   400  000200                     _FromMainHigh_MQ:
   401                           	opt stack 0
   402  000200                     	ds	67
   403  000243                     _FromMainLow_MQ:
   404                           	opt stack 0
   405  000243                     	ds	67
   406                           tblptru	equ	0xFF8
   407                           tblptrh	equ	0xFF7
   408                           tblptrl	equ	0xFF6
   409                           tablat	equ	0xFF5
   410                           postinc0	equ	0xFEE
   411                           wreg	equ	0xFE8
   412                           postdec1	equ	0xFE5
   413                           fsr1l	equ	0xFE1
   414                           
   415                           	psect	cstackBANK1
   416  000186                     __pcstackBANK1:
   417                           	opt stack 0
   418  000186                     main@motorAck:
   419                           	opt stack 0
   420                           
   421                           ; 6 bytes @ 0x0
   422  000186                     	ds	6
   423  00018C                     main@msg:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x6
   427  00018C                     	ds	2
   428  00018E                     main@stop:
   429                           	opt stack 0
   430                           
   431                           ; 6 bytes @ 0x8
   432  00018E                     	ds	6
   433  000194                     main@last_reg_recvd:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0xE
   437  000194                     	ds	1
   438  000195                     main@t0thread_data:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0xF
   442  000195                     	ds	2
   443  000197                     main@t1thread_data:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x11
   447  000197                     	ds	2
   448  000199                     main@sensorMsg:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x13
   452  000199                     	ds	1
   453  00019A                     main@correct:
   454                           	opt stack 0
   455                           
   456                           ; 6 bytes @ 0x14
   457  00019A                     	ds	6
   458  0001A0                     main@msgbuffer:
   459                           	opt stack 0
   460                           
   461                           ; 11 bytes @ 0x1A
   462  0001A0                     	ds	11
   463  0001AB                     main@lastMotors:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x25
   467  0001AB                     	ds	2
   468  0001AD                     main@length:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x27
   472  0001AD                     	ds	1
   473  0001AE                     main@msgtype:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x28
   477  0001AE                     	ds	1
   478  0001AF                     main@state:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x29
   482  0001AF                     	ds	2
   483  0001B1                     main@uc:
   484                           	opt stack 0
   485                           
   486                           ; 15 bytes @ 0x2B
   487  0001B1                     	ds	15
   488  0001C0                     main@ic:
   489                           	opt stack 0
   490                           
   491                           ; 29 bytes @ 0x3A
   492  0001C0                     	ds	29
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           postdec1	equ	0xFE5
   500                           fsr1l	equ	0xFE1
   501                           
   502                           	psect	cstackBANK0
   503  000060                     __pcstackBANK0:
   504                           	opt stack 0
   505  000060                     ?i2_in_high_int:
   506                           	opt stack 0
   507  000060                     ?i2___awmod:
   508                           	opt stack 0
   509  000060                     i2c_master_recv@length:
   510                           	opt stack 0
   511  000060                     WriteTimer0@timer0:
   512                           	opt stack 0
   513  000060                     i2check_msg@qptr:
   514                           	opt stack 0
   515  000060                     i2memcpy@d1:
   516                           	opt stack 0
   517  000060                     i2___awmod@dividend:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x0
   521  000060                     	ds	2
   522  000062                     ??i2_check_msg:
   523  000062                     ?i2_in_low_int:
   524                           	opt stack 0
   525  000062                     WriteTimer0@timer:
   526                           	opt stack 0
   527  000062                     i2memcpy@s1:
   528                           	opt stack 0
   529  000062                     i2___awmod@divisor:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x2
   533  000062                     	ds	2
   534  000064                     ??i2___awmod:
   535  000064                     i2memcpy@n:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x4
   539  000064                     	ds	1
   540  000065                     i2___awmod@counter:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x5
   544  000065                     	ds	1
   545  000066                     i2___awmod@sign:
   546                           	opt stack 0
   547  000066                     i2memcpy@d:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x6
   551  000066                     	ds	2
   552  000068                     i2memcpy@s:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x8
   556  000068                     	ds	2
   557  00006A                     i2send_msg@qptr:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0xA
   561  00006A                     	ds	2
   562  00006C                     i2send_msg@length:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0xC
   566  00006C                     	ds	1
   567  00006D                     i2send_msg@msgtype:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0xD
   571  00006D                     	ds	1
   572  00006E                     i2send_msg@data:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0xE
   576  00006E                     	ds	2
   577  000070                     ??i2_send_msg:
   578                           
   579                           ; 0 bytes @ 0x10
   580  000070                     	ds	1
   581  000071                     i2send_msg@tlength:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x11
   585  000071                     	ds	2
   586  000073                     i2send_msg@slot:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x13
   590  000073                     	ds	1
   591  000074                     i2send_msg@qmsg:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0x14
   595  000074                     	ds	2
   596  000076                     ToMainHigh_sendmsg@msgtype:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x16
   600  000076                     	ds	1
   601  000077                     ToMainHigh_sendmsg@data:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x17
   605  000077                     	ds	2
   606  000079                     ToMainHigh_sendmsg@length:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x19
   610  000079                     	ds	1
   611  00007A                     ??_i2c_master_int_handler:
   612                           
   613                           ; 0 bytes @ 0x1A
   614  00007A                     	ds	5
   615  00007F                     ??_InterruptHandlerHigh:
   616                           
   617                           ; 0 bytes @ 0x1F
   618  00007F                     	ds	14
   619  00008D                     ??_SetChanADC:
   620  00008D                     ?_in_high_int:
   621                           	opt stack 0
   622  00008D                     ?___awmod:
   623                           	opt stack 0
   624  00008D                     i2c_master_send@recvlength:
   625                           	opt stack 0
   626  00008D                     OpenADC@config2:
   627                           	opt stack 0
   628  00008D                     OpenTimer0@config:
   629                           	opt stack 0
   630  00008D                     OpenTimer1@config1:
   631                           	opt stack 0
   632  00008D                     Delay1KTCYx@unit:
   633                           	opt stack 0
   634  00008D                     init_queue@qptr:
   635                           	opt stack 0
   636  00008D                     check_msg@qptr:
   637                           	opt stack 0
   638  00008D                     init_i2c@ic:
   639                           	opt stack 0
   640  00008D                     init_uart_recv@uc:
   641                           	opt stack 0
   642  00008D                     uart_trans@data:
   643                           	opt stack 0
   644  00008D                     timer0_lthread@tptr:
   645                           	opt stack 0
   646  00008D                     init_timer1_lthread@tptr:
   647                           	opt stack 0
   648  00008D                     Open1USART@spbrg:
   649                           	opt stack 0
   650  00008D                     ___awmod@dividend:
   651                           	opt stack 0
   652  00008D                     memcpy@d1:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x2D
   656  00008D                     	ds	1
   657  00008E                     ??_OpenTimer1:
   658  00008E                     SetChanADC@channel:
   659                           	opt stack 0
   660  00008E                     i2c_master_send@msg:
   661                           	opt stack 0
   662  00008E                     OpenADC@config3:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x2E
   666  00008E                     	ds	1
   667  00008F                     ??_Open1USART:
   668  00008F                     ??_uart_trans:
   669  00008F                     ??_init_queue:
   670  00008F                     ??_check_msg:
   671  00008F                     ?_in_low_int:
   672                           	opt stack 0
   673  00008F                     OpenTimer1@config:
   674                           	opt stack 0
   675  00008F                     timer0_lthread@msgtype:
   676                           	opt stack 0
   677  00008F                     ___awmod@divisor:
   678                           	opt stack 0
   679  00008F                     memcpy@s1:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x2F
   683  00008F                     	ds	1
   684  000090                     ??_OpenADC:
   685  000090                     init_queue@i:
   686                           	opt stack 0
   687  000090                     i2c_master_send@slave_addr:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x30
   691  000090                     	ds	1
   692  000091                     ??_init_queues:
   693  000091                     ??_i2c_master_send:
   694  000091                     ??___awmod:
   695  000091                     ?_in_main:
   696                           	opt stack 0
   697  000091                     uart_trans@length:
   698                           	opt stack 0
   699  000091                     timer0_lthread@length:
   700                           	opt stack 0
   701  000091                     memcpy@n:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x31
   705  000091                     	ds	1
   706  000092                     Open1USART@config:
   707                           	opt stack 0
   708  000092                     ___awmod@counter:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x32
   712  000092                     	ds	1
   713  000093                     ??_block_on_To_msgqueues:
   714  000093                     i2c_master_send@sendlength:
   715                           	opt stack 0
   716  000093                     OpenADC@config:
   717                           	opt stack 0
   718  000093                     ___awmod@sign:
   719                           	opt stack 0
   720  000093                     timer0_lthread@msgbuffer:
   721                           	opt stack 0
   722  000093                     memcpy@d:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x33
   726  000093                     	ds	2
   727  000095                     timer0_lthread@msgval:
   728                           	opt stack 0
   729  000095                     memcpy@s:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x35
   733  000095                     	ds	2
   734  000097                     recv_msg@qptr:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x37
   738  000097                     	ds	2
   739  000099                     recv_msg@maxlength:
   740                           	opt stack 0
   741                           
   742                           ; 1 bytes @ 0x39
   743  000099                     	ds	1
   744  00009A                     recv_msg@msgtype:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x3A
   748  00009A                     	ds	2
   749  00009C                     recv_msg@data:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x3C
   753  00009C                     	ds	2
   754  00009E                     ??_recv_msg:
   755                           
   756                           ; 0 bytes @ 0x3E
   757  00009E                     	ds	2
   758  0000A0                     recv_msg@slot:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x40
   762  0000A0                     	ds	1
   763  0000A1                     recv_msg@tlength:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x41
   767  0000A1                     	ds	2
   768  0000A3                     recv_msg@qmsg:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x43
   772  0000A3                     	ds	2
   773  0000A5                     ToMainLow_recvmsg@msgtype:
   774                           	opt stack 0
   775  0000A5                     ToMainHigh_recvmsg@msgtype:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x45
   779  0000A5                     	ds	2
   780  0000A7                     ToMainLow_recvmsg@data:
   781                           	opt stack 0
   782  0000A7                     ToMainHigh_recvmsg@data:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x47
   786  0000A7                     	ds	2
   787  0000A9                     ToMainLow_recvmsg@maxlength:
   788                           	opt stack 0
   789  0000A9                     ToMainHigh_recvmsg@maxlength:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x49
   793  0000A9                     	ds	1
   794  0000AA                     ??_main:
   795                           
   796                           ; 0 bytes @ 0x4A
   797  0000AA                     	ds	2
   798                           tblptru	equ	0xFF8
   799                           tblptrh	equ	0xFF7
   800                           tblptrl	equ	0xFF6
   801                           tablat	equ	0xFF5
   802                           postinc0	equ	0xFEE
   803                           wreg	equ	0xFE8
   804                           postdec1	equ	0xFE5
   805                           fsr1l	equ	0xFE1
   806                           
   807                           	psect	cstackCOMRAM
   808  000001                     __pcstackCOMRAM:
   809                           	opt stack 0
   810  000001                     ??_uart_trans_int_handler:
   811  000001                     ?i1___awmod:
   812                           	opt stack 0
   813  000001                     Read1USART@data:
   814                           	opt stack 0
   815  000001                     WriteTimer1@timer1:
   816                           	opt stack 0
   817  000001                     i1memcpy@d1:
   818                           	opt stack 0
   819  000001                     i1___awmod@dividend:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x0
   823  000001                     	ds	2
   824  000003                     WriteTimer1@timer:
   825                           	opt stack 0
   826  000003                     i1memcpy@s1:
   827                           	opt stack 0
   828  000003                     i1___awmod@divisor:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x2
   832  000003                     	ds	2
   833  000005                     ??i1___awmod:
   834  000005                     i1memcpy@n:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x4
   838  000005                     	ds	1
   839  000006                     i1___awmod@counter:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x5
   843  000006                     	ds	1
   844  000007                     i1___awmod@sign:
   845                           	opt stack 0
   846  000007                     i1memcpy@d:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x6
   850  000007                     	ds	2
   851  000009                     i1memcpy@s:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x8
   855  000009                     	ds	2
   856  00000B                     send_msg@qptr:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0xA
   860  00000B                     	ds	2
   861  00000D                     send_msg@length:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0xC
   865  00000D                     	ds	1
   866  00000E                     send_msg@msgtype:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0xD
   870  00000E                     	ds	1
   871  00000F                     send_msg@data:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0xE
   875  00000F                     	ds	2
   876  000011                     ??_send_msg:
   877                           
   878                           ; 0 bytes @ 0x10
   879  000011                     	ds	1
   880  000012                     send_msg@tlength:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0x11
   884  000012                     	ds	2
   885  000014                     send_msg@slot:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0x13
   889  000014                     	ds	1
   890  000015                     send_msg@qmsg:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x14
   894  000015                     	ds	2
   895  000017                     ToMainLow_sendmsg@msgtype:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0x16
   899  000017                     	ds	1
   900  000018                     ToMainLow_sendmsg@data:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x17
   904  000018                     	ds	2
   905  00001A                     ToMainLow_sendmsg@length:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x19
   909  00001A                     	ds	1
   910  00001B                     ??_timer1_int_handler:
   911  00001B                     ??_uart_recv_int_handler:
   912                           
   913                           ; 0 bytes @ 0x1A
   914  00001B                     	ds	1
   915  00001C                     ??_InterruptHandlerLow:
   916                           
   917                           ; 0 bytes @ 0x1B
   918  00001C                     	ds	17
   919                           tblptru	equ	0xFF8
   920                           tblptrh	equ	0xFF7
   921                           tblptrl	equ	0xFF6
   922                           tablat	equ	0xFF5
   923                           postinc0	equ	0xFEE
   924                           wreg	equ	0xFE8
   925                           postdec1	equ	0xFE5
   926                           fsr1l	equ	0xFE1
   927                           
   928 ;;
   929 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   930 ;;
   931 ;; *************** function _main *****************
   932 ;; Defined at:
   933 ;;		line 186 in file "../src/main.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  motorAck        6    0[BANK1 ] unsigned char [6]
   938 ;;  sensorMsg       1   19[BANK1 ] unsigned char [1]
   939 ;;  correct         6   20[BANK1 ] unsigned char [6]
   940 ;;  stop            6    8[BANK1 ] unsigned char [6]
   941 ;;  ic             29   58[BANK1 ] struct __i2c_comm
   942 ;;  uc             15   43[BANK1 ] struct __uart_comm
   943 ;;  msgbuffer      11   26[BANK1 ] unsigned char [11]
   944 ;;  lastMotors      2   37[BANK1 ] unsigned char [2]
   945 ;;  state           2   41[BANK1 ] unsigned int 
   946 ;;  t1thread_dat    2   17[BANK1 ] struct __timer1_thread_s
   947 ;;  t0thread_dat    2   15[BANK1 ] struct __timer0_thread_s
   948 ;;  msg             2    6[BANK1 ] unsigned char [2]
   949 ;;  uthread_data    2    0        struct __uart_thread_str
   950 ;;  msgtype         1   40[BANK1 ] unsigned char 
   951 ;;  length          1   39[BANK1 ] char 
   952 ;;  last_reg_rec    1   14[BANK1 ] unsigned char 
   953 ;;  i               1    0        unsigned char 
   954 ;;  c               1    0        unsigned char 
   955 ;; Return value:  Size  Location     Type
   956 ;;		None               void
   957 ;; Registers used:
   958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Locals:         0       0      87       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;      Totals:         0       2      87       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   968 ;;Total ram usage:       89 bytes
   969 ;; Hardware stack levels required when called:   15
   970 ;; This function calls:
   971 ;;		_Open1USART
   972 ;;		_OpenADC
   973 ;;		_OpenTimer0
   974 ;;		_OpenTimer1
   975 ;;		_SetChanADC
   976 ;;		_ToMainHigh_recvmsg
   977 ;;		_ToMainLow_recvmsg
   978 ;;		_block_on_To_msgqueues
   979 ;;		_enable_interrupts
   980 ;;		_i2c_configure_master
   981 ;;		_i2c_master_send
   982 ;;		_init_i2c
   983 ;;		_init_queues
   984 ;;		_init_timer1_lthread
   985 ;;		_init_uart_recv
   986 ;;		_timer0_lthread
   987 ;;		_uart_trans
   988 ;; This function is called by:
   989 ;;		Startup code after reset
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text0
   994  0000CA                     __ptext0:
   995                           	opt stack 0
   996  0000CA                     _main:
   997                           	opt stack 16
   998                           
   999                           ;main.c: 187: char c;
  1000                           ;main.c: 188: signed char length;
  1001                           ;main.c: 189: unsigned char msgtype;
  1002                           ;main.c: 190: unsigned char last_reg_recvd;
  1003                           ;main.c: 191: uart_comm uc;
  1004                           ;main.c: 192: i2c_comm ic;
  1005                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1006                           ;main.c: 194: unsigned char i;
  1007                           ;main.c: 195: uart_thread_struct uthread_data;
  1008                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1009                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1010                           ;main.c: 213: OSCCON = 0xE0;
  1011                           
  1012                           ;incstack = 0
  1013  0000CA  0EE0               	movlw	224
  1014  0000CC  6ED3               	movwf	4051,c	;volatile
  1015                           
  1016                           ;main.c: 214: OSCTUNEbits.PLLEN = 1;
  1017  0000CE  8C9B               	bsf	3995,6,c	;volatile
  1018                           
  1019                           ;main.c: 224: init_uart_recv(&uc);
  1020  0000D0  0101               	movlb	1	; () banked
  1021  0000D2  0E01               	movlw	high main@uc
  1022  0000D4  0100               	movlb	0	; () banked
  1023  0000D6  0100               	movlb	0	; () banked
  1024  0000D8  6F8E               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1025  0000DA  0101               	movlb	1	; () banked
  1026  0000DC  0EB1               	movlw	low main@uc
  1027  0000DE  0100               	movlb	0	; () banked
  1028  0000E0  0100               	movlb	0	; () banked
  1029  0000E2  6F8D               	movwf	init_uart_recv@uc& (0+255),b
  1030  0000E4  EC52  F00E         	call	_init_uart_recv	;wreg free
  1031                           
  1032                           ;main.c: 227: init_i2c(&ic);
  1033  0000E8  0101               	movlb	1	; () banked
  1034  0000EA  0E01               	movlw	high main@ic
  1035  0000EC  0100               	movlb	0	; () banked
  1036  0000EE  0100               	movlb	0	; () banked
  1037  0000F0  6F8E               	movwf	(init_i2c@ic+1)& (0+255),b
  1038  0000F2  0101               	movlb	1	; () banked
  1039  0000F4  0EC0               	movlw	low main@ic
  1040  0000F6  0100               	movlb	0	; () banked
  1041  0000F8  0100               	movlb	0	; () banked
  1042  0000FA  6F8D               	movwf	init_i2c@ic& (0+255),b
  1043  0000FC  EC84  F00B         	call	_init_i2c	;wreg free
  1044                           
  1045                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1046  000100  0101               	movlb	1	; () banked
  1047  000102  0E01               	movlw	high main@t1thread_data
  1048  000104  0100               	movlb	0	; () banked
  1049  000106  0100               	movlb	0	; () banked
  1050  000108  6F8E               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1051  00010A  0101               	movlb	1	; () banked
  1052  00010C  0E97               	movlw	low main@t1thread_data
  1053  00010E  0100               	movlb	0	; () banked
  1054  000110  0100               	movlb	0	; () banked
  1055  000112  6F8D               	movwf	init_timer1_lthread@tptr& (0+255),b
  1056  000114  EC9B  F00E         	call	_init_timer1_lthread	;wreg free
  1057                           
  1058                           ;main.c: 233: init_queues();
  1059  000118  EC4D  F00B         	call	_init_queues	;wreg free
  1060                           
  1061                           ;main.c: 237: TRISB = 0xFF;
  1062  00011C  6893               	setf	3987,c	;volatile
  1063                           
  1064                           ;main.c: 238: LATB = 0x0;
  1065  00011E  0E00               	movlw	0
  1066  000120  6E8A               	movwf	3978,c	;volatile
  1067                           
  1068                           ;main.c: 240: PORTA = 0x0;
  1069  000122  0E00               	movlw	0
  1070  000124  6E80               	movwf	3968,c	;volatile
  1071                           
  1072                           ;main.c: 241: LATA = 0x0;
  1073  000126  0E00               	movlw	0
  1074  000128  6E89               	movwf	3977,c	;volatile
  1075                           
  1076                           ;main.c: 242: TRISA = 0x00;
  1077  00012A  0E00               	movlw	0
  1078  00012C  6E92               	movwf	3986,c	;volatile
  1079                           
  1080                           ;main.c: 259: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110101);
  1081  00012E  0ED5               	movlw	213
  1082  000130  EC0A  F00E         	call	_OpenTimer0
  1083                           
  1084                           ;main.c: 267: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1085  000134  0100               	movlb	0	; () banked
  1086  000136  6FAA               	movwf	??_main& (0+255),b
  1087  000138  0E00               	movlw	0
  1088  00013A  0100               	movlb	0	; () banked
  1089  00013C  0100               	movlb	0	; () banked
  1090  00013E  6F8D               	movwf	OpenTimer1@config1& (0+255),b
  1091  000140  0100               	movlb	0	; () banked
  1092  000142  51AA               	movf	??_main& (0+255),w,b
  1093  000144  0E9B               	movlw	155
  1094  000146  EC5C  F00D         	call	_OpenTimer1
  1095                           
  1096                           ;main.c: 277: IPR1bits.ADIP = 0;
  1097  00014A  9C9F               	bcf	3999,6,c	;volatile
  1098                           
  1099                           ;main.c: 278: PIE1bits.ADIE = 1;
  1100  00014C  8C9D               	bsf	3997,6,c	;volatile
  1101                           
  1102                           ;main.c: 280: IPR1bits.TMR1IP = 0;
  1103  00014E  909F               	bcf	3999,0,c	;volatile
  1104                           
  1105                           ;main.c: 282: INTCON2bits.TMR0IP = 1;
  1106  000150  84F1               	bsf	intcon2,2,c	;volatile
  1107                           
  1108                           ;main.c: 284: IPR1bits.RCIP = 0;
  1109  000152  9A9F               	bcf	3999,5,c	;volatile
  1110                           
  1111                           ;main.c: 286: IPR1bits.TXIP = 0;
  1112  000154  989F               	bcf	3999,4,c	;volatile
  1113                           
  1114                           ;main.c: 288: IPR1bits.SSPIP = 1;
  1115  000156  869F               	bsf	3999,3,c	;volatile
  1116                           
  1117                           ;main.c: 299: i2c_configure_master();
  1118  000158  EC32  F00E         	call	_i2c_configure_master	;wreg free
  1119                           
  1120                           ;main.c: 324: PIE1bits.SSPIE = 1;
  1121  00015C  869D               	bsf	3997,3,c	;volatile
  1122                           
  1123                           ;main.c: 332: Open1USART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1124                           ;main.c: 333: 0b11111111 & 0b11101111, 38);
  1125  00015E  0E00               	movlw	0
  1126  000160  0100               	movlb	0	; () banked
  1127  000162  0100               	movlb	0	; () banked
  1128  000164  6F8E               	movwf	(Open1USART@spbrg+1)& (0+255),b
  1129  000166  0E26               	movlw	38
  1130  000168  0100               	movlb	0	; () banked
  1131  00016A  6F8D               	movwf	Open1USART@spbrg& (0+255),b
  1132  00016C  0EEC               	movlw	236
  1133  00016E  EC54  F00A         	call	_Open1USART
  1134                           
  1135                           ;main.c: 334: RCSTAbits.SPEN = 1;
  1136  000172  8EAC               	bsf	4012,7,c	;volatile
  1137                           
  1138                           ;main.c: 335: TRISC = 0xFF;
  1139  000174  6894               	setf	3988,c	;volatile
  1140                           
  1141                           ;main.c: 347: enable_interrupts();
  1142  000176  ECCE  F00E         	call	_enable_interrupts	;wreg free
  1143                           
  1144                           ;main.c: 361: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1145                           ;main.c: 362: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1146                           ;main.c: 363: 0b1011);
  1147  00017A  0100               	movlb	0	; () banked
  1148  00017C  6FAA               	movwf	??_main& (0+255),b
  1149  00017E  0E0C               	movlw	12
  1150  000180  0100               	movlb	0	; () banked
  1151  000182  0100               	movlb	0	; () banked
  1152  000184  6F8D               	movwf	OpenADC@config2& (0+255),b
  1153  000186  0100               	movlb	0	; () banked
  1154  000188  51AA               	movf	??_main& (0+255),w,b
  1155  00018A  0E00               	movlw	0
  1156  00018C  0100               	movlb	0	; () banked
  1157  00018E  0100               	movlb	0	; () banked
  1158  000190  6F8F               	movwf	(OpenADC@config3+1)& (0+255),b
  1159  000192  0E0B               	movlw	11
  1160  000194  0100               	movlb	0	; () banked
  1161  000196  6F8E               	movwf	OpenADC@config3& (0+255),b
  1162  000198  0E53               	movlw	83
  1163  00019A  EC75  F009         	call	_OpenADC
  1164                           
  1165                           ;main.c: 364: SetChanADC(0b10001111);
  1166  00019E  0E8F               	movlw	143
  1167  0001A0  EC42  F00E         	call	_SetChanADC
  1168                           
  1169                           ;main.c: 375: unsigned char msg[2] = {0x01, 0x02};
  1170  0001A4  C1EF  F18C         	movff	main@F9242,main@msg
  1171  0001A8  C1F0  F18D         	movff	main@F9242+1,main@msg+1
  1172                           
  1173                           ;main.c: 394: unsigned char lastMotors[2];
  1174                           ;main.c: 395: unsigned int state = 0;
  1175  0001AC  0E00               	movlw	0
  1176  0001AE  0101               	movlb	1	; () banked
  1177  0001B0  0101               	movlb	1	; () banked
  1178  0001B2  6FB0               	movwf	(main@state+1)& (0+255),b
  1179  0001B4  0E00               	movlw	0
  1180  0001B6  0101               	movlb	1	; () banked
  1181  0001B8  6FAF               	movwf	main@state& (0+255),b
  1182                           
  1183                           ; BSR set to: 1
  1184                           ;main.c: 396: LATAbits.LA1 = 0;
  1185  0001BA  9289               	bcf	3977,1,c	;volatile
  1186                           
  1187                           ; BSR set to: 1
  1188                           ;main.c: 397: LATAbits.LA2 = 0;
  1189  0001BC  9489               	bcf	3977,2,c	;volatile
  1190                           
  1191                           ; BSR set to: 1
  1192                           ;main.c: 398: LATAbits.LA3 = 0;
  1193  0001BE  9689               	bcf	3977,3,c	;volatile
  1194  0001C0                     l2762:
  1195                           
  1196                           ;main.c: 404: block_on_To_msgqueues();
  1197  0001C0  EC94  F00A         	call	_block_on_To_msgqueues	;wreg free
  1198                           
  1199                           ;main.c: 411: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1200  0001C4  0101               	movlb	1	; () banked
  1201  0001C6  0E01               	movlw	high main@msgtype
  1202  0001C8  0100               	movlb	0	; () banked
  1203  0001CA  0100               	movlb	0	; () banked
  1204  0001CC  6FA6               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1205  0001CE  0101               	movlb	1	; () banked
  1206  0001D0  0EAE               	movlw	low main@msgtype
  1207  0001D2  0100               	movlb	0	; () banked
  1208  0001D4  0100               	movlb	0	; () banked
  1209  0001D6  6FA5               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1210  0001D8  0101               	movlb	1	; () banked
  1211  0001DA  0E01               	movlw	high main@msgbuffer
  1212  0001DC  0100               	movlb	0	; () banked
  1213  0001DE  0100               	movlb	0	; () banked
  1214  0001E0  6FA8               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1215  0001E2  0101               	movlb	1	; () banked
  1216  0001E4  0EA0               	movlw	low main@msgbuffer
  1217  0001E6  0100               	movlb	0	; () banked
  1218  0001E8  0100               	movlb	0	; () banked
  1219  0001EA  6FA7               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1220  0001EC  0E0A               	movlw	10
  1221  0001EE  EC3B  F00D         	call	_ToMainHigh_recvmsg
  1222  0001F2  0101               	movlb	1	; () banked
  1223  0001F4  0101               	movlb	1	; () banked
  1224  0001F6  6FAD               	movwf	main@length& (0+255),b
  1225                           
  1226                           ; BSR set to: 1
  1227                           ;main.c: 412: if (length < 0) {
  1228  0001F8  0101               	movlb	1	; () banked
  1229  0001FA  0101               	movlb	1	; () banked
  1230  0001FC  BFAD               	btfsc	main@length& (0+255),7,b
  1231  0001FE  D193               	goto	l2872
  1232  000200  D182               	goto	l2870
  1233  000202                     l2770:
  1234                           
  1235                           ; BSR set to: 1
  1236                           ;main.c: 420: {
  1237                           ;main.c: 421: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1238  000202  0101               	movlb	1	; () banked
  1239  000204  0E01               	movlw	high main@t0thread_data
  1240  000206  0100               	movlb	0	; () banked
  1241  000208  0100               	movlb	0	; () banked
  1242  00020A  6F8E               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1243  00020C  0101               	movlb	1	; () banked
  1244  00020E  0E95               	movlw	low main@t0thread_data
  1245  000210  0100               	movlb	0	; () banked
  1246  000212  0100               	movlb	0	; () banked
  1247  000214  6F8D               	movwf	timer0_lthread@tptr& (0+255),b
  1248  000216  0101               	movlb	1	; () banked
  1249  000218  0100               	movlb	0	; () banked
  1250  00021A  C1AE  F08F         	movff	main@msgtype,timer0_lthread@msgtype
  1251  00021E  0100               	movlb	0	; () banked
  1252  000220  0100               	movlb	0	; () banked
  1253  000222  6B90               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1254  000224  0101               	movlb	1	; () banked
  1255  000226  0101               	movlb	1	; () banked
  1256  000228  51AD               	movf	main@length& (0+255),w,b
  1257  00022A  0100               	movlb	0	; () banked
  1258  00022C  0100               	movlb	0	; () banked
  1259  00022E  6F91               	movwf	timer0_lthread@length& (0+255),b
  1260  000230  0100               	movlb	0	; () banked
  1261  000232  6B92               	clrf	(timer0_lthread@length+1)& (0+255),b
  1262  000234  0100               	movlb	0	; () banked
  1263  000236  BF91               	btfsc	timer0_lthread@length& (0+255),7,b
  1264  000238  0792               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1265  00023A  0101               	movlb	1	; () banked
  1266  00023C  0E01               	movlw	high main@msgbuffer
  1267  00023E  0100               	movlb	0	; () banked
  1268  000240  0100               	movlb	0	; () banked
  1269  000242  6F94               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1270  000244  0101               	movlb	1	; () banked
  1271  000246  0EA0               	movlw	low main@msgbuffer
  1272  000248  0100               	movlb	0	; () banked
  1273  00024A  0100               	movlb	0	; () banked
  1274  00024C  6F93               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1275  00024E  EC92  F00E         	call	_timer0_lthread	;wreg free
  1276                           
  1277                           ;main.c: 422: break;
  1278  000252  D169               	goto	l2872
  1279  000254                     l134:
  1280                           
  1281                           ;main.c: 425: case 41:
  1282                           ;main.c: 426: {
  1283                           ;main.c: 429: last_reg_recvd = msgbuffer[0];
  1284  000254  C1A0  F194         	movff	main@msgbuffer,main@last_reg_recvd
  1285                           
  1286                           ;main.c: 430: break;
  1287  000258  D166               	goto	l2872
  1288  00025A                     l2772:
  1289                           
  1290                           ;main.c: 433: {
  1291                           ;main.c: 435: if(msgbuffer[0] == 0x04){
  1292  00025A  0101               	movlb	1	; () banked
  1293  00025C  0101               	movlb	1	; () banked
  1294  00025E  51A0               	movf	main@msgbuffer& (0+255),w,b
  1295  000260  0A04               	xorlw	4
  1296  000262  A4D8               	btfss	status,2,c
  1297  000264  D00C               	goto	l2778
  1298                           
  1299                           ; BSR set to: 1
  1300                           ;main.c: 436: if(msgbuffer[1] == 0x01){
  1301  000266  0101               	movlb	1	; () banked
  1302  000268  0101               	movlb	1	; () banked
  1303  00026A  05A1               	decf	(main@msgbuffer+1)& (0+255),w,b
  1304  00026C  A4D8               	btfss	status,2,c
  1305  00026E  D007               	goto	l2778
  1306                           
  1307                           ; BSR set to: 1
  1308                           ;main.c: 437: state = 0;
  1309  000270  0E00               	movlw	0
  1310  000272  0101               	movlb	1	; () banked
  1311  000274  0101               	movlb	1	; () banked
  1312  000276  6FB0               	movwf	(main@state+1)& (0+255),b
  1313  000278  0E00               	movlw	0
  1314  00027A  0101               	movlb	1	; () banked
  1315  00027C  6FAF               	movwf	main@state& (0+255),b
  1316  00027E                     l2778:
  1317                           
  1318                           ; BSR set to: 1
  1319                           ;main.c: 441: }
  1320                           ;main.c: 442: }
  1321                           ;main.c: 444: unsigned char stop[6] = {0xBC, 0x00, 0x00, 0x00, 0x00, 0x00};
  1322  00027E  EE21  F0DD         	lfsr	2,main@F9247
  1323  000282  EE11  F08E         	lfsr	1,main@stop
  1324  000286  0E06               	movlw	6
  1325  000288                     u1821:
  1326  000288  CFDE FFE6          	movff	postinc2,postinc1
  1327  00028C  2EE8               	decfsz	wreg,f,c
  1328  00028E  D7FC               	goto	u1821
  1329                           
  1330                           ; BSR set to: 1
  1331                           ;main.c: 445: unsigned char correct[6] = {0xBC, 0x00, 0x00, 0x00, 0x00};
  1332  000290  EE21  F0E3         	lfsr	2,main@F9249
  1333  000294  EE11  F09A         	lfsr	1,main@correct
  1334  000298  0E06               	movlw	6
  1335  00029A                     u1831:
  1336  00029A  CFDE FFE6          	movff	postinc2,postinc1
  1337  00029E  2EE8               	decfsz	wreg,f,c
  1338  0002A0  D7FC               	goto	u1831
  1339                           
  1340                           ; BSR set to: 1
  1341                           ;main.c: 446: if(msgbuffer[0] == 0x01){
  1342  0002A2  0101               	movlb	1	; () banked
  1343  0002A4  0101               	movlb	1	; () banked
  1344  0002A6  05A0               	decf	main@msgbuffer& (0+255),w,b
  1345  0002A8  A4D8               	btfss	status,2,c
  1346  0002AA  D11A               	goto	l2864
  1347                           
  1348                           ; BSR set to: 1
  1349                           ;main.c: 447: if(state == 0){
  1350  0002AC  0101               	movlb	1	; () banked
  1351  0002AE  0101               	movlb	1	; () banked
  1352  0002B0  51B0               	movf	(main@state+1)& (0+255),w,b
  1353  0002B2  11AF               	iorwf	main@state& (0+255),w,b
  1354  0002B4  A4D8               	btfss	status,2,c
  1355  0002B6  D00E               	goto	l2788
  1356                           
  1357                           ; BSR set to: 1
  1358                           ;main.c: 448: uart_trans(6, msgbuffer);
  1359  0002B8  0101               	movlb	1	; () banked
  1360  0002BA  0E01               	movlw	high main@msgbuffer
  1361  0002BC  0100               	movlb	0	; () banked
  1362  0002BE  0100               	movlb	0	; () banked
  1363  0002C0  6F8E               	movwf	(uart_trans@data+1)& (0+255),b
  1364  0002C2  0101               	movlb	1	; () banked
  1365  0002C4  0EA0               	movlw	low main@msgbuffer
  1366  0002C6  0100               	movlb	0	; () banked
  1367  0002C8  0100               	movlb	0	; () banked
  1368  0002CA  6F8D               	movwf	uart_trans@data& (0+255),b
  1369  0002CC  0E06               	movlw	6
  1370  0002CE  EC1B  F009         	call	_uart_trans
  1371                           
  1372                           ;main.c: 449: }else if(state == 3){
  1373  0002D2  D129               	goto	l2872
  1374  0002D4                     l2788:
  1375  0002D4  0101               	movlb	1	; () banked
  1376  0002D6  0101               	movlb	1	; () banked
  1377  0002D8  51AF               	movf	main@state& (0+255),w,b
  1378  0002DA  0A03               	xorlw	3
  1379  0002DC  11B0               	iorwf	(main@state+1)& (0+255),w,b
  1380  0002DE  A4D8               	btfss	status,2,c
  1381  0002E0  D02C               	goto	l2802
  1382                           
  1383                           ; BSR set to: 1
  1384                           ;main.c: 450: if(msgbuffer[3] >= 0x5A){
  1385  0002E2  0101               	movlb	1	; () banked
  1386  0002E4  EE21  F0A3         	lfsr	2,main@msgbuffer+3
  1387  0002E8  0E59               	movlw	89
  1388  0002EA  64DF               	cpfsgt	indf2,c
  1389  0002EC  D11C               	goto	l2872
  1390                           
  1391                           ; BSR set to: 1
  1392                           ;main.c: 451: i2c_master_send(6, 6, stop, 0xBE);
  1393  0002EE  0100               	movlb	0	; () banked
  1394  0002F0  6FAA               	movwf	??_main& (0+255),b
  1395  0002F2  0E06               	movlw	6
  1396  0002F4  0100               	movlb	0	; () banked
  1397  0002F6  0100               	movlb	0	; () banked
  1398  0002F8  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1399  0002FA  0100               	movlb	0	; () banked
  1400  0002FC  51AA               	movf	??_main& (0+255),w,b
  1401  0002FE  0101               	movlb	1	; () banked
  1402  000300  0E01               	movlw	high main@stop
  1403  000302  0100               	movlb	0	; () banked
  1404  000304  0100               	movlb	0	; () banked
  1405  000306  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1406  000308  0101               	movlb	1	; () banked
  1407  00030A  0E8E               	movlw	low main@stop
  1408  00030C  0100               	movlb	0	; () banked
  1409  00030E  0100               	movlb	0	; () banked
  1410  000310  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1411  000312  0100               	movlb	0	; () banked
  1412  000314  6FAB               	movwf	(??_main+1)& (0+255),b
  1413  000316  0EBE               	movlw	190
  1414  000318  0100               	movlb	0	; () banked
  1415  00031A  0100               	movlb	0	; () banked
  1416  00031C  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1417  00031E  0100               	movlb	0	; () banked
  1418  000320  51AB               	movf	(??_main+1)& (0+255),w,b
  1419  000322  0E06               	movlw	6
  1420  000324  EC18  F006         	call	_i2c_master_send
  1421                           
  1422                           ;main.c: 452: state = 0;
  1423  000328  0E00               	movlw	0
  1424  00032A  0101               	movlb	1	; () banked
  1425  00032C  0101               	movlb	1	; () banked
  1426  00032E  6FB0               	movwf	(main@state+1)& (0+255),b
  1427  000330  0E00               	movlw	0
  1428  000332  0101               	movlb	1	; () banked
  1429  000334  6FAF               	movwf	main@state& (0+255),b
  1430                           
  1431                           ; BSR set to: 1
  1432                           ;main.c: 453: LATAbits.LA1 = 0;
  1433  000336  9289               	bcf	3977,1,c	;volatile
  1434  000338  D031               	goto	L1
  1435  00033A                     l2802:
  1436                           
  1437                           ; BSR set to: 1
  1438  00033A  0101               	movlb	1	; () banked
  1439  00033C  0101               	movlb	1	; () banked
  1440  00033E  05AF               	decf	main@state& (0+255),w,b
  1441  000340  11B0               	iorwf	(main@state+1)& (0+255),w,b
  1442  000342  A4D8               	btfss	status,2,c
  1443  000344  D0F0               	goto	l2872
  1444                           
  1445                           ; BSR set to: 1
  1446                           ;main.c: 458: if(msgbuffer[1] <= 0x20){
  1447  000346  0E21               	movlw	33
  1448  000348  0101               	movlb	1	; () banked
  1449  00034A  0101               	movlb	1	; () banked
  1450  00034C  5DA1               	subwf	(main@msgbuffer+1)& (0+255),w,b
  1451  00034E  B0D8               	btfsc	status,0,c
  1452  000350  D027               	goto	l2816
  1453                           
  1454                           ; BSR set to: 1
  1455                           ;main.c: 459: i2c_master_send(6, 6, stop, 0xBE);
  1456  000352  0100               	movlb	0	; () banked
  1457  000354  6FAA               	movwf	??_main& (0+255),b
  1458  000356  0E06               	movlw	6
  1459  000358  0100               	movlb	0	; () banked
  1460  00035A  0100               	movlb	0	; () banked
  1461  00035C  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1462  00035E  0100               	movlb	0	; () banked
  1463  000360  51AA               	movf	??_main& (0+255),w,b
  1464  000362  0101               	movlb	1	; () banked
  1465  000364  0E01               	movlw	high main@stop
  1466  000366  0100               	movlb	0	; () banked
  1467  000368  0100               	movlb	0	; () banked
  1468  00036A  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1469  00036C  0101               	movlb	1	; () banked
  1470  00036E  0E8E               	movlw	low main@stop
  1471  000370  0100               	movlb	0	; () banked
  1472  000372  0100               	movlb	0	; () banked
  1473  000374  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1474  000376  0100               	movlb	0	; () banked
  1475  000378  6FAB               	movwf	(??_main+1)& (0+255),b
  1476  00037A  0EBE               	movlw	190
  1477  00037C  0100               	movlb	0	; () banked
  1478  00037E  0100               	movlb	0	; () banked
  1479  000380  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1480  000382  0100               	movlb	0	; () banked
  1481  000384  51AB               	movf	(??_main+1)& (0+255),w,b
  1482  000386  0E06               	movlw	6
  1483  000388  EC18  F006         	call	_i2c_master_send
  1484                           
  1485                           ;main.c: 460: state = 0;
  1486  00038C  0E00               	movlw	0
  1487  00038E  0101               	movlb	1	; () banked
  1488  000390  0101               	movlb	1	; () banked
  1489  000392  6FB0               	movwf	(main@state+1)& (0+255),b
  1490  000394  0E00               	movlw	0
  1491  000396  0101               	movlb	1	; () banked
  1492  000398  6FAF               	movwf	main@state& (0+255),b
  1493                           
  1494                           ; BSR set to: 1
  1495                           ;main.c: 461: LATAbits.LA1 = 1;
  1496  00039A  8289               	bsf	3977,1,c	;volatile
  1497  00039C                     L1:
  1498                           
  1499                           ; BSR set to: 1
  1500                           ;main.c: 462: LATAbits.LA2 = 0;
  1501  00039C  9489               	bcf	3977,2,c	;volatile
  1502  00039E  D044               	goto	L2
  1503  0003A0                     l2816:
  1504                           
  1505                           ; BSR set to: 1
  1506  0003A0  0101               	movlb	1	; () banked
  1507  0003A2  EE21  F0A2         	lfsr	2,main@msgbuffer+2
  1508  0003A6  0E59               	movlw	89
  1509  0003A8  64DF               	cpfsgt	indf2,c
  1510  0003AA  D00A               	goto	l2826
  1511                           
  1512                           ; BSR set to: 1
  1513                           ;main.c: 466: state = 3;
  1514  0003AC  0E00               	movlw	0
  1515  0003AE  0101               	movlb	1	; () banked
  1516  0003B0  0101               	movlb	1	; () banked
  1517  0003B2  6FB0               	movwf	(main@state+1)& (0+255),b
  1518  0003B4  0E03               	movlw	3
  1519  0003B6  0101               	movlb	1	; () banked
  1520  0003B8  6FAF               	movwf	main@state& (0+255),b
  1521                           
  1522                           ; BSR set to: 1
  1523                           ;main.c: 467: LATAbits.LA1 = 1;
  1524  0003BA  8289               	bsf	3977,1,c	;volatile
  1525                           
  1526                           ; BSR set to: 1
  1527                           ;main.c: 468: LATAbits.LA2 = 1;
  1528  0003BC  8489               	bsf	3977,2,c	;volatile
  1529  0003BE  D08E               	goto	L3
  1530  0003C0                     l2826:
  1531                           
  1532                           ; BSR set to: 1
  1533                           ;main.c: 471: else if(msgbuffer[2] >= 0x20 || msgbuffer[3] >= 0x20){
  1534  0003C0  0E20               	movlw	32
  1535  0003C2  0101               	movlb	1	; () banked
  1536  0003C4  0101               	movlb	1	; () banked
  1537  0003C6  5DA2               	subwf	(main@msgbuffer+2)& (0+255),w,b
  1538  0003C8  B0D8               	btfsc	status,0,c
  1539  0003CA  D006               	goto	l155
  1540                           
  1541                           ; BSR set to: 1
  1542  0003CC  0101               	movlb	1	; () banked
  1543  0003CE  EE21  F0A3         	lfsr	2,main@msgbuffer+3
  1544  0003D2  0E1F               	movlw	31
  1545  0003D4  64DF               	cpfsgt	indf2,c
  1546  0003D6  D02A               	goto	l2840
  1547  0003D8                     l155:
  1548                           
  1549                           ; BSR set to: 1
  1550                           ;main.c: 472: correct[1] = lastMotors[0];
  1551  0003D8  C1AB  F19B         	movff	main@lastMotors,main@correct+1
  1552                           
  1553                           ; BSR set to: 1
  1554                           ;main.c: 473: correct[2] = lastMotors[1] + 10;
  1555  0003DC  0101               	movlb	1	; () banked
  1556  0003DE  0101               	movlb	1	; () banked
  1557  0003E0  51AC               	movf	(main@lastMotors+1)& (0+255),w,b
  1558  0003E2  0F0A               	addlw	10
  1559  0003E4  0101               	movlb	1	; () banked
  1560  0003E6  0101               	movlb	1	; () banked
  1561  0003E8  6F9C               	movwf	(main@correct+2)& (0+255),b
  1562                           
  1563                           ; BSR set to: 1
  1564                           ;main.c: 474: i2c_master_send(6, 6, correct, 0xBE);
  1565  0003EA  0100               	movlb	0	; () banked
  1566  0003EC  6FAA               	movwf	??_main& (0+255),b
  1567  0003EE  0E06               	movlw	6
  1568  0003F0  0100               	movlb	0	; () banked
  1569  0003F2  0100               	movlb	0	; () banked
  1570  0003F4  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1571  0003F6  0100               	movlb	0	; () banked
  1572  0003F8  51AA               	movf	??_main& (0+255),w,b
  1573  0003FA  0101               	movlb	1	; () banked
  1574  0003FC  0E01               	movlw	high main@correct
  1575  0003FE  0100               	movlb	0	; () banked
  1576  000400  0100               	movlb	0	; () banked
  1577  000402  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1578  000404  0101               	movlb	1	; () banked
  1579  000406  0E9A               	movlw	low main@correct
  1580  000408  0100               	movlb	0	; () banked
  1581  00040A  0100               	movlb	0	; () banked
  1582  00040C  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1583  00040E  0100               	movlb	0	; () banked
  1584  000410  6FAB               	movwf	(??_main+1)& (0+255),b
  1585  000412  0EBE               	movlw	190
  1586  000414  0100               	movlb	0	; () banked
  1587  000416  0100               	movlb	0	; () banked
  1588  000418  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1589  00041A  0100               	movlb	0	; () banked
  1590  00041C  51AB               	movf	(??_main+1)& (0+255),w,b
  1591  00041E  0E06               	movlw	6
  1592  000420  EC18  F006         	call	_i2c_master_send
  1593                           
  1594                           ;main.c: 475: LATAbits.LA1 = 1;
  1595  000424  8289               	bsf	3977,1,c	;volatile
  1596  000426  D035               	goto	L4
  1597  000428                     L2:
  1598                           
  1599                           ;main.c: 477: LATAbits.LA3 = 1;
  1600  000428  8689               	bsf	3977,3,c	;volatile
  1601                           
  1602                           ;main.c: 478: }else if(msgbuffer[2] <= 0x1E || msgbuffer[3] <= 0x1E){
  1603  00042A  D07D               	goto	l2872
  1604  00042C                     l2840:
  1605  00042C  0101               	movlb	1	; () banked
  1606  00042E  EE21  F0A2         	lfsr	2,main@msgbuffer+2
  1607  000432  0E1E               	movlw	30
  1608  000434  64DF               	cpfsgt	indf2,c
  1609  000436  D006               	goto	l2844
  1610                           
  1611                           ; BSR set to: 1
  1612  000438  0E1F               	movlw	31
  1613  00043A  0101               	movlb	1	; () banked
  1614  00043C  0101               	movlb	1	; () banked
  1615  00043E  5DA3               	subwf	(main@msgbuffer+3)& (0+255),w,b
  1616  000440  B0D8               	btfsc	status,0,c
  1617  000442  D029               	goto	l157
  1618  000444                     l2844:
  1619                           
  1620                           ; BSR set to: 1
  1621                           ;main.c: 479: correct[1] = lastMotors[0] + 10;
  1622  000444  0101               	movlb	1	; () banked
  1623  000446  0101               	movlb	1	; () banked
  1624  000448  51AB               	movf	main@lastMotors& (0+255),w,b
  1625  00044A  0F0A               	addlw	10
  1626  00044C  0101               	movlb	1	; () banked
  1627  00044E  0101               	movlb	1	; () banked
  1628  000450  6F9B               	movwf	(main@correct+1)& (0+255),b
  1629                           
  1630                           ; BSR set to: 1
  1631                           ;main.c: 480: correct[2] = lastMotors[1];
  1632  000452  C1AC  F19C         	movff	main@lastMotors+1,main@correct+2
  1633                           
  1634                           ; BSR set to: 1
  1635                           ;main.c: 481: i2c_master_send(6, 6, correct, 0xBE);
  1636  000456  0100               	movlb	0	; () banked
  1637  000458  6FAA               	movwf	??_main& (0+255),b
  1638  00045A  0E06               	movlw	6
  1639  00045C  0100               	movlb	0	; () banked
  1640  00045E  0100               	movlb	0	; () banked
  1641  000460  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1642  000462  0100               	movlb	0	; () banked
  1643  000464  51AA               	movf	??_main& (0+255),w,b
  1644  000466  0101               	movlb	1	; () banked
  1645  000468  0E01               	movlw	high main@correct
  1646  00046A  0100               	movlb	0	; () banked
  1647  00046C  0100               	movlb	0	; () banked
  1648  00046E  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1649  000470  0101               	movlb	1	; () banked
  1650  000472  0E9A               	movlw	low main@correct
  1651  000474  0100               	movlb	0	; () banked
  1652  000476  0100               	movlb	0	; () banked
  1653  000478  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1654  00047A  0100               	movlb	0	; () banked
  1655  00047C  6FAB               	movwf	(??_main+1)& (0+255),b
  1656  00047E  0EBE               	movlw	190
  1657  000480  0100               	movlb	0	; () banked
  1658  000482  0100               	movlb	0	; () banked
  1659  000484  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1660  000486  0100               	movlb	0	; () banked
  1661  000488  51AB               	movf	(??_main+1)& (0+255),w,b
  1662  00048A  0E06               	movlw	6
  1663  00048C  EC18  F006         	call	_i2c_master_send
  1664                           
  1665                           ;main.c: 482: LATAbits.LA1 = 0;
  1666  000490  9289               	bcf	3977,1,c	;volatile
  1667  000492                     L4:
  1668                           
  1669                           ;main.c: 483: LATAbits.LA2 = 1;
  1670  000492  8489               	bsf	3977,2,c	;volatile
  1671  000494  D7C9               	goto	L2
  1672  000496                     l157:
  1673                           
  1674                           ; BSR set to: 1
  1675                           ;main.c: 486: else{
  1676                           ;main.c: 487: correct[1] = lastMotors[0];
  1677  000496  C1AB  F19B         	movff	main@lastMotors,main@correct+1
  1678                           
  1679                           ;main.c: 488: correct[2] = lastMotors[1];
  1680  00049A  C1AC  F19C         	movff	main@lastMotors+1,main@correct+2
  1681                           
  1682                           ; BSR set to: 1
  1683                           ;main.c: 489: i2c_master_send(6, 6, correct, 0xBE);
  1684  00049E  0100               	movlb	0	; () banked
  1685  0004A0  6FAA               	movwf	??_main& (0+255),b
  1686  0004A2  0E06               	movlw	6
  1687  0004A4  0100               	movlb	0	; () banked
  1688  0004A6  0100               	movlb	0	; () banked
  1689  0004A8  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1690  0004AA  0100               	movlb	0	; () banked
  1691  0004AC  51AA               	movf	??_main& (0+255),w,b
  1692  0004AE  0101               	movlb	1	; () banked
  1693  0004B0  0E01               	movlw	high main@correct
  1694  0004B2  0100               	movlb	0	; () banked
  1695  0004B4  0100               	movlb	0	; () banked
  1696  0004B6  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1697  0004B8  0101               	movlb	1	; () banked
  1698  0004BA  0E9A               	movlw	low main@correct
  1699  0004BC  0100               	movlb	0	; () banked
  1700  0004BE  0100               	movlb	0	; () banked
  1701  0004C0  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1702  0004C2  0100               	movlb	0	; () banked
  1703  0004C4  6FAB               	movwf	(??_main+1)& (0+255),b
  1704  0004C6  0EBE               	movlw	190
  1705  0004C8  0100               	movlb	0	; () banked
  1706  0004CA  0100               	movlb	0	; () banked
  1707  0004CC  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1708  0004CE  0100               	movlb	0	; () banked
  1709  0004D0  51AB               	movf	(??_main+1)& (0+255),w,b
  1710  0004D2  0E06               	movlw	6
  1711  0004D4  EC18  F006         	call	_i2c_master_send
  1712                           
  1713                           ;main.c: 490: LATAbits.LA1 = 1;
  1714  0004D8  8289               	bsf	3977,1,c	;volatile
  1715                           
  1716                           ;main.c: 491: LATAbits.LA2 = 0;
  1717  0004DA  9489               	bcf	3977,2,c	;volatile
  1718  0004DC                     L3:
  1719                           
  1720                           ;main.c: 492: LATAbits.LA3 = 0;
  1721  0004DC  9689               	bcf	3977,3,c	;volatile
  1722  0004DE  D023               	goto	l2872
  1723  0004E0                     l2864:
  1724  0004E0  0101               	movlb	1	; () banked
  1725  0004E2  0101               	movlb	1	; () banked
  1726  0004E4  51A0               	movf	main@msgbuffer& (0+255),w,b
  1727  0004E6  B4D8               	btfsc	status,2,c
  1728  0004E8  D01E               	goto	l2872
  1729                           
  1730                           ; BSR set to: 1
  1731                           ;main.c: 497: uart_trans(6, msgbuffer);
  1732  0004EA  0101               	movlb	1	; () banked
  1733  0004EC  0E01               	movlw	high main@msgbuffer
  1734  0004EE  0100               	movlb	0	; () banked
  1735  0004F0  0100               	movlb	0	; () banked
  1736  0004F2  6F8E               	movwf	(uart_trans@data+1)& (0+255),b
  1737  0004F4  0101               	movlb	1	; () banked
  1738  0004F6  0EA0               	movlw	low main@msgbuffer
  1739  0004F8  0100               	movlb	0	; () banked
  1740  0004FA  0100               	movlb	0	; () banked
  1741  0004FC  6F8D               	movwf	uart_trans@data& (0+255),b
  1742  0004FE  0E06               	movlw	6
  1743  000500  EC1B  F009         	call	_uart_trans
  1744  000504  D010               	goto	l2872
  1745  000506                     l2870:
  1746  000506  0101               	movlb	1	; () banked
  1747  000508  0101               	movlb	1	; () banked
  1748  00050A  51AE               	movf	main@msgtype& (0+255),w,b
  1749                           
  1750                           ; Switch size 1, requested type "space"
  1751                           ; Number of cases is 5, Range of values is 10 to 46
  1752                           ; switch strategies available:
  1753                           ; Name         Instructions Cycles
  1754                           ; simple_byte           16     9 (average)
  1755                           ;	Chosen strategy is simple_byte
  1756  00050C  0A0A               	xorlw	10	; case 10
  1757  00050E  B4D8               	btfsc	status,2,c
  1758  000510  D678               	goto	l2770
  1759  000512  0A22               	xorlw	34	; case 40
  1760  000514  B4D8               	btfsc	status,2,c
  1761  000516  D69E               	goto	l134
  1762  000518  0A01               	xorlw	1	; case 41
  1763  00051A  B4D8               	btfsc	status,2,c
  1764  00051C  D69B               	goto	l134
  1765  00051E  0A04               	xorlw	4	; case 45
  1766  000520  B4D8               	btfsc	status,2,c
  1767  000522  D69B               	goto	l2772
  1768  000524  0A03               	xorlw	3	; case 46
  1769  000526                     l2872:
  1770                           
  1771                           ;main.c: 516: }
  1772                           ;main.c: 519: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1773  000526  0101               	movlb	1	; () banked
  1774  000528  0E01               	movlw	high main@msgtype
  1775  00052A  0100               	movlb	0	; () banked
  1776  00052C  0100               	movlb	0	; () banked
  1777  00052E  6FA6               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1778  000530  0101               	movlb	1	; () banked
  1779  000532  0EAE               	movlw	low main@msgtype
  1780  000534  0100               	movlb	0	; () banked
  1781  000536  0100               	movlb	0	; () banked
  1782  000538  6FA5               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1783  00053A  0101               	movlb	1	; () banked
  1784  00053C  0E01               	movlw	high main@msgbuffer
  1785  00053E  0100               	movlb	0	; () banked
  1786  000540  0100               	movlb	0	; () banked
  1787  000542  6FA8               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1788  000544  0101               	movlb	1	; () banked
  1789  000546  0EA0               	movlw	low main@msgbuffer
  1790  000548  0100               	movlb	0	; () banked
  1791  00054A  0100               	movlb	0	; () banked
  1792  00054C  6FA7               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1793  00054E  0E0A               	movlw	10
  1794  000550  EC1A  F00D         	call	_ToMainLow_recvmsg
  1795  000554  0101               	movlb	1	; () banked
  1796  000556  0101               	movlb	1	; () banked
  1797  000558  6FAD               	movwf	main@length& (0+255),b
  1798                           
  1799                           ; BSR set to: 1
  1800                           ;main.c: 520: if (length < 0) {
  1801  00055A  0101               	movlb	1	; () banked
  1802  00055C  0101               	movlb	1	; () banked
  1803  00055E  BFAD               	btfsc	main@length& (0+255),7,b
  1804  000560  D62F               	goto	l2762
  1805  000562  D0CA               	goto	l2934
  1806  000564                     l169:
  1807                           
  1808                           ; BSR set to: 1
  1809                           ;main.c: 528: {
  1810                           ;main.c: 529: LATAbits.LA0 = 1;
  1811  000564  8089               	bsf	3977,0,c	;volatile
  1812                           
  1813                           ;main.c: 530: unsigned char sensorMsg[1] = {0xAA};
  1814  000566  C1F1  F199         	movff	main@F9252,main@sensorMsg
  1815                           
  1816                           ; BSR set to: 1
  1817                           ;main.c: 532: if(state == 1 || state == 3){
  1818  00056A  0101               	movlb	1	; () banked
  1819  00056C  0101               	movlb	1	; () banked
  1820  00056E  05AF               	decf	main@state& (0+255),w,b
  1821  000570  11B0               	iorwf	(main@state+1)& (0+255),w,b
  1822  000572  B4D8               	btfsc	status,2,c
  1823  000574  D007               	goto	l2882
  1824                           
  1825                           ; BSR set to: 1
  1826  000576  0101               	movlb	1	; () banked
  1827  000578  0101               	movlb	1	; () banked
  1828  00057A  51AF               	movf	main@state& (0+255),w,b
  1829  00057C  0A03               	xorlw	3
  1830  00057E  11B0               	iorwf	(main@state+1)& (0+255),w,b
  1831  000580  A4D8               	btfss	status,2,c
  1832  000582  D01D               	goto	l2884
  1833  000584                     l2882:
  1834                           
  1835                           ; BSR set to: 1
  1836                           ;main.c: 533: i2c_master_send(1, 6, sensorMsg, 0x9E);
  1837  000584  0100               	movlb	0	; () banked
  1838  000586  6FAA               	movwf	??_main& (0+255),b
  1839  000588  0E06               	movlw	6
  1840  00058A  0100               	movlb	0	; () banked
  1841  00058C  0100               	movlb	0	; () banked
  1842  00058E  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1843  000590  0100               	movlb	0	; () banked
  1844  000592  51AA               	movf	??_main& (0+255),w,b
  1845  000594  0101               	movlb	1	; () banked
  1846  000596  0E01               	movlw	high main@sensorMsg
  1847  000598  0100               	movlb	0	; () banked
  1848  00059A  0100               	movlb	0	; () banked
  1849  00059C  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1850  00059E  0101               	movlb	1	; () banked
  1851  0005A0  0E99               	movlw	low main@sensorMsg
  1852  0005A2  0100               	movlb	0	; () banked
  1853  0005A4  0100               	movlb	0	; () banked
  1854  0005A6  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1855  0005A8  0100               	movlb	0	; () banked
  1856  0005AA  6FAB               	movwf	(??_main+1)& (0+255),b
  1857  0005AC  0E9E               	movlw	158
  1858  0005AE  0100               	movlb	0	; () banked
  1859  0005B0  0100               	movlb	0	; () banked
  1860  0005B2  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1861  0005B4  0100               	movlb	0	; () banked
  1862  0005B6  51AB               	movf	(??_main+1)& (0+255),w,b
  1863  0005B8  0E01               	movlw	1
  1864  0005BA  EC18  F006         	call	_i2c_master_send
  1865  0005BE                     l2884:
  1866                           
  1867                           ;main.c: 534: }
  1868                           ;main.c: 535: LATAbits.LA0 = 0;
  1869  0005BE  9089               	bcf	3977,0,c	;volatile
  1870                           
  1871                           ;main.c: 536: break;
  1872  0005C0  D5FF               	goto	l2762
  1873  0005C2                     l2886:
  1874                           
  1875                           ;main.c: 539: case 31:
  1876                           ;main.c: 540: {
  1877                           ;main.c: 542: if(msgbuffer[0] == 0xBA || msgbuffer[0] == 0xCA || msgbuffer[0] == 0x0BC){
  1878  0005C2  0101               	movlb	1	; () banked
  1879  0005C4  0101               	movlb	1	; () banked
  1880  0005C6  51A0               	movf	main@msgbuffer& (0+255),w,b
  1881  0005C8  0ABA               	xorlw	186
  1882  0005CA  B4D8               	btfsc	status,2,c
  1883  0005CC  D00C               	goto	l2892
  1884                           
  1885                           ; BSR set to: 1
  1886  0005CE  0101               	movlb	1	; () banked
  1887  0005D0  0101               	movlb	1	; () banked
  1888  0005D2  51A0               	movf	main@msgbuffer& (0+255),w,b
  1889  0005D4  0ACA               	xorlw	202
  1890  0005D6  B4D8               	btfsc	status,2,c
  1891  0005D8  D006               	goto	l2892
  1892                           
  1893                           ; BSR set to: 1
  1894  0005DA  0101               	movlb	1	; () banked
  1895  0005DC  0101               	movlb	1	; () banked
  1896  0005DE  51A0               	movf	main@msgbuffer& (0+255),w,b
  1897  0005E0  0ABC               	xorlw	188
  1898  0005E2  A4D8               	btfss	status,2,c
  1899  0005E4  D064               	goto	l2926
  1900  0005E6                     l2892:
  1901                           
  1902                           ; BSR set to: 1
  1903                           ;main.c: 544: if(msgbuffer[0] == 0x0BA || msgbuffer[0] == 0xBC){
  1904  0005E6  0101               	movlb	1	; () banked
  1905  0005E8  0101               	movlb	1	; () banked
  1906  0005EA  51A0               	movf	main@msgbuffer& (0+255),w,b
  1907  0005EC  0ABA               	xorlw	186
  1908  0005EE  B4D8               	btfsc	status,2,c
  1909  0005F0  D006               	goto	l2896
  1910                           
  1911                           ; BSR set to: 1
  1912  0005F2  0101               	movlb	1	; () banked
  1913  0005F4  0101               	movlb	1	; () banked
  1914  0005F6  51A0               	movf	main@msgbuffer& (0+255),w,b
  1915  0005F8  0ABC               	xorlw	188
  1916  0005FA  A4D8               	btfss	status,2,c
  1917  0005FC  D03A               	goto	l2924
  1918  0005FE                     l2896:
  1919                           
  1920                           ; BSR set to: 1
  1921                           ;main.c: 546: unsigned char motorAck[6] = {0x03, 0x00, 0x00, 0x00, 0x00, 0x00};
  1922  0005FE  EE21  F0E9         	lfsr	2,main@F9254
  1923  000602  EE11  F086         	lfsr	1,main@motorAck
  1924  000606  0E06               	movlw	6
  1925  000608                     u2041:
  1926  000608  CFDE FFE6          	movff	postinc2,postinc1
  1927  00060C  2EE8               	decfsz	wreg,f,c
  1928  00060E  D7FC               	goto	u2041
  1929                           
  1930                           ; BSR set to: 1
  1931                           ;main.c: 547: uart_trans(6, motorAck);
  1932  000610  0101               	movlb	1	; () banked
  1933  000612  0E01               	movlw	high main@motorAck
  1934  000614  0100               	movlb	0	; () banked
  1935  000616  0100               	movlb	0	; () banked
  1936  000618  6F8E               	movwf	(uart_trans@data+1)& (0+255),b
  1937  00061A  0101               	movlb	1	; () banked
  1938  00061C  0E86               	movlw	low main@motorAck
  1939  00061E  0100               	movlb	0	; () banked
  1940  000620  0100               	movlb	0	; () banked
  1941  000622  6F8D               	movwf	uart_trans@data& (0+255),b
  1942  000624  0E06               	movlw	6
  1943  000626  EC1B  F009         	call	_uart_trans
  1944                           
  1945                           ;main.c: 549: lastMotors[0] = msgbuffer[1];
  1946  00062A  C1A1  F1AB         	movff	main@msgbuffer+1,main@lastMotors
  1947                           
  1948                           ;main.c: 550: lastMotors[1] = msgbuffer[2];
  1949  00062E  C1A2  F1AC         	movff	main@msgbuffer+2,main@lastMotors+1
  1950                           
  1951                           ;main.c: 552: if(msgbuffer[0] == 0xBA){
  1952  000632  0101               	movlb	1	; () banked
  1953  000634  0101               	movlb	1	; () banked
  1954  000636  51A0               	movf	main@msgbuffer& (0+255),w,b
  1955  000638  0ABA               	xorlw	186
  1956  00063A  A4D8               	btfss	status,2,c
  1957  00063C  D00A               	goto	l2914
  1958                           
  1959                           ; BSR set to: 1
  1960                           ;main.c: 553: state = 2;
  1961  00063E  0E00               	movlw	0
  1962  000640  0101               	movlb	1	; () banked
  1963  000642  0101               	movlb	1	; () banked
  1964  000644  6FB0               	movwf	(main@state+1)& (0+255),b
  1965  000646  0E02               	movlw	2
  1966  000648  0101               	movlb	1	; () banked
  1967  00064A  6FAF               	movwf	main@state& (0+255),b
  1968                           
  1969                           ; BSR set to: 1
  1970                           ;main.c: 554: LATAbits.LA1 = 0;
  1971  00064C  9289               	bcf	3977,1,c	;volatile
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;main.c: 555: LATAbits.LA2 = 1;
  1975  00064E  8489               	bsf	3977,2,c	;volatile
  1976  000650  D00F               	goto	L5
  1977  000652                     l2914:
  1978                           
  1979                           ; BSR set to: 1
  1980  000652  0101               	movlb	1	; () banked
  1981  000654  0101               	movlb	1	; () banked
  1982  000656  51A0               	movf	main@msgbuffer& (0+255),w,b
  1983  000658  0ABC               	xorlw	188
  1984  00065A  A4D8               	btfss	status,2,c
  1985  00065C  D00A               	goto	l2924
  1986                           
  1987                           ; BSR set to: 1
  1988                           ;main.c: 558: state = 1;
  1989  00065E  0E00               	movlw	0
  1990  000660  0101               	movlb	1	; () banked
  1991  000662  0101               	movlb	1	; () banked
  1992  000664  6FB0               	movwf	(main@state+1)& (0+255),b
  1993  000666  0E01               	movlw	1
  1994  000668  0101               	movlb	1	; () banked
  1995  00066A  6FAF               	movwf	main@state& (0+255),b
  1996                           
  1997                           ; BSR set to: 1
  1998                           ;main.c: 559: LATAbits.LA1 = 1;
  1999  00066C  8289               	bsf	3977,1,c	;volatile
  2000                           
  2001                           ; BSR set to: 1
  2002                           ;main.c: 560: LATAbits.LA2 = 0;
  2003  00066E  9489               	bcf	3977,2,c	;volatile
  2004  000670                     L5:
  2005                           
  2006                           ; BSR set to: 1
  2007                           ;main.c: 561: LATAbits.LA3 = 0;
  2008  000670  9689               	bcf	3977,3,c	;volatile
  2009  000672                     l2924:
  2010                           
  2011                           ; BSR set to: 1
  2012                           ;main.c: 562: }
  2013                           ;main.c: 564: }
  2014                           ;main.c: 565: i2c_master_send(6, 6, msgbuffer, 0xBE);
  2015  000672  0100               	movlb	0	; () banked
  2016  000674  6FAA               	movwf	??_main& (0+255),b
  2017  000676  0E06               	movlw	6
  2018  000678  0100               	movlb	0	; () banked
  2019  00067A  0100               	movlb	0	; () banked
  2020  00067C  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  2021  00067E  0100               	movlb	0	; () banked
  2022  000680  51AA               	movf	??_main& (0+255),w,b
  2023  000682  0101               	movlb	1	; () banked
  2024  000684  0E01               	movlw	high main@msgbuffer
  2025  000686  0100               	movlb	0	; () banked
  2026  000688  0100               	movlb	0	; () banked
  2027  00068A  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  2028  00068C  0101               	movlb	1	; () banked
  2029  00068E  0EA0               	movlw	low main@msgbuffer
  2030  000690  0100               	movlb	0	; () banked
  2031  000692  0100               	movlb	0	; () banked
  2032  000694  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  2033  000696  0100               	movlb	0	; () banked
  2034  000698  6FAB               	movwf	(??_main+1)& (0+255),b
  2035  00069A  0EBE               	movlw	190
  2036  00069C  0100               	movlb	0	; () banked
  2037  00069E  0100               	movlb	0	; () banked
  2038  0006A0  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  2039  0006A2  0100               	movlb	0	; () banked
  2040  0006A4  51AB               	movf	(??_main+1)& (0+255),w,b
  2041  0006A6  0E06               	movlw	6
  2042  0006A8  EC18  F006         	call	_i2c_master_send
  2043                           
  2044                           ;main.c: 567: } else if(msgbuffer[0] == 0xAA){
  2045  0006AC  D023               	goto	l2930
  2046  0006AE                     l2926:
  2047  0006AE  0101               	movlb	1	; () banked
  2048  0006B0  0101               	movlb	1	; () banked
  2049  0006B2  51A0               	movf	main@msgbuffer& (0+255),w,b
  2050  0006B4  0AAA               	xorlw	170
  2051  0006B6  A4D8               	btfss	status,2,c
  2052  0006B8  D01D               	goto	l2930
  2053                           
  2054                           ; BSR set to: 1
  2055                           ;main.c: 569: i2c_master_send(1, 6, msgbuffer, 0x9E);
  2056  0006BA  0100               	movlb	0	; () banked
  2057  0006BC  6FAA               	movwf	??_main& (0+255),b
  2058  0006BE  0E06               	movlw	6
  2059  0006C0  0100               	movlb	0	; () banked
  2060  0006C2  0100               	movlb	0	; () banked
  2061  0006C4  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  2062  0006C6  0100               	movlb	0	; () banked
  2063  0006C8  51AA               	movf	??_main& (0+255),w,b
  2064  0006CA  0101               	movlb	1	; () banked
  2065  0006CC  0E01               	movlw	high main@msgbuffer
  2066  0006CE  0100               	movlb	0	; () banked
  2067  0006D0  0100               	movlb	0	; () banked
  2068  0006D2  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  2069  0006D4  0101               	movlb	1	; () banked
  2070  0006D6  0EA0               	movlw	low main@msgbuffer
  2071  0006D8  0100               	movlb	0	; () banked
  2072  0006DA  0100               	movlb	0	; () banked
  2073  0006DC  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  2074  0006DE  0100               	movlb	0	; () banked
  2075  0006E0  6FAB               	movwf	(??_main+1)& (0+255),b
  2076  0006E2  0E9E               	movlw	158
  2077  0006E4  0100               	movlb	0	; () banked
  2078  0006E6  0100               	movlb	0	; () banked
  2079  0006E8  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  2080  0006EA  0100               	movlb	0	; () banked
  2081  0006EC  51AB               	movf	(??_main+1)& (0+255),w,b
  2082  0006EE  0E01               	movlw	1
  2083  0006F0  EC18  F006         	call	_i2c_master_send
  2084  0006F4                     l2930:
  2085                           
  2086                           ;main.c: 570: }
  2087                           ;main.c: 572: LATBbits.LATB2 = 0;
  2088  0006F4  948A               	bcf	3978,2,c	;volatile
  2089                           
  2090                           ;main.c: 574: break;
  2091  0006F6  D564               	goto	l2762
  2092  0006F8                     l2934:
  2093  0006F8  0101               	movlb	1	; () banked
  2094  0006FA  0101               	movlb	1	; () banked
  2095  0006FC  51AE               	movf	main@msgtype& (0+255),w,b
  2096                           
  2097                           ; Switch size 1, requested type "space"
  2098                           ; Number of cases is 3, Range of values is 11 to 31
  2099                           ; switch strategies available:
  2100                           ; Name         Instructions Cycles
  2101                           ; simple_byte           10     6 (average)
  2102                           ;	Chosen strategy is simple_byte
  2103  0006FE  0A0B               	xorlw	11	; case 11
  2104  000700  B4D8               	btfsc	status,2,c
  2105  000702  D730               	goto	l169
  2106  000704  0A15               	xorlw	21	; case 30
  2107  000706  B4D8               	btfsc	status,2,c
  2108  000708  D75C               	goto	l2886
  2109  00070A  0A01               	xorlw	1	; case 31
  2110  00070C  B4D8               	btfsc	status,2,c
  2111  00070E  D759               	goto	l2886
  2112  000710  D557               	goto	l2762
  2113  000712                     __end_of_main:
  2114                           	opt stack 0
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           intcon2	equ	0xFF1
  2120                           postinc0	equ	0xFEE
  2121                           wreg	equ	0xFE8
  2122                           postinc1	equ	0xFE6
  2123                           postdec1	equ	0xFE5
  2124                           fsr1l	equ	0xFE1
  2125                           indf2	equ	0xFDF
  2126                           postinc2	equ	0xFDE
  2127                           status	equ	0xFD8
  2128                           
  2129 ;; *************** function _uart_trans *****************
  2130 ;; Defined at:
  2131 ;;		line 61 in file "../src/my_uart.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  length          1    wreg     unsigned char 
  2134 ;;  data            2   45[BANK0 ] PTR unsigned char 
  2135 ;;		 -> i2c_slave_int_handler@motorcomm(2), main@motorAck(6), main@msgbuffer(11), 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  length          1   49[BANK0 ] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;		None               void
  2140 ;; Registers used:
  2141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2149 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2150 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2151 ;;Total ram usage:        5 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:   11
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;;		_i2c_slave_int_handler
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text1
  2163  001236                     __ptext1:
  2164                           	opt stack 0
  2165  001236                     _uart_trans:
  2166                           	opt stack 19
  2167                           
  2168                           ; BSR set to: 1
  2169                           ;incstack = 0
  2170                           ;uart_trans@length stored from wreg
  2171  001236  CFE8 F091          	movff	wreg,uart_trans@length
  2172                           
  2173                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  2174  00123A  EE20 F00D          	lfsr	2,13
  2175  00123E  503F               	movf	_uc_ptr,w,c
  2176  001240  26D9               	addwf	fsr2l,f,c
  2177  001242  5040               	movf	_uc_ptr+1,w,c
  2178  001244  22DA               	addwfc	fsr2h,f,c
  2179  001246  0E00               	movlw	0
  2180  001248  6EDF               	movwf	indf2,c
  2181  00124A  D035               	goto	l3084
  2182  00124C                     l3080:
  2183                           
  2184                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  2185  00124C  EE20 F00D          	lfsr	2,13
  2186  001250  503F               	movf	_uc_ptr,w,c
  2187  001252  26D9               	addwf	fsr2l,f,c
  2188  001254  5040               	movf	_uc_ptr+1,w,c
  2189  001256  22DA               	addwfc	fsr2h,f,c
  2190  001258  50DF               	movf	indf2,w,c
  2191  00125A  0100               	movlb	0	; () banked
  2192  00125C  6F8F               	movwf	??_uart_trans& (0+255),b
  2193  00125E  0100               	movlb	0	; () banked
  2194  001260  518F               	movf	??_uart_trans& (0+255),w,b
  2195  001262  0D01               	mullw	1
  2196  001264  50F3               	movf	prodl,w,c
  2197  001266  0100               	movlb	0	; () banked
  2198  001268  0100               	movlb	0	; () banked
  2199  00126A  258D               	addwf	uart_trans@data& (0+255),w,b
  2200  00126C  6ED9               	movwf	fsr2l,c
  2201  00126E  50F4               	movf	prodh,w,c
  2202  001270  0100               	movlb	0	; () banked
  2203  001272  0100               	movlb	0	; () banked
  2204  001274  218E               	addwfc	(uart_trans@data+1)& (0+255),w,b
  2205  001276  6EDA               	movwf	fsr2h,c
  2206  001278  EE10 F00D          	lfsr	1,13
  2207  00127C  503F               	movf	_uc_ptr,w,c
  2208  00127E  26E1               	addwf	fsr1l,f,c
  2209  001280  5040               	movf	_uc_ptr+1,w,c
  2210  001282  22E2               	addwfc	fsr1h,f,c
  2211  001284  50E7               	movf	indf1,w,c
  2212  001286  0100               	movlb	0	; () banked
  2213  001288  6F90               	movwf	(??_uart_trans+1)& (0+255),b
  2214  00128A  0100               	movlb	0	; () banked
  2215  00128C  5190               	movf	(??_uart_trans+1)& (0+255),w,b
  2216  00128E  0D01               	mullw	1
  2217  001290  0E07               	movlw	7
  2218  001292  26F3               	addwf	prodl,f,c
  2219  001294  0E00               	movlw	0
  2220  001296  22F4               	addwfc	prodh,f,c
  2221  001298  50F3               	movf	prodl,w,c
  2222  00129A  243F               	addwf	_uc_ptr,w,c
  2223  00129C  6EE1               	movwf	fsr1l,c
  2224  00129E  50F4               	movf	prodh,w,c
  2225  0012A0  2040               	addwfc	_uc_ptr+1,w,c
  2226  0012A2  6EE2               	movwf	fsr1h,c
  2227  0012A4  CFDF FFE7          	movff	indf2,indf1
  2228                           
  2229                           ; BSR set to: 0
  2230  0012A8  EE20 F00D          	lfsr	2,13
  2231  0012AC  503F               	movf	_uc_ptr,w,c
  2232  0012AE  26D9               	addwf	fsr2l,f,c
  2233  0012B0  5040               	movf	_uc_ptr+1,w,c
  2234  0012B2  22DA               	addwfc	fsr2h,f,c
  2235  0012B4  2ADF               	incf	indf2,f,c
  2236  0012B6                     l3084:
  2237  0012B6  EE20 F00D          	lfsr	2,13
  2238  0012BA  503F               	movf	_uc_ptr,w,c
  2239  0012BC  26D9               	addwf	fsr2l,f,c
  2240  0012BE  5040               	movf	_uc_ptr+1,w,c
  2241  0012C0  22DA               	addwfc	fsr2h,f,c
  2242  0012C2  50DF               	movf	indf2,w,c
  2243  0012C4  0100               	movlb	0	; () banked
  2244  0012C6  6F8F               	movwf	??_uart_trans& (0+255),b
  2245  0012C8  0100               	movlb	0	; () banked
  2246  0012CA  0100               	movlb	0	; () banked
  2247  0012CC  5191               	movf	uart_trans@length& (0+255),w,b
  2248  0012CE  0100               	movlb	0	; () banked
  2249  0012D0  5D8F               	subwf	??_uart_trans& (0+255),w,b
  2250  0012D2  A0D8               	btfss	status,0,c
  2251  0012D4  D7BB               	goto	l3080
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;my_uart.c: 67: }
  2255                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  2256                           
  2257                           ; BSR set to: 0
  2258  0012D6  EE20 F00E          	lfsr	2,14
  2259  0012DA  503F               	movf	_uc_ptr,w,c
  2260  0012DC  26D9               	addwf	fsr2l,f,c
  2261  0012DE  5040               	movf	_uc_ptr+1,w,c
  2262  0012E0  22DA               	addwfc	fsr2h,f,c
  2263  0012E2  0E00               	movlw	0
  2264  0012E4  6EDF               	movwf	indf2,c
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  2268  0012E6  889D               	bsf	3997,4,c	;volatile
  2269                           
  2270                           ; BSR set to: 0
  2271  0012E8  0012               	return	
  2272  0012EA                     __end_of_uart_trans:
  2273                           	opt stack 0
  2274                           tblptru	equ	0xFF8
  2275                           tblptrh	equ	0xFF7
  2276                           tblptrl	equ	0xFF6
  2277                           tablat	equ	0xFF5
  2278                           prodh	equ	0xFF4
  2279                           prodl	equ	0xFF3
  2280                           intcon2	equ	0xFF1
  2281                           postinc0	equ	0xFEE
  2282                           wreg	equ	0xFE8
  2283                           indf1	equ	0xFE7
  2284                           postinc1	equ	0xFE6
  2285                           postdec1	equ	0xFE5
  2286                           fsr1h	equ	0xFE2
  2287                           fsr1l	equ	0xFE1
  2288                           indf2	equ	0xFDF
  2289                           postinc2	equ	0xFDE
  2290                           fsr2h	equ	0xFDA
  2291                           fsr2l	equ	0xFD9
  2292                           status	equ	0xFD8
  2293                           
  2294 ;; *************** function _timer0_lthread *****************
  2295 ;; Defined at:
  2296 ;;		line 9 in file "../src/timer0_thread.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  tptr            2   45[BANK0 ] PTR struct __timer0_thre
  2299 ;;		 -> main@t0thread_data(2), 
  2300 ;;  msgtype         2   47[BANK0 ] int 
  2301 ;;  length          2   49[BANK0 ] int 
  2302 ;;  msgbuffer       2   51[BANK0 ] PTR unsigned char 
  2303 ;;		 -> main@msgbuffer(11), 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  msgval          2   53[BANK0 ] PTR unsigned int 
  2306 ;;		 -> main@msgbuffer(11), 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  2   45[BANK0 ] int 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2316 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2317 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2319 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2320 ;;Total ram usage:       10 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:   11
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_main
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text2
  2331  001D24                     __ptext2:
  2332                           	opt stack 0
  2333  001D24                     _timer0_lthread:
  2334                           	opt stack 19
  2335                           
  2336                           ;timer0_thread.c: 10: unsigned int *msgval;
  2337                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;incstack = 0
  2341  001D24  0100               	movlb	0	; () banked
  2342  001D26  0100               	movlb	0	; () banked
  2343  001D28  C094  F096         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2344  001D2C  0100               	movlb	0	; () banked
  2345  001D2E  0100               	movlb	0	; () banked
  2346  001D30  C093  F095         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2347                           
  2348                           ; BSR set to: 0
  2349  001D34  0012               	return	
  2350  001D36                     __end_of_timer0_lthread:
  2351                           	opt stack 0
  2352                           tblptru	equ	0xFF8
  2353                           tblptrh	equ	0xFF7
  2354                           tblptrl	equ	0xFF6
  2355                           tablat	equ	0xFF5
  2356                           prodh	equ	0xFF4
  2357                           prodl	equ	0xFF3
  2358                           intcon2	equ	0xFF1
  2359                           postinc0	equ	0xFEE
  2360                           wreg	equ	0xFE8
  2361                           indf1	equ	0xFE7
  2362                           postinc1	equ	0xFE6
  2363                           postdec1	equ	0xFE5
  2364                           fsr1h	equ	0xFE2
  2365                           fsr1l	equ	0xFE1
  2366                           indf2	equ	0xFDF
  2367                           postinc2	equ	0xFDE
  2368                           fsr2h	equ	0xFDA
  2369                           fsr2l	equ	0xFD9
  2370                           status	equ	0xFD8
  2371                           
  2372 ;; *************** function _init_uart_recv *****************
  2373 ;; Defined at:
  2374 ;;		line 54 in file "../src/my_uart.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  uc              2   45[BANK0 ] PTR struct __uart_comm
  2377 ;;		 -> main@uc(15), 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;		None               void
  2382 ;; Registers used:
  2383 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2392 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2393 ;;Total ram usage:        2 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:   11
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text3
  2404  001CA4                     __ptext3:
  2405                           	opt stack 0
  2406  001CA4                     _init_uart_recv:
  2407                           	opt stack 19
  2408                           
  2409                           ;my_uart.c: 57: uc_ptr = uc;
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;incstack = 0
  2413  001CA4  0100               	movlb	0	; () banked
  2414  001CA6  C08E  F040         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2415  001CAA  0100               	movlb	0	; () banked
  2416  001CAC  C08D  F03F         	movff	init_uart_recv@uc,_uc_ptr
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;my_uart.c: 58: uc_ptr->buflen = 0;
  2420  001CB0  EE20 F006          	lfsr	2,6
  2421  001CB4  503F               	movf	_uc_ptr,w,c
  2422  001CB6  26D9               	addwf	fsr2l,f,c
  2423  001CB8  5040               	movf	_uc_ptr+1,w,c
  2424  001CBA  22DA               	addwfc	fsr2h,f,c
  2425  001CBC  0E00               	movlw	0
  2426  001CBE  6EDF               	movwf	indf2,c
  2427                           
  2428                           ; BSR set to: 0
  2429  001CC0  0012               	return	
  2430  001CC2                     __end_of_init_uart_recv:
  2431                           	opt stack 0
  2432                           tblptru	equ	0xFF8
  2433                           tblptrh	equ	0xFF7
  2434                           tblptrl	equ	0xFF6
  2435                           tablat	equ	0xFF5
  2436                           prodh	equ	0xFF4
  2437                           prodl	equ	0xFF3
  2438                           intcon2	equ	0xFF1
  2439                           postinc0	equ	0xFEE
  2440                           wreg	equ	0xFE8
  2441                           indf1	equ	0xFE7
  2442                           postinc1	equ	0xFE6
  2443                           postdec1	equ	0xFE5
  2444                           fsr1h	equ	0xFE2
  2445                           fsr1l	equ	0xFE1
  2446                           indf2	equ	0xFDF
  2447                           postinc2	equ	0xFDE
  2448                           fsr2h	equ	0xFDA
  2449                           fsr2l	equ	0xFD9
  2450                           status	equ	0xFD8
  2451                           
  2452 ;; *************** function _init_timer1_lthread *****************
  2453 ;; Defined at:
  2454 ;;		line 6 in file "../src/timer1_thread.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  tptr            2   45[BANK0 ] PTR struct __timer1_thre
  2457 ;;		 -> main@t1thread_data(2), 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;		None               void
  2462 ;; Registers used:
  2463 ;;		wreg, fsr2l, fsr2h
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2469 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2472 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;Total ram usage:        2 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:   11
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text4
  2484  001D36                     __ptext4:
  2485                           	opt stack 0
  2486  001D36                     _init_timer1_lthread:
  2487                           	opt stack 19
  2488                           
  2489                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;incstack = 0
  2493  001D36  C08D  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2494  001D3A  C08E  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2495  001D3E  0E00               	movlw	0
  2496  001D40  6EDE               	movwf	postinc2,c
  2497  001D42  0E00               	movlw	0
  2498  001D44  6EDD               	movwf	postdec2,c
  2499  001D46  0012               	return	
  2500  001D48                     __end_of_init_timer1_lthread:
  2501                           	opt stack 0
  2502                           tblptru	equ	0xFF8
  2503                           tblptrh	equ	0xFF7
  2504                           tblptrl	equ	0xFF6
  2505                           tablat	equ	0xFF5
  2506                           prodh	equ	0xFF4
  2507                           prodl	equ	0xFF3
  2508                           intcon2	equ	0xFF1
  2509                           postinc0	equ	0xFEE
  2510                           wreg	equ	0xFE8
  2511                           indf1	equ	0xFE7
  2512                           postinc1	equ	0xFE6
  2513                           postdec1	equ	0xFE5
  2514                           fsr1h	equ	0xFE2
  2515                           fsr1l	equ	0xFE1
  2516                           indf2	equ	0xFDF
  2517                           postinc2	equ	0xFDE
  2518                           postdec2	equ	0xFDD
  2519                           fsr2h	equ	0xFDA
  2520                           fsr2l	equ	0xFD9
  2521                           status	equ	0xFD8
  2522                           
  2523 ;; *************** function _init_queues *****************
  2524 ;; Defined at:
  2525 ;;		line 194 in file "../src/messages.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;		None               void
  2532 ;; Registers used:
  2533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2541 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2542 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2543 ;;Total ram usage:        1 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:   12
  2546 ;; This function calls:
  2547 ;;		_init_queue
  2548 ;; This function is called by:
  2549 ;;		_main
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text5
  2554  00169A                     __ptext5:
  2555                           	opt stack 0
  2556  00169A                     _init_queues:
  2557                           	opt stack 18
  2558                           
  2559                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2560                           
  2561                           ;incstack = 0
  2562  00169A  0100               	movlb	0	; () banked
  2563  00169C  6F91               	movwf	??_init_queues& (0+255),b
  2564  00169E  0E00               	movlw	0
  2565  0016A0  6E3D               	movwf	_MQ_Main_Willing_to_block,c
  2566  0016A2  0100               	movlb	0	; () banked
  2567  0016A4  5191               	movf	??_init_queues& (0+255),w,b
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2571  0016A6  0101               	movlb	1	; () banked
  2572  0016A8  0E01               	movlw	high _ToMainLow_MQ
  2573  0016AA  0100               	movlb	0	; () banked
  2574  0016AC  0100               	movlb	0	; () banked
  2575  0016AE  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2576  0016B0  0101               	movlb	1	; () banked
  2577  0016B2  0E43               	movlw	low _ToMainLow_MQ
  2578  0016B4  0100               	movlb	0	; () banked
  2579  0016B6  0100               	movlb	0	; () banked
  2580  0016B8  6F8D               	movwf	init_queue@qptr& (0+255),b
  2581  0016BA  EC10  F00B         	call	_init_queue	;wreg free
  2582                           
  2583                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2584  0016BE  0101               	movlb	1	; () banked
  2585  0016C0  0E01               	movlw	high _ToMainHigh_MQ
  2586  0016C2  0100               	movlb	0	; () banked
  2587  0016C4  0100               	movlb	0	; () banked
  2588  0016C6  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2589  0016C8  0101               	movlb	1	; () banked
  2590  0016CA  0E00               	movlw	low _ToMainHigh_MQ
  2591  0016CC  0100               	movlb	0	; () banked
  2592  0016CE  0100               	movlb	0	; () banked
  2593  0016D0  6F8D               	movwf	init_queue@qptr& (0+255),b
  2594  0016D2  EC10  F00B         	call	_init_queue	;wreg free
  2595                           
  2596                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2597  0016D6  0102               	movlb	2	; () banked
  2598  0016D8  0E02               	movlw	high _FromMainLow_MQ
  2599  0016DA  0100               	movlb	0	; () banked
  2600  0016DC  0100               	movlb	0	; () banked
  2601  0016DE  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2602  0016E0  0102               	movlb	2	; () banked
  2603  0016E2  0E43               	movlw	low _FromMainLow_MQ
  2604  0016E4  0100               	movlb	0	; () banked
  2605  0016E6  0100               	movlb	0	; () banked
  2606  0016E8  6F8D               	movwf	init_queue@qptr& (0+255),b
  2607  0016EA  EC10  F00B         	call	_init_queue	;wreg free
  2608                           
  2609                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2610  0016EE  0102               	movlb	2	; () banked
  2611  0016F0  0E02               	movlw	high _FromMainHigh_MQ
  2612  0016F2  0100               	movlb	0	; () banked
  2613  0016F4  0100               	movlb	0	; () banked
  2614  0016F6  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2615  0016F8  0102               	movlb	2	; () banked
  2616  0016FA  0E00               	movlw	low _FromMainHigh_MQ
  2617  0016FC  0100               	movlb	0	; () banked
  2618  0016FE  0100               	movlb	0	; () banked
  2619  001700  6F8D               	movwf	init_queue@qptr& (0+255),b
  2620  001702  EC10  F00B         	call	_init_queue	;wreg free
  2621  001706  0012               	return	
  2622  001708                     __end_of_init_queues:
  2623                           	opt stack 0
  2624                           tblptru	equ	0xFF8
  2625                           tblptrh	equ	0xFF7
  2626                           tblptrl	equ	0xFF6
  2627                           tablat	equ	0xFF5
  2628                           prodh	equ	0xFF4
  2629                           prodl	equ	0xFF3
  2630                           intcon2	equ	0xFF1
  2631                           postinc0	equ	0xFEE
  2632                           wreg	equ	0xFE8
  2633                           indf1	equ	0xFE7
  2634                           postinc1	equ	0xFE6
  2635                           postdec1	equ	0xFE5
  2636                           fsr1h	equ	0xFE2
  2637                           fsr1l	equ	0xFE1
  2638                           indf2	equ	0xFDF
  2639                           postinc2	equ	0xFDE
  2640                           postdec2	equ	0xFDD
  2641                           fsr2h	equ	0xFDA
  2642                           fsr2l	equ	0xFD9
  2643                           status	equ	0xFD8
  2644                           
  2645 ;; *************** function _init_queue *****************
  2646 ;; Defined at:
  2647 ;;		line 14 in file "../src/messages.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  2650 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  i               1   48[BANK0 ] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;		None               void
  2655 ;; Registers used:
  2656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2662 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2665 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2666 ;;Total ram usage:        4 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:   11
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_init_queues
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text6
  2677  001620                     __ptext6:
  2678                           	opt stack 0
  2679  001620                     _init_queue:
  2680                           	opt stack 18
  2681                           
  2682                           ;messages.c: 15: unsigned char i;
  2683                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2684                           
  2685                           ;incstack = 0
  2686  001620  0100               	movlb	0	; () banked
  2687  001622  EE20 F041          	lfsr	2,65
  2688  001626  0100               	movlb	0	; () banked
  2689  001628  518D               	movf	init_queue@qptr& (0+255),w,b
  2690  00162A  26D9               	addwf	fsr2l,f,c
  2691  00162C  0100               	movlb	0	; () banked
  2692  00162E  518E               	movf	(init_queue@qptr+1)& (0+255),w,b
  2693  001630  22DA               	addwfc	fsr2h,f,c
  2694  001632  0E00               	movlw	0
  2695  001634  6EDF               	movwf	indf2,c
  2696                           
  2697                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2698  001636  0100               	movlb	0	; () banked
  2699  001638  EE20 F042          	lfsr	2,66
  2700  00163C  0100               	movlb	0	; () banked
  2701  00163E  518D               	movf	init_queue@qptr& (0+255),w,b
  2702  001640  26D9               	addwf	fsr2l,f,c
  2703  001642  0100               	movlb	0	; () banked
  2704  001644  518E               	movf	(init_queue@qptr+1)& (0+255),w,b
  2705  001646  22DA               	addwfc	fsr2h,f,c
  2706  001648  0E00               	movlw	0
  2707  00164A  6EDF               	movwf	indf2,c
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2711  00164C  0100               	movlb	0	; () banked
  2712  00164E  6F8F               	movwf	??_init_queue& (0+255),b
  2713  001650  0E00               	movlw	0
  2714  001652  0100               	movlb	0	; () banked
  2715  001654  0100               	movlb	0	; () banked
  2716  001656  6F90               	movwf	init_queue@i& (0+255),b
  2717  001658  0100               	movlb	0	; () banked
  2718  00165A  518F               	movf	??_init_queue& (0+255),w,b
  2719                           
  2720                           ; BSR set to: 0
  2721  00165C  0E04               	movlw	4
  2722  00165E  0100               	movlb	0	; () banked
  2723  001660  0100               	movlb	0	; () banked
  2724  001662  6590               	cpfsgt	init_queue@i& (0+255),b
  2725  001664  D001               	goto	l3116
  2726  001666  0012               	return	
  2727  001668                     l3116:
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;messages.c: 20: qptr->queue[i].full = 0;
  2731  001668  0100               	movlb	0	; () banked
  2732  00166A  0100               	movlb	0	; () banked
  2733  00166C  5190               	movf	init_queue@i& (0+255),w,b
  2734  00166E  0D0D               	mullw	13
  2735  001670  50F3               	movf	prodl,w,c
  2736  001672  0100               	movlb	0	; () banked
  2737  001674  0100               	movlb	0	; () banked
  2738  001676  258D               	addwf	init_queue@qptr& (0+255),w,b
  2739  001678  6ED9               	movwf	fsr2l,c
  2740  00167A  50F4               	movf	prodh,w,c
  2741  00167C  0100               	movlb	0	; () banked
  2742  00167E  0100               	movlb	0	; () banked
  2743  001680  218E               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2744  001682  6EDA               	movwf	fsr2h,c
  2745  001684  0E00               	movlw	0
  2746  001686  6EDF               	movwf	indf2,c
  2747                           
  2748                           ; BSR set to: 0
  2749  001688  0100               	movlb	0	; () banked
  2750  00168A  0100               	movlb	0	; () banked
  2751  00168C  2B90               	incf	init_queue@i& (0+255),f,b
  2752                           
  2753                           ; BSR set to: 0
  2754  00168E  0E04               	movlw	4
  2755  001690  0100               	movlb	0	; () banked
  2756  001692  0100               	movlb	0	; () banked
  2757  001694  6590               	cpfsgt	init_queue@i& (0+255),b
  2758  001696  D7E8               	goto	l3116
  2759  001698  0012               	return	
  2760  00169A                     __end_of_init_queue:
  2761                           	opt stack 0
  2762                           tblptru	equ	0xFF8
  2763                           tblptrh	equ	0xFF7
  2764                           tblptrl	equ	0xFF6
  2765                           tablat	equ	0xFF5
  2766                           prodh	equ	0xFF4
  2767                           prodl	equ	0xFF3
  2768                           intcon2	equ	0xFF1
  2769                           postinc0	equ	0xFEE
  2770                           wreg	equ	0xFE8
  2771                           indf1	equ	0xFE7
  2772                           postinc1	equ	0xFE6
  2773                           postdec1	equ	0xFE5
  2774                           fsr1h	equ	0xFE2
  2775                           fsr1l	equ	0xFE1
  2776                           indf2	equ	0xFDF
  2777                           postinc2	equ	0xFDE
  2778                           postdec2	equ	0xFDD
  2779                           fsr2h	equ	0xFDA
  2780                           fsr2l	equ	0xFD9
  2781                           status	equ	0xFD8
  2782                           
  2783 ;; *************** function _init_i2c *****************
  2784 ;; Defined at:
  2785 ;;		line 441 in file "../src/my_i2c.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  ic              2   45[BANK0 ] PTR struct __i2c_comm
  2788 ;;		 -> main@ic(29), 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;		None               void
  2793 ;; Registers used:
  2794 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2800 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2803 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2804 ;;Total ram usage:        2 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:   11
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_main
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text7
  2815  001708                     __ptext7:
  2816                           	opt stack 0
  2817  001708                     _init_i2c:
  2818                           	opt stack 19
  2819                           
  2820                           ;my_i2c.c: 442: ic_ptr = ic;
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;incstack = 0
  2824  001708  0100               	movlb	0	; () banked
  2825  00170A  0100               	movlb	0	; () banked
  2826  00170C  C08E  F0C9         	movff	init_i2c@ic+1,_ic_ptr+1
  2827  001710  0100               	movlb	0	; () banked
  2828  001712  0100               	movlb	0	; () banked
  2829  001714  C08D  F0C8         	movff	init_i2c@ic,_ic_ptr
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;my_i2c.c: 443: ic_ptr->buflen = 0;
  2833  001718  0100               	movlb	0	; () banked
  2834  00171A  EE20 F00A          	lfsr	2,10
  2835  00171E  0100               	movlb	0	; () banked
  2836  001720  51C8               	movf	_ic_ptr& (0+255),w,b
  2837  001722  26D9               	addwf	fsr2l,f,c
  2838  001724  0100               	movlb	0	; () banked
  2839  001726  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2840  001728  22DA               	addwfc	fsr2h,f,c
  2841  00172A  0E00               	movlw	0
  2842  00172C  6EDF               	movwf	indf2,c
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;my_i2c.c: 444: ic_ptr->event_count = 0;
  2846  00172E  0100               	movlb	0	; () banked
  2847  001730  EE20 F00C          	lfsr	2,12
  2848  001734  0100               	movlb	0	; () banked
  2849  001736  51C8               	movf	_ic_ptr& (0+255),w,b
  2850  001738  26D9               	addwf	fsr2l,f,c
  2851  00173A  0100               	movlb	0	; () banked
  2852  00173C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2853  00173E  22DA               	addwfc	fsr2h,f,c
  2854  001740  0E00               	movlw	0
  2855  001742  6EDF               	movwf	indf2,c
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;my_i2c.c: 445: ic_ptr->status = 0x5;
  2859  001744  0100               	movlb	0	; () banked
  2860  001746  EE20 F00D          	lfsr	2,13
  2861  00174A  0100               	movlb	0	; () banked
  2862  00174C  51C8               	movf	_ic_ptr& (0+255),w,b
  2863  00174E  26D9               	addwf	fsr2l,f,c
  2864  001750  0100               	movlb	0	; () banked
  2865  001752  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2866  001754  22DA               	addwfc	fsr2h,f,c
  2867  001756  0E05               	movlw	5
  2868  001758  6EDF               	movwf	indf2,c
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;my_i2c.c: 446: ic_ptr->error_count = 0;
  2872  00175A  0100               	movlb	0	; () banked
  2873  00175C  EE20 F00F          	lfsr	2,15
  2874  001760  0100               	movlb	0	; () banked
  2875  001762  51C8               	movf	_ic_ptr& (0+255),w,b
  2876  001764  26D9               	addwf	fsr2l,f,c
  2877  001766  0100               	movlb	0	; () banked
  2878  001768  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2879  00176A  22DA               	addwfc	fsr2h,f,c
  2880  00176C  0E00               	movlw	0
  2881  00176E  6EDF               	movwf	indf2,c
  2882                           
  2883                           ; BSR set to: 0
  2884  001770  0012               	return	
  2885  001772                     __end_of_init_i2c:
  2886                           	opt stack 0
  2887                           tblptru	equ	0xFF8
  2888                           tblptrh	equ	0xFF7
  2889                           tblptrl	equ	0xFF6
  2890                           tablat	equ	0xFF5
  2891                           prodh	equ	0xFF4
  2892                           prodl	equ	0xFF3
  2893                           intcon2	equ	0xFF1
  2894                           postinc0	equ	0xFEE
  2895                           wreg	equ	0xFE8
  2896                           indf1	equ	0xFE7
  2897                           postinc1	equ	0xFE6
  2898                           postdec1	equ	0xFE5
  2899                           fsr1h	equ	0xFE2
  2900                           fsr1l	equ	0xFE1
  2901                           indf2	equ	0xFDF
  2902                           postinc2	equ	0xFDE
  2903                           postdec2	equ	0xFDD
  2904                           fsr2h	equ	0xFDA
  2905                           fsr2l	equ	0xFD9
  2906                           status	equ	0xFD8
  2907                           
  2908 ;; *************** function _i2c_master_send *****************
  2909 ;; Defined at:
  2910 ;;		line 44 in file "../src/my_i2c.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  sendlength      1    wreg     unsigned char 
  2913 ;;  recvlength      1   45[BANK0 ] unsigned char 
  2914 ;;  msg             2   46[BANK0 ] PTR unsigned char 
  2915 ;;		 -> main@sensorMsg(1), main@correct(6), main@stop(6), main@msgbuffer(11), 
  2916 ;;  slave_addr      1   48[BANK0 ] unsigned char 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  sendlength      1   51[BANK0 ] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      unsigned char 
  2921 ;; Registers used:
  2922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2928 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2929 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2930 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2931 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2932 ;;Total ram usage:        7 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:   11
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text8
  2943  000C30                     __ptext8:
  2944                           	opt stack 0
  2945  000C30                     _i2c_master_send:
  2946                           	opt stack 19
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;incstack = 0
  2950                           ;i2c_master_send@sendlength stored from wreg
  2951  000C30  CFE8 F093          	movff	wreg,i2c_master_send@sendlength
  2952                           
  2953                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  2954  000C34  0100               	movlb	0	; () banked
  2955  000C36  EE20 F01A          	lfsr	2,26
  2956  000C3A  0100               	movlb	0	; () banked
  2957  000C3C  51C8               	movf	_ic_ptr& (0+255),w,b
  2958  000C3E  26D9               	addwf	fsr2l,f,c
  2959  000C40  0100               	movlb	0	; () banked
  2960  000C42  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2961  000C44  22DA               	addwfc	fsr2h,f,c
  2962  000C46  0E00               	movlw	0
  2963  000C48  6EDF               	movwf	indf2,c
  2964  000C4A  D042               	goto	l3096
  2965  000C4C                     l3092:
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2969  000C4C  0100               	movlb	0	; () banked
  2970  000C4E  EE20 F01A          	lfsr	2,26
  2971  000C52  0100               	movlb	0	; () banked
  2972  000C54  51C8               	movf	_ic_ptr& (0+255),w,b
  2973  000C56  26D9               	addwf	fsr2l,f,c
  2974  000C58  0100               	movlb	0	; () banked
  2975  000C5A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2976  000C5C  22DA               	addwfc	fsr2h,f,c
  2977  000C5E  50DF               	movf	indf2,w,c
  2978  000C60  0100               	movlb	0	; () banked
  2979  000C62  6F91               	movwf	??_i2c_master_send& (0+255),b
  2980  000C64  0100               	movlb	0	; () banked
  2981  000C66  5191               	movf	??_i2c_master_send& (0+255),w,b
  2982  000C68  0D01               	mullw	1
  2983  000C6A  50F3               	movf	prodl,w,c
  2984  000C6C  0100               	movlb	0	; () banked
  2985  000C6E  0100               	movlb	0	; () banked
  2986  000C70  258E               	addwf	i2c_master_send@msg& (0+255),w,b
  2987  000C72  6ED9               	movwf	fsr2l,c
  2988  000C74  50F4               	movf	prodh,w,c
  2989  000C76  0100               	movlb	0	; () banked
  2990  000C78  0100               	movlb	0	; () banked
  2991  000C7A  218F               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  2992  000C7C  6EDA               	movwf	fsr2h,c
  2993  000C7E  0100               	movlb	0	; () banked
  2994  000C80  EE10 F01A          	lfsr	1,26
  2995  000C84  0100               	movlb	0	; () banked
  2996  000C86  51C8               	movf	_ic_ptr& (0+255),w,b
  2997  000C88  26E1               	addwf	fsr1l,f,c
  2998  000C8A  0100               	movlb	0	; () banked
  2999  000C8C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3000  000C8E  22E2               	addwfc	fsr1h,f,c
  3001  000C90  50E7               	movf	indf1,w,c
  3002  000C92  0100               	movlb	0	; () banked
  3003  000C94  6F92               	movwf	(??_i2c_master_send+1)& (0+255),b
  3004  000C96  0100               	movlb	0	; () banked
  3005  000C98  5192               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3006  000C9A  0D01               	mullw	1
  3007  000C9C  0E10               	movlw	16
  3008  000C9E  26F3               	addwf	prodl,f,c
  3009  000CA0  0E00               	movlw	0
  3010  000CA2  22F4               	addwfc	prodh,f,c
  3011  000CA4  50F3               	movf	prodl,w,c
  3012  000CA6  0100               	movlb	0	; () banked
  3013  000CA8  0100               	movlb	0	; () banked
  3014  000CAA  25C8               	addwf	_ic_ptr& (0+255),w,b
  3015  000CAC  6EE1               	movwf	fsr1l,c
  3016  000CAE  50F4               	movf	prodh,w,c
  3017  000CB0  0100               	movlb	0	; () banked
  3018  000CB2  0100               	movlb	0	; () banked
  3019  000CB4  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3020  000CB6  6EE2               	movwf	fsr1h,c
  3021  000CB8  CFDF FFE7          	movff	indf2,indf1
  3022                           
  3023                           ; BSR set to: 0
  3024  000CBC  0100               	movlb	0	; () banked
  3025  000CBE  EE20 F01A          	lfsr	2,26
  3026  000CC2  0100               	movlb	0	; () banked
  3027  000CC4  51C8               	movf	_ic_ptr& (0+255),w,b
  3028  000CC6  26D9               	addwf	fsr2l,f,c
  3029  000CC8  0100               	movlb	0	; () banked
  3030  000CCA  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3031  000CCC  22DA               	addwfc	fsr2h,f,c
  3032  000CCE  2ADF               	incf	indf2,f,c
  3033  000CD0                     l3096:
  3034                           
  3035                           ; BSR set to: 0
  3036  000CD0  0100               	movlb	0	; () banked
  3037  000CD2  EE20 F01A          	lfsr	2,26
  3038  000CD6  0100               	movlb	0	; () banked
  3039  000CD8  51C8               	movf	_ic_ptr& (0+255),w,b
  3040  000CDA  26D9               	addwf	fsr2l,f,c
  3041  000CDC  0100               	movlb	0	; () banked
  3042  000CDE  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3043  000CE0  22DA               	addwfc	fsr2h,f,c
  3044  000CE2  50DF               	movf	indf2,w,c
  3045  000CE4  0100               	movlb	0	; () banked
  3046  000CE6  6F91               	movwf	??_i2c_master_send& (0+255),b
  3047  000CE8  0100               	movlb	0	; () banked
  3048  000CEA  0100               	movlb	0	; () banked
  3049  000CEC  5193               	movf	i2c_master_send@sendlength& (0+255),w,b
  3050  000CEE  0100               	movlb	0	; () banked
  3051  000CF0  5D91               	subwf	??_i2c_master_send& (0+255),w,b
  3052  000CF2  A0D8               	btfss	status,0,c
  3053  000CF4  D7AB               	goto	l3092
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;my_i2c.c: 48: }
  3057                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  3058                           
  3059                           ; BSR set to: 0
  3060  000CF6  0100               	movlb	0	; () banked
  3061  000CF8  EE20 F01C          	lfsr	2,28
  3062  000CFC  0100               	movlb	0	; () banked
  3063  000CFE  51C8               	movf	_ic_ptr& (0+255),w,b
  3064  000D00  26D9               	addwf	fsr2l,f,c
  3065  000D02  0100               	movlb	0	; () banked
  3066  000D04  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3067  000D06  22DA               	addwfc	fsr2h,f,c
  3068  000D08  0100               	movlb	0	; () banked
  3069  000D0A  C090  FFDF         	movff	i2c_master_send@slave_addr,indf2
  3070                           
  3071                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  3072  000D0E  0100               	movlb	0	; () banked
  3073  000D10  EE20 F01A          	lfsr	2,26
  3074  000D14  0100               	movlb	0	; () banked
  3075  000D16  51C8               	movf	_ic_ptr& (0+255),w,b
  3076  000D18  26D9               	addwf	fsr2l,f,c
  3077  000D1A  0100               	movlb	0	; () banked
  3078  000D1C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3079  000D1E  22DA               	addwfc	fsr2h,f,c
  3080  000D20  0100               	movlb	0	; () banked
  3081  000D22  C093  FFDF         	movff	i2c_master_send@sendlength,indf2
  3082                           
  3083                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  3084  000D26  0100               	movlb	0	; () banked
  3085  000D28  EE20 F00A          	lfsr	2,10
  3086  000D2C  0100               	movlb	0	; () banked
  3087  000D2E  51C8               	movf	_ic_ptr& (0+255),w,b
  3088  000D30  26D9               	addwf	fsr2l,f,c
  3089  000D32  0100               	movlb	0	; () banked
  3090  000D34  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3091  000D36  22DA               	addwfc	fsr2h,f,c
  3092  000D38  0100               	movlb	0	; () banked
  3093  000D3A  C08D  FFDF         	movff	i2c_master_send@recvlength,indf2
  3094                           
  3095                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  3096  000D3E  0100               	movlb	0	; () banked
  3097  000D40  EE20 F00D          	lfsr	2,13
  3098  000D44  0100               	movlb	0	; () banked
  3099  000D46  51C8               	movf	_ic_ptr& (0+255),w,b
  3100  000D48  26D9               	addwf	fsr2l,f,c
  3101  000D4A  0100               	movlb	0	; () banked
  3102  000D4C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3103  000D4E  22DA               	addwfc	fsr2h,f,c
  3104  000D50  0E0A               	movlw	10
  3105  000D52  6EDF               	movwf	indf2,c
  3106                           
  3107                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  3108  000D54  0100               	movlb	0	; () banked
  3109  000D56  EE20 F01B          	lfsr	2,27
  3110  000D5A  0100               	movlb	0	; () banked
  3111  000D5C  51C8               	movf	_ic_ptr& (0+255),w,b
  3112  000D5E  26D9               	addwf	fsr2l,f,c
  3113  000D60  0100               	movlb	0	; () banked
  3114  000D62  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3115  000D64  22DA               	addwfc	fsr2h,f,c
  3116  000D66  0E00               	movlw	0
  3117  000D68  6EDF               	movwf	indf2,c
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  3121  000D6A  80C5               	bsf	4037,0,c	;volatile
  3122  000D6C  0012               	return	
  3123  000D6E                     __end_of_i2c_master_send:
  3124                           	opt stack 0
  3125                           tblptru	equ	0xFF8
  3126                           tblptrh	equ	0xFF7
  3127                           tblptrl	equ	0xFF6
  3128                           tablat	equ	0xFF5
  3129                           prodh	equ	0xFF4
  3130                           prodl	equ	0xFF3
  3131                           intcon2	equ	0xFF1
  3132                           postinc0	equ	0xFEE
  3133                           wreg	equ	0xFE8
  3134                           indf1	equ	0xFE7
  3135                           postinc1	equ	0xFE6
  3136                           postdec1	equ	0xFE5
  3137                           fsr1h	equ	0xFE2
  3138                           fsr1l	equ	0xFE1
  3139                           indf2	equ	0xFDF
  3140                           postinc2	equ	0xFDE
  3141                           postdec2	equ	0xFDD
  3142                           fsr2h	equ	0xFDA
  3143                           fsr2l	equ	0xFD9
  3144                           status	equ	0xFD8
  3145                           
  3146 ;; *************** function _i2c_configure_master *****************
  3147 ;; Defined at:
  3148 ;;		line 15 in file "../src/my_i2c.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;		None               void
  3155 ;; Registers used:
  3156 ;;		wreg, status,2
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3166 ;;Total ram usage:        0 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:   11
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text9
  3177  001C64                     __ptext9:
  3178                           	opt stack 0
  3179  001C64                     _i2c_configure_master:
  3180                           	opt stack 19
  3181                           
  3182                           ;my_i2c.c: 18: SSPSTAT = 0x0;
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;incstack = 0
  3186  001C64  0E00               	movlw	0
  3187  001C66  6EC7               	movwf	4039,c	;volatile
  3188                           
  3189                           ;my_i2c.c: 19: SSPCON1 = 0x0;
  3190  001C68  0E00               	movlw	0
  3191  001C6A  6EC6               	movwf	4038,c	;volatile
  3192                           
  3193                           ;my_i2c.c: 20: SSPCON2 = 0x0;
  3194  001C6C  0E00               	movlw	0
  3195  001C6E  6EC5               	movwf	4037,c	;volatile
  3196                           
  3197                           ;my_i2c.c: 22: TRISCbits.TRISC3 = 1;
  3198  001C70  8694               	bsf	3988,3,c	;volatile
  3199                           
  3200                           ;my_i2c.c: 23: TRISCbits.TRISC4 = 1;
  3201  001C72  8894               	bsf	3988,4,c	;volatile
  3202                           
  3203                           ;my_i2c.c: 24: SSPADD = 29;
  3204  001C74  0E1D               	movlw	29
  3205  001C76  6EC8               	movwf	4040,c	;volatile
  3206                           
  3207                           ;my_i2c.c: 27: SSPCON1bits.SSPM = 0x8;
  3208  001C78  50C6               	movf	4038,w,c	;volatile
  3209  001C7A  0BF0               	andlw	-16
  3210  001C7C  0908               	iorlw	8
  3211  001C7E  6EC6               	movwf	4038,c	;volatile
  3212                           
  3213                           ;my_i2c.c: 28: SSPCON1bits.SSPEN = 1;
  3214  001C80  8AC6               	bsf	4038,5,c	;volatile
  3215  001C82  0012               	return	
  3216  001C84                     __end_of_i2c_configure_master:
  3217                           	opt stack 0
  3218                           tblptru	equ	0xFF8
  3219                           tblptrh	equ	0xFF7
  3220                           tblptrl	equ	0xFF6
  3221                           tablat	equ	0xFF5
  3222                           prodh	equ	0xFF4
  3223                           prodl	equ	0xFF3
  3224                           intcon2	equ	0xFF1
  3225                           postinc0	equ	0xFEE
  3226                           wreg	equ	0xFE8
  3227                           indf1	equ	0xFE7
  3228                           postinc1	equ	0xFE6
  3229                           postdec1	equ	0xFE5
  3230                           fsr1h	equ	0xFE2
  3231                           fsr1l	equ	0xFE1
  3232                           indf2	equ	0xFDF
  3233                           postinc2	equ	0xFDE
  3234                           postdec2	equ	0xFDD
  3235                           fsr2h	equ	0xFDA
  3236                           fsr2l	equ	0xFD9
  3237                           status	equ	0xFD8
  3238                           
  3239 ;; *************** function _enable_interrupts *****************
  3240 ;; Defined at:
  3241 ;;		line 15 in file "../src/interrupts.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;		None               void
  3248 ;; Registers used:
  3249 ;;		None
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3259 ;;Total ram usage:        0 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:   11
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_main
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text10
  3270  001D9C                     __ptext10:
  3271                           	opt stack 0
  3272  001D9C                     _enable_interrupts:
  3273                           	opt stack 19
  3274                           
  3275                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3276                           
  3277                           ;incstack = 0
  3278  001D9C  8ED0               	bsf	4048,7,c	;volatile
  3279                           
  3280                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3281  001D9E  8EF2               	bsf	intcon,7,c	;volatile
  3282                           
  3283                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3284  001DA0  8CF2               	bsf	intcon,6,c	;volatile
  3285  001DA2  0012               	return	
  3286  001DA4                     __end_of_enable_interrupts:
  3287                           	opt stack 0
  3288                           tblptru	equ	0xFF8
  3289                           tblptrh	equ	0xFF7
  3290                           tblptrl	equ	0xFF6
  3291                           tablat	equ	0xFF5
  3292                           prodh	equ	0xFF4
  3293                           prodl	equ	0xFF3
  3294                           intcon	equ	0xFF2
  3295                           intcon2	equ	0xFF1
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           indf1	equ	0xFE7
  3299                           postinc1	equ	0xFE6
  3300                           postdec1	equ	0xFE5
  3301                           fsr1h	equ	0xFE2
  3302                           fsr1l	equ	0xFE1
  3303                           indf2	equ	0xFDF
  3304                           postinc2	equ	0xFDE
  3305                           postdec2	equ	0xFDD
  3306                           fsr2h	equ	0xFDA
  3307                           fsr2l	equ	0xFD9
  3308                           status	equ	0xFD8
  3309                           
  3310 ;; *************** function _block_on_To_msgqueues *****************
  3311 ;; Defined at:
  3312 ;;		line 258 in file "../src/messages.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;		None               void
  3319 ;; Registers used:
  3320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3328 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3329 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3330 ;;Total ram usage:        1 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:   14
  3333 ;; This function calls:
  3334 ;;		_Delay1KTCYx
  3335 ;;		_check_msg
  3336 ;;		_in_main
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text11
  3343  001528                     __ptext11:
  3344                           	opt stack 0
  3345  001528                     _block_on_To_msgqueues:
  3346                           	opt stack 16
  3347                           
  3348                           ;messages.c: 259: if (!in_main()) {
  3349                           
  3350                           ;incstack = 0
  3351  001528  ECF8  F00C         	call	_in_main	;wreg free
  3352  00152C  0100               	movlb	0	; () banked
  3353  00152E  0100               	movlb	0	; () banked
  3354  001530  5192               	movf	(?_in_main+1)& (0+255),w,b
  3355  001532  0100               	movlb	0	; () banked
  3356  001534  1191               	iorwf	?_in_main& (0+255),w,b
  3357  001536  B4D8               	btfsc	status,2,c
  3358  001538  0012               	return	
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;messages.c: 261: }
  3362                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3363                           
  3364                           ; BSR set to: 0
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;messages.c: 260: return;
  3368  00153A  0100               	movlb	0	; () banked
  3369  00153C  6F93               	movwf	??_block_on_To_msgqueues& (0+255),b
  3370  00153E  0E01               	movlw	1
  3371  001540  6E3D               	movwf	_MQ_Main_Willing_to_block,c
  3372  001542  0100               	movlb	0	; () banked
  3373  001544  5193               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3374  001546                     l3058:
  3375                           
  3376                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3377  001546  0101               	movlb	1	; () banked
  3378  001548  0E01               	movlw	high _ToMainHigh_MQ
  3379  00154A  0100               	movlb	0	; () banked
  3380  00154C  0100               	movlb	0	; () banked
  3381  00154E  6F8E               	movwf	(check_msg@qptr+1)& (0+255),b
  3382  001550  0101               	movlb	1	; () banked
  3383  001552  0E00               	movlw	low _ToMainHigh_MQ
  3384  001554  0100               	movlb	0	; () banked
  3385  001556  0100               	movlb	0	; () banked
  3386  001558  6F8D               	movwf	check_msg@qptr& (0+255),b
  3387  00155A  ECB9  F00D         	call	_check_msg	;wreg free
  3388  00155E  0900               	iorlw	0
  3389  001560  B4D8               	btfsc	status,2,c
  3390  001562  D007               	goto	l3064
  3391                           
  3392                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3393  001564  0100               	movlb	0	; () banked
  3394  001566  6F93               	movwf	??_block_on_To_msgqueues& (0+255),b
  3395  001568  0E00               	movlw	0
  3396  00156A  6E3D               	movwf	_MQ_Main_Willing_to_block,c
  3397  00156C  0100               	movlb	0	; () banked
  3398  00156E  5193               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3399  001570  0012               	return	
  3400  001572                     l3064:
  3401                           
  3402                           ;messages.c: 271: }
  3403                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3404  001572  0101               	movlb	1	; () banked
  3405  001574  0E01               	movlw	high _ToMainLow_MQ
  3406  001576  0100               	movlb	0	; () banked
  3407  001578  0100               	movlb	0	; () banked
  3408  00157A  6F8E               	movwf	(check_msg@qptr+1)& (0+255),b
  3409  00157C  0101               	movlb	1	; () banked
  3410  00157E  0E43               	movlw	low _ToMainLow_MQ
  3411  001580  0100               	movlb	0	; () banked
  3412  001582  0100               	movlb	0	; () banked
  3413  001584  6F8D               	movwf	check_msg@qptr& (0+255),b
  3414  001586  ECB9  F00D         	call	_check_msg	;wreg free
  3415  00158A  0900               	iorlw	0
  3416  00158C  B4D8               	btfsc	status,2,c
  3417  00158E  D007               	goto	l3070
  3418                           
  3419                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3420  001590  0100               	movlb	0	; () banked
  3421  001592  6F93               	movwf	??_block_on_To_msgqueues& (0+255),b
  3422  001594  0E00               	movlw	0
  3423  001596  6E3D               	movwf	_MQ_Main_Willing_to_block,c
  3424  001598  0100               	movlb	0	; () banked
  3425  00159A  5193               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3426  00159C  0012               	return	
  3427  00159E                     l3070:
  3428                           
  3429                           ;messages.c: 278: }
  3430                           ;messages.c: 279: Delay1KTCYx(10);
  3431  00159E  0E0A               	movlw	10
  3432  0015A0  EC7C  F00E         	call	_Delay1KTCYx
  3433  0015A4  D7D0               	goto	l3058
  3434  0015A6                     __end_of_block_on_To_msgqueues:
  3435                           	opt stack 0
  3436                           tblptru	equ	0xFF8
  3437                           tblptrh	equ	0xFF7
  3438                           tblptrl	equ	0xFF6
  3439                           tablat	equ	0xFF5
  3440                           prodh	equ	0xFF4
  3441                           prodl	equ	0xFF3
  3442                           intcon	equ	0xFF2
  3443                           intcon2	equ	0xFF1
  3444                           postinc0	equ	0xFEE
  3445                           wreg	equ	0xFE8
  3446                           indf1	equ	0xFE7
  3447                           postinc1	equ	0xFE6
  3448                           postdec1	equ	0xFE5
  3449                           fsr1h	equ	0xFE2
  3450                           fsr1l	equ	0xFE1
  3451                           indf2	equ	0xFDF
  3452                           postinc2	equ	0xFDE
  3453                           postdec2	equ	0xFDD
  3454                           fsr2h	equ	0xFDA
  3455                           fsr2l	equ	0xFD9
  3456                           status	equ	0xFD8
  3457                           
  3458 ;; *************** function _in_main *****************
  3459 ;; Defined at:
  3460 ;;		line 41 in file "../src/interrupts.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  2   49[BANK0 ] int 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3474 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;Total ram usage:        2 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:   13
  3481 ;; This function calls:
  3482 ;;		_in_high_int
  3483 ;;		_in_low_int
  3484 ;; This function is called by:
  3485 ;;		_block_on_To_msgqueues
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text12
  3490  0019F0                     __ptext12:
  3491                           	opt stack 0
  3492  0019F0                     _in_main:
  3493                           	opt stack 16
  3494                           
  3495                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3496                           
  3497                           ;incstack = 0
  3498  0019F0  ECB2  F00C         	call	_in_low_int	;wreg free
  3499  0019F4  0100               	movlb	0	; () banked
  3500  0019F6  0100               	movlb	0	; () banked
  3501  0019F8  5190               	movf	(?_in_low_int+1)& (0+255),w,b
  3502  0019FA  0100               	movlb	0	; () banked
  3503  0019FC  118F               	iorwf	?_in_low_int& (0+255),w,b
  3504  0019FE  A4D8               	btfss	status,2,c
  3505  001A00  D011               	goto	l2648
  3506                           
  3507                           ; BSR set to: 0
  3508  001A02  ECA4  F00E         	call	_in_high_int	;wreg free
  3509  001A06  0100               	movlb	0	; () banked
  3510  001A08  0100               	movlb	0	; () banked
  3511  001A0A  518E               	movf	(?_in_high_int+1)& (0+255),w,b
  3512  001A0C  0100               	movlb	0	; () banked
  3513  001A0E  118D               	iorwf	?_in_high_int& (0+255),w,b
  3514  001A10  A4D8               	btfss	status,2,c
  3515  001A12  D008               	goto	l2648
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;interrupts.c: 43: return (1);
  3519  001A14  0E00               	movlw	0
  3520  001A16  0100               	movlb	0	; () banked
  3521  001A18  0100               	movlb	0	; () banked
  3522  001A1A  6F92               	movwf	(?_in_main+1)& (0+255),b
  3523  001A1C  0E01               	movlw	1
  3524  001A1E  0100               	movlb	0	; () banked
  3525  001A20  6F91               	movwf	?_in_main& (0+255),b
  3526  001A22  0012               	return	
  3527  001A24                     l2648:
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;interrupts.c: 45: return (0);
  3531  001A24  0E00               	movlw	0
  3532  001A26  0100               	movlb	0	; () banked
  3533  001A28  0100               	movlb	0	; () banked
  3534  001A2A  6F92               	movwf	(?_in_main+1)& (0+255),b
  3535  001A2C  0E00               	movlw	0
  3536  001A2E  0100               	movlb	0	; () banked
  3537  001A30  6F91               	movwf	?_in_main& (0+255),b
  3538  001A32  0012               	return	
  3539  001A34                     __end_of_in_main:
  3540                           	opt stack 0
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           prodh	equ	0xFF4
  3546                           prodl	equ	0xFF3
  3547                           intcon	equ	0xFF2
  3548                           intcon2	equ	0xFF1
  3549                           postinc0	equ	0xFEE
  3550                           wreg	equ	0xFE8
  3551                           indf1	equ	0xFE7
  3552                           postinc1	equ	0xFE6
  3553                           postdec1	equ	0xFE5
  3554                           fsr1h	equ	0xFE2
  3555                           fsr1l	equ	0xFE1
  3556                           indf2	equ	0xFDF
  3557                           postinc2	equ	0xFDE
  3558                           postdec2	equ	0xFDD
  3559                           fsr2h	equ	0xFDA
  3560                           fsr2l	equ	0xFD9
  3561                           status	equ	0xFD8
  3562                           
  3563 ;; *************** function _in_low_int *****************
  3564 ;; Defined at:
  3565 ;;		line 31 in file "../src/interrupts.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  2   47[BANK0 ] int 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3579 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3582 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3583 ;;Total ram usage:        2 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:   12
  3586 ;; This function calls:
  3587 ;;		_in_high_int
  3588 ;; This function is called by:
  3589 ;;		_in_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text13
  3594  001964                     __ptext13:
  3595                           	opt stack 0
  3596  001964                     _in_low_int:
  3597                           	opt stack 16
  3598                           
  3599                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;incstack = 0
  3603  001964  ACF2               	btfss	intcon,6,c	;volatile
  3604  001966  D008               	goto	l2626
  3605                           
  3606                           ;interrupts.c: 33: return (0);
  3607  001968  0E00               	movlw	0
  3608  00196A  0100               	movlb	0	; () banked
  3609  00196C  0100               	movlb	0	; () banked
  3610  00196E  6F90               	movwf	(?_in_low_int+1)& (0+255),b
  3611  001970  0E00               	movlw	0
  3612  001972  0100               	movlb	0	; () banked
  3613  001974  6F8F               	movwf	?_in_low_int& (0+255),b
  3614  001976  0012               	return	
  3615  001978                     l2626:
  3616  001978  ECA4  F00E         	call	_in_high_int	;wreg free
  3617  00197C  0100               	movlb	0	; () banked
  3618  00197E  0100               	movlb	0	; () banked
  3619  001980  518E               	movf	(?_in_high_int+1)& (0+255),w,b
  3620  001982  0100               	movlb	0	; () banked
  3621  001984  118D               	iorwf	?_in_high_int& (0+255),w,b
  3622  001986  B4D8               	btfsc	status,2,c
  3623  001988  D008               	goto	l2634
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;interrupts.c: 35: return (0);
  3627  00198A  0E00               	movlw	0
  3628  00198C  0100               	movlb	0	; () banked
  3629  00198E  0100               	movlb	0	; () banked
  3630  001990  6F90               	movwf	(?_in_low_int+1)& (0+255),b
  3631  001992  0E00               	movlw	0
  3632  001994  0100               	movlb	0	; () banked
  3633  001996  6F8F               	movwf	?_in_low_int& (0+255),b
  3634  001998  0012               	return	
  3635  00199A                     l2634:
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;interrupts.c: 37: return (1);
  3639  00199A  0E00               	movlw	0
  3640  00199C  0100               	movlb	0	; () banked
  3641  00199E  0100               	movlb	0	; () banked
  3642  0019A0  6F90               	movwf	(?_in_low_int+1)& (0+255),b
  3643  0019A2  0E01               	movlw	1
  3644  0019A4  0100               	movlb	0	; () banked
  3645  0019A6  6F8F               	movwf	?_in_low_int& (0+255),b
  3646  0019A8  0012               	return	
  3647  0019AA                     __end_of_in_low_int:
  3648                           	opt stack 0
  3649                           tblptru	equ	0xFF8
  3650                           tblptrh	equ	0xFF7
  3651                           tblptrl	equ	0xFF6
  3652                           tablat	equ	0xFF5
  3653                           prodh	equ	0xFF4
  3654                           prodl	equ	0xFF3
  3655                           intcon	equ	0xFF2
  3656                           intcon2	equ	0xFF1
  3657                           postinc0	equ	0xFEE
  3658                           wreg	equ	0xFE8
  3659                           indf1	equ	0xFE7
  3660                           postinc1	equ	0xFE6
  3661                           postdec1	equ	0xFE5
  3662                           fsr1h	equ	0xFE2
  3663                           fsr1l	equ	0xFE1
  3664                           indf2	equ	0xFDF
  3665                           postinc2	equ	0xFDE
  3666                           postdec2	equ	0xFDD
  3667                           fsr2h	equ	0xFDA
  3668                           fsr2l	equ	0xFD9
  3669                           status	equ	0xFD8
  3670                           
  3671 ;; *************** function _in_high_int *****************
  3672 ;; Defined at:
  3673 ;;		line 23 in file "../src/interrupts.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  2   45[BANK0 ] int 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3687 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3690 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3691 ;;Total ram usage:        2 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:   11
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_in_low_int
  3698 ;;		_in_main
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text14
  3703  001D48                     __ptext14:
  3704                           	opt stack 0
  3705  001D48                     _in_high_int:
  3706                           	opt stack 16
  3707                           
  3708                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;incstack = 0
  3712  001D48  0E00               	movlw	0
  3713  001D4A  AEF2               	btfss	intcon,7,c	;volatile
  3714  001D4C  0E01               	movlw	1
  3715  001D4E  0100               	movlb	0	; () banked
  3716  001D50  0100               	movlb	0	; () banked
  3717  001D52  6F8D               	movwf	?_in_high_int& (0+255),b
  3718  001D54  0100               	movlb	0	; () banked
  3719  001D56  6B8E               	clrf	(?_in_high_int+1)& (0+255),b
  3720  001D58  0012               	return	
  3721  001D5A                     __end_of_in_high_int:
  3722                           	opt stack 0
  3723                           tblptru	equ	0xFF8
  3724                           tblptrh	equ	0xFF7
  3725                           tblptrl	equ	0xFF6
  3726                           tablat	equ	0xFF5
  3727                           prodh	equ	0xFF4
  3728                           prodl	equ	0xFF3
  3729                           intcon	equ	0xFF2
  3730                           intcon2	equ	0xFF1
  3731                           postinc0	equ	0xFEE
  3732                           wreg	equ	0xFE8
  3733                           indf1	equ	0xFE7
  3734                           postinc1	equ	0xFE6
  3735                           postdec1	equ	0xFE5
  3736                           fsr1h	equ	0xFE2
  3737                           fsr1l	equ	0xFE1
  3738                           indf2	equ	0xFDF
  3739                           postinc2	equ	0xFDE
  3740                           postdec2	equ	0xFDD
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           status	equ	0xFD8
  3744                           
  3745 ;; *************** function _check_msg *****************
  3746 ;; Defined at:
  3747 ;;		line 222 in file "../src/messages.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  3750 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      unsigned char 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3762 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3764 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3765 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;Total ram usage:        3 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:   11
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_block_on_To_msgqueues
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text15
  3777  001B72                     __ptext15:
  3778                           	opt stack 0
  3779  001B72                     _check_msg:
  3780                           	opt stack 18
  3781                           
  3782                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;incstack = 0
  3786  001B72  0100               	movlb	0	; () banked
  3787  001B74  EE20 F042          	lfsr	2,66
  3788  001B78  0100               	movlb	0	; () banked
  3789  001B7A  518D               	movf	check_msg@qptr& (0+255),w,b
  3790  001B7C  26D9               	addwf	fsr2l,f,c
  3791  001B7E  0100               	movlb	0	; () banked
  3792  001B80  518E               	movf	(check_msg@qptr+1)& (0+255),w,b
  3793  001B82  22DA               	addwfc	fsr2h,f,c
  3794  001B84  50DF               	movf	indf2,w,c
  3795  001B86  0100               	movlb	0	; () banked
  3796  001B88  6F8F               	movwf	??_check_msg& (0+255),b
  3797  001B8A  0100               	movlb	0	; () banked
  3798  001B8C  518F               	movf	??_check_msg& (0+255),w,b
  3799  001B8E  0D0D               	mullw	13
  3800  001B90  50F3               	movf	prodl,w,c
  3801  001B92  0100               	movlb	0	; () banked
  3802  001B94  0100               	movlb	0	; () banked
  3803  001B96  258D               	addwf	check_msg@qptr& (0+255),w,b
  3804  001B98  6ED9               	movwf	fsr2l,c
  3805  001B9A  50F4               	movf	prodh,w,c
  3806  001B9C  0100               	movlb	0	; () banked
  3807  001B9E  0100               	movlb	0	; () banked
  3808  001BA0  218E               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3809  001BA2  6EDA               	movwf	fsr2h,c
  3810  001BA4  50DF               	movf	indf2,w,c
  3811  001BA6  0012               	return	
  3812  001BA8                     __end_of_check_msg:
  3813                           	opt stack 0
  3814                           tblptru	equ	0xFF8
  3815                           tblptrh	equ	0xFF7
  3816                           tblptrl	equ	0xFF6
  3817                           tablat	equ	0xFF5
  3818                           prodh	equ	0xFF4
  3819                           prodl	equ	0xFF3
  3820                           intcon	equ	0xFF2
  3821                           intcon2	equ	0xFF1
  3822                           postinc0	equ	0xFEE
  3823                           wreg	equ	0xFE8
  3824                           indf1	equ	0xFE7
  3825                           postinc1	equ	0xFE6
  3826                           postdec1	equ	0xFE5
  3827                           fsr1h	equ	0xFE2
  3828                           fsr1l	equ	0xFE1
  3829                           indf2	equ	0xFDF
  3830                           postinc2	equ	0xFDE
  3831                           postdec2	equ	0xFDD
  3832                           fsr2h	equ	0xFDA
  3833                           fsr2l	equ	0xFD9
  3834                           status	equ	0xFD8
  3835                           
  3836 ;; *************** function _Delay1KTCYx *****************
  3837 ;; Defined at:
  3838 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  unit            1    wreg     unsigned char 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  unit            1   45[BANK0 ] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;		None               void
  3845 ;; Registers used:
  3846 ;;		wreg
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3853 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3855 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3856 ;;Total ram usage:        1 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:   11
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_block_on_To_msgqueues
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text16
  3867  001CF8                     __ptext16:
  3868                           	opt stack 0
  3869  001CF8                     _Delay1KTCYx:
  3870                           	opt stack 18
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;incstack = 0
  3874                           ;Delay1KTCYx@unit stored from wreg
  3875  001CF8  CFE8 F08D          	movff	wreg,Delay1KTCYx@unit
  3876  001CFC                     l854:
  3877  001CFC  0EFA               	movlw	250
  3878  001CFE                     u3727:
  3879  001CFE  F000               	nop	
  3880  001D00  2EE8               	decfsz	wreg,f,c
  3881  001D02  D7FD               	goto	u3727
  3882  001D04  0100               	movlb	0	; () banked
  3883  001D06  0100               	movlb	0	; () banked
  3884  001D08  2F8D               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3885  001D0A  D7F8               	goto	l854
  3886  001D0C  0012               	return	
  3887  001D0E                     __end_of_Delay1KTCYx:
  3888                           	opt stack 0
  3889                           tblptru	equ	0xFF8
  3890                           tblptrh	equ	0xFF7
  3891                           tblptrl	equ	0xFF6
  3892                           tablat	equ	0xFF5
  3893                           prodh	equ	0xFF4
  3894                           prodl	equ	0xFF3
  3895                           intcon	equ	0xFF2
  3896                           intcon2	equ	0xFF1
  3897                           postinc0	equ	0xFEE
  3898                           wreg	equ	0xFE8
  3899                           indf1	equ	0xFE7
  3900                           postinc1	equ	0xFE6
  3901                           postdec1	equ	0xFE5
  3902                           fsr1h	equ	0xFE2
  3903                           fsr1l	equ	0xFE1
  3904                           indf2	equ	0xFDF
  3905                           postinc2	equ	0xFDE
  3906                           postdec2	equ	0xFDD
  3907                           fsr2h	equ	0xFDA
  3908                           fsr2l	equ	0xFD9
  3909                           status	equ	0xFD8
  3910                           
  3911 ;; *************** function _ToMainLow_recvmsg *****************
  3912 ;; Defined at:
  3913 ;;		line 112 in file "../src/messages.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  maxlength       1    wreg     unsigned char 
  3916 ;;  msgtype         2   69[BANK0 ] PTR unsigned char 
  3917 ;;		 -> main@msgtype(1), 
  3918 ;;  data            2   71[BANK0 ] PTR void 
  3919 ;;		 -> main@msgbuffer(11), 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  maxlength       1   73[BANK0 ] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      char 
  3924 ;; Registers used:
  3925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3931 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3932 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3934 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3935 ;;Total ram usage:        5 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:   13
  3938 ;; This function calls:
  3939 ;;		_recv_msg
  3940 ;; This function is called by:
  3941 ;;		_main
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text17
  3946  001A34                     __ptext17:
  3947                           	opt stack 0
  3948  001A34                     _ToMainLow_recvmsg:
  3949                           	opt stack 17
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;incstack = 0
  3953                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3954  001A34  CFE8 F0A9          	movff	wreg,ToMainLow_recvmsg@maxlength
  3955                           
  3956                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3957  001A38  0101               	movlb	1	; () banked
  3958  001A3A  0E01               	movlw	high _ToMainLow_MQ
  3959  001A3C  0100               	movlb	0	; () banked
  3960  001A3E  0100               	movlb	0	; () banked
  3961  001A40  6F98               	movwf	(recv_msg@qptr+1)& (0+255),b
  3962  001A42  0101               	movlb	1	; () banked
  3963  001A44  0E43               	movlw	low _ToMainLow_MQ
  3964  001A46  0100               	movlb	0	; () banked
  3965  001A48  0100               	movlb	0	; () banked
  3966  001A4A  6F97               	movwf	recv_msg@qptr& (0+255),b
  3967  001A4C  C0A9  F099         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3968  001A50  0100               	movlb	0	; () banked
  3969  001A52  0100               	movlb	0	; () banked
  3970  001A54  C0A6  F09B         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3971  001A58  0100               	movlb	0	; () banked
  3972  001A5A  0100               	movlb	0	; () banked
  3973  001A5C  C0A5  F09A         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3974  001A60  0100               	movlb	0	; () banked
  3975  001A62  0100               	movlb	0	; () banked
  3976  001A64  C0A8  F09D         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3977  001A68  0100               	movlb	0	; () banked
  3978  001A6A  0100               	movlb	0	; () banked
  3979  001A6C  C0A7  F09C         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3980  001A70  EC69  F005         	call	_recv_msg	;wreg free
  3981  001A74  0012               	return	
  3982  001A76                     __end_of_ToMainLow_recvmsg:
  3983                           	opt stack 0
  3984                           tblptru	equ	0xFF8
  3985                           tblptrh	equ	0xFF7
  3986                           tblptrl	equ	0xFF6
  3987                           tablat	equ	0xFF5
  3988                           prodh	equ	0xFF4
  3989                           prodl	equ	0xFF3
  3990                           intcon	equ	0xFF2
  3991                           intcon2	equ	0xFF1
  3992                           postinc0	equ	0xFEE
  3993                           wreg	equ	0xFE8
  3994                           indf1	equ	0xFE7
  3995                           postinc1	equ	0xFE6
  3996                           postdec1	equ	0xFE5
  3997                           fsr1h	equ	0xFE2
  3998                           fsr1l	equ	0xFE1
  3999                           indf2	equ	0xFDF
  4000                           postinc2	equ	0xFDE
  4001                           postdec2	equ	0xFDD
  4002                           fsr2h	equ	0xFDA
  4003                           fsr2l	equ	0xFD9
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function _ToMainHigh_recvmsg *****************
  4007 ;; Defined at:
  4008 ;;		line 135 in file "../src/messages.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  maxlength       1    wreg     unsigned char 
  4011 ;;  msgtype         2   69[BANK0 ] PTR unsigned char 
  4012 ;;		 -> main@msgtype(1), 
  4013 ;;  data            2   71[BANK0 ] PTR void 
  4014 ;;		 -> main@msgbuffer(11), 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  maxlength       1   73[BANK0 ] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      char 
  4019 ;; Registers used:
  4020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4026 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4029 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4030 ;;Total ram usage:        5 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:   13
  4033 ;; This function calls:
  4034 ;;		_recv_msg
  4035 ;; This function is called by:
  4036 ;;		_main
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text18
  4041  001A76                     __ptext18:
  4042                           	opt stack 0
  4043  001A76                     _ToMainHigh_recvmsg:
  4044                           	opt stack 17
  4045                           
  4046                           ;incstack = 0
  4047                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4048  001A76  CFE8 F0A9          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4049                           
  4050                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4051  001A7A  0101               	movlb	1	; () banked
  4052  001A7C  0E01               	movlw	high _ToMainHigh_MQ
  4053  001A7E  0100               	movlb	0	; () banked
  4054  001A80  0100               	movlb	0	; () banked
  4055  001A82  6F98               	movwf	(recv_msg@qptr+1)& (0+255),b
  4056  001A84  0101               	movlb	1	; () banked
  4057  001A86  0E00               	movlw	low _ToMainHigh_MQ
  4058  001A88  0100               	movlb	0	; () banked
  4059  001A8A  0100               	movlb	0	; () banked
  4060  001A8C  6F97               	movwf	recv_msg@qptr& (0+255),b
  4061  001A8E  C0A9  F099         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4062  001A92  0100               	movlb	0	; () banked
  4063  001A94  0100               	movlb	0	; () banked
  4064  001A96  C0A6  F09B         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4065  001A9A  0100               	movlb	0	; () banked
  4066  001A9C  0100               	movlb	0	; () banked
  4067  001A9E  C0A5  F09A         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4068  001AA2  0100               	movlb	0	; () banked
  4069  001AA4  0100               	movlb	0	; () banked
  4070  001AA6  C0A8  F09D         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4071  001AAA  0100               	movlb	0	; () banked
  4072  001AAC  0100               	movlb	0	; () banked
  4073  001AAE  C0A7  F09C         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4074  001AB2  EC69  F005         	call	_recv_msg	;wreg free
  4075  001AB6  0012               	return	
  4076  001AB8                     __end_of_ToMainHigh_recvmsg:
  4077                           	opt stack 0
  4078                           tblptru	equ	0xFF8
  4079                           tblptrh	equ	0xFF7
  4080                           tblptrl	equ	0xFF6
  4081                           tablat	equ	0xFF5
  4082                           prodh	equ	0xFF4
  4083                           prodl	equ	0xFF3
  4084                           intcon	equ	0xFF2
  4085                           intcon2	equ	0xFF1
  4086                           postinc0	equ	0xFEE
  4087                           wreg	equ	0xFE8
  4088                           indf1	equ	0xFE7
  4089                           postinc1	equ	0xFE6
  4090                           postdec1	equ	0xFE5
  4091                           fsr1h	equ	0xFE2
  4092                           fsr1l	equ	0xFE1
  4093                           indf2	equ	0xFDF
  4094                           postinc2	equ	0xFDE
  4095                           postdec2	equ	0xFDD
  4096                           fsr2h	equ	0xFDA
  4097                           fsr2l	equ	0xFD9
  4098                           status	equ	0xFD8
  4099                           
  4100 ;; *************** function _recv_msg *****************
  4101 ;; Defined at:
  4102 ;;		line 63 in file "../src/messages.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  qptr            2   55[BANK0 ] PTR struct __msg_queue
  4105 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4106 ;;  maxlength       1   57[BANK0 ] unsigned char 
  4107 ;;  msgtype         2   58[BANK0 ] PTR unsigned char 
  4108 ;;		 -> main@msgtype(1), 
  4109 ;;  data            2   60[BANK0 ] PTR void 
  4110 ;;		 -> main@msgbuffer(11), 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  qmsg            2   67[BANK0 ] PTR struct __msg
  4113 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4114 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4115 ;;  tlength         2   65[BANK0 ] unsigned int 
  4116 ;;  slot            1   64[BANK0 ] unsigned char 
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      char 
  4119 ;; Registers used:
  4120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4126 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4127 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4128 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4129 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4130 ;;Total ram usage:       14 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:   12
  4133 ;; This function calls:
  4134 ;;		___awmod
  4135 ;;		_memcpy
  4136 ;; This function is called by:
  4137 ;;		_ToMainLow_recvmsg
  4138 ;;		_ToMainHigh_recvmsg
  4139 ;;		_FromMainLow_recvmsg
  4140 ;;		_FromMainHigh_recvmsg
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text19
  4145  000AD2                     __ptext19:
  4146                           	opt stack 0
  4147  000AD2                     _recv_msg:
  4148                           	opt stack 17
  4149                           
  4150                           ;messages.c: 64: unsigned char slot;
  4151                           ;messages.c: 68: msg *qmsg;
  4152                           ;messages.c: 69: size_t tlength;
  4153                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4154                           
  4155                           ;incstack = 0
  4156  000AD2  0100               	movlb	0	; () banked
  4157  000AD4  EE20 F042          	lfsr	2,66
  4158  000AD8  0100               	movlb	0	; () banked
  4159  000ADA  5197               	movf	recv_msg@qptr& (0+255),w,b
  4160  000ADC  26D9               	addwf	fsr2l,f,c
  4161  000ADE  0100               	movlb	0	; () banked
  4162  000AE0  5198               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4163  000AE2  22DA               	addwfc	fsr2h,f,c
  4164  000AE4  50DF               	movf	indf2,w,c
  4165  000AE6  0100               	movlb	0	; () banked
  4166  000AE8  0100               	movlb	0	; () banked
  4167  000AEA  6FA0               	movwf	recv_msg@slot& (0+255),b
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4171  000AEC  0100               	movlb	0	; () banked
  4172  000AEE  0100               	movlb	0	; () banked
  4173  000AF0  51A0               	movf	recv_msg@slot& (0+255),w,b
  4174  000AF2  0D0D               	mullw	13
  4175  000AF4  50F3               	movf	prodl,w,c
  4176  000AF6  0100               	movlb	0	; () banked
  4177  000AF8  0100               	movlb	0	; () banked
  4178  000AFA  2597               	addwf	recv_msg@qptr& (0+255),w,b
  4179  000AFC  0100               	movlb	0	; () banked
  4180  000AFE  0100               	movlb	0	; () banked
  4181  000B00  6FA3               	movwf	recv_msg@qmsg& (0+255),b
  4182  000B02  50F4               	movf	prodh,w,c
  4183  000B04  0100               	movlb	0	; () banked
  4184  000B06  0100               	movlb	0	; () banked
  4185  000B08  2198               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4186  000B0A  0100               	movlb	0	; () banked
  4187  000B0C  6FA4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;messages.c: 74: if (qmsg->full == 1) {
  4191  000B0E  0E01               	movlw	1
  4192  000B10  C0A3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4193  000B14  C0A4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4194  000B18  62DF               	cpfseq	indf2,c
  4195  000B1A  D088               	goto	l3160
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4199  000B1C  0100               	movlb	0	; () banked
  4200  000B1E  EE20 F001          	lfsr	2,1
  4201  000B22  0100               	movlb	0	; () banked
  4202  000B24  51A3               	movf	recv_msg@qmsg& (0+255),w,b
  4203  000B26  26D9               	addwf	fsr2l,f,c
  4204  000B28  0100               	movlb	0	; () banked
  4205  000B2A  51A4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4206  000B2C  22DA               	addwfc	fsr2h,f,c
  4207  000B2E  50DF               	movf	indf2,w,c
  4208  000B30  0100               	movlb	0	; () banked
  4209  000B32  0100               	movlb	0	; () banked
  4210  000B34  5D99               	subwf	recv_msg@maxlength& (0+255),w,b
  4211  000B36  B0D8               	btfsc	status,0,c
  4212  000B38  D002               	goto	l3144
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;messages.c: 77: return (-3);
  4216  000B3A  0EFD               	movlw	253
  4217  000B3C  0012               	return	
  4218  000B3E                     l3144:
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;messages.c: 78: }
  4222                           ;messages.c: 80: tlength = qmsg->length;
  4223  000B3E  0100               	movlb	0	; () banked
  4224  000B40  EE20 F001          	lfsr	2,1
  4225  000B44  0100               	movlb	0	; () banked
  4226  000B46  51A3               	movf	recv_msg@qmsg& (0+255),w,b
  4227  000B48  26D9               	addwf	fsr2l,f,c
  4228  000B4A  0100               	movlb	0	; () banked
  4229  000B4C  51A4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4230  000B4E  22DA               	addwfc	fsr2h,f,c
  4231  000B50  50DF               	movf	indf2,w,c
  4232  000B52  0100               	movlb	0	; () banked
  4233  000B54  6F9E               	movwf	??_recv_msg& (0+255),b
  4234  000B56  0100               	movlb	0	; () banked
  4235  000B58  519E               	movf	??_recv_msg& (0+255),w,b
  4236  000B5A  0100               	movlb	0	; () banked
  4237  000B5C  0100               	movlb	0	; () banked
  4238  000B5E  6FA1               	movwf	recv_msg@tlength& (0+255),b
  4239  000B60  0100               	movlb	0	; () banked
  4240  000B62  6BA2               	clrf	(recv_msg@tlength+1)& (0+255),b
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4244  000B64  0100               	movlb	0	; () banked
  4245  000B66  0100               	movlb	0	; () banked
  4246  000B68  C09D  F08E         	movff	recv_msg@data+1,memcpy@d1+1
  4247  000B6C  0100               	movlb	0	; () banked
  4248  000B6E  0100               	movlb	0	; () banked
  4249  000B70  C09C  F08D         	movff	recv_msg@data,memcpy@d1
  4250  000B74  0E03               	movlw	3
  4251  000B76  0100               	movlb	0	; () banked
  4252  000B78  0100               	movlb	0	; () banked
  4253  000B7A  25A3               	addwf	recv_msg@qmsg& (0+255),w,b
  4254  000B7C  0100               	movlb	0	; () banked
  4255  000B7E  6F9E               	movwf	??_recv_msg& (0+255),b
  4256  000B80  0E00               	movlw	0
  4257  000B82  0100               	movlb	0	; () banked
  4258  000B84  0100               	movlb	0	; () banked
  4259  000B86  21A4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4260  000B88  0100               	movlb	0	; () banked
  4261  000B8A  6F9F               	movwf	(??_recv_msg+1)& (0+255),b
  4262  000B8C  C09E  F08F         	movff	??_recv_msg,memcpy@s1
  4263  000B90  C09F  F090         	movff	??_recv_msg+1,memcpy@s1+1
  4264  000B94  C0A1  F091         	movff	recv_msg@tlength,memcpy@n
  4265  000B98  C0A2  F092         	movff	recv_msg@tlength+1,memcpy@n+1
  4266  000B9C  EC54  F00C         	call	_memcpy	;wreg free
  4267                           
  4268                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4269  000BA0  0100               	movlb	0	; () banked
  4270  000BA2  EE20 F042          	lfsr	2,66
  4271  000BA6  0100               	movlb	0	; () banked
  4272  000BA8  5197               	movf	recv_msg@qptr& (0+255),w,b
  4273  000BAA  26D9               	addwf	fsr2l,f,c
  4274  000BAC  0100               	movlb	0	; () banked
  4275  000BAE  5198               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4276  000BB0  22DA               	addwfc	fsr2h,f,c
  4277  000BB2  0100               	movlb	0	; () banked
  4278  000BB4  EE10 F042          	lfsr	1,66
  4279  000BB8  0100               	movlb	0	; () banked
  4280  000BBA  5197               	movf	recv_msg@qptr& (0+255),w,b
  4281  000BBC  26E1               	addwf	fsr1l,f,c
  4282  000BBE  0100               	movlb	0	; () banked
  4283  000BC0  5198               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4284  000BC2  22E2               	addwfc	fsr1h,f,c
  4285  000BC4  50E7               	movf	indf1,w,c
  4286  000BC6  0100               	movlb	0	; () banked
  4287  000BC8  6F9E               	movwf	??_recv_msg& (0+255),b
  4288  000BCA  0E01               	movlw	1
  4289  000BCC  0100               	movlb	0	; () banked
  4290  000BCE  259E               	addwf	??_recv_msg& (0+255),w,b
  4291  000BD0  0100               	movlb	0	; () banked
  4292  000BD2  0100               	movlb	0	; () banked
  4293  000BD4  6F8D               	movwf	___awmod@dividend& (0+255),b
  4294  000BD6  0100               	movlb	0	; () banked
  4295  000BD8  0100               	movlb	0	; () banked
  4296  000BDA  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
  4297  000BDC  0E00               	movlw	0
  4298  000BDE  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4299  000BE0  0E00               	movlw	0
  4300  000BE2  0100               	movlb	0	; () banked
  4301  000BE4  0100               	movlb	0	; () banked
  4302  000BE6  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
  4303  000BE8  0E05               	movlw	5
  4304  000BEA  0100               	movlb	0	; () banked
  4305  000BEC  6F8F               	movwf	___awmod@divisor& (0+255),b
  4306  000BEE  EC4D  F007         	call	___awmod	;wreg free
  4307  000BF2  0100               	movlb	0	; () banked
  4308  000BF4  0100               	movlb	0	; () banked
  4309  000BF6  518D               	movf	?___awmod& (0+255),w,b
  4310  000BF8  6EDF               	movwf	indf2,c
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4314  000BFA  0100               	movlb	0	; () banked
  4315  000BFC  EE20 F002          	lfsr	2,2
  4316  000C00  0100               	movlb	0	; () banked
  4317  000C02  51A3               	movf	recv_msg@qmsg& (0+255),w,b
  4318  000C04  26D9               	addwf	fsr2l,f,c
  4319  000C06  0100               	movlb	0	; () banked
  4320  000C08  51A4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4321  000C0A  22DA               	addwfc	fsr2h,f,c
  4322  000C0C  C09A  FFE1         	movff	recv_msg@msgtype,fsr1l
  4323  000C10  C09B  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4324  000C14  CFDF FFE7          	movff	indf2,indf1
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;messages.c: 91: qmsg->full = 0;
  4328  000C18  C0A3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4329  000C1C  C0A4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4330  000C20  0E00               	movlw	0
  4331  000C22  6EDF               	movwf	indf2,c
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;messages.c: 92: return (tlength);
  4335  000C24  0100               	movlb	0	; () banked
  4336  000C26  0100               	movlb	0	; () banked
  4337  000C28  51A1               	movf	recv_msg@tlength& (0+255),w,b
  4338  000C2A  0012               	return	
  4339  000C2C                     l3160:
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;messages.c: 94: return (-4);
  4343  000C2C  0EFC               	movlw	252
  4344  000C2E  0012               	return	
  4345  000C30                     __end_of_recv_msg:
  4346                           	opt stack 0
  4347                           tblptru	equ	0xFF8
  4348                           tblptrh	equ	0xFF7
  4349                           tblptrl	equ	0xFF6
  4350                           tablat	equ	0xFF5
  4351                           prodh	equ	0xFF4
  4352                           prodl	equ	0xFF3
  4353                           intcon	equ	0xFF2
  4354                           intcon2	equ	0xFF1
  4355                           postinc0	equ	0xFEE
  4356                           wreg	equ	0xFE8
  4357                           indf1	equ	0xFE7
  4358                           postinc1	equ	0xFE6
  4359                           postdec1	equ	0xFE5
  4360                           fsr1h	equ	0xFE2
  4361                           fsr1l	equ	0xFE1
  4362                           indf2	equ	0xFDF
  4363                           postinc2	equ	0xFDE
  4364                           postdec2	equ	0xFDD
  4365                           fsr2h	equ	0xFDA
  4366                           fsr2l	equ	0xFD9
  4367                           status	equ	0xFD8
  4368                           
  4369 ;; *************** function _memcpy *****************
  4370 ;; Defined at:
  4371 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  d1              2   45[BANK0 ] PTR void 
  4374 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4375 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4376 ;;		 -> main@msgbuffer(11), 
  4377 ;;  s1              2   47[BANK0 ] PTR const void 
  4378 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4379 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4380 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4381 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  4382 ;;  n               2   49[BANK0 ] unsigned int 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  s               2   53[BANK0 ] PTR const unsigned char 
  4385 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4386 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4387 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4388 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  4389 ;;  d               2   51[BANK0 ] PTR unsigned char 
  4390 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4391 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4392 ;;		 -> main@msgbuffer(11), 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  2   45[BANK0 ] PTR void 
  4395 ;; Registers used:
  4396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4402 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4403 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4405 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4406 ;;Total ram usage:       10 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:   11
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_recv_msg
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text20
  4417  0018A8                     __ptext20:
  4418                           	opt stack 0
  4419  0018A8                     _memcpy:
  4420                           	opt stack 17
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;incstack = 0
  4424  0018A8  0100               	movlb	0	; () banked
  4425  0018AA  0100               	movlb	0	; () banked
  4426  0018AC  C090  F096         	movff	memcpy@s1+1,memcpy@s+1
  4427  0018B0  0100               	movlb	0	; () banked
  4428  0018B2  0100               	movlb	0	; () banked
  4429  0018B4  C08F  F095         	movff	memcpy@s1,memcpy@s
  4430  0018B8  0100               	movlb	0	; () banked
  4431  0018BA  0100               	movlb	0	; () banked
  4432  0018BC  C08E  F094         	movff	memcpy@d1+1,memcpy@d+1
  4433  0018C0  0100               	movlb	0	; () banked
  4434  0018C2  0100               	movlb	0	; () banked
  4435  0018C4  C08D  F093         	movff	memcpy@d1,memcpy@d
  4436  0018C8  D012               	goto	l3130
  4437  0018CA                     l3124:
  4438                           
  4439                           ; BSR set to: 0
  4440  0018CA  C095  FFD9         	movff	memcpy@s,fsr2l
  4441  0018CE  C096  FFDA         	movff	memcpy@s+1,fsr2h
  4442  0018D2  C093  FFE1         	movff	memcpy@d,fsr1l
  4443  0018D6  C094  FFE2         	movff	memcpy@d+1,fsr1h
  4444  0018DA  CFDF FFE7          	movff	indf2,indf1
  4445                           
  4446                           ; BSR set to: 0
  4447  0018DE  0100               	movlb	0	; () banked
  4448  0018E0  0100               	movlb	0	; () banked
  4449  0018E2  4B95               	infsnz	memcpy@s& (0+255),f,b
  4450  0018E4  2B96               	incf	(memcpy@s+1)& (0+255),f,b
  4451                           
  4452                           ; BSR set to: 0
  4453  0018E6  0100               	movlb	0	; () banked
  4454  0018E8  0100               	movlb	0	; () banked
  4455  0018EA  4B93               	infsnz	memcpy@d& (0+255),f,b
  4456  0018EC  2B94               	incf	(memcpy@d+1)& (0+255),f,b
  4457  0018EE                     l3130:
  4458                           
  4459                           ; BSR set to: 0
  4460  0018EE  0100               	movlb	0	; () banked
  4461  0018F0  0100               	movlb	0	; () banked
  4462  0018F2  0791               	decf	memcpy@n& (0+255),f,b
  4463  0018F4  A0D8               	btfss	status,0,c
  4464  0018F6  0792               	decf	(memcpy@n+1)& (0+255),f,b
  4465  0018F8  0100               	movlb	0	; () banked
  4466  0018FA  2991               	incf	memcpy@n& (0+255),w,b
  4467  0018FC  B4D8               	btfsc	status,2,c
  4468  0018FE  2992               	incf	(memcpy@n+1)& (0+255),w,b
  4469  001900  B4D8               	btfsc	status,2,c
  4470                           
  4471                           ; BSR set to: 0
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;	Return value of _memcpy is never used
  4475  001902  0012               	return	
  4476  001904  D7E2               	goto	l3124
  4477  001906                     __end_of_memcpy:
  4478                           	opt stack 0
  4479                           tblptru	equ	0xFF8
  4480                           tblptrh	equ	0xFF7
  4481                           tblptrl	equ	0xFF6
  4482                           tablat	equ	0xFF5
  4483                           prodh	equ	0xFF4
  4484                           prodl	equ	0xFF3
  4485                           intcon	equ	0xFF2
  4486                           intcon2	equ	0xFF1
  4487                           postinc0	equ	0xFEE
  4488                           wreg	equ	0xFE8
  4489                           indf1	equ	0xFE7
  4490                           postinc1	equ	0xFE6
  4491                           postdec1	equ	0xFE5
  4492                           fsr1h	equ	0xFE2
  4493                           fsr1l	equ	0xFE1
  4494                           indf2	equ	0xFDF
  4495                           postinc2	equ	0xFDE
  4496                           postdec2	equ	0xFDD
  4497                           fsr2h	equ	0xFDA
  4498                           fsr2l	equ	0xFD9
  4499                           status	equ	0xFD8
  4500                           
  4501 ;; *************** function ___awmod *****************
  4502 ;; Defined at:
  4503 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  dividend        2   45[BANK0 ] int 
  4506 ;;  divisor         2   47[BANK0 ] int 
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;  sign            1   51[BANK0 ] unsigned char 
  4509 ;;  counter         1   50[BANK0 ] unsigned char 
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  2   45[BANK0 ] int 
  4512 ;; Registers used:
  4513 ;;		wreg, status,2, status,0, prodl
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4519 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4520 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4521 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4522 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4523 ;;Total ram usage:        7 bytes
  4524 ;; Hardware stack levels used:    1
  4525 ;; Hardware stack levels required when called:   11
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_send_msg
  4530 ;;		_recv_msg
  4531 ;;		i2_send_msg
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text21
  4536  000E9A                     __ptext21:
  4537                           	opt stack 0
  4538  000E9A                     ___awmod:
  4539                           	opt stack 17
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;incstack = 0
  4543  000E9A  0100               	movlb	0	; () banked
  4544  000E9C  6F91               	movwf	??___awmod& (0+255),b
  4545  000E9E  0E00               	movlw	0
  4546  000EA0  0100               	movlb	0	; () banked
  4547  000EA2  0100               	movlb	0	; () banked
  4548  000EA4  6F93               	movwf	___awmod@sign& (0+255),b
  4549  000EA6  0100               	movlb	0	; () banked
  4550  000EA8  5191               	movf	??___awmod& (0+255),w,b
  4551                           
  4552                           ; BSR set to: 0
  4553  000EAA  0100               	movlb	0	; () banked
  4554  000EAC  0100               	movlb	0	; () banked
  4555  000EAE  518E               	movf	(___awmod@dividend+1)& (0+255),w,b
  4556  000EB0  0A80               	xorlw	128
  4557  000EB2  6EF3               	movwf	prodl,c
  4558  000EB4  0E80               	movlw	128
  4559  000EB6  5CF3               	subwf	prodl,w,c
  4560  000EB8  0E00               	movlw	0
  4561  000EBA  B4D8               	btfsc	status,2,c
  4562  000EBC  5D8D               	subwf	___awmod@dividend& (0+255),w,b
  4563  000EBE  B0D8               	btfsc	status,0,c
  4564  000EC0  D00F               	goto	l3494
  4565                           
  4566                           ; BSR set to: 0
  4567  000EC2  0100               	movlb	0	; () banked
  4568  000EC4  0100               	movlb	0	; () banked
  4569  000EC6  6D8D               	negf	___awmod@dividend& (0+255),b
  4570  000EC8  0100               	movlb	0	; () banked
  4571  000ECA  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
  4572  000ECC  B0D8               	btfsc	status,0,c
  4573  000ECE  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
  4574                           
  4575                           ; BSR set to: 0
  4576  000ED0  0100               	movlb	0	; () banked
  4577  000ED2  6F91               	movwf	??___awmod& (0+255),b
  4578  000ED4  0E01               	movlw	1
  4579  000ED6  0100               	movlb	0	; () banked
  4580  000ED8  0100               	movlb	0	; () banked
  4581  000EDA  6F93               	movwf	___awmod@sign& (0+255),b
  4582  000EDC  0100               	movlb	0	; () banked
  4583  000EDE  5191               	movf	??___awmod& (0+255),w,b
  4584  000EE0                     l3494:
  4585                           
  4586                           ; BSR set to: 0
  4587  000EE0  0100               	movlb	0	; () banked
  4588  000EE2  0100               	movlb	0	; () banked
  4589  000EE4  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4590  000EE6  0A80               	xorlw	128
  4591  000EE8  6EF3               	movwf	prodl,c
  4592  000EEA  0E80               	movlw	128
  4593  000EEC  5CF3               	subwf	prodl,w,c
  4594  000EEE  0E00               	movlw	0
  4595  000EF0  B4D8               	btfsc	status,2,c
  4596  000EF2  5D8F               	subwf	___awmod@divisor& (0+255),w,b
  4597  000EF4  B0D8               	btfsc	status,0,c
  4598  000EF6  D007               	goto	l3498
  4599                           
  4600                           ; BSR set to: 0
  4601  000EF8  0100               	movlb	0	; () banked
  4602  000EFA  0100               	movlb	0	; () banked
  4603  000EFC  6D8F               	negf	___awmod@divisor& (0+255),b
  4604  000EFE  0100               	movlb	0	; () banked
  4605  000F00  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
  4606  000F02  B0D8               	btfsc	status,0,c
  4607  000F04  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
  4608  000F06                     l3498:
  4609                           
  4610                           ; BSR set to: 0
  4611  000F06  0100               	movlb	0	; () banked
  4612  000F08  0100               	movlb	0	; () banked
  4613  000F0A  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4614  000F0C  118F               	iorwf	___awmod@divisor& (0+255),w,b
  4615  000F0E  B4D8               	btfsc	status,2,c
  4616  000F10  D03A               	goto	l3514
  4617                           
  4618                           ; BSR set to: 0
  4619  000F12  0100               	movlb	0	; () banked
  4620  000F14  6F91               	movwf	??___awmod& (0+255),b
  4621  000F16  0E01               	movlw	1
  4622  000F18  0100               	movlb	0	; () banked
  4623  000F1A  0100               	movlb	0	; () banked
  4624  000F1C  6F92               	movwf	___awmod@counter& (0+255),b
  4625  000F1E  0100               	movlb	0	; () banked
  4626  000F20  5191               	movf	??___awmod& (0+255),w,b
  4627  000F22  D009               	goto	l3504
  4628  000F24                     l3502:
  4629                           
  4630                           ; BSR set to: 0
  4631  000F24  0100               	movlb	0	; () banked
  4632  000F26  0100               	movlb	0	; () banked
  4633  000F28  0100               	movlb	0	; () banked
  4634  000F2A  90D8               	bcf	status,0,c
  4635  000F2C  378F               	rlcf	___awmod@divisor& (0+255),f,b
  4636  000F2E  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4637  000F30  0100               	movlb	0	; () banked
  4638  000F32  0100               	movlb	0	; () banked
  4639  000F34  2B92               	incf	___awmod@counter& (0+255),f,b
  4640  000F36                     l3504:
  4641                           
  4642                           ; BSR set to: 0
  4643  000F36  0100               	movlb	0	; () banked
  4644  000F38  0100               	movlb	0	; () banked
  4645  000F3A  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4646  000F3C  D7F3               	goto	l3502
  4647  000F3E                     l3506:
  4648                           
  4649                           ; BSR set to: 0
  4650  000F3E  0100               	movlb	0	; () banked
  4651  000F40  0100               	movlb	0	; () banked
  4652  000F42  518F               	movf	___awmod@divisor& (0+255),w,b
  4653  000F44  0100               	movlb	0	; () banked
  4654  000F46  0100               	movlb	0	; () banked
  4655  000F48  5D8D               	subwf	___awmod@dividend& (0+255),w,b
  4656  000F4A  0100               	movlb	0	; () banked
  4657  000F4C  0100               	movlb	0	; () banked
  4658  000F4E  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4659  000F50  0100               	movlb	0	; () banked
  4660  000F52  0100               	movlb	0	; () banked
  4661  000F54  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4662  000F56  A0D8               	btfss	status,0,c
  4663  000F58  D00C               	goto	l3510
  4664                           
  4665                           ; BSR set to: 0
  4666  000F5A  0100               	movlb	0	; () banked
  4667  000F5C  0100               	movlb	0	; () banked
  4668  000F5E  518F               	movf	___awmod@divisor& (0+255),w,b
  4669  000F60  0100               	movlb	0	; () banked
  4670  000F62  0100               	movlb	0	; () banked
  4671  000F64  5F8D               	subwf	___awmod@dividend& (0+255),f,b
  4672  000F66  0100               	movlb	0	; () banked
  4673  000F68  0100               	movlb	0	; () banked
  4674  000F6A  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4675  000F6C  0100               	movlb	0	; () banked
  4676  000F6E  0100               	movlb	0	; () banked
  4677  000F70  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4678  000F72                     l3510:
  4679                           
  4680                           ; BSR set to: 0
  4681  000F72  0100               	movlb	0	; () banked
  4682  000F74  0100               	movlb	0	; () banked
  4683  000F76  0100               	movlb	0	; () banked
  4684  000F78  90D8               	bcf	status,0,c
  4685  000F7A  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4686  000F7C  338F               	rrcf	___awmod@divisor& (0+255),f,b
  4687                           
  4688                           ; BSR set to: 0
  4689  000F7E  0100               	movlb	0	; () banked
  4690  000F80  0100               	movlb	0	; () banked
  4691  000F82  2F92               	decfsz	___awmod@counter& (0+255),f,b
  4692  000F84  D7DC               	goto	l3506
  4693  000F86                     l3514:
  4694                           
  4695                           ; BSR set to: 0
  4696  000F86  0100               	movlb	0	; () banked
  4697  000F88  0100               	movlb	0	; () banked
  4698  000F8A  5193               	movf	___awmod@sign& (0+255),w,b
  4699  000F8C  B4D8               	btfsc	status,2,c
  4700  000F8E  D007               	goto	l3518
  4701                           
  4702                           ; BSR set to: 0
  4703  000F90  0100               	movlb	0	; () banked
  4704  000F92  0100               	movlb	0	; () banked
  4705  000F94  6D8D               	negf	___awmod@dividend& (0+255),b
  4706  000F96  0100               	movlb	0	; () banked
  4707  000F98  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
  4708  000F9A  B0D8               	btfsc	status,0,c
  4709  000F9C  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
  4710  000F9E                     l3518:
  4711                           
  4712                           ; BSR set to: 0
  4713  000F9E  C08D  F08D         	movff	___awmod@dividend,?___awmod
  4714  000FA2  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
  4715  000FA6  0012               	return	
  4716  000FA8                     __end_of___awmod:
  4717                           	opt stack 0
  4718                           tblptru	equ	0xFF8
  4719                           tblptrh	equ	0xFF7
  4720                           tblptrl	equ	0xFF6
  4721                           tablat	equ	0xFF5
  4722                           prodh	equ	0xFF4
  4723                           prodl	equ	0xFF3
  4724                           intcon	equ	0xFF2
  4725                           intcon2	equ	0xFF1
  4726                           postinc0	equ	0xFEE
  4727                           wreg	equ	0xFE8
  4728                           indf1	equ	0xFE7
  4729                           postinc1	equ	0xFE6
  4730                           postdec1	equ	0xFE5
  4731                           fsr1h	equ	0xFE2
  4732                           fsr1l	equ	0xFE1
  4733                           indf2	equ	0xFDF
  4734                           postinc2	equ	0xFDE
  4735                           postdec2	equ	0xFDD
  4736                           fsr2h	equ	0xFDA
  4737                           fsr2l	equ	0xFD9
  4738                           status	equ	0xFD8
  4739                           
  4740 ;; *************** function _SetChanADC *****************
  4741 ;; Defined at:
  4742 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  channel         1    wreg     unsigned char 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  channel         1   46[BANK0 ] unsigned char 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;		None               void
  4749 ;; Registers used:
  4750 ;;		wreg, status,2, status,0
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4758 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4759 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4760 ;;Total ram usage:        2 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:   11
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_main
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text22
  4771  001C84                     __ptext22:
  4772                           	opt stack 0
  4773  001C84                     _SetChanADC:
  4774                           	opt stack 19
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;incstack = 0
  4778                           ;SetChanADC@channel stored from wreg
  4779  001C84  CFE8 F08E          	movff	wreg,SetChanADC@channel
  4780  001C88  CFC2 F08D          	movff	4034,??_SetChanADC	;volatile
  4781  001C8C  0EC3               	movlw	195
  4782  001C8E  0100               	movlb	0	; () banked
  4783  001C90  178D               	andwf	??_SetChanADC& (0+255),f,b
  4784  001C92  0100               	movlb	0	; () banked
  4785  001C94  0100               	movlb	0	; () banked
  4786  001C96  90D8               	bcf	status,0,c
  4787  001C98  318E               	rrcf	SetChanADC@channel& (0+255),w,b
  4788  001C9A  0B3C               	andlw	60
  4789  001C9C  0100               	movlb	0	; () banked
  4790  001C9E  118D               	iorwf	??_SetChanADC& (0+255),w,b
  4791  001CA0  6EC2               	movwf	4034,c	;volatile
  4792                           
  4793                           ; BSR set to: 0
  4794  001CA2  0012               	return	
  4795  001CA4                     __end_of_SetChanADC:
  4796                           	opt stack 0
  4797                           tblptru	equ	0xFF8
  4798                           tblptrh	equ	0xFF7
  4799                           tblptrl	equ	0xFF6
  4800                           tablat	equ	0xFF5
  4801                           prodh	equ	0xFF4
  4802                           prodl	equ	0xFF3
  4803                           intcon	equ	0xFF2
  4804                           intcon2	equ	0xFF1
  4805                           postinc0	equ	0xFEE
  4806                           wreg	equ	0xFE8
  4807                           indf1	equ	0xFE7
  4808                           postinc1	equ	0xFE6
  4809                           postdec1	equ	0xFE5
  4810                           fsr1h	equ	0xFE2
  4811                           fsr1l	equ	0xFE1
  4812                           indf2	equ	0xFDF
  4813                           postinc2	equ	0xFDE
  4814                           postdec2	equ	0xFDD
  4815                           fsr2h	equ	0xFDA
  4816                           fsr2l	equ	0xFD9
  4817                           status	equ	0xFD8
  4818                           
  4819 ;; *************** function _OpenTimer1 *****************
  4820 ;; Defined at:
  4821 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  config          1    wreg     unsigned char 
  4824 ;;  config1         1   45[BANK0 ] unsigned char 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  config          1   47[BANK0 ] unsigned char 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;		None               void
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4836 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4837 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4838 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4839 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4840 ;;Total ram usage:        3 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:   11
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_main
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text23
  4851  001AB8                     __ptext23:
  4852                           	opt stack 0
  4853  001AB8                     _OpenTimer1:
  4854                           	opt stack 19
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;incstack = 0
  4858                           ;OpenTimer1@config stored from wreg
  4859  001AB8  CFE8 F08F          	movff	wreg,OpenTimer1@config
  4860  001ABC  0100               	movlb	0	; () banked
  4861  001ABE  0100               	movlb	0	; () banked
  4862  001AC0  518D               	movf	OpenTimer1@config1& (0+255),w,b
  4863  001AC2  0BF3               	andlw	243
  4864  001AC4  6E9A               	movwf	3994,c	;volatile
  4865  001AC6  C08F  F08E         	movff	OpenTimer1@config,??_OpenTimer1
  4866  001ACA  0E7F               	movlw	127
  4867  001ACC  0100               	movlb	0	; () banked
  4868  001ACE  178E               	andwf	??_OpenTimer1& (0+255),f,b
  4869  001AD0  0100               	movlb	0	; () banked
  4870  001AD2  90D8               	bcf	status,0,c
  4871  001AD4  358E               	rlcf	??_OpenTimer1& (0+255),w,b
  4872  001AD6  6ECD               	movwf	4045,c	;volatile
  4873                           
  4874                           ; BSR set to: 0
  4875  001AD8  0E00               	movlw	0
  4876  001ADA  6ECF               	movwf	4047,c	;volatile
  4877                           
  4878                           ; BSR set to: 0
  4879  001ADC  0E00               	movlw	0
  4880  001ADE  6ECE               	movwf	4046,c	;volatile
  4881                           
  4882                           ; BSR set to: 0
  4883  001AE0  909E               	bcf	3998,0,c	;volatile
  4884                           
  4885                           ; BSR set to: 0
  4886  001AE2  0100               	movlb	0	; () banked
  4887  001AE4  0100               	movlb	0	; () banked
  4888  001AE6  AF8F               	btfss	OpenTimer1@config& (0+255),7,b
  4889  001AE8  D002               	goto	l590
  4890                           
  4891                           ; BSR set to: 0
  4892  001AEA  809D               	bsf	3997,0,c	;volatile
  4893  001AEC  D001               	goto	l591
  4894  001AEE                     l590:
  4895                           
  4896                           ; BSR set to: 0
  4897  001AEE  909D               	bcf	3997,0,c	;volatile
  4898  001AF0                     l591:
  4899                           
  4900                           ; BSR set to: 0
  4901  001AF0  BE9A               	btfsc	3994,7,c	;volatile
  4902                           
  4903                           ; BSR set to: 0
  4904  001AF2  869A               	bsf	3994,3,c	;volatile
  4905                           
  4906                           ; BSR set to: 0
  4907  001AF4  80CD               	bsf	4045,0,c	;volatile
  4908                           
  4909                           ; BSR set to: 0
  4910  001AF6  0012               	return	
  4911  001AF8                     __end_of_OpenTimer1:
  4912                           	opt stack 0
  4913                           tblptru	equ	0xFF8
  4914                           tblptrh	equ	0xFF7
  4915                           tblptrl	equ	0xFF6
  4916                           tablat	equ	0xFF5
  4917                           prodh	equ	0xFF4
  4918                           prodl	equ	0xFF3
  4919                           intcon	equ	0xFF2
  4920                           intcon2	equ	0xFF1
  4921                           postinc0	equ	0xFEE
  4922                           wreg	equ	0xFE8
  4923                           indf1	equ	0xFE7
  4924                           postinc1	equ	0xFE6
  4925                           postdec1	equ	0xFE5
  4926                           fsr1h	equ	0xFE2
  4927                           fsr1l	equ	0xFE1
  4928                           indf2	equ	0xFDF
  4929                           postinc2	equ	0xFDE
  4930                           postdec2	equ	0xFDD
  4931                           fsr2h	equ	0xFDA
  4932                           fsr2l	equ	0xFD9
  4933                           status	equ	0xFD8
  4934                           
  4935 ;; *************** function _OpenTimer0 *****************
  4936 ;; Defined at:
  4937 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  config          1    wreg     unsigned char 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;  config          1   45[BANK0 ] unsigned char 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;		None               void
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4954 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4955 ;;Total ram usage:        1 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:   11
  4958 ;; This function calls:
  4959 ;;		Nothing
  4960 ;; This function is called by:
  4961 ;;		_main
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           	psect	text24
  4966  001C14                     __ptext24:
  4967                           	opt stack 0
  4968  001C14                     _OpenTimer0:
  4969                           	opt stack 19
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;incstack = 0
  4973                           ;OpenTimer0@config stored from wreg
  4974  001C14  CFE8 F08D          	movff	wreg,OpenTimer0@config
  4975  001C18  0100               	movlb	0	; () banked
  4976  001C1A  0100               	movlb	0	; () banked
  4977  001C1C  518D               	movf	OpenTimer0@config& (0+255),w,b
  4978  001C1E  0B7F               	andlw	127
  4979  001C20  6ED5               	movwf	4053,c	;volatile
  4980                           
  4981                           ; BSR set to: 0
  4982  001C22  0E00               	movlw	0
  4983  001C24  6ED7               	movwf	4055,c	;volatile
  4984                           
  4985                           ; BSR set to: 0
  4986  001C26  0E00               	movlw	0
  4987  001C28  6ED6               	movwf	4054,c	;volatile
  4988                           
  4989                           ; BSR set to: 0
  4990  001C2A  94F2               	bcf	intcon,2,c	;volatile
  4991                           
  4992                           ; BSR set to: 0
  4993  001C2C  0100               	movlb	0	; () banked
  4994  001C2E  0100               	movlb	0	; () banked
  4995  001C30  AF8D               	btfss	OpenTimer0@config& (0+255),7,b
  4996  001C32  D002               	goto	l562
  4997                           
  4998                           ; BSR set to: 0
  4999  001C34  8AF2               	bsf	intcon,5,c	;volatile
  5000  001C36  D001               	goto	l563
  5001  001C38                     l562:
  5002                           
  5003                           ; BSR set to: 0
  5004  001C38  9AF2               	bcf	intcon,5,c	;volatile
  5005  001C3A                     l563:
  5006                           
  5007                           ; BSR set to: 0
  5008  001C3A  8ED5               	bsf	4053,7,c	;volatile
  5009                           
  5010                           ; BSR set to: 0
  5011  001C3C  0012               	return	
  5012  001C3E                     __end_of_OpenTimer0:
  5013                           	opt stack 0
  5014                           tblptru	equ	0xFF8
  5015                           tblptrh	equ	0xFF7
  5016                           tblptrl	equ	0xFF6
  5017                           tablat	equ	0xFF5
  5018                           prodh	equ	0xFF4
  5019                           prodl	equ	0xFF3
  5020                           intcon	equ	0xFF2
  5021                           intcon2	equ	0xFF1
  5022                           postinc0	equ	0xFEE
  5023                           wreg	equ	0xFE8
  5024                           indf1	equ	0xFE7
  5025                           postinc1	equ	0xFE6
  5026                           postdec1	equ	0xFE5
  5027                           fsr1h	equ	0xFE2
  5028                           fsr1l	equ	0xFE1
  5029                           indf2	equ	0xFDF
  5030                           postinc2	equ	0xFDE
  5031                           postdec2	equ	0xFDD
  5032                           fsr2h	equ	0xFDA
  5033                           fsr2l	equ	0xFD9
  5034                           status	equ	0xFD8
  5035                           
  5036 ;; *************** function _OpenADC *****************
  5037 ;; Defined at:
  5038 ;;		line 225 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  config          1    wreg     unsigned char 
  5041 ;;  config2         1   45[BANK0 ] unsigned char 
  5042 ;;  config3         2   46[BANK0 ] unsigned int 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;  config          1   51[BANK0 ] unsigned char 
  5045 ;; Return value:  Size  Location     Type
  5046 ;;		None               void
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5054 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5056 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5057 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5058 ;;Total ram usage:        7 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:   11
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_main
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text25
  5069  0012EA                     __ptext25:
  5070                           	opt stack 0
  5071  0012EA                     _OpenADC:
  5072                           	opt stack 19
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;incstack = 0
  5076                           ;OpenADC@config stored from wreg
  5077  0012EA  CFE8 F093          	movff	wreg,OpenADC@config
  5078  0012EE  0E00               	movlw	0
  5079  0012F0  6EC2               	movwf	4034,c	;volatile
  5080  0012F2  0E00               	movlw	0
  5081  0012F4  6EC1               	movwf	4033,c	;volatile
  5082  0012F6  C08D  F090         	movff	OpenADC@config2,??_OpenADC
  5083  0012FA  0E06               	movlw	6
  5084  0012FC  0100               	movlb	0	; () banked
  5085  0012FE  6F91               	movwf	(??_OpenADC+1)& (0+255),b
  5086  001300                     u2195:
  5087  001300  0100               	movlb	0	; () banked
  5088  001302  90D8               	bcf	status,0,c
  5089  001304  3790               	rlcf	??_OpenADC& (0+255),f,b
  5090  001306  0100               	movlb	0	; () banked
  5091  001308  2F91               	decfsz	(??_OpenADC+1)& (0+255),f,b
  5092  00130A  D7FA               	goto	u2195
  5093  00130C  0EC0               	movlw	192
  5094  00130E  0100               	movlb	0	; () banked
  5095  001310  1790               	andwf	??_OpenADC& (0+255),f,b
  5096  001312  0100               	movlb	0	; () banked
  5097  001314  0100               	movlb	0	; () banked
  5098  001316  90D8               	bcf	status,0,c
  5099  001318  318D               	rrcf	OpenADC@config2& (0+255),w,b
  5100  00131A  0B3C               	andlw	60
  5101  00131C  0100               	movlb	0	; () banked
  5102  00131E  1190               	iorwf	??_OpenADC& (0+255),w,b
  5103  001320  6EC2               	movwf	4034,c	;volatile
  5104                           
  5105                           ; BSR set to: 0
  5106  001322  C093  F090         	movff	OpenADC@config,??_OpenADC
  5107  001326  0100               	movlb	0	; () banked
  5108  001328  90D8               	bcf	status,0,c
  5109  00132A  3790               	rlcf	??_OpenADC& (0+255),f,b
  5110  00132C  0100               	movlb	0	; () banked
  5111  00132E  90D8               	bcf	status,0,c
  5112  001330  3790               	rlcf	??_OpenADC& (0+255),f,b
  5113  001332  0E38               	movlw	56
  5114  001334  0100               	movlb	0	; () banked
  5115  001336  1790               	andwf	??_OpenADC& (0+255),f,b
  5116  001338  C093  F091         	movff	OpenADC@config,??_OpenADC+1
  5117  00133C  0100               	movlb	0	; () banked
  5118  00133E  3B91               	swapf	(??_OpenADC+1)& (0+255),f,b
  5119  001340  0E0F               	movlw	15
  5120  001342  1791               	andwf	(??_OpenADC+1)& (0+255),f,b
  5121  001344  0E07               	movlw	7
  5122  001346  0100               	movlb	0	; () banked
  5123  001348  1791               	andwf	(??_OpenADC+1)& (0+255),f,b
  5124  00134A  0100               	movlb	0	; () banked
  5125  00134C  0100               	movlb	0	; () banked
  5126  00134E  5193               	movf	OpenADC@config& (0+255),w,b
  5127  001350  0B80               	andlw	128
  5128  001352  0100               	movlb	0	; () banked
  5129  001354  1191               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5130  001356  0100               	movlb	0	; () banked
  5131  001358  1190               	iorwf	??_OpenADC& (0+255),w,b
  5132  00135A  6EC1               	movwf	4033,c	;volatile
  5133                           
  5134                           ; BSR set to: 0
  5135  00135C  C08E  FF48         	movff	OpenADC@config3,3912	;volatile
  5136                           
  5137                           ; BSR set to: 0
  5138  001360  0100               	movlb	0	; () banked
  5139  001362  C08F  F090         	movff	OpenADC@config3+1,??_OpenADC
  5140  001366  C090  F091         	movff	??_OpenADC,??_OpenADC+1
  5141  00136A  0100               	movlb	0	; () banked
  5142  00136C  6B92               	clrf	(??_OpenADC+2)& (0+255),b
  5143  00136E  0100               	movlb	0	; () banked
  5144  001370  5191               	movf	(??_OpenADC+1)& (0+255),w,b
  5145  001372  010F               	movlb	15	; () banked
  5146  001374  010F               	movlb	15	; () banked
  5147  001376  6F49               	movwf	73,b	;volatile
  5148                           
  5149                           ; BSR set to: 15
  5150  001378  0100               	movlb	0	; () banked
  5151  00137A  0100               	movlb	0	; () banked
  5152  00137C  AF8D               	btfss	OpenADC@config2& (0+255),7,b
  5153  00137E  D003               	goto	l543
  5154                           
  5155                           ; BSR set to: 0
  5156  001380  9C9E               	bcf	3998,6,c	;volatile
  5157  001382  8C9D               	bsf	3997,6,c	;volatile
  5158  001384  8CF2               	bsf	intcon,6,c	;volatile
  5159  001386                     l543:
  5160                           
  5161                           ; BSR set to: 0
  5162  001386  80C2               	bsf	4034,0,c	;volatile
  5163                           
  5164                           ; BSR set to: 0
  5165  001388  0012               	return	
  5166  00138A                     __end_of_OpenADC:
  5167                           	opt stack 0
  5168                           tblptru	equ	0xFF8
  5169                           tblptrh	equ	0xFF7
  5170                           tblptrl	equ	0xFF6
  5171                           tablat	equ	0xFF5
  5172                           prodh	equ	0xFF4
  5173                           prodl	equ	0xFF3
  5174                           intcon	equ	0xFF2
  5175                           intcon2	equ	0xFF1
  5176                           postinc0	equ	0xFEE
  5177                           wreg	equ	0xFE8
  5178                           indf1	equ	0xFE7
  5179                           postinc1	equ	0xFE6
  5180                           postdec1	equ	0xFE5
  5181                           fsr1h	equ	0xFE2
  5182                           fsr1l	equ	0xFE1
  5183                           indf2	equ	0xFDF
  5184                           postinc2	equ	0xFDE
  5185                           postdec2	equ	0xFDD
  5186                           fsr2h	equ	0xFDA
  5187                           fsr2l	equ	0xFD9
  5188                           status	equ	0xFD8
  5189                           
  5190 ;; *************** function _Open1USART *****************
  5191 ;; Defined at:
  5192 ;;		line 124 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\u1open.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  config          1    wreg     unsigned char 
  5195 ;;  spbrg           2   45[BANK0 ] unsigned int 
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;  config          1   50[BANK0 ] unsigned char 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;		None               void
  5200 ;; Registers used:
  5201 ;;		wreg, status,2
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5207 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5208 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5209 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5210 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5211 ;;Total ram usage:        6 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; Hardware stack levels required when called:   11
  5214 ;; This function calls:
  5215 ;;		Nothing
  5216 ;; This function is called by:
  5217 ;;		_main
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text26
  5222  0014A8                     __ptext26:
  5223                           	opt stack 0
  5224  0014A8                     _Open1USART:
  5225                           	opt stack 19
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;incstack = 0
  5229                           ;Open1USART@config stored from wreg
  5230  0014A8  CFE8 F092          	movff	wreg,Open1USART@config
  5231  0014AC  0E00               	movlw	0
  5232  0014AE  6EAD               	movwf	4013,c	;volatile
  5233  0014B0  0E00               	movlw	0
  5234  0014B2  6EAC               	movwf	4012,c	;volatile
  5235  0014B4  0100               	movlb	0	; () banked
  5236  0014B6  0100               	movlb	0	; () banked
  5237  0014B8  B192               	btfsc	Open1USART@config& (0+255),0,b
  5238                           
  5239                           ; BSR set to: 0
  5240  0014BA  88AD               	bsf	4013,4,c	;volatile
  5241                           
  5242                           ; BSR set to: 0
  5243                           
  5244                           ; BSR set to: 0
  5245  0014BC  0100               	movlb	0	; () banked
  5246  0014BE  0100               	movlb	0	; () banked
  5247  0014C0  A392               	btfss	Open1USART@config& (0+255),1,b
  5248  0014C2  D002               	goto	l3006
  5249                           
  5250                           ; BSR set to: 0
  5251  0014C4  8CAD               	bsf	4013,6,c	;volatile
  5252  0014C6  8CAC               	bsf	4012,6,c	;volatile
  5253  0014C8                     l3006:
  5254                           
  5255                           ; BSR set to: 0
  5256  0014C8  0100               	movlb	0	; () banked
  5257  0014CA  0100               	movlb	0	; () banked
  5258  0014CC  B592               	btfsc	Open1USART@config& (0+255),2,b
  5259                           
  5260                           ; BSR set to: 0
  5261  0014CE  8EAD               	bsf	4013,7,c	;volatile
  5262                           
  5263                           ; BSR set to: 0
  5264                           
  5265                           ; BSR set to: 0
  5266  0014D0  0100               	movlb	0	; () banked
  5267  0014D2  0100               	movlb	0	; () banked
  5268  0014D4  A792               	btfss	Open1USART@config& (0+255),3,b
  5269  0014D6  D002               	goto	l622
  5270                           
  5271                           ; BSR set to: 0
  5272  0014D8  88AC               	bsf	4012,4,c	;volatile
  5273  0014DA  D001               	goto	l3014
  5274  0014DC                     l622:
  5275                           
  5276                           ; BSR set to: 0
  5277  0014DC  8AAC               	bsf	4012,5,c	;volatile
  5278  0014DE                     l3014:
  5279                           
  5280                           ; BSR set to: 0
  5281  0014DE  0100               	movlb	0	; () banked
  5282  0014E0  0100               	movlb	0	; () banked
  5283  0014E2  B992               	btfsc	Open1USART@config& (0+255),4,b
  5284                           
  5285                           ; BSR set to: 0
  5286  0014E4  84AD               	bsf	4013,2,c	;volatile
  5287                           
  5288                           ; BSR set to: 0
  5289                           
  5290                           ; BSR set to: 0
  5291  0014E6  0100               	movlb	0	; () banked
  5292  0014E8  0100               	movlb	0	; () banked
  5293  0014EA  BB92               	btfsc	Open1USART@config& (0+255),5,b
  5294                           
  5295                           ; BSR set to: 0
  5296  0014EC  86AC               	bsf	4012,3,c	;volatile
  5297                           
  5298                           ; BSR set to: 0
  5299                           
  5300                           ; BSR set to: 0
  5301  0014EE  0100               	movlb	0	; () banked
  5302  0014F0  0100               	movlb	0	; () banked
  5303  0014F2  AD92               	btfss	Open1USART@config& (0+255),6,b
  5304  0014F4  D002               	goto	l626
  5305                           
  5306                           ; BSR set to: 0
  5307  0014F6  8A9D               	bsf	3997,5,c	;volatile
  5308  0014F8  D001               	goto	l3026
  5309  0014FA                     l626:
  5310                           
  5311                           ; BSR set to: 0
  5312  0014FA  9A9D               	bcf	3997,5,c	;volatile
  5313  0014FC                     l3026:
  5314                           
  5315                           ; BSR set to: 0
  5316  0014FC  0100               	movlb	0	; () banked
  5317  0014FE  0100               	movlb	0	; () banked
  5318  001500  AF92               	btfss	Open1USART@config& (0+255),7,b
  5319  001502  D002               	goto	l628
  5320                           
  5321                           ; BSR set to: 0
  5322  001504  889D               	bsf	3997,4,c	;volatile
  5323  001506  D001               	goto	l629
  5324  001508                     l628:
  5325                           
  5326                           ; BSR set to: 0
  5327  001508  989D               	bcf	3997,4,c	;volatile
  5328  00150A                     l629:
  5329                           
  5330                           ; BSR set to: 0
  5331  00150A  C08D  FFB0         	movff	Open1USART@spbrg,4016	;volatile
  5332                           
  5333                           ; BSR set to: 0
  5334  00150E  0100               	movlb	0	; () banked
  5335  001510  C08E  F08F         	movff	Open1USART@spbrg+1,??_Open1USART
  5336  001514  C08F  F090         	movff	??_Open1USART,??_Open1USART+1
  5337  001518  0100               	movlb	0	; () banked
  5338  00151A  6B91               	clrf	(??_Open1USART+2)& (0+255),b
  5339  00151C  0100               	movlb	0	; () banked
  5340  00151E  5190               	movf	(??_Open1USART+1)& (0+255),w,b
  5341  001520  6E7F               	movwf	3967,c	;volatile
  5342                           
  5343                           ; BSR set to: 0
  5344  001522  8AAD               	bsf	4013,5,c	;volatile
  5345                           
  5346                           ; BSR set to: 0
  5347  001524  8EAC               	bsf	4012,7,c	;volatile
  5348                           
  5349                           ; BSR set to: 0
  5350  001526  0012               	return	
  5351  001528                     __end_of_Open1USART:
  5352                           	opt stack 0
  5353                           tblptru	equ	0xFF8
  5354                           tblptrh	equ	0xFF7
  5355                           tblptrl	equ	0xFF6
  5356                           tablat	equ	0xFF5
  5357                           prodh	equ	0xFF4
  5358                           prodl	equ	0xFF3
  5359                           intcon	equ	0xFF2
  5360                           intcon2	equ	0xFF1
  5361                           postinc0	equ	0xFEE
  5362                           wreg	equ	0xFE8
  5363                           indf1	equ	0xFE7
  5364                           postinc1	equ	0xFE6
  5365                           postdec1	equ	0xFE5
  5366                           fsr1h	equ	0xFE2
  5367                           fsr1l	equ	0xFE1
  5368                           indf2	equ	0xFDF
  5369                           postinc2	equ	0xFDE
  5370                           postdec2	equ	0xFDD
  5371                           fsr2h	equ	0xFDA
  5372                           fsr2l	equ	0xFD9
  5373                           status	equ	0xFD8
  5374                           
  5375 ;; *************** function _InterruptHandlerLow *****************
  5376 ;; Defined at:
  5377 ;;		line 126 in file "../src/interrupts.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;		None
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;		None
  5382 ;; Return value:  Size  Location     Type
  5383 ;;		None               void
  5384 ;; Registers used:
  5385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5393 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5394 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5395 ;;Total ram usage:       17 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:   10
  5398 ;; This function calls:
  5399 ;;		_adc_int_handler
  5400 ;;		_timer1_int_handler
  5401 ;;		_uart_recv_int_handler
  5402 ;;		_uart_trans_int_handler
  5403 ;; This function is called by:
  5404 ;;		Interrupt level 1
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           	psect	intcodelo
  5409  000018                     __pintcodelo:
  5410                           	opt stack 0
  5411  000018                     _InterruptHandlerLow:
  5412                           	opt stack 16
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;incstack = 0
  5416  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5417  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5418  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5419  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5420  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5421  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5422  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5423  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5424  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5425  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5426  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5427  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5428  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5429  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5430  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5431  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5432  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5433                           
  5434                           ;interrupts.c: 128: if(PIR1bits.ADIF){
  5435  00005C  AC9E               	btfss	3998,6,c	;volatile
  5436  00005E  D003               	goto	i1l3734
  5437                           
  5438                           ;interrupts.c: 130: PIR1bits.ADIF = 0;
  5439  000060  9C9E               	bcf	3998,6,c	;volatile
  5440                           
  5441                           ;interrupts.c: 131: adc_int_handler();
  5442  000062  ECD8  F00E         	call	_adc_int_handler	;wreg free
  5443  000066                     i1l3734:
  5444                           
  5445                           ;interrupts.c: 132: }
  5446                           ;interrupts.c: 135: if (PIR1bits.TMR1IF) {
  5447  000066  A09E               	btfss	3998,0,c	;volatile
  5448  000068  D003               	goto	i1l3740
  5449                           
  5450                           ;interrupts.c: 136: PIR1bits.TMR1IF = 0;
  5451  00006A  909E               	bcf	3998,0,c	;volatile
  5452                           
  5453                           ;interrupts.c: 137: timer1_int_handler();
  5454  00006C  EC9C  F00D         	call	_timer1_int_handler	;wreg free
  5455  000070                     i1l3740:
  5456                           
  5457                           ;interrupts.c: 139: }
  5458                           ;interrupts.c: 141: if (PIR1bits.TXIF) {
  5459  000070  B89E               	btfsc	3998,4,c	;volatile
  5460                           
  5461                           ;interrupts.c: 143: uart_trans_int_handler();
  5462  000072  ECEE  F00B         	call	_uart_trans_int_handler	;wreg free
  5463                           
  5464                           ;interrupts.c: 144: }
  5465                           ;interrupts.c: 146: if (PIR1bits.RCIF) {
  5466  000076  AA9E               	btfss	3998,5,c	;volatile
  5467  000078  D003               	goto	i1l57
  5468                           
  5469                           ;interrupts.c: 147: PIR1bits.RCIF = 0;
  5470  00007A  9A9E               	bcf	3998,5,c	;volatile
  5471                           
  5472                           ;interrupts.c: 149: uart_recv_int_handler();
  5473  00007C  EC5B  F008         	call	_uart_recv_int_handler	;wreg free
  5474  000080                     i1l57:
  5475  000080  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5476  000084  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5477  000088  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5478  00008C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5479  000090  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5480  000094  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5481  000098  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5482  00009C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5483  0000A0  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5484  0000A4  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5485  0000A8  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5486  0000AC  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5487  0000B0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5488  0000B4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5489  0000B8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5490  0000BC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5491  0000C0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5492  0000C4  0010               	retfie	
  5493  0000C6                     __end_of_InterruptHandlerLow:
  5494                           	opt stack 0
  5495                           pclatu	equ	0xFFB
  5496                           pclath	equ	0xFFA
  5497                           tblptru	equ	0xFF8
  5498                           tblptrh	equ	0xFF7
  5499                           tblptrl	equ	0xFF6
  5500                           tablat	equ	0xFF5
  5501                           prodh	equ	0xFF4
  5502                           prodl	equ	0xFF3
  5503                           intcon	equ	0xFF2
  5504                           intcon2	equ	0xFF1
  5505                           postinc0	equ	0xFEE
  5506                           fsr0h	equ	0xFEA
  5507                           fsr0l	equ	0xFE9
  5508                           wreg	equ	0xFE8
  5509                           indf1	equ	0xFE7
  5510                           postinc1	equ	0xFE6
  5511                           postdec1	equ	0xFE5
  5512                           fsr1h	equ	0xFE2
  5513                           fsr1l	equ	0xFE1
  5514                           bsr	equ	0xFE0
  5515                           indf2	equ	0xFDF
  5516                           postinc2	equ	0xFDE
  5517                           postdec2	equ	0xFDD
  5518                           fsr2h	equ	0xFDA
  5519                           fsr2l	equ	0xFD9
  5520                           status	equ	0xFD8
  5521                           
  5522 ;; *************** function _uart_trans_int_handler *****************
  5523 ;; Defined at:
  5524 ;;		line 73 in file "../src/my_uart.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;		None               void
  5531 ;; Registers used:
  5532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5541 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5542 ;;Total ram usage:        1 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; Hardware stack levels required when called:    6
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_InterruptHandlerLow
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text28
  5553  0017DC                     __ptext28:
  5554                           	opt stack 0
  5555  0017DC                     _uart_trans_int_handler:
  5556                           	opt stack 19
  5557                           
  5558                           ;my_uart.c: 75: if(TXSTAbits.TRMT){
  5559                           
  5560                           ;incstack = 0
  5561  0017DC  A2AD               	btfss	4013,1,c	;volatile
  5562  0017DE  0012               	return	
  5563                           
  5564                           ;my_uart.c: 76: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5565  0017E0  EE20 F00E          	lfsr	2,14
  5566  0017E4  503F               	movf	_uc_ptr,w,c
  5567  0017E6  26D9               	addwf	fsr2l,f,c
  5568  0017E8  5040               	movf	_uc_ptr+1,w,c
  5569  0017EA  22DA               	addwfc	fsr2h,f,c
  5570  0017EC  50DF               	movf	indf2,w,c
  5571  0017EE  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5572  0017F0  EE20 F00D          	lfsr	2,13
  5573  0017F4  503F               	movf	_uc_ptr,w,c
  5574  0017F6  26D9               	addwf	fsr2l,f,c
  5575  0017F8  5040               	movf	_uc_ptr+1,w,c
  5576  0017FA  22DA               	addwfc	fsr2h,f,c
  5577  0017FC  50DF               	movf	indf2,w,c
  5578  0017FE  5C01               	subwf	??_uart_trans_int_handler,w,c
  5579  001800  B0D8               	btfsc	status,0,c
  5580  001802  D01E               	goto	i1l479
  5581                           
  5582                           ;my_uart.c: 77: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5583  001804  EE20 F00E          	lfsr	2,14
  5584  001808  503F               	movf	_uc_ptr,w,c
  5585  00180A  26D9               	addwf	fsr2l,f,c
  5586  00180C  5040               	movf	_uc_ptr+1,w,c
  5587  00180E  22DA               	addwfc	fsr2h,f,c
  5588  001810  50DF               	movf	indf2,w,c
  5589  001812  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5590  001814  5001               	movf	??_uart_trans_int_handler,w,c
  5591  001816  0D01               	mullw	1
  5592  001818  0E07               	movlw	7
  5593  00181A  26F3               	addwf	prodl,f,c
  5594  00181C  0E00               	movlw	0
  5595  00181E  22F4               	addwfc	prodh,f,c
  5596  001820  50F3               	movf	prodl,w,c
  5597  001822  243F               	addwf	_uc_ptr,w,c
  5598  001824  6ED9               	movwf	fsr2l,c
  5599  001826  50F4               	movf	prodh,w,c
  5600  001828  2040               	addwfc	_uc_ptr+1,w,c
  5601  00182A  6EDA               	movwf	fsr2h,c
  5602  00182C  50DF               	movf	indf2,w,c
  5603  00182E  6EAE               	movwf	4014,c	;volatile
  5604                           
  5605                           ;my_uart.c: 79: uc_ptr->txBufind++;
  5606  001830  EE20 F00E          	lfsr	2,14
  5607  001834  503F               	movf	_uc_ptr,w,c
  5608  001836  26D9               	addwf	fsr2l,f,c
  5609  001838  5040               	movf	_uc_ptr+1,w,c
  5610  00183A  22DA               	addwfc	fsr2h,f,c
  5611  00183C  2ADF               	incf	indf2,f,c
  5612                           
  5613                           ;my_uart.c: 80: } else
  5614  00183E  0012               	return	
  5615  001840                     i1l479:
  5616                           
  5617                           ;my_uart.c: 81: PIE1bits.TX1IE = 0;
  5618  001840  989D               	bcf	3997,4,c	;volatile
  5619  001842  0012               	return	
  5620  001844                     __end_of_uart_trans_int_handler:
  5621                           	opt stack 0
  5622                           pclatu	equ	0xFFB
  5623                           pclath	equ	0xFFA
  5624                           tblptru	equ	0xFF8
  5625                           tblptrh	equ	0xFF7
  5626                           tblptrl	equ	0xFF6
  5627                           tablat	equ	0xFF5
  5628                           prodh	equ	0xFF4
  5629                           prodl	equ	0xFF3
  5630                           intcon	equ	0xFF2
  5631                           intcon2	equ	0xFF1
  5632                           postinc0	equ	0xFEE
  5633                           fsr0h	equ	0xFEA
  5634                           fsr0l	equ	0xFE9
  5635                           wreg	equ	0xFE8
  5636                           indf1	equ	0xFE7
  5637                           postinc1	equ	0xFE6
  5638                           postdec1	equ	0xFE5
  5639                           fsr1h	equ	0xFE2
  5640                           fsr1l	equ	0xFE1
  5641                           bsr	equ	0xFE0
  5642                           indf2	equ	0xFDF
  5643                           postinc2	equ	0xFDE
  5644                           postdec2	equ	0xFDD
  5645                           fsr2h	equ	0xFDA
  5646                           fsr2l	equ	0xFD9
  5647                           status	equ	0xFD8
  5648                           
  5649 ;; *************** function _uart_recv_int_handler *****************
  5650 ;; Defined at:
  5651 ;;		line 11 in file "../src/my_uart.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;		None
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;		None
  5656 ;; Return value:  Size  Location     Type
  5657 ;;		None               void
  5658 ;; Registers used:
  5659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5668 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5669 ;;Total ram usage:        1 bytes
  5670 ;; Hardware stack levels used:    1
  5671 ;; Hardware stack levels required when called:    9
  5672 ;; This function calls:
  5673 ;;		_Read1USART
  5674 ;;		_ToMainLow_sendmsg
  5675 ;; This function is called by:
  5676 ;;		_InterruptHandlerLow
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text29
  5681  0010B6                     __ptext29:
  5682                           	opt stack 0
  5683  0010B6                     _uart_recv_int_handler:
  5684                           	opt stack 16
  5685                           
  5686                           ;my_uart.c: 17: if ((PIR1bits.RC1IF)) {
  5687                           
  5688                           ;incstack = 0
  5689  0010B6  AA9E               	btfss	3998,5,c	;volatile
  5690  0010B8  D04E               	goto	i1l3722
  5691                           
  5692                           ;my_uart.c: 18: uc_ptr->buffer[uc_ptr->buflen] = Read1USART();
  5693  0010BA  EE20 F006          	lfsr	2,6
  5694  0010BE  503F               	movf	_uc_ptr,w,c
  5695  0010C0  26D9               	addwf	fsr2l,f,c
  5696  0010C2  5040               	movf	_uc_ptr+1,w,c
  5697  0010C4  22DA               	addwfc	fsr2h,f,c
  5698  0010C6  50DF               	movf	indf2,w,c
  5699  0010C8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5700  0010CA  501B               	movf	??_uart_recv_int_handler,w,c
  5701  0010CC  0D01               	mullw	1
  5702  0010CE  50F3               	movf	prodl,w,c
  5703  0010D0  243F               	addwf	_uc_ptr,w,c
  5704  0010D2  6ED9               	movwf	fsr2l,c
  5705  0010D4  50F4               	movf	prodh,w,c
  5706  0010D6  2040               	addwfc	_uc_ptr+1,w,c
  5707  0010D8  6EDA               	movwf	fsr2h,c
  5708  0010DA  EC61  F00E         	call	_Read1USART	;wreg free
  5709  0010DE  6EDF               	movwf	indf2,c
  5710                           
  5711                           ;my_uart.c: 25: uc_ptr->buflen++;
  5712  0010E0  EE20 F006          	lfsr	2,6
  5713  0010E4  503F               	movf	_uc_ptr,w,c
  5714  0010E6  26D9               	addwf	fsr2l,f,c
  5715  0010E8  5040               	movf	_uc_ptr+1,w,c
  5716  0010EA  22DA               	addwfc	fsr2h,f,c
  5717  0010EC  2ADF               	incf	indf2,f,c
  5718                           
  5719                           ;my_uart.c: 26: if(UART_timeout > 20000){
  5720  0010EE  0E21               	movlw	33
  5721  0010F0  5C39               	subwf	_UART_timeout,w,c
  5722  0010F2  0E4E               	movlw	78
  5723  0010F4  583A               	subwfb	_UART_timeout+1,w,c
  5724  0010F6  A0D8               	btfss	status,0,c
  5725  0010F8  D00C               	goto	i1l3716
  5726                           
  5727                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  5728  0010FA  EE20 F006          	lfsr	2,6
  5729  0010FE  503F               	movf	_uc_ptr,w,c
  5730  001100  26D9               	addwf	fsr2l,f,c
  5731  001102  5040               	movf	_uc_ptr+1,w,c
  5732  001104  22DA               	addwfc	fsr2h,f,c
  5733  001106  0E01               	movlw	1
  5734  001108  6EDF               	movwf	indf2,c
  5735                           
  5736                           ;my_uart.c: 28: UART_timeout = 0;
  5737  00110A  0E00               	movlw	0
  5738  00110C  6E3A               	movwf	_UART_timeout+1,c
  5739  00110E  0E00               	movlw	0
  5740  001110  6E39               	movwf	_UART_timeout,c
  5741  001112                     i1l3716:
  5742                           
  5743                           ;my_uart.c: 29: }
  5744                           ;my_uart.c: 32: if (uc_ptr->buflen == 6) {
  5745  001112  EE20 F006          	lfsr	2,6
  5746  001116  503F               	movf	_uc_ptr,w,c
  5747  001118  26D9               	addwf	fsr2l,f,c
  5748  00111A  5040               	movf	_uc_ptr+1,w,c
  5749  00111C  22DA               	addwfc	fsr2h,f,c
  5750  00111E  0E06               	movlw	6
  5751  001120  62DF               	cpfseq	indf2,c
  5752  001122  D019               	goto	i1l3722
  5753                           
  5754                           ;my_uart.c: 33: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5755  001124  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5756  001126  0E1F               	movlw	31
  5757  001128  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5758  00112A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5759  00112C  C040  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5760  001130  C03F  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5761  001134  EE20 F006          	lfsr	2,6
  5762  001138  503F               	movf	_uc_ptr,w,c
  5763  00113A  26D9               	addwf	fsr2l,f,c
  5764  00113C  5040               	movf	_uc_ptr+1,w,c
  5765  00113E  22DA               	addwfc	fsr2h,f,c
  5766  001140  50DF               	movf	indf2,w,c
  5767  001142  EC1F  F00E         	call	_ToMainLow_sendmsg
  5768                           
  5769                           ;my_uart.c: 34: uc_ptr->buflen = 0;
  5770  001146  EE20 F006          	lfsr	2,6
  5771  00114A  503F               	movf	_uc_ptr,w,c
  5772  00114C  26D9               	addwf	fsr2l,f,c
  5773  00114E  5040               	movf	_uc_ptr+1,w,c
  5774  001150  22DA               	addwfc	fsr2h,f,c
  5775  001152  0E00               	movlw	0
  5776  001154  6EDF               	movwf	indf2,c
  5777  001156                     i1l3722:
  5778                           
  5779                           ;my_uart.c: 35: }
  5780                           ;my_uart.c: 36: }
  5781                           ;my_uart.c: 41: if (USART1_Status.OVERRUN_ERROR == 1) {
  5782  001156  A63E               	btfss	_USART1_Status,3,c
  5783  001158  0012               	return	
  5784                           
  5785                           ;my_uart.c: 48: RCSTAbits.CREN = 0;
  5786  00115A  98AC               	bcf	4012,4,c	;volatile
  5787                           
  5788                           ;my_uart.c: 49: RCSTAbits.CREN = 1;
  5789  00115C  88AC               	bsf	4012,4,c	;volatile
  5790                           
  5791                           ;my_uart.c: 50: ToMainLow_sendmsg(0, 30, (void *) 0);
  5792  00115E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5793  001160  0E1E               	movlw	30
  5794  001162  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5795  001164  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5796  001166  0E00               	movlw	0
  5797  001168  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5798  00116A  0E00               	movlw	0
  5799  00116C  6E18               	movwf	ToMainLow_sendmsg@data,c
  5800  00116E  0E00               	movlw	0
  5801  001170  EC1F  F00E         	call	_ToMainLow_sendmsg
  5802  001174  0012               	return	
  5803  001176                     __end_of_uart_recv_int_handler:
  5804                           	opt stack 0
  5805                           pclatu	equ	0xFFB
  5806                           pclath	equ	0xFFA
  5807                           tblptru	equ	0xFF8
  5808                           tblptrh	equ	0xFF7
  5809                           tblptrl	equ	0xFF6
  5810                           tablat	equ	0xFF5
  5811                           prodh	equ	0xFF4
  5812                           prodl	equ	0xFF3
  5813                           intcon	equ	0xFF2
  5814                           intcon2	equ	0xFF1
  5815                           postinc0	equ	0xFEE
  5816                           fsr0h	equ	0xFEA
  5817                           fsr0l	equ	0xFE9
  5818                           wreg	equ	0xFE8
  5819                           indf1	equ	0xFE7
  5820                           postinc1	equ	0xFE6
  5821                           postdec1	equ	0xFE5
  5822                           fsr1h	equ	0xFE2
  5823                           fsr1l	equ	0xFE1
  5824                           bsr	equ	0xFE0
  5825                           indf2	equ	0xFDF
  5826                           postinc2	equ	0xFDE
  5827                           postdec2	equ	0xFDD
  5828                           fsr2h	equ	0xFDA
  5829                           fsr2l	equ	0xFD9
  5830                           status	equ	0xFD8
  5831                           
  5832 ;; *************** function _Read1USART *****************
  5833 ;; Defined at:
  5834 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\u1read.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;		None
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  data            1    0[COMRAM] unsigned char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      unsigned char 
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, status,0
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5852 ;;Total ram usage:        1 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    6
  5855 ;; This function calls:
  5856 ;;		Nothing
  5857 ;; This function is called by:
  5858 ;;		_uart_recv_int_handler
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text30
  5863  001CC2                     __ptext30:
  5864                           	opt stack 0
  5865  001CC2                     _Read1USART:
  5866                           	opt stack 18
  5867                           
  5868                           ;incstack = 0
  5869  001CC2  0EF2               	movlw	242
  5870  001CC4  163E               	andwf	_USART1_Status,f,c
  5871  001CC6  ACAC               	btfss	4012,6,c	;volatile
  5872  001CC8  D003               	goto	i1l639
  5873  001CCA  903E               	bcf	_USART1_Status,0,c
  5874  001CCC  B0AC               	btfsc	4012,0,c	;volatile
  5875  001CCE  803E               	bsf	_USART1_Status,0,c
  5876  001CD0                     i1l639:
  5877  001CD0  B4AC               	btfsc	4012,2,c	;volatile
  5878  001CD2  843E               	bsf	_USART1_Status,2,c
  5879  001CD4  B2AC               	btfsc	4012,1,c	;volatile
  5880  001CD6  863E               	bsf	_USART1_Status,3,c
  5881  001CD8  CFAF F001          	movff	4015,Read1USART@data	;volatile
  5882  001CDC  5001               	movf	Read1USART@data,w,c
  5883  001CDE  0012               	return	
  5884  001CE0                     __end_of_Read1USART:
  5885                           	opt stack 0
  5886                           pclatu	equ	0xFFB
  5887                           pclath	equ	0xFFA
  5888                           tblptru	equ	0xFF8
  5889                           tblptrh	equ	0xFF7
  5890                           tblptrl	equ	0xFF6
  5891                           tablat	equ	0xFF5
  5892                           prodh	equ	0xFF4
  5893                           prodl	equ	0xFF3
  5894                           intcon	equ	0xFF2
  5895                           intcon2	equ	0xFF1
  5896                           postinc0	equ	0xFEE
  5897                           fsr0h	equ	0xFEA
  5898                           fsr0l	equ	0xFE9
  5899                           wreg	equ	0xFE8
  5900                           indf1	equ	0xFE7
  5901                           postinc1	equ	0xFE6
  5902                           postdec1	equ	0xFE5
  5903                           fsr1h	equ	0xFE2
  5904                           fsr1l	equ	0xFE1
  5905                           bsr	equ	0xFE0
  5906                           indf2	equ	0xFDF
  5907                           postinc2	equ	0xFDE
  5908                           postdec2	equ	0xFDD
  5909                           fsr2h	equ	0xFDA
  5910                           fsr2l	equ	0xFD9
  5911                           status	equ	0xFD8
  5912                           
  5913 ;; *************** function _timer1_int_handler *****************
  5914 ;; Defined at:
  5915 ;;		line 51 in file "../src/user_interrupts.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;		None               void
  5922 ;; Registers used:
  5923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5931 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5932 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5933 ;;Total ram usage:        1 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    9
  5936 ;; This function calls:
  5937 ;;		_ToMainLow_sendmsg
  5938 ;;		_WriteTimer1
  5939 ;; This function is called by:
  5940 ;;		_InterruptHandlerLow
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944                           	psect	text31
  5945  001B38                     __ptext31:
  5946                           	opt stack 0
  5947  001B38                     _timer1_int_handler:
  5948                           	opt stack 16
  5949                           
  5950                           ;user_interrupts.c: 59: t1Mult++;
  5951                           
  5952                           ;incstack = 0
  5953  001B38  4A3B               	infsnz	_t1Mult,f,c
  5954  001B3A  2A3C               	incf	_t1Mult+1,f,c
  5955                           
  5956                           ;user_interrupts.c: 61: if(t1Mult == 2){
  5957  001B3C  503B               	movf	_t1Mult,w,c
  5958  001B3E  0A02               	xorlw	2
  5959  001B40  103C               	iorwf	_t1Mult+1,w,c
  5960  001B42  A4D8               	btfss	status,2,c
  5961  001B44  D00F               	goto	i1l3702
  5962                           
  5963                           ;user_interrupts.c: 62: ToMainLow_sendmsg(0, 11, (void *) 0);
  5964  001B46  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5965  001B48  0E0B               	movlw	11
  5966  001B4A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5967  001B4C  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5968  001B4E  0E00               	movlw	0
  5969  001B50  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5970  001B52  0E00               	movlw	0
  5971  001B54  6E18               	movwf	ToMainLow_sendmsg@data,c
  5972  001B56  0E00               	movlw	0
  5973  001B58  EC1F  F00E         	call	_ToMainLow_sendmsg
  5974                           
  5975                           ;user_interrupts.c: 63: t1Mult = 0;
  5976  001B5C  0E00               	movlw	0
  5977  001B5E  6E3C               	movwf	_t1Mult+1,c
  5978  001B60  0E00               	movlw	0
  5979  001B62  6E3B               	movwf	_t1Mult,c
  5980  001B64                     i1l3702:
  5981                           
  5982                           ;user_interrupts.c: 64: }
  5983                           ;user_interrupts.c: 67: WriteTimer1(0);
  5984  001B64  0E00               	movlw	0
  5985  001B66  6E02               	movwf	WriteTimer1@timer1+1,c
  5986  001B68  0E00               	movlw	0
  5987  001B6A  6E01               	movwf	WriteTimer1@timer1,c
  5988  001B6C  ECAD  F00E         	call	_WriteTimer1	;wreg free
  5989  001B70  0012               	return	
  5990  001B72                     __end_of_timer1_int_handler:
  5991                           	opt stack 0
  5992                           pclatu	equ	0xFFB
  5993                           pclath	equ	0xFFA
  5994                           tblptru	equ	0xFF8
  5995                           tblptrh	equ	0xFF7
  5996                           tblptrl	equ	0xFF6
  5997                           tablat	equ	0xFF5
  5998                           prodh	equ	0xFF4
  5999                           prodl	equ	0xFF3
  6000                           intcon	equ	0xFF2
  6001                           intcon2	equ	0xFF1
  6002                           postinc0	equ	0xFEE
  6003                           fsr0h	equ	0xFEA
  6004                           fsr0l	equ	0xFE9
  6005                           wreg	equ	0xFE8
  6006                           indf1	equ	0xFE7
  6007                           postinc1	equ	0xFE6
  6008                           postdec1	equ	0xFE5
  6009                           fsr1h	equ	0xFE2
  6010                           fsr1l	equ	0xFE1
  6011                           bsr	equ	0xFE0
  6012                           indf2	equ	0xFDF
  6013                           postinc2	equ	0xFDE
  6014                           postdec2	equ	0xFDD
  6015                           fsr2h	equ	0xFDA
  6016                           fsr2l	equ	0xFD9
  6017                           status	equ	0xFD8
  6018                           
  6019 ;; *************** function _WriteTimer1 *****************
  6020 ;; Defined at:
  6021 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;  timer1          2    0[COMRAM] unsigned int 
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;  timer           2    2[COMRAM] struct Timers
  6026 ;; Return value:  Size  Location     Type
  6027 ;;		None               void
  6028 ;; Registers used:
  6029 ;;		None
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6038 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6039 ;;Total ram usage:        4 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    6
  6042 ;; This function calls:
  6043 ;;		Nothing
  6044 ;; This function is called by:
  6045 ;;		_timer1_int_handler
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	text32
  6050  001D5A                     __ptext32:
  6051                           	opt stack 0
  6052  001D5A                     _WriteTimer1:
  6053                           	opt stack 18
  6054                           
  6055                           ;incstack = 0
  6056  001D5A  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6057  001D5E  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6058  001D62  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6059  001D66  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6060  001D6A  0012               	return	
  6061  001D6C                     __end_of_WriteTimer1:
  6062                           	opt stack 0
  6063                           pclatu	equ	0xFFB
  6064                           pclath	equ	0xFFA
  6065                           tblptru	equ	0xFF8
  6066                           tblptrh	equ	0xFF7
  6067                           tblptrl	equ	0xFF6
  6068                           tablat	equ	0xFF5
  6069                           prodh	equ	0xFF4
  6070                           prodl	equ	0xFF3
  6071                           intcon	equ	0xFF2
  6072                           intcon2	equ	0xFF1
  6073                           postinc0	equ	0xFEE
  6074                           fsr0h	equ	0xFEA
  6075                           fsr0l	equ	0xFE9
  6076                           wreg	equ	0xFE8
  6077                           indf1	equ	0xFE7
  6078                           postinc1	equ	0xFE6
  6079                           postdec1	equ	0xFE5
  6080                           fsr1h	equ	0xFE2
  6081                           fsr1l	equ	0xFE1
  6082                           bsr	equ	0xFE0
  6083                           indf2	equ	0xFDF
  6084                           postinc2	equ	0xFDE
  6085                           postdec2	equ	0xFDD
  6086                           fsr2h	equ	0xFDA
  6087                           fsr2l	equ	0xFD9
  6088                           status	equ	0xFD8
  6089                           
  6090 ;; *************** function _ToMainLow_sendmsg *****************
  6091 ;; Defined at:
  6092 ;;		line 103 in file "../src/messages.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  length          1    wreg     unsigned char 
  6095 ;;  msgtype         1   22[COMRAM] unsigned char 
  6096 ;;  data            2   23[COMRAM] PTR void 
  6097 ;;		 -> NULL(0), main@uc(15), 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  length          1   25[COMRAM] unsigned char 
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  1    wreg      char 
  6102 ;; Registers used:
  6103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6109 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6110 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6112 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6113 ;;Total ram usage:        4 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; Hardware stack levels required when called:    8
  6116 ;; This function calls:
  6117 ;;		_send_msg
  6118 ;; This function is called by:
  6119 ;;		_uart_recv_int_handler
  6120 ;;		_timer1_int_handler
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text33
  6125  001C3E                     __ptext33:
  6126                           	opt stack 0
  6127  001C3E                     _ToMainLow_sendmsg:
  6128                           	opt stack 16
  6129                           
  6130                           ;incstack = 0
  6131                           ;ToMainLow_sendmsg@length stored from wreg
  6132  001C3E  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  6133                           
  6134                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6135                           ;	Return value of _ToMainLow_sendmsg is never used
  6136  001C42  0101               	movlb	1	; () banked
  6137  001C44  0E01               	movlw	high _ToMainLow_MQ
  6138  001C46  6E0C               	movwf	send_msg@qptr+1,c
  6139  001C48  0101               	movlb	1	; () banked
  6140  001C4A  0E43               	movlw	low _ToMainLow_MQ
  6141  001C4C  6E0B               	movwf	send_msg@qptr,c
  6142  001C4E  C01A  F00D         	movff	ToMainLow_sendmsg@length,send_msg@length
  6143  001C52  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  6144  001C56  C019  F010         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  6145  001C5A  C018  F00F         	movff	ToMainLow_sendmsg@data,send_msg@data
  6146  001C5E  ECBB  F008         	call	_send_msg	;wreg free
  6147  001C62  0012               	return	
  6148  001C64                     __end_of_ToMainLow_sendmsg:
  6149                           	opt stack 0
  6150                           pclatu	equ	0xFFB
  6151                           pclath	equ	0xFFA
  6152                           tblptru	equ	0xFF8
  6153                           tblptrh	equ	0xFF7
  6154                           tblptrl	equ	0xFF6
  6155                           tablat	equ	0xFF5
  6156                           prodh	equ	0xFF4
  6157                           prodl	equ	0xFF3
  6158                           intcon	equ	0xFF2
  6159                           intcon2	equ	0xFF1
  6160                           postinc0	equ	0xFEE
  6161                           fsr0h	equ	0xFEA
  6162                           fsr0l	equ	0xFE9
  6163                           wreg	equ	0xFE8
  6164                           indf1	equ	0xFE7
  6165                           postinc1	equ	0xFE6
  6166                           postdec1	equ	0xFE5
  6167                           fsr1h	equ	0xFE2
  6168                           fsr1l	equ	0xFE1
  6169                           bsr	equ	0xFE0
  6170                           indf2	equ	0xFDF
  6171                           postinc2	equ	0xFDE
  6172                           postdec2	equ	0xFDD
  6173                           fsr2h	equ	0xFDA
  6174                           fsr2l	equ	0xFD9
  6175                           status	equ	0xFD8
  6176                           
  6177 ;; *************** function _send_msg *****************
  6178 ;; Defined at:
  6179 ;;		line 24 in file "../src/messages.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6182 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6183 ;;  length          1   12[COMRAM] unsigned char 
  6184 ;;  msgtype         1   13[COMRAM] unsigned char 
  6185 ;;  data            2   14[COMRAM] PTR void 
  6186 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), main@uc(15), 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  6189 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6190 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6191 ;;  tlength         2   17[COMRAM] unsigned int 
  6192 ;;  slot            1   19[COMRAM] unsigned char 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      char 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6202 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6203 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6204 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6205 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6206 ;;Total ram usage:       12 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    7
  6209 ;; This function calls:
  6210 ;;		i1___awmod
  6211 ;;		i1_memcpy
  6212 ;; This function is called by:
  6213 ;;		_ToMainLow_sendmsg
  6214 ;;		_FromMainLow_sendmsg
  6215 ;;		_FromMainHigh_sendmsg
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text34
  6220  001176                     __ptext34:
  6221                           	opt stack 0
  6222  001176                     _send_msg:
  6223                           	opt stack 16
  6224                           
  6225                           ;messages.c: 25: unsigned char slot;
  6226                           ;messages.c: 27: msg *qmsg;
  6227                           ;messages.c: 28: size_t tlength = length;
  6228                           
  6229                           ;incstack = 0
  6230  001176  C00D  F012         	movff	send_msg@length,send_msg@tlength
  6231  00117A  6A13               	clrf	send_msg@tlength+1,c
  6232                           
  6233                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6234  00117C  EE20 F041          	lfsr	2,65
  6235  001180  500B               	movf	send_msg@qptr,w,c
  6236  001182  26D9               	addwf	fsr2l,f,c
  6237  001184  500C               	movf	send_msg@qptr+1,w,c
  6238  001186  22DA               	addwfc	fsr2h,f,c
  6239  001188  50DF               	movf	indf2,w,c
  6240  00118A  6E14               	movwf	send_msg@slot,c
  6241                           
  6242                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6243  00118C  5014               	movf	send_msg@slot,w,c
  6244  00118E  0D0D               	mullw	13
  6245  001190  50F3               	movf	prodl,w,c
  6246  001192  240B               	addwf	send_msg@qptr,w,c
  6247  001194  6E15               	movwf	send_msg@qmsg,c
  6248  001196  50F4               	movf	prodh,w,c
  6249  001198  200C               	addwfc	send_msg@qptr+1,w,c
  6250  00119A  6E16               	movwf	send_msg@qmsg+1,c
  6251                           
  6252                           ;messages.c: 41: if (qmsg->full != 0) {
  6253  00119C  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  6254  0011A0  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  6255  0011A4  50DF               	movf	indf2,w,c
  6256  0011A6  B4D8               	btfsc	status,2,c
  6257  0011A8  D002               	goto	i1l3678
  6258                           
  6259                           ;messages.c: 42: return (-1);
  6260  0011AA  0EFF               	movlw	255
  6261  0011AC  0012               	return	
  6262  0011AE                     i1l3678:
  6263                           
  6264                           ;messages.c: 43: }
  6265                           ;messages.c: 46: qmsg->length = length;
  6266  0011AE  EE20 F001          	lfsr	2,1
  6267  0011B2  5015               	movf	send_msg@qmsg,w,c
  6268  0011B4  26D9               	addwf	fsr2l,f,c
  6269  0011B6  5016               	movf	send_msg@qmsg+1,w,c
  6270  0011B8  22DA               	addwfc	fsr2h,f,c
  6271  0011BA  C00D  FFDF         	movff	send_msg@length,indf2
  6272                           
  6273                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6274  0011BE  EE20 F002          	lfsr	2,2
  6275  0011C2  5015               	movf	send_msg@qmsg,w,c
  6276  0011C4  26D9               	addwf	fsr2l,f,c
  6277  0011C6  5016               	movf	send_msg@qmsg+1,w,c
  6278  0011C8  22DA               	addwfc	fsr2h,f,c
  6279  0011CA  C00E  FFDF         	movff	send_msg@msgtype,indf2
  6280                           
  6281                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6282  0011CE  0E03               	movlw	3
  6283  0011D0  2415               	addwf	send_msg@qmsg,w,c
  6284  0011D2  6E01               	movwf	i1memcpy@d1,c
  6285  0011D4  0E00               	movlw	0
  6286  0011D6  2016               	addwfc	send_msg@qmsg+1,w,c
  6287  0011D8  6E02               	movwf	i1memcpy@d1+1,c
  6288  0011DA  C010  F004         	movff	send_msg@data+1,i1memcpy@s1+1
  6289  0011DE  C00F  F003         	movff	send_msg@data,i1memcpy@s1
  6290  0011E2  C012  F005         	movff	send_msg@tlength,i1memcpy@n
  6291  0011E6  C013  F006         	movff	send_msg@tlength+1,i1memcpy@n+1
  6292  0011EA  EC7C  F00D         	call	i1_memcpy	;wreg free
  6293                           
  6294                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6295  0011EE  EE20 F041          	lfsr	2,65
  6296  0011F2  500B               	movf	send_msg@qptr,w,c
  6297  0011F4  26D9               	addwf	fsr2l,f,c
  6298  0011F6  500C               	movf	send_msg@qptr+1,w,c
  6299  0011F8  22DA               	addwfc	fsr2h,f,c
  6300  0011FA  EE10 F041          	lfsr	1,65
  6301  0011FE  500B               	movf	send_msg@qptr,w,c
  6302  001200  26E1               	addwf	fsr1l,f,c
  6303  001202  500C               	movf	send_msg@qptr+1,w,c
  6304  001204  22E2               	addwfc	fsr1h,f,c
  6305  001206  50E7               	movf	indf1,w,c
  6306  001208  6E11               	movwf	??_send_msg& (0+255),c
  6307  00120A  0E01               	movlw	1
  6308  00120C  2411               	addwf	??_send_msg,w,c
  6309  00120E  6E01               	movwf	i1___awmod@dividend,c
  6310  001210  6A02               	clrf	i1___awmod@dividend+1,c
  6311  001212  0E00               	movlw	0
  6312  001214  2202               	addwfc	i1___awmod@dividend+1,f,c
  6313  001216  0E00               	movlw	0
  6314  001218  6E04               	movwf	i1___awmod@divisor+1,c
  6315  00121A  0E05               	movlw	5
  6316  00121C  6E03               	movwf	i1___awmod@divisor,c
  6317  00121E  ECC5  F009         	call	i1___awmod	;wreg free
  6318  001222  5001               	movf	?i1___awmod,w,c
  6319  001224  6EDF               	movwf	indf2,c
  6320                           
  6321                           ;messages.c: 59: qmsg->full = 1;
  6322  001226  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  6323  00122A  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  6324  00122E  0E01               	movlw	1
  6325  001230  6EDF               	movwf	indf2,c
  6326                           
  6327                           ;messages.c: 60: return (1);
  6328  001232  0E01               	movlw	1
  6329  001234  0012               	return	
  6330  001236                     __end_of_send_msg:
  6331                           	opt stack 0
  6332                           pclatu	equ	0xFFB
  6333                           pclath	equ	0xFFA
  6334                           tblptru	equ	0xFF8
  6335                           tblptrh	equ	0xFF7
  6336                           tblptrl	equ	0xFF6
  6337                           tablat	equ	0xFF5
  6338                           prodh	equ	0xFF4
  6339                           prodl	equ	0xFF3
  6340                           intcon	equ	0xFF2
  6341                           intcon2	equ	0xFF1
  6342                           postinc0	equ	0xFEE
  6343                           fsr0h	equ	0xFEA
  6344                           fsr0l	equ	0xFE9
  6345                           wreg	equ	0xFE8
  6346                           indf1	equ	0xFE7
  6347                           postinc1	equ	0xFE6
  6348                           postdec1	equ	0xFE5
  6349                           fsr1h	equ	0xFE2
  6350                           fsr1l	equ	0xFE1
  6351                           bsr	equ	0xFE0
  6352                           indf2	equ	0xFDF
  6353                           postinc2	equ	0xFDE
  6354                           postdec2	equ	0xFDD
  6355                           fsr2h	equ	0xFDA
  6356                           fsr2l	equ	0xFD9
  6357                           status	equ	0xFD8
  6358                           
  6359 ;; *************** function i1_memcpy *****************
  6360 ;; Defined at:
  6361 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  d1              2    0[COMRAM] PTR void 
  6364 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6365 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6366 ;;		 -> main@msgbuffer(11), 
  6367 ;;  s1              2    2[COMRAM] PTR const void 
  6368 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6369 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6370 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6371 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  6372 ;;  n               2    4[COMRAM] unsigned int 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6375 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6376 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6377 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6378 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  6379 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6380 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6381 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6382 ;;		 -> main@msgbuffer(11), 
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  2    0[COMRAM] PTR void 
  6385 ;; Registers used:
  6386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6392 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6393 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6395 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6396 ;;Total ram usage:       10 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    6
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_send_msg
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	text35
  6407  001AF8                     __ptext35:
  6408                           	opt stack 0
  6409  001AF8                     i1_memcpy:
  6410                           	opt stack 16
  6411                           
  6412                           ;incstack = 0
  6413  001AF8  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6414  001AFC  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6415  001B00  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6416  001B04  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6417  001B08  D00E               	goto	i1l3582
  6418  001B0A                     i1l3576:
  6419  001B0A  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6420  001B0E  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6421  001B12  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6422  001B16  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6423  001B1A  CFDF FFE7          	movff	indf2,indf1
  6424  001B1E  4A09               	infsnz	i1memcpy@s,f,c
  6425  001B20  2A0A               	incf	i1memcpy@s+1,f,c
  6426  001B22  4A07               	infsnz	i1memcpy@d,f,c
  6427  001B24  2A08               	incf	i1memcpy@d+1,f,c
  6428  001B26                     i1l3582:
  6429  001B26  0605               	decf	i1memcpy@n,f,c
  6430  001B28  A0D8               	btfss	status,0,c
  6431  001B2A  0606               	decf	i1memcpy@n+1,f,c
  6432  001B2C  2805               	incf	i1memcpy@n& (0+255),w,c
  6433  001B2E  B4D8               	btfsc	status,2,c
  6434  001B30  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6435  001B32  B4D8               	btfsc	status,2,c
  6436                           
  6437                           ;	Return value of i1_memcpy is never used
  6438  001B34  0012               	return	
  6439  001B36  D7E9               	goto	i1l3576
  6440  001B38                     __end_ofi1_memcpy:
  6441                           	opt stack 0
  6442                           pclatu	equ	0xFFB
  6443                           pclath	equ	0xFFA
  6444                           tblptru	equ	0xFF8
  6445                           tblptrh	equ	0xFF7
  6446                           tblptrl	equ	0xFF6
  6447                           tablat	equ	0xFF5
  6448                           prodh	equ	0xFF4
  6449                           prodl	equ	0xFF3
  6450                           intcon	equ	0xFF2
  6451                           intcon2	equ	0xFF1
  6452                           postinc0	equ	0xFEE
  6453                           fsr0h	equ	0xFEA
  6454                           fsr0l	equ	0xFE9
  6455                           wreg	equ	0xFE8
  6456                           indf1	equ	0xFE7
  6457                           postinc1	equ	0xFE6
  6458                           postdec1	equ	0xFE5
  6459                           fsr1h	equ	0xFE2
  6460                           fsr1l	equ	0xFE1
  6461                           bsr	equ	0xFE0
  6462                           indf2	equ	0xFDF
  6463                           postinc2	equ	0xFDE
  6464                           postdec2	equ	0xFDD
  6465                           fsr2h	equ	0xFDA
  6466                           fsr2l	equ	0xFD9
  6467                           status	equ	0xFD8
  6468                           
  6469 ;; *************** function i1___awmod *****************
  6470 ;; Defined at:
  6471 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;  dividend        2    0[COMRAM] int 
  6474 ;;  divisor         2    2[COMRAM] int 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  __awmod         1    6[COMRAM] unsigned char 
  6477 ;;  __awmod         1    5[COMRAM] unsigned char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  2    0[COMRAM] int 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0, prodl
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6488 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6489 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6490 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6491 ;;Total ram usage:        7 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    6
  6494 ;; This function calls:
  6495 ;;		Nothing
  6496 ;; This function is called by:
  6497 ;;		_send_msg
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text36
  6502  00138A                     __ptext36:
  6503                           	opt stack 0
  6504  00138A                     i1___awmod:
  6505                           	opt stack 16
  6506                           
  6507                           ;incstack = 0
  6508  00138A  6E05               	movwf	??i1___awmod& (0+255),c
  6509  00138C  0E00               	movlw	0
  6510  00138E  6E07               	movwf	i1___awmod@sign,c
  6511  001390  5005               	movf	??i1___awmod& (0+255),w,c
  6512  001392  5002               	movf	i1___awmod@dividend+1,w,c
  6513  001394  0A80               	xorlw	128
  6514  001396  6EF3               	movwf	prodl,c
  6515  001398  0E80               	movlw	128
  6516  00139A  5CF3               	subwf	prodl,w,c
  6517  00139C  0E00               	movlw	0
  6518  00139E  B4D8               	btfsc	status,2,c
  6519  0013A0  5C01               	subwf	i1___awmod@dividend,w,c
  6520  0013A2  B0D8               	btfsc	status,0,c
  6521  0013A4  D008               	goto	i1l3602
  6522  0013A6  6C01               	negf	i1___awmod@dividend,c
  6523  0013A8  1E02               	comf	i1___awmod@dividend+1,f,c
  6524  0013AA  B0D8               	btfsc	status,0,c
  6525  0013AC  2A02               	incf	i1___awmod@dividend+1,f,c
  6526  0013AE  6E05               	movwf	??i1___awmod& (0+255),c
  6527  0013B0  0E01               	movlw	1
  6528  0013B2  6E07               	movwf	i1___awmod@sign,c
  6529  0013B4  5005               	movf	??i1___awmod& (0+255),w,c
  6530  0013B6                     i1l3602:
  6531  0013B6  5004               	movf	i1___awmod@divisor+1,w,c
  6532  0013B8  0A80               	xorlw	128
  6533  0013BA  6EF3               	movwf	prodl,c
  6534  0013BC  0E80               	movlw	128
  6535  0013BE  5CF3               	subwf	prodl,w,c
  6536  0013C0  0E00               	movlw	0
  6537  0013C2  B4D8               	btfsc	status,2,c
  6538  0013C4  5C03               	subwf	i1___awmod@divisor,w,c
  6539  0013C6  B0D8               	btfsc	status,0,c
  6540  0013C8  D004               	goto	i1l3606
  6541  0013CA  6C03               	negf	i1___awmod@divisor,c
  6542  0013CC  1E04               	comf	i1___awmod@divisor+1,f,c
  6543  0013CE  B0D8               	btfsc	status,0,c
  6544  0013D0  2A04               	incf	i1___awmod@divisor+1,f,c
  6545  0013D2                     i1l3606:
  6546  0013D2  5004               	movf	i1___awmod@divisor+1,w,c
  6547  0013D4  1003               	iorwf	i1___awmod@divisor,w,c
  6548  0013D6  B4D8               	btfsc	status,2,c
  6549  0013D8  D01A               	goto	i1l3622
  6550  0013DA  6E05               	movwf	??i1___awmod& (0+255),c
  6551  0013DC  0E01               	movlw	1
  6552  0013DE  6E06               	movwf	i1___awmod@counter,c
  6553  0013E0  5005               	movf	??i1___awmod& (0+255),w,c
  6554  0013E2  D004               	goto	i1l3612
  6555  0013E4                     i1l3610:
  6556  0013E4  90D8               	bcf	status,0,c
  6557  0013E6  3603               	rlcf	i1___awmod@divisor,f,c
  6558  0013E8  3604               	rlcf	i1___awmod@divisor+1,f,c
  6559  0013EA  2A06               	incf	i1___awmod@counter,f,c
  6560  0013EC                     i1l3612:
  6561  0013EC  AE04               	btfss	i1___awmod@divisor+1,7,c
  6562  0013EE  D7FA               	goto	i1l3610
  6563  0013F0                     i1l3614:
  6564  0013F0  5003               	movf	i1___awmod@divisor,w,c
  6565  0013F2  5C01               	subwf	i1___awmod@dividend,w,c
  6566  0013F4  5004               	movf	i1___awmod@divisor+1,w,c
  6567  0013F6  5802               	subwfb	i1___awmod@dividend+1,w,c
  6568  0013F8  A0D8               	btfss	status,0,c
  6569  0013FA  D004               	goto	i1l3618
  6570  0013FC  5003               	movf	i1___awmod@divisor,w,c
  6571  0013FE  5E01               	subwf	i1___awmod@dividend,f,c
  6572  001400  5004               	movf	i1___awmod@divisor+1,w,c
  6573  001402  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6574  001404                     i1l3618:
  6575  001404  90D8               	bcf	status,0,c
  6576  001406  3204               	rrcf	i1___awmod@divisor+1,f,c
  6577  001408  3203               	rrcf	i1___awmod@divisor,f,c
  6578  00140A  2E06               	decfsz	i1___awmod@counter,f,c
  6579  00140C  D7F1               	goto	i1l3614
  6580  00140E                     i1l3622:
  6581  00140E  5007               	movf	i1___awmod@sign,w,c
  6582  001410  B4D8               	btfsc	status,2,c
  6583  001412  D004               	goto	i1l3626
  6584  001414  6C01               	negf	i1___awmod@dividend,c
  6585  001416  1E02               	comf	i1___awmod@dividend+1,f,c
  6586  001418  B0D8               	btfsc	status,0,c
  6587  00141A  2A02               	incf	i1___awmod@dividend+1,f,c
  6588  00141C                     i1l3626:
  6589  00141C  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6590  001420  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6591  001424  0012               	return	
  6592  001426                     __end_ofi1___awmod:
  6593                           	opt stack 0
  6594                           pclatu	equ	0xFFB
  6595                           pclath	equ	0xFFA
  6596                           tblptru	equ	0xFF8
  6597                           tblptrh	equ	0xFF7
  6598                           tblptrl	equ	0xFF6
  6599                           tablat	equ	0xFF5
  6600                           prodh	equ	0xFF4
  6601                           prodl	equ	0xFF3
  6602                           intcon	equ	0xFF2
  6603                           intcon2	equ	0xFF1
  6604                           postinc0	equ	0xFEE
  6605                           fsr0h	equ	0xFEA
  6606                           fsr0l	equ	0xFE9
  6607                           wreg	equ	0xFE8
  6608                           indf1	equ	0xFE7
  6609                           postinc1	equ	0xFE6
  6610                           postdec1	equ	0xFE5
  6611                           fsr1h	equ	0xFE2
  6612                           fsr1l	equ	0xFE1
  6613                           bsr	equ	0xFE0
  6614                           indf2	equ	0xFDF
  6615                           postinc2	equ	0xFDE
  6616                           postdec2	equ	0xFDD
  6617                           fsr2h	equ	0xFDA
  6618                           fsr2l	equ	0xFD9
  6619                           status	equ	0xFD8
  6620                           
  6621 ;; *************** function _adc_int_handler *****************
  6622 ;; Defined at:
  6623 ;;		line 70 in file "../src/user_interrupts.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;		None
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;		None               void
  6630 ;; Registers used:
  6631 ;;		None
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6641 ;;Total ram usage:        0 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    6
  6644 ;; This function calls:
  6645 ;;		Nothing
  6646 ;; This function is called by:
  6647 ;;		_InterruptHandlerLow
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text37
  6652  001DB0                     __ptext37:
  6653                           	opt stack 0
  6654  001DB0                     _adc_int_handler:
  6655                           	opt stack 19
  6656                           
  6657                           ;incstack = 0
  6658  001DB0  0012               	return	
  6659  001DB2                     __end_of_adc_int_handler:
  6660                           	opt stack 0
  6661                           pclatu	equ	0xFFB
  6662                           pclath	equ	0xFFA
  6663                           tblptru	equ	0xFF8
  6664                           tblptrh	equ	0xFF7
  6665                           tblptrl	equ	0xFF6
  6666                           tablat	equ	0xFF5
  6667                           prodh	equ	0xFF4
  6668                           prodl	equ	0xFF3
  6669                           intcon	equ	0xFF2
  6670                           intcon2	equ	0xFF1
  6671                           postinc0	equ	0xFEE
  6672                           fsr0h	equ	0xFEA
  6673                           fsr0l	equ	0xFE9
  6674                           wreg	equ	0xFE8
  6675                           indf1	equ	0xFE7
  6676                           postinc1	equ	0xFE6
  6677                           postdec1	equ	0xFE5
  6678                           fsr1h	equ	0xFE2
  6679                           fsr1l	equ	0xFE1
  6680                           bsr	equ	0xFE0
  6681                           indf2	equ	0xFDF
  6682                           postinc2	equ	0xFDE
  6683                           postdec2	equ	0xFDD
  6684                           fsr2h	equ	0xFDA
  6685                           fsr2l	equ	0xFD9
  6686                           status	equ	0xFD8
  6687                           
  6688 ;; *************** function _InterruptHandlerHigh *****************
  6689 ;; Defined at:
  6690 ;;		line 84 in file "../src/interrupts.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;		None
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;		None
  6695 ;; Return value:  Size  Location     Type
  6696 ;;		None               void
  6697 ;; Registers used:
  6698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6706 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6707 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6708 ;;Total ram usage:       14 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:    5
  6711 ;; This function calls:
  6712 ;;		_SleepIfOkay
  6713 ;;		_i2c_int_handler
  6714 ;;		_timer0_int_handler
  6715 ;; This function is called by:
  6716 ;;		Interrupt level 2
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	intcode
  6721  000008                     __pintcode:
  6722                           	opt stack 0
  6723  000008                     _InterruptHandlerHigh:
  6724                           	opt stack 16
  6725                           
  6726                           ;incstack = 0
  6727  000008  CFFA F07F          	movff	pclath,??_InterruptHandlerHigh
  6728  00000C  CFFB F080          	movff	pclatu,??_InterruptHandlerHigh+1
  6729  000010  EF13  F00A         	goto	int_func
  6730                           pclatu	equ	0xFFB
  6731                           pclath	equ	0xFFA
  6732                           tblptru	equ	0xFF8
  6733                           tblptrh	equ	0xFF7
  6734                           tblptrl	equ	0xFF6
  6735                           tablat	equ	0xFF5
  6736                           prodh	equ	0xFF4
  6737                           prodl	equ	0xFF3
  6738                           intcon	equ	0xFF2
  6739                           intcon2	equ	0xFF1
  6740                           postinc0	equ	0xFEE
  6741                           fsr0h	equ	0xFEA
  6742                           fsr0l	equ	0xFE9
  6743                           wreg	equ	0xFE8
  6744                           indf1	equ	0xFE7
  6745                           postinc1	equ	0xFE6
  6746                           postdec1	equ	0xFE5
  6747                           fsr1h	equ	0xFE2
  6748                           fsr1l	equ	0xFE1
  6749                           bsr	equ	0xFE0
  6750                           indf2	equ	0xFDF
  6751                           postinc2	equ	0xFDE
  6752                           postdec2	equ	0xFDD
  6753                           fsr2h	equ	0xFDA
  6754                           fsr2l	equ	0xFD9
  6755                           status	equ	0xFD8
  6756                           
  6757                           	psect	intcode_body
  6758  001426                     __pintcode_body:
  6759                           	opt stack 16
  6760  001426                     int_func:
  6761                           	opt stack 16
  6762  001426  CFE9 F081          	movff	fsr0l,??_InterruptHandlerHigh+2
  6763  00142A  CFEA F082          	movff	fsr0h,??_InterruptHandlerHigh+3
  6764  00142E  CFE1 F083          	movff	fsr1l,??_InterruptHandlerHigh+4
  6765  001432  CFE2 F084          	movff	fsr1h,??_InterruptHandlerHigh+5
  6766  001436  CFD9 F085          	movff	fsr2l,??_InterruptHandlerHigh+6
  6767  00143A  CFDA F086          	movff	fsr2h,??_InterruptHandlerHigh+7
  6768  00143E  CFF3 F087          	movff	prodl,??_InterruptHandlerHigh+8
  6769  001442  CFF4 F088          	movff	prodh,??_InterruptHandlerHigh+9
  6770  001446  CFF6 F089          	movff	tblptrl,??_InterruptHandlerHigh+10
  6771  00144A  CFF7 F08A          	movff	tblptrh,??_InterruptHandlerHigh+11
  6772  00144E  CFF8 F08B          	movff	tblptru,??_InterruptHandlerHigh+12
  6773  001452  CFF5 F08C          	movff	tablat,??_InterruptHandlerHigh+13
  6774                           
  6775                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6776  001456  A69E               	btfss	3998,3,c	;volatile
  6777  001458  D003               	goto	i2l3758
  6778                           
  6779                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6780  00145A  969E               	bcf	3998,3,c	;volatile
  6781                           
  6782                           ;interrupts.c: 94: i2c_int_handler();
  6783  00145C  ECD2  F00E         	call	_i2c_int_handler	;wreg free
  6784  001460                     i2l3758:
  6785                           
  6786                           ;interrupts.c: 96: }
  6787                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  6788  001460  A4F2               	btfss	intcon,2,c	;volatile
  6789  001462  D003               	goto	i2l3764
  6790                           
  6791                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  6792  001464  94F2               	bcf	intcon,2,c	;volatile
  6793                           
  6794                           ;interrupts.c: 103: timer0_int_handler();
  6795  001466  EC70  F00E         	call	_timer0_int_handler	;wreg free
  6796  00146A                     i2l3764:
  6797                           
  6798                           ;interrupts.c: 104: }
  6799                           ;interrupts.c: 113: SleepIfOkay();
  6800  00146A  ECB9  F00B         	call	_SleepIfOkay	;wreg free
  6801  00146E  C08C  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6802  001472  C08B  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6803  001476  C08A  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6804  00147A  C089  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6805  00147E  C088  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6806  001482  C087  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6807  001486  C086  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6808  00148A  C085  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6809  00148E  C084  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6810  001492  C083  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6811  001496  C082  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6812  00149A  C081  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6813  00149E  C080  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6814  0014A2  C07F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6815  0014A6  0011               	retfie		f
  6816  0014A8                     __end_of_InterruptHandlerHigh:
  6817                           	opt stack 0
  6818                           pclatu	equ	0xFFB
  6819                           pclath	equ	0xFFA
  6820                           tblptru	equ	0xFF8
  6821                           tblptrh	equ	0xFF7
  6822                           tblptrl	equ	0xFF6
  6823                           tablat	equ	0xFF5
  6824                           prodh	equ	0xFF4
  6825                           prodl	equ	0xFF3
  6826                           intcon	equ	0xFF2
  6827                           intcon2	equ	0xFF1
  6828                           postinc0	equ	0xFEE
  6829                           fsr0h	equ	0xFEA
  6830                           fsr0l	equ	0xFE9
  6831                           wreg	equ	0xFE8
  6832                           indf1	equ	0xFE7
  6833                           postinc1	equ	0xFE6
  6834                           postdec1	equ	0xFE5
  6835                           fsr1h	equ	0xFE2
  6836                           fsr1l	equ	0xFE1
  6837                           bsr	equ	0xFE0
  6838                           indf2	equ	0xFDF
  6839                           postinc2	equ	0xFDE
  6840                           postdec2	equ	0xFDD
  6841                           fsr2h	equ	0xFDA
  6842                           fsr2l	equ	0xFD9
  6843                           status	equ	0xFD8
  6844                           
  6845 ;; *************** function _timer0_int_handler *****************
  6846 ;; Defined at:
  6847 ;;		line 16 in file "../src/user_interrupts.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;		None
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;		None
  6852 ;; Return value:  Size  Location     Type
  6853 ;;		None               void
  6854 ;; Registers used:
  6855 ;;		wreg, status,2, status,0, cstack
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6865 ;;Total ram usage:        0 bytes
  6866 ;; Hardware stack levels used:    1
  6867 ;; Hardware stack levels required when called:    1
  6868 ;; This function calls:
  6869 ;;		_WriteTimer0
  6870 ;; This function is called by:
  6871 ;;		_InterruptHandlerHigh
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text39
  6876  001CE0                     __ptext39:
  6877                           	opt stack 0
  6878  001CE0                     _timer0_int_handler:
  6879                           	opt stack 19
  6880                           
  6881                           ;user_interrupts.c: 17: WriteTimer0(0);
  6882                           
  6883                           ;incstack = 0
  6884  001CE0  0E00               	movlw	0
  6885  001CE2  0100               	movlb	0	; () banked
  6886  001CE4  0100               	movlb	0	; () banked
  6887  001CE6  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6888  001CE8  0E00               	movlw	0
  6889  001CEA  0100               	movlb	0	; () banked
  6890  001CEC  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  6891  001CEE  ECB6  F00E         	call	_WriteTimer0	;wreg free
  6892                           
  6893                           ;user_interrupts.c: 33: UART_timeout++;
  6894  001CF2  4A39               	infsnz	_UART_timeout,f,c
  6895  001CF4  2A3A               	incf	_UART_timeout+1,f,c
  6896  001CF6  0012               	return	
  6897  001CF8                     __end_of_timer0_int_handler:
  6898                           	opt stack 0
  6899                           pclatu	equ	0xFFB
  6900                           pclath	equ	0xFFA
  6901                           tblptru	equ	0xFF8
  6902                           tblptrh	equ	0xFF7
  6903                           tblptrl	equ	0xFF6
  6904                           tablat	equ	0xFF5
  6905                           prodh	equ	0xFF4
  6906                           prodl	equ	0xFF3
  6907                           intcon	equ	0xFF2
  6908                           intcon2	equ	0xFF1
  6909                           postinc0	equ	0xFEE
  6910                           fsr0h	equ	0xFEA
  6911                           fsr0l	equ	0xFE9
  6912                           wreg	equ	0xFE8
  6913                           indf1	equ	0xFE7
  6914                           postinc1	equ	0xFE6
  6915                           postdec1	equ	0xFE5
  6916                           fsr1h	equ	0xFE2
  6917                           fsr1l	equ	0xFE1
  6918                           bsr	equ	0xFE0
  6919                           indf2	equ	0xFDF
  6920                           postinc2	equ	0xFDE
  6921                           postdec2	equ	0xFDD
  6922                           fsr2h	equ	0xFDA
  6923                           fsr2l	equ	0xFD9
  6924                           status	equ	0xFD8
  6925                           
  6926 ;; *************** function _WriteTimer0 *****************
  6927 ;; Defined at:
  6928 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  timer0          2    0[BANK0 ] unsigned int 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;  timer           2    2[BANK0 ] struct Timers
  6933 ;; Return value:  Size  Location     Type
  6934 ;;		None               void
  6935 ;; Registers used:
  6936 ;;		None
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6942 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6945 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6946 ;;Total ram usage:        4 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_timer0_int_handler
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text40
  6956  001D6C                     __ptext40:
  6957                           	opt stack 0
  6958  001D6C                     _WriteTimer0:
  6959                           	opt stack 19
  6960                           
  6961                           ;incstack = 0
  6962  001D6C  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6963  001D70  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6964  001D74  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6965  001D78  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6966  001D7C  0012               	return	
  6967  001D7E                     __end_of_WriteTimer0:
  6968                           	opt stack 0
  6969                           pclatu	equ	0xFFB
  6970                           pclath	equ	0xFFA
  6971                           tblptru	equ	0xFF8
  6972                           tblptrh	equ	0xFF7
  6973                           tblptrl	equ	0xFF6
  6974                           tablat	equ	0xFF5
  6975                           prodh	equ	0xFF4
  6976                           prodl	equ	0xFF3
  6977                           intcon	equ	0xFF2
  6978                           intcon2	equ	0xFF1
  6979                           postinc0	equ	0xFEE
  6980                           fsr0h	equ	0xFEA
  6981                           fsr0l	equ	0xFE9
  6982                           wreg	equ	0xFE8
  6983                           indf1	equ	0xFE7
  6984                           postinc1	equ	0xFE6
  6985                           postdec1	equ	0xFE5
  6986                           fsr1h	equ	0xFE2
  6987                           fsr1l	equ	0xFE1
  6988                           bsr	equ	0xFE0
  6989                           indf2	equ	0xFDF
  6990                           postinc2	equ	0xFDE
  6991                           postdec2	equ	0xFDD
  6992                           fsr2h	equ	0xFDA
  6993                           fsr2l	equ	0xFD9
  6994                           status	equ	0xFD8
  6995                           
  6996 ;; *************** function _i2c_int_handler *****************
  6997 ;; Defined at:
  6998 ;;		line 139 in file "../src/my_i2c.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;		None
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;		None
  7003 ;; Return value:  Size  Location     Type
  7004 ;;		None               void
  7005 ;; Registers used:
  7006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7007 ;; Tracked objects:
  7008 ;;		On entry : 0/0
  7009 ;;		On exit  : 0/0
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7016 ;;Total ram usage:        0 bytes
  7017 ;; Hardware stack levels used:    1
  7018 ;; Hardware stack levels required when called:    4
  7019 ;; This function calls:
  7020 ;;		_i2c_master_int_handler
  7021 ;; This function is called by:
  7022 ;;		_InterruptHandlerHigh
  7023 ;; This function uses a non-reentrant model
  7024 ;;
  7025                           
  7026                           	psect	text41
  7027  001DA4                     __ptext41:
  7028                           	opt stack 0
  7029  001DA4                     _i2c_int_handler:
  7030                           	opt stack 16
  7031                           
  7032                           ;my_i2c.c: 141: i2c_master_int_handler();
  7033                           
  7034                           ;incstack = 0
  7035  001DA4  EC89  F003         	call	_i2c_master_int_handler	;wreg free
  7036  001DA8  0012               	return	
  7037  001DAA                     __end_of_i2c_int_handler:
  7038                           	opt stack 0
  7039                           pclatu	equ	0xFFB
  7040                           pclath	equ	0xFFA
  7041                           tblptru	equ	0xFF8
  7042                           tblptrh	equ	0xFF7
  7043                           tblptrl	equ	0xFF6
  7044                           tablat	equ	0xFF5
  7045                           prodh	equ	0xFF4
  7046                           prodl	equ	0xFF3
  7047                           intcon	equ	0xFF2
  7048                           intcon2	equ	0xFF1
  7049                           postinc0	equ	0xFEE
  7050                           fsr0h	equ	0xFEA
  7051                           fsr0l	equ	0xFE9
  7052                           wreg	equ	0xFE8
  7053                           indf1	equ	0xFE7
  7054                           postinc1	equ	0xFE6
  7055                           postdec1	equ	0xFE5
  7056                           fsr1h	equ	0xFE2
  7057                           fsr1l	equ	0xFE1
  7058                           bsr	equ	0xFE0
  7059                           indf2	equ	0xFDF
  7060                           postinc2	equ	0xFDE
  7061                           postdec2	equ	0xFDD
  7062                           fsr2h	equ	0xFDA
  7063                           fsr2l	equ	0xFD9
  7064                           status	equ	0xFD8
  7065                           
  7066 ;; *************** function _i2c_master_int_handler *****************
  7067 ;; Defined at:
  7068 ;;		line 147 in file "../src/my_i2c.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;		None
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;		None
  7073 ;; Return value:  Size  Location     Type
  7074 ;;		None               void
  7075 ;; Registers used:
  7076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7084 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7085 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7086 ;;Total ram usage:        5 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; Hardware stack levels required when called:    3
  7089 ;; This function calls:
  7090 ;;		_ToMainHigh_sendmsg
  7091 ;;		_i2c_master_recv
  7092 ;; This function is called by:
  7093 ;;		_i2c_int_handler
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text42
  7098  000712                     __ptext42:
  7099                           	opt stack 0
  7100  000712                     _i2c_master_int_handler:
  7101                           	opt stack 16
  7102                           
  7103                           ;my_i2c.c: 150: if(!(ic_ptr->status == 0x5)) {
  7104                           
  7105                           ;incstack = 0
  7106  000712  0100               	movlb	0	; () banked
  7107  000714  EE20 F00D          	lfsr	2,13
  7108  000718  0100               	movlb	0	; () banked
  7109  00071A  51C8               	movf	_ic_ptr& (0+255),w,b
  7110  00071C  26D9               	addwf	fsr2l,f,c
  7111  00071E  0100               	movlb	0	; () banked
  7112  000720  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7113  000722  22DA               	addwfc	fsr2h,f,c
  7114  000724  50DF               	movf	indf2,w,c
  7115  000726  0A05               	xorlw	5
  7116  000728  B4D8               	btfsc	status,2,c
  7117  00072A  0012               	return	
  7118  00072C  D1B5               	goto	i2l3872
  7119  00072E                     i2l3814:
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;my_i2c.c: 154: {
  7123                           ;my_i2c.c: 155: if(ic_ptr->slave_addr % 2){
  7124  00072E  0100               	movlb	0	; () banked
  7125  000730  EE20 F01C          	lfsr	2,28
  7126  000734  0100               	movlb	0	; () banked
  7127  000736  51C8               	movf	_ic_ptr& (0+255),w,b
  7128  000738  26D9               	addwf	fsr2l,f,c
  7129  00073A  0100               	movlb	0	; () banked
  7130  00073C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7131  00073E  22DA               	addwfc	fsr2h,f,c
  7132  000740  50DF               	movf	indf2,w,c
  7133  000742  0100               	movlb	0	; () banked
  7134  000744  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7135  000746  0100               	movlb	0	; () banked
  7136  000748  A17A               	btfss	??_i2c_master_int_handler& (0+255),0,b
  7137  00074A  D00B               	goto	i2l3818
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;my_i2c.c: 157: ic_ptr->status = 0x7;
  7141  00074C  0100               	movlb	0	; () banked
  7142  00074E  EE20 F00D          	lfsr	2,13
  7143  000752  0100               	movlb	0	; () banked
  7144  000754  51C8               	movf	_ic_ptr& (0+255),w,b
  7145  000756  26D9               	addwf	fsr2l,f,c
  7146  000758  0100               	movlb	0	; () banked
  7147  00075A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7148  00075C  22DA               	addwfc	fsr2h,f,c
  7149  00075E  0E07               	movlw	7
  7150  000760  D00A               	goto	L6
  7151  000762                     i2l3818:
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;my_i2c.c: 160: ic_ptr->status = 0x9;
  7155  000762  0100               	movlb	0	; () banked
  7156  000764  EE20 F00D          	lfsr	2,13
  7157  000768  0100               	movlb	0	; () banked
  7158  00076A  51C8               	movf	_ic_ptr& (0+255),w,b
  7159  00076C  26D9               	addwf	fsr2l,f,c
  7160  00076E  0100               	movlb	0	; () banked
  7161  000770  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7162  000772  22DA               	addwfc	fsr2h,f,c
  7163  000774  0E09               	movlw	9
  7164  000776                     L6:
  7165  000776  6EDF               	movwf	indf2,c
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;my_i2c.c: 161: }
  7169                           ;my_i2c.c: 162: ic_ptr->bufind = 0;
  7170  000778  0100               	movlb	0	; () banked
  7171  00077A  EE20 F00B          	lfsr	2,11
  7172  00077E  0100               	movlb	0	; () banked
  7173  000780  51C8               	movf	_ic_ptr& (0+255),w,b
  7174  000782  26D9               	addwf	fsr2l,f,c
  7175  000784  0100               	movlb	0	; () banked
  7176  000786  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7177  000788  22DA               	addwfc	fsr2h,f,c
  7178  00078A  0E00               	movlw	0
  7179  00078C  6EDF               	movwf	indf2,c
  7180                           
  7181                           ;my_i2c.c: 163: SSPBUF = ic_ptr->slave_addr;
  7182  00078E  0100               	movlb	0	; () banked
  7183  000790  EE20 F01C          	lfsr	2,28
  7184  000794  0100               	movlb	0	; () banked
  7185  000796  51C8               	movf	_ic_ptr& (0+255),w,b
  7186  000798  26D9               	addwf	fsr2l,f,c
  7187  00079A  0100               	movlb	0	; () banked
  7188  00079C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7189  00079E  22DA               	addwfc	fsr2h,f,c
  7190  0007A0  50DF               	movf	indf2,w,c
  7191  0007A2  6EC9               	movwf	4041,c	;volatile
  7192                           
  7193                           ;my_i2c.c: 165: break;
  7194  0007A4  0012               	return	
  7195  0007A6                     i2l360:
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;my_i2c.c: 168: {
  7199                           ;my_i2c.c: 169: if(!SSPCON2bits.ACKSTAT){
  7200  0007A6  BCC5               	btfsc	4037,6,c	;volatile
  7201  0007A8  D070               	goto	i2l361
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;my_i2c.c: 170: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7205  0007AA  0100               	movlb	0	; () banked
  7206  0007AC  EE20 F01B          	lfsr	2,27
  7207  0007B0  0100               	movlb	0	; () banked
  7208  0007B2  51C8               	movf	_ic_ptr& (0+255),w,b
  7209  0007B4  26D9               	addwf	fsr2l,f,c
  7210  0007B6  0100               	movlb	0	; () banked
  7211  0007B8  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7212  0007BA  22DA               	addwfc	fsr2h,f,c
  7213  0007BC  50DF               	movf	indf2,w,c
  7214  0007BE  0100               	movlb	0	; () banked
  7215  0007C0  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7216  0007C2  0100               	movlb	0	; () banked
  7217  0007C4  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7218  0007C6  0D01               	mullw	1
  7219  0007C8  0E10               	movlw	16
  7220  0007CA  26F3               	addwf	prodl,f,c
  7221  0007CC  0E00               	movlw	0
  7222  0007CE  22F4               	addwfc	prodh,f,c
  7223  0007D0  50F3               	movf	prodl,w,c
  7224  0007D2  0100               	movlb	0	; () banked
  7225  0007D4  0100               	movlb	0	; () banked
  7226  0007D6  25C8               	addwf	_ic_ptr& (0+255),w,b
  7227  0007D8  6ED9               	movwf	fsr2l,c
  7228  0007DA  50F4               	movf	prodh,w,c
  7229  0007DC  0100               	movlb	0	; () banked
  7230  0007DE  0100               	movlb	0	; () banked
  7231  0007E0  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7232  0007E2  6EDA               	movwf	fsr2h,c
  7233  0007E4  50DF               	movf	indf2,w,c
  7234  0007E6  6EC9               	movwf	4041,c	;volatile
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;my_i2c.c: 172: if(ic_ptr->outbuflen > ic_ptr->outbufind+1){
  7238  0007E8  0100               	movlb	0	; () banked
  7239  0007EA  EE20 F01A          	lfsr	2,26
  7240  0007EE  0100               	movlb	0	; () banked
  7241  0007F0  51C8               	movf	_ic_ptr& (0+255),w,b
  7242  0007F2  26D9               	addwf	fsr2l,f,c
  7243  0007F4  0100               	movlb	0	; () banked
  7244  0007F6  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7245  0007F8  22DA               	addwfc	fsr2h,f,c
  7246  0007FA  50DF               	movf	indf2,w,c
  7247  0007FC  0100               	movlb	0	; () banked
  7248  0007FE  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7249  000800  6B7B               	clrf	(??_i2c_master_int_handler+1)& (0+255),b
  7250  000802  0100               	movlb	0	; () banked
  7251  000804  EE20 F01B          	lfsr	2,27
  7252  000808  0100               	movlb	0	; () banked
  7253  00080A  51C8               	movf	_ic_ptr& (0+255),w,b
  7254  00080C  26D9               	addwf	fsr2l,f,c
  7255  00080E  0100               	movlb	0	; () banked
  7256  000810  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7257  000812  22DA               	addwfc	fsr2h,f,c
  7258  000814  50DF               	movf	indf2,w,c
  7259  000816  0100               	movlb	0	; () banked
  7260  000818  6F7C               	movwf	(??_i2c_master_int_handler+2)& (0+255),b
  7261  00081A  6B7D               	clrf	(??_i2c_master_int_handler+3)& (0+255),b
  7262  00081C  0E01               	movlw	1
  7263  00081E  0100               	movlb	0	; () banked
  7264  000820  277C               	addwf	(??_i2c_master_int_handler+2)& (0+255),f,b
  7265  000822  0E00               	movlw	0
  7266  000824  237D               	addwfc	(??_i2c_master_int_handler+3)& (0+255),f,b
  7267  000826  0100               	movlb	0	; () banked
  7268  000828  517D               	movf	(??_i2c_master_int_handler+3)& (0+255),w,b
  7269  00082A  0A80               	xorlw	128
  7270  00082C  0100               	movlb	0	; () banked
  7271  00082E  6F7E               	movwf	(??_i2c_master_int_handler+4)& (0+255),b
  7272  000830  0100               	movlb	0	; () banked
  7273  000832  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7274  000834  0100               	movlb	0	; () banked
  7275  000836  5D7C               	subwf	(??_i2c_master_int_handler+2)& (0+255),w,b
  7276  000838  0100               	movlb	0	; () banked
  7277  00083A  517B               	movf	(??_i2c_master_int_handler+1)& (0+255),w,b
  7278  00083C  0A80               	xorlw	128
  7279  00083E  0100               	movlb	0	; () banked
  7280  000840  597E               	subwfb	(??_i2c_master_int_handler+4)& (0+255),w,b
  7281  000842  B0D8               	btfsc	status,0,c
  7282  000844  D016               	goto	i2l3826
  7283                           
  7284                           ; BSR set to: 0
  7285                           ;my_i2c.c: 173: ic_ptr->outbufind++;
  7286  000846  0100               	movlb	0	; () banked
  7287  000848  EE20 F01B          	lfsr	2,27
  7288  00084C  0100               	movlb	0	; () banked
  7289  00084E  51C8               	movf	_ic_ptr& (0+255),w,b
  7290  000850  26D9               	addwf	fsr2l,f,c
  7291  000852  0100               	movlb	0	; () banked
  7292  000854  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7293  000856  22DA               	addwfc	fsr2h,f,c
  7294  000858  2ADF               	incf	indf2,f,c
  7295                           
  7296                           ;my_i2c.c: 174: ic_ptr->status = 0x9;
  7297  00085A  0100               	movlb	0	; () banked
  7298  00085C  EE20 F00D          	lfsr	2,13
  7299  000860  0100               	movlb	0	; () banked
  7300  000862  51C8               	movf	_ic_ptr& (0+255),w,b
  7301  000864  26D9               	addwf	fsr2l,f,c
  7302  000866  0100               	movlb	0	; () banked
  7303  000868  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7304  00086A  22DA               	addwfc	fsr2h,f,c
  7305  00086C  0E09               	movlw	9
  7306  00086E  6EDF               	movwf	indf2,c
  7307                           
  7308                           ;my_i2c.c: 175: }else{
  7309  000870  0012               	return	
  7310  000872                     i2l3826:
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;my_i2c.c: 177: ic_ptr->status = 0xD;
  7314  000872  0100               	movlb	0	; () banked
  7315  000874  EE20 F00D          	lfsr	2,13
  7316  000878  0100               	movlb	0	; () banked
  7317  00087A  51C8               	movf	_ic_ptr& (0+255),w,b
  7318  00087C  26D9               	addwf	fsr2l,f,c
  7319  00087E  0100               	movlb	0	; () banked
  7320  000880  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7321  000882  22DA               	addwfc	fsr2h,f,c
  7322  000884  0E0D               	movlw	13
  7323  000886  6EDF               	movwf	indf2,c
  7324  000888  0012               	return	
  7325  00088A                     i2l361:
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;my_i2c.c: 181: SSPCON2bits.RSEN = 1;
  7329  00088A  82C5               	bsf	4037,1,c	;volatile
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;my_i2c.c: 182: ic_ptr->status = 0xA;
  7333  00088C  0100               	movlb	0	; () banked
  7334  00088E  EE20 F00D          	lfsr	2,13
  7335  000892  0100               	movlb	0	; () banked
  7336  000894  51C8               	movf	_ic_ptr& (0+255),w,b
  7337  000896  26D9               	addwf	fsr2l,f,c
  7338  000898  0100               	movlb	0	; () banked
  7339  00089A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7340  00089C  22DA               	addwfc	fsr2h,f,c
  7341  00089E  0E0A               	movlw	10
  7342  0008A0  6EDF               	movwf	indf2,c
  7343  0008A2  0012               	return	
  7344  0008A4                     i2l365:
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;my_i2c.c: 187: {
  7348                           ;my_i2c.c: 188: if(!SSPCON2bits.ACKSTAT){
  7349  0008A4  BCC5               	btfsc	4037,6,c	;volatile
  7350  0008A6  D00D               	goto	i2l3834
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;my_i2c.c: 189: SSPCON2bits.RCEN = 1;
  7354  0008A8  86C5               	bsf	4037,3,c	;volatile
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;my_i2c.c: 190: ic_ptr->status = 0xC;
  7358  0008AA  0100               	movlb	0	; () banked
  7359  0008AC  EE20 F00D          	lfsr	2,13
  7360  0008B0  0100               	movlb	0	; () banked
  7361  0008B2  51C8               	movf	_ic_ptr& (0+255),w,b
  7362  0008B4  26D9               	addwf	fsr2l,f,c
  7363  0008B6  0100               	movlb	0	; () banked
  7364  0008B8  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7365  0008BA  22DA               	addwfc	fsr2h,f,c
  7366  0008BC  0E0C               	movlw	12
  7367  0008BE  6EDF               	movwf	indf2,c
  7368                           
  7369                           ;my_i2c.c: 191: } else {
  7370  0008C0  0012               	return	
  7371  0008C2                     i2l3834:
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;my_i2c.c: 193: if(ic_ptr->buffer[4] == 0x78)
  7375  0008C2  0100               	movlb	0	; () banked
  7376  0008C4  EE20 F004          	lfsr	2,4
  7377  0008C8  0100               	movlb	0	; () banked
  7378  0008CA  51C8               	movf	_ic_ptr& (0+255),w,b
  7379  0008CC  26D9               	addwf	fsr2l,f,c
  7380  0008CE  0100               	movlb	0	; () banked
  7381  0008D0  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7382  0008D2  22DA               	addwfc	fsr2h,f,c
  7383  0008D4  0E78               	movlw	120
  7384  0008D6  62DF               	cpfseq	indf2,c
  7385  0008D8  D001               	goto	i2l3838
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;my_i2c.c: 194: LATBbits.LATB2 = 1;
  7389  0008DA  848A               	bsf	3978,2,c	;volatile
  7390  0008DC                     i2l3838:
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;my_i2c.c: 195: ToMainHigh_sendmsg(0, 46, ic_ptr->buffer);
  7394  0008DC  0100               	movlb	0	; () banked
  7395  0008DE  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7396  0008E0  0E2E               	movlw	46
  7397  0008E2  0100               	movlb	0	; () banked
  7398  0008E4  0100               	movlb	0	; () banked
  7399  0008E6  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7400  0008E8  0100               	movlb	0	; () banked
  7401  0008EA  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7402  0008EC  0100               	movlb	0	; () banked
  7403  0008EE  0100               	movlb	0	; () banked
  7404  0008F0  C0C9  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7405  0008F4  0100               	movlb	0	; () banked
  7406  0008F6  0100               	movlb	0	; () banked
  7407  0008F8  C0C8  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7408  0008FC  0E00               	movlw	0
  7409  0008FE  ECD4  F00D         	call	_ToMainHigh_sendmsg
  7410                           
  7411                           ;my_i2c.c: 196: LATBbits.LATB2 = 0;
  7412  000902  948A               	bcf	3978,2,c	;volatile
  7413                           
  7414                           ;my_i2c.c: 197: ic_ptr->buflen = 0;
  7415  000904  0100               	movlb	0	; () banked
  7416  000906  EE20 F00A          	lfsr	2,10
  7417  00090A  0100               	movlb	0	; () banked
  7418  00090C  51C8               	movf	_ic_ptr& (0+255),w,b
  7419  00090E  26D9               	addwf	fsr2l,f,c
  7420  000910  0100               	movlb	0	; () banked
  7421  000912  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7422  000914  22DA               	addwfc	fsr2h,f,c
  7423  000916  0E00               	movlw	0
  7424  000918  6EDF               	movwf	indf2,c
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;my_i2c.c: 198: ic_ptr->status = 0x5;
  7428  00091A  0100               	movlb	0	; () banked
  7429  00091C  EE20 F00D          	lfsr	2,13
  7430  000920  0100               	movlb	0	; () banked
  7431  000922  51C8               	movf	_ic_ptr& (0+255),w,b
  7432  000924  26D9               	addwf	fsr2l,f,c
  7433  000926  0100               	movlb	0	; () banked
  7434  000928  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7435  00092A  22DA               	addwfc	fsr2h,f,c
  7436  00092C  0E05               	movlw	5
  7437  00092E  6EDF               	movwf	indf2,c
  7438  000930  0012               	return	
  7439  000932                     i2l369:
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;my_i2c.c: 203: {
  7443                           ;my_i2c.c: 204: LATBbits.LATB1 = 1;
  7444  000932  828A               	bsf	3978,1,c	;volatile
  7445                           
  7446                           ;my_i2c.c: 205: LATBbits.LATB1 = 0;
  7447  000934  928A               	bcf	3978,1,c	;volatile
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;my_i2c.c: 206: if(ic_ptr->bufind < ic_ptr->buflen){
  7451  000936  0100               	movlb	0	; () banked
  7452  000938  EE20 F00B          	lfsr	2,11
  7453  00093C  0100               	movlb	0	; () banked
  7454  00093E  51C8               	movf	_ic_ptr& (0+255),w,b
  7455  000940  26D9               	addwf	fsr2l,f,c
  7456  000942  0100               	movlb	0	; () banked
  7457  000944  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7458  000946  22DA               	addwfc	fsr2h,f,c
  7459  000948  50DF               	movf	indf2,w,c
  7460  00094A  0100               	movlb	0	; () banked
  7461  00094C  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7462  00094E  0100               	movlb	0	; () banked
  7463  000950  EE20 F00A          	lfsr	2,10
  7464  000954  0100               	movlb	0	; () banked
  7465  000956  51C8               	movf	_ic_ptr& (0+255),w,b
  7466  000958  26D9               	addwf	fsr2l,f,c
  7467  00095A  0100               	movlb	0	; () banked
  7468  00095C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7469  00095E  22DA               	addwfc	fsr2h,f,c
  7470  000960  50DF               	movf	indf2,w,c
  7471  000962  0100               	movlb	0	; () banked
  7472  000964  5D7A               	subwf	??_i2c_master_int_handler& (0+255),w,b
  7473  000966  B0D8               	btfsc	status,0,c
  7474  000968  D030               	goto	i2l3854
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;my_i2c.c: 207: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  7478  00096A  0100               	movlb	0	; () banked
  7479  00096C  EE20 F00B          	lfsr	2,11
  7480  000970  0100               	movlb	0	; () banked
  7481  000972  51C8               	movf	_ic_ptr& (0+255),w,b
  7482  000974  26D9               	addwf	fsr2l,f,c
  7483  000976  0100               	movlb	0	; () banked
  7484  000978  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7485  00097A  22DA               	addwfc	fsr2h,f,c
  7486  00097C  50DF               	movf	indf2,w,c
  7487  00097E  0100               	movlb	0	; () banked
  7488  000980  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7489  000982  0100               	movlb	0	; () banked
  7490  000984  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7491  000986  0D01               	mullw	1
  7492  000988  50F3               	movf	prodl,w,c
  7493  00098A  0100               	movlb	0	; () banked
  7494  00098C  0100               	movlb	0	; () banked
  7495  00098E  25C8               	addwf	_ic_ptr& (0+255),w,b
  7496  000990  6ED9               	movwf	fsr2l,c
  7497  000992  50F4               	movf	prodh,w,c
  7498  000994  0100               	movlb	0	; () banked
  7499  000996  0100               	movlb	0	; () banked
  7500  000998  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7501  00099A  6EDA               	movwf	fsr2h,c
  7502  00099C  CFC9 FFDF          	movff	4041,indf2	;volatile
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;my_i2c.c: 208: ic_ptr->bufind++;
  7506  0009A0  0100               	movlb	0	; () banked
  7507  0009A2  EE20 F00B          	lfsr	2,11
  7508  0009A6  0100               	movlb	0	; () banked
  7509  0009A8  51C8               	movf	_ic_ptr& (0+255),w,b
  7510  0009AA  26D9               	addwf	fsr2l,f,c
  7511  0009AC  0100               	movlb	0	; () banked
  7512  0009AE  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7513  0009B0  22DA               	addwfc	fsr2h,f,c
  7514  0009B2  2ADF               	incf	indf2,f,c
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;my_i2c.c: 209: ic_ptr->status = 0x7;
  7518  0009B4  0100               	movlb	0	; () banked
  7519  0009B6  EE20 F00D          	lfsr	2,13
  7520  0009BA  0100               	movlb	0	; () banked
  7521  0009BC  51C8               	movf	_ic_ptr& (0+255),w,b
  7522  0009BE  26D9               	addwf	fsr2l,f,c
  7523  0009C0  0100               	movlb	0	; () banked
  7524  0009C2  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7525  0009C4  22DA               	addwfc	fsr2h,f,c
  7526  0009C6  0E07               	movlw	7
  7527  0009C8  6EDF               	movwf	indf2,c
  7528  0009CA                     i2l3854:
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;my_i2c.c: 211: }
  7532                           ;my_i2c.c: 212: if(ic_ptr->bufind == ic_ptr->buflen){
  7533  0009CA  0100               	movlb	0	; () banked
  7534  0009CC  EE20 F00B          	lfsr	2,11
  7535  0009D0  0100               	movlb	0	; () banked
  7536  0009D2  51C8               	movf	_ic_ptr& (0+255),w,b
  7537  0009D4  26D9               	addwf	fsr2l,f,c
  7538  0009D6  0100               	movlb	0	; () banked
  7539  0009D8  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7540  0009DA  22DA               	addwfc	fsr2h,f,c
  7541  0009DC  0100               	movlb	0	; () banked
  7542  0009DE  EE10 F00A          	lfsr	1,10
  7543  0009E2  0100               	movlb	0	; () banked
  7544  0009E4  51C8               	movf	_ic_ptr& (0+255),w,b
  7545  0009E6  26E1               	addwf	fsr1l,f,c
  7546  0009E8  0100               	movlb	0	; () banked
  7547  0009EA  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7548  0009EC  22E2               	addwfc	fsr1h,f,c
  7549  0009EE  50E7               	movf	indf1,w,c
  7550  0009F0  62DF               	cpfseq	indf2,c
  7551  0009F2  D02A               	goto	i2l371
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;my_i2c.c: 213: ic_ptr->status = 0xB;
  7555  0009F4  0100               	movlb	0	; () banked
  7556  0009F6  EE20 F00D          	lfsr	2,13
  7557  0009FA  0100               	movlb	0	; () banked
  7558  0009FC  51C8               	movf	_ic_ptr& (0+255),w,b
  7559  0009FE  26D9               	addwf	fsr2l,f,c
  7560  000A00  0100               	movlb	0	; () banked
  7561  000A02  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7562  000A04  22DA               	addwfc	fsr2h,f,c
  7563  000A06  0E0B               	movlw	11
  7564  000A08  6EDF               	movwf	indf2,c
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;my_i2c.c: 216: ToMainHigh_sendmsg(ic_ptr->buflen, 45, ic_ptr->buffer);
  7568  000A0A  0100               	movlb	0	; () banked
  7569  000A0C  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7570  000A0E  0E2D               	movlw	45
  7571  000A10  0100               	movlb	0	; () banked
  7572  000A12  0100               	movlb	0	; () banked
  7573  000A14  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7574  000A16  0100               	movlb	0	; () banked
  7575  000A18  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7576  000A1A  0100               	movlb	0	; () banked
  7577  000A1C  0100               	movlb	0	; () banked
  7578  000A1E  C0C9  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7579  000A22  0100               	movlb	0	; () banked
  7580  000A24  0100               	movlb	0	; () banked
  7581  000A26  C0C8  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7582  000A2A  0100               	movlb	0	; () banked
  7583  000A2C  EE20 F00A          	lfsr	2,10
  7584  000A30  0100               	movlb	0	; () banked
  7585  000A32  51C8               	movf	_ic_ptr& (0+255),w,b
  7586  000A34  26D9               	addwf	fsr2l,f,c
  7587  000A36  0100               	movlb	0	; () banked
  7588  000A38  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7589  000A3A  22DA               	addwfc	fsr2h,f,c
  7590  000A3C  50DF               	movf	indf2,w,c
  7591  000A3E  ECD4  F00D         	call	_ToMainHigh_sendmsg
  7592                           
  7593                           ;my_i2c.c: 219: SSPCON2bits.ACKDT = 1;
  7594  000A42  8AC5               	bsf	4037,5,c	;volatile
  7595                           
  7596                           ;my_i2c.c: 220: SSPCON2bits.ACKEN = 1;
  7597  000A44  88C5               	bsf	4037,4,c	;volatile
  7598                           
  7599                           ;my_i2c.c: 221: } else {
  7600  000A46  0012               	return	
  7601  000A48                     i2l371:
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;my_i2c.c: 223: SSPCON2bits.ACKDT = 0;
  7605  000A48  9AC5               	bcf	4037,5,c	;volatile
  7606                           
  7607                           ;my_i2c.c: 224: SSPCON2bits.ACKEN = 1;
  7608  000A4A  88C5               	bsf	4037,4,c	;volatile
  7609  000A4C  0012               	return	
  7610  000A4E                     i2l3864:
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;my_i2c.c: 230: {
  7614                           ;my_i2c.c: 231: ic_ptr->status = 0x5;
  7615  000A4E  0100               	movlb	0	; () banked
  7616  000A50  EE20 F00D          	lfsr	2,13
  7617  000A54  0100               	movlb	0	; () banked
  7618  000A56  51C8               	movf	_ic_ptr& (0+255),w,b
  7619  000A58  26D9               	addwf	fsr2l,f,c
  7620  000A5A  0100               	movlb	0	; () banked
  7621  000A5C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7622  000A5E  22DA               	addwfc	fsr2h,f,c
  7623  000A60  0E05               	movlw	5
  7624  000A62  6EDF               	movwf	indf2,c
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;my_i2c.c: 232: i2c_master_recv(ic_ptr->buflen);
  7628  000A64  0100               	movlb	0	; () banked
  7629  000A66  EE20 F00A          	lfsr	2,10
  7630  000A6A  0100               	movlb	0	; () banked
  7631  000A6C  51C8               	movf	_ic_ptr& (0+255),w,b
  7632  000A6E  26D9               	addwf	fsr2l,f,c
  7633  000A70  0100               	movlb	0	; () banked
  7634  000A72  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7635  000A74  22DA               	addwfc	fsr2h,f,c
  7636  000A76  50DF               	movf	indf2,w,c
  7637  000A78  EC22  F00C         	call	_i2c_master_recv
  7638                           
  7639                           ;my_i2c.c: 233: break;
  7640  000A7C  0012               	return	
  7641  000A7E                     i2l374:
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;my_i2c.c: 236: {
  7645                           ;my_i2c.c: 238: SSPCON2bits.PEN = 1;
  7646  000A7E  84C5               	bsf	4037,2,c	;volatile
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;my_i2c.c: 240: ic_ptr->status = 0x5;
  7650  000A80  0100               	movlb	0	; () banked
  7651  000A82  EE20 F00D          	lfsr	2,13
  7652  000A86  0100               	movlb	0	; () banked
  7653  000A88  51C8               	movf	_ic_ptr& (0+255),w,b
  7654  000A8A  26D9               	addwf	fsr2l,f,c
  7655  000A8C  0100               	movlb	0	; () banked
  7656  000A8E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7657  000A90  22DA               	addwfc	fsr2h,f,c
  7658  000A92  0E05               	movlw	5
  7659  000A94  6EDF               	movwf	indf2,c
  7660                           
  7661                           ;my_i2c.c: 241: break;
  7662  000A96  0012               	return	
  7663  000A98                     i2l3872:
  7664                           
  7665                           ; BSR set to: 0
  7666  000A98  0100               	movlb	0	; () banked
  7667  000A9A  EE20 F00D          	lfsr	2,13
  7668  000A9E  0100               	movlb	0	; () banked
  7669  000AA0  51C8               	movf	_ic_ptr& (0+255),w,b
  7670  000AA2  26D9               	addwf	fsr2l,f,c
  7671  000AA4  0100               	movlb	0	; () banked
  7672  000AA6  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7673  000AA8  22DA               	addwfc	fsr2h,f,c
  7674  000AAA  50DF               	movf	indf2,w,c
  7675                           
  7676                           ; Switch size 1, requested type "space"
  7677                           ; Number of cases is 6, Range of values is 7 to 13
  7678                           ; switch strategies available:
  7679                           ; Name         Instructions Cycles
  7680                           ; simple_byte           19    10 (average)
  7681                           ;	Chosen strategy is simple_byte
  7682  000AAC  0A07               	xorlw	7	; case 7
  7683  000AAE  B4D8               	btfsc	status,2,c
  7684  000AB0  D6F9               	goto	i2l365
  7685  000AB2  0A0E               	xorlw	14	; case 9
  7686  000AB4  B4D8               	btfsc	status,2,c
  7687  000AB6  D677               	goto	i2l360
  7688  000AB8  0A03               	xorlw	3	; case 10
  7689  000ABA  B4D8               	btfsc	status,2,c
  7690  000ABC  D638               	goto	i2l3814
  7691  000ABE  0A01               	xorlw	1	; case 11
  7692  000AC0  B4D8               	btfsc	status,2,c
  7693  000AC2  D7DD               	goto	i2l374
  7694  000AC4  0A07               	xorlw	7	; case 12
  7695  000AC6  B4D8               	btfsc	status,2,c
  7696  000AC8  D734               	goto	i2l369
  7697  000ACA  0A01               	xorlw	1	; case 13
  7698  000ACC  A4D8               	btfss	status,2,c
  7699  000ACE  0012               	return	
  7700  000AD0  D7BE               	goto	i2l3864
  7701  000AD2                     __end_of_i2c_master_int_handler:
  7702                           	opt stack 0
  7703                           pclatu	equ	0xFFB
  7704                           pclath	equ	0xFFA
  7705                           tblptru	equ	0xFF8
  7706                           tblptrh	equ	0xFF7
  7707                           tblptrl	equ	0xFF6
  7708                           tablat	equ	0xFF5
  7709                           prodh	equ	0xFF4
  7710                           prodl	equ	0xFF3
  7711                           intcon	equ	0xFF2
  7712                           intcon2	equ	0xFF1
  7713                           postinc0	equ	0xFEE
  7714                           fsr0h	equ	0xFEA
  7715                           fsr0l	equ	0xFE9
  7716                           wreg	equ	0xFE8
  7717                           indf1	equ	0xFE7
  7718                           postinc1	equ	0xFE6
  7719                           postdec1	equ	0xFE5
  7720                           fsr1h	equ	0xFE2
  7721                           fsr1l	equ	0xFE1
  7722                           bsr	equ	0xFE0
  7723                           indf2	equ	0xFDF
  7724                           postinc2	equ	0xFDE
  7725                           postdec2	equ	0xFDD
  7726                           fsr2h	equ	0xFDA
  7727                           fsr2l	equ	0xFD9
  7728                           status	equ	0xFD8
  7729                           
  7730 ;; *************** function _i2c_master_recv *****************
  7731 ;; Defined at:
  7732 ;;		line 74 in file "../src/my_i2c.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;  length          1    wreg     unsigned char 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  length          1    0[BANK0 ] unsigned char 
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  1    wreg      unsigned char 
  7739 ;; Registers used:
  7740 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7747 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7749 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7750 ;;Total ram usage:        1 bytes
  7751 ;; Hardware stack levels used:    1
  7752 ;; This function calls:
  7753 ;;		Nothing
  7754 ;; This function is called by:
  7755 ;;		_i2c_master_int_handler
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           	psect	text43
  7760  001844                     __ptext43:
  7761                           	opt stack 0
  7762  001844                     _i2c_master_recv:
  7763                           	opt stack 18
  7764                           
  7765                           ;incstack = 0
  7766                           ;i2c_master_recv@length stored from wreg
  7767  001844  CFE8 F060          	movff	wreg,i2c_master_recv@length
  7768                           
  7769                           ;my_i2c.c: 77: if(ic_ptr->status == 0x5){
  7770  001848  0100               	movlb	0	; () banked
  7771  00184A  EE20 F00D          	lfsr	2,13
  7772  00184E  0100               	movlb	0	; () banked
  7773  001850  51C8               	movf	_ic_ptr& (0+255),w,b
  7774  001852  26D9               	addwf	fsr2l,f,c
  7775  001854  0100               	movlb	0	; () banked
  7776  001856  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7777  001858  22DA               	addwfc	fsr2h,f,c
  7778  00185A  0E05               	movlw	5
  7779  00185C  62DF               	cpfseq	indf2,c
  7780  00185E  0012               	return	
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;my_i2c.c: 78: ic_ptr->slave_addr |= 0x01;
  7784  001860  0100               	movlb	0	; () banked
  7785  001862  EE20 F01C          	lfsr	2,28
  7786  001866  0100               	movlb	0	; () banked
  7787  001868  51C8               	movf	_ic_ptr& (0+255),w,b
  7788  00186A  26D9               	addwf	fsr2l,f,c
  7789  00186C  0100               	movlb	0	; () banked
  7790  00186E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7791  001870  22DA               	addwfc	fsr2h,f,c
  7792  001872  0E00               	movlw	0
  7793  001874  80DB               	bsf	plusw2,0,c
  7794                           
  7795                           ;my_i2c.c: 79: ic_ptr->buflen = length;
  7796  001876  0100               	movlb	0	; () banked
  7797  001878  EE20 F00A          	lfsr	2,10
  7798  00187C  0100               	movlb	0	; () banked
  7799  00187E  51C8               	movf	_ic_ptr& (0+255),w,b
  7800  001880  26D9               	addwf	fsr2l,f,c
  7801  001882  0100               	movlb	0	; () banked
  7802  001884  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7803  001886  22DA               	addwfc	fsr2h,f,c
  7804  001888  0100               	movlb	0	; () banked
  7805  00188A  C060  FFDF         	movff	i2c_master_recv@length,indf2
  7806                           
  7807                           ;my_i2c.c: 81: ic_ptr->status = 0xA;
  7808  00188E  0100               	movlb	0	; () banked
  7809  001890  EE20 F00D          	lfsr	2,13
  7810  001894  0100               	movlb	0	; () banked
  7811  001896  51C8               	movf	_ic_ptr& (0+255),w,b
  7812  001898  26D9               	addwf	fsr2l,f,c
  7813  00189A  0100               	movlb	0	; () banked
  7814  00189C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7815  00189E  22DA               	addwfc	fsr2h,f,c
  7816  0018A0  0E0A               	movlw	10
  7817  0018A2  6EDF               	movwf	indf2,c
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;my_i2c.c: 84: SSPCON2bits.RSEN = 1;
  7821  0018A4  82C5               	bsf	4037,1,c	;volatile
  7822  0018A6  0012               	return	
  7823  0018A8                     __end_of_i2c_master_recv:
  7824                           	opt stack 0
  7825                           pclatu	equ	0xFFB
  7826                           pclath	equ	0xFFA
  7827                           tblptru	equ	0xFF8
  7828                           tblptrh	equ	0xFF7
  7829                           tblptrl	equ	0xFF6
  7830                           tablat	equ	0xFF5
  7831                           prodh	equ	0xFF4
  7832                           prodl	equ	0xFF3
  7833                           intcon	equ	0xFF2
  7834                           intcon2	equ	0xFF1
  7835                           postinc0	equ	0xFEE
  7836                           fsr0h	equ	0xFEA
  7837                           fsr0l	equ	0xFE9
  7838                           wreg	equ	0xFE8
  7839                           indf1	equ	0xFE7
  7840                           postinc1	equ	0xFE6
  7841                           postdec1	equ	0xFE5
  7842                           fsr1h	equ	0xFE2
  7843                           fsr1l	equ	0xFE1
  7844                           bsr	equ	0xFE0
  7845                           indf2	equ	0xFDF
  7846                           postinc2	equ	0xFDE
  7847                           postdec2	equ	0xFDD
  7848                           plusw2	equ	0xFDB
  7849                           fsr2h	equ	0xFDA
  7850                           fsr2l	equ	0xFD9
  7851                           status	equ	0xFD8
  7852                           
  7853 ;; *************** function _ToMainHigh_sendmsg *****************
  7854 ;; Defined at:
  7855 ;;		line 126 in file "../src/messages.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  length          1    wreg     unsigned char 
  7858 ;;  msgtype         1   22[BANK0 ] unsigned char 
  7859 ;;  data            2   23[BANK0 ] PTR void 
  7860 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;  length          1   25[BANK0 ] unsigned char 
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      char 
  7865 ;; Registers used:
  7866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7872 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7873 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7875 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7876 ;;Total ram usage:        4 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; Hardware stack levels required when called:    2
  7879 ;; This function calls:
  7880 ;;		i2_send_msg
  7881 ;; This function is called by:
  7882 ;;		_i2c_master_int_handler
  7883 ;;		_i2c_slave_int_handler
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           	psect	text44
  7888  001BA8                     __ptext44:
  7889                           	opt stack 0
  7890  001BA8                     _ToMainHigh_sendmsg:
  7891                           	opt stack 16
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;incstack = 0
  7895                           ;ToMainHigh_sendmsg@length stored from wreg
  7896  001BA8  CFE8 F079          	movff	wreg,ToMainHigh_sendmsg@length
  7897                           
  7898                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7899                           ;	Return value of _ToMainHigh_sendmsg is never used
  7900  001BAC  0101               	movlb	1	; () banked
  7901  001BAE  0E01               	movlw	high _ToMainHigh_MQ
  7902  001BB0  0100               	movlb	0	; () banked
  7903  001BB2  0100               	movlb	0	; () banked
  7904  001BB4  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  7905  001BB6  0101               	movlb	1	; () banked
  7906  001BB8  0E00               	movlw	low _ToMainHigh_MQ
  7907  001BBA  0100               	movlb	0	; () banked
  7908  001BBC  0100               	movlb	0	; () banked
  7909  001BBE  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  7910  001BC0  C079  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7911  001BC4  C076  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7912  001BC8  0100               	movlb	0	; () banked
  7913  001BCA  0100               	movlb	0	; () banked
  7914  001BCC  C078  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7915  001BD0  0100               	movlb	0	; () banked
  7916  001BD2  0100               	movlb	0	; () banked
  7917  001BD4  C077  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7918  001BD8  ECB7  F006         	call	i2_send_msg	;wreg free
  7919  001BDC  0012               	return	
  7920  001BDE                     __end_of_ToMainHigh_sendmsg:
  7921                           	opt stack 0
  7922                           pclatu	equ	0xFFB
  7923                           pclath	equ	0xFFA
  7924                           tblptru	equ	0xFF8
  7925                           tblptrh	equ	0xFF7
  7926                           tblptrl	equ	0xFF6
  7927                           tablat	equ	0xFF5
  7928                           prodh	equ	0xFF4
  7929                           prodl	equ	0xFF3
  7930                           intcon	equ	0xFF2
  7931                           intcon2	equ	0xFF1
  7932                           postinc0	equ	0xFEE
  7933                           fsr0h	equ	0xFEA
  7934                           fsr0l	equ	0xFE9
  7935                           wreg	equ	0xFE8
  7936                           indf1	equ	0xFE7
  7937                           postinc1	equ	0xFE6
  7938                           postdec1	equ	0xFE5
  7939                           fsr1h	equ	0xFE2
  7940                           fsr1l	equ	0xFE1
  7941                           bsr	equ	0xFE0
  7942                           indf2	equ	0xFDF
  7943                           postinc2	equ	0xFDE
  7944                           postdec2	equ	0xFDD
  7945                           plusw2	equ	0xFDB
  7946                           fsr2h	equ	0xFDA
  7947                           fsr2l	equ	0xFD9
  7948                           status	equ	0xFD8
  7949                           
  7950 ;; *************** function i2_send_msg *****************
  7951 ;; Defined at:
  7952 ;;		line 24 in file "../src/messages.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7955 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  7956 ;;  length          1   12[BANK0 ] unsigned char 
  7957 ;;  msgtype         1   13[BANK0 ] unsigned char 
  7958 ;;  data            2   14[BANK0 ] PTR void 
  7959 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), main@uc(15), 
  7960 ;; Auto vars:     Size  Location     Type
  7961 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  7962 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  7963 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  7964 ;;  send_msg        2   17[BANK0 ] unsigned int 
  7965 ;;  send_msg        1   19[BANK0 ] unsigned char 
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      char 
  7968 ;; Registers used:
  7969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7975 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7976 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7978 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7979 ;;Total ram usage:       12 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:    1
  7982 ;; This function calls:
  7983 ;;		i2___awmod
  7984 ;;		i2_memcpy
  7985 ;; This function is called by:
  7986 ;;		_ToMainHigh_sendmsg
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           	psect	text45
  7991  000D6E                     __ptext45:
  7992                           	opt stack 0
  7993  000D6E                     i2_send_msg:
  7994                           	opt stack 16
  7995                           
  7996                           ;messages.c: 25: unsigned char slot;
  7997                           ;messages.c: 27: msg *qmsg;
  7998                           ;messages.c: 28: size_t tlength = length;
  7999                           
  8000                           ;incstack = 0
  8001  000D6E  0100               	movlb	0	; () banked
  8002  000D70  0100               	movlb	0	; () banked
  8003  000D72  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  8004  000D76  0100               	movlb	0	; () banked
  8005  000D78  0100               	movlb	0	; () banked
  8006  000D7A  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8010  000D7C  0100               	movlb	0	; () banked
  8011  000D7E  EE20 F041          	lfsr	2,65
  8012  000D82  0100               	movlb	0	; () banked
  8013  000D84  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8014  000D86  26D9               	addwf	fsr2l,f,c
  8015  000D88  0100               	movlb	0	; () banked
  8016  000D8A  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8017  000D8C  22DA               	addwfc	fsr2h,f,c
  8018  000D8E  50DF               	movf	indf2,w,c
  8019  000D90  0100               	movlb	0	; () banked
  8020  000D92  0100               	movlb	0	; () banked
  8021  000D94  6F73               	movwf	i2send_msg@slot& (0+255),b
  8022                           
  8023                           ; BSR set to: 0
  8024                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8025  000D96  0100               	movlb	0	; () banked
  8026  000D98  0100               	movlb	0	; () banked
  8027  000D9A  5173               	movf	i2send_msg@slot& (0+255),w,b
  8028  000D9C  0D0D               	mullw	13
  8029  000D9E  50F3               	movf	prodl,w,c
  8030  000DA0  0100               	movlb	0	; () banked
  8031  000DA2  0100               	movlb	0	; () banked
  8032  000DA4  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  8033  000DA6  0100               	movlb	0	; () banked
  8034  000DA8  0100               	movlb	0	; () banked
  8035  000DAA  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  8036  000DAC  50F4               	movf	prodh,w,c
  8037  000DAE  0100               	movlb	0	; () banked
  8038  000DB0  0100               	movlb	0	; () banked
  8039  000DB2  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8040  000DB4  0100               	movlb	0	; () banked
  8041  000DB6  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;messages.c: 41: if (qmsg->full != 0) {
  8045  000DB8  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8046  000DBC  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8047  000DC0  50DF               	movf	indf2,w,c
  8048  000DC2  B4D8               	btfsc	status,2,c
  8049  000DC4  D002               	goto	i2l4082
  8050                           
  8051                           ; BSR set to: 0
  8052                           ;messages.c: 42: return (-1);
  8053  000DC6  0EFF               	movlw	255
  8054  000DC8  0012               	return	
  8055  000DCA                     i2l4082:
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;messages.c: 43: }
  8059                           ;messages.c: 46: qmsg->length = length;
  8060  000DCA  0100               	movlb	0	; () banked
  8061  000DCC  EE20 F001          	lfsr	2,1
  8062  000DD0  0100               	movlb	0	; () banked
  8063  000DD2  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8064  000DD4  26D9               	addwf	fsr2l,f,c
  8065  000DD6  0100               	movlb	0	; () banked
  8066  000DD8  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8067  000DDA  22DA               	addwfc	fsr2h,f,c
  8068  000DDC  0100               	movlb	0	; () banked
  8069  000DDE  C06C  FFDF         	movff	i2send_msg@length,indf2
  8070                           
  8071                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8072  000DE2  0100               	movlb	0	; () banked
  8073  000DE4  EE20 F002          	lfsr	2,2
  8074  000DE8  0100               	movlb	0	; () banked
  8075  000DEA  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8076  000DEC  26D9               	addwf	fsr2l,f,c
  8077  000DEE  0100               	movlb	0	; () banked
  8078  000DF0  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8079  000DF2  22DA               	addwfc	fsr2h,f,c
  8080  000DF4  0100               	movlb	0	; () banked
  8081  000DF6  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  8082                           
  8083                           ; BSR set to: 0
  8084                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8085  000DFA  0E03               	movlw	3
  8086  000DFC  0100               	movlb	0	; () banked
  8087  000DFE  0100               	movlb	0	; () banked
  8088  000E00  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  8089  000E02  0100               	movlb	0	; () banked
  8090  000E04  0100               	movlb	0	; () banked
  8091  000E06  6F60               	movwf	i2memcpy@d1& (0+255),b
  8092  000E08  0E00               	movlw	0
  8093  000E0A  0100               	movlb	0	; () banked
  8094  000E0C  0100               	movlb	0	; () banked
  8095  000E0E  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8096  000E10  0100               	movlb	0	; () banked
  8097  000E12  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  8098  000E14  0100               	movlb	0	; () banked
  8099  000E16  0100               	movlb	0	; () banked
  8100  000E18  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8101  000E1C  0100               	movlb	0	; () banked
  8102  000E1E  0100               	movlb	0	; () banked
  8103  000E20  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  8104  000E24  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  8105  000E28  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8106  000E2C  EC83  F00C         	call	i2_memcpy	;wreg free
  8107                           
  8108                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8109  000E30  0100               	movlb	0	; () banked
  8110  000E32  EE20 F041          	lfsr	2,65
  8111  000E36  0100               	movlb	0	; () banked
  8112  000E38  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8113  000E3A  26D9               	addwf	fsr2l,f,c
  8114  000E3C  0100               	movlb	0	; () banked
  8115  000E3E  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8116  000E40  22DA               	addwfc	fsr2h,f,c
  8117  000E42  0100               	movlb	0	; () banked
  8118  000E44  EE10 F041          	lfsr	1,65
  8119  000E48  0100               	movlb	0	; () banked
  8120  000E4A  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8121  000E4C  26E1               	addwf	fsr1l,f,c
  8122  000E4E  0100               	movlb	0	; () banked
  8123  000E50  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8124  000E52  22E2               	addwfc	fsr1h,f,c
  8125  000E54  50E7               	movf	indf1,w,c
  8126  000E56  0100               	movlb	0	; () banked
  8127  000E58  6F70               	movwf	??i2_send_msg& (0+255),b
  8128  000E5A  0E01               	movlw	1
  8129  000E5C  0100               	movlb	0	; () banked
  8130  000E5E  2570               	addwf	??i2_send_msg& (0+255),w,b
  8131  000E60  0100               	movlb	0	; () banked
  8132  000E62  0100               	movlb	0	; () banked
  8133  000E64  6F60               	movwf	i2___awmod@dividend& (0+255),b
  8134  000E66  0100               	movlb	0	; () banked
  8135  000E68  0100               	movlb	0	; () banked
  8136  000E6A  6B61               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8137  000E6C  0E00               	movlw	0
  8138  000E6E  2361               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8139  000E70  0E00               	movlw	0
  8140  000E72  0100               	movlb	0	; () banked
  8141  000E74  0100               	movlb	0	; () banked
  8142  000E76  6F63               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8143  000E78  0E05               	movlw	5
  8144  000E7A  0100               	movlb	0	; () banked
  8145  000E7C  6F62               	movwf	i2___awmod@divisor& (0+255),b
  8146  000E7E  ECD4  F007         	call	i2___awmod	;wreg free
  8147  000E82  0100               	movlb	0	; () banked
  8148  000E84  0100               	movlb	0	; () banked
  8149  000E86  5160               	movf	?i2___awmod& (0+255),w,b
  8150  000E88  6EDF               	movwf	indf2,c
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;messages.c: 59: qmsg->full = 1;
  8154  000E8A  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8155  000E8E  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8156  000E92  0E01               	movlw	1
  8157  000E94  6EDF               	movwf	indf2,c
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;messages.c: 60: return (1);
  8161  000E96  0E01               	movlw	1
  8162  000E98  0012               	return	
  8163  000E9A                     __end_ofi2_send_msg:
  8164                           	opt stack 0
  8165                           pclatu	equ	0xFFB
  8166                           pclath	equ	0xFFA
  8167                           tblptru	equ	0xFF8
  8168                           tblptrh	equ	0xFF7
  8169                           tblptrl	equ	0xFF6
  8170                           tablat	equ	0xFF5
  8171                           prodh	equ	0xFF4
  8172                           prodl	equ	0xFF3
  8173                           intcon	equ	0xFF2
  8174                           intcon2	equ	0xFF1
  8175                           postinc0	equ	0xFEE
  8176                           fsr0h	equ	0xFEA
  8177                           fsr0l	equ	0xFE9
  8178                           wreg	equ	0xFE8
  8179                           indf1	equ	0xFE7
  8180                           postinc1	equ	0xFE6
  8181                           postdec1	equ	0xFE5
  8182                           fsr1h	equ	0xFE2
  8183                           fsr1l	equ	0xFE1
  8184                           bsr	equ	0xFE0
  8185                           indf2	equ	0xFDF
  8186                           postinc2	equ	0xFDE
  8187                           postdec2	equ	0xFDD
  8188                           plusw2	equ	0xFDB
  8189                           fsr2h	equ	0xFDA
  8190                           fsr2l	equ	0xFD9
  8191                           status	equ	0xFD8
  8192                           
  8193 ;; *************** function i2_memcpy *****************
  8194 ;; Defined at:
  8195 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;  d1              2    0[BANK0 ] PTR void 
  8198 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8199 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8200 ;;		 -> main@msgbuffer(11), 
  8201 ;;  s1              2    2[BANK0 ] PTR const void 
  8202 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8203 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8204 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  8205 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  8206 ;;  n               2    4[BANK0 ] unsigned int 
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8209 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8210 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8211 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  8212 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  8213 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8214 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8215 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8216 ;;		 -> main@msgbuffer(11), 
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  2    0[BANK0 ] PTR void 
  8219 ;; Registers used:
  8220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8226 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8227 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8229 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8230 ;;Total ram usage:       10 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; This function calls:
  8233 ;;		Nothing
  8234 ;; This function is called by:
  8235 ;;		i2_send_msg
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           	psect	text46
  8240  001906                     __ptext46:
  8241                           	opt stack 0
  8242  001906                     i2_memcpy:
  8243                           	opt stack 16
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;incstack = 0
  8247  001906  0100               	movlb	0	; () banked
  8248  001908  0100               	movlb	0	; () banked
  8249  00190A  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8250  00190E  0100               	movlb	0	; () banked
  8251  001910  0100               	movlb	0	; () banked
  8252  001912  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  8253  001916  0100               	movlb	0	; () banked
  8254  001918  0100               	movlb	0	; () banked
  8255  00191A  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8256  00191E  0100               	movlb	0	; () banked
  8257  001920  0100               	movlb	0	; () banked
  8258  001922  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  8259  001926  D012               	goto	i2l4106
  8260  001928                     i2l4100:
  8261                           
  8262                           ; BSR set to: 0
  8263  001928  C068  FFD9         	movff	i2memcpy@s,fsr2l
  8264  00192C  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  8265  001930  C066  FFE1         	movff	i2memcpy@d,fsr1l
  8266  001934  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  8267  001938  CFDF FFE7          	movff	indf2,indf1
  8268                           
  8269                           ; BSR set to: 0
  8270  00193C  0100               	movlb	0	; () banked
  8271  00193E  0100               	movlb	0	; () banked
  8272  001940  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  8273  001942  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  8274                           
  8275                           ; BSR set to: 0
  8276  001944  0100               	movlb	0	; () banked
  8277  001946  0100               	movlb	0	; () banked
  8278  001948  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  8279  00194A  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  8280  00194C                     i2l4106:
  8281                           
  8282                           ; BSR set to: 0
  8283  00194C  0100               	movlb	0	; () banked
  8284  00194E  0100               	movlb	0	; () banked
  8285  001950  0764               	decf	i2memcpy@n& (0+255),f,b
  8286  001952  A0D8               	btfss	status,0,c
  8287  001954  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  8288  001956  0100               	movlb	0	; () banked
  8289  001958  2964               	incf	i2memcpy@n& (0+255),w,b
  8290  00195A  B4D8               	btfsc	status,2,c
  8291  00195C  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  8292  00195E  B4D8               	btfsc	status,2,c
  8293                           
  8294                           ; BSR set to: 0
  8295                           
  8296                           ; BSR set to: 0
  8297                           ;	Return value of i2_memcpy is never used
  8298  001960  0012               	return	
  8299  001962  D7E2               	goto	i2l4100
  8300  001964                     __end_ofi2_memcpy:
  8301                           	opt stack 0
  8302                           pclatu	equ	0xFFB
  8303                           pclath	equ	0xFFA
  8304                           tblptru	equ	0xFF8
  8305                           tblptrh	equ	0xFF7
  8306                           tblptrl	equ	0xFF6
  8307                           tablat	equ	0xFF5
  8308                           prodh	equ	0xFF4
  8309                           prodl	equ	0xFF3
  8310                           intcon	equ	0xFF2
  8311                           intcon2	equ	0xFF1
  8312                           postinc0	equ	0xFEE
  8313                           fsr0h	equ	0xFEA
  8314                           fsr0l	equ	0xFE9
  8315                           wreg	equ	0xFE8
  8316                           indf1	equ	0xFE7
  8317                           postinc1	equ	0xFE6
  8318                           postdec1	equ	0xFE5
  8319                           fsr1h	equ	0xFE2
  8320                           fsr1l	equ	0xFE1
  8321                           bsr	equ	0xFE0
  8322                           indf2	equ	0xFDF
  8323                           postinc2	equ	0xFDE
  8324                           postdec2	equ	0xFDD
  8325                           plusw2	equ	0xFDB
  8326                           fsr2h	equ	0xFDA
  8327                           fsr2l	equ	0xFD9
  8328                           status	equ	0xFD8
  8329                           
  8330 ;; *************** function i2___awmod *****************
  8331 ;; Defined at:
  8332 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  dividend        2    0[BANK0 ] int 
  8335 ;;  divisor         2    2[BANK0 ] int 
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;  __awmod         1    6[BANK0 ] unsigned char 
  8338 ;;  __awmod         1    5[BANK0 ] unsigned char 
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  2    0[BANK0 ] int 
  8341 ;; Registers used:
  8342 ;;		wreg, status,2, status,0, prodl
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8348 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8349 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8350 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8351 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8352 ;;Total ram usage:        7 bytes
  8353 ;; Hardware stack levels used:    1
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		i2_send_msg
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	text47
  8362  000FA8                     __ptext47:
  8363                           	opt stack 0
  8364  000FA8                     i2___awmod:
  8365                           	opt stack 16
  8366                           
  8367                           ; BSR set to: 0
  8368                           ;incstack = 0
  8369  000FA8  0100               	movlb	0	; () banked
  8370  000FAA  6F64               	movwf	??i2___awmod& (0+255),b
  8371  000FAC  0E00               	movlw	0
  8372  000FAE  0100               	movlb	0	; () banked
  8373  000FB0  0100               	movlb	0	; () banked
  8374  000FB2  6F66               	movwf	i2___awmod@sign& (0+255),b
  8375  000FB4  0100               	movlb	0	; () banked
  8376  000FB6  5164               	movf	??i2___awmod& (0+255),w,b
  8377                           
  8378                           ; BSR set to: 0
  8379  000FB8  0100               	movlb	0	; () banked
  8380  000FBA  0100               	movlb	0	; () banked
  8381  000FBC  5161               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  8382  000FBE  0A80               	xorlw	128
  8383  000FC0  6EF3               	movwf	prodl,c
  8384  000FC2  0E80               	movlw	128
  8385  000FC4  5CF3               	subwf	prodl,w,c
  8386  000FC6  0E00               	movlw	0
  8387  000FC8  B4D8               	btfsc	status,2,c
  8388  000FCA  5D60               	subwf	i2___awmod@dividend& (0+255),w,b
  8389  000FCC  B0D8               	btfsc	status,0,c
  8390  000FCE  D00F               	goto	i2l4116
  8391                           
  8392                           ; BSR set to: 0
  8393  000FD0  0100               	movlb	0	; () banked
  8394  000FD2  0100               	movlb	0	; () banked
  8395  000FD4  6D60               	negf	i2___awmod@dividend& (0+255),b
  8396  000FD6  0100               	movlb	0	; () banked
  8397  000FD8  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  8398  000FDA  B0D8               	btfsc	status,0,c
  8399  000FDC  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  8400                           
  8401                           ; BSR set to: 0
  8402  000FDE  0100               	movlb	0	; () banked
  8403  000FE0  6F64               	movwf	??i2___awmod& (0+255),b
  8404  000FE2  0E01               	movlw	1
  8405  000FE4  0100               	movlb	0	; () banked
  8406  000FE6  0100               	movlb	0	; () banked
  8407  000FE8  6F66               	movwf	i2___awmod@sign& (0+255),b
  8408  000FEA  0100               	movlb	0	; () banked
  8409  000FEC  5164               	movf	??i2___awmod& (0+255),w,b
  8410  000FEE                     i2l4116:
  8411                           
  8412                           ; BSR set to: 0
  8413  000FEE  0100               	movlb	0	; () banked
  8414  000FF0  0100               	movlb	0	; () banked
  8415  000FF2  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8416  000FF4  0A80               	xorlw	128
  8417  000FF6  6EF3               	movwf	prodl,c
  8418  000FF8  0E80               	movlw	128
  8419  000FFA  5CF3               	subwf	prodl,w,c
  8420  000FFC  0E00               	movlw	0
  8421  000FFE  B4D8               	btfsc	status,2,c
  8422  001000  5D62               	subwf	i2___awmod@divisor& (0+255),w,b
  8423  001002  B0D8               	btfsc	status,0,c
  8424  001004  D007               	goto	i2l4120
  8425                           
  8426                           ; BSR set to: 0
  8427  001006  0100               	movlb	0	; () banked
  8428  001008  0100               	movlb	0	; () banked
  8429  00100A  6D62               	negf	i2___awmod@divisor& (0+255),b
  8430  00100C  0100               	movlb	0	; () banked
  8431  00100E  1F63               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  8432  001010  B0D8               	btfsc	status,0,c
  8433  001012  2B63               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  8434  001014                     i2l4120:
  8435                           
  8436                           ; BSR set to: 0
  8437  001014  0100               	movlb	0	; () banked
  8438  001016  0100               	movlb	0	; () banked
  8439  001018  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8440  00101A  1162               	iorwf	i2___awmod@divisor& (0+255),w,b
  8441  00101C  B4D8               	btfsc	status,2,c
  8442  00101E  D03A               	goto	i2l4136
  8443                           
  8444                           ; BSR set to: 0
  8445  001020  0100               	movlb	0	; () banked
  8446  001022  6F64               	movwf	??i2___awmod& (0+255),b
  8447  001024  0E01               	movlw	1
  8448  001026  0100               	movlb	0	; () banked
  8449  001028  0100               	movlb	0	; () banked
  8450  00102A  6F65               	movwf	i2___awmod@counter& (0+255),b
  8451  00102C  0100               	movlb	0	; () banked
  8452  00102E  5164               	movf	??i2___awmod& (0+255),w,b
  8453  001030  D009               	goto	i2l4126
  8454  001032                     i2l4124:
  8455                           
  8456                           ; BSR set to: 0
  8457  001032  0100               	movlb	0	; () banked
  8458  001034  0100               	movlb	0	; () banked
  8459  001036  0100               	movlb	0	; () banked
  8460  001038  90D8               	bcf	status,0,c
  8461  00103A  3762               	rlcf	i2___awmod@divisor& (0+255),f,b
  8462  00103C  3763               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  8463  00103E  0100               	movlb	0	; () banked
  8464  001040  0100               	movlb	0	; () banked
  8465  001042  2B65               	incf	i2___awmod@counter& (0+255),f,b
  8466  001044                     i2l4126:
  8467                           
  8468                           ; BSR set to: 0
  8469  001044  0100               	movlb	0	; () banked
  8470  001046  0100               	movlb	0	; () banked
  8471  001048  AF63               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  8472  00104A  D7F3               	goto	i2l4124
  8473  00104C                     i2l4128:
  8474                           
  8475                           ; BSR set to: 0
  8476  00104C  0100               	movlb	0	; () banked
  8477  00104E  0100               	movlb	0	; () banked
  8478  001050  5162               	movf	i2___awmod@divisor& (0+255),w,b
  8479  001052  0100               	movlb	0	; () banked
  8480  001054  0100               	movlb	0	; () banked
  8481  001056  5D60               	subwf	i2___awmod@dividend& (0+255),w,b
  8482  001058  0100               	movlb	0	; () banked
  8483  00105A  0100               	movlb	0	; () banked
  8484  00105C  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8485  00105E  0100               	movlb	0	; () banked
  8486  001060  0100               	movlb	0	; () banked
  8487  001062  5961               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  8488  001064  A0D8               	btfss	status,0,c
  8489  001066  D00C               	goto	i2l4132
  8490                           
  8491                           ; BSR set to: 0
  8492  001068  0100               	movlb	0	; () banked
  8493  00106A  0100               	movlb	0	; () banked
  8494  00106C  5162               	movf	i2___awmod@divisor& (0+255),w,b
  8495  00106E  0100               	movlb	0	; () banked
  8496  001070  0100               	movlb	0	; () banked
  8497  001072  5F60               	subwf	i2___awmod@dividend& (0+255),f,b
  8498  001074  0100               	movlb	0	; () banked
  8499  001076  0100               	movlb	0	; () banked
  8500  001078  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8501  00107A  0100               	movlb	0	; () banked
  8502  00107C  0100               	movlb	0	; () banked
  8503  00107E  5B61               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  8504  001080                     i2l4132:
  8505                           
  8506                           ; BSR set to: 0
  8507  001080  0100               	movlb	0	; () banked
  8508  001082  0100               	movlb	0	; () banked
  8509  001084  0100               	movlb	0	; () banked
  8510  001086  90D8               	bcf	status,0,c
  8511  001088  3363               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  8512  00108A  3362               	rrcf	i2___awmod@divisor& (0+255),f,b
  8513                           
  8514                           ; BSR set to: 0
  8515  00108C  0100               	movlb	0	; () banked
  8516  00108E  0100               	movlb	0	; () banked
  8517  001090  2F65               	decfsz	i2___awmod@counter& (0+255),f,b
  8518  001092  D7DC               	goto	i2l4128
  8519  001094                     i2l4136:
  8520                           
  8521                           ; BSR set to: 0
  8522  001094  0100               	movlb	0	; () banked
  8523  001096  0100               	movlb	0	; () banked
  8524  001098  5166               	movf	i2___awmod@sign& (0+255),w,b
  8525  00109A  B4D8               	btfsc	status,2,c
  8526  00109C  D007               	goto	i2l4140
  8527                           
  8528                           ; BSR set to: 0
  8529  00109E  0100               	movlb	0	; () banked
  8530  0010A0  0100               	movlb	0	; () banked
  8531  0010A2  6D60               	negf	i2___awmod@dividend& (0+255),b
  8532  0010A4  0100               	movlb	0	; () banked
  8533  0010A6  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  8534  0010A8  B0D8               	btfsc	status,0,c
  8535  0010AA  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  8536  0010AC                     i2l4140:
  8537                           
  8538                           ; BSR set to: 0
  8539  0010AC  C060  F060         	movff	i2___awmod@dividend,?i2___awmod
  8540  0010B0  C061  F061         	movff	i2___awmod@dividend+1,?i2___awmod+1
  8541  0010B4  0012               	return	
  8542  0010B6                     __end_ofi2___awmod:
  8543                           	opt stack 0
  8544                           pclatu	equ	0xFFB
  8545                           pclath	equ	0xFFA
  8546                           tblptru	equ	0xFF8
  8547                           tblptrh	equ	0xFF7
  8548                           tblptrl	equ	0xFF6
  8549                           tablat	equ	0xFF5
  8550                           prodh	equ	0xFF4
  8551                           prodl	equ	0xFF3
  8552                           intcon	equ	0xFF2
  8553                           intcon2	equ	0xFF1
  8554                           postinc0	equ	0xFEE
  8555                           fsr0h	equ	0xFEA
  8556                           fsr0l	equ	0xFE9
  8557                           wreg	equ	0xFE8
  8558                           indf1	equ	0xFE7
  8559                           postinc1	equ	0xFE6
  8560                           postdec1	equ	0xFE5
  8561                           fsr1h	equ	0xFE2
  8562                           fsr1l	equ	0xFE1
  8563                           bsr	equ	0xFE0
  8564                           indf2	equ	0xFDF
  8565                           postinc2	equ	0xFDE
  8566                           postdec2	equ	0xFDD
  8567                           plusw2	equ	0xFDB
  8568                           fsr2h	equ	0xFDA
  8569                           fsr2l	equ	0xFD9
  8570                           status	equ	0xFD8
  8571                           
  8572 ;; *************** function _SleepIfOkay *****************
  8573 ;; Defined at:
  8574 ;;		line 228 in file "../src/messages.c"
  8575 ;; Parameters:    Size  Location     Type
  8576 ;;		None
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;		None
  8579 ;; Return value:  Size  Location     Type
  8580 ;;		None               void
  8581 ;; Registers used:
  8582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8592 ;;Total ram usage:        0 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; Hardware stack levels required when called:    2
  8595 ;; This function calls:
  8596 ;;		_enter_sleep_mode
  8597 ;;		i2_check_msg
  8598 ;;		i2_in_high_int
  8599 ;;		i2_in_low_int
  8600 ;; This function is called by:
  8601 ;;		_InterruptHandlerHigh
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           	psect	text48
  8606  001772                     __ptext48:
  8607                           	opt stack 0
  8608  001772                     _SleepIfOkay:
  8609                           	opt stack 18
  8610                           
  8611                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;incstack = 0
  8615  001772  663D               	tstfsz	_MQ_Main_Willing_to_block,c
  8616  001774  D001               	goto	i2l3776
  8617  001776  0012               	return	
  8618  001778                     i2l3776:
  8619                           
  8620                           ;messages.c: 232: }
  8621                           ;messages.c: 235: if (in_low_int()) {
  8622  001778  ECD5  F00C         	call	i2_in_low_int	;wreg free
  8623  00177C  0100               	movlb	0	; () banked
  8624  00177E  0100               	movlb	0	; () banked
  8625  001780  5163               	movf	(?i2_in_low_int+1)& (0+255),w,b
  8626  001782  0100               	movlb	0	; () banked
  8627  001784  1162               	iorwf	?i2_in_low_int& (0+255),w,b
  8628  001786  A4D8               	btfss	status,2,c
  8629  001788  0012               	return	
  8630                           
  8631                           ; BSR set to: 0
  8632                           ;messages.c: 237: }
  8633                           ;messages.c: 240: if (!in_high_int()) {
  8634                           
  8635                           ; BSR set to: 0
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;messages.c: 236: return;
  8639  00178A  ECBF  F00E         	call	i2_in_high_int	;wreg free
  8640  00178E  0100               	movlb	0	; () banked
  8641  001790  0100               	movlb	0	; () banked
  8642  001792  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8643  001794  0100               	movlb	0	; () banked
  8644  001796  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8645  001798  B4D8               	btfsc	status,2,c
  8646  00179A  0012               	return	
  8647                           
  8648                           ; BSR set to: 0
  8649                           ;messages.c: 242: }
  8650                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8651                           
  8652                           ; BSR set to: 0
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;messages.c: 241: return;
  8656  00179C  0101               	movlb	1	; () banked
  8657  00179E  0E01               	movlw	high _ToMainHigh_MQ
  8658  0017A0  0100               	movlb	0	; () banked
  8659  0017A2  0100               	movlb	0	; () banked
  8660  0017A4  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8661  0017A6  0101               	movlb	1	; () banked
  8662  0017A8  0E00               	movlw	low _ToMainHigh_MQ
  8663  0017AA  0100               	movlb	0	; () banked
  8664  0017AC  0100               	movlb	0	; () banked
  8665  0017AE  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8666  0017B0  ECEF  F00D         	call	i2_check_msg	;wreg free
  8667  0017B4  0900               	iorlw	0
  8668  0017B6  A4D8               	btfss	status,2,c
  8669  0017B8  0012               	return	
  8670                           
  8671                           ;messages.c: 249: }
  8672                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8673                           
  8674                           ;messages.c: 248: return;
  8675  0017BA  0101               	movlb	1	; () banked
  8676  0017BC  0E01               	movlw	high _ToMainLow_MQ
  8677  0017BE  0100               	movlb	0	; () banked
  8678  0017C0  0100               	movlb	0	; () banked
  8679  0017C2  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8680  0017C4  0101               	movlb	1	; () banked
  8681  0017C6  0E43               	movlw	low _ToMainLow_MQ
  8682  0017C8  0100               	movlb	0	; () banked
  8683  0017CA  0100               	movlb	0	; () banked
  8684  0017CC  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8685  0017CE  ECEF  F00D         	call	i2_check_msg	;wreg free
  8686  0017D2  0900               	iorlw	0
  8687  0017D4  B4D8               	btfsc	status,2,c
  8688                           
  8689                           ;messages.c: 252: }
  8690                           ;messages.c: 253: enter_sleep_mode();
  8691                           
  8692                           ;messages.c: 251: return;
  8693  0017D6  ECD5  F00E         	call	_enter_sleep_mode	;wreg free
  8694  0017DA  0012               	return	
  8695  0017DC                     __end_of_SleepIfOkay:
  8696                           	opt stack 0
  8697                           pclatu	equ	0xFFB
  8698                           pclath	equ	0xFFA
  8699                           tblptru	equ	0xFF8
  8700                           tblptrh	equ	0xFF7
  8701                           tblptrl	equ	0xFF6
  8702                           tablat	equ	0xFF5
  8703                           prodh	equ	0xFF4
  8704                           prodl	equ	0xFF3
  8705                           intcon	equ	0xFF2
  8706                           intcon2	equ	0xFF1
  8707                           postinc0	equ	0xFEE
  8708                           fsr0h	equ	0xFEA
  8709                           fsr0l	equ	0xFE9
  8710                           wreg	equ	0xFE8
  8711                           indf1	equ	0xFE7
  8712                           postinc1	equ	0xFE6
  8713                           postdec1	equ	0xFE5
  8714                           fsr1h	equ	0xFE2
  8715                           fsr1l	equ	0xFE1
  8716                           bsr	equ	0xFE0
  8717                           indf2	equ	0xFDF
  8718                           postinc2	equ	0xFDE
  8719                           postdec2	equ	0xFDD
  8720                           plusw2	equ	0xFDB
  8721                           fsr2h	equ	0xFDA
  8722                           fsr2l	equ	0xFD9
  8723                           status	equ	0xFD8
  8724                           
  8725 ;; *************** function i2_in_low_int *****************
  8726 ;; Defined at:
  8727 ;;		line 31 in file "../src/interrupts.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;		None
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;		None
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  2    2[BANK0 ] int 
  8734 ;; Registers used:
  8735 ;;		wreg, status,2, status,0, cstack
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8741 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8744 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8745 ;;Total ram usage:        2 bytes
  8746 ;; Hardware stack levels used:    1
  8747 ;; Hardware stack levels required when called:    1
  8748 ;; This function calls:
  8749 ;;		i2_in_high_int
  8750 ;; This function is called by:
  8751 ;;		_SleepIfOkay
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           	psect	text49
  8756  0019AA                     __ptext49:
  8757                           	opt stack 0
  8758  0019AA                     i2_in_low_int:
  8759                           	opt stack 18
  8760                           
  8761                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  8762                           
  8763                           ;incstack = 0
  8764  0019AA  ACF2               	btfss	intcon,6,c	;volatile
  8765  0019AC  D008               	goto	i2l4058
  8766                           
  8767                           ;interrupts.c: 33: return (0);
  8768  0019AE  0E00               	movlw	0
  8769  0019B0  0100               	movlb	0	; () banked
  8770  0019B2  0100               	movlb	0	; () banked
  8771  0019B4  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8772  0019B6  0E00               	movlw	0
  8773  0019B8  0100               	movlb	0	; () banked
  8774  0019BA  6F62               	movwf	?i2_in_low_int& (0+255),b
  8775  0019BC  0012               	return	
  8776  0019BE                     i2l4058:
  8777  0019BE  ECBF  F00E         	call	i2_in_high_int	;wreg free
  8778  0019C2  0100               	movlb	0	; () banked
  8779  0019C4  0100               	movlb	0	; () banked
  8780  0019C6  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8781  0019C8  0100               	movlb	0	; () banked
  8782  0019CA  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8783  0019CC  B4D8               	btfsc	status,2,c
  8784  0019CE  D008               	goto	i2l4066
  8785                           
  8786                           ; BSR set to: 0
  8787                           ;interrupts.c: 35: return (0);
  8788  0019D0  0E00               	movlw	0
  8789  0019D2  0100               	movlb	0	; () banked
  8790  0019D4  0100               	movlb	0	; () banked
  8791  0019D6  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8792  0019D8  0E00               	movlw	0
  8793  0019DA  0100               	movlb	0	; () banked
  8794  0019DC  6F62               	movwf	?i2_in_low_int& (0+255),b
  8795  0019DE  0012               	return	
  8796  0019E0                     i2l4066:
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;interrupts.c: 37: return (1);
  8800  0019E0  0E00               	movlw	0
  8801  0019E2  0100               	movlb	0	; () banked
  8802  0019E4  0100               	movlb	0	; () banked
  8803  0019E6  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8804  0019E8  0E01               	movlw	1
  8805  0019EA  0100               	movlb	0	; () banked
  8806  0019EC  6F62               	movwf	?i2_in_low_int& (0+255),b
  8807  0019EE  0012               	return	
  8808  0019F0                     __end_ofi2_in_low_int:
  8809                           	opt stack 0
  8810                           pclatu	equ	0xFFB
  8811                           pclath	equ	0xFFA
  8812                           tblptru	equ	0xFF8
  8813                           tblptrh	equ	0xFF7
  8814                           tblptrl	equ	0xFF6
  8815                           tablat	equ	0xFF5
  8816                           prodh	equ	0xFF4
  8817                           prodl	equ	0xFF3
  8818                           intcon	equ	0xFF2
  8819                           intcon2	equ	0xFF1
  8820                           postinc0	equ	0xFEE
  8821                           fsr0h	equ	0xFEA
  8822                           fsr0l	equ	0xFE9
  8823                           wreg	equ	0xFE8
  8824                           indf1	equ	0xFE7
  8825                           postinc1	equ	0xFE6
  8826                           postdec1	equ	0xFE5
  8827                           fsr1h	equ	0xFE2
  8828                           fsr1l	equ	0xFE1
  8829                           bsr	equ	0xFE0
  8830                           indf2	equ	0xFDF
  8831                           postinc2	equ	0xFDE
  8832                           postdec2	equ	0xFDD
  8833                           plusw2	equ	0xFDB
  8834                           fsr2h	equ	0xFDA
  8835                           fsr2l	equ	0xFD9
  8836                           status	equ	0xFD8
  8837                           
  8838 ;; *************** function i2_in_high_int *****************
  8839 ;; Defined at:
  8840 ;;		line 23 in file "../src/interrupts.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;		None
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;		None
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  2    0[BANK0 ] int 
  8847 ;; Registers used:
  8848 ;;		wreg, status,2
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/0
  8851 ;;		On exit  : 0/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8854 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8857 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8858 ;;Total ram usage:        2 bytes
  8859 ;; Hardware stack levels used:    1
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_SleepIfOkay
  8864 ;;		i2_in_low_int
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           	psect	text50
  8869  001D7E                     __ptext50:
  8870                           	opt stack 0
  8871  001D7E                     i2_in_high_int:
  8872                           	opt stack 18
  8873                           
  8874                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;incstack = 0
  8878  001D7E  0E00               	movlw	0
  8879  001D80  AEF2               	btfss	intcon,7,c	;volatile
  8880  001D82  0E01               	movlw	1
  8881  001D84  0100               	movlb	0	; () banked
  8882  001D86  0100               	movlb	0	; () banked
  8883  001D88  6F60               	movwf	?i2_in_high_int& (0+255),b
  8884  001D8A  0100               	movlb	0	; () banked
  8885  001D8C  6B61               	clrf	(?i2_in_high_int+1)& (0+255),b
  8886  001D8E  0012               	return	
  8887  001D90                     __end_ofi2_in_high_int:
  8888                           	opt stack 0
  8889                           pclatu	equ	0xFFB
  8890                           pclath	equ	0xFFA
  8891                           tblptru	equ	0xFF8
  8892                           tblptrh	equ	0xFF7
  8893                           tblptrl	equ	0xFF6
  8894                           tablat	equ	0xFF5
  8895                           prodh	equ	0xFF4
  8896                           prodl	equ	0xFF3
  8897                           intcon	equ	0xFF2
  8898                           intcon2	equ	0xFF1
  8899                           postinc0	equ	0xFEE
  8900                           fsr0h	equ	0xFEA
  8901                           fsr0l	equ	0xFE9
  8902                           wreg	equ	0xFE8
  8903                           indf1	equ	0xFE7
  8904                           postinc1	equ	0xFE6
  8905                           postdec1	equ	0xFE5
  8906                           fsr1h	equ	0xFE2
  8907                           fsr1l	equ	0xFE1
  8908                           bsr	equ	0xFE0
  8909                           indf2	equ	0xFDF
  8910                           postinc2	equ	0xFDE
  8911                           postdec2	equ	0xFDD
  8912                           plusw2	equ	0xFDB
  8913                           fsr2h	equ	0xFDA
  8914                           fsr2l	equ	0xFD9
  8915                           status	equ	0xFD8
  8916                           
  8917 ;; *************** function i2_check_msg *****************
  8918 ;; Defined at:
  8919 ;;		line 222 in file "../src/messages.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  8922 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;		None
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  1    wreg      unsigned char 
  8927 ;; Registers used:
  8928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8934 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8936 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8937 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8938 ;;Total ram usage:        3 bytes
  8939 ;; Hardware stack levels used:    1
  8940 ;; This function calls:
  8941 ;;		Nothing
  8942 ;; This function is called by:
  8943 ;;		_SleepIfOkay
  8944 ;; This function uses a non-reentrant model
  8945 ;;
  8946                           
  8947                           	psect	text51
  8948  001BDE                     __ptext51:
  8949                           	opt stack 0
  8950  001BDE                     i2_check_msg:
  8951                           	opt stack 19
  8952                           
  8953                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8954                           
  8955                           ; BSR set to: 0
  8956                           ;incstack = 0
  8957  001BDE  0100               	movlb	0	; () banked
  8958  001BE0  EE20 F042          	lfsr	2,66
  8959  001BE4  0100               	movlb	0	; () banked
  8960  001BE6  5160               	movf	i2check_msg@qptr& (0+255),w,b
  8961  001BE8  26D9               	addwf	fsr2l,f,c
  8962  001BEA  0100               	movlb	0	; () banked
  8963  001BEC  5161               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  8964  001BEE  22DA               	addwfc	fsr2h,f,c
  8965  001BF0  50DF               	movf	indf2,w,c
  8966  001BF2  0100               	movlb	0	; () banked
  8967  001BF4  6F62               	movwf	??i2_check_msg& (0+255),b
  8968  001BF6  0100               	movlb	0	; () banked
  8969  001BF8  5162               	movf	??i2_check_msg& (0+255),w,b
  8970  001BFA  0D0D               	mullw	13
  8971  001BFC  50F3               	movf	prodl,w,c
  8972  001BFE  0100               	movlb	0	; () banked
  8973  001C00  0100               	movlb	0	; () banked
  8974  001C02  2560               	addwf	i2check_msg@qptr& (0+255),w,b
  8975  001C04  6ED9               	movwf	fsr2l,c
  8976  001C06  50F4               	movf	prodh,w,c
  8977  001C08  0100               	movlb	0	; () banked
  8978  001C0A  0100               	movlb	0	; () banked
  8979  001C0C  2161               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  8980  001C0E  6EDA               	movwf	fsr2h,c
  8981  001C10  50DF               	movf	indf2,w,c
  8982  001C12  0012               	return	
  8983  001C14                     __end_ofi2_check_msg:
  8984                           	opt stack 0
  8985                           pclatu	equ	0xFFB
  8986                           pclath	equ	0xFFA
  8987                           tblptru	equ	0xFF8
  8988                           tblptrh	equ	0xFF7
  8989                           tblptrl	equ	0xFF6
  8990                           tablat	equ	0xFF5
  8991                           prodh	equ	0xFF4
  8992                           prodl	equ	0xFF3
  8993                           intcon	equ	0xFF2
  8994                           intcon2	equ	0xFF1
  8995                           postinc0	equ	0xFEE
  8996                           fsr0h	equ	0xFEA
  8997                           fsr0l	equ	0xFE9
  8998                           wreg	equ	0xFE8
  8999                           indf1	equ	0xFE7
  9000                           postinc1	equ	0xFE6
  9001                           postdec1	equ	0xFE5
  9002                           fsr1h	equ	0xFE2
  9003                           fsr1l	equ	0xFE1
  9004                           bsr	equ	0xFE0
  9005                           indf2	equ	0xFDF
  9006                           postinc2	equ	0xFDE
  9007                           postdec2	equ	0xFDD
  9008                           plusw2	equ	0xFDB
  9009                           fsr2h	equ	0xFDA
  9010                           fsr2l	equ	0xFD9
  9011                           status	equ	0xFD8
  9012                           
  9013 ;; *************** function _enter_sleep_mode *****************
  9014 ;; Defined at:
  9015 ;;		line 202 in file "../src/messages.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;		None
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;		None
  9020 ;; Return value:  Size  Location     Type
  9021 ;;		None               void
  9022 ;; Registers used:
  9023 ;;		None
  9024 ;; Tracked objects:
  9025 ;;		On entry : 0/0
  9026 ;;		On exit  : 0/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9033 ;;Total ram usage:        0 bytes
  9034 ;; Hardware stack levels used:    1
  9035 ;; This function calls:
  9036 ;;		Nothing
  9037 ;; This function is called by:
  9038 ;;		_SleepIfOkay
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text52
  9043  001DAA                     __ptext52:
  9044                           	opt stack 0
  9045  001DAA                     _enter_sleep_mode:
  9046                           	opt stack 19
  9047                           
  9048                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9049                           
  9050                           ; BSR set to: 0
  9051                           ;incstack = 0
  9052  001DAA  8ED3               	bsf	4051,7,c	;volatile
  9053  001DAC  0003               	sleep		;# 
  9054  001DAE  0012               	return	
  9055  001DB0                     __end_of_enter_sleep_mode:
  9056                           	opt stack 0
  9057  0000                     pclatu	equ	0xFFB
  9058                           pclath	equ	0xFFA
  9059                           tblptru	equ	0xFF8
  9060                           tblptrh	equ	0xFF7
  9061                           tblptrl	equ	0xFF6
  9062                           tablat	equ	0xFF5
  9063                           prodh	equ	0xFF4
  9064                           prodl	equ	0xFF3
  9065                           intcon	equ	0xFF2
  9066                           intcon2	equ	0xFF1
  9067                           postinc0	equ	0xFEE
  9068                           fsr0h	equ	0xFEA
  9069                           fsr0l	equ	0xFE9
  9070                           wreg	equ	0xFE8
  9071                           indf1	equ	0xFE7
  9072                           postinc1	equ	0xFE6
  9073                           postdec1	equ	0xFE5
  9074                           fsr1h	equ	0xFE2
  9075                           fsr1l	equ	0xFE1
  9076                           bsr	equ	0xFE0
  9077                           indf2	equ	0xFDF
  9078                           postinc2	equ	0xFDE
  9079                           postdec2	equ	0xFDD
  9080                           plusw2	equ	0xFDB
  9081                           fsr2h	equ	0xFDA
  9082                           fsr2l	equ	0xFD9
  9083                           status	equ	0xFD8
  9084                           pclatu	equ	0xFFB
  9085                           pclath	equ	0xFFA
  9086                           tblptru	equ	0xFF8
  9087                           tblptrh	equ	0xFF7
  9088                           tblptrl	equ	0xFF6
  9089                           tablat	equ	0xFF5
  9090                           prodh	equ	0xFF4
  9091                           prodl	equ	0xFF3
  9092                           intcon	equ	0xFF2
  9093                           intcon2	equ	0xFF1
  9094                           postinc0	equ	0xFEE
  9095                           fsr0h	equ	0xFEA
  9096                           fsr0l	equ	0xFE9
  9097                           wreg	equ	0xFE8
  9098                           indf1	equ	0xFE7
  9099                           postinc1	equ	0xFE6
  9100                           postdec1	equ	0xFE5
  9101                           fsr1h	equ	0xFE2
  9102                           fsr1l	equ	0xFE1
  9103                           bsr	equ	0xFE0
  9104                           indf2	equ	0xFDF
  9105                           postinc2	equ	0xFDE
  9106                           postdec2	equ	0xFDD
  9107                           plusw2	equ	0xFDB
  9108                           fsr2h	equ	0xFDA
  9109                           fsr2l	equ	0xFD9
  9110                           status	equ	0xFD8
  9111                           
  9112                           	psect	param0
  9113  0000                     pclatu	equ	0xFFB
  9114                           pclath	equ	0xFFA
  9115                           tblptru	equ	0xFF8
  9116                           tblptrh	equ	0xFF7
  9117                           tblptrl	equ	0xFF6
  9118                           tablat	equ	0xFF5
  9119                           prodh	equ	0xFF4
  9120                           prodl	equ	0xFF3
  9121                           intcon	equ	0xFF2
  9122                           intcon2	equ	0xFF1
  9123                           postinc0	equ	0xFEE
  9124                           fsr0h	equ	0xFEA
  9125                           fsr0l	equ	0xFE9
  9126                           wreg	equ	0xFE8
  9127                           indf1	equ	0xFE7
  9128                           postinc1	equ	0xFE6
  9129                           postdec1	equ	0xFE5
  9130                           fsr1h	equ	0xFE2
  9131                           fsr1l	equ	0xFE1
  9132                           bsr	equ	0xFE0
  9133                           indf2	equ	0xFDF
  9134                           postinc2	equ	0xFDE
  9135                           postdec2	equ	0xFDD
  9136                           plusw2	equ	0xFDB
  9137                           fsr2h	equ	0xFDA
  9138                           fsr2l	equ	0xFD9
  9139                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         302
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      64
    BANK0           160     76     106
    BANK1           256     87     242
    BANK2           256      0     134
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@ic(BANK1[29]), main@uc(BANK1[15]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@ic(BANK1[29]), main@uc(BANK1[15]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_slave_int_handler@motorcomm(COMRAM[2]), main@motorAck(BANK1[6]), main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 15
		 -> main@uc(BANK1[15]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 15
		 -> NULL(NULL[0]), main@uc(BANK1[15]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@sensorMsg(BANK1[1]), main@correct(BANK1[6]), main@stop(BANK1[6]), main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 15
		 -> NULL(NULL[0]), main@uc(BANK1[15]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[29]), main@uc(BANK1[15]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_i2c_master_int_handler
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                93    93      0    9511
                                             74 BANK0      2     2      0
                                              0 BANK1     87    87      0
                         _Open1USART
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     309
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             45 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             49 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4    1382
                                             45 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             51 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             49 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             47 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2125
                                             69 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2125
                                             69 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1953
                                             55 BANK0     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     360
                                             45 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     390
                                             45 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      22
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     119
                                             45 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              7     4      3     282
                                             45 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     273
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    5587
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2761
                                             26 COMRAM     1     1      0
                         _Read1USART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _Read1USART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   1     1      0    2826
                                             26 COMRAM     1     1      0
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2738
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (8) _send_msg                                            12     6      6    2354
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     530
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     747
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    4430
                                             31 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  0     0      0     121
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    4025
             _i2c_master_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_master_int_handler                              5     5      0    4025
                                             26 BANK0      5     5      0
                 _ToMainHigh_sendmsg
                    _i2c_master_recv
 ---------------------------------------------------------------------------------
 (13) _i2c_master_recv                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3994
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    3381
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4    1034
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1USART
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _ToMainLow_sendmsg
       _send_msg
         i1___awmod
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _Read1USART
     _ToMainLow_sendmsg
       _send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _i2c_master_recv
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      86      10       52.3%
BITBANK1           100      0       0       7        0.0%
BANK1              100     57      F2       8       94.5%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      6A       5       66.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      40       1       67.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     222       6        0.0%
DATA                 0      0     222       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Apr 16 18:37:49 2014

       _MQ_Main_Willing_to_block 003D                      _SSPSTATbits 000FC7  
      __end_of_ToMainLow_recvmsg 1A76                               bsr 000FE0  
      __end_of_ToMainLow_sendmsg 1C64                     __CFG_CP0$OFF 000000  
                            l134 0254                              l155 03D8  
                            l157 0496                              l169 0564  
                            l622 14DC                              l543 1386  
                            l626 14FA                              l562 1C38  
                            l563 1C3A                              l628 1508  
                            l629 150A                              l590 1AEE  
                            l591 1AF0                              l854 1CFC  
__size_of_uart_trans_int_handler 0068             __size_of_WriteTimer0 0012  
           __size_of_WriteTimer1 0012                     ___awmod@sign 0093  
                 _FromMainLow_MQ 0243                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     __CFG_IESO$ON 000000  
                   ?_in_high_int 008D                 ??_init_uart_recv 008F  
     i2c_slave_int_handler@F9160 0032       i2c_slave_int_handler@F9162 0037  
     i2c_slave_int_handler@F9158 002D                             l3014 14DE  
                           l3006 14C8                             l3026 14FC  
                           l3130 18EE                             l3124 18CA  
                           l3116 1668                             l3070 159E  
                           l3144 0B3E                             l3160 0C2C  
                           l3064 1572                             l3080 124C  
                           l3058 1546                             l3092 0C4C  
                           l3084 12B6                             l3510 0F72  
                           l3502 0F24                             l3504 0F36  
                           l3096 0CD0                             l3506 0F3E  
                           l3514 0F86                             l2634 199A  
                           l2626 1978                             l2802 033A  
                           l3518 0F9E                             l2648 1A24  
                           l2840 042C                             l2816 03A0  
                           l2930 06F4                             l2914 0652  
                           l2826 03C0                             l2770 0202  
                           l2762 01C0                             l2924 0672  
                           l2844 0444                             l2772 025A  
                           l3494 0EE0                             l2926 06AE  
                           l2934 06F8                             l2870 0506  
                           l2864 04E0                             l2872 0526  
                           l3498 0F06                             l2882 0584  
                           l2778 027E                             l2892 05E6  
                           l2884 05BE                             l2788 02D4  
                           l2886 05C2                             l2896 05FE  
                    main@correct 019A                             u2041 0608  
                           _LATA 000F89                             _LATB 000F8A  
                           u2195 1300                             u1821 0288  
                           u1831 029A                             u3727 1CFE  
                           i1l57 0080                  _FromMainHigh_MQ 0200  
                 Read1USART@data 0001           ?_block_on_To_msgqueues 0001  
                           _main 00CA                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9           __CFG_DSWDTOSC$T1OSCREF 000000  
                    main@msgtype 01AE                             pclat 000FFA  
                    i2_check_msg 1BDE                             prodh 000FF4  
                           prodl 000FF3                             start 00C6  
               ?_adc_int_handler 0001                       i2_send_msg 0D6E  
  __size_of_i2c_configure_master 0020        ToMainHigh_recvmsg@msgtype 00A5  
                 send_msg@length 000D                  __end_of_OpenADC 138A  
    __size_of_timer0_int_handler 0018                      _Delay1KTCYx 1CF8  
                  __CFG_PLLDIV$3 000000                            ?_main 0001  
                __end_of___awmod 0FA8                            _T0CON 000FD5  
                          _T1CON 000FCD                       i1memcpy@d1 0001  
                          i1l639 1CD0                            i1l479 1840  
                          i2l360 07A6                            i2l361 088A  
                          i2l371 0A48                            i2l365 08A4  
                          i2l374 0A7E                            i2l369 0932  
                     i1memcpy@s1 0003                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _PORTA 000F80  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TXREG 000FAE  
                     i2memcpy@d1 0060                   __CFG_FCMEN$OFF 000000  
                     i2memcpy@s1 0062                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                   i1___awmod@sign 0007  
                __end_of_in_main 1A34       ToMainLow_recvmsg@maxlength 00A9  
                   main@motorAck 0186                       _Read1USART 1CC2  
        timer0_lthread@msgbuffer 0093                   __CFG_T1DIG$OFF 000000  
                          tablat 000FF5                            plusw2 000FDB  
                          status 000FD8           _uart_trans_int_handler 17DC  
               __end_ofi1_memcpy 1B38               __size_ofi1___awmod 009C  
               __end_ofi2_memcpy 1964               __size_ofi2___awmod 010E  
                __initialization 15A6                     __end_of_main 0712  
    __size_of_timer1_int_handler 003A       __size_of_ToMainLow_recvmsg 0042  
     __size_of_ToMainLow_sendmsg 0026            __size_ofi2_in_low_int 0046  
                 __CFG_OSC$HSPLL 000000                       _Open1USART 14A8  
                         ??_main 00AA                  send_msg@msgtype 000E  
                  __activetblptr 000002                  send_msg@tlength 0012  
                     _SetChanADC 1C84                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ANCON0 000F48  
                         _ANCON1 000F49          ??_uart_recv_int_handler 001B  
                         _T1GCON 000F9A                           i1l3610 13E4  
                         i1l3602 13B6                           i1l3612 13EC  
                         i1l3614 13F0                           i1l3622 140E  
                         i1l3606 13D2                           i1l3702 1B64  
                         i1l3626 141C                           i1l3618 1404  
                         i1l3722 1156                           i1l3716 1112  
                         i1l3740 0070                           i1l3582 1B26  
                         i1l3734 0066                           i1l3576 1B0A  
                         i2l4100 1928                           i1l3678 11AE  
                         i2l4120 1014                       _OpenTimer0 1C14  
                         i2l4106 194C                       _OpenTimer1 1AB8  
                         i2l4140 10AC                           i2l4132 1080  
                         i2l4124 1032                           i2l4116 0FEE  
                         i2l4126 1044                   __CFG_WDTEN$OFF 000000  
                         i2l4128 104C                           i2l4136 1094  
                         i2l4066 19E0                           i2l4058 19BE  
                         i2l4082 0DCA                           i2l3814 072E  
                         i2l3834 08C2                           i2l3826 0872  
                         i2l3818 0762                           i2l3764 146A  
                         i2l3854 09CA                           i2l3838 08DC  
                         i2l3758 1460                           i2l3776 1778  
                         i2l3864 0A4E                           i2l3872 0A98  
                         _RCREG1 000FAF                    ??_SleepIfOkay 0064  
                         _RCSTA1 000FAC                           _OSCCON 000FD3  
                         _SPBRG1 000FB0                           _SSPADD 000FC8  
                 __CFG_WPCFG$OFF 000000                           _SSPBUF 000FC9  
                         _TXSTA1 000FAD               timer0_lthread@tptr 008D  
                 __CFG_WPDIS$OFF 000000                        ??_OpenADC 0090  
                   i2_in_low_int 19AA                      ?i2_send_msg 006A  
                 __CFG_XINST$OFF 000000                           _t1Mult 003B  
                _i2c_int_handler 1DA4                        ??___awmod 0091  
                _i2c_master_recv 1844                  _i2c_master_send 0C30  
               OpenTimer0@config 008D                           _ic_ptr 00C8  
                  main@msgbuffer 01A0                 __end_of_init_i2c 1772  
               OpenTimer1@config 008F                           _memcpy 18A8  
                         clear_0 15AC                           clear_1 15B8  
                         clear_2 15C4                  ___awmod@divisor 008F  
                         _uc_ptr 003F                  ___awmod@counter 0092  
                         main@ic 01C0                           main@uc 01B1  
               __end_of_recv_msg 0C30                    main@sensorMsg 0199  
                      ??_in_main 0093                __end_ofi1___awmod 1426  
               __end_of_send_msg 1236                     __pdataCOMRAM 002D  
              __end_ofi2___awmod 10B6                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 0090                   i2___awmod@sign 0066  
       ToMainLow_recvmsg@msgtype 00A5             __size_of_in_high_int 0012  
                    ?_Read1USART 0001                       __accesstop 0060  
        __end_of__initialization 1616       __end_of_ToMainHigh_recvmsg 1AB8  
     __end_of_ToMainHigh_sendmsg 1BDE                  __CFG_IOL1WAY$ON 000000  
           __CFG_WPEND$PAGE_WPFP 000000      __end_of_init_timer1_lthread 1D48  
            __end_of_SleepIfOkay 17DC                   __pcstackCOMRAM 0001  
                   __pidataBANK1 1D0E           __size_ofi2_in_high_int 0012  
             __size_of_check_msg 0036                  __CFG_DSWDTPS$G2 000000  
                    ?_Open1USART 008D                      ?_SetChanADC 0001  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 14A0  
    __end_of_InterruptHandlerLow 00C6                        ?i2_memcpy 0060  
                  _ToMainHigh_MQ 0100                 _enter_sleep_mode 1DAA  
            __size_ofi2_send_msg 012C                    check_msg@qptr 008D  
        ??_block_on_To_msgqueues 0093             __size_of_init_queues 006E  
                     __pbssBANK0 00AC                       __pbssBANK1 0100  
                     __pbssBANK2 0200                      ?_OpenTimer0 0001  
                    ?_OpenTimer1 008D                       __pnvCOMRAM 003F  
        __end_of_i2c_int_handler 1DAA                     ?i2_check_msg 0060  
        __end_of_i2c_master_recv 18A8          __end_of_i2c_master_send 0D6E  
       ??_i2c_master_int_handler 007A                recv_msg@maxlength 0099  
                recv_msg@msgtype 009A                  recv_msg@tlength 00A1  
                   ?_Delay1KTCYx 0001                 WriteTimer0@timer 0062  
                        ?_memcpy 008D                 WriteTimer1@timer 0003  
                  ??_WriteTimer0 0062                    ??_WriteTimer1 0003  
            __size_of_Read1USART 001E          __size_of_timer0_lthread 0012  
               Open1USART@config 0092     __end_of_i2c_configure_master 1C84  
                     ??i1_memcpy 0007                       ??i2_memcpy 0066  
                 main@lastMotors 01AB                          _SPBRGH1 000F7F  
                  i2_in_high_int 1D7E                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
        ?_uart_trans_int_handler 0001                __end_of_check_msg 1BA8  
                      ?_init_i2c 008D                      _SleepIfOkay 1772  
            __size_of_Open1USART 0080                        ?_recv_msg 0097  
                        _OpenADC 12EA                       _in_low_int 1964  
                        __Hparam 0000              __size_of_SetChanADC 0020  
                      ?_send_msg 000B                          __Lparam 0000  
     __end_of_timer0_int_handler 1CF8                 init_uart_recv@uc 008D  
                        ___awmod 0E9A                  __CFG_STVREN$OFF 000000  
                        __pcinit 15A6                  __size_of_memcpy 005E  
       __size_of_adc_int_handler 0002                       _init_queue 1620  
                        __ramtop 0F00              __size_of_OpenTimer0 002A  
            __size_of_OpenTimer1 0040                          __ptext0 00CA  
                        __ptext1 1236                          __ptext2 1D24  
                        __ptext3 1CA4                          __ptext4 1D36  
                        __ptext5 169A                          __ptext6 1620  
                        __ptext7 1708                          __ptext8 0C30  
                        __ptext9 1C64                        _T0CONbits 000FD5  
              OpenTimer1@config1 008D                          _in_main 19F0  
                      _T1CONbits 000FCD                 ___awmod@dividend 008D  
            __end_of_WriteTimer0 1D7E              __end_of_WriteTimer1 1D6C  
                 ?i2_in_high_int 0060   __end_of_uart_trans_int_handler 1844  
                 OpenADC@config2 008D                   OpenADC@config3 008E  
                        main@msg 018C                   __pintcode_body 1426  
           end_of_initialization 1616   __size_of_uart_recv_int_handler 00C0  
                        memcpy@d 0093                          memcpy@n 0091  
                        memcpy@s 0095    __end_of_uart_recv_int_handler 1176  
                     ??_init_i2c 008F                    __Lmediumconst 0000  
                        int_func 1426          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                 ?_i2c_master_recv 0001  
               ?_i2c_master_send 008D                       ??_recv_msg 009E  
                   ??i2_send_msg 0070                       ??_send_msg 0011  
__size_of_i2c_master_int_handler 03C0       __end_of_timer1_int_handler 1B72  
                      _RCSTAbits 000FAC                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 0076                       _uart_trans 1236  
                      _PORTBbits 000F81                 __CFG_DSBOREN$OFF 000000  
               __CFG_CPUDIV$OSC1 000000                        _TRISBbits 000F93  
                      _TRISCbits 000F94                        i1___awmod 138A  
             __end_ofi2_send_msg 0E9A                        i2___awmod 0FA8  
                   ??_Read1USART 0001                __CFG_WPFP$PAGE_63 000000  
                      _TXSTAbits 000FAD                       main@length 01AD  
                    ?_in_low_int 008F            timer0_lthread@msgtype 008F  
           _i2c_configure_master 1C64              __CFG_MSSP7B_EN$MSK7 000000  
           __size_ofi2_check_msg 0036         __end_of_enter_sleep_mode 1DB0  
             _ToMainHigh_recvmsg 1A76                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 1BA8                        i1memcpy@n 0005  
                      i1memcpy@s 0009        i2c_master_send@recvlength 008D  
                  __pidataCOMRAM 1D90                   _timer0_lthread 1D24  
                   ??_Open1USART 008F                      ?_init_queue 008D  
                      i2memcpy@d 0066                      _WriteTimer0 1D6C  
                    _WriteTimer1 1D5A                        i2memcpy@n 0064  
                      i2memcpy@s 0068               __end_of_Read1USART 1CE0  
                 __end_of_memcpy 1906                _enable_interrupts 1D9C  
           __size_of_Delay1KTCYx 0016                 __CFG_DSWDTEN$OFF 000000  
                   ??_SetChanADC 008D        i2c_master_send@sendlength 0093  
            ?_ToMainHigh_recvmsg 00A5                  ??i2_in_high_int 0062  
            ?_ToMainHigh_sendmsg 0076               ?_enable_interrupts 0001  
            start_initialization 15A6           _i2c_master_int_handler 0712  
                  ??_in_high_int 008F                ??_adc_int_handler 0001  
                     ?i1___awmod 0001                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 005E        i2c_master_send@slave_addr 0090  
                     ?i2___awmod 0060              ??_enable_interrupts 008D  
                   ??_OpenTimer0 008D                     ??_OpenTimer1 008E  
 __size_of_block_on_To_msgqueues 007E    __end_of_block_on_To_msgqueues 15A6  
   __end_of_InterruptHandlerHigh 14A8               __end_of_Open1USART 1528  
                     init_i2c@ic 008D             ??_ToMainHigh_recvmsg 00A9  
           ??_ToMainHigh_sendmsg 0079            ?_i2c_configure_master 0001  
             __end_of_SetChanADC 1CA4           __end_of_timer0_lthread 1D36  
                    __pdataBANK1 01DD               i1___awmod@dividend 0001  
               __CFG_LPT1OSC$OFF 000000        __end_of_enable_interrupts 1DA4  
                       ??_memcpy 0093                      ?_uart_trans 008D  
   __size_of_init_timer1_lthread 0012               __end_of_OpenTimer0 1C3E  
             __end_of_OpenTimer1 1AF8                      __pbssCOMRAM 0039  
                  ??_init_queues 0091                    __pcstackBANK0 0060  
                  __pcstackBANK1 0186              __size_of_in_low_int 0046  
                      _adcbuffer 00AC                  Delay1KTCYx@unit 008D  
       ToMainLow_sendmsg@msgtype 0017     __size_of_InterruptHandlerLow 00AE  
            __end_of_in_high_int 1D5A                     ?_SleepIfOkay 0001  
          ToMainLow_recvmsg@data 00A7                     _ToMainLow_MQ 0143  
            __size_of_init_queue 007A                   _init_uart_recv 1CA4  
                      _check_msg 1B72                        __pnvBANK0 00C8  
              __size_of_init_i2c 006A                         ?_OpenADC 008D  
                   recv_msg@data 009C                     recv_msg@qmsg 00A3  
                   recv_msg@slot 00A0                     recv_msg@qptr 0097  
              __size_of_recv_msg 015E                        __pintcode 0008  
              __size_of_send_msg 00C0                         ?___awmod 008D  
                ?_timer0_lthread 008D                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 00A7                  Open1USART@spbrg 008D  
                       ?_in_main 0091                WriteTimer0@timer0 0060  
             _timer0_int_handler 1CE0                WriteTimer1@timer1 0001  
           __CFG_RTCOSC$T1OSCREF 000000                      ??i1___awmod 0005  
          ToMainLow_sendmsg@data 0018                      ??i2___awmod 0064  
            ?_timer0_int_handler 0001           __end_of_init_uart_recv 1CC2  
            __end_of_init_queues 1708            i2c_master_recv@length 0060  
            __size_of_uart_trans 00B4                    OpenADC@config 0093  
                       _LATAbits 000F89                         _LATBbits 000F8A  
         ??_i2c_configure_master 008D                  i2check_msg@qptr 0060  
                     ?_check_msg 008D                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0062  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 0077  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                      main@F9242 01EF                        main@F9252 01F1  
                      main@F9254 01E9                        main@F9247 01DD  
                      main@F9249 01E3             ??_timer0_int_handler 0064  
     __size_of_enable_interrupts 0008                       _ADCON0bits 000FC2  
           timer0_lthread@length 0091               _timer1_int_handler 1B38  
                       i1_memcpy 1AF8             _InterruptHandlerHigh 0008  
                       i2_memcpy 1906             timer0_lthread@msgval 0095  
                      main@state 01AF                      _in_high_int 1D48  
                   send_msg@data 000F                     send_msg@qmsg 0015  
                   send_msg@slot 0014                     send_msg@qptr 000B  
                    _INTCON2bits 000FF1                        copy_data0 15EA  
                      copy_data1 160A              ?_timer1_int_handler 0001  
             i2___awmod@dividend 0060                  ?_init_uart_recv 008D  
                 ??i2_in_low_int 0064                         __Hparam0 0000  
          _uart_recv_int_handler 10B6                     ??_in_low_int 0091  
                       __Lparam0 0000                 __size_of_OpenADC 00A0  
              ?_enter_sleep_mode 0001                i1___awmod@divisor 0003  
           ??_timer1_int_handler 001B                i1___awmod@counter 0006  
                _adc_int_handler 1DB0         __size_of_i2c_int_handler 0006  
               __size_of___awmod 010E               ??_enter_sleep_mode 0060  
       __size_of_i2c_master_recv 0064         __size_of_i2c_master_send 013E  
                   ??_init_queue 008F                     ?_WriteTimer0 0060  
                   ?_WriteTimer1 0001          ToMainLow_sendmsg@length 001A  
        ?_i2c_master_int_handler 0001                main@t0thread_data 0195  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 0044  
              i2send_msg@msgtype 006D      ToMainHigh_recvmsg@maxlength 00A9  
              i2send_msg@tlength 0071          init_timer1_lthread@tptr 008D  
                    _init_queues 169A               __end_of_in_low_int 19AA  
                       __ptext10 1D9C                         __ptext11 1528  
                       __ptext20 18A8                         __ptext12 19F0  
                       __ptext21 0E9A                         __ptext13 1964  
                     _T1GCONbits 000F9A                         __ptext30 1CC2  
                       __ptext22 1C84                         __ptext14 1D48  
                       __ptext31 1B38                         __ptext23 1AB8  
                       __ptext15 1B72                         __ptext40 1D6C  
                       __ptext32 1D5A                         __ptext24 1C14  
                       __ptext16 1CF8                         __ptext41 1DA4  
                       __ptext33 1C3E                         __ptext25 12EA  
                       __ptext17 1A34                         __ptext50 1D7E  
                       __ptext42 0712                         __ptext34 1176  
                       __ptext26 14A8                         __ptext18 1A76  
                       __ptext51 1BDE                         __ptext43 1844  
                       __ptext35 1AF8                         __ptext19 0AD2  
                       __ptext52 1DAA                         __ptext44 1BA8  
                       __ptext36 138A                         __ptext28 17DC  
                       __ptext45 0D6E                         __ptext37 1DB0  
                       __ptext29 10B6                         __ptext46 1906  
                       __ptext47 0FA8                         __ptext39 1CE0  
                       __ptext48 1772                         __ptext49 19AA  
                       _init_i2c 1708              _init_timer1_lthread 1D36  
                  __size_of_main 0648                    ??i2_check_msg 0062  
              main@t1thread_data 0197                      ??_check_msg 008F  
             __end_of_init_queue 169A             __size_of_SleepIfOkay 006A  
                       _recv_msg 0AD2                         _send_msg 1176  
                 init_queue@qptr 008D                    ??_Delay1KTCYx 008D  
 __end_of_i2c_master_int_handler 0AD2                 uart_trans@length 0091  
                   ??_uart_trans 008F              _InterruptHandlerLow 0018  
                       main@stop 018E             ?_init_timer1_lthread 008D  
                  _USART1_Status 003E         ??_uart_trans_int_handler 0001  
              i2___awmod@divisor 0062                i2___awmod@counter 0065  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                   _UART_timeout 0039                         memcpy@d1 008D  
                       memcpy@s1 008F            __end_ofi2_in_high_int 1D90  
               i2send_msg@length 006C                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
         ?_uart_recv_int_handler 0001               __end_of_uart_trans 12EA  
              SetChanADC@channel 008E                       _RCSTA1bits 000FAC  
          _block_on_To_msgqueues 1528                 ??_timer0_lthread 0095  
    __size_of_ToMainHigh_recvmsg 0042          __end_of_adc_int_handler 1DB2  
    __size_of_ToMainHigh_sendmsg 0036                       _OSCCONbits 000FD3  
       ToMainHigh_sendmsg@length 0079              __end_ofi2_check_msg 1C14  
          ??_init_timer1_lthread 008F           ??_InterruptHandlerHigh 007F  
              _ToMainLow_recvmsg 1A34                _ToMainLow_sendmsg 1C3E  
             main@last_reg_recvd 0194             __end_ofi2_in_low_int 19F0  
             ?_ToMainLow_recvmsg 00A5              __end_of_Delay1KTCYx 1D0E  
              ??_i2c_int_handler 007F               ?_ToMainLow_sendmsg 0017  
              ??_i2c_master_recv 0060                ??_i2c_master_send 0091  
             i2c_master_send@msg 008E                   uart_trans@data 008D  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 006E            ??_InterruptHandlerLow 001C  
            ??_ToMainLow_recvmsg 00A9                   i2send_msg@qmsg 0074  
                 i2send_msg@slot 0073                   i2send_msg@qptr 006A  
            ??_ToMainLow_sendmsg 001A  
