

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Apr 07 17:31:21 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	param0,global,class=BANK0,space=1,delta=1
    75  0000                     
    76                           	psect	idataCOMRAM
    77  001C8D                     __pidataCOMRAM:
    78                           	opt stack 0
    79                           
    80                           ;initializer for i2c_slave_int_handler@F9158
    81  001C8D  01                 	db	1
    82  001C8E  01                 	db	1
    83  001C8F  02                 	db	2
    84  001C90  03                 	db	3
    85  001C91  06                 	db	6
    86                           
    87                           ;initializer for i2c_slave_int_handler@F9160
    88  001C92  03                 	db	3
    89  001C93  04                 	db	4
    90  001C94  04                 	db	4
    91  001C95  00                 	db	0
    92  001C96  00                 	db	0
    93                           
    94                           ;initializer for i2c_slave_int_handler@F9162
    95  001C97  9F                 	db	159
    96  001C98  1F                 	db	31
    97                           
    98                           	psect	idataBANK1
    99  001C7E                     __pidataBANK1:
   100                           	opt stack 0
   101                           
   102                           ;initializer for main@F9247
   103  001C7E  BC                 	db	188
   104  001C7F  00                 	db	0
   105  001C80  00                 	db	0
   106  001C81  00                 	db	0
   107  001C82  00                 	db	0
   108  001C83  00                 	db	0
   109                           
   110                           ;initializer for main@F9249
   111  001C84  BC                 	db	188
   112  001C85  00                 	db	0
   113  001C86  00                 	db	0
   114  001C87  00                 	db	0
   115  001C88  00                 	db	0
   116  001C89  00                 	db	0
   117                           
   118                           ;initializer for main@F9242
   119  001C8A  01                 	db	1
   120  001C8B  02                 	db	2
   121                           
   122                           ;initializer for main@F9252
   123  001C8C  AA                 	db	170
   124  0000                     _ADCON0	set	4034
   125  0000                     _ADCON0bits	set	4034
   126  0000                     _ADCON1	set	4033
   127  0000                     _ANCON0	set	3912
   128  0000                     _ANCON1	set	3913
   129  0000                     _INTCON2bits	set	4081
   130  0000                     _INTCONbits	set	4082
   131  0000                     _IPR1bits	set	3999
   132  0000                     _LATA	set	3977
   133  0000                     _LATAbits	set	3977
   134  0000                     _LATB	set	3978
   135  0000                     _LATBbits	set	3978
   136  0000                     _OSCCON	set	4051
   137  0000                     _OSCCONbits	set	4051
   138  0000                     _OSCTUNEbits	set	3995
   139  0000                     _PIE1bits	set	3997
   140  0000                     _PIR1bits	set	3998
   141  0000                     _PORTA	set	3968
   142  0000                     _PORTBbits	set	3969
   143  0000                     _RCONbits	set	4048
   144  0000                     _RCREG1	set	4015
   145  0000                     _RCSTA1	set	4012
   146  0000                     _RCSTA1bits	set	4012
   147  0000                     _RCSTAbits	set	4012
   148  0000                     _SPBRG1	set	4016
   149  0000                     _SPBRGH1	set	3967
   150  0000                     _SSPADD	set	4040
   151  0000                     _SSPBUF	set	4041
   152  0000                     _SSPCON1	set	4038
   153  0000                     _SSPCON1bits	set	4038
   154  0000                     _SSPCON2	set	4037
   155  0000                     _SSPCON2bits	set	4037
   156  0000                     _SSPSTAT	set	4039
   157  0000                     _SSPSTATbits	set	4039
   158  0000                     _T0CON	set	4053
   159  0000                     _T0CONbits	set	4053
   160  0000                     _T1CON	set	4045
   161  0000                     _T1CONbits	set	4045
   162  0000                     _T1GCON	set	3994
   163  0000                     _T1GCONbits	set	3994
   164  0000                     _TMR0H	set	4055
   165  0000                     _TMR0L	set	4054
   166  0000                     _TMR1H	set	4047
   167  0000                     _TMR1L	set	4046
   168  0000                     _TRISA	set	3986
   169  0000                     _TRISB	set	3987
   170  0000                     _TRISBbits	set	3987
   171  0000                     _TRISC	set	3988
   172  0000                     _TRISCbits	set	3988
   173  0000                     _TXREG	set	4014
   174  0000                     _TXSTA1	set	4013
   175  0000                     _TXSTA1bits	set	4013
   176  0000                     _TXSTAbits	set	4013
   177                           
   178                           	psect	nvCOMRAM
   179  00003F                     __pnvCOMRAM:
   180                           	opt stack 0
   181  00003F                     _uc_ptr:
   182                           	opt stack 0
   183  00003F                     	ds	2
   184                           
   185                           	psect	nvBANK0
   186  0000C8                     __pnvBANK0:
   187                           	opt stack 0
   188  0000C8                     _ic_ptr:
   189                           	opt stack 0
   190  0000C8                     	ds	2
   191                           
   192                           ; #config settings
   193  0000                     
   194                           	psect	cinit
   195  0014AA                     __pcinit:
   196                           	opt stack 0
   197  0014AA                     start_initialization:
   198                           	opt stack 0
   199  0014AA                     __initialization:
   200                           	opt stack 0
   201                           
   202                           ; Clear objects allocated to BANK2 (134 bytes)
   203  0014AA  EE02  F000         	lfsr	0,__pbssBANK2
   204  0014AE  0E86               	movlw	134
   205  0014B0                     clear_0:
   206  0014B0  6AEE               	clrf	postinc0,c
   207  0014B2  06E8               	decf	wreg,f,c
   208  0014B4  E1FD               	bnz	clear_0
   209                           
   210                           ; Clear objects allocated to BANK1 (134 bytes)
   211  0014B6  EE01  F000         	lfsr	0,__pbssBANK1
   212  0014BA  0E86               	movlw	134
   213  0014BC                     clear_1:
   214  0014BC  6AEE               	clrf	postinc0,c
   215  0014BE  06E8               	decf	wreg,f,c
   216  0014C0  E1FD               	bnz	clear_1
   217                           
   218                           ; Clear objects allocated to BANK0 (28 bytes)
   219  0014C2  EE00  F0AC         	lfsr	0,__pbssBANK0
   220  0014C6  0E1C               	movlw	28
   221  0014C8                     clear_2:
   222  0014C8  6AEE               	clrf	postinc0,c
   223  0014CA  06E8               	decf	wreg,f,c
   224  0014CC  E1FD               	bnz	clear_2
   225                           
   226                           ; Clear objects allocated to COMRAM (6 bytes)
   227  0014CE  6A3E               	clrf	(__pbssCOMRAM+5)& (0+255),c
   228  0014D0  6A3D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   229  0014D2  6A3C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   230  0014D4  6A3B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   231  0014D6  6A3A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   232  0014D8  6A39               	clrf	__pbssCOMRAM& (0+255),c
   233                           
   234                           ; Initialize objects allocated to BANK1 (15 bytes)
   235                           ; load TBLPTR registers with __pidataBANK1
   236  0014DA  0E7E               	movlw	low __pidataBANK1
   237  0014DC  6EF6               	movwf	tblptrl,c
   238  0014DE  0E1C               	movlw	high __pidataBANK1
   239  0014E0  6EF7               	movwf	tblptrh,c
   240  0014E2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   241  0014E4  6EF8               	movwf	tblptru,c
   242  0014E6  EE01  F0D7         	lfsr	0,__pdataBANK1
   243  0014EA  EE10 F00F          	lfsr	1,15
   244  0014EE                     copy_data0:
   245  0014EE  0009               	tblrd		*+
   246  0014F0  CFF5 FFEE          	movff	tablat,postinc0
   247  0014F4  50E5               	movf	postdec1,w,c
   248  0014F6  50E1               	movf	fsr1l,w,c
   249  0014F8  E1FA               	bnz	copy_data0
   250                           
   251                           ; Initialize objects allocated to COMRAM (12 bytes)
   252                           ; load TBLPTR registers with __pidataCOMRAM
   253  0014FA  0E8D               	movlw	low __pidataCOMRAM
   254  0014FC  6EF6               	movwf	tblptrl,c
   255  0014FE  0E1C               	movlw	high __pidataCOMRAM
   256  001500  6EF7               	movwf	tblptrh,c
   257  001502  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   258  001504  6EF8               	movwf	tblptru,c
   259  001506  EE00  F02D         	lfsr	0,__pdataCOMRAM
   260  00150A  EE10 F00C          	lfsr	1,12
   261  00150E                     copy_data1:
   262  00150E  0009               	tblrd		*+
   263  001510  CFF5 FFEE          	movff	tablat,postinc0
   264  001514  50E5               	movf	postdec1,w,c
   265  001516  50E1               	movf	fsr1l,w,c
   266  001518  E1FA               	bnz	copy_data1
   267  00151A                     end_of_initialization:
   268                           	opt stack 0
   269  00151A                     __end_of__initialization:
   270                           	opt stack 0
   271  00151A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   272  00151C  6EF8               	movwf	tblptru,c
   273  00151E  0100               	movlb	0
   274  001520  EF65  F000         	goto	_main	;jump to C main() function
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           postdec1	equ	0xFE5
   282                           fsr1l	equ	0xFE1
   283                           
   284                           	psect	bssCOMRAM
   285  000039                     __pbssCOMRAM:
   286                           	opt stack 0
   287  000039                     _UART_timeout:
   288                           	opt stack 0
   289  000039                     	ds	2
   290  00003B                     _t1Mult:
   291                           	opt stack 0
   292  00003B                     	ds	2
   293  00003D                     _MQ_Main_Willing_to_block:
   294                           	opt stack 0
   295  00003D                     	ds	1
   296  00003E                     _USART1_Status:
   297                           	opt stack 0
   298  00003E                     	ds	1
   299                           tblptru	equ	0xFF8
   300                           tblptrh	equ	0xFF7
   301                           tblptrl	equ	0xFF6
   302                           tablat	equ	0xFF5
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	dataCOMRAM
   309  00002D                     __pdataCOMRAM:
   310                           	opt stack 0
   311  00002D                     i2c_slave_int_handler@F9158:
   312                           	opt stack 0
   313  00002D                     	ds	5
   314  000032                     i2c_slave_int_handler@F9160:
   315                           	opt stack 0
   316  000032                     	ds	5
   317  000037                     i2c_slave_int_handler@F9162:
   318                           	opt stack 0
   319  000037                     	ds	2
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           
   329                           	psect	bssBANK0
   330  0000AC                     __pbssBANK0:
   331                           	opt stack 0
   332  0000AC                     _adcbuffer:
   333                           	opt stack 0
   334  0000AC                     	ds	28
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344                           	psect	bssBANK1
   345  000100                     __pbssBANK1:
   346                           	opt stack 0
   347  000100                     _ToMainHigh_MQ:
   348                           	opt stack 0
   349  000100                     	ds	67
   350  000143                     _ToMainLow_MQ:
   351                           	opt stack 0
   352  000143                     	ds	67
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           postdec1	equ	0xFE5
   360                           fsr1l	equ	0xFE1
   361                           
   362                           	psect	dataBANK1
   363  0001D7                     __pdataBANK1:
   364                           	opt stack 0
   365  0001D7                     main@F9247:
   366                           	opt stack 0
   367  0001D7                     	ds	6
   368  0001DD                     main@F9249:
   369                           	opt stack 0
   370  0001DD                     	ds	6
   371  0001E3                     main@F9242:
   372                           	opt stack 0
   373  0001E3                     	ds	2
   374  0001E5                     main@F9252:
   375                           	opt stack 0
   376  0001E5                     	ds	1
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	bssBANK2
   387  000200                     __pbssBANK2:
   388                           	opt stack 0
   389  000200                     _FromMainHigh_MQ:
   390                           	opt stack 0
   391  000200                     	ds	67
   392  000243                     _FromMainLow_MQ:
   393                           	opt stack 0
   394  000243                     	ds	67
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           postdec1	equ	0xFE5
   402                           fsr1l	equ	0xFE1
   403                           
   404                           	psect	cstackBANK1
   405  000186                     __pcstackBANK1:
   406                           	opt stack 0
   407  000186                     main@msg:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x0
   411  000186                     	ds	2
   412  000188                     main@stop:
   413                           	opt stack 0
   414                           
   415                           ; 6 bytes @ 0x2
   416  000188                     	ds	6
   417  00018E                     main@correct:
   418                           	opt stack 0
   419                           
   420                           ; 6 bytes @ 0x8
   421  00018E                     	ds	6
   422  000194                     main@last_reg_recvd:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0xE
   426  000194                     	ds	1
   427  000195                     main@t0thread_data:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0xF
   431  000195                     	ds	2
   432  000197                     main@t1thread_data:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x11
   436  000197                     	ds	2
   437  000199                     main@sensorMsg:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x13
   441  000199                     	ds	1
   442  00019A                     main@lastMotors:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x14
   446  00019A                     	ds	2
   447  00019C                     main@msgbuffer:
   448                           	opt stack 0
   449                           
   450                           ; 11 bytes @ 0x16
   451  00019C                     	ds	11
   452  0001A7                     main@length:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x21
   456  0001A7                     	ds	1
   457  0001A8                     main@msgtype:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x22
   461  0001A8                     	ds	1
   462  0001A9                     main@state:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x23
   466  0001A9                     	ds	2
   467  0001AB                     main@uc:
   468                           	opt stack 0
   469                           
   470                           ; 15 bytes @ 0x25
   471  0001AB                     	ds	15
   472  0001BA                     main@ic:
   473                           	opt stack 0
   474                           
   475                           ; 29 bytes @ 0x34
   476  0001BA                     	ds	29
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	cstackBANK0
   487  000060                     __pcstackBANK0:
   488                           	opt stack 0
   489  000060                     ?i2_in_high_int:
   490                           	opt stack 0
   491  000060                     ?i2___awmod:
   492                           	opt stack 0
   493  000060                     i2c_master_recv@length:
   494                           	opt stack 0
   495  000060                     WriteTimer0@timer0:
   496                           	opt stack 0
   497  000060                     i2check_msg@qptr:
   498                           	opt stack 0
   499  000060                     i2memcpy@d1:
   500                           	opt stack 0
   501  000060                     i2___awmod@dividend:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x0
   505  000060                     	ds	2
   506  000062                     ??i2_check_msg:
   507  000062                     ?i2_in_low_int:
   508                           	opt stack 0
   509  000062                     WriteTimer0@timer:
   510                           	opt stack 0
   511  000062                     i2memcpy@s1:
   512                           	opt stack 0
   513  000062                     i2___awmod@divisor:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x2
   517  000062                     	ds	2
   518  000064                     ??i2___awmod:
   519  000064                     i2memcpy@n:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x4
   523  000064                     	ds	1
   524  000065                     i2___awmod@counter:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x5
   528  000065                     	ds	1
   529  000066                     i2___awmod@sign:
   530                           	opt stack 0
   531  000066                     i2memcpy@d:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x6
   535  000066                     	ds	2
   536  000068                     i2memcpy@s:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x8
   540  000068                     	ds	2
   541  00006A                     i2send_msg@qptr:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0xA
   545  00006A                     	ds	2
   546  00006C                     i2send_msg@length:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0xC
   550  00006C                     	ds	1
   551  00006D                     i2send_msg@msgtype:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0xD
   555  00006D                     	ds	1
   556  00006E                     i2send_msg@data:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0xE
   560  00006E                     	ds	2
   561  000070                     ??i2_send_msg:
   562                           
   563                           ; 0 bytes @ 0x10
   564  000070                     	ds	1
   565  000071                     i2send_msg@tlength:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x11
   569  000071                     	ds	2
   570  000073                     i2send_msg@slot:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x13
   574  000073                     	ds	1
   575  000074                     i2send_msg@qmsg:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x14
   579  000074                     	ds	2
   580  000076                     ToMainHigh_sendmsg@msgtype:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x16
   584  000076                     	ds	1
   585  000077                     ToMainHigh_sendmsg@data:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x17
   589  000077                     	ds	2
   590  000079                     ToMainHigh_sendmsg@length:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x19
   594  000079                     	ds	1
   595  00007A                     ??_i2c_master_int_handler:
   596                           
   597                           ; 0 bytes @ 0x1A
   598  00007A                     	ds	5
   599  00007F                     ??_InterruptHandlerHigh:
   600                           
   601                           ; 0 bytes @ 0x1F
   602  00007F                     	ds	14
   603  00008D                     ??_SetChanADC:
   604  00008D                     ?_in_high_int:
   605                           	opt stack 0
   606  00008D                     ?___awmod:
   607                           	opt stack 0
   608  00008D                     i2c_master_send@recvlength:
   609                           	opt stack 0
   610  00008D                     OpenADC@config2:
   611                           	opt stack 0
   612  00008D                     OpenTimer0@config:
   613                           	opt stack 0
   614  00008D                     OpenTimer1@config1:
   615                           	opt stack 0
   616  00008D                     Delay1KTCYx@unit:
   617                           	opt stack 0
   618  00008D                     init_queue@qptr:
   619                           	opt stack 0
   620  00008D                     check_msg@qptr:
   621                           	opt stack 0
   622  00008D                     init_i2c@ic:
   623                           	opt stack 0
   624  00008D                     init_uart_recv@uc:
   625                           	opt stack 0
   626  00008D                     uart_trans@data:
   627                           	opt stack 0
   628  00008D                     timer0_lthread@tptr:
   629                           	opt stack 0
   630  00008D                     init_timer1_lthread@tptr:
   631                           	opt stack 0
   632  00008D                     Open1USART@spbrg:
   633                           	opt stack 0
   634  00008D                     ___awmod@dividend:
   635                           	opt stack 0
   636  00008D                     memcpy@d1:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x2D
   640  00008D                     	ds	1
   641  00008E                     ??_OpenTimer1:
   642  00008E                     SetChanADC@channel:
   643                           	opt stack 0
   644  00008E                     i2c_master_send@msg:
   645                           	opt stack 0
   646  00008E                     OpenADC@config3:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x2E
   650  00008E                     	ds	1
   651  00008F                     ??_Open1USART:
   652  00008F                     ??_uart_trans:
   653  00008F                     ??_init_queue:
   654  00008F                     ??_check_msg:
   655  00008F                     ?_in_low_int:
   656                           	opt stack 0
   657  00008F                     OpenTimer1@config:
   658                           	opt stack 0
   659  00008F                     timer0_lthread@msgtype:
   660                           	opt stack 0
   661  00008F                     ___awmod@divisor:
   662                           	opt stack 0
   663  00008F                     memcpy@s1:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0x2F
   667  00008F                     	ds	1
   668  000090                     ??_OpenADC:
   669  000090                     init_queue@i:
   670                           	opt stack 0
   671  000090                     i2c_master_send@slave_addr:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x30
   675  000090                     	ds	1
   676  000091                     ??_init_queues:
   677  000091                     ??_i2c_master_send:
   678  000091                     ??___awmod:
   679  000091                     ?_in_main:
   680                           	opt stack 0
   681  000091                     uart_trans@length:
   682                           	opt stack 0
   683  000091                     timer0_lthread@length:
   684                           	opt stack 0
   685  000091                     memcpy@n:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x31
   689  000091                     	ds	1
   690  000092                     Open1USART@config:
   691                           	opt stack 0
   692  000092                     ___awmod@counter:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x32
   696  000092                     	ds	1
   697  000093                     ??_block_on_To_msgqueues:
   698  000093                     i2c_master_send@sendlength:
   699                           	opt stack 0
   700  000093                     OpenADC@config:
   701                           	opt stack 0
   702  000093                     ___awmod@sign:
   703                           	opt stack 0
   704  000093                     timer0_lthread@msgbuffer:
   705                           	opt stack 0
   706  000093                     memcpy@d:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x33
   710  000093                     	ds	2
   711  000095                     timer0_lthread@msgval:
   712                           	opt stack 0
   713  000095                     memcpy@s:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x35
   717  000095                     	ds	2
   718  000097                     recv_msg@qptr:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0x37
   722  000097                     	ds	2
   723  000099                     recv_msg@maxlength:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0x39
   727  000099                     	ds	1
   728  00009A                     recv_msg@msgtype:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x3A
   732  00009A                     	ds	2
   733  00009C                     recv_msg@data:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x3C
   737  00009C                     	ds	2
   738  00009E                     ??_recv_msg:
   739                           
   740                           ; 0 bytes @ 0x3E
   741  00009E                     	ds	2
   742  0000A0                     recv_msg@slot:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x40
   746  0000A0                     	ds	1
   747  0000A1                     recv_msg@tlength:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x41
   751  0000A1                     	ds	2
   752  0000A3                     recv_msg@qmsg:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x43
   756  0000A3                     	ds	2
   757  0000A5                     ToMainLow_recvmsg@msgtype:
   758                           	opt stack 0
   759  0000A5                     ToMainHigh_recvmsg@msgtype:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x45
   763  0000A5                     	ds	2
   764  0000A7                     ToMainLow_recvmsg@data:
   765                           	opt stack 0
   766  0000A7                     ToMainHigh_recvmsg@data:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x47
   770  0000A7                     	ds	2
   771  0000A9                     ToMainLow_recvmsg@maxlength:
   772                           	opt stack 0
   773  0000A9                     ToMainHigh_recvmsg@maxlength:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x49
   777  0000A9                     	ds	1
   778  0000AA                     ??_main:
   779                           
   780                           ; 0 bytes @ 0x4A
   781  0000AA                     	ds	2
   782                           tblptru	equ	0xFF8
   783                           tblptrh	equ	0xFF7
   784                           tblptrl	equ	0xFF6
   785                           tablat	equ	0xFF5
   786                           postinc0	equ	0xFEE
   787                           wreg	equ	0xFE8
   788                           postdec1	equ	0xFE5
   789                           fsr1l	equ	0xFE1
   790                           
   791                           	psect	cstackCOMRAM
   792  000001                     __pcstackCOMRAM:
   793                           	opt stack 0
   794  000001                     ??_uart_trans_int_handler:
   795  000001                     ?i1___awmod:
   796                           	opt stack 0
   797  000001                     Read1USART@data:
   798                           	opt stack 0
   799  000001                     WriteTimer1@timer1:
   800                           	opt stack 0
   801  000001                     i1memcpy@d1:
   802                           	opt stack 0
   803  000001                     i1___awmod@dividend:
   804                           	opt stack 0
   805                           
   806                           ; 2 bytes @ 0x0
   807  000001                     	ds	2
   808  000003                     WriteTimer1@timer:
   809                           	opt stack 0
   810  000003                     i1memcpy@s1:
   811                           	opt stack 0
   812  000003                     i1___awmod@divisor:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x2
   816  000003                     	ds	2
   817  000005                     ??i1___awmod:
   818  000005                     i1memcpy@n:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x4
   822  000005                     	ds	1
   823  000006                     i1___awmod@counter:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x5
   827  000006                     	ds	1
   828  000007                     i1___awmod@sign:
   829                           	opt stack 0
   830  000007                     i1memcpy@d:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x6
   834  000007                     	ds	2
   835  000009                     i1memcpy@s:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x8
   839  000009                     	ds	2
   840  00000B                     send_msg@qptr:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0xA
   844  00000B                     	ds	2
   845  00000D                     send_msg@length:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0xC
   849  00000D                     	ds	1
   850  00000E                     send_msg@msgtype:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0xD
   854  00000E                     	ds	1
   855  00000F                     send_msg@data:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0xE
   859  00000F                     	ds	2
   860  000011                     ??_send_msg:
   861                           
   862                           ; 0 bytes @ 0x10
   863  000011                     	ds	1
   864  000012                     send_msg@tlength:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x11
   868  000012                     	ds	2
   869  000014                     send_msg@slot:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x13
   873  000014                     	ds	1
   874  000015                     send_msg@qmsg:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x14
   878  000015                     	ds	2
   879  000017                     ToMainLow_sendmsg@msgtype:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x16
   883  000017                     	ds	1
   884  000018                     ToMainLow_sendmsg@data:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0x17
   888  000018                     	ds	2
   889  00001A                     ToMainLow_sendmsg@length:
   890                           	opt stack 0
   891                           
   892                           ; 1 bytes @ 0x19
   893  00001A                     	ds	1
   894  00001B                     ??_timer1_int_handler:
   895  00001B                     ??_uart_recv_int_handler:
   896                           
   897                           ; 0 bytes @ 0x1A
   898  00001B                     	ds	1
   899  00001C                     ??_InterruptHandlerLow:
   900                           
   901                           ; 0 bytes @ 0x1B
   902  00001C                     	ds	17
   903                           tblptru	equ	0xFF8
   904                           tblptrh	equ	0xFF7
   905                           tblptrl	equ	0xFF6
   906                           tablat	equ	0xFF5
   907                           postinc0	equ	0xFEE
   908                           wreg	equ	0xFE8
   909                           postdec1	equ	0xFE5
   910                           fsr1l	equ	0xFE1
   911                           
   912 ;;
   913 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   914 ;;
   915 ;; *************** function _main *****************
   916 ;; Defined at:
   917 ;;		line 186 in file "../src/main.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  sensorMsg       1   19[BANK1 ] unsigned char [1]
   922 ;;  correct         6    8[BANK1 ] unsigned char [6]
   923 ;;  stop            6    2[BANK1 ] unsigned char [6]
   924 ;;  ic             29   52[BANK1 ] struct __i2c_comm
   925 ;;  uc             15   37[BANK1 ] struct __uart_comm
   926 ;;  msgbuffer      11   22[BANK1 ] unsigned char [11]
   927 ;;  state           2   35[BANK1 ] unsigned int 
   928 ;;  lastMotors      2   20[BANK1 ] unsigned char [2]
   929 ;;  t1thread_dat    2   17[BANK1 ] struct __timer1_thread_s
   930 ;;  t0thread_dat    2   15[BANK1 ] struct __timer0_thread_s
   931 ;;  msg             2    0[BANK1 ] unsigned char [2]
   932 ;;  uthread_data    2    0        struct __uart_thread_str
   933 ;;  msgtype         1   34[BANK1 ] unsigned char 
   934 ;;  length          1   33[BANK1 ] char 
   935 ;;  last_reg_rec    1   14[BANK1 ] unsigned char 
   936 ;;  i               1    0        unsigned char 
   937 ;;  c               1    0        unsigned char 
   938 ;; Return value:  Size  Location     Type
   939 ;;		None               void
   940 ;; Registers used:
   941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   948 ;;      Locals:         0       0      81       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   949 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   950 ;;      Totals:         0       2      81       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   951 ;;Total ram usage:       83 bytes
   952 ;; Hardware stack levels required when called:   15
   953 ;; This function calls:
   954 ;;		_Open1USART
   955 ;;		_OpenADC
   956 ;;		_OpenTimer0
   957 ;;		_OpenTimer1
   958 ;;		_SetChanADC
   959 ;;		_ToMainHigh_recvmsg
   960 ;;		_ToMainLow_recvmsg
   961 ;;		_block_on_To_msgqueues
   962 ;;		_enable_interrupts
   963 ;;		_i2c_configure_master
   964 ;;		_i2c_master_send
   965 ;;		_init_i2c
   966 ;;		_init_queues
   967 ;;		_init_timer1_lthread
   968 ;;		_init_uart_recv
   969 ;;		_timer0_lthread
   970 ;;		_uart_trans
   971 ;; This function is called by:
   972 ;;		Startup code after reset
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text0
   977  0000CA                     __ptext0:
   978                           	opt stack 0
   979  0000CA                     _main:
   980                           	opt stack 16
   981                           
   982                           ;main.c: 187: char c;
   983                           ;main.c: 188: signed char length;
   984                           ;main.c: 189: unsigned char msgtype;
   985                           ;main.c: 190: unsigned char last_reg_recvd;
   986                           ;main.c: 191: uart_comm uc;
   987                           ;main.c: 192: i2c_comm ic;
   988                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
   989                           ;main.c: 194: unsigned char i;
   990                           ;main.c: 195: uart_thread_struct uthread_data;
   991                           ;main.c: 196: timer1_thread_struct t1thread_data;
   992                           ;main.c: 197: timer0_thread_struct t0thread_data;
   993                           ;main.c: 213: OSCCON = 0xE0;
   994                           
   995                           ;incstack = 0
   996  0000CA  0EE0               	movlw	224
   997  0000CC  6ED3               	movwf	4051,c	;volatile
   998                           
   999                           ;main.c: 214: OSCTUNEbits.PLLEN = 1;
  1000  0000CE  8C9B               	bsf	3995,6,c	;volatile
  1001                           
  1002                           ;main.c: 224: init_uart_recv(&uc);
  1003  0000D0  0101               	movlb	1	; () banked
  1004  0000D2  0E01               	movlw	high main@uc
  1005  0000D4  0100               	movlb	0	; () banked
  1006  0000D6  0100               	movlb	0	; () banked
  1007  0000D8  6F8E               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1008  0000DA  0101               	movlb	1	; () banked
  1009  0000DC  0EAB               	movlw	low main@uc
  1010  0000DE  0100               	movlb	0	; () banked
  1011  0000E0  0100               	movlb	0	; () banked
  1012  0000E2  6F8D               	movwf	init_uart_recv@uc& (0+255),b
  1013  0000E4  ECD4  F00D         	call	_init_uart_recv	;wreg free
  1014                           
  1015                           ;main.c: 227: init_i2c(&ic);
  1016  0000E8  0101               	movlb	1	; () banked
  1017  0000EA  0E01               	movlw	high main@ic
  1018  0000EC  0100               	movlb	0	; () banked
  1019  0000EE  0100               	movlb	0	; () banked
  1020  0000F0  6F8E               	movwf	(init_i2c@ic+1)& (0+255),b
  1021  0000F2  0101               	movlb	1	; () banked
  1022  0000F4  0EBA               	movlw	low main@ic
  1023  0000F6  0100               	movlb	0	; () banked
  1024  0000F8  0100               	movlb	0	; () banked
  1025  0000FA  6F8D               	movwf	init_i2c@ic& (0+255),b
  1026  0000FC  EC06  F00B         	call	_init_i2c	;wreg free
  1027                           
  1028                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1029  000100  0101               	movlb	1	; () banked
  1030  000102  0E01               	movlw	high main@t1thread_data
  1031  000104  0100               	movlb	0	; () banked
  1032  000106  0100               	movlb	0	; () banked
  1033  000108  6F8E               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1034  00010A  0101               	movlb	1	; () banked
  1035  00010C  0E97               	movlw	low main@t1thread_data
  1036  00010E  0100               	movlb	0	; () banked
  1037  000110  0100               	movlb	0	; () banked
  1038  000112  6F8D               	movwf	init_timer1_lthread@tptr& (0+255),b
  1039  000114  EC12  F00E         	call	_init_timer1_lthread	;wreg free
  1040                           
  1041                           ;main.c: 233: init_queues();
  1042  000118  ECCF  F00A         	call	_init_queues	;wreg free
  1043                           
  1044                           ;main.c: 237: TRISB = 0xFF;
  1045  00011C  6893               	setf	3987,c	;volatile
  1046                           
  1047                           ;main.c: 238: LATB = 0x0;
  1048  00011E  0E00               	movlw	0
  1049  000120  6E8A               	movwf	3978,c	;volatile
  1050                           
  1051                           ;main.c: 240: PORTA = 0x0;
  1052  000122  0E00               	movlw	0
  1053  000124  6E80               	movwf	3968,c	;volatile
  1054                           
  1055                           ;main.c: 241: LATA = 0x0;
  1056  000126  0E00               	movlw	0
  1057  000128  6E89               	movwf	3977,c	;volatile
  1058                           
  1059                           ;main.c: 242: TRISA = 0x00;
  1060  00012A  0E00               	movlw	0
  1061  00012C  6E92               	movwf	3986,c	;volatile
  1062                           
  1063                           ;main.c: 259: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110101);
  1064  00012E  0ED5               	movlw	213
  1065  000130  EC8C  F00D         	call	_OpenTimer0
  1066                           
  1067                           ;main.c: 267: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1068  000134  0100               	movlb	0	; () banked
  1069  000136  6FAA               	movwf	??_main& (0+255),b
  1070  000138  0E00               	movlw	0
  1071  00013A  0100               	movlb	0	; () banked
  1072  00013C  0100               	movlb	0	; () banked
  1073  00013E  6F8D               	movwf	OpenTimer1@config1& (0+255),b
  1074  000140  0100               	movlb	0	; () banked
  1075  000142  51AA               	movf	??_main& (0+255),w,b
  1076  000144  0E9B               	movlw	155
  1077  000146  ECDE  F00C         	call	_OpenTimer1
  1078                           
  1079                           ;main.c: 277: IPR1bits.ADIP = 0;
  1080  00014A  9C9F               	bcf	3999,6,c	;volatile
  1081                           
  1082                           ;main.c: 278: PIE1bits.ADIE = 1;
  1083  00014C  8C9D               	bsf	3997,6,c	;volatile
  1084                           
  1085                           ;main.c: 280: IPR1bits.TMR1IP = 0;
  1086  00014E  909F               	bcf	3999,0,c	;volatile
  1087                           
  1088                           ;main.c: 282: INTCON2bits.TMR0IP = 1;
  1089  000150  84F1               	bsf	intcon2,2,c	;volatile
  1090                           
  1091                           ;main.c: 284: IPR1bits.RCIP = 0;
  1092  000152  9A9F               	bcf	3999,5,c	;volatile
  1093                           
  1094                           ;main.c: 286: IPR1bits.TXIP = 0;
  1095  000154  989F               	bcf	3999,4,c	;volatile
  1096                           
  1097                           ;main.c: 288: IPR1bits.SSPIP = 1;
  1098  000156  869F               	bsf	3999,3,c	;volatile
  1099                           
  1100                           ;main.c: 299: i2c_configure_master();
  1101  000158  ECB4  F00D         	call	_i2c_configure_master	;wreg free
  1102                           
  1103                           ;main.c: 324: PIE1bits.SSPIE = 1;
  1104  00015C  869D               	bsf	3997,3,c	;volatile
  1105                           
  1106                           ;main.c: 332: Open1USART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1107                           ;main.c: 333: 0b11111111 & 0b11101111, 38);
  1108  00015E  0E00               	movlw	0
  1109  000160  0100               	movlb	0	; () banked
  1110  000162  0100               	movlb	0	; () banked
  1111  000164  6F8E               	movwf	(Open1USART@spbrg+1)& (0+255),b
  1112  000166  0E26               	movlw	38
  1113  000168  0100               	movlb	0	; () banked
  1114  00016A  6F8D               	movwf	Open1USART@spbrg& (0+255),b
  1115  00016C  0EEC               	movlw	236
  1116  00016E  ECD6  F009         	call	_Open1USART
  1117                           
  1118                           ;main.c: 334: RCSTAbits.SPEN = 1;
  1119  000172  8EAC               	bsf	4012,7,c	;volatile
  1120                           
  1121                           ;main.c: 335: TRISC = 0xFF;
  1122  000174  6894               	setf	3988,c	;volatile
  1123                           
  1124                           ;main.c: 347: enable_interrupts();
  1125  000176  EC4D  F00E         	call	_enable_interrupts	;wreg free
  1126                           
  1127                           ;main.c: 361: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1128                           ;main.c: 362: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1129                           ;main.c: 363: 0b1011);
  1130  00017A  0100               	movlb	0	; () banked
  1131  00017C  6FAA               	movwf	??_main& (0+255),b
  1132  00017E  0E0C               	movlw	12
  1133  000180  0100               	movlb	0	; () banked
  1134  000182  0100               	movlb	0	; () banked
  1135  000184  6F8D               	movwf	OpenADC@config2& (0+255),b
  1136  000186  0100               	movlb	0	; () banked
  1137  000188  51AA               	movf	??_main& (0+255),w,b
  1138  00018A  0E00               	movlw	0
  1139  00018C  0100               	movlb	0	; () banked
  1140  00018E  0100               	movlb	0	; () banked
  1141  000190  6F8F               	movwf	(OpenADC@config3+1)& (0+255),b
  1142  000192  0E0B               	movlw	11
  1143  000194  0100               	movlb	0	; () banked
  1144  000196  6F8E               	movwf	OpenADC@config3& (0+255),b
  1145  000198  0E53               	movlw	83
  1146  00019A  ECF7  F008         	call	_OpenADC
  1147                           
  1148                           ;main.c: 364: SetChanADC(0b10001111);
  1149  00019E  0E8F               	movlw	143
  1150  0001A0  ECC4  F00D         	call	_SetChanADC
  1151                           
  1152                           ;main.c: 375: unsigned char msg[2] = {0x01, 0x02};
  1153  0001A4  C1E3  F186         	movff	main@F9242,main@msg
  1154  0001A8  C1E4  F187         	movff	main@F9242+1,main@msg+1
  1155                           
  1156                           ;main.c: 393: unsigned char lastMotors[2];
  1157                           ;main.c: 394: unsigned int state = 0;
  1158  0001AC  0E00               	movlw	0
  1159  0001AE  0101               	movlb	1	; () banked
  1160  0001B0  0101               	movlb	1	; () banked
  1161  0001B2  6FAA               	movwf	(main@state+1)& (0+255),b
  1162  0001B4  0E00               	movlw	0
  1163  0001B6  0101               	movlb	1	; () banked
  1164  0001B8  6FA9               	movwf	main@state& (0+255),b
  1165                           
  1166                           ; BSR set to: 1
  1167                           ;main.c: 395: LATAbits.LA1 = 0;
  1168  0001BA  9289               	bcf	3977,1,c	;volatile
  1169                           
  1170                           ; BSR set to: 1
  1171                           ;main.c: 396: LATAbits.LA2 = 0;
  1172  0001BC  9489               	bcf	3977,2,c	;volatile
  1173                           
  1174                           ; BSR set to: 1
  1175                           ;main.c: 397: LATAbits.LA3 = 0;
  1176  0001BE  9689               	bcf	3977,3,c	;volatile
  1177  0001C0                     l2714:
  1178                           
  1179                           ;main.c: 403: block_on_To_msgqueues();
  1180  0001C0  EC16  F00A         	call	_block_on_To_msgqueues	;wreg free
  1181                           
  1182                           ;main.c: 410: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1183  0001C4  0101               	movlb	1	; () banked
  1184  0001C6  0E01               	movlw	high main@msgtype
  1185  0001C8  0100               	movlb	0	; () banked
  1186  0001CA  0100               	movlb	0	; () banked
  1187  0001CC  6FA6               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1188  0001CE  0101               	movlb	1	; () banked
  1189  0001D0  0EA8               	movlw	low main@msgtype
  1190  0001D2  0100               	movlb	0	; () banked
  1191  0001D4  0100               	movlb	0	; () banked
  1192  0001D6  6FA5               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1193  0001D8  0101               	movlb	1	; () banked
  1194  0001DA  0E01               	movlw	high main@msgbuffer
  1195  0001DC  0100               	movlb	0	; () banked
  1196  0001DE  0100               	movlb	0	; () banked
  1197  0001E0  6FA8               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1198  0001E2  0101               	movlb	1	; () banked
  1199  0001E4  0E9C               	movlw	low main@msgbuffer
  1200  0001E6  0100               	movlb	0	; () banked
  1201  0001E8  0100               	movlb	0	; () banked
  1202  0001EA  6FA7               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1203  0001EC  0E0A               	movlw	10
  1204  0001EE  ECBD  F00C         	call	_ToMainHigh_recvmsg
  1205  0001F2  0101               	movlb	1	; () banked
  1206  0001F4  0101               	movlb	1	; () banked
  1207  0001F6  6FA7               	movwf	main@length& (0+255),b
  1208                           
  1209                           ; BSR set to: 1
  1210                           ;main.c: 411: if (length < 0) {
  1211  0001F8  0101               	movlb	1	; () banked
  1212  0001FA  0101               	movlb	1	; () banked
  1213  0001FC  BFA7               	btfsc	main@length& (0+255),7,b
  1214  0001FE  D12B               	goto	l2794
  1215  000200  D11A               	goto	l2792
  1216  000202                     l2722:
  1217                           
  1218                           ; BSR set to: 1
  1219                           ;main.c: 419: {
  1220                           ;main.c: 420: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1221  000202  0101               	movlb	1	; () banked
  1222  000204  0E01               	movlw	high main@t0thread_data
  1223  000206  0100               	movlb	0	; () banked
  1224  000208  0100               	movlb	0	; () banked
  1225  00020A  6F8E               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1226  00020C  0101               	movlb	1	; () banked
  1227  00020E  0E95               	movlw	low main@t0thread_data
  1228  000210  0100               	movlb	0	; () banked
  1229  000212  0100               	movlb	0	; () banked
  1230  000214  6F8D               	movwf	timer0_lthread@tptr& (0+255),b
  1231  000216  0101               	movlb	1	; () banked
  1232  000218  0100               	movlb	0	; () banked
  1233  00021A  C1A8  F08F         	movff	main@msgtype,timer0_lthread@msgtype
  1234  00021E  0100               	movlb	0	; () banked
  1235  000220  0100               	movlb	0	; () banked
  1236  000222  6B90               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1237  000224  0101               	movlb	1	; () banked
  1238  000226  0101               	movlb	1	; () banked
  1239  000228  51A7               	movf	main@length& (0+255),w,b
  1240  00022A  0100               	movlb	0	; () banked
  1241  00022C  0100               	movlb	0	; () banked
  1242  00022E  6F91               	movwf	timer0_lthread@length& (0+255),b
  1243  000230  0100               	movlb	0	; () banked
  1244  000232  6B92               	clrf	(timer0_lthread@length+1)& (0+255),b
  1245  000234  0100               	movlb	0	; () banked
  1246  000236  BF91               	btfsc	timer0_lthread@length& (0+255),7,b
  1247  000238  0792               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1248  00023A  0101               	movlb	1	; () banked
  1249  00023C  0E01               	movlw	high main@msgbuffer
  1250  00023E  0100               	movlb	0	; () banked
  1251  000240  0100               	movlb	0	; () banked
  1252  000242  6F94               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1253  000244  0101               	movlb	1	; () banked
  1254  000246  0E9C               	movlw	low main@msgbuffer
  1255  000248  0100               	movlb	0	; () banked
  1256  00024A  0100               	movlb	0	; () banked
  1257  00024C  6F93               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1258  00024E  EC09  F00E         	call	_timer0_lthread	;wreg free
  1259                           
  1260                           ;main.c: 421: break;
  1261  000252  D101               	goto	l2794
  1262  000254                     l134:
  1263                           
  1264                           ;main.c: 424: case 41:
  1265                           ;main.c: 425: {
  1266                           ;main.c: 428: last_reg_recvd = msgbuffer[0];
  1267  000254  C19C  F194         	movff	main@msgbuffer,main@last_reg_recvd
  1268                           
  1269                           ;main.c: 429: break;
  1270  000258  D0FE               	goto	l2794
  1271  00025A                     l2724:
  1272                           
  1273                           ;main.c: 432: {
  1274                           ;main.c: 434: if(msgbuffer[0] == 0x04){
  1275  00025A  0101               	movlb	1	; () banked
  1276  00025C  0101               	movlb	1	; () banked
  1277  00025E  519C               	movf	main@msgbuffer& (0+255),w,b
  1278  000260  0A04               	xorlw	4
  1279  000262  A4D8               	btfss	status,2,c
  1280  000264  D00F               	goto	l2736
  1281                           
  1282                           ; BSR set to: 1
  1283                           ;main.c: 435: if(msgbuffer[1] == 0x01){
  1284  000266  0101               	movlb	1	; () banked
  1285  000268  0101               	movlb	1	; () banked
  1286  00026A  059D               	decf	(main@msgbuffer+1)& (0+255),w,b
  1287  00026C  A4D8               	btfss	status,2,c
  1288  00026E  D00A               	goto	l2736
  1289                           
  1290                           ; BSR set to: 1
  1291                           ;main.c: 436: state = 0;
  1292  000270  0E00               	movlw	0
  1293  000272  0101               	movlb	1	; () banked
  1294  000274  0101               	movlb	1	; () banked
  1295  000276  6FAA               	movwf	(main@state+1)& (0+255),b
  1296  000278  0E00               	movlw	0
  1297  00027A  0101               	movlb	1	; () banked
  1298  00027C  6FA9               	movwf	main@state& (0+255),b
  1299                           
  1300                           ; BSR set to: 1
  1301                           ;main.c: 437: LATAbits.LA1 = 0;
  1302  00027E  9289               	bcf	3977,1,c	;volatile
  1303                           
  1304                           ; BSR set to: 1
  1305                           ;main.c: 438: LATAbits.LA2 = 0;
  1306  000280  9489               	bcf	3977,2,c	;volatile
  1307                           
  1308                           ; BSR set to: 1
  1309                           ;main.c: 439: LATAbits.LA3 = 0;
  1310  000282  9689               	bcf	3977,3,c	;volatile
  1311  000284                     l2736:
  1312                           
  1313                           ; BSR set to: 1
  1314                           ;main.c: 440: }
  1315                           ;main.c: 441: }
  1316                           ;main.c: 443: unsigned char stop[6] = {0xBC, 0x00, 0x00, 0x00, 0x00, 0x00};
  1317  000284  EE21  F0D7         	lfsr	2,main@F9247
  1318  000288  EE11  F088         	lfsr	1,main@stop
  1319  00028C  0E06               	movlw	6
  1320  00028E                     u1771:
  1321  00028E  CFDE FFE6          	movff	postinc2,postinc1
  1322  000292  2EE8               	decfsz	wreg,f,c
  1323  000294  D7FC               	goto	u1771
  1324                           
  1325                           ; BSR set to: 1
  1326                           ;main.c: 444: unsigned char correct[6] = {0xBC, 0x00, 0x00, 0x00, 0x00};
  1327  000296  EE21  F0DD         	lfsr	2,main@F9249
  1328  00029A  EE11  F08E         	lfsr	1,main@correct
  1329  00029E  0E06               	movlw	6
  1330  0002A0                     u1781:
  1331  0002A0  CFDE FFE6          	movff	postinc2,postinc1
  1332  0002A4  2EE8               	decfsz	wreg,f,c
  1333  0002A6  D7FC               	goto	u1781
  1334                           
  1335                           ; BSR set to: 1
  1336                           ;main.c: 445: if(msgbuffer[0] == 0x01){
  1337  0002A8  0101               	movlb	1	; () banked
  1338  0002AA  0101               	movlb	1	; () banked
  1339  0002AC  059C               	decf	main@msgbuffer& (0+255),w,b
  1340  0002AE  A4D8               	btfss	status,2,c
  1341  0002B0  D0AF               	goto	l2786
  1342                           
  1343                           ; BSR set to: 1
  1344                           ;main.c: 446: if(state == 0){
  1345  0002B2  0101               	movlb	1	; () banked
  1346  0002B4  0101               	movlb	1	; () banked
  1347  0002B6  51AA               	movf	(main@state+1)& (0+255),w,b
  1348  0002B8  11A9               	iorwf	main@state& (0+255),w,b
  1349  0002BA  A4D8               	btfss	status,2,c
  1350  0002BC  D00E               	goto	l2746
  1351                           
  1352                           ; BSR set to: 1
  1353                           ;main.c: 447: uart_trans(6, msgbuffer);
  1354  0002BE  0101               	movlb	1	; () banked
  1355  0002C0  0E01               	movlw	high main@msgbuffer
  1356  0002C2  0100               	movlb	0	; () banked
  1357  0002C4  0100               	movlb	0	; () banked
  1358  0002C6  6F8E               	movwf	(uart_trans@data+1)& (0+255),b
  1359  0002C8  0101               	movlb	1	; () banked
  1360  0002CA  0E9C               	movlw	low main@msgbuffer
  1361  0002CC  0100               	movlb	0	; () banked
  1362  0002CE  0100               	movlb	0	; () banked
  1363  0002D0  6F8D               	movwf	uart_trans@data& (0+255),b
  1364  0002D2  0E06               	movlw	6
  1365  0002D4  EC9D  F008         	call	_uart_trans
  1366                           
  1367                           ;main.c: 448: }else if(state == 3){
  1368  0002D8  D0BE               	goto	l2794
  1369  0002DA                     l2746:
  1370  0002DA  0101               	movlb	1	; () banked
  1371  0002DC  0101               	movlb	1	; () banked
  1372  0002DE  51A9               	movf	main@state& (0+255),w,b
  1373  0002E0  0A03               	xorlw	3
  1374  0002E2  11AA               	iorwf	(main@state+1)& (0+255),w,b
  1375  0002E4  A4D8               	btfss	status,2,c
  1376  0002E6  D02E               	goto	l2760
  1377                           
  1378                           ; BSR set to: 1
  1379                           ;main.c: 449: if(msgbuffer[3] >= 0x5A){
  1380  0002E8  0101               	movlb	1	; () banked
  1381  0002EA  EE21  F09F         	lfsr	2,main@msgbuffer+3
  1382  0002EE  0E59               	movlw	89
  1383  0002F0  64DF               	cpfsgt	indf2,c
  1384  0002F2  D0B1               	goto	l2794
  1385                           
  1386                           ; BSR set to: 1
  1387                           ;main.c: 450: i2c_master_send(6, 6, stop, 0xBE);
  1388  0002F4  0100               	movlb	0	; () banked
  1389  0002F6  6FAA               	movwf	??_main& (0+255),b
  1390  0002F8  0E06               	movlw	6
  1391  0002FA  0100               	movlb	0	; () banked
  1392  0002FC  0100               	movlb	0	; () banked
  1393  0002FE  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1394  000300  0100               	movlb	0	; () banked
  1395  000302  51AA               	movf	??_main& (0+255),w,b
  1396  000304  0101               	movlb	1	; () banked
  1397  000306  0E01               	movlw	high main@stop
  1398  000308  0100               	movlb	0	; () banked
  1399  00030A  0100               	movlb	0	; () banked
  1400  00030C  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1401  00030E  0101               	movlb	1	; () banked
  1402  000310  0E88               	movlw	low main@stop
  1403  000312  0100               	movlb	0	; () banked
  1404  000314  0100               	movlb	0	; () banked
  1405  000316  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1406  000318  0100               	movlb	0	; () banked
  1407  00031A  6FAB               	movwf	(??_main+1)& (0+255),b
  1408  00031C  0EBE               	movlw	190
  1409  00031E  0100               	movlb	0	; () banked
  1410  000320  0100               	movlb	0	; () banked
  1411  000322  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1412  000324  0100               	movlb	0	; () banked
  1413  000326  51AB               	movf	(??_main+1)& (0+255),w,b
  1414  000328  0E06               	movlw	6
  1415  00032A  EC9A  F005         	call	_i2c_master_send
  1416                           
  1417                           ;main.c: 451: state = 0;
  1418  00032E  0E00               	movlw	0
  1419  000330  0101               	movlb	1	; () banked
  1420  000332  0101               	movlb	1	; () banked
  1421  000334  6FAA               	movwf	(main@state+1)& (0+255),b
  1422  000336  0E00               	movlw	0
  1423  000338  0101               	movlb	1	; () banked
  1424  00033A  6FA9               	movwf	main@state& (0+255),b
  1425                           
  1426                           ; BSR set to: 1
  1427                           ;main.c: 452: LATAbits.LA1 = 0;
  1428  00033C  9289               	bcf	3977,1,c	;volatile
  1429                           
  1430                           ; BSR set to: 1
  1431                           ;main.c: 453: LATAbits.LA2 = 0;
  1432  00033E  9489               	bcf	3977,2,c	;volatile
  1433                           
  1434                           ; BSR set to: 1
  1435                           ;main.c: 454: LATAbits.LA3 = 1;
  1436  000340  8689               	bsf	3977,3,c	;volatile
  1437  000342  D089               	goto	l2794
  1438  000344                     l2760:
  1439                           
  1440                           ; BSR set to: 1
  1441  000344  0101               	movlb	1	; () banked
  1442  000346  0101               	movlb	1	; () banked
  1443  000348  05A9               	decf	main@state& (0+255),w,b
  1444  00034A  11AA               	iorwf	(main@state+1)& (0+255),w,b
  1445  00034C  A4D8               	btfss	status,2,c
  1446  00034E  D083               	goto	l2794
  1447                           
  1448                           ; BSR set to: 1
  1449                           ;main.c: 457: if(msgbuffer[1] <= 0x20){
  1450  000350  0E21               	movlw	33
  1451  000352  0101               	movlb	1	; () banked
  1452  000354  0101               	movlb	1	; () banked
  1453  000356  5D9D               	subwf	(main@msgbuffer+1)& (0+255),w,b
  1454  000358  B0D8               	btfsc	status,0,c
  1455  00035A  D027               	goto	l2774
  1456                           
  1457                           ; BSR set to: 1
  1458                           ;main.c: 458: i2c_master_send(6, 6, stop, 0xBE);
  1459  00035C  0100               	movlb	0	; () banked
  1460  00035E  6FAA               	movwf	??_main& (0+255),b
  1461  000360  0E06               	movlw	6
  1462  000362  0100               	movlb	0	; () banked
  1463  000364  0100               	movlb	0	; () banked
  1464  000366  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1465  000368  0100               	movlb	0	; () banked
  1466  00036A  51AA               	movf	??_main& (0+255),w,b
  1467  00036C  0101               	movlb	1	; () banked
  1468  00036E  0E01               	movlw	high main@stop
  1469  000370  0100               	movlb	0	; () banked
  1470  000372  0100               	movlb	0	; () banked
  1471  000374  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1472  000376  0101               	movlb	1	; () banked
  1473  000378  0E88               	movlw	low main@stop
  1474  00037A  0100               	movlb	0	; () banked
  1475  00037C  0100               	movlb	0	; () banked
  1476  00037E  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1477  000380  0100               	movlb	0	; () banked
  1478  000382  6FAB               	movwf	(??_main+1)& (0+255),b
  1479  000384  0EBE               	movlw	190
  1480  000386  0100               	movlb	0	; () banked
  1481  000388  0100               	movlb	0	; () banked
  1482  00038A  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1483  00038C  0100               	movlb	0	; () banked
  1484  00038E  51AB               	movf	(??_main+1)& (0+255),w,b
  1485  000390  0E06               	movlw	6
  1486  000392  EC9A  F005         	call	_i2c_master_send
  1487                           
  1488                           ;main.c: 459: state = 0;
  1489  000396  0E00               	movlw	0
  1490  000398  0101               	movlb	1	; () banked
  1491  00039A  0101               	movlb	1	; () banked
  1492  00039C  6FAA               	movwf	(main@state+1)& (0+255),b
  1493  00039E  0E00               	movlw	0
  1494  0003A0  0101               	movlb	1	; () banked
  1495  0003A2  6FA9               	movwf	main@state& (0+255),b
  1496                           
  1497                           ; BSR set to: 1
  1498                           ;main.c: 460: LATAbits.LA1 = 0;
  1499  0003A4  9289               	bcf	3977,1,c	;volatile
  1500                           
  1501                           ; BSR set to: 1
  1502                           ;main.c: 461: LATAbits.LA2 = 0;
  1503  0003A6  9489               	bcf	3977,2,c	;volatile
  1504  0003A8  D00F               	goto	L1
  1505  0003AA                     l2774:
  1506                           
  1507                           ; BSR set to: 1
  1508  0003AA  0101               	movlb	1	; () banked
  1509  0003AC  EE21  F09E         	lfsr	2,main@msgbuffer+2
  1510  0003B0  0E59               	movlw	89
  1511  0003B2  64DF               	cpfsgt	indf2,c
  1512  0003B4  D00B               	goto	l151
  1513                           
  1514                           ; BSR set to: 1
  1515                           ;main.c: 465: state = 3;
  1516  0003B6  0E00               	movlw	0
  1517  0003B8  0101               	movlb	1	; () banked
  1518  0003BA  0101               	movlb	1	; () banked
  1519  0003BC  6FAA               	movwf	(main@state+1)& (0+255),b
  1520  0003BE  0E03               	movlw	3
  1521  0003C0  0101               	movlb	1	; () banked
  1522  0003C2  6FA9               	movwf	main@state& (0+255),b
  1523                           
  1524                           ; BSR set to: 1
  1525                           ;main.c: 466: LATAbits.LA1 = 1;
  1526  0003C4  8289               	bsf	3977,1,c	;volatile
  1527                           
  1528                           ; BSR set to: 1
  1529                           ;main.c: 467: LATAbits.LA2 = 1;
  1530  0003C6  8489               	bsf	3977,2,c	;volatile
  1531  0003C8                     L1:
  1532                           
  1533                           ; BSR set to: 1
  1534                           ;main.c: 468: LATAbits.LA3 = 0;
  1535  0003C8  9689               	bcf	3977,3,c	;volatile
  1536                           
  1537                           ;main.c: 469: }
  1538  0003CA  D045               	goto	l2794
  1539  0003CC                     l151:
  1540                           
  1541                           ; BSR set to: 1
  1542                           ;main.c: 485: else{
  1543                           ;main.c: 486: correct[1] = lastMotors[0];
  1544  0003CC  C19A  F18F         	movff	main@lastMotors,main@correct+1
  1545                           
  1546                           ;main.c: 487: correct[2] = lastMotors[1];
  1547  0003D0  C19B  F190         	movff	main@lastMotors+1,main@correct+2
  1548                           
  1549                           ; BSR set to: 1
  1550                           ;main.c: 488: i2c_master_send(6, 6, correct, 0xBE);
  1551  0003D4  0100               	movlb	0	; () banked
  1552  0003D6  6FAA               	movwf	??_main& (0+255),b
  1553  0003D8  0E06               	movlw	6
  1554  0003DA  0100               	movlb	0	; () banked
  1555  0003DC  0100               	movlb	0	; () banked
  1556  0003DE  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1557  0003E0  0100               	movlb	0	; () banked
  1558  0003E2  51AA               	movf	??_main& (0+255),w,b
  1559  0003E4  0101               	movlb	1	; () banked
  1560  0003E6  0E01               	movlw	high main@correct
  1561  0003E8  0100               	movlb	0	; () banked
  1562  0003EA  0100               	movlb	0	; () banked
  1563  0003EC  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1564  0003EE  0101               	movlb	1	; () banked
  1565  0003F0  0E8E               	movlw	low main@correct
  1566  0003F2  0100               	movlb	0	; () banked
  1567  0003F4  0100               	movlb	0	; () banked
  1568  0003F6  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1569  0003F8  0100               	movlb	0	; () banked
  1570  0003FA  6FAB               	movwf	(??_main+1)& (0+255),b
  1571  0003FC  0EBE               	movlw	190
  1572  0003FE  0100               	movlb	0	; () banked
  1573  000400  0100               	movlb	0	; () banked
  1574  000402  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1575  000404  0100               	movlb	0	; () banked
  1576  000406  51AB               	movf	(??_main+1)& (0+255),w,b
  1577  000408  0E06               	movlw	6
  1578  00040A  EC9A  F005         	call	_i2c_master_send
  1579  00040E  D023               	goto	l2794
  1580  000410                     l2786:
  1581  000410  0101               	movlb	1	; () banked
  1582  000412  0101               	movlb	1	; () banked
  1583  000414  519C               	movf	main@msgbuffer& (0+255),w,b
  1584  000416  B4D8               	btfsc	status,2,c
  1585  000418  D01E               	goto	l2794
  1586                           
  1587                           ; BSR set to: 1
  1588                           ;main.c: 493: uart_trans(6, msgbuffer);
  1589  00041A  0101               	movlb	1	; () banked
  1590  00041C  0E01               	movlw	high main@msgbuffer
  1591  00041E  0100               	movlb	0	; () banked
  1592  000420  0100               	movlb	0	; () banked
  1593  000422  6F8E               	movwf	(uart_trans@data+1)& (0+255),b
  1594  000424  0101               	movlb	1	; () banked
  1595  000426  0E9C               	movlw	low main@msgbuffer
  1596  000428  0100               	movlb	0	; () banked
  1597  00042A  0100               	movlb	0	; () banked
  1598  00042C  6F8D               	movwf	uart_trans@data& (0+255),b
  1599  00042E  0E06               	movlw	6
  1600  000430  EC9D  F008         	call	_uart_trans
  1601  000434  D010               	goto	l2794
  1602  000436                     l2792:
  1603  000436  0101               	movlb	1	; () banked
  1604  000438  0101               	movlb	1	; () banked
  1605  00043A  51A8               	movf	main@msgtype& (0+255),w,b
  1606                           
  1607                           ; Switch size 1, requested type "space"
  1608                           ; Number of cases is 5, Range of values is 10 to 46
  1609                           ; switch strategies available:
  1610                           ; Name         Instructions Cycles
  1611                           ; simple_byte           16     9 (average)
  1612                           ;	Chosen strategy is simple_byte
  1613  00043C  0A0A               	xorlw	10	; case 10
  1614  00043E  B4D8               	btfsc	status,2,c
  1615  000440  D6E0               	goto	l2722
  1616  000442  0A22               	xorlw	34	; case 40
  1617  000444  B4D8               	btfsc	status,2,c
  1618  000446  D706               	goto	l134
  1619  000448  0A01               	xorlw	1	; case 41
  1620  00044A  B4D8               	btfsc	status,2,c
  1621  00044C  D703               	goto	l134
  1622  00044E  0A04               	xorlw	4	; case 45
  1623  000450  B4D8               	btfsc	status,2,c
  1624  000452  D703               	goto	l2724
  1625  000454  0A03               	xorlw	3	; case 46
  1626  000456                     l2794:
  1627                           
  1628                           ;main.c: 512: }
  1629                           ;main.c: 515: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1630  000456  0101               	movlb	1	; () banked
  1631  000458  0E01               	movlw	high main@msgtype
  1632  00045A  0100               	movlb	0	; () banked
  1633  00045C  0100               	movlb	0	; () banked
  1634  00045E  6FA6               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1635  000460  0101               	movlb	1	; () banked
  1636  000462  0EA8               	movlw	low main@msgtype
  1637  000464  0100               	movlb	0	; () banked
  1638  000466  0100               	movlb	0	; () banked
  1639  000468  6FA5               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1640  00046A  0101               	movlb	1	; () banked
  1641  00046C  0E01               	movlw	high main@msgbuffer
  1642  00046E  0100               	movlb	0	; () banked
  1643  000470  0100               	movlb	0	; () banked
  1644  000472  6FA8               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1645  000474  0101               	movlb	1	; () banked
  1646  000476  0E9C               	movlw	low main@msgbuffer
  1647  000478  0100               	movlb	0	; () banked
  1648  00047A  0100               	movlb	0	; () banked
  1649  00047C  6FA7               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1650  00047E  0E0A               	movlw	10
  1651  000480  EC9C  F00C         	call	_ToMainLow_recvmsg
  1652  000484  0101               	movlb	1	; () banked
  1653  000486  0101               	movlb	1	; () banked
  1654  000488  6FA7               	movwf	main@length& (0+255),b
  1655                           
  1656                           ; BSR set to: 1
  1657                           ;main.c: 516: if (length < 0) {
  1658  00048A  0101               	movlb	1	; () banked
  1659  00048C  0101               	movlb	1	; () banked
  1660  00048E  BFA7               	btfsc	main@length& (0+255),7,b
  1661  000490  D697               	goto	l2714
  1662  000492  D0B4               	goto	l2848
  1663  000494                     l161:
  1664                           
  1665                           ; BSR set to: 1
  1666                           ;main.c: 524: {
  1667                           ;main.c: 525: LATAbits.LA0 = 1;
  1668  000494  8089               	bsf	3977,0,c	;volatile
  1669                           
  1670                           ;main.c: 526: unsigned char sensorMsg[1] = {0xAA};
  1671  000496  C1E5  F199         	movff	main@F9252,main@sensorMsg
  1672                           
  1673                           ; BSR set to: 1
  1674                           ;main.c: 528: if(state == 1 || state == 3){
  1675  00049A  0101               	movlb	1	; () banked
  1676  00049C  0101               	movlb	1	; () banked
  1677  00049E  05A9               	decf	main@state& (0+255),w,b
  1678  0004A0  11AA               	iorwf	(main@state+1)& (0+255),w,b
  1679  0004A2  B4D8               	btfsc	status,2,c
  1680  0004A4  D007               	goto	l2804
  1681                           
  1682                           ; BSR set to: 1
  1683  0004A6  0101               	movlb	1	; () banked
  1684  0004A8  0101               	movlb	1	; () banked
  1685  0004AA  51A9               	movf	main@state& (0+255),w,b
  1686  0004AC  0A03               	xorlw	3
  1687  0004AE  11AA               	iorwf	(main@state+1)& (0+255),w,b
  1688  0004B0  A4D8               	btfss	status,2,c
  1689  0004B2  D01D               	goto	l2806
  1690  0004B4                     l2804:
  1691                           
  1692                           ; BSR set to: 1
  1693                           ;main.c: 529: i2c_master_send(1, 6, sensorMsg, 0x9E);
  1694  0004B4  0100               	movlb	0	; () banked
  1695  0004B6  6FAA               	movwf	??_main& (0+255),b
  1696  0004B8  0E06               	movlw	6
  1697  0004BA  0100               	movlb	0	; () banked
  1698  0004BC  0100               	movlb	0	; () banked
  1699  0004BE  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1700  0004C0  0100               	movlb	0	; () banked
  1701  0004C2  51AA               	movf	??_main& (0+255),w,b
  1702  0004C4  0101               	movlb	1	; () banked
  1703  0004C6  0E01               	movlw	high main@sensorMsg
  1704  0004C8  0100               	movlb	0	; () banked
  1705  0004CA  0100               	movlb	0	; () banked
  1706  0004CC  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1707  0004CE  0101               	movlb	1	; () banked
  1708  0004D0  0E99               	movlw	low main@sensorMsg
  1709  0004D2  0100               	movlb	0	; () banked
  1710  0004D4  0100               	movlb	0	; () banked
  1711  0004D6  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1712  0004D8  0100               	movlb	0	; () banked
  1713  0004DA  6FAB               	movwf	(??_main+1)& (0+255),b
  1714  0004DC  0E9E               	movlw	158
  1715  0004DE  0100               	movlb	0	; () banked
  1716  0004E0  0100               	movlb	0	; () banked
  1717  0004E2  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1718  0004E4  0100               	movlb	0	; () banked
  1719  0004E6  51AB               	movf	(??_main+1)& (0+255),w,b
  1720  0004E8  0E01               	movlw	1
  1721  0004EA  EC9A  F005         	call	_i2c_master_send
  1722  0004EE                     l2806:
  1723                           
  1724                           ;main.c: 530: }
  1725                           ;main.c: 531: LATAbits.LA0 = 0;
  1726  0004EE  9089               	bcf	3977,0,c	;volatile
  1727                           
  1728                           ;main.c: 532: break;
  1729  0004F0  D667               	goto	l2714
  1730  0004F2                     l2808:
  1731                           
  1732                           ;main.c: 535: case 31:
  1733                           ;main.c: 536: {
  1734                           ;main.c: 538: if(msgbuffer[0] == 0xBA || msgbuffer[0] == 0xCA || msgbuffer[0] == 0x0BC){
  1735  0004F2  0101               	movlb	1	; () banked
  1736  0004F4  0101               	movlb	1	; () banked
  1737  0004F6  519C               	movf	main@msgbuffer& (0+255),w,b
  1738  0004F8  0ABA               	xorlw	186
  1739  0004FA  B4D8               	btfsc	status,2,c
  1740  0004FC  D00C               	goto	l2814
  1741                           
  1742                           ; BSR set to: 1
  1743  0004FE  0101               	movlb	1	; () banked
  1744  000500  0101               	movlb	1	; () banked
  1745  000502  519C               	movf	main@msgbuffer& (0+255),w,b
  1746  000504  0ACA               	xorlw	202
  1747  000506  B4D8               	btfsc	status,2,c
  1748  000508  D006               	goto	l2814
  1749                           
  1750                           ; BSR set to: 1
  1751  00050A  0101               	movlb	1	; () banked
  1752  00050C  0101               	movlb	1	; () banked
  1753  00050E  519C               	movf	main@msgbuffer& (0+255),w,b
  1754  000510  0ABC               	xorlw	188
  1755  000512  A4D8               	btfss	status,2,c
  1756  000514  D04E               	goto	l2840
  1757  000516                     l2814:
  1758                           
  1759                           ; BSR set to: 1
  1760                           ;main.c: 540: if(msgbuffer[0] == 0x0BA || msgbuffer[0] == 0xBC){
  1761  000516  0101               	movlb	1	; () banked
  1762  000518  0101               	movlb	1	; () banked
  1763  00051A  519C               	movf	main@msgbuffer& (0+255),w,b
  1764  00051C  0ABA               	xorlw	186
  1765  00051E  B4D8               	btfsc	status,2,c
  1766  000520  D006               	goto	l175
  1767                           
  1768                           ; BSR set to: 1
  1769  000522  0101               	movlb	1	; () banked
  1770  000524  0101               	movlb	1	; () banked
  1771  000526  519C               	movf	main@msgbuffer& (0+255),w,b
  1772  000528  0ABC               	xorlw	188
  1773  00052A  A4D8               	btfss	status,2,c
  1774  00052C  D024               	goto	l2838
  1775  00052E                     l175:
  1776                           
  1777                           ; BSR set to: 1
  1778                           ;main.c: 542: lastMotors[0] = msgbuffer[1];
  1779  00052E  C19D  F19A         	movff	main@msgbuffer+1,main@lastMotors
  1780                           
  1781                           ;main.c: 543: lastMotors[1] = msgbuffer[2];
  1782  000532  C19E  F19B         	movff	main@msgbuffer+2,main@lastMotors+1
  1783                           
  1784                           ; BSR set to: 1
  1785                           ;main.c: 545: if(msgbuffer[0] == 0xBA){
  1786  000536  0101               	movlb	1	; () banked
  1787  000538  0101               	movlb	1	; () banked
  1788  00053A  519C               	movf	main@msgbuffer& (0+255),w,b
  1789  00053C  0ABA               	xorlw	186
  1790  00053E  A4D8               	btfss	status,2,c
  1791  000540  D00A               	goto	l2828
  1792                           
  1793                           ; BSR set to: 1
  1794                           ;main.c: 546: state = 2;
  1795  000542  0E00               	movlw	0
  1796  000544  0101               	movlb	1	; () banked
  1797  000546  0101               	movlb	1	; () banked
  1798  000548  6FAA               	movwf	(main@state+1)& (0+255),b
  1799  00054A  0E02               	movlw	2
  1800  00054C  0101               	movlb	1	; () banked
  1801  00054E  6FA9               	movwf	main@state& (0+255),b
  1802                           
  1803                           ; BSR set to: 1
  1804                           ;main.c: 547: LATAbits.LA1 = 0;
  1805  000550  9289               	bcf	3977,1,c	;volatile
  1806                           
  1807                           ; BSR set to: 1
  1808                           ;main.c: 548: LATAbits.LA2 = 1;
  1809  000552  8489               	bsf	3977,2,c	;volatile
  1810  000554  D00F               	goto	L2
  1811  000556                     l2828:
  1812                           
  1813                           ; BSR set to: 1
  1814  000556  0101               	movlb	1	; () banked
  1815  000558  0101               	movlb	1	; () banked
  1816  00055A  519C               	movf	main@msgbuffer& (0+255),w,b
  1817  00055C  0ABC               	xorlw	188
  1818  00055E  A4D8               	btfss	status,2,c
  1819  000560  D00A               	goto	l2838
  1820                           
  1821                           ; BSR set to: 1
  1822                           ;main.c: 551: state = 1;
  1823  000562  0E00               	movlw	0
  1824  000564  0101               	movlb	1	; () banked
  1825  000566  0101               	movlb	1	; () banked
  1826  000568  6FAA               	movwf	(main@state+1)& (0+255),b
  1827  00056A  0E01               	movlw	1
  1828  00056C  0101               	movlb	1	; () banked
  1829  00056E  6FA9               	movwf	main@state& (0+255),b
  1830                           
  1831                           ; BSR set to: 1
  1832                           ;main.c: 552: LATAbits.LA1 = 1;
  1833  000570  8289               	bsf	3977,1,c	;volatile
  1834                           
  1835                           ; BSR set to: 1
  1836                           ;main.c: 553: LATAbits.LA2 = 0;
  1837  000572  9489               	bcf	3977,2,c	;volatile
  1838  000574                     L2:
  1839                           
  1840                           ; BSR set to: 1
  1841                           ;main.c: 554: LATAbits.LA3 = 0;
  1842  000574  9689               	bcf	3977,3,c	;volatile
  1843  000576                     l2838:
  1844                           
  1845                           ; BSR set to: 1
  1846                           ;main.c: 555: }
  1847                           ;main.c: 557: }
  1848                           ;main.c: 558: i2c_master_send(6, 6, msgbuffer, 0xBE);
  1849  000576  0100               	movlb	0	; () banked
  1850  000578  6FAA               	movwf	??_main& (0+255),b
  1851  00057A  0E06               	movlw	6
  1852  00057C  0100               	movlb	0	; () banked
  1853  00057E  0100               	movlb	0	; () banked
  1854  000580  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1855  000582  0100               	movlb	0	; () banked
  1856  000584  51AA               	movf	??_main& (0+255),w,b
  1857  000586  0101               	movlb	1	; () banked
  1858  000588  0E01               	movlw	high main@msgbuffer
  1859  00058A  0100               	movlb	0	; () banked
  1860  00058C  0100               	movlb	0	; () banked
  1861  00058E  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1862  000590  0101               	movlb	1	; () banked
  1863  000592  0E9C               	movlw	low main@msgbuffer
  1864  000594  0100               	movlb	0	; () banked
  1865  000596  0100               	movlb	0	; () banked
  1866  000598  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1867  00059A  0100               	movlb	0	; () banked
  1868  00059C  6FAB               	movwf	(??_main+1)& (0+255),b
  1869  00059E  0EBE               	movlw	190
  1870  0005A0  0100               	movlb	0	; () banked
  1871  0005A2  0100               	movlb	0	; () banked
  1872  0005A4  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1873  0005A6  0100               	movlb	0	; () banked
  1874  0005A8  51AB               	movf	(??_main+1)& (0+255),w,b
  1875  0005AA  0E06               	movlw	6
  1876  0005AC  EC9A  F005         	call	_i2c_master_send
  1877                           
  1878                           ;main.c: 561: } else if(msgbuffer[0] == 0xAA){
  1879  0005B0  D023               	goto	l2844
  1880  0005B2                     l2840:
  1881  0005B2  0101               	movlb	1	; () banked
  1882  0005B4  0101               	movlb	1	; () banked
  1883  0005B6  519C               	movf	main@msgbuffer& (0+255),w,b
  1884  0005B8  0AAA               	xorlw	170
  1885  0005BA  A4D8               	btfss	status,2,c
  1886  0005BC  D01D               	goto	l2844
  1887                           
  1888                           ; BSR set to: 1
  1889                           ;main.c: 563: i2c_master_send(1, 6, msgbuffer, 0x9E);
  1890  0005BE  0100               	movlb	0	; () banked
  1891  0005C0  6FAA               	movwf	??_main& (0+255),b
  1892  0005C2  0E06               	movlw	6
  1893  0005C4  0100               	movlb	0	; () banked
  1894  0005C6  0100               	movlb	0	; () banked
  1895  0005C8  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1896  0005CA  0100               	movlb	0	; () banked
  1897  0005CC  51AA               	movf	??_main& (0+255),w,b
  1898  0005CE  0101               	movlb	1	; () banked
  1899  0005D0  0E01               	movlw	high main@msgbuffer
  1900  0005D2  0100               	movlb	0	; () banked
  1901  0005D4  0100               	movlb	0	; () banked
  1902  0005D6  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1903  0005D8  0101               	movlb	1	; () banked
  1904  0005DA  0E9C               	movlw	low main@msgbuffer
  1905  0005DC  0100               	movlb	0	; () banked
  1906  0005DE  0100               	movlb	0	; () banked
  1907  0005E0  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1908  0005E2  0100               	movlb	0	; () banked
  1909  0005E4  6FAB               	movwf	(??_main+1)& (0+255),b
  1910  0005E6  0E9E               	movlw	158
  1911  0005E8  0100               	movlb	0	; () banked
  1912  0005EA  0100               	movlb	0	; () banked
  1913  0005EC  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1914  0005EE  0100               	movlb	0	; () banked
  1915  0005F0  51AB               	movf	(??_main+1)& (0+255),w,b
  1916  0005F2  0E01               	movlw	1
  1917  0005F4  EC9A  F005         	call	_i2c_master_send
  1918  0005F8                     l2844:
  1919                           
  1920                           ;main.c: 564: }
  1921                           ;main.c: 566: LATBbits.LATB2 = 0;
  1922  0005F8  948A               	bcf	3978,2,c	;volatile
  1923                           
  1924                           ;main.c: 568: break;
  1925  0005FA  D5E2               	goto	l2714
  1926  0005FC                     l2848:
  1927  0005FC  0101               	movlb	1	; () banked
  1928  0005FE  0101               	movlb	1	; () banked
  1929  000600  51A8               	movf	main@msgtype& (0+255),w,b
  1930                           
  1931                           ; Switch size 1, requested type "space"
  1932                           ; Number of cases is 3, Range of values is 11 to 31
  1933                           ; switch strategies available:
  1934                           ; Name         Instructions Cycles
  1935                           ; simple_byte           10     6 (average)
  1936                           ;	Chosen strategy is simple_byte
  1937  000602  0A0B               	xorlw	11	; case 11
  1938  000604  B4D8               	btfsc	status,2,c
  1939  000606  D746               	goto	l161
  1940  000608  0A15               	xorlw	21	; case 30
  1941  00060A  B4D8               	btfsc	status,2,c
  1942  00060C  D772               	goto	l2808
  1943  00060E  0A01               	xorlw	1	; case 31
  1944  000610  B4D8               	btfsc	status,2,c
  1945  000612  D76F               	goto	l2808
  1946  000614  D5D5               	goto	l2714
  1947  000616                     __end_of_main:
  1948                           	opt stack 0
  1949                           tblptru	equ	0xFF8
  1950                           tblptrh	equ	0xFF7
  1951                           tblptrl	equ	0xFF6
  1952                           tablat	equ	0xFF5
  1953                           intcon2	equ	0xFF1
  1954                           postinc0	equ	0xFEE
  1955                           wreg	equ	0xFE8
  1956                           postinc1	equ	0xFE6
  1957                           postdec1	equ	0xFE5
  1958                           fsr1l	equ	0xFE1
  1959                           indf2	equ	0xFDF
  1960                           postinc2	equ	0xFDE
  1961                           status	equ	0xFD8
  1962                           
  1963 ;; *************** function _uart_trans *****************
  1964 ;; Defined at:
  1965 ;;		line 61 in file "../src/my_uart.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  length          1    wreg     unsigned char 
  1968 ;;  data            2   45[BANK0 ] PTR unsigned char 
  1969 ;;		 -> i2c_slave_int_handler@motorcomm(2), main@msgbuffer(11), 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  length          1   49[BANK0 ] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;		None               void
  1974 ;; Registers used:
  1975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1981 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1982 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1983 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1984 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1985 ;;Total ram usage:        5 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:   11
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;;		_i2c_slave_int_handler
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text1
  1997  00113A                     __ptext1:
  1998                           	opt stack 0
  1999  00113A                     _uart_trans:
  2000                           	opt stack 19
  2001                           
  2002                           ; BSR set to: 1
  2003                           ;incstack = 0
  2004                           ;uart_trans@length stored from wreg
  2005  00113A  CFE8 F091          	movff	wreg,uart_trans@length
  2006                           
  2007                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  2008  00113E  EE20 F00D          	lfsr	2,13
  2009  001142  503F               	movf	_uc_ptr,w,c
  2010  001144  26D9               	addwf	fsr2l,f,c
  2011  001146  5040               	movf	_uc_ptr+1,w,c
  2012  001148  22DA               	addwfc	fsr2h,f,c
  2013  00114A  0E00               	movlw	0
  2014  00114C  6EDF               	movwf	indf2,c
  2015  00114E  D035               	goto	l2998
  2016  001150                     l2994:
  2017                           
  2018                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  2019  001150  EE20 F00D          	lfsr	2,13
  2020  001154  503F               	movf	_uc_ptr,w,c
  2021  001156  26D9               	addwf	fsr2l,f,c
  2022  001158  5040               	movf	_uc_ptr+1,w,c
  2023  00115A  22DA               	addwfc	fsr2h,f,c
  2024  00115C  50DF               	movf	indf2,w,c
  2025  00115E  0100               	movlb	0	; () banked
  2026  001160  6F8F               	movwf	??_uart_trans& (0+255),b
  2027  001162  0100               	movlb	0	; () banked
  2028  001164  518F               	movf	??_uart_trans& (0+255),w,b
  2029  001166  0D01               	mullw	1
  2030  001168  50F3               	movf	prodl,w,c
  2031  00116A  0100               	movlb	0	; () banked
  2032  00116C  0100               	movlb	0	; () banked
  2033  00116E  258D               	addwf	uart_trans@data& (0+255),w,b
  2034  001170  6ED9               	movwf	fsr2l,c
  2035  001172  50F4               	movf	prodh,w,c
  2036  001174  0100               	movlb	0	; () banked
  2037  001176  0100               	movlb	0	; () banked
  2038  001178  218E               	addwfc	(uart_trans@data+1)& (0+255),w,b
  2039  00117A  6EDA               	movwf	fsr2h,c
  2040  00117C  EE10 F00D          	lfsr	1,13
  2041  001180  503F               	movf	_uc_ptr,w,c
  2042  001182  26E1               	addwf	fsr1l,f,c
  2043  001184  5040               	movf	_uc_ptr+1,w,c
  2044  001186  22E2               	addwfc	fsr1h,f,c
  2045  001188  50E7               	movf	indf1,w,c
  2046  00118A  0100               	movlb	0	; () banked
  2047  00118C  6F90               	movwf	(??_uart_trans+1)& (0+255),b
  2048  00118E  0100               	movlb	0	; () banked
  2049  001190  5190               	movf	(??_uart_trans+1)& (0+255),w,b
  2050  001192  0D01               	mullw	1
  2051  001194  0E07               	movlw	7
  2052  001196  26F3               	addwf	prodl,f,c
  2053  001198  0E00               	movlw	0
  2054  00119A  22F4               	addwfc	prodh,f,c
  2055  00119C  50F3               	movf	prodl,w,c
  2056  00119E  243F               	addwf	_uc_ptr,w,c
  2057  0011A0  6EE1               	movwf	fsr1l,c
  2058  0011A2  50F4               	movf	prodh,w,c
  2059  0011A4  2040               	addwfc	_uc_ptr+1,w,c
  2060  0011A6  6EE2               	movwf	fsr1h,c
  2061  0011A8  CFDF FFE7          	movff	indf2,indf1
  2062                           
  2063                           ; BSR set to: 0
  2064  0011AC  EE20 F00D          	lfsr	2,13
  2065  0011B0  503F               	movf	_uc_ptr,w,c
  2066  0011B2  26D9               	addwf	fsr2l,f,c
  2067  0011B4  5040               	movf	_uc_ptr+1,w,c
  2068  0011B6  22DA               	addwfc	fsr2h,f,c
  2069  0011B8  2ADF               	incf	indf2,f,c
  2070  0011BA                     l2998:
  2071  0011BA  EE20 F00D          	lfsr	2,13
  2072  0011BE  503F               	movf	_uc_ptr,w,c
  2073  0011C0  26D9               	addwf	fsr2l,f,c
  2074  0011C2  5040               	movf	_uc_ptr+1,w,c
  2075  0011C4  22DA               	addwfc	fsr2h,f,c
  2076  0011C6  50DF               	movf	indf2,w,c
  2077  0011C8  0100               	movlb	0	; () banked
  2078  0011CA  6F8F               	movwf	??_uart_trans& (0+255),b
  2079  0011CC  0100               	movlb	0	; () banked
  2080  0011CE  0100               	movlb	0	; () banked
  2081  0011D0  5191               	movf	uart_trans@length& (0+255),w,b
  2082  0011D2  0100               	movlb	0	; () banked
  2083  0011D4  5D8F               	subwf	??_uart_trans& (0+255),w,b
  2084  0011D6  A0D8               	btfss	status,0,c
  2085  0011D8  D7BB               	goto	l2994
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;my_uart.c: 67: }
  2089                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  2090                           
  2091                           ; BSR set to: 0
  2092  0011DA  EE20 F00E          	lfsr	2,14
  2093  0011DE  503F               	movf	_uc_ptr,w,c
  2094  0011E0  26D9               	addwf	fsr2l,f,c
  2095  0011E2  5040               	movf	_uc_ptr+1,w,c
  2096  0011E4  22DA               	addwfc	fsr2h,f,c
  2097  0011E6  0E00               	movlw	0
  2098  0011E8  6EDF               	movwf	indf2,c
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  2102  0011EA  889D               	bsf	3997,4,c	;volatile
  2103                           
  2104                           ; BSR set to: 0
  2105  0011EC  0012               	return	
  2106  0011EE                     __end_of_uart_trans:
  2107                           	opt stack 0
  2108                           tblptru	equ	0xFF8
  2109                           tblptrh	equ	0xFF7
  2110                           tblptrl	equ	0xFF6
  2111                           tablat	equ	0xFF5
  2112                           prodh	equ	0xFF4
  2113                           prodl	equ	0xFF3
  2114                           intcon2	equ	0xFF1
  2115                           postinc0	equ	0xFEE
  2116                           wreg	equ	0xFE8
  2117                           indf1	equ	0xFE7
  2118                           postinc1	equ	0xFE6
  2119                           postdec1	equ	0xFE5
  2120                           fsr1h	equ	0xFE2
  2121                           fsr1l	equ	0xFE1
  2122                           indf2	equ	0xFDF
  2123                           postinc2	equ	0xFDE
  2124                           fsr2h	equ	0xFDA
  2125                           fsr2l	equ	0xFD9
  2126                           status	equ	0xFD8
  2127                           
  2128 ;; *************** function _timer0_lthread *****************
  2129 ;; Defined at:
  2130 ;;		line 9 in file "../src/timer0_thread.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  tptr            2   45[BANK0 ] PTR struct __timer0_thre
  2133 ;;		 -> main@t0thread_data(2), 
  2134 ;;  msgtype         2   47[BANK0 ] int 
  2135 ;;  length          2   49[BANK0 ] int 
  2136 ;;  msgbuffer       2   51[BANK0 ] PTR unsigned char 
  2137 ;;		 -> main@msgbuffer(11), 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  msgval          2   53[BANK0 ] PTR unsigned int 
  2140 ;;		 -> main@msgbuffer(11), 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  2   45[BANK0 ] int 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2150 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2151 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2153 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2154 ;;Total ram usage:       10 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:   11
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text2
  2165  001C12                     __ptext2:
  2166                           	opt stack 0
  2167  001C12                     _timer0_lthread:
  2168                           	opt stack 19
  2169                           
  2170                           ;timer0_thread.c: 10: unsigned int *msgval;
  2171                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;incstack = 0
  2175  001C12  0100               	movlb	0	; () banked
  2176  001C14  0100               	movlb	0	; () banked
  2177  001C16  C094  F096         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2178  001C1A  0100               	movlb	0	; () banked
  2179  001C1C  0100               	movlb	0	; () banked
  2180  001C1E  C093  F095         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2181                           
  2182                           ; BSR set to: 0
  2183  001C22  0012               	return	
  2184  001C24                     __end_of_timer0_lthread:
  2185                           	opt stack 0
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           prodh	equ	0xFF4
  2191                           prodl	equ	0xFF3
  2192                           intcon2	equ	0xFF1
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           indf1	equ	0xFE7
  2196                           postinc1	equ	0xFE6
  2197                           postdec1	equ	0xFE5
  2198                           fsr1h	equ	0xFE2
  2199                           fsr1l	equ	0xFE1
  2200                           indf2	equ	0xFDF
  2201                           postinc2	equ	0xFDE
  2202                           fsr2h	equ	0xFDA
  2203                           fsr2l	equ	0xFD9
  2204                           status	equ	0xFD8
  2205                           
  2206 ;; *************** function _init_uart_recv *****************
  2207 ;; Defined at:
  2208 ;;		line 54 in file "../src/my_uart.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  uc              2   45[BANK0 ] PTR struct __uart_comm
  2211 ;;		 -> main@uc(15), 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;		None
  2214 ;; Return value:  Size  Location     Type
  2215 ;;		None               void
  2216 ;; Registers used:
  2217 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2223 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2226 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2227 ;;Total ram usage:        2 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:   11
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           	psect	text3
  2238  001BA8                     __ptext3:
  2239                           	opt stack 0
  2240  001BA8                     _init_uart_recv:
  2241                           	opt stack 19
  2242                           
  2243                           ;my_uart.c: 57: uc_ptr = uc;
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;incstack = 0
  2247  001BA8  0100               	movlb	0	; () banked
  2248  001BAA  C08E  F040         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2249  001BAE  0100               	movlb	0	; () banked
  2250  001BB0  C08D  F03F         	movff	init_uart_recv@uc,_uc_ptr
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;my_uart.c: 58: uc_ptr->buflen = 0;
  2254  001BB4  EE20 F006          	lfsr	2,6
  2255  001BB8  503F               	movf	_uc_ptr,w,c
  2256  001BBA  26D9               	addwf	fsr2l,f,c
  2257  001BBC  5040               	movf	_uc_ptr+1,w,c
  2258  001BBE  22DA               	addwfc	fsr2h,f,c
  2259  001BC0  0E00               	movlw	0
  2260  001BC2  6EDF               	movwf	indf2,c
  2261                           
  2262                           ; BSR set to: 0
  2263  001BC4  0012               	return	
  2264  001BC6                     __end_of_init_uart_recv:
  2265                           	opt stack 0
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           prodh	equ	0xFF4
  2271                           prodl	equ	0xFF3
  2272                           intcon2	equ	0xFF1
  2273                           postinc0	equ	0xFEE
  2274                           wreg	equ	0xFE8
  2275                           indf1	equ	0xFE7
  2276                           postinc1	equ	0xFE6
  2277                           postdec1	equ	0xFE5
  2278                           fsr1h	equ	0xFE2
  2279                           fsr1l	equ	0xFE1
  2280                           indf2	equ	0xFDF
  2281                           postinc2	equ	0xFDE
  2282                           fsr2h	equ	0xFDA
  2283                           fsr2l	equ	0xFD9
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _init_timer1_lthread *****************
  2287 ;; Defined at:
  2288 ;;		line 6 in file "../src/timer1_thread.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  tptr            2   45[BANK0 ] PTR struct __timer1_thre
  2291 ;;		 -> main@t1thread_data(2), 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;		None
  2294 ;; Return value:  Size  Location     Type
  2295 ;;		None               void
  2296 ;; Registers used:
  2297 ;;		wreg, fsr2l, fsr2h
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2303 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2307 ;;Total ram usage:        2 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:   11
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_main
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text4
  2318  001C24                     __ptext4:
  2319                           	opt stack 0
  2320  001C24                     _init_timer1_lthread:
  2321                           	opt stack 19
  2322                           
  2323                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;incstack = 0
  2327  001C24  C08D  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2328  001C28  C08E  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2329  001C2C  0E00               	movlw	0
  2330  001C2E  6EDE               	movwf	postinc2,c
  2331  001C30  0E00               	movlw	0
  2332  001C32  6EDD               	movwf	postdec2,c
  2333  001C34  0012               	return	
  2334  001C36                     __end_of_init_timer1_lthread:
  2335                           	opt stack 0
  2336                           tblptru	equ	0xFF8
  2337                           tblptrh	equ	0xFF7
  2338                           tblptrl	equ	0xFF6
  2339                           tablat	equ	0xFF5
  2340                           prodh	equ	0xFF4
  2341                           prodl	equ	0xFF3
  2342                           intcon2	equ	0xFF1
  2343                           postinc0	equ	0xFEE
  2344                           wreg	equ	0xFE8
  2345                           indf1	equ	0xFE7
  2346                           postinc1	equ	0xFE6
  2347                           postdec1	equ	0xFE5
  2348                           fsr1h	equ	0xFE2
  2349                           fsr1l	equ	0xFE1
  2350                           indf2	equ	0xFDF
  2351                           postinc2	equ	0xFDE
  2352                           postdec2	equ	0xFDD
  2353                           fsr2h	equ	0xFDA
  2354                           fsr2l	equ	0xFD9
  2355                           status	equ	0xFD8
  2356                           
  2357 ;; *************** function _init_queues *****************
  2358 ;; Defined at:
  2359 ;;		line 194 in file "../src/messages.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;		None               void
  2366 ;; Registers used:
  2367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2376 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2377 ;;Total ram usage:        1 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:   12
  2380 ;; This function calls:
  2381 ;;		_init_queue
  2382 ;; This function is called by:
  2383 ;;		_main
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text5
  2388  00159E                     __ptext5:
  2389                           	opt stack 0
  2390  00159E                     _init_queues:
  2391                           	opt stack 18
  2392                           
  2393                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2394                           
  2395                           ;incstack = 0
  2396  00159E  0100               	movlb	0	; () banked
  2397  0015A0  6F91               	movwf	??_init_queues& (0+255),b
  2398  0015A2  0E00               	movlw	0
  2399  0015A4  6E3D               	movwf	_MQ_Main_Willing_to_block,c
  2400  0015A6  0100               	movlb	0	; () banked
  2401  0015A8  5191               	movf	??_init_queues& (0+255),w,b
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2405  0015AA  0101               	movlb	1	; () banked
  2406  0015AC  0E01               	movlw	high _ToMainLow_MQ
  2407  0015AE  0100               	movlb	0	; () banked
  2408  0015B0  0100               	movlb	0	; () banked
  2409  0015B2  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2410  0015B4  0101               	movlb	1	; () banked
  2411  0015B6  0E43               	movlw	low _ToMainLow_MQ
  2412  0015B8  0100               	movlb	0	; () banked
  2413  0015BA  0100               	movlb	0	; () banked
  2414  0015BC  6F8D               	movwf	init_queue@qptr& (0+255),b
  2415  0015BE  EC92  F00A         	call	_init_queue	;wreg free
  2416                           
  2417                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2418  0015C2  0101               	movlb	1	; () banked
  2419  0015C4  0E01               	movlw	high _ToMainHigh_MQ
  2420  0015C6  0100               	movlb	0	; () banked
  2421  0015C8  0100               	movlb	0	; () banked
  2422  0015CA  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2423  0015CC  0101               	movlb	1	; () banked
  2424  0015CE  0E00               	movlw	low _ToMainHigh_MQ
  2425  0015D0  0100               	movlb	0	; () banked
  2426  0015D2  0100               	movlb	0	; () banked
  2427  0015D4  6F8D               	movwf	init_queue@qptr& (0+255),b
  2428  0015D6  EC92  F00A         	call	_init_queue	;wreg free
  2429                           
  2430                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2431  0015DA  0102               	movlb	2	; () banked
  2432  0015DC  0E02               	movlw	high _FromMainLow_MQ
  2433  0015DE  0100               	movlb	0	; () banked
  2434  0015E0  0100               	movlb	0	; () banked
  2435  0015E2  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2436  0015E4  0102               	movlb	2	; () banked
  2437  0015E6  0E43               	movlw	low _FromMainLow_MQ
  2438  0015E8  0100               	movlb	0	; () banked
  2439  0015EA  0100               	movlb	0	; () banked
  2440  0015EC  6F8D               	movwf	init_queue@qptr& (0+255),b
  2441  0015EE  EC92  F00A         	call	_init_queue	;wreg free
  2442                           
  2443                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2444  0015F2  0102               	movlb	2	; () banked
  2445  0015F4  0E02               	movlw	high _FromMainHigh_MQ
  2446  0015F6  0100               	movlb	0	; () banked
  2447  0015F8  0100               	movlb	0	; () banked
  2448  0015FA  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2449  0015FC  0102               	movlb	2	; () banked
  2450  0015FE  0E00               	movlw	low _FromMainHigh_MQ
  2451  001600  0100               	movlb	0	; () banked
  2452  001602  0100               	movlb	0	; () banked
  2453  001604  6F8D               	movwf	init_queue@qptr& (0+255),b
  2454  001606  EC92  F00A         	call	_init_queue	;wreg free
  2455  00160A  0012               	return	
  2456  00160C                     __end_of_init_queues:
  2457                           	opt stack 0
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           prodh	equ	0xFF4
  2463                           prodl	equ	0xFF3
  2464                           intcon2	equ	0xFF1
  2465                           postinc0	equ	0xFEE
  2466                           wreg	equ	0xFE8
  2467                           indf1	equ	0xFE7
  2468                           postinc1	equ	0xFE6
  2469                           postdec1	equ	0xFE5
  2470                           fsr1h	equ	0xFE2
  2471                           fsr1l	equ	0xFE1
  2472                           indf2	equ	0xFDF
  2473                           postinc2	equ	0xFDE
  2474                           postdec2	equ	0xFDD
  2475                           fsr2h	equ	0xFDA
  2476                           fsr2l	equ	0xFD9
  2477                           status	equ	0xFD8
  2478                           
  2479 ;; *************** function _init_queue *****************
  2480 ;; Defined at:
  2481 ;;		line 14 in file "../src/messages.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  2484 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  i               1   48[BANK0 ] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2500 ;;Total ram usage:        4 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:   11
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_init_queues
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text6
  2511  001524                     __ptext6:
  2512                           	opt stack 0
  2513  001524                     _init_queue:
  2514                           	opt stack 18
  2515                           
  2516                           ;messages.c: 15: unsigned char i;
  2517                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2518                           
  2519                           ;incstack = 0
  2520  001524  0100               	movlb	0	; () banked
  2521  001526  EE20 F041          	lfsr	2,65
  2522  00152A  0100               	movlb	0	; () banked
  2523  00152C  518D               	movf	init_queue@qptr& (0+255),w,b
  2524  00152E  26D9               	addwf	fsr2l,f,c
  2525  001530  0100               	movlb	0	; () banked
  2526  001532  518E               	movf	(init_queue@qptr+1)& (0+255),w,b
  2527  001534  22DA               	addwfc	fsr2h,f,c
  2528  001536  0E00               	movlw	0
  2529  001538  6EDF               	movwf	indf2,c
  2530                           
  2531                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2532  00153A  0100               	movlb	0	; () banked
  2533  00153C  EE20 F042          	lfsr	2,66
  2534  001540  0100               	movlb	0	; () banked
  2535  001542  518D               	movf	init_queue@qptr& (0+255),w,b
  2536  001544  26D9               	addwf	fsr2l,f,c
  2537  001546  0100               	movlb	0	; () banked
  2538  001548  518E               	movf	(init_queue@qptr+1)& (0+255),w,b
  2539  00154A  22DA               	addwfc	fsr2h,f,c
  2540  00154C  0E00               	movlw	0
  2541  00154E  6EDF               	movwf	indf2,c
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2545  001550  0100               	movlb	0	; () banked
  2546  001552  6F8F               	movwf	??_init_queue& (0+255),b
  2547  001554  0E00               	movlw	0
  2548  001556  0100               	movlb	0	; () banked
  2549  001558  0100               	movlb	0	; () banked
  2550  00155A  6F90               	movwf	init_queue@i& (0+255),b
  2551  00155C  0100               	movlb	0	; () banked
  2552  00155E  518F               	movf	??_init_queue& (0+255),w,b
  2553                           
  2554                           ; BSR set to: 0
  2555  001560  0E04               	movlw	4
  2556  001562  0100               	movlb	0	; () banked
  2557  001564  0100               	movlb	0	; () banked
  2558  001566  6590               	cpfsgt	init_queue@i& (0+255),b
  2559  001568  D001               	goto	l3030
  2560  00156A  0012               	return	
  2561  00156C                     l3030:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;messages.c: 20: qptr->queue[i].full = 0;
  2565  00156C  0100               	movlb	0	; () banked
  2566  00156E  0100               	movlb	0	; () banked
  2567  001570  5190               	movf	init_queue@i& (0+255),w,b
  2568  001572  0D0D               	mullw	13
  2569  001574  50F3               	movf	prodl,w,c
  2570  001576  0100               	movlb	0	; () banked
  2571  001578  0100               	movlb	0	; () banked
  2572  00157A  258D               	addwf	init_queue@qptr& (0+255),w,b
  2573  00157C  6ED9               	movwf	fsr2l,c
  2574  00157E  50F4               	movf	prodh,w,c
  2575  001580  0100               	movlb	0	; () banked
  2576  001582  0100               	movlb	0	; () banked
  2577  001584  218E               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2578  001586  6EDA               	movwf	fsr2h,c
  2579  001588  0E00               	movlw	0
  2580  00158A  6EDF               	movwf	indf2,c
  2581                           
  2582                           ; BSR set to: 0
  2583  00158C  0100               	movlb	0	; () banked
  2584  00158E  0100               	movlb	0	; () banked
  2585  001590  2B90               	incf	init_queue@i& (0+255),f,b
  2586                           
  2587                           ; BSR set to: 0
  2588  001592  0E04               	movlw	4
  2589  001594  0100               	movlb	0	; () banked
  2590  001596  0100               	movlb	0	; () banked
  2591  001598  6590               	cpfsgt	init_queue@i& (0+255),b
  2592  00159A  D7E8               	goto	l3030
  2593  00159C  0012               	return	
  2594  00159E                     __end_of_init_queue:
  2595                           	opt stack 0
  2596                           tblptru	equ	0xFF8
  2597                           tblptrh	equ	0xFF7
  2598                           tblptrl	equ	0xFF6
  2599                           tablat	equ	0xFF5
  2600                           prodh	equ	0xFF4
  2601                           prodl	equ	0xFF3
  2602                           intcon2	equ	0xFF1
  2603                           postinc0	equ	0xFEE
  2604                           wreg	equ	0xFE8
  2605                           indf1	equ	0xFE7
  2606                           postinc1	equ	0xFE6
  2607                           postdec1	equ	0xFE5
  2608                           fsr1h	equ	0xFE2
  2609                           fsr1l	equ	0xFE1
  2610                           indf2	equ	0xFDF
  2611                           postinc2	equ	0xFDE
  2612                           postdec2	equ	0xFDD
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _init_i2c *****************
  2618 ;; Defined at:
  2619 ;;		line 441 in file "../src/my_i2c.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  ic              2   45[BANK0 ] PTR struct __i2c_comm
  2622 ;;		 -> main@ic(29), 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;		None               void
  2627 ;; Registers used:
  2628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2634 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2637 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2638 ;;Total ram usage:        2 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:   11
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_main
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text7
  2649  00160C                     __ptext7:
  2650                           	opt stack 0
  2651  00160C                     _init_i2c:
  2652                           	opt stack 19
  2653                           
  2654                           ;my_i2c.c: 442: ic_ptr = ic;
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;incstack = 0
  2658  00160C  0100               	movlb	0	; () banked
  2659  00160E  0100               	movlb	0	; () banked
  2660  001610  C08E  F0C9         	movff	init_i2c@ic+1,_ic_ptr+1
  2661  001614  0100               	movlb	0	; () banked
  2662  001616  0100               	movlb	0	; () banked
  2663  001618  C08D  F0C8         	movff	init_i2c@ic,_ic_ptr
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;my_i2c.c: 443: ic_ptr->buflen = 0;
  2667  00161C  0100               	movlb	0	; () banked
  2668  00161E  EE20 F00A          	lfsr	2,10
  2669  001622  0100               	movlb	0	; () banked
  2670  001624  51C8               	movf	_ic_ptr& (0+255),w,b
  2671  001626  26D9               	addwf	fsr2l,f,c
  2672  001628  0100               	movlb	0	; () banked
  2673  00162A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2674  00162C  22DA               	addwfc	fsr2h,f,c
  2675  00162E  0E00               	movlw	0
  2676  001630  6EDF               	movwf	indf2,c
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;my_i2c.c: 444: ic_ptr->event_count = 0;
  2680  001632  0100               	movlb	0	; () banked
  2681  001634  EE20 F00C          	lfsr	2,12
  2682  001638  0100               	movlb	0	; () banked
  2683  00163A  51C8               	movf	_ic_ptr& (0+255),w,b
  2684  00163C  26D9               	addwf	fsr2l,f,c
  2685  00163E  0100               	movlb	0	; () banked
  2686  001640  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2687  001642  22DA               	addwfc	fsr2h,f,c
  2688  001644  0E00               	movlw	0
  2689  001646  6EDF               	movwf	indf2,c
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;my_i2c.c: 445: ic_ptr->status = 0x5;
  2693  001648  0100               	movlb	0	; () banked
  2694  00164A  EE20 F00D          	lfsr	2,13
  2695  00164E  0100               	movlb	0	; () banked
  2696  001650  51C8               	movf	_ic_ptr& (0+255),w,b
  2697  001652  26D9               	addwf	fsr2l,f,c
  2698  001654  0100               	movlb	0	; () banked
  2699  001656  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2700  001658  22DA               	addwfc	fsr2h,f,c
  2701  00165A  0E05               	movlw	5
  2702  00165C  6EDF               	movwf	indf2,c
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;my_i2c.c: 446: ic_ptr->error_count = 0;
  2706  00165E  0100               	movlb	0	; () banked
  2707  001660  EE20 F00F          	lfsr	2,15
  2708  001664  0100               	movlb	0	; () banked
  2709  001666  51C8               	movf	_ic_ptr& (0+255),w,b
  2710  001668  26D9               	addwf	fsr2l,f,c
  2711  00166A  0100               	movlb	0	; () banked
  2712  00166C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2713  00166E  22DA               	addwfc	fsr2h,f,c
  2714  001670  0E00               	movlw	0
  2715  001672  6EDF               	movwf	indf2,c
  2716                           
  2717                           ; BSR set to: 0
  2718  001674  0012               	return	
  2719  001676                     __end_of_init_i2c:
  2720                           	opt stack 0
  2721                           tblptru	equ	0xFF8
  2722                           tblptrh	equ	0xFF7
  2723                           tblptrl	equ	0xFF6
  2724                           tablat	equ	0xFF5
  2725                           prodh	equ	0xFF4
  2726                           prodl	equ	0xFF3
  2727                           intcon2	equ	0xFF1
  2728                           postinc0	equ	0xFEE
  2729                           wreg	equ	0xFE8
  2730                           indf1	equ	0xFE7
  2731                           postinc1	equ	0xFE6
  2732                           postdec1	equ	0xFE5
  2733                           fsr1h	equ	0xFE2
  2734                           fsr1l	equ	0xFE1
  2735                           indf2	equ	0xFDF
  2736                           postinc2	equ	0xFDE
  2737                           postdec2	equ	0xFDD
  2738                           fsr2h	equ	0xFDA
  2739                           fsr2l	equ	0xFD9
  2740                           status	equ	0xFD8
  2741                           
  2742 ;; *************** function _i2c_master_send *****************
  2743 ;; Defined at:
  2744 ;;		line 44 in file "../src/my_i2c.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  sendlength      1    wreg     unsigned char 
  2747 ;;  recvlength      1   45[BANK0 ] unsigned char 
  2748 ;;  msg             2   46[BANK0 ] PTR unsigned char 
  2749 ;;		 -> main@sensorMsg(1), main@correct(6), main@stop(6), main@msgbuffer(11), 
  2750 ;;  slave_addr      1   48[BANK0 ] unsigned char 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  sendlength      1   51[BANK0 ] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      unsigned char 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2762 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2764 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2765 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2766 ;;Total ram usage:        7 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:   11
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		_main
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text8
  2777  000B34                     __ptext8:
  2778                           	opt stack 0
  2779  000B34                     _i2c_master_send:
  2780                           	opt stack 19
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;incstack = 0
  2784                           ;i2c_master_send@sendlength stored from wreg
  2785  000B34  CFE8 F093          	movff	wreg,i2c_master_send@sendlength
  2786                           
  2787                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  2788  000B38  0100               	movlb	0	; () banked
  2789  000B3A  EE20 F01A          	lfsr	2,26
  2790  000B3E  0100               	movlb	0	; () banked
  2791  000B40  51C8               	movf	_ic_ptr& (0+255),w,b
  2792  000B42  26D9               	addwf	fsr2l,f,c
  2793  000B44  0100               	movlb	0	; () banked
  2794  000B46  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2795  000B48  22DA               	addwfc	fsr2h,f,c
  2796  000B4A  0E00               	movlw	0
  2797  000B4C  6EDF               	movwf	indf2,c
  2798  000B4E  D042               	goto	l3010
  2799  000B50                     l3006:
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2803  000B50  0100               	movlb	0	; () banked
  2804  000B52  EE20 F01A          	lfsr	2,26
  2805  000B56  0100               	movlb	0	; () banked
  2806  000B58  51C8               	movf	_ic_ptr& (0+255),w,b
  2807  000B5A  26D9               	addwf	fsr2l,f,c
  2808  000B5C  0100               	movlb	0	; () banked
  2809  000B5E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2810  000B60  22DA               	addwfc	fsr2h,f,c
  2811  000B62  50DF               	movf	indf2,w,c
  2812  000B64  0100               	movlb	0	; () banked
  2813  000B66  6F91               	movwf	??_i2c_master_send& (0+255),b
  2814  000B68  0100               	movlb	0	; () banked
  2815  000B6A  5191               	movf	??_i2c_master_send& (0+255),w,b
  2816  000B6C  0D01               	mullw	1
  2817  000B6E  50F3               	movf	prodl,w,c
  2818  000B70  0100               	movlb	0	; () banked
  2819  000B72  0100               	movlb	0	; () banked
  2820  000B74  258E               	addwf	i2c_master_send@msg& (0+255),w,b
  2821  000B76  6ED9               	movwf	fsr2l,c
  2822  000B78  50F4               	movf	prodh,w,c
  2823  000B7A  0100               	movlb	0	; () banked
  2824  000B7C  0100               	movlb	0	; () banked
  2825  000B7E  218F               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  2826  000B80  6EDA               	movwf	fsr2h,c
  2827  000B82  0100               	movlb	0	; () banked
  2828  000B84  EE10 F01A          	lfsr	1,26
  2829  000B88  0100               	movlb	0	; () banked
  2830  000B8A  51C8               	movf	_ic_ptr& (0+255),w,b
  2831  000B8C  26E1               	addwf	fsr1l,f,c
  2832  000B8E  0100               	movlb	0	; () banked
  2833  000B90  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2834  000B92  22E2               	addwfc	fsr1h,f,c
  2835  000B94  50E7               	movf	indf1,w,c
  2836  000B96  0100               	movlb	0	; () banked
  2837  000B98  6F92               	movwf	(??_i2c_master_send+1)& (0+255),b
  2838  000B9A  0100               	movlb	0	; () banked
  2839  000B9C  5192               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2840  000B9E  0D01               	mullw	1
  2841  000BA0  0E10               	movlw	16
  2842  000BA2  26F3               	addwf	prodl,f,c
  2843  000BA4  0E00               	movlw	0
  2844  000BA6  22F4               	addwfc	prodh,f,c
  2845  000BA8  50F3               	movf	prodl,w,c
  2846  000BAA  0100               	movlb	0	; () banked
  2847  000BAC  0100               	movlb	0	; () banked
  2848  000BAE  25C8               	addwf	_ic_ptr& (0+255),w,b
  2849  000BB0  6EE1               	movwf	fsr1l,c
  2850  000BB2  50F4               	movf	prodh,w,c
  2851  000BB4  0100               	movlb	0	; () banked
  2852  000BB6  0100               	movlb	0	; () banked
  2853  000BB8  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2854  000BBA  6EE2               	movwf	fsr1h,c
  2855  000BBC  CFDF FFE7          	movff	indf2,indf1
  2856                           
  2857                           ; BSR set to: 0
  2858  000BC0  0100               	movlb	0	; () banked
  2859  000BC2  EE20 F01A          	lfsr	2,26
  2860  000BC6  0100               	movlb	0	; () banked
  2861  000BC8  51C8               	movf	_ic_ptr& (0+255),w,b
  2862  000BCA  26D9               	addwf	fsr2l,f,c
  2863  000BCC  0100               	movlb	0	; () banked
  2864  000BCE  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2865  000BD0  22DA               	addwfc	fsr2h,f,c
  2866  000BD2  2ADF               	incf	indf2,f,c
  2867  000BD4                     l3010:
  2868                           
  2869                           ; BSR set to: 0
  2870  000BD4  0100               	movlb	0	; () banked
  2871  000BD6  EE20 F01A          	lfsr	2,26
  2872  000BDA  0100               	movlb	0	; () banked
  2873  000BDC  51C8               	movf	_ic_ptr& (0+255),w,b
  2874  000BDE  26D9               	addwf	fsr2l,f,c
  2875  000BE0  0100               	movlb	0	; () banked
  2876  000BE2  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2877  000BE4  22DA               	addwfc	fsr2h,f,c
  2878  000BE6  50DF               	movf	indf2,w,c
  2879  000BE8  0100               	movlb	0	; () banked
  2880  000BEA  6F91               	movwf	??_i2c_master_send& (0+255),b
  2881  000BEC  0100               	movlb	0	; () banked
  2882  000BEE  0100               	movlb	0	; () banked
  2883  000BF0  5193               	movf	i2c_master_send@sendlength& (0+255),w,b
  2884  000BF2  0100               	movlb	0	; () banked
  2885  000BF4  5D91               	subwf	??_i2c_master_send& (0+255),w,b
  2886  000BF6  A0D8               	btfss	status,0,c
  2887  000BF8  D7AB               	goto	l3006
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;my_i2c.c: 48: }
  2891                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  2892                           
  2893                           ; BSR set to: 0
  2894  000BFA  0100               	movlb	0	; () banked
  2895  000BFC  EE20 F01C          	lfsr	2,28
  2896  000C00  0100               	movlb	0	; () banked
  2897  000C02  51C8               	movf	_ic_ptr& (0+255),w,b
  2898  000C04  26D9               	addwf	fsr2l,f,c
  2899  000C06  0100               	movlb	0	; () banked
  2900  000C08  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2901  000C0A  22DA               	addwfc	fsr2h,f,c
  2902  000C0C  0100               	movlb	0	; () banked
  2903  000C0E  C090  FFDF         	movff	i2c_master_send@slave_addr,indf2
  2904                           
  2905                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  2906  000C12  0100               	movlb	0	; () banked
  2907  000C14  EE20 F01A          	lfsr	2,26
  2908  000C18  0100               	movlb	0	; () banked
  2909  000C1A  51C8               	movf	_ic_ptr& (0+255),w,b
  2910  000C1C  26D9               	addwf	fsr2l,f,c
  2911  000C1E  0100               	movlb	0	; () banked
  2912  000C20  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2913  000C22  22DA               	addwfc	fsr2h,f,c
  2914  000C24  0100               	movlb	0	; () banked
  2915  000C26  C093  FFDF         	movff	i2c_master_send@sendlength,indf2
  2916                           
  2917                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  2918  000C2A  0100               	movlb	0	; () banked
  2919  000C2C  EE20 F00A          	lfsr	2,10
  2920  000C30  0100               	movlb	0	; () banked
  2921  000C32  51C8               	movf	_ic_ptr& (0+255),w,b
  2922  000C34  26D9               	addwf	fsr2l,f,c
  2923  000C36  0100               	movlb	0	; () banked
  2924  000C38  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2925  000C3A  22DA               	addwfc	fsr2h,f,c
  2926  000C3C  0100               	movlb	0	; () banked
  2927  000C3E  C08D  FFDF         	movff	i2c_master_send@recvlength,indf2
  2928                           
  2929                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  2930  000C42  0100               	movlb	0	; () banked
  2931  000C44  EE20 F00D          	lfsr	2,13
  2932  000C48  0100               	movlb	0	; () banked
  2933  000C4A  51C8               	movf	_ic_ptr& (0+255),w,b
  2934  000C4C  26D9               	addwf	fsr2l,f,c
  2935  000C4E  0100               	movlb	0	; () banked
  2936  000C50  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2937  000C52  22DA               	addwfc	fsr2h,f,c
  2938  000C54  0E0A               	movlw	10
  2939  000C56  6EDF               	movwf	indf2,c
  2940                           
  2941                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  2942  000C58  0100               	movlb	0	; () banked
  2943  000C5A  EE20 F01B          	lfsr	2,27
  2944  000C5E  0100               	movlb	0	; () banked
  2945  000C60  51C8               	movf	_ic_ptr& (0+255),w,b
  2946  000C62  26D9               	addwf	fsr2l,f,c
  2947  000C64  0100               	movlb	0	; () banked
  2948  000C66  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  2949  000C68  22DA               	addwfc	fsr2h,f,c
  2950  000C6A  0E00               	movlw	0
  2951  000C6C  6EDF               	movwf	indf2,c
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  2955  000C6E  80C5               	bsf	4037,0,c	;volatile
  2956  000C70  0012               	return	
  2957  000C72                     __end_of_i2c_master_send:
  2958                           	opt stack 0
  2959                           tblptru	equ	0xFF8
  2960                           tblptrh	equ	0xFF7
  2961                           tblptrl	equ	0xFF6
  2962                           tablat	equ	0xFF5
  2963                           prodh	equ	0xFF4
  2964                           prodl	equ	0xFF3
  2965                           intcon2	equ	0xFF1
  2966                           postinc0	equ	0xFEE
  2967                           wreg	equ	0xFE8
  2968                           indf1	equ	0xFE7
  2969                           postinc1	equ	0xFE6
  2970                           postdec1	equ	0xFE5
  2971                           fsr1h	equ	0xFE2
  2972                           fsr1l	equ	0xFE1
  2973                           indf2	equ	0xFDF
  2974                           postinc2	equ	0xFDE
  2975                           postdec2	equ	0xFDD
  2976                           fsr2h	equ	0xFDA
  2977                           fsr2l	equ	0xFD9
  2978                           status	equ	0xFD8
  2979                           
  2980 ;; *************** function _i2c_configure_master *****************
  2981 ;; Defined at:
  2982 ;;		line 15 in file "../src/my_i2c.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;		None
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;		None               void
  2989 ;; Registers used:
  2990 ;;		wreg, status,2
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3000 ;;Total ram usage:        0 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:   11
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_main
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text9
  3011  001B68                     __ptext9:
  3012                           	opt stack 0
  3013  001B68                     _i2c_configure_master:
  3014                           	opt stack 19
  3015                           
  3016                           ;my_i2c.c: 18: SSPSTAT = 0x0;
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;incstack = 0
  3020  001B68  0E00               	movlw	0
  3021  001B6A  6EC7               	movwf	4039,c	;volatile
  3022                           
  3023                           ;my_i2c.c: 19: SSPCON1 = 0x0;
  3024  001B6C  0E00               	movlw	0
  3025  001B6E  6EC6               	movwf	4038,c	;volatile
  3026                           
  3027                           ;my_i2c.c: 20: SSPCON2 = 0x0;
  3028  001B70  0E00               	movlw	0
  3029  001B72  6EC5               	movwf	4037,c	;volatile
  3030                           
  3031                           ;my_i2c.c: 22: TRISCbits.TRISC3 = 1;
  3032  001B74  8694               	bsf	3988,3,c	;volatile
  3033                           
  3034                           ;my_i2c.c: 23: TRISCbits.TRISC4 = 1;
  3035  001B76  8894               	bsf	3988,4,c	;volatile
  3036                           
  3037                           ;my_i2c.c: 24: SSPADD = 29;
  3038  001B78  0E1D               	movlw	29
  3039  001B7A  6EC8               	movwf	4040,c	;volatile
  3040                           
  3041                           ;my_i2c.c: 27: SSPCON1bits.SSPM = 0x8;
  3042  001B7C  50C6               	movf	4038,w,c	;volatile
  3043  001B7E  0BF0               	andlw	-16
  3044  001B80  0908               	iorlw	8
  3045  001B82  6EC6               	movwf	4038,c	;volatile
  3046                           
  3047                           ;my_i2c.c: 28: SSPCON1bits.SSPEN = 1;
  3048  001B84  8AC6               	bsf	4038,5,c	;volatile
  3049  001B86  0012               	return	
  3050  001B88                     __end_of_i2c_configure_master:
  3051                           	opt stack 0
  3052                           tblptru	equ	0xFF8
  3053                           tblptrh	equ	0xFF7
  3054                           tblptrl	equ	0xFF6
  3055                           tablat	equ	0xFF5
  3056                           prodh	equ	0xFF4
  3057                           prodl	equ	0xFF3
  3058                           intcon2	equ	0xFF1
  3059                           postinc0	equ	0xFEE
  3060                           wreg	equ	0xFE8
  3061                           indf1	equ	0xFE7
  3062                           postinc1	equ	0xFE6
  3063                           postdec1	equ	0xFE5
  3064                           fsr1h	equ	0xFE2
  3065                           fsr1l	equ	0xFE1
  3066                           indf2	equ	0xFDF
  3067                           postinc2	equ	0xFDE
  3068                           postdec2	equ	0xFDD
  3069                           fsr2h	equ	0xFDA
  3070                           fsr2l	equ	0xFD9
  3071                           status	equ	0xFD8
  3072                           
  3073 ;; *************** function _enable_interrupts *****************
  3074 ;; Defined at:
  3075 ;;		line 15 in file "../src/interrupts.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;		None               void
  3082 ;; Registers used:
  3083 ;;		None
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3093 ;;Total ram usage:        0 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:   11
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_main
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text10
  3104  001C9A                     __ptext10:
  3105                           	opt stack 0
  3106  001C9A                     _enable_interrupts:
  3107                           	opt stack 19
  3108                           
  3109                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3110                           
  3111                           ;incstack = 0
  3112  001C9A  8ED0               	bsf	4048,7,c	;volatile
  3113                           
  3114                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3115  001C9C  8EF2               	bsf	intcon,7,c	;volatile
  3116                           
  3117                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3118  001C9E  8CF2               	bsf	intcon,6,c	;volatile
  3119  001CA0  0012               	return	
  3120  001CA2                     __end_of_enable_interrupts:
  3121                           	opt stack 0
  3122                           tblptru	equ	0xFF8
  3123                           tblptrh	equ	0xFF7
  3124                           tblptrl	equ	0xFF6
  3125                           tablat	equ	0xFF5
  3126                           prodh	equ	0xFF4
  3127                           prodl	equ	0xFF3
  3128                           intcon	equ	0xFF2
  3129                           intcon2	equ	0xFF1
  3130                           postinc0	equ	0xFEE
  3131                           wreg	equ	0xFE8
  3132                           indf1	equ	0xFE7
  3133                           postinc1	equ	0xFE6
  3134                           postdec1	equ	0xFE5
  3135                           fsr1h	equ	0xFE2
  3136                           fsr1l	equ	0xFE1
  3137                           indf2	equ	0xFDF
  3138                           postinc2	equ	0xFDE
  3139                           postdec2	equ	0xFDD
  3140                           fsr2h	equ	0xFDA
  3141                           fsr2l	equ	0xFD9
  3142                           status	equ	0xFD8
  3143                           
  3144 ;; *************** function _block_on_To_msgqueues *****************
  3145 ;; Defined at:
  3146 ;;		line 258 in file "../src/messages.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;		None               void
  3153 ;; Registers used:
  3154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;Total ram usage:        1 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:   14
  3167 ;; This function calls:
  3168 ;;		_Delay1KTCYx
  3169 ;;		_check_msg
  3170 ;;		_in_main
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text11
  3177  00142C                     __ptext11:
  3178                           	opt stack 0
  3179  00142C                     _block_on_To_msgqueues:
  3180                           	opt stack 16
  3181                           
  3182                           ;messages.c: 259: if (!in_main()) {
  3183                           
  3184                           ;incstack = 0
  3185  00142C  EC7A  F00C         	call	_in_main	;wreg free
  3186  001430  0100               	movlb	0	; () banked
  3187  001432  0100               	movlb	0	; () banked
  3188  001434  5192               	movf	(?_in_main+1)& (0+255),w,b
  3189  001436  0100               	movlb	0	; () banked
  3190  001438  1191               	iorwf	?_in_main& (0+255),w,b
  3191  00143A  B4D8               	btfsc	status,2,c
  3192  00143C  0012               	return	
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;messages.c: 261: }
  3196                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3197                           
  3198                           ; BSR set to: 0
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;messages.c: 260: return;
  3202  00143E  0100               	movlb	0	; () banked
  3203  001440  6F93               	movwf	??_block_on_To_msgqueues& (0+255),b
  3204  001442  0E01               	movlw	1
  3205  001444  6E3D               	movwf	_MQ_Main_Willing_to_block,c
  3206  001446  0100               	movlb	0	; () banked
  3207  001448  5193               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3208  00144A                     l2972:
  3209                           
  3210                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3211  00144A  0101               	movlb	1	; () banked
  3212  00144C  0E01               	movlw	high _ToMainHigh_MQ
  3213  00144E  0100               	movlb	0	; () banked
  3214  001450  0100               	movlb	0	; () banked
  3215  001452  6F8E               	movwf	(check_msg@qptr+1)& (0+255),b
  3216  001454  0101               	movlb	1	; () banked
  3217  001456  0E00               	movlw	low _ToMainHigh_MQ
  3218  001458  0100               	movlb	0	; () banked
  3219  00145A  0100               	movlb	0	; () banked
  3220  00145C  6F8D               	movwf	check_msg@qptr& (0+255),b
  3221  00145E  EC3B  F00D         	call	_check_msg	;wreg free
  3222  001462  0900               	iorlw	0
  3223  001464  B4D8               	btfsc	status,2,c
  3224  001466  D007               	goto	l2978
  3225                           
  3226                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3227  001468  0100               	movlb	0	; () banked
  3228  00146A  6F93               	movwf	??_block_on_To_msgqueues& (0+255),b
  3229  00146C  0E00               	movlw	0
  3230  00146E  6E3D               	movwf	_MQ_Main_Willing_to_block,c
  3231  001470  0100               	movlb	0	; () banked
  3232  001472  5193               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3233  001474  0012               	return	
  3234  001476                     l2978:
  3235                           
  3236                           ;messages.c: 271: }
  3237                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3238  001476  0101               	movlb	1	; () banked
  3239  001478  0E01               	movlw	high _ToMainLow_MQ
  3240  00147A  0100               	movlb	0	; () banked
  3241  00147C  0100               	movlb	0	; () banked
  3242  00147E  6F8E               	movwf	(check_msg@qptr+1)& (0+255),b
  3243  001480  0101               	movlb	1	; () banked
  3244  001482  0E43               	movlw	low _ToMainLow_MQ
  3245  001484  0100               	movlb	0	; () banked
  3246  001486  0100               	movlb	0	; () banked
  3247  001488  6F8D               	movwf	check_msg@qptr& (0+255),b
  3248  00148A  EC3B  F00D         	call	_check_msg	;wreg free
  3249  00148E  0900               	iorlw	0
  3250  001490  B4D8               	btfsc	status,2,c
  3251  001492  D007               	goto	l2984
  3252                           
  3253                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3254  001494  0100               	movlb	0	; () banked
  3255  001496  6F93               	movwf	??_block_on_To_msgqueues& (0+255),b
  3256  001498  0E00               	movlw	0
  3257  00149A  6E3D               	movwf	_MQ_Main_Willing_to_block,c
  3258  00149C  0100               	movlb	0	; () banked
  3259  00149E  5193               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3260  0014A0  0012               	return	
  3261  0014A2                     l2984:
  3262                           
  3263                           ;messages.c: 278: }
  3264                           ;messages.c: 279: Delay1KTCYx(10);
  3265  0014A2  0E0A               	movlw	10
  3266  0014A4  ECFE  F00D         	call	_Delay1KTCYx
  3267  0014A8  D7D0               	goto	l2972
  3268  0014AA                     __end_of_block_on_To_msgqueues:
  3269                           	opt stack 0
  3270                           tblptru	equ	0xFF8
  3271                           tblptrh	equ	0xFF7
  3272                           tblptrl	equ	0xFF6
  3273                           tablat	equ	0xFF5
  3274                           prodh	equ	0xFF4
  3275                           prodl	equ	0xFF3
  3276                           intcon	equ	0xFF2
  3277                           intcon2	equ	0xFF1
  3278                           postinc0	equ	0xFEE
  3279                           wreg	equ	0xFE8
  3280                           indf1	equ	0xFE7
  3281                           postinc1	equ	0xFE6
  3282                           postdec1	equ	0xFE5
  3283                           fsr1h	equ	0xFE2
  3284                           fsr1l	equ	0xFE1
  3285                           indf2	equ	0xFDF
  3286                           postinc2	equ	0xFDE
  3287                           postdec2	equ	0xFDD
  3288                           fsr2h	equ	0xFDA
  3289                           fsr2l	equ	0xFD9
  3290                           status	equ	0xFD8
  3291                           
  3292 ;; *************** function _in_main *****************
  3293 ;; Defined at:
  3294 ;;		line 41 in file "../src/interrupts.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  2   49[BANK0 ] int 
  3301 ;; Registers used:
  3302 ;;		wreg, status,2, status,0, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3308 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3311 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3312 ;;Total ram usage:        2 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:   13
  3315 ;; This function calls:
  3316 ;;		_in_high_int
  3317 ;;		_in_low_int
  3318 ;; This function is called by:
  3319 ;;		_block_on_To_msgqueues
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text12
  3324  0018F4                     __ptext12:
  3325                           	opt stack 0
  3326  0018F4                     _in_main:
  3327                           	opt stack 16
  3328                           
  3329                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3330                           
  3331                           ;incstack = 0
  3332  0018F4  EC34  F00C         	call	_in_low_int	;wreg free
  3333  0018F8  0100               	movlb	0	; () banked
  3334  0018FA  0100               	movlb	0	; () banked
  3335  0018FC  5190               	movf	(?_in_low_int+1)& (0+255),w,b
  3336  0018FE  0100               	movlb	0	; () banked
  3337  001900  118F               	iorwf	?_in_low_int& (0+255),w,b
  3338  001902  A4D8               	btfss	status,2,c
  3339  001904  D011               	goto	l2600
  3340                           
  3341                           ; BSR set to: 0
  3342  001906  EC1B  F00E         	call	_in_high_int	;wreg free
  3343  00190A  0100               	movlb	0	; () banked
  3344  00190C  0100               	movlb	0	; () banked
  3345  00190E  518E               	movf	(?_in_high_int+1)& (0+255),w,b
  3346  001910  0100               	movlb	0	; () banked
  3347  001912  118D               	iorwf	?_in_high_int& (0+255),w,b
  3348  001914  A4D8               	btfss	status,2,c
  3349  001916  D008               	goto	l2600
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;interrupts.c: 43: return (1);
  3353  001918  0E00               	movlw	0
  3354  00191A  0100               	movlb	0	; () banked
  3355  00191C  0100               	movlb	0	; () banked
  3356  00191E  6F92               	movwf	(?_in_main+1)& (0+255),b
  3357  001920  0E01               	movlw	1
  3358  001922  0100               	movlb	0	; () banked
  3359  001924  6F91               	movwf	?_in_main& (0+255),b
  3360  001926  0012               	return	
  3361  001928                     l2600:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;interrupts.c: 45: return (0);
  3365  001928  0E00               	movlw	0
  3366  00192A  0100               	movlb	0	; () banked
  3367  00192C  0100               	movlb	0	; () banked
  3368  00192E  6F92               	movwf	(?_in_main+1)& (0+255),b
  3369  001930  0E00               	movlw	0
  3370  001932  0100               	movlb	0	; () banked
  3371  001934  6F91               	movwf	?_in_main& (0+255),b
  3372  001936  0012               	return	
  3373  001938                     __end_of_in_main:
  3374                           	opt stack 0
  3375                           tblptru	equ	0xFF8
  3376                           tblptrh	equ	0xFF7
  3377                           tblptrl	equ	0xFF6
  3378                           tablat	equ	0xFF5
  3379                           prodh	equ	0xFF4
  3380                           prodl	equ	0xFF3
  3381                           intcon	equ	0xFF2
  3382                           intcon2	equ	0xFF1
  3383                           postinc0	equ	0xFEE
  3384                           wreg	equ	0xFE8
  3385                           indf1	equ	0xFE7
  3386                           postinc1	equ	0xFE6
  3387                           postdec1	equ	0xFE5
  3388                           fsr1h	equ	0xFE2
  3389                           fsr1l	equ	0xFE1
  3390                           indf2	equ	0xFDF
  3391                           postinc2	equ	0xFDE
  3392                           postdec2	equ	0xFDD
  3393                           fsr2h	equ	0xFDA
  3394                           fsr2l	equ	0xFD9
  3395                           status	equ	0xFD8
  3396                           
  3397 ;; *************** function _in_low_int *****************
  3398 ;; Defined at:
  3399 ;;		line 31 in file "../src/interrupts.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  2   47[BANK0 ] int 
  3406 ;; Registers used:
  3407 ;;		wreg, status,2, status,0, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3416 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3417 ;;Total ram usage:        2 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:   12
  3420 ;; This function calls:
  3421 ;;		_in_high_int
  3422 ;; This function is called by:
  3423 ;;		_in_main
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text13
  3428  001868                     __ptext13:
  3429                           	opt stack 0
  3430  001868                     _in_low_int:
  3431                           	opt stack 16
  3432                           
  3433                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;incstack = 0
  3437  001868  ACF2               	btfss	intcon,6,c	;volatile
  3438  00186A  D008               	goto	l2578
  3439                           
  3440                           ;interrupts.c: 33: return (0);
  3441  00186C  0E00               	movlw	0
  3442  00186E  0100               	movlb	0	; () banked
  3443  001870  0100               	movlb	0	; () banked
  3444  001872  6F90               	movwf	(?_in_low_int+1)& (0+255),b
  3445  001874  0E00               	movlw	0
  3446  001876  0100               	movlb	0	; () banked
  3447  001878  6F8F               	movwf	?_in_low_int& (0+255),b
  3448  00187A  0012               	return	
  3449  00187C                     l2578:
  3450  00187C  EC1B  F00E         	call	_in_high_int	;wreg free
  3451  001880  0100               	movlb	0	; () banked
  3452  001882  0100               	movlb	0	; () banked
  3453  001884  518E               	movf	(?_in_high_int+1)& (0+255),w,b
  3454  001886  0100               	movlb	0	; () banked
  3455  001888  118D               	iorwf	?_in_high_int& (0+255),w,b
  3456  00188A  B4D8               	btfsc	status,2,c
  3457  00188C  D008               	goto	l2586
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;interrupts.c: 35: return (0);
  3461  00188E  0E00               	movlw	0
  3462  001890  0100               	movlb	0	; () banked
  3463  001892  0100               	movlb	0	; () banked
  3464  001894  6F90               	movwf	(?_in_low_int+1)& (0+255),b
  3465  001896  0E00               	movlw	0
  3466  001898  0100               	movlb	0	; () banked
  3467  00189A  6F8F               	movwf	?_in_low_int& (0+255),b
  3468  00189C  0012               	return	
  3469  00189E                     l2586:
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;interrupts.c: 37: return (1);
  3473  00189E  0E00               	movlw	0
  3474  0018A0  0100               	movlb	0	; () banked
  3475  0018A2  0100               	movlb	0	; () banked
  3476  0018A4  6F90               	movwf	(?_in_low_int+1)& (0+255),b
  3477  0018A6  0E01               	movlw	1
  3478  0018A8  0100               	movlb	0	; () banked
  3479  0018AA  6F8F               	movwf	?_in_low_int& (0+255),b
  3480  0018AC  0012               	return	
  3481  0018AE                     __end_of_in_low_int:
  3482                           	opt stack 0
  3483                           tblptru	equ	0xFF8
  3484                           tblptrh	equ	0xFF7
  3485                           tblptrl	equ	0xFF6
  3486                           tablat	equ	0xFF5
  3487                           prodh	equ	0xFF4
  3488                           prodl	equ	0xFF3
  3489                           intcon	equ	0xFF2
  3490                           intcon2	equ	0xFF1
  3491                           postinc0	equ	0xFEE
  3492                           wreg	equ	0xFE8
  3493                           indf1	equ	0xFE7
  3494                           postinc1	equ	0xFE6
  3495                           postdec1	equ	0xFE5
  3496                           fsr1h	equ	0xFE2
  3497                           fsr1l	equ	0xFE1
  3498                           indf2	equ	0xFDF
  3499                           postinc2	equ	0xFDE
  3500                           postdec2	equ	0xFDD
  3501                           fsr2h	equ	0xFDA
  3502                           fsr2l	equ	0xFD9
  3503                           status	equ	0xFD8
  3504                           
  3505 ;; *************** function _in_high_int *****************
  3506 ;; Defined at:
  3507 ;;		line 23 in file "../src/interrupts.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  2   45[BANK0 ] int 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3521 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3524 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3525 ;;Total ram usage:        2 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:   11
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_in_low_int
  3532 ;;		_in_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text14
  3537  001C36                     __ptext14:
  3538                           	opt stack 0
  3539  001C36                     _in_high_int:
  3540                           	opt stack 16
  3541                           
  3542                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;incstack = 0
  3546  001C36  0E00               	movlw	0
  3547  001C38  AEF2               	btfss	intcon,7,c	;volatile
  3548  001C3A  0E01               	movlw	1
  3549  001C3C  0100               	movlb	0	; () banked
  3550  001C3E  0100               	movlb	0	; () banked
  3551  001C40  6F8D               	movwf	?_in_high_int& (0+255),b
  3552  001C42  0100               	movlb	0	; () banked
  3553  001C44  6B8E               	clrf	(?_in_high_int+1)& (0+255),b
  3554  001C46  0012               	return	
  3555  001C48                     __end_of_in_high_int:
  3556                           	opt stack 0
  3557                           tblptru	equ	0xFF8
  3558                           tblptrh	equ	0xFF7
  3559                           tblptrl	equ	0xFF6
  3560                           tablat	equ	0xFF5
  3561                           prodh	equ	0xFF4
  3562                           prodl	equ	0xFF3
  3563                           intcon	equ	0xFF2
  3564                           intcon2	equ	0xFF1
  3565                           postinc0	equ	0xFEE
  3566                           wreg	equ	0xFE8
  3567                           indf1	equ	0xFE7
  3568                           postinc1	equ	0xFE6
  3569                           postdec1	equ	0xFE5
  3570                           fsr1h	equ	0xFE2
  3571                           fsr1l	equ	0xFE1
  3572                           indf2	equ	0xFDF
  3573                           postinc2	equ	0xFDE
  3574                           postdec2	equ	0xFDD
  3575                           fsr2h	equ	0xFDA
  3576                           fsr2l	equ	0xFD9
  3577                           status	equ	0xFD8
  3578                           
  3579 ;; *************** function _check_msg *****************
  3580 ;; Defined at:
  3581 ;;		line 222 in file "../src/messages.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  3584 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      unsigned char 
  3589 ;; Registers used:
  3590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3596 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3598 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3599 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3600 ;;Total ram usage:        3 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:   11
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_block_on_To_msgqueues
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text15
  3611  001A76                     __ptext15:
  3612                           	opt stack 0
  3613  001A76                     _check_msg:
  3614                           	opt stack 18
  3615                           
  3616                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;incstack = 0
  3620  001A76  0100               	movlb	0	; () banked
  3621  001A78  EE20 F042          	lfsr	2,66
  3622  001A7C  0100               	movlb	0	; () banked
  3623  001A7E  518D               	movf	check_msg@qptr& (0+255),w,b
  3624  001A80  26D9               	addwf	fsr2l,f,c
  3625  001A82  0100               	movlb	0	; () banked
  3626  001A84  518E               	movf	(check_msg@qptr+1)& (0+255),w,b
  3627  001A86  22DA               	addwfc	fsr2h,f,c
  3628  001A88  50DF               	movf	indf2,w,c
  3629  001A8A  0100               	movlb	0	; () banked
  3630  001A8C  6F8F               	movwf	??_check_msg& (0+255),b
  3631  001A8E  0100               	movlb	0	; () banked
  3632  001A90  518F               	movf	??_check_msg& (0+255),w,b
  3633  001A92  0D0D               	mullw	13
  3634  001A94  50F3               	movf	prodl,w,c
  3635  001A96  0100               	movlb	0	; () banked
  3636  001A98  0100               	movlb	0	; () banked
  3637  001A9A  258D               	addwf	check_msg@qptr& (0+255),w,b
  3638  001A9C  6ED9               	movwf	fsr2l,c
  3639  001A9E  50F4               	movf	prodh,w,c
  3640  001AA0  0100               	movlb	0	; () banked
  3641  001AA2  0100               	movlb	0	; () banked
  3642  001AA4  218E               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3643  001AA6  6EDA               	movwf	fsr2h,c
  3644  001AA8  50DF               	movf	indf2,w,c
  3645  001AAA  0012               	return	
  3646  001AAC                     __end_of_check_msg:
  3647                           	opt stack 0
  3648                           tblptru	equ	0xFF8
  3649                           tblptrh	equ	0xFF7
  3650                           tblptrl	equ	0xFF6
  3651                           tablat	equ	0xFF5
  3652                           prodh	equ	0xFF4
  3653                           prodl	equ	0xFF3
  3654                           intcon	equ	0xFF2
  3655                           intcon2	equ	0xFF1
  3656                           postinc0	equ	0xFEE
  3657                           wreg	equ	0xFE8
  3658                           indf1	equ	0xFE7
  3659                           postinc1	equ	0xFE6
  3660                           postdec1	equ	0xFE5
  3661                           fsr1h	equ	0xFE2
  3662                           fsr1l	equ	0xFE1
  3663                           indf2	equ	0xFDF
  3664                           postinc2	equ	0xFDE
  3665                           postdec2	equ	0xFDD
  3666                           fsr2h	equ	0xFDA
  3667                           fsr2l	equ	0xFD9
  3668                           status	equ	0xFD8
  3669                           
  3670 ;; *************** function _Delay1KTCYx *****************
  3671 ;; Defined at:
  3672 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  unit            1    wreg     unsigned char 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  unit            1   45[BANK0 ] unsigned char 
  3677 ;; Return value:  Size  Location     Type
  3678 ;;		None               void
  3679 ;; Registers used:
  3680 ;;		wreg
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3687 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3689 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3690 ;;Total ram usage:        1 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; Hardware stack levels required when called:   11
  3693 ;; This function calls:
  3694 ;;		Nothing
  3695 ;; This function is called by:
  3696 ;;		_block_on_To_msgqueues
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text16
  3701  001BFC                     __ptext16:
  3702                           	opt stack 0
  3703  001BFC                     _Delay1KTCYx:
  3704                           	opt stack 18
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;incstack = 0
  3708                           ;Delay1KTCYx@unit stored from wreg
  3709  001BFC  CFE8 F08D          	movff	wreg,Delay1KTCYx@unit
  3710  001C00                     l844:
  3711  001C00  0EFA               	movlw	250
  3712  001C02                     u3627:
  3713  001C02  F000               	nop	
  3714  001C04  2EE8               	decfsz	wreg,f,c
  3715  001C06  D7FD               	goto	u3627
  3716  001C08  0100               	movlb	0	; () banked
  3717  001C0A  0100               	movlb	0	; () banked
  3718  001C0C  2F8D               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3719  001C0E  D7F8               	goto	l844
  3720  001C10  0012               	return	
  3721  001C12                     __end_of_Delay1KTCYx:
  3722                           	opt stack 0
  3723                           tblptru	equ	0xFF8
  3724                           tblptrh	equ	0xFF7
  3725                           tblptrl	equ	0xFF6
  3726                           tablat	equ	0xFF5
  3727                           prodh	equ	0xFF4
  3728                           prodl	equ	0xFF3
  3729                           intcon	equ	0xFF2
  3730                           intcon2	equ	0xFF1
  3731                           postinc0	equ	0xFEE
  3732                           wreg	equ	0xFE8
  3733                           indf1	equ	0xFE7
  3734                           postinc1	equ	0xFE6
  3735                           postdec1	equ	0xFE5
  3736                           fsr1h	equ	0xFE2
  3737                           fsr1l	equ	0xFE1
  3738                           indf2	equ	0xFDF
  3739                           postinc2	equ	0xFDE
  3740                           postdec2	equ	0xFDD
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           status	equ	0xFD8
  3744                           
  3745 ;; *************** function _ToMainLow_recvmsg *****************
  3746 ;; Defined at:
  3747 ;;		line 112 in file "../src/messages.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  maxlength       1    wreg     unsigned char 
  3750 ;;  msgtype         2   69[BANK0 ] PTR unsigned char 
  3751 ;;		 -> main@msgtype(1), 
  3752 ;;  data            2   71[BANK0 ] PTR void 
  3753 ;;		 -> main@msgbuffer(11), 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  maxlength       1   73[BANK0 ] unsigned char 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      char 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3765 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3768 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3769 ;;Total ram usage:        5 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:   13
  3772 ;; This function calls:
  3773 ;;		_recv_msg
  3774 ;; This function is called by:
  3775 ;;		_main
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text17
  3780  001938                     __ptext17:
  3781                           	opt stack 0
  3782  001938                     _ToMainLow_recvmsg:
  3783                           	opt stack 17
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;incstack = 0
  3787                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3788  001938  CFE8 F0A9          	movff	wreg,ToMainLow_recvmsg@maxlength
  3789                           
  3790                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3791  00193C  0101               	movlb	1	; () banked
  3792  00193E  0E01               	movlw	high _ToMainLow_MQ
  3793  001940  0100               	movlb	0	; () banked
  3794  001942  0100               	movlb	0	; () banked
  3795  001944  6F98               	movwf	(recv_msg@qptr+1)& (0+255),b
  3796  001946  0101               	movlb	1	; () banked
  3797  001948  0E43               	movlw	low _ToMainLow_MQ
  3798  00194A  0100               	movlb	0	; () banked
  3799  00194C  0100               	movlb	0	; () banked
  3800  00194E  6F97               	movwf	recv_msg@qptr& (0+255),b
  3801  001950  C0A9  F099         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3802  001954  0100               	movlb	0	; () banked
  3803  001956  0100               	movlb	0	; () banked
  3804  001958  C0A6  F09B         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3805  00195C  0100               	movlb	0	; () banked
  3806  00195E  0100               	movlb	0	; () banked
  3807  001960  C0A5  F09A         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3808  001964  0100               	movlb	0	; () banked
  3809  001966  0100               	movlb	0	; () banked
  3810  001968  C0A8  F09D         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3811  00196C  0100               	movlb	0	; () banked
  3812  00196E  0100               	movlb	0	; () banked
  3813  001970  C0A7  F09C         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3814  001974  ECEB  F004         	call	_recv_msg	;wreg free
  3815  001978  0012               	return	
  3816  00197A                     __end_of_ToMainLow_recvmsg:
  3817                           	opt stack 0
  3818                           tblptru	equ	0xFF8
  3819                           tblptrh	equ	0xFF7
  3820                           tblptrl	equ	0xFF6
  3821                           tablat	equ	0xFF5
  3822                           prodh	equ	0xFF4
  3823                           prodl	equ	0xFF3
  3824                           intcon	equ	0xFF2
  3825                           intcon2	equ	0xFF1
  3826                           postinc0	equ	0xFEE
  3827                           wreg	equ	0xFE8
  3828                           indf1	equ	0xFE7
  3829                           postinc1	equ	0xFE6
  3830                           postdec1	equ	0xFE5
  3831                           fsr1h	equ	0xFE2
  3832                           fsr1l	equ	0xFE1
  3833                           indf2	equ	0xFDF
  3834                           postinc2	equ	0xFDE
  3835                           postdec2	equ	0xFDD
  3836                           fsr2h	equ	0xFDA
  3837                           fsr2l	equ	0xFD9
  3838                           status	equ	0xFD8
  3839                           
  3840 ;; *************** function _ToMainHigh_recvmsg *****************
  3841 ;; Defined at:
  3842 ;;		line 135 in file "../src/messages.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  maxlength       1    wreg     unsigned char 
  3845 ;;  msgtype         2   69[BANK0 ] PTR unsigned char 
  3846 ;;		 -> main@msgtype(1), 
  3847 ;;  data            2   71[BANK0 ] PTR void 
  3848 ;;		 -> main@msgbuffer(11), 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  maxlength       1   73[BANK0 ] unsigned char 
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      char 
  3853 ;; Registers used:
  3854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3860 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3861 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3863 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3864 ;;Total ram usage:        5 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:   13
  3867 ;; This function calls:
  3868 ;;		_recv_msg
  3869 ;; This function is called by:
  3870 ;;		_main
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text18
  3875  00197A                     __ptext18:
  3876                           	opt stack 0
  3877  00197A                     _ToMainHigh_recvmsg:
  3878                           	opt stack 17
  3879                           
  3880                           ;incstack = 0
  3881                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3882  00197A  CFE8 F0A9          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3883                           
  3884                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3885  00197E  0101               	movlb	1	; () banked
  3886  001980  0E01               	movlw	high _ToMainHigh_MQ
  3887  001982  0100               	movlb	0	; () banked
  3888  001984  0100               	movlb	0	; () banked
  3889  001986  6F98               	movwf	(recv_msg@qptr+1)& (0+255),b
  3890  001988  0101               	movlb	1	; () banked
  3891  00198A  0E00               	movlw	low _ToMainHigh_MQ
  3892  00198C  0100               	movlb	0	; () banked
  3893  00198E  0100               	movlb	0	; () banked
  3894  001990  6F97               	movwf	recv_msg@qptr& (0+255),b
  3895  001992  C0A9  F099         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3896  001996  0100               	movlb	0	; () banked
  3897  001998  0100               	movlb	0	; () banked
  3898  00199A  C0A6  F09B         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3899  00199E  0100               	movlb	0	; () banked
  3900  0019A0  0100               	movlb	0	; () banked
  3901  0019A2  C0A5  F09A         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3902  0019A6  0100               	movlb	0	; () banked
  3903  0019A8  0100               	movlb	0	; () banked
  3904  0019AA  C0A8  F09D         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3905  0019AE  0100               	movlb	0	; () banked
  3906  0019B0  0100               	movlb	0	; () banked
  3907  0019B2  C0A7  F09C         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3908  0019B6  ECEB  F004         	call	_recv_msg	;wreg free
  3909  0019BA  0012               	return	
  3910  0019BC                     __end_of_ToMainHigh_recvmsg:
  3911                           	opt stack 0
  3912                           tblptru	equ	0xFF8
  3913                           tblptrh	equ	0xFF7
  3914                           tblptrl	equ	0xFF6
  3915                           tablat	equ	0xFF5
  3916                           prodh	equ	0xFF4
  3917                           prodl	equ	0xFF3
  3918                           intcon	equ	0xFF2
  3919                           intcon2	equ	0xFF1
  3920                           postinc0	equ	0xFEE
  3921                           wreg	equ	0xFE8
  3922                           indf1	equ	0xFE7
  3923                           postinc1	equ	0xFE6
  3924                           postdec1	equ	0xFE5
  3925                           fsr1h	equ	0xFE2
  3926                           fsr1l	equ	0xFE1
  3927                           indf2	equ	0xFDF
  3928                           postinc2	equ	0xFDE
  3929                           postdec2	equ	0xFDD
  3930                           fsr2h	equ	0xFDA
  3931                           fsr2l	equ	0xFD9
  3932                           status	equ	0xFD8
  3933                           
  3934 ;; *************** function _recv_msg *****************
  3935 ;; Defined at:
  3936 ;;		line 63 in file "../src/messages.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  qptr            2   55[BANK0 ] PTR struct __msg_queue
  3939 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3940 ;;  maxlength       1   57[BANK0 ] unsigned char 
  3941 ;;  msgtype         2   58[BANK0 ] PTR unsigned char 
  3942 ;;		 -> main@msgtype(1), 
  3943 ;;  data            2   60[BANK0 ] PTR void 
  3944 ;;		 -> main@msgbuffer(11), 
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  qmsg            2   67[BANK0 ] PTR struct __msg
  3947 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  3948 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3949 ;;  tlength         2   65[BANK0 ] unsigned int 
  3950 ;;  slot            1   64[BANK0 ] unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      char 
  3953 ;; Registers used:
  3954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3960 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3961 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3962 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3963 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3964 ;;Total ram usage:       14 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:   12
  3967 ;; This function calls:
  3968 ;;		___awmod
  3969 ;;		_memcpy
  3970 ;; This function is called by:
  3971 ;;		_ToMainLow_recvmsg
  3972 ;;		_ToMainHigh_recvmsg
  3973 ;;		_FromMainLow_recvmsg
  3974 ;;		_FromMainHigh_recvmsg
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text19
  3979  0009D6                     __ptext19:
  3980                           	opt stack 0
  3981  0009D6                     _recv_msg:
  3982                           	opt stack 17
  3983                           
  3984                           ;messages.c: 64: unsigned char slot;
  3985                           ;messages.c: 68: msg *qmsg;
  3986                           ;messages.c: 69: size_t tlength;
  3987                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3988                           
  3989                           ;incstack = 0
  3990  0009D6  0100               	movlb	0	; () banked
  3991  0009D8  EE20 F042          	lfsr	2,66
  3992  0009DC  0100               	movlb	0	; () banked
  3993  0009DE  5197               	movf	recv_msg@qptr& (0+255),w,b
  3994  0009E0  26D9               	addwf	fsr2l,f,c
  3995  0009E2  0100               	movlb	0	; () banked
  3996  0009E4  5198               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3997  0009E6  22DA               	addwfc	fsr2h,f,c
  3998  0009E8  50DF               	movf	indf2,w,c
  3999  0009EA  0100               	movlb	0	; () banked
  4000  0009EC  0100               	movlb	0	; () banked
  4001  0009EE  6FA0               	movwf	recv_msg@slot& (0+255),b
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4005  0009F0  0100               	movlb	0	; () banked
  4006  0009F2  0100               	movlb	0	; () banked
  4007  0009F4  51A0               	movf	recv_msg@slot& (0+255),w,b
  4008  0009F6  0D0D               	mullw	13
  4009  0009F8  50F3               	movf	prodl,w,c
  4010  0009FA  0100               	movlb	0	; () banked
  4011  0009FC  0100               	movlb	0	; () banked
  4012  0009FE  2597               	addwf	recv_msg@qptr& (0+255),w,b
  4013  000A00  0100               	movlb	0	; () banked
  4014  000A02  0100               	movlb	0	; () banked
  4015  000A04  6FA3               	movwf	recv_msg@qmsg& (0+255),b
  4016  000A06  50F4               	movf	prodh,w,c
  4017  000A08  0100               	movlb	0	; () banked
  4018  000A0A  0100               	movlb	0	; () banked
  4019  000A0C  2198               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4020  000A0E  0100               	movlb	0	; () banked
  4021  000A10  6FA4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;messages.c: 74: if (qmsg->full == 1) {
  4025  000A12  0E01               	movlw	1
  4026  000A14  C0A3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4027  000A18  C0A4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4028  000A1C  62DF               	cpfseq	indf2,c
  4029  000A1E  D088               	goto	l3074
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4033  000A20  0100               	movlb	0	; () banked
  4034  000A22  EE20 F001          	lfsr	2,1
  4035  000A26  0100               	movlb	0	; () banked
  4036  000A28  51A3               	movf	recv_msg@qmsg& (0+255),w,b
  4037  000A2A  26D9               	addwf	fsr2l,f,c
  4038  000A2C  0100               	movlb	0	; () banked
  4039  000A2E  51A4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4040  000A30  22DA               	addwfc	fsr2h,f,c
  4041  000A32  50DF               	movf	indf2,w,c
  4042  000A34  0100               	movlb	0	; () banked
  4043  000A36  0100               	movlb	0	; () banked
  4044  000A38  5D99               	subwf	recv_msg@maxlength& (0+255),w,b
  4045  000A3A  B0D8               	btfsc	status,0,c
  4046  000A3C  D002               	goto	l3058
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;messages.c: 77: return (-3);
  4050  000A3E  0EFD               	movlw	253
  4051  000A40  0012               	return	
  4052  000A42                     l3058:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;messages.c: 78: }
  4056                           ;messages.c: 80: tlength = qmsg->length;
  4057  000A42  0100               	movlb	0	; () banked
  4058  000A44  EE20 F001          	lfsr	2,1
  4059  000A48  0100               	movlb	0	; () banked
  4060  000A4A  51A3               	movf	recv_msg@qmsg& (0+255),w,b
  4061  000A4C  26D9               	addwf	fsr2l,f,c
  4062  000A4E  0100               	movlb	0	; () banked
  4063  000A50  51A4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4064  000A52  22DA               	addwfc	fsr2h,f,c
  4065  000A54  50DF               	movf	indf2,w,c
  4066  000A56  0100               	movlb	0	; () banked
  4067  000A58  6F9E               	movwf	??_recv_msg& (0+255),b
  4068  000A5A  0100               	movlb	0	; () banked
  4069  000A5C  519E               	movf	??_recv_msg& (0+255),w,b
  4070  000A5E  0100               	movlb	0	; () banked
  4071  000A60  0100               	movlb	0	; () banked
  4072  000A62  6FA1               	movwf	recv_msg@tlength& (0+255),b
  4073  000A64  0100               	movlb	0	; () banked
  4074  000A66  6BA2               	clrf	(recv_msg@tlength+1)& (0+255),b
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4078  000A68  0100               	movlb	0	; () banked
  4079  000A6A  0100               	movlb	0	; () banked
  4080  000A6C  C09D  F08E         	movff	recv_msg@data+1,memcpy@d1+1
  4081  000A70  0100               	movlb	0	; () banked
  4082  000A72  0100               	movlb	0	; () banked
  4083  000A74  C09C  F08D         	movff	recv_msg@data,memcpy@d1
  4084  000A78  0E03               	movlw	3
  4085  000A7A  0100               	movlb	0	; () banked
  4086  000A7C  0100               	movlb	0	; () banked
  4087  000A7E  25A3               	addwf	recv_msg@qmsg& (0+255),w,b
  4088  000A80  0100               	movlb	0	; () banked
  4089  000A82  6F9E               	movwf	??_recv_msg& (0+255),b
  4090  000A84  0E00               	movlw	0
  4091  000A86  0100               	movlb	0	; () banked
  4092  000A88  0100               	movlb	0	; () banked
  4093  000A8A  21A4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4094  000A8C  0100               	movlb	0	; () banked
  4095  000A8E  6F9F               	movwf	(??_recv_msg+1)& (0+255),b
  4096  000A90  C09E  F08F         	movff	??_recv_msg,memcpy@s1
  4097  000A94  C09F  F090         	movff	??_recv_msg+1,memcpy@s1+1
  4098  000A98  C0A1  F091         	movff	recv_msg@tlength,memcpy@n
  4099  000A9C  C0A2  F092         	movff	recv_msg@tlength+1,memcpy@n+1
  4100  000AA0  ECD6  F00B         	call	_memcpy	;wreg free
  4101                           
  4102                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4103  000AA4  0100               	movlb	0	; () banked
  4104  000AA6  EE20 F042          	lfsr	2,66
  4105  000AAA  0100               	movlb	0	; () banked
  4106  000AAC  5197               	movf	recv_msg@qptr& (0+255),w,b
  4107  000AAE  26D9               	addwf	fsr2l,f,c
  4108  000AB0  0100               	movlb	0	; () banked
  4109  000AB2  5198               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4110  000AB4  22DA               	addwfc	fsr2h,f,c
  4111  000AB6  0100               	movlb	0	; () banked
  4112  000AB8  EE10 F042          	lfsr	1,66
  4113  000ABC  0100               	movlb	0	; () banked
  4114  000ABE  5197               	movf	recv_msg@qptr& (0+255),w,b
  4115  000AC0  26E1               	addwf	fsr1l,f,c
  4116  000AC2  0100               	movlb	0	; () banked
  4117  000AC4  5198               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4118  000AC6  22E2               	addwfc	fsr1h,f,c
  4119  000AC8  50E7               	movf	indf1,w,c
  4120  000ACA  0100               	movlb	0	; () banked
  4121  000ACC  6F9E               	movwf	??_recv_msg& (0+255),b
  4122  000ACE  0E01               	movlw	1
  4123  000AD0  0100               	movlb	0	; () banked
  4124  000AD2  259E               	addwf	??_recv_msg& (0+255),w,b
  4125  000AD4  0100               	movlb	0	; () banked
  4126  000AD6  0100               	movlb	0	; () banked
  4127  000AD8  6F8D               	movwf	___awmod@dividend& (0+255),b
  4128  000ADA  0100               	movlb	0	; () banked
  4129  000ADC  0100               	movlb	0	; () banked
  4130  000ADE  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
  4131  000AE0  0E00               	movlw	0
  4132  000AE2  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4133  000AE4  0E00               	movlw	0
  4134  000AE6  0100               	movlb	0	; () banked
  4135  000AE8  0100               	movlb	0	; () banked
  4136  000AEA  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
  4137  000AEC  0E05               	movlw	5
  4138  000AEE  0100               	movlb	0	; () banked
  4139  000AF0  6F8F               	movwf	___awmod@divisor& (0+255),b
  4140  000AF2  ECCF  F006         	call	___awmod	;wreg free
  4141  000AF6  0100               	movlb	0	; () banked
  4142  000AF8  0100               	movlb	0	; () banked
  4143  000AFA  518D               	movf	?___awmod& (0+255),w,b
  4144  000AFC  6EDF               	movwf	indf2,c
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4148  000AFE  0100               	movlb	0	; () banked
  4149  000B00  EE20 F002          	lfsr	2,2
  4150  000B04  0100               	movlb	0	; () banked
  4151  000B06  51A3               	movf	recv_msg@qmsg& (0+255),w,b
  4152  000B08  26D9               	addwf	fsr2l,f,c
  4153  000B0A  0100               	movlb	0	; () banked
  4154  000B0C  51A4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4155  000B0E  22DA               	addwfc	fsr2h,f,c
  4156  000B10  C09A  FFE1         	movff	recv_msg@msgtype,fsr1l
  4157  000B14  C09B  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4158  000B18  CFDF FFE7          	movff	indf2,indf1
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;messages.c: 91: qmsg->full = 0;
  4162  000B1C  C0A3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4163  000B20  C0A4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4164  000B24  0E00               	movlw	0
  4165  000B26  6EDF               	movwf	indf2,c
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;messages.c: 92: return (tlength);
  4169  000B28  0100               	movlb	0	; () banked
  4170  000B2A  0100               	movlb	0	; () banked
  4171  000B2C  51A1               	movf	recv_msg@tlength& (0+255),w,b
  4172  000B2E  0012               	return	
  4173  000B30                     l3074:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;messages.c: 94: return (-4);
  4177  000B30  0EFC               	movlw	252
  4178  000B32  0012               	return	
  4179  000B34                     __end_of_recv_msg:
  4180                           	opt stack 0
  4181                           tblptru	equ	0xFF8
  4182                           tblptrh	equ	0xFF7
  4183                           tblptrl	equ	0xFF6
  4184                           tablat	equ	0xFF5
  4185                           prodh	equ	0xFF4
  4186                           prodl	equ	0xFF3
  4187                           intcon	equ	0xFF2
  4188                           intcon2	equ	0xFF1
  4189                           postinc0	equ	0xFEE
  4190                           wreg	equ	0xFE8
  4191                           indf1	equ	0xFE7
  4192                           postinc1	equ	0xFE6
  4193                           postdec1	equ	0xFE5
  4194                           fsr1h	equ	0xFE2
  4195                           fsr1l	equ	0xFE1
  4196                           indf2	equ	0xFDF
  4197                           postinc2	equ	0xFDE
  4198                           postdec2	equ	0xFDD
  4199                           fsr2h	equ	0xFDA
  4200                           fsr2l	equ	0xFD9
  4201                           status	equ	0xFD8
  4202                           
  4203 ;; *************** function _memcpy *****************
  4204 ;; Defined at:
  4205 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  d1              2   45[BANK0 ] PTR void 
  4208 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4209 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4210 ;;		 -> main@msgbuffer(11), 
  4211 ;;  s1              2   47[BANK0 ] PTR const void 
  4212 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4213 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4214 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4215 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  4216 ;;  n               2   49[BANK0 ] unsigned int 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  s               2   53[BANK0 ] PTR const unsigned char 
  4219 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4220 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4221 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4222 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  4223 ;;  d               2   51[BANK0 ] PTR unsigned char 
  4224 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4225 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4226 ;;		 -> main@msgbuffer(11), 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  2   45[BANK0 ] PTR void 
  4229 ;; Registers used:
  4230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4236 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4237 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4239 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4240 ;;Total ram usage:       10 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:   11
  4243 ;; This function calls:
  4244 ;;		Nothing
  4245 ;; This function is called by:
  4246 ;;		_recv_msg
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text20
  4251  0017AC                     __ptext20:
  4252                           	opt stack 0
  4253  0017AC                     _memcpy:
  4254                           	opt stack 17
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;incstack = 0
  4258  0017AC  0100               	movlb	0	; () banked
  4259  0017AE  0100               	movlb	0	; () banked
  4260  0017B0  C090  F096         	movff	memcpy@s1+1,memcpy@s+1
  4261  0017B4  0100               	movlb	0	; () banked
  4262  0017B6  0100               	movlb	0	; () banked
  4263  0017B8  C08F  F095         	movff	memcpy@s1,memcpy@s
  4264  0017BC  0100               	movlb	0	; () banked
  4265  0017BE  0100               	movlb	0	; () banked
  4266  0017C0  C08E  F094         	movff	memcpy@d1+1,memcpy@d+1
  4267  0017C4  0100               	movlb	0	; () banked
  4268  0017C6  0100               	movlb	0	; () banked
  4269  0017C8  C08D  F093         	movff	memcpy@d1,memcpy@d
  4270  0017CC  D012               	goto	l3044
  4271  0017CE                     l3038:
  4272                           
  4273                           ; BSR set to: 0
  4274  0017CE  C095  FFD9         	movff	memcpy@s,fsr2l
  4275  0017D2  C096  FFDA         	movff	memcpy@s+1,fsr2h
  4276  0017D6  C093  FFE1         	movff	memcpy@d,fsr1l
  4277  0017DA  C094  FFE2         	movff	memcpy@d+1,fsr1h
  4278  0017DE  CFDF FFE7          	movff	indf2,indf1
  4279                           
  4280                           ; BSR set to: 0
  4281  0017E2  0100               	movlb	0	; () banked
  4282  0017E4  0100               	movlb	0	; () banked
  4283  0017E6  4B95               	infsnz	memcpy@s& (0+255),f,b
  4284  0017E8  2B96               	incf	(memcpy@s+1)& (0+255),f,b
  4285                           
  4286                           ; BSR set to: 0
  4287  0017EA  0100               	movlb	0	; () banked
  4288  0017EC  0100               	movlb	0	; () banked
  4289  0017EE  4B93               	infsnz	memcpy@d& (0+255),f,b
  4290  0017F0  2B94               	incf	(memcpy@d+1)& (0+255),f,b
  4291  0017F2                     l3044:
  4292                           
  4293                           ; BSR set to: 0
  4294  0017F2  0100               	movlb	0	; () banked
  4295  0017F4  0100               	movlb	0	; () banked
  4296  0017F6  0791               	decf	memcpy@n& (0+255),f,b
  4297  0017F8  A0D8               	btfss	status,0,c
  4298  0017FA  0792               	decf	(memcpy@n+1)& (0+255),f,b
  4299  0017FC  0100               	movlb	0	; () banked
  4300  0017FE  2991               	incf	memcpy@n& (0+255),w,b
  4301  001800  B4D8               	btfsc	status,2,c
  4302  001802  2992               	incf	(memcpy@n+1)& (0+255),w,b
  4303  001804  B4D8               	btfsc	status,2,c
  4304                           
  4305                           ; BSR set to: 0
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;	Return value of _memcpy is never used
  4309  001806  0012               	return	
  4310  001808  D7E2               	goto	l3038
  4311  00180A                     __end_of_memcpy:
  4312                           	opt stack 0
  4313                           tblptru	equ	0xFF8
  4314                           tblptrh	equ	0xFF7
  4315                           tblptrl	equ	0xFF6
  4316                           tablat	equ	0xFF5
  4317                           prodh	equ	0xFF4
  4318                           prodl	equ	0xFF3
  4319                           intcon	equ	0xFF2
  4320                           intcon2	equ	0xFF1
  4321                           postinc0	equ	0xFEE
  4322                           wreg	equ	0xFE8
  4323                           indf1	equ	0xFE7
  4324                           postinc1	equ	0xFE6
  4325                           postdec1	equ	0xFE5
  4326                           fsr1h	equ	0xFE2
  4327                           fsr1l	equ	0xFE1
  4328                           indf2	equ	0xFDF
  4329                           postinc2	equ	0xFDE
  4330                           postdec2	equ	0xFDD
  4331                           fsr2h	equ	0xFDA
  4332                           fsr2l	equ	0xFD9
  4333                           status	equ	0xFD8
  4334                           
  4335 ;; *************** function ___awmod *****************
  4336 ;; Defined at:
  4337 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  dividend        2   45[BANK0 ] int 
  4340 ;;  divisor         2   47[BANK0 ] int 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  sign            1   51[BANK0 ] unsigned char 
  4343 ;;  counter         1   50[BANK0 ] unsigned char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  2   45[BANK0 ] int 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0, prodl
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4354 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4355 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4356 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4357 ;;Total ram usage:        7 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:   11
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_send_msg
  4364 ;;		_recv_msg
  4365 ;;		i2_send_msg
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text21
  4370  000D9E                     __ptext21:
  4371                           	opt stack 0
  4372  000D9E                     ___awmod:
  4373                           	opt stack 17
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;incstack = 0
  4377  000D9E  0100               	movlb	0	; () banked
  4378  000DA0  6F91               	movwf	??___awmod& (0+255),b
  4379  000DA2  0E00               	movlw	0
  4380  000DA4  0100               	movlb	0	; () banked
  4381  000DA6  0100               	movlb	0	; () banked
  4382  000DA8  6F93               	movwf	___awmod@sign& (0+255),b
  4383  000DAA  0100               	movlb	0	; () banked
  4384  000DAC  5191               	movf	??___awmod& (0+255),w,b
  4385                           
  4386                           ; BSR set to: 0
  4387  000DAE  0100               	movlb	0	; () banked
  4388  000DB0  0100               	movlb	0	; () banked
  4389  000DB2  518E               	movf	(___awmod@dividend+1)& (0+255),w,b
  4390  000DB4  0A80               	xorlw	128
  4391  000DB6  6EF3               	movwf	prodl,c
  4392  000DB8  0E80               	movlw	128
  4393  000DBA  5CF3               	subwf	prodl,w,c
  4394  000DBC  0E00               	movlw	0
  4395  000DBE  B4D8               	btfsc	status,2,c
  4396  000DC0  5D8D               	subwf	___awmod@dividend& (0+255),w,b
  4397  000DC2  B0D8               	btfsc	status,0,c
  4398  000DC4  D00F               	goto	l3408
  4399                           
  4400                           ; BSR set to: 0
  4401  000DC6  0100               	movlb	0	; () banked
  4402  000DC8  0100               	movlb	0	; () banked
  4403  000DCA  6D8D               	negf	___awmod@dividend& (0+255),b
  4404  000DCC  0100               	movlb	0	; () banked
  4405  000DCE  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
  4406  000DD0  B0D8               	btfsc	status,0,c
  4407  000DD2  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
  4408                           
  4409                           ; BSR set to: 0
  4410  000DD4  0100               	movlb	0	; () banked
  4411  000DD6  6F91               	movwf	??___awmod& (0+255),b
  4412  000DD8  0E01               	movlw	1
  4413  000DDA  0100               	movlb	0	; () banked
  4414  000DDC  0100               	movlb	0	; () banked
  4415  000DDE  6F93               	movwf	___awmod@sign& (0+255),b
  4416  000DE0  0100               	movlb	0	; () banked
  4417  000DE2  5191               	movf	??___awmod& (0+255),w,b
  4418  000DE4                     l3408:
  4419                           
  4420                           ; BSR set to: 0
  4421  000DE4  0100               	movlb	0	; () banked
  4422  000DE6  0100               	movlb	0	; () banked
  4423  000DE8  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4424  000DEA  0A80               	xorlw	128
  4425  000DEC  6EF3               	movwf	prodl,c
  4426  000DEE  0E80               	movlw	128
  4427  000DF0  5CF3               	subwf	prodl,w,c
  4428  000DF2  0E00               	movlw	0
  4429  000DF4  B4D8               	btfsc	status,2,c
  4430  000DF6  5D8F               	subwf	___awmod@divisor& (0+255),w,b
  4431  000DF8  B0D8               	btfsc	status,0,c
  4432  000DFA  D007               	goto	l3412
  4433                           
  4434                           ; BSR set to: 0
  4435  000DFC  0100               	movlb	0	; () banked
  4436  000DFE  0100               	movlb	0	; () banked
  4437  000E00  6D8F               	negf	___awmod@divisor& (0+255),b
  4438  000E02  0100               	movlb	0	; () banked
  4439  000E04  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
  4440  000E06  B0D8               	btfsc	status,0,c
  4441  000E08  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
  4442  000E0A                     l3412:
  4443                           
  4444                           ; BSR set to: 0
  4445  000E0A  0100               	movlb	0	; () banked
  4446  000E0C  0100               	movlb	0	; () banked
  4447  000E0E  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4448  000E10  118F               	iorwf	___awmod@divisor& (0+255),w,b
  4449  000E12  B4D8               	btfsc	status,2,c
  4450  000E14  D03A               	goto	l3428
  4451                           
  4452                           ; BSR set to: 0
  4453  000E16  0100               	movlb	0	; () banked
  4454  000E18  6F91               	movwf	??___awmod& (0+255),b
  4455  000E1A  0E01               	movlw	1
  4456  000E1C  0100               	movlb	0	; () banked
  4457  000E1E  0100               	movlb	0	; () banked
  4458  000E20  6F92               	movwf	___awmod@counter& (0+255),b
  4459  000E22  0100               	movlb	0	; () banked
  4460  000E24  5191               	movf	??___awmod& (0+255),w,b
  4461  000E26  D009               	goto	l3418
  4462  000E28                     l3416:
  4463                           
  4464                           ; BSR set to: 0
  4465  000E28  0100               	movlb	0	; () banked
  4466  000E2A  0100               	movlb	0	; () banked
  4467  000E2C  0100               	movlb	0	; () banked
  4468  000E2E  90D8               	bcf	status,0,c
  4469  000E30  378F               	rlcf	___awmod@divisor& (0+255),f,b
  4470  000E32  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4471  000E34  0100               	movlb	0	; () banked
  4472  000E36  0100               	movlb	0	; () banked
  4473  000E38  2B92               	incf	___awmod@counter& (0+255),f,b
  4474  000E3A                     l3418:
  4475                           
  4476                           ; BSR set to: 0
  4477  000E3A  0100               	movlb	0	; () banked
  4478  000E3C  0100               	movlb	0	; () banked
  4479  000E3E  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4480  000E40  D7F3               	goto	l3416
  4481  000E42                     l3420:
  4482                           
  4483                           ; BSR set to: 0
  4484  000E42  0100               	movlb	0	; () banked
  4485  000E44  0100               	movlb	0	; () banked
  4486  000E46  518F               	movf	___awmod@divisor& (0+255),w,b
  4487  000E48  0100               	movlb	0	; () banked
  4488  000E4A  0100               	movlb	0	; () banked
  4489  000E4C  5D8D               	subwf	___awmod@dividend& (0+255),w,b
  4490  000E4E  0100               	movlb	0	; () banked
  4491  000E50  0100               	movlb	0	; () banked
  4492  000E52  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4493  000E54  0100               	movlb	0	; () banked
  4494  000E56  0100               	movlb	0	; () banked
  4495  000E58  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4496  000E5A  A0D8               	btfss	status,0,c
  4497  000E5C  D00C               	goto	l3424
  4498                           
  4499                           ; BSR set to: 0
  4500  000E5E  0100               	movlb	0	; () banked
  4501  000E60  0100               	movlb	0	; () banked
  4502  000E62  518F               	movf	___awmod@divisor& (0+255),w,b
  4503  000E64  0100               	movlb	0	; () banked
  4504  000E66  0100               	movlb	0	; () banked
  4505  000E68  5F8D               	subwf	___awmod@dividend& (0+255),f,b
  4506  000E6A  0100               	movlb	0	; () banked
  4507  000E6C  0100               	movlb	0	; () banked
  4508  000E6E  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4509  000E70  0100               	movlb	0	; () banked
  4510  000E72  0100               	movlb	0	; () banked
  4511  000E74  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4512  000E76                     l3424:
  4513                           
  4514                           ; BSR set to: 0
  4515  000E76  0100               	movlb	0	; () banked
  4516  000E78  0100               	movlb	0	; () banked
  4517  000E7A  0100               	movlb	0	; () banked
  4518  000E7C  90D8               	bcf	status,0,c
  4519  000E7E  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4520  000E80  338F               	rrcf	___awmod@divisor& (0+255),f,b
  4521                           
  4522                           ; BSR set to: 0
  4523  000E82  0100               	movlb	0	; () banked
  4524  000E84  0100               	movlb	0	; () banked
  4525  000E86  2F92               	decfsz	___awmod@counter& (0+255),f,b
  4526  000E88  D7DC               	goto	l3420
  4527  000E8A                     l3428:
  4528                           
  4529                           ; BSR set to: 0
  4530  000E8A  0100               	movlb	0	; () banked
  4531  000E8C  0100               	movlb	0	; () banked
  4532  000E8E  5193               	movf	___awmod@sign& (0+255),w,b
  4533  000E90  B4D8               	btfsc	status,2,c
  4534  000E92  D007               	goto	l3432
  4535                           
  4536                           ; BSR set to: 0
  4537  000E94  0100               	movlb	0	; () banked
  4538  000E96  0100               	movlb	0	; () banked
  4539  000E98  6D8D               	negf	___awmod@dividend& (0+255),b
  4540  000E9A  0100               	movlb	0	; () banked
  4541  000E9C  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
  4542  000E9E  B0D8               	btfsc	status,0,c
  4543  000EA0  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
  4544  000EA2                     l3432:
  4545                           
  4546                           ; BSR set to: 0
  4547  000EA2  C08D  F08D         	movff	___awmod@dividend,?___awmod
  4548  000EA6  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
  4549  000EAA  0012               	return	
  4550  000EAC                     __end_of___awmod:
  4551                           	opt stack 0
  4552                           tblptru	equ	0xFF8
  4553                           tblptrh	equ	0xFF7
  4554                           tblptrl	equ	0xFF6
  4555                           tablat	equ	0xFF5
  4556                           prodh	equ	0xFF4
  4557                           prodl	equ	0xFF3
  4558                           intcon	equ	0xFF2
  4559                           intcon2	equ	0xFF1
  4560                           postinc0	equ	0xFEE
  4561                           wreg	equ	0xFE8
  4562                           indf1	equ	0xFE7
  4563                           postinc1	equ	0xFE6
  4564                           postdec1	equ	0xFE5
  4565                           fsr1h	equ	0xFE2
  4566                           fsr1l	equ	0xFE1
  4567                           indf2	equ	0xFDF
  4568                           postinc2	equ	0xFDE
  4569                           postdec2	equ	0xFDD
  4570                           fsr2h	equ	0xFDA
  4571                           fsr2l	equ	0xFD9
  4572                           status	equ	0xFD8
  4573                           
  4574 ;; *************** function _SetChanADC *****************
  4575 ;; Defined at:
  4576 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  channel         1    wreg     unsigned char 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  channel         1   46[BANK0 ] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;		None               void
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4591 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4592 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4593 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4594 ;;Total ram usage:        2 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:   11
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_main
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text22
  4605  001B88                     __ptext22:
  4606                           	opt stack 0
  4607  001B88                     _SetChanADC:
  4608                           	opt stack 19
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;incstack = 0
  4612                           ;SetChanADC@channel stored from wreg
  4613  001B88  CFE8 F08E          	movff	wreg,SetChanADC@channel
  4614  001B8C  CFC2 F08D          	movff	4034,??_SetChanADC	;volatile
  4615  001B90  0EC3               	movlw	195
  4616  001B92  0100               	movlb	0	; () banked
  4617  001B94  178D               	andwf	??_SetChanADC& (0+255),f,b
  4618  001B96  0100               	movlb	0	; () banked
  4619  001B98  0100               	movlb	0	; () banked
  4620  001B9A  90D8               	bcf	status,0,c
  4621  001B9C  318E               	rrcf	SetChanADC@channel& (0+255),w,b
  4622  001B9E  0B3C               	andlw	60
  4623  001BA0  0100               	movlb	0	; () banked
  4624  001BA2  118D               	iorwf	??_SetChanADC& (0+255),w,b
  4625  001BA4  6EC2               	movwf	4034,c	;volatile
  4626                           
  4627                           ; BSR set to: 0
  4628  001BA6  0012               	return	
  4629  001BA8                     __end_of_SetChanADC:
  4630                           	opt stack 0
  4631                           tblptru	equ	0xFF8
  4632                           tblptrh	equ	0xFF7
  4633                           tblptrl	equ	0xFF6
  4634                           tablat	equ	0xFF5
  4635                           prodh	equ	0xFF4
  4636                           prodl	equ	0xFF3
  4637                           intcon	equ	0xFF2
  4638                           intcon2	equ	0xFF1
  4639                           postinc0	equ	0xFEE
  4640                           wreg	equ	0xFE8
  4641                           indf1	equ	0xFE7
  4642                           postinc1	equ	0xFE6
  4643                           postdec1	equ	0xFE5
  4644                           fsr1h	equ	0xFE2
  4645                           fsr1l	equ	0xFE1
  4646                           indf2	equ	0xFDF
  4647                           postinc2	equ	0xFDE
  4648                           postdec2	equ	0xFDD
  4649                           fsr2h	equ	0xFDA
  4650                           fsr2l	equ	0xFD9
  4651                           status	equ	0xFD8
  4652                           
  4653 ;; *************** function _OpenTimer1 *****************
  4654 ;; Defined at:
  4655 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  config          1    wreg     unsigned char 
  4658 ;;  config1         1   45[BANK0 ] unsigned char 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  config          1   47[BANK0 ] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;		None               void
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4670 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4671 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4672 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4673 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4674 ;;Total ram usage:        3 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:   11
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_main
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text23
  4685  0019BC                     __ptext23:
  4686                           	opt stack 0
  4687  0019BC                     _OpenTimer1:
  4688                           	opt stack 19
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;incstack = 0
  4692                           ;OpenTimer1@config stored from wreg
  4693  0019BC  CFE8 F08F          	movff	wreg,OpenTimer1@config
  4694  0019C0  0100               	movlb	0	; () banked
  4695  0019C2  0100               	movlb	0	; () banked
  4696  0019C4  518D               	movf	OpenTimer1@config1& (0+255),w,b
  4697  0019C6  0BF3               	andlw	243
  4698  0019C8  6E9A               	movwf	3994,c	;volatile
  4699  0019CA  C08F  F08E         	movff	OpenTimer1@config,??_OpenTimer1
  4700  0019CE  0E7F               	movlw	127
  4701  0019D0  0100               	movlb	0	; () banked
  4702  0019D2  178E               	andwf	??_OpenTimer1& (0+255),f,b
  4703  0019D4  0100               	movlb	0	; () banked
  4704  0019D6  90D8               	bcf	status,0,c
  4705  0019D8  358E               	rlcf	??_OpenTimer1& (0+255),w,b
  4706  0019DA  6ECD               	movwf	4045,c	;volatile
  4707                           
  4708                           ; BSR set to: 0
  4709  0019DC  0E00               	movlw	0
  4710  0019DE  6ECF               	movwf	4047,c	;volatile
  4711                           
  4712                           ; BSR set to: 0
  4713  0019E0  0E00               	movlw	0
  4714  0019E2  6ECE               	movwf	4046,c	;volatile
  4715                           
  4716                           ; BSR set to: 0
  4717  0019E4  909E               	bcf	3998,0,c	;volatile
  4718                           
  4719                           ; BSR set to: 0
  4720  0019E6  0100               	movlb	0	; () banked
  4721  0019E8  0100               	movlb	0	; () banked
  4722  0019EA  AF8F               	btfss	OpenTimer1@config& (0+255),7,b
  4723  0019EC  D002               	goto	l580
  4724                           
  4725                           ; BSR set to: 0
  4726  0019EE  809D               	bsf	3997,0,c	;volatile
  4727  0019F0  D001               	goto	l581
  4728  0019F2                     l580:
  4729                           
  4730                           ; BSR set to: 0
  4731  0019F2  909D               	bcf	3997,0,c	;volatile
  4732  0019F4                     l581:
  4733                           
  4734                           ; BSR set to: 0
  4735  0019F4  BE9A               	btfsc	3994,7,c	;volatile
  4736                           
  4737                           ; BSR set to: 0
  4738  0019F6  869A               	bsf	3994,3,c	;volatile
  4739                           
  4740                           ; BSR set to: 0
  4741  0019F8  80CD               	bsf	4045,0,c	;volatile
  4742                           
  4743                           ; BSR set to: 0
  4744  0019FA  0012               	return	
  4745  0019FC                     __end_of_OpenTimer1:
  4746                           	opt stack 0
  4747                           tblptru	equ	0xFF8
  4748                           tblptrh	equ	0xFF7
  4749                           tblptrl	equ	0xFF6
  4750                           tablat	equ	0xFF5
  4751                           prodh	equ	0xFF4
  4752                           prodl	equ	0xFF3
  4753                           intcon	equ	0xFF2
  4754                           intcon2	equ	0xFF1
  4755                           postinc0	equ	0xFEE
  4756                           wreg	equ	0xFE8
  4757                           indf1	equ	0xFE7
  4758                           postinc1	equ	0xFE6
  4759                           postdec1	equ	0xFE5
  4760                           fsr1h	equ	0xFE2
  4761                           fsr1l	equ	0xFE1
  4762                           indf2	equ	0xFDF
  4763                           postinc2	equ	0xFDE
  4764                           postdec2	equ	0xFDD
  4765                           fsr2h	equ	0xFDA
  4766                           fsr2l	equ	0xFD9
  4767                           status	equ	0xFD8
  4768                           
  4769 ;; *************** function _OpenTimer0 *****************
  4770 ;; Defined at:
  4771 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  config          1    wreg     unsigned char 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  config          1   45[BANK0 ] unsigned char 
  4776 ;; Return value:  Size  Location     Type
  4777 ;;		None               void
  4778 ;; Registers used:
  4779 ;;		wreg, status,2, status,0
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4788 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4789 ;;Total ram usage:        1 bytes
  4790 ;; Hardware stack levels used:    1
  4791 ;; Hardware stack levels required when called:   11
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		_main
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           	psect	text24
  4800  001B18                     __ptext24:
  4801                           	opt stack 0
  4802  001B18                     _OpenTimer0:
  4803                           	opt stack 19
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;incstack = 0
  4807                           ;OpenTimer0@config stored from wreg
  4808  001B18  CFE8 F08D          	movff	wreg,OpenTimer0@config
  4809  001B1C  0100               	movlb	0	; () banked
  4810  001B1E  0100               	movlb	0	; () banked
  4811  001B20  518D               	movf	OpenTimer0@config& (0+255),w,b
  4812  001B22  0B7F               	andlw	127
  4813  001B24  6ED5               	movwf	4053,c	;volatile
  4814                           
  4815                           ; BSR set to: 0
  4816  001B26  0E00               	movlw	0
  4817  001B28  6ED7               	movwf	4055,c	;volatile
  4818                           
  4819                           ; BSR set to: 0
  4820  001B2A  0E00               	movlw	0
  4821  001B2C  6ED6               	movwf	4054,c	;volatile
  4822                           
  4823                           ; BSR set to: 0
  4824  001B2E  94F2               	bcf	intcon,2,c	;volatile
  4825                           
  4826                           ; BSR set to: 0
  4827  001B30  0100               	movlb	0	; () banked
  4828  001B32  0100               	movlb	0	; () banked
  4829  001B34  AF8D               	btfss	OpenTimer0@config& (0+255),7,b
  4830  001B36  D002               	goto	l552
  4831                           
  4832                           ; BSR set to: 0
  4833  001B38  8AF2               	bsf	intcon,5,c	;volatile
  4834  001B3A  D001               	goto	l553
  4835  001B3C                     l552:
  4836                           
  4837                           ; BSR set to: 0
  4838  001B3C  9AF2               	bcf	intcon,5,c	;volatile
  4839  001B3E                     l553:
  4840                           
  4841                           ; BSR set to: 0
  4842  001B3E  8ED5               	bsf	4053,7,c	;volatile
  4843                           
  4844                           ; BSR set to: 0
  4845  001B40  0012               	return	
  4846  001B42                     __end_of_OpenTimer0:
  4847                           	opt stack 0
  4848                           tblptru	equ	0xFF8
  4849                           tblptrh	equ	0xFF7
  4850                           tblptrl	equ	0xFF6
  4851                           tablat	equ	0xFF5
  4852                           prodh	equ	0xFF4
  4853                           prodl	equ	0xFF3
  4854                           intcon	equ	0xFF2
  4855                           intcon2	equ	0xFF1
  4856                           postinc0	equ	0xFEE
  4857                           wreg	equ	0xFE8
  4858                           indf1	equ	0xFE7
  4859                           postinc1	equ	0xFE6
  4860                           postdec1	equ	0xFE5
  4861                           fsr1h	equ	0xFE2
  4862                           fsr1l	equ	0xFE1
  4863                           indf2	equ	0xFDF
  4864                           postinc2	equ	0xFDE
  4865                           postdec2	equ	0xFDD
  4866                           fsr2h	equ	0xFDA
  4867                           fsr2l	equ	0xFD9
  4868                           status	equ	0xFD8
  4869                           
  4870 ;; *************** function _OpenADC *****************
  4871 ;; Defined at:
  4872 ;;		line 225 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  config          1    wreg     unsigned char 
  4875 ;;  config2         1   45[BANK0 ] unsigned char 
  4876 ;;  config3         2   46[BANK0 ] unsigned int 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  config          1   51[BANK0 ] unsigned char 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;		None               void
  4881 ;; Registers used:
  4882 ;;		wreg, status,2, status,0
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4888 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4890 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4891 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4892 ;;Total ram usage:        7 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:   11
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_main
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text25
  4903  0011EE                     __ptext25:
  4904                           	opt stack 0
  4905  0011EE                     _OpenADC:
  4906                           	opt stack 19
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;incstack = 0
  4910                           ;OpenADC@config stored from wreg
  4911  0011EE  CFE8 F093          	movff	wreg,OpenADC@config
  4912  0011F2  0E00               	movlw	0
  4913  0011F4  6EC2               	movwf	4034,c	;volatile
  4914  0011F6  0E00               	movlw	0
  4915  0011F8  6EC1               	movwf	4033,c	;volatile
  4916  0011FA  C08D  F090         	movff	OpenADC@config2,??_OpenADC
  4917  0011FE  0E06               	movlw	6
  4918  001200  0100               	movlb	0	; () banked
  4919  001202  6F91               	movwf	(??_OpenADC+1)& (0+255),b
  4920  001204                     u2095:
  4921  001204  0100               	movlb	0	; () banked
  4922  001206  90D8               	bcf	status,0,c
  4923  001208  3790               	rlcf	??_OpenADC& (0+255),f,b
  4924  00120A  0100               	movlb	0	; () banked
  4925  00120C  2F91               	decfsz	(??_OpenADC+1)& (0+255),f,b
  4926  00120E  D7FA               	goto	u2095
  4927  001210  0EC0               	movlw	192
  4928  001212  0100               	movlb	0	; () banked
  4929  001214  1790               	andwf	??_OpenADC& (0+255),f,b
  4930  001216  0100               	movlb	0	; () banked
  4931  001218  0100               	movlb	0	; () banked
  4932  00121A  90D8               	bcf	status,0,c
  4933  00121C  318D               	rrcf	OpenADC@config2& (0+255),w,b
  4934  00121E  0B3C               	andlw	60
  4935  001220  0100               	movlb	0	; () banked
  4936  001222  1190               	iorwf	??_OpenADC& (0+255),w,b
  4937  001224  6EC2               	movwf	4034,c	;volatile
  4938                           
  4939                           ; BSR set to: 0
  4940  001226  C093  F090         	movff	OpenADC@config,??_OpenADC
  4941  00122A  0100               	movlb	0	; () banked
  4942  00122C  90D8               	bcf	status,0,c
  4943  00122E  3790               	rlcf	??_OpenADC& (0+255),f,b
  4944  001230  0100               	movlb	0	; () banked
  4945  001232  90D8               	bcf	status,0,c
  4946  001234  3790               	rlcf	??_OpenADC& (0+255),f,b
  4947  001236  0E38               	movlw	56
  4948  001238  0100               	movlb	0	; () banked
  4949  00123A  1790               	andwf	??_OpenADC& (0+255),f,b
  4950  00123C  C093  F091         	movff	OpenADC@config,??_OpenADC+1
  4951  001240  0100               	movlb	0	; () banked
  4952  001242  3B91               	swapf	(??_OpenADC+1)& (0+255),f,b
  4953  001244  0E0F               	movlw	15
  4954  001246  1791               	andwf	(??_OpenADC+1)& (0+255),f,b
  4955  001248  0E07               	movlw	7
  4956  00124A  0100               	movlb	0	; () banked
  4957  00124C  1791               	andwf	(??_OpenADC+1)& (0+255),f,b
  4958  00124E  0100               	movlb	0	; () banked
  4959  001250  0100               	movlb	0	; () banked
  4960  001252  5193               	movf	OpenADC@config& (0+255),w,b
  4961  001254  0B80               	andlw	128
  4962  001256  0100               	movlb	0	; () banked
  4963  001258  1191               	iorwf	(??_OpenADC+1)& (0+255),w,b
  4964  00125A  0100               	movlb	0	; () banked
  4965  00125C  1190               	iorwf	??_OpenADC& (0+255),w,b
  4966  00125E  6EC1               	movwf	4033,c	;volatile
  4967                           
  4968                           ; BSR set to: 0
  4969  001260  C08E  FF48         	movff	OpenADC@config3,3912	;volatile
  4970                           
  4971                           ; BSR set to: 0
  4972  001264  0100               	movlb	0	; () banked
  4973  001266  C08F  F090         	movff	OpenADC@config3+1,??_OpenADC
  4974  00126A  C090  F091         	movff	??_OpenADC,??_OpenADC+1
  4975  00126E  0100               	movlb	0	; () banked
  4976  001270  6B92               	clrf	(??_OpenADC+2)& (0+255),b
  4977  001272  0100               	movlb	0	; () banked
  4978  001274  5191               	movf	(??_OpenADC+1)& (0+255),w,b
  4979  001276  010F               	movlb	15	; () banked
  4980  001278  010F               	movlb	15	; () banked
  4981  00127A  6F49               	movwf	73,b	;volatile
  4982                           
  4983                           ; BSR set to: 15
  4984  00127C  0100               	movlb	0	; () banked
  4985  00127E  0100               	movlb	0	; () banked
  4986  001280  AF8D               	btfss	OpenADC@config2& (0+255),7,b
  4987  001282  D003               	goto	l533
  4988                           
  4989                           ; BSR set to: 0
  4990  001284  9C9E               	bcf	3998,6,c	;volatile
  4991  001286  8C9D               	bsf	3997,6,c	;volatile
  4992  001288  8CF2               	bsf	intcon,6,c	;volatile
  4993  00128A                     l533:
  4994                           
  4995                           ; BSR set to: 0
  4996  00128A  80C2               	bsf	4034,0,c	;volatile
  4997                           
  4998                           ; BSR set to: 0
  4999  00128C  0012               	return	
  5000  00128E                     __end_of_OpenADC:
  5001                           	opt stack 0
  5002                           tblptru	equ	0xFF8
  5003                           tblptrh	equ	0xFF7
  5004                           tblptrl	equ	0xFF6
  5005                           tablat	equ	0xFF5
  5006                           prodh	equ	0xFF4
  5007                           prodl	equ	0xFF3
  5008                           intcon	equ	0xFF2
  5009                           intcon2	equ	0xFF1
  5010                           postinc0	equ	0xFEE
  5011                           wreg	equ	0xFE8
  5012                           indf1	equ	0xFE7
  5013                           postinc1	equ	0xFE6
  5014                           postdec1	equ	0xFE5
  5015                           fsr1h	equ	0xFE2
  5016                           fsr1l	equ	0xFE1
  5017                           indf2	equ	0xFDF
  5018                           postinc2	equ	0xFDE
  5019                           postdec2	equ	0xFDD
  5020                           fsr2h	equ	0xFDA
  5021                           fsr2l	equ	0xFD9
  5022                           status	equ	0xFD8
  5023                           
  5024 ;; *************** function _Open1USART *****************
  5025 ;; Defined at:
  5026 ;;		line 124 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\u1open.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  config          1    wreg     unsigned char 
  5029 ;;  spbrg           2   45[BANK0 ] unsigned int 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  config          1   50[BANK0 ] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;		None               void
  5034 ;; Registers used:
  5035 ;;		wreg, status,2
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5041 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5043 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;Total ram usage:        6 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:   11
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_main
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text26
  5056  0013AC                     __ptext26:
  5057                           	opt stack 0
  5058  0013AC                     _Open1USART:
  5059                           	opt stack 19
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;incstack = 0
  5063                           ;Open1USART@config stored from wreg
  5064  0013AC  CFE8 F092          	movff	wreg,Open1USART@config
  5065  0013B0  0E00               	movlw	0
  5066  0013B2  6EAD               	movwf	4013,c	;volatile
  5067  0013B4  0E00               	movlw	0
  5068  0013B6  6EAC               	movwf	4012,c	;volatile
  5069  0013B8  0100               	movlb	0	; () banked
  5070  0013BA  0100               	movlb	0	; () banked
  5071  0013BC  B192               	btfsc	Open1USART@config& (0+255),0,b
  5072                           
  5073                           ; BSR set to: 0
  5074  0013BE  88AD               	bsf	4013,4,c	;volatile
  5075                           
  5076                           ; BSR set to: 0
  5077                           
  5078                           ; BSR set to: 0
  5079  0013C0  0100               	movlb	0	; () banked
  5080  0013C2  0100               	movlb	0	; () banked
  5081  0013C4  A392               	btfss	Open1USART@config& (0+255),1,b
  5082  0013C6  D002               	goto	l2920
  5083                           
  5084                           ; BSR set to: 0
  5085  0013C8  8CAD               	bsf	4013,6,c	;volatile
  5086  0013CA  8CAC               	bsf	4012,6,c	;volatile
  5087  0013CC                     l2920:
  5088                           
  5089                           ; BSR set to: 0
  5090  0013CC  0100               	movlb	0	; () banked
  5091  0013CE  0100               	movlb	0	; () banked
  5092  0013D0  B592               	btfsc	Open1USART@config& (0+255),2,b
  5093                           
  5094                           ; BSR set to: 0
  5095  0013D2  8EAD               	bsf	4013,7,c	;volatile
  5096                           
  5097                           ; BSR set to: 0
  5098                           
  5099                           ; BSR set to: 0
  5100  0013D4  0100               	movlb	0	; () banked
  5101  0013D6  0100               	movlb	0	; () banked
  5102  0013D8  A792               	btfss	Open1USART@config& (0+255),3,b
  5103  0013DA  D002               	goto	l612
  5104                           
  5105                           ; BSR set to: 0
  5106  0013DC  88AC               	bsf	4012,4,c	;volatile
  5107  0013DE  D001               	goto	l2928
  5108  0013E0                     l612:
  5109                           
  5110                           ; BSR set to: 0
  5111  0013E0  8AAC               	bsf	4012,5,c	;volatile
  5112  0013E2                     l2928:
  5113                           
  5114                           ; BSR set to: 0
  5115  0013E2  0100               	movlb	0	; () banked
  5116  0013E4  0100               	movlb	0	; () banked
  5117  0013E6  B992               	btfsc	Open1USART@config& (0+255),4,b
  5118                           
  5119                           ; BSR set to: 0
  5120  0013E8  84AD               	bsf	4013,2,c	;volatile
  5121                           
  5122                           ; BSR set to: 0
  5123                           
  5124                           ; BSR set to: 0
  5125  0013EA  0100               	movlb	0	; () banked
  5126  0013EC  0100               	movlb	0	; () banked
  5127  0013EE  BB92               	btfsc	Open1USART@config& (0+255),5,b
  5128                           
  5129                           ; BSR set to: 0
  5130  0013F0  86AC               	bsf	4012,3,c	;volatile
  5131                           
  5132                           ; BSR set to: 0
  5133                           
  5134                           ; BSR set to: 0
  5135  0013F2  0100               	movlb	0	; () banked
  5136  0013F4  0100               	movlb	0	; () banked
  5137  0013F6  AD92               	btfss	Open1USART@config& (0+255),6,b
  5138  0013F8  D002               	goto	l616
  5139                           
  5140                           ; BSR set to: 0
  5141  0013FA  8A9D               	bsf	3997,5,c	;volatile
  5142  0013FC  D001               	goto	l2940
  5143  0013FE                     l616:
  5144                           
  5145                           ; BSR set to: 0
  5146  0013FE  9A9D               	bcf	3997,5,c	;volatile
  5147  001400                     l2940:
  5148                           
  5149                           ; BSR set to: 0
  5150  001400  0100               	movlb	0	; () banked
  5151  001402  0100               	movlb	0	; () banked
  5152  001404  AF92               	btfss	Open1USART@config& (0+255),7,b
  5153  001406  D002               	goto	l618
  5154                           
  5155                           ; BSR set to: 0
  5156  001408  889D               	bsf	3997,4,c	;volatile
  5157  00140A  D001               	goto	l619
  5158  00140C                     l618:
  5159                           
  5160                           ; BSR set to: 0
  5161  00140C  989D               	bcf	3997,4,c	;volatile
  5162  00140E                     l619:
  5163                           
  5164                           ; BSR set to: 0
  5165  00140E  C08D  FFB0         	movff	Open1USART@spbrg,4016	;volatile
  5166                           
  5167                           ; BSR set to: 0
  5168  001412  0100               	movlb	0	; () banked
  5169  001414  C08E  F08F         	movff	Open1USART@spbrg+1,??_Open1USART
  5170  001418  C08F  F090         	movff	??_Open1USART,??_Open1USART+1
  5171  00141C  0100               	movlb	0	; () banked
  5172  00141E  6B91               	clrf	(??_Open1USART+2)& (0+255),b
  5173  001420  0100               	movlb	0	; () banked
  5174  001422  5190               	movf	(??_Open1USART+1)& (0+255),w,b
  5175  001424  6E7F               	movwf	3967,c	;volatile
  5176                           
  5177                           ; BSR set to: 0
  5178  001426  8AAD               	bsf	4013,5,c	;volatile
  5179                           
  5180                           ; BSR set to: 0
  5181  001428  8EAC               	bsf	4012,7,c	;volatile
  5182                           
  5183                           ; BSR set to: 0
  5184  00142A  0012               	return	
  5185  00142C                     __end_of_Open1USART:
  5186                           	opt stack 0
  5187                           tblptru	equ	0xFF8
  5188                           tblptrh	equ	0xFF7
  5189                           tblptrl	equ	0xFF6
  5190                           tablat	equ	0xFF5
  5191                           prodh	equ	0xFF4
  5192                           prodl	equ	0xFF3
  5193                           intcon	equ	0xFF2
  5194                           intcon2	equ	0xFF1
  5195                           postinc0	equ	0xFEE
  5196                           wreg	equ	0xFE8
  5197                           indf1	equ	0xFE7
  5198                           postinc1	equ	0xFE6
  5199                           postdec1	equ	0xFE5
  5200                           fsr1h	equ	0xFE2
  5201                           fsr1l	equ	0xFE1
  5202                           indf2	equ	0xFDF
  5203                           postinc2	equ	0xFDE
  5204                           postdec2	equ	0xFDD
  5205                           fsr2h	equ	0xFDA
  5206                           fsr2l	equ	0xFD9
  5207                           status	equ	0xFD8
  5208                           
  5209 ;; *************** function _InterruptHandlerLow *****************
  5210 ;; Defined at:
  5211 ;;		line 126 in file "../src/interrupts.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;		None
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;		None
  5216 ;; Return value:  Size  Location     Type
  5217 ;;		None               void
  5218 ;; Registers used:
  5219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5227 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5228 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5229 ;;Total ram usage:       17 bytes
  5230 ;; Hardware stack levels used:    1
  5231 ;; Hardware stack levels required when called:   10
  5232 ;; This function calls:
  5233 ;;		_adc_int_handler
  5234 ;;		_timer1_int_handler
  5235 ;;		_uart_recv_int_handler
  5236 ;;		_uart_trans_int_handler
  5237 ;; This function is called by:
  5238 ;;		Interrupt level 1
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	intcodelo
  5243  000018                     __pintcodelo:
  5244                           	opt stack 0
  5245  000018                     _InterruptHandlerLow:
  5246                           	opt stack 16
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;incstack = 0
  5250  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5251  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5252  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5253  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5254  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5255  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5256  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5257  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5258  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5259  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5260  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5261  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5262  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5263  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5264  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5265  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5266  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5267                           
  5268                           ;interrupts.c: 128: if(PIR1bits.ADIF){
  5269  00005C  AC9E               	btfss	3998,6,c	;volatile
  5270  00005E  D003               	goto	i1l3648
  5271                           
  5272                           ;interrupts.c: 130: PIR1bits.ADIF = 0;
  5273  000060  9C9E               	bcf	3998,6,c	;volatile
  5274                           
  5275                           ;interrupts.c: 131: adc_int_handler();
  5276  000062  EC57  F00E         	call	_adc_int_handler	;wreg free
  5277  000066                     i1l3648:
  5278                           
  5279                           ;interrupts.c: 132: }
  5280                           ;interrupts.c: 135: if (PIR1bits.TMR1IF) {
  5281  000066  A09E               	btfss	3998,0,c	;volatile
  5282  000068  D003               	goto	i1l3654
  5283                           
  5284                           ;interrupts.c: 136: PIR1bits.TMR1IF = 0;
  5285  00006A  909E               	bcf	3998,0,c	;volatile
  5286                           
  5287                           ;interrupts.c: 137: timer1_int_handler();
  5288  00006C  EC1E  F00D         	call	_timer1_int_handler	;wreg free
  5289  000070                     i1l3654:
  5290                           
  5291                           ;interrupts.c: 139: }
  5292                           ;interrupts.c: 141: if (PIR1bits.TXIF) {
  5293  000070  B89E               	btfsc	3998,4,c	;volatile
  5294                           
  5295                           ;interrupts.c: 143: uart_trans_int_handler();
  5296  000072  EC70  F00B         	call	_uart_trans_int_handler	;wreg free
  5297                           
  5298                           ;interrupts.c: 144: }
  5299                           ;interrupts.c: 146: if (PIR1bits.RCIF) {
  5300  000076  AA9E               	btfss	3998,5,c	;volatile
  5301  000078  D003               	goto	i1l57
  5302                           
  5303                           ;interrupts.c: 147: PIR1bits.RCIF = 0;
  5304  00007A  9A9E               	bcf	3998,5,c	;volatile
  5305                           
  5306                           ;interrupts.c: 149: uart_recv_int_handler();
  5307  00007C  ECDD  F007         	call	_uart_recv_int_handler	;wreg free
  5308  000080                     i1l57:
  5309  000080  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5310  000084  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5311  000088  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5312  00008C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5313  000090  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5314  000094  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5315  000098  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5316  00009C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5317  0000A0  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5318  0000A4  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5319  0000A8  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5320  0000AC  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5321  0000B0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5322  0000B4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5323  0000B8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5324  0000BC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5325  0000C0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5326  0000C4  0010               	retfie	
  5327  0000C6                     __end_of_InterruptHandlerLow:
  5328                           	opt stack 0
  5329                           pclatu	equ	0xFFB
  5330                           pclath	equ	0xFFA
  5331                           tblptru	equ	0xFF8
  5332                           tblptrh	equ	0xFF7
  5333                           tblptrl	equ	0xFF6
  5334                           tablat	equ	0xFF5
  5335                           prodh	equ	0xFF4
  5336                           prodl	equ	0xFF3
  5337                           intcon	equ	0xFF2
  5338                           intcon2	equ	0xFF1
  5339                           postinc0	equ	0xFEE
  5340                           fsr0h	equ	0xFEA
  5341                           fsr0l	equ	0xFE9
  5342                           wreg	equ	0xFE8
  5343                           indf1	equ	0xFE7
  5344                           postinc1	equ	0xFE6
  5345                           postdec1	equ	0xFE5
  5346                           fsr1h	equ	0xFE2
  5347                           fsr1l	equ	0xFE1
  5348                           bsr	equ	0xFE0
  5349                           indf2	equ	0xFDF
  5350                           postinc2	equ	0xFDE
  5351                           postdec2	equ	0xFDD
  5352                           fsr2h	equ	0xFDA
  5353                           fsr2l	equ	0xFD9
  5354                           status	equ	0xFD8
  5355                           
  5356 ;; *************** function _uart_trans_int_handler *****************
  5357 ;; Defined at:
  5358 ;;		line 73 in file "../src/my_uart.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;		None
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;		None
  5363 ;; Return value:  Size  Location     Type
  5364 ;;		None               void
  5365 ;; Registers used:
  5366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5376 ;;Total ram usage:        1 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    6
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_InterruptHandlerLow
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text28
  5387  0016E0                     __ptext28:
  5388                           	opt stack 0
  5389  0016E0                     _uart_trans_int_handler:
  5390                           	opt stack 19
  5391                           
  5392                           ;my_uart.c: 75: if(TXSTAbits.TRMT){
  5393                           
  5394                           ;incstack = 0
  5395  0016E0  A2AD               	btfss	4013,1,c	;volatile
  5396  0016E2  0012               	return	
  5397                           
  5398                           ;my_uart.c: 76: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5399  0016E4  EE20 F00E          	lfsr	2,14
  5400  0016E8  503F               	movf	_uc_ptr,w,c
  5401  0016EA  26D9               	addwf	fsr2l,f,c
  5402  0016EC  5040               	movf	_uc_ptr+1,w,c
  5403  0016EE  22DA               	addwfc	fsr2h,f,c
  5404  0016F0  50DF               	movf	indf2,w,c
  5405  0016F2  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5406  0016F4  EE20 F00D          	lfsr	2,13
  5407  0016F8  503F               	movf	_uc_ptr,w,c
  5408  0016FA  26D9               	addwf	fsr2l,f,c
  5409  0016FC  5040               	movf	_uc_ptr+1,w,c
  5410  0016FE  22DA               	addwfc	fsr2h,f,c
  5411  001700  50DF               	movf	indf2,w,c
  5412  001702  5C01               	subwf	??_uart_trans_int_handler,w,c
  5413  001704  B0D8               	btfsc	status,0,c
  5414  001706  D01E               	goto	i1l469
  5415                           
  5416                           ;my_uart.c: 77: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5417  001708  EE20 F00E          	lfsr	2,14
  5418  00170C  503F               	movf	_uc_ptr,w,c
  5419  00170E  26D9               	addwf	fsr2l,f,c
  5420  001710  5040               	movf	_uc_ptr+1,w,c
  5421  001712  22DA               	addwfc	fsr2h,f,c
  5422  001714  50DF               	movf	indf2,w,c
  5423  001716  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5424  001718  5001               	movf	??_uart_trans_int_handler,w,c
  5425  00171A  0D01               	mullw	1
  5426  00171C  0E07               	movlw	7
  5427  00171E  26F3               	addwf	prodl,f,c
  5428  001720  0E00               	movlw	0
  5429  001722  22F4               	addwfc	prodh,f,c
  5430  001724  50F3               	movf	prodl,w,c
  5431  001726  243F               	addwf	_uc_ptr,w,c
  5432  001728  6ED9               	movwf	fsr2l,c
  5433  00172A  50F4               	movf	prodh,w,c
  5434  00172C  2040               	addwfc	_uc_ptr+1,w,c
  5435  00172E  6EDA               	movwf	fsr2h,c
  5436  001730  50DF               	movf	indf2,w,c
  5437  001732  6EAE               	movwf	4014,c	;volatile
  5438                           
  5439                           ;my_uart.c: 79: uc_ptr->txBufind++;
  5440  001734  EE20 F00E          	lfsr	2,14
  5441  001738  503F               	movf	_uc_ptr,w,c
  5442  00173A  26D9               	addwf	fsr2l,f,c
  5443  00173C  5040               	movf	_uc_ptr+1,w,c
  5444  00173E  22DA               	addwfc	fsr2h,f,c
  5445  001740  2ADF               	incf	indf2,f,c
  5446                           
  5447                           ;my_uart.c: 80: } else
  5448  001742  0012               	return	
  5449  001744                     i1l469:
  5450                           
  5451                           ;my_uart.c: 81: PIE1bits.TX1IE = 0;
  5452  001744  989D               	bcf	3997,4,c	;volatile
  5453  001746  0012               	return	
  5454  001748                     __end_of_uart_trans_int_handler:
  5455                           	opt stack 0
  5456                           pclatu	equ	0xFFB
  5457                           pclath	equ	0xFFA
  5458                           tblptru	equ	0xFF8
  5459                           tblptrh	equ	0xFF7
  5460                           tblptrl	equ	0xFF6
  5461                           tablat	equ	0xFF5
  5462                           prodh	equ	0xFF4
  5463                           prodl	equ	0xFF3
  5464                           intcon	equ	0xFF2
  5465                           intcon2	equ	0xFF1
  5466                           postinc0	equ	0xFEE
  5467                           fsr0h	equ	0xFEA
  5468                           fsr0l	equ	0xFE9
  5469                           wreg	equ	0xFE8
  5470                           indf1	equ	0xFE7
  5471                           postinc1	equ	0xFE6
  5472                           postdec1	equ	0xFE5
  5473                           fsr1h	equ	0xFE2
  5474                           fsr1l	equ	0xFE1
  5475                           bsr	equ	0xFE0
  5476                           indf2	equ	0xFDF
  5477                           postinc2	equ	0xFDE
  5478                           postdec2	equ	0xFDD
  5479                           fsr2h	equ	0xFDA
  5480                           fsr2l	equ	0xFD9
  5481                           status	equ	0xFD8
  5482                           
  5483 ;; *************** function _uart_recv_int_handler *****************
  5484 ;; Defined at:
  5485 ;;		line 11 in file "../src/my_uart.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;		None
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;		None
  5490 ;; Return value:  Size  Location     Type
  5491 ;;		None               void
  5492 ;; Registers used:
  5493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5503 ;;Total ram usage:        1 bytes
  5504 ;; Hardware stack levels used:    1
  5505 ;; Hardware stack levels required when called:    9
  5506 ;; This function calls:
  5507 ;;		_Read1USART
  5508 ;;		_ToMainLow_sendmsg
  5509 ;; This function is called by:
  5510 ;;		_InterruptHandlerLow
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text29
  5515  000FBA                     __ptext29:
  5516                           	opt stack 0
  5517  000FBA                     _uart_recv_int_handler:
  5518                           	opt stack 16
  5519                           
  5520                           ;my_uart.c: 17: if ((PIR1bits.RC1IF)) {
  5521                           
  5522                           ;incstack = 0
  5523  000FBA  AA9E               	btfss	3998,5,c	;volatile
  5524  000FBC  D04E               	goto	i1l3636
  5525                           
  5526                           ;my_uart.c: 18: uc_ptr->buffer[uc_ptr->buflen] = Read1USART();
  5527  000FBE  EE20 F006          	lfsr	2,6
  5528  000FC2  503F               	movf	_uc_ptr,w,c
  5529  000FC4  26D9               	addwf	fsr2l,f,c
  5530  000FC6  5040               	movf	_uc_ptr+1,w,c
  5531  000FC8  22DA               	addwfc	fsr2h,f,c
  5532  000FCA  50DF               	movf	indf2,w,c
  5533  000FCC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5534  000FCE  501B               	movf	??_uart_recv_int_handler,w,c
  5535  000FD0  0D01               	mullw	1
  5536  000FD2  50F3               	movf	prodl,w,c
  5537  000FD4  243F               	addwf	_uc_ptr,w,c
  5538  000FD6  6ED9               	movwf	fsr2l,c
  5539  000FD8  50F4               	movf	prodh,w,c
  5540  000FDA  2040               	addwfc	_uc_ptr+1,w,c
  5541  000FDC  6EDA               	movwf	fsr2h,c
  5542  000FDE  ECE3  F00D         	call	_Read1USART	;wreg free
  5543  000FE2  6EDF               	movwf	indf2,c
  5544                           
  5545                           ;my_uart.c: 25: uc_ptr->buflen++;
  5546  000FE4  EE20 F006          	lfsr	2,6
  5547  000FE8  503F               	movf	_uc_ptr,w,c
  5548  000FEA  26D9               	addwf	fsr2l,f,c
  5549  000FEC  5040               	movf	_uc_ptr+1,w,c
  5550  000FEE  22DA               	addwfc	fsr2h,f,c
  5551  000FF0  2ADF               	incf	indf2,f,c
  5552                           
  5553                           ;my_uart.c: 26: if(UART_timeout > 20000){
  5554  000FF2  0E21               	movlw	33
  5555  000FF4  5C39               	subwf	_UART_timeout,w,c
  5556  000FF6  0E4E               	movlw	78
  5557  000FF8  583A               	subwfb	_UART_timeout+1,w,c
  5558  000FFA  A0D8               	btfss	status,0,c
  5559  000FFC  D00C               	goto	i1l3630
  5560                           
  5561                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  5562  000FFE  EE20 F006          	lfsr	2,6
  5563  001002  503F               	movf	_uc_ptr,w,c
  5564  001004  26D9               	addwf	fsr2l,f,c
  5565  001006  5040               	movf	_uc_ptr+1,w,c
  5566  001008  22DA               	addwfc	fsr2h,f,c
  5567  00100A  0E01               	movlw	1
  5568  00100C  6EDF               	movwf	indf2,c
  5569                           
  5570                           ;my_uart.c: 28: UART_timeout = 0;
  5571  00100E  0E00               	movlw	0
  5572  001010  6E3A               	movwf	_UART_timeout+1,c
  5573  001012  0E00               	movlw	0
  5574  001014  6E39               	movwf	_UART_timeout,c
  5575  001016                     i1l3630:
  5576                           
  5577                           ;my_uart.c: 29: }
  5578                           ;my_uart.c: 32: if (uc_ptr->buflen == 6) {
  5579  001016  EE20 F006          	lfsr	2,6
  5580  00101A  503F               	movf	_uc_ptr,w,c
  5581  00101C  26D9               	addwf	fsr2l,f,c
  5582  00101E  5040               	movf	_uc_ptr+1,w,c
  5583  001020  22DA               	addwfc	fsr2h,f,c
  5584  001022  0E06               	movlw	6
  5585  001024  62DF               	cpfseq	indf2,c
  5586  001026  D019               	goto	i1l3636
  5587                           
  5588                           ;my_uart.c: 33: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5589  001028  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5590  00102A  0E1F               	movlw	31
  5591  00102C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5592  00102E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5593  001030  C040  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5594  001034  C03F  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5595  001038  EE20 F006          	lfsr	2,6
  5596  00103C  503F               	movf	_uc_ptr,w,c
  5597  00103E  26D9               	addwf	fsr2l,f,c
  5598  001040  5040               	movf	_uc_ptr+1,w,c
  5599  001042  22DA               	addwfc	fsr2h,f,c
  5600  001044  50DF               	movf	indf2,w,c
  5601  001046  ECA1  F00D         	call	_ToMainLow_sendmsg
  5602                           
  5603                           ;my_uart.c: 34: uc_ptr->buflen = 0;
  5604  00104A  EE20 F006          	lfsr	2,6
  5605  00104E  503F               	movf	_uc_ptr,w,c
  5606  001050  26D9               	addwf	fsr2l,f,c
  5607  001052  5040               	movf	_uc_ptr+1,w,c
  5608  001054  22DA               	addwfc	fsr2h,f,c
  5609  001056  0E00               	movlw	0
  5610  001058  6EDF               	movwf	indf2,c
  5611  00105A                     i1l3636:
  5612                           
  5613                           ;my_uart.c: 35: }
  5614                           ;my_uart.c: 36: }
  5615                           ;my_uart.c: 41: if (USART1_Status.OVERRUN_ERROR == 1) {
  5616  00105A  A63E               	btfss	_USART1_Status,3,c
  5617  00105C  0012               	return	
  5618                           
  5619                           ;my_uart.c: 48: RCSTAbits.CREN = 0;
  5620  00105E  98AC               	bcf	4012,4,c	;volatile
  5621                           
  5622                           ;my_uart.c: 49: RCSTAbits.CREN = 1;
  5623  001060  88AC               	bsf	4012,4,c	;volatile
  5624                           
  5625                           ;my_uart.c: 50: ToMainLow_sendmsg(0, 30, (void *) 0);
  5626  001062  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5627  001064  0E1E               	movlw	30
  5628  001066  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5629  001068  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5630  00106A  0E00               	movlw	0
  5631  00106C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5632  00106E  0E00               	movlw	0
  5633  001070  6E18               	movwf	ToMainLow_sendmsg@data,c
  5634  001072  0E00               	movlw	0
  5635  001074  ECA1  F00D         	call	_ToMainLow_sendmsg
  5636  001078  0012               	return	
  5637  00107A                     __end_of_uart_recv_int_handler:
  5638                           	opt stack 0
  5639                           pclatu	equ	0xFFB
  5640                           pclath	equ	0xFFA
  5641                           tblptru	equ	0xFF8
  5642                           tblptrh	equ	0xFF7
  5643                           tblptrl	equ	0xFF6
  5644                           tablat	equ	0xFF5
  5645                           prodh	equ	0xFF4
  5646                           prodl	equ	0xFF3
  5647                           intcon	equ	0xFF2
  5648                           intcon2	equ	0xFF1
  5649                           postinc0	equ	0xFEE
  5650                           fsr0h	equ	0xFEA
  5651                           fsr0l	equ	0xFE9
  5652                           wreg	equ	0xFE8
  5653                           indf1	equ	0xFE7
  5654                           postinc1	equ	0xFE6
  5655                           postdec1	equ	0xFE5
  5656                           fsr1h	equ	0xFE2
  5657                           fsr1l	equ	0xFE1
  5658                           bsr	equ	0xFE0
  5659                           indf2	equ	0xFDF
  5660                           postinc2	equ	0xFDE
  5661                           postdec2	equ	0xFDD
  5662                           fsr2h	equ	0xFDA
  5663                           fsr2l	equ	0xFD9
  5664                           status	equ	0xFD8
  5665                           
  5666 ;; *************** function _Read1USART *****************
  5667 ;; Defined at:
  5668 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\u1read.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;		None
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  data            1    0[COMRAM] unsigned char 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      unsigned char 
  5675 ;; Registers used:
  5676 ;;		wreg, status,2, status,0
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5686 ;;Total ram usage:        1 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:    6
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_uart_recv_int_handler
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text30
  5697  001BC6                     __ptext30:
  5698                           	opt stack 0
  5699  001BC6                     _Read1USART:
  5700                           	opt stack 18
  5701                           
  5702                           ;incstack = 0
  5703  001BC6  0EF2               	movlw	242
  5704  001BC8  163E               	andwf	_USART1_Status,f,c
  5705  001BCA  ACAC               	btfss	4012,6,c	;volatile
  5706  001BCC  D003               	goto	i1l629
  5707  001BCE  903E               	bcf	_USART1_Status,0,c
  5708  001BD0  B0AC               	btfsc	4012,0,c	;volatile
  5709  001BD2  803E               	bsf	_USART1_Status,0,c
  5710  001BD4                     i1l629:
  5711  001BD4  B4AC               	btfsc	4012,2,c	;volatile
  5712  001BD6  843E               	bsf	_USART1_Status,2,c
  5713  001BD8  B2AC               	btfsc	4012,1,c	;volatile
  5714  001BDA  863E               	bsf	_USART1_Status,3,c
  5715  001BDC  CFAF F001          	movff	4015,Read1USART@data	;volatile
  5716  001BE0  5001               	movf	Read1USART@data,w,c
  5717  001BE2  0012               	return	
  5718  001BE4                     __end_of_Read1USART:
  5719                           	opt stack 0
  5720                           pclatu	equ	0xFFB
  5721                           pclath	equ	0xFFA
  5722                           tblptru	equ	0xFF8
  5723                           tblptrh	equ	0xFF7
  5724                           tblptrl	equ	0xFF6
  5725                           tablat	equ	0xFF5
  5726                           prodh	equ	0xFF4
  5727                           prodl	equ	0xFF3
  5728                           intcon	equ	0xFF2
  5729                           intcon2	equ	0xFF1
  5730                           postinc0	equ	0xFEE
  5731                           fsr0h	equ	0xFEA
  5732                           fsr0l	equ	0xFE9
  5733                           wreg	equ	0xFE8
  5734                           indf1	equ	0xFE7
  5735                           postinc1	equ	0xFE6
  5736                           postdec1	equ	0xFE5
  5737                           fsr1h	equ	0xFE2
  5738                           fsr1l	equ	0xFE1
  5739                           bsr	equ	0xFE0
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           postdec2	equ	0xFDD
  5743                           fsr2h	equ	0xFDA
  5744                           fsr2l	equ	0xFD9
  5745                           status	equ	0xFD8
  5746                           
  5747 ;; *************** function _timer1_int_handler *****************
  5748 ;; Defined at:
  5749 ;;		line 51 in file "../src/user_interrupts.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;		None
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;		None
  5754 ;; Return value:  Size  Location     Type
  5755 ;;		None               void
  5756 ;; Registers used:
  5757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5767 ;;Total ram usage:        1 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:    9
  5770 ;; This function calls:
  5771 ;;		_ToMainLow_sendmsg
  5772 ;;		_WriteTimer1
  5773 ;; This function is called by:
  5774 ;;		_InterruptHandlerLow
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text31
  5779  001A3C                     __ptext31:
  5780                           	opt stack 0
  5781  001A3C                     _timer1_int_handler:
  5782                           	opt stack 16
  5783                           
  5784                           ;user_interrupts.c: 59: t1Mult++;
  5785                           
  5786                           ;incstack = 0
  5787  001A3C  4A3B               	infsnz	_t1Mult,f,c
  5788  001A3E  2A3C               	incf	_t1Mult+1,f,c
  5789                           
  5790                           ;user_interrupts.c: 61: if(t1Mult == 2){
  5791  001A40  503B               	movf	_t1Mult,w,c
  5792  001A42  0A02               	xorlw	2
  5793  001A44  103C               	iorwf	_t1Mult+1,w,c
  5794  001A46  A4D8               	btfss	status,2,c
  5795  001A48  D00F               	goto	i1l3616
  5796                           
  5797                           ;user_interrupts.c: 62: ToMainLow_sendmsg(0, 11, (void *) 0);
  5798  001A4A  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5799  001A4C  0E0B               	movlw	11
  5800  001A4E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5801  001A50  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5802  001A52  0E00               	movlw	0
  5803  001A54  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5804  001A56  0E00               	movlw	0
  5805  001A58  6E18               	movwf	ToMainLow_sendmsg@data,c
  5806  001A5A  0E00               	movlw	0
  5807  001A5C  ECA1  F00D         	call	_ToMainLow_sendmsg
  5808                           
  5809                           ;user_interrupts.c: 63: t1Mult = 0;
  5810  001A60  0E00               	movlw	0
  5811  001A62  6E3C               	movwf	_t1Mult+1,c
  5812  001A64  0E00               	movlw	0
  5813  001A66  6E3B               	movwf	_t1Mult,c
  5814  001A68                     i1l3616:
  5815                           
  5816                           ;user_interrupts.c: 64: }
  5817                           ;user_interrupts.c: 67: WriteTimer1(0);
  5818  001A68  0E00               	movlw	0
  5819  001A6A  6E02               	movwf	WriteTimer1@timer1+1,c
  5820  001A6C  0E00               	movlw	0
  5821  001A6E  6E01               	movwf	WriteTimer1@timer1,c
  5822  001A70  EC24  F00E         	call	_WriteTimer1	;wreg free
  5823  001A74  0012               	return	
  5824  001A76                     __end_of_timer1_int_handler:
  5825                           	opt stack 0
  5826                           pclatu	equ	0xFFB
  5827                           pclath	equ	0xFFA
  5828                           tblptru	equ	0xFF8
  5829                           tblptrh	equ	0xFF7
  5830                           tblptrl	equ	0xFF6
  5831                           tablat	equ	0xFF5
  5832                           prodh	equ	0xFF4
  5833                           prodl	equ	0xFF3
  5834                           intcon	equ	0xFF2
  5835                           intcon2	equ	0xFF1
  5836                           postinc0	equ	0xFEE
  5837                           fsr0h	equ	0xFEA
  5838                           fsr0l	equ	0xFE9
  5839                           wreg	equ	0xFE8
  5840                           indf1	equ	0xFE7
  5841                           postinc1	equ	0xFE6
  5842                           postdec1	equ	0xFE5
  5843                           fsr1h	equ	0xFE2
  5844                           fsr1l	equ	0xFE1
  5845                           bsr	equ	0xFE0
  5846                           indf2	equ	0xFDF
  5847                           postinc2	equ	0xFDE
  5848                           postdec2	equ	0xFDD
  5849                           fsr2h	equ	0xFDA
  5850                           fsr2l	equ	0xFD9
  5851                           status	equ	0xFD8
  5852                           
  5853 ;; *************** function _WriteTimer1 *****************
  5854 ;; Defined at:
  5855 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;  timer1          2    0[COMRAM] unsigned int 
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;  timer           2    2[COMRAM] struct Timers
  5860 ;; Return value:  Size  Location     Type
  5861 ;;		None               void
  5862 ;; Registers used:
  5863 ;;		None
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5872 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5873 ;;Total ram usage:        4 bytes
  5874 ;; Hardware stack levels used:    1
  5875 ;; Hardware stack levels required when called:    6
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_timer1_int_handler
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text32
  5884  001C48                     __ptext32:
  5885                           	opt stack 0
  5886  001C48                     _WriteTimer1:
  5887                           	opt stack 18
  5888                           
  5889                           ;incstack = 0
  5890  001C48  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5891  001C4C  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5892  001C50  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5893  001C54  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5894  001C58  0012               	return	
  5895  001C5A                     __end_of_WriteTimer1:
  5896                           	opt stack 0
  5897                           pclatu	equ	0xFFB
  5898                           pclath	equ	0xFFA
  5899                           tblptru	equ	0xFF8
  5900                           tblptrh	equ	0xFF7
  5901                           tblptrl	equ	0xFF6
  5902                           tablat	equ	0xFF5
  5903                           prodh	equ	0xFF4
  5904                           prodl	equ	0xFF3
  5905                           intcon	equ	0xFF2
  5906                           intcon2	equ	0xFF1
  5907                           postinc0	equ	0xFEE
  5908                           fsr0h	equ	0xFEA
  5909                           fsr0l	equ	0xFE9
  5910                           wreg	equ	0xFE8
  5911                           indf1	equ	0xFE7
  5912                           postinc1	equ	0xFE6
  5913                           postdec1	equ	0xFE5
  5914                           fsr1h	equ	0xFE2
  5915                           fsr1l	equ	0xFE1
  5916                           bsr	equ	0xFE0
  5917                           indf2	equ	0xFDF
  5918                           postinc2	equ	0xFDE
  5919                           postdec2	equ	0xFDD
  5920                           fsr2h	equ	0xFDA
  5921                           fsr2l	equ	0xFD9
  5922                           status	equ	0xFD8
  5923                           
  5924 ;; *************** function _ToMainLow_sendmsg *****************
  5925 ;; Defined at:
  5926 ;;		line 103 in file "../src/messages.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  length          1    wreg     unsigned char 
  5929 ;;  msgtype         1   22[COMRAM] unsigned char 
  5930 ;;  data            2   23[COMRAM] PTR void 
  5931 ;;		 -> NULL(0), main@uc(15), 
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;  length          1   25[COMRAM] unsigned char 
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  1    wreg      char 
  5936 ;; Registers used:
  5937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5943 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5946 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5947 ;;Total ram usage:        4 bytes
  5948 ;; Hardware stack levels used:    1
  5949 ;; Hardware stack levels required when called:    8
  5950 ;; This function calls:
  5951 ;;		_send_msg
  5952 ;; This function is called by:
  5953 ;;		_uart_recv_int_handler
  5954 ;;		_timer1_int_handler
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text33
  5959  001B42                     __ptext33:
  5960                           	opt stack 0
  5961  001B42                     _ToMainLow_sendmsg:
  5962                           	opt stack 16
  5963                           
  5964                           ;incstack = 0
  5965                           ;ToMainLow_sendmsg@length stored from wreg
  5966  001B42  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5967                           
  5968                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5969                           ;	Return value of _ToMainLow_sendmsg is never used
  5970  001B46  0101               	movlb	1	; () banked
  5971  001B48  0E01               	movlw	high _ToMainLow_MQ
  5972  001B4A  6E0C               	movwf	send_msg@qptr+1,c
  5973  001B4C  0101               	movlb	1	; () banked
  5974  001B4E  0E43               	movlw	low _ToMainLow_MQ
  5975  001B50  6E0B               	movwf	send_msg@qptr,c
  5976  001B52  C01A  F00D         	movff	ToMainLow_sendmsg@length,send_msg@length
  5977  001B56  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  5978  001B5A  C019  F010         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  5979  001B5E  C018  F00F         	movff	ToMainLow_sendmsg@data,send_msg@data
  5980  001B62  EC3D  F008         	call	_send_msg	;wreg free
  5981  001B66  0012               	return	
  5982  001B68                     __end_of_ToMainLow_sendmsg:
  5983                           	opt stack 0
  5984                           pclatu	equ	0xFFB
  5985                           pclath	equ	0xFFA
  5986                           tblptru	equ	0xFF8
  5987                           tblptrh	equ	0xFF7
  5988                           tblptrl	equ	0xFF6
  5989                           tablat	equ	0xFF5
  5990                           prodh	equ	0xFF4
  5991                           prodl	equ	0xFF3
  5992                           intcon	equ	0xFF2
  5993                           intcon2	equ	0xFF1
  5994                           postinc0	equ	0xFEE
  5995                           fsr0h	equ	0xFEA
  5996                           fsr0l	equ	0xFE9
  5997                           wreg	equ	0xFE8
  5998                           indf1	equ	0xFE7
  5999                           postinc1	equ	0xFE6
  6000                           postdec1	equ	0xFE5
  6001                           fsr1h	equ	0xFE2
  6002                           fsr1l	equ	0xFE1
  6003                           bsr	equ	0xFE0
  6004                           indf2	equ	0xFDF
  6005                           postinc2	equ	0xFDE
  6006                           postdec2	equ	0xFDD
  6007                           fsr2h	equ	0xFDA
  6008                           fsr2l	equ	0xFD9
  6009                           status	equ	0xFD8
  6010                           
  6011 ;; *************** function _send_msg *****************
  6012 ;; Defined at:
  6013 ;;		line 24 in file "../src/messages.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6016 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6017 ;;  length          1   12[COMRAM] unsigned char 
  6018 ;;  msgtype         1   13[COMRAM] unsigned char 
  6019 ;;  data            2   14[COMRAM] PTR void 
  6020 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), main@uc(15), 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  6023 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6024 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6025 ;;  tlength         2   17[COMRAM] unsigned int 
  6026 ;;  slot            1   19[COMRAM] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  1    wreg      char 
  6029 ;; Registers used:
  6030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6036 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6037 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6039 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6040 ;;Total ram usage:       12 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    7
  6043 ;; This function calls:
  6044 ;;		i1___awmod
  6045 ;;		i1_memcpy
  6046 ;; This function is called by:
  6047 ;;		_ToMainLow_sendmsg
  6048 ;;		_FromMainLow_sendmsg
  6049 ;;		_FromMainHigh_sendmsg
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text34
  6054  00107A                     __ptext34:
  6055                           	opt stack 0
  6056  00107A                     _send_msg:
  6057                           	opt stack 16
  6058                           
  6059                           ;messages.c: 25: unsigned char slot;
  6060                           ;messages.c: 27: msg *qmsg;
  6061                           ;messages.c: 28: size_t tlength = length;
  6062                           
  6063                           ;incstack = 0
  6064  00107A  C00D  F012         	movff	send_msg@length,send_msg@tlength
  6065  00107E  6A13               	clrf	send_msg@tlength+1,c
  6066                           
  6067                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6068  001080  EE20 F041          	lfsr	2,65
  6069  001084  500B               	movf	send_msg@qptr,w,c
  6070  001086  26D9               	addwf	fsr2l,f,c
  6071  001088  500C               	movf	send_msg@qptr+1,w,c
  6072  00108A  22DA               	addwfc	fsr2h,f,c
  6073  00108C  50DF               	movf	indf2,w,c
  6074  00108E  6E14               	movwf	send_msg@slot,c
  6075                           
  6076                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6077  001090  5014               	movf	send_msg@slot,w,c
  6078  001092  0D0D               	mullw	13
  6079  001094  50F3               	movf	prodl,w,c
  6080  001096  240B               	addwf	send_msg@qptr,w,c
  6081  001098  6E15               	movwf	send_msg@qmsg,c
  6082  00109A  50F4               	movf	prodh,w,c
  6083  00109C  200C               	addwfc	send_msg@qptr+1,w,c
  6084  00109E  6E16               	movwf	send_msg@qmsg+1,c
  6085                           
  6086                           ;messages.c: 41: if (qmsg->full != 0) {
  6087  0010A0  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  6088  0010A4  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  6089  0010A8  50DF               	movf	indf2,w,c
  6090  0010AA  B4D8               	btfsc	status,2,c
  6091  0010AC  D002               	goto	i1l3592
  6092                           
  6093                           ;messages.c: 42: return (-1);
  6094  0010AE  0EFF               	movlw	255
  6095  0010B0  0012               	return	
  6096  0010B2                     i1l3592:
  6097                           
  6098                           ;messages.c: 43: }
  6099                           ;messages.c: 46: qmsg->length = length;
  6100  0010B2  EE20 F001          	lfsr	2,1
  6101  0010B6  5015               	movf	send_msg@qmsg,w,c
  6102  0010B8  26D9               	addwf	fsr2l,f,c
  6103  0010BA  5016               	movf	send_msg@qmsg+1,w,c
  6104  0010BC  22DA               	addwfc	fsr2h,f,c
  6105  0010BE  C00D  FFDF         	movff	send_msg@length,indf2
  6106                           
  6107                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6108  0010C2  EE20 F002          	lfsr	2,2
  6109  0010C6  5015               	movf	send_msg@qmsg,w,c
  6110  0010C8  26D9               	addwf	fsr2l,f,c
  6111  0010CA  5016               	movf	send_msg@qmsg+1,w,c
  6112  0010CC  22DA               	addwfc	fsr2h,f,c
  6113  0010CE  C00E  FFDF         	movff	send_msg@msgtype,indf2
  6114                           
  6115                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6116  0010D2  0E03               	movlw	3
  6117  0010D4  2415               	addwf	send_msg@qmsg,w,c
  6118  0010D6  6E01               	movwf	i1memcpy@d1,c
  6119  0010D8  0E00               	movlw	0
  6120  0010DA  2016               	addwfc	send_msg@qmsg+1,w,c
  6121  0010DC  6E02               	movwf	i1memcpy@d1+1,c
  6122  0010DE  C010  F004         	movff	send_msg@data+1,i1memcpy@s1+1
  6123  0010E2  C00F  F003         	movff	send_msg@data,i1memcpy@s1
  6124  0010E6  C012  F005         	movff	send_msg@tlength,i1memcpy@n
  6125  0010EA  C013  F006         	movff	send_msg@tlength+1,i1memcpy@n+1
  6126  0010EE  ECFE  F00C         	call	i1_memcpy	;wreg free
  6127                           
  6128                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6129  0010F2  EE20 F041          	lfsr	2,65
  6130  0010F6  500B               	movf	send_msg@qptr,w,c
  6131  0010F8  26D9               	addwf	fsr2l,f,c
  6132  0010FA  500C               	movf	send_msg@qptr+1,w,c
  6133  0010FC  22DA               	addwfc	fsr2h,f,c
  6134  0010FE  EE10 F041          	lfsr	1,65
  6135  001102  500B               	movf	send_msg@qptr,w,c
  6136  001104  26E1               	addwf	fsr1l,f,c
  6137  001106  500C               	movf	send_msg@qptr+1,w,c
  6138  001108  22E2               	addwfc	fsr1h,f,c
  6139  00110A  50E7               	movf	indf1,w,c
  6140  00110C  6E11               	movwf	??_send_msg& (0+255),c
  6141  00110E  0E01               	movlw	1
  6142  001110  2411               	addwf	??_send_msg,w,c
  6143  001112  6E01               	movwf	i1___awmod@dividend,c
  6144  001114  6A02               	clrf	i1___awmod@dividend+1,c
  6145  001116  0E00               	movlw	0
  6146  001118  2202               	addwfc	i1___awmod@dividend+1,f,c
  6147  00111A  0E00               	movlw	0
  6148  00111C  6E04               	movwf	i1___awmod@divisor+1,c
  6149  00111E  0E05               	movlw	5
  6150  001120  6E03               	movwf	i1___awmod@divisor,c
  6151  001122  EC47  F009         	call	i1___awmod	;wreg free
  6152  001126  5001               	movf	?i1___awmod,w,c
  6153  001128  6EDF               	movwf	indf2,c
  6154                           
  6155                           ;messages.c: 59: qmsg->full = 1;
  6156  00112A  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  6157  00112E  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  6158  001132  0E01               	movlw	1
  6159  001134  6EDF               	movwf	indf2,c
  6160                           
  6161                           ;messages.c: 60: return (1);
  6162  001136  0E01               	movlw	1
  6163  001138  0012               	return	
  6164  00113A                     __end_of_send_msg:
  6165                           	opt stack 0
  6166                           pclatu	equ	0xFFB
  6167                           pclath	equ	0xFFA
  6168                           tblptru	equ	0xFF8
  6169                           tblptrh	equ	0xFF7
  6170                           tblptrl	equ	0xFF6
  6171                           tablat	equ	0xFF5
  6172                           prodh	equ	0xFF4
  6173                           prodl	equ	0xFF3
  6174                           intcon	equ	0xFF2
  6175                           intcon2	equ	0xFF1
  6176                           postinc0	equ	0xFEE
  6177                           fsr0h	equ	0xFEA
  6178                           fsr0l	equ	0xFE9
  6179                           wreg	equ	0xFE8
  6180                           indf1	equ	0xFE7
  6181                           postinc1	equ	0xFE6
  6182                           postdec1	equ	0xFE5
  6183                           fsr1h	equ	0xFE2
  6184                           fsr1l	equ	0xFE1
  6185                           bsr	equ	0xFE0
  6186                           indf2	equ	0xFDF
  6187                           postinc2	equ	0xFDE
  6188                           postdec2	equ	0xFDD
  6189                           fsr2h	equ	0xFDA
  6190                           fsr2l	equ	0xFD9
  6191                           status	equ	0xFD8
  6192                           
  6193 ;; *************** function i1_memcpy *****************
  6194 ;; Defined at:
  6195 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;  d1              2    0[COMRAM] PTR void 
  6198 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6199 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6200 ;;		 -> main@msgbuffer(11), 
  6201 ;;  s1              2    2[COMRAM] PTR const void 
  6202 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6203 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6204 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6205 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  6206 ;;  n               2    4[COMRAM] unsigned int 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6209 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6210 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6211 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6212 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  6213 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6214 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6215 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6216 ;;		 -> main@msgbuffer(11), 
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  2    0[COMRAM] PTR void 
  6219 ;; Registers used:
  6220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6226 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6227 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6229 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6230 ;;Total ram usage:       10 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:    6
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_send_msg
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text35
  6241  0019FC                     __ptext35:
  6242                           	opt stack 0
  6243  0019FC                     i1_memcpy:
  6244                           	opt stack 16
  6245                           
  6246                           ;incstack = 0
  6247  0019FC  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6248  001A00  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6249  001A04  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6250  001A08  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6251  001A0C  D00E               	goto	i1l3496
  6252  001A0E                     i1l3490:
  6253  001A0E  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6254  001A12  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6255  001A16  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6256  001A1A  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6257  001A1E  CFDF FFE7          	movff	indf2,indf1
  6258  001A22  4A09               	infsnz	i1memcpy@s,f,c
  6259  001A24  2A0A               	incf	i1memcpy@s+1,f,c
  6260  001A26  4A07               	infsnz	i1memcpy@d,f,c
  6261  001A28  2A08               	incf	i1memcpy@d+1,f,c
  6262  001A2A                     i1l3496:
  6263  001A2A  0605               	decf	i1memcpy@n,f,c
  6264  001A2C  A0D8               	btfss	status,0,c
  6265  001A2E  0606               	decf	i1memcpy@n+1,f,c
  6266  001A30  2805               	incf	i1memcpy@n& (0+255),w,c
  6267  001A32  B4D8               	btfsc	status,2,c
  6268  001A34  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6269  001A36  B4D8               	btfsc	status,2,c
  6270                           
  6271                           ;	Return value of i1_memcpy is never used
  6272  001A38  0012               	return	
  6273  001A3A  D7E9               	goto	i1l3490
  6274  001A3C                     __end_ofi1_memcpy:
  6275                           	opt stack 0
  6276                           pclatu	equ	0xFFB
  6277                           pclath	equ	0xFFA
  6278                           tblptru	equ	0xFF8
  6279                           tblptrh	equ	0xFF7
  6280                           tblptrl	equ	0xFF6
  6281                           tablat	equ	0xFF5
  6282                           prodh	equ	0xFF4
  6283                           prodl	equ	0xFF3
  6284                           intcon	equ	0xFF2
  6285                           intcon2	equ	0xFF1
  6286                           postinc0	equ	0xFEE
  6287                           fsr0h	equ	0xFEA
  6288                           fsr0l	equ	0xFE9
  6289                           wreg	equ	0xFE8
  6290                           indf1	equ	0xFE7
  6291                           postinc1	equ	0xFE6
  6292                           postdec1	equ	0xFE5
  6293                           fsr1h	equ	0xFE2
  6294                           fsr1l	equ	0xFE1
  6295                           bsr	equ	0xFE0
  6296                           indf2	equ	0xFDF
  6297                           postinc2	equ	0xFDE
  6298                           postdec2	equ	0xFDD
  6299                           fsr2h	equ	0xFDA
  6300                           fsr2l	equ	0xFD9
  6301                           status	equ	0xFD8
  6302                           
  6303 ;; *************** function i1___awmod *****************
  6304 ;; Defined at:
  6305 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  dividend        2    0[COMRAM] int 
  6308 ;;  divisor         2    2[COMRAM] int 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  __awmod         1    6[COMRAM] unsigned char 
  6311 ;;  __awmod         1    5[COMRAM] unsigned char 
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  2    0[COMRAM] int 
  6314 ;; Registers used:
  6315 ;;		wreg, status,2, status,0, prodl
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6322 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6324 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6325 ;;Total ram usage:        7 bytes
  6326 ;; Hardware stack levels used:    1
  6327 ;; Hardware stack levels required when called:    6
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_send_msg
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text36
  6336  00128E                     __ptext36:
  6337                           	opt stack 0
  6338  00128E                     i1___awmod:
  6339                           	opt stack 16
  6340                           
  6341                           ;incstack = 0
  6342  00128E  6E05               	movwf	??i1___awmod& (0+255),c
  6343  001290  0E00               	movlw	0
  6344  001292  6E07               	movwf	i1___awmod@sign,c
  6345  001294  5005               	movf	??i1___awmod& (0+255),w,c
  6346  001296  5002               	movf	i1___awmod@dividend+1,w,c
  6347  001298  0A80               	xorlw	128
  6348  00129A  6EF3               	movwf	prodl,c
  6349  00129C  0E80               	movlw	128
  6350  00129E  5CF3               	subwf	prodl,w,c
  6351  0012A0  0E00               	movlw	0
  6352  0012A2  B4D8               	btfsc	status,2,c
  6353  0012A4  5C01               	subwf	i1___awmod@dividend,w,c
  6354  0012A6  B0D8               	btfsc	status,0,c
  6355  0012A8  D008               	goto	i1l3516
  6356  0012AA  6C01               	negf	i1___awmod@dividend,c
  6357  0012AC  1E02               	comf	i1___awmod@dividend+1,f,c
  6358  0012AE  B0D8               	btfsc	status,0,c
  6359  0012B0  2A02               	incf	i1___awmod@dividend+1,f,c
  6360  0012B2  6E05               	movwf	??i1___awmod& (0+255),c
  6361  0012B4  0E01               	movlw	1
  6362  0012B6  6E07               	movwf	i1___awmod@sign,c
  6363  0012B8  5005               	movf	??i1___awmod& (0+255),w,c
  6364  0012BA                     i1l3516:
  6365  0012BA  5004               	movf	i1___awmod@divisor+1,w,c
  6366  0012BC  0A80               	xorlw	128
  6367  0012BE  6EF3               	movwf	prodl,c
  6368  0012C0  0E80               	movlw	128
  6369  0012C2  5CF3               	subwf	prodl,w,c
  6370  0012C4  0E00               	movlw	0
  6371  0012C6  B4D8               	btfsc	status,2,c
  6372  0012C8  5C03               	subwf	i1___awmod@divisor,w,c
  6373  0012CA  B0D8               	btfsc	status,0,c
  6374  0012CC  D004               	goto	i1l3520
  6375  0012CE  6C03               	negf	i1___awmod@divisor,c
  6376  0012D0  1E04               	comf	i1___awmod@divisor+1,f,c
  6377  0012D2  B0D8               	btfsc	status,0,c
  6378  0012D4  2A04               	incf	i1___awmod@divisor+1,f,c
  6379  0012D6                     i1l3520:
  6380  0012D6  5004               	movf	i1___awmod@divisor+1,w,c
  6381  0012D8  1003               	iorwf	i1___awmod@divisor,w,c
  6382  0012DA  B4D8               	btfsc	status,2,c
  6383  0012DC  D01A               	goto	i1l3536
  6384  0012DE  6E05               	movwf	??i1___awmod& (0+255),c
  6385  0012E0  0E01               	movlw	1
  6386  0012E2  6E06               	movwf	i1___awmod@counter,c
  6387  0012E4  5005               	movf	??i1___awmod& (0+255),w,c
  6388  0012E6  D004               	goto	i1l3526
  6389  0012E8                     i1l3524:
  6390  0012E8  90D8               	bcf	status,0,c
  6391  0012EA  3603               	rlcf	i1___awmod@divisor,f,c
  6392  0012EC  3604               	rlcf	i1___awmod@divisor+1,f,c
  6393  0012EE  2A06               	incf	i1___awmod@counter,f,c
  6394  0012F0                     i1l3526:
  6395  0012F0  AE04               	btfss	i1___awmod@divisor+1,7,c
  6396  0012F2  D7FA               	goto	i1l3524
  6397  0012F4                     i1l3528:
  6398  0012F4  5003               	movf	i1___awmod@divisor,w,c
  6399  0012F6  5C01               	subwf	i1___awmod@dividend,w,c
  6400  0012F8  5004               	movf	i1___awmod@divisor+1,w,c
  6401  0012FA  5802               	subwfb	i1___awmod@dividend+1,w,c
  6402  0012FC  A0D8               	btfss	status,0,c
  6403  0012FE  D004               	goto	i1l3532
  6404  001300  5003               	movf	i1___awmod@divisor,w,c
  6405  001302  5E01               	subwf	i1___awmod@dividend,f,c
  6406  001304  5004               	movf	i1___awmod@divisor+1,w,c
  6407  001306  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6408  001308                     i1l3532:
  6409  001308  90D8               	bcf	status,0,c
  6410  00130A  3204               	rrcf	i1___awmod@divisor+1,f,c
  6411  00130C  3203               	rrcf	i1___awmod@divisor,f,c
  6412  00130E  2E06               	decfsz	i1___awmod@counter,f,c
  6413  001310  D7F1               	goto	i1l3528
  6414  001312                     i1l3536:
  6415  001312  5007               	movf	i1___awmod@sign,w,c
  6416  001314  B4D8               	btfsc	status,2,c
  6417  001316  D004               	goto	i1l3540
  6418  001318  6C01               	negf	i1___awmod@dividend,c
  6419  00131A  1E02               	comf	i1___awmod@dividend+1,f,c
  6420  00131C  B0D8               	btfsc	status,0,c
  6421  00131E  2A02               	incf	i1___awmod@dividend+1,f,c
  6422  001320                     i1l3540:
  6423  001320  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6424  001324  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6425  001328  0012               	return	
  6426  00132A                     __end_ofi1___awmod:
  6427                           	opt stack 0
  6428                           pclatu	equ	0xFFB
  6429                           pclath	equ	0xFFA
  6430                           tblptru	equ	0xFF8
  6431                           tblptrh	equ	0xFF7
  6432                           tblptrl	equ	0xFF6
  6433                           tablat	equ	0xFF5
  6434                           prodh	equ	0xFF4
  6435                           prodl	equ	0xFF3
  6436                           intcon	equ	0xFF2
  6437                           intcon2	equ	0xFF1
  6438                           postinc0	equ	0xFEE
  6439                           fsr0h	equ	0xFEA
  6440                           fsr0l	equ	0xFE9
  6441                           wreg	equ	0xFE8
  6442                           indf1	equ	0xFE7
  6443                           postinc1	equ	0xFE6
  6444                           postdec1	equ	0xFE5
  6445                           fsr1h	equ	0xFE2
  6446                           fsr1l	equ	0xFE1
  6447                           bsr	equ	0xFE0
  6448                           indf2	equ	0xFDF
  6449                           postinc2	equ	0xFDE
  6450                           postdec2	equ	0xFDD
  6451                           fsr2h	equ	0xFDA
  6452                           fsr2l	equ	0xFD9
  6453                           status	equ	0xFD8
  6454                           
  6455 ;; *************** function _adc_int_handler *****************
  6456 ;; Defined at:
  6457 ;;		line 70 in file "../src/user_interrupts.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;		None
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;		None
  6462 ;; Return value:  Size  Location     Type
  6463 ;;		None               void
  6464 ;; Registers used:
  6465 ;;		None
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6475 ;;Total ram usage:        0 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    6
  6478 ;; This function calls:
  6479 ;;		Nothing
  6480 ;; This function is called by:
  6481 ;;		_InterruptHandlerLow
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text37
  6486  001CAE                     __ptext37:
  6487                           	opt stack 0
  6488  001CAE                     _adc_int_handler:
  6489                           	opt stack 19
  6490                           
  6491                           ;incstack = 0
  6492  001CAE  0012               	return	
  6493  001CB0                     __end_of_adc_int_handler:
  6494                           	opt stack 0
  6495                           pclatu	equ	0xFFB
  6496                           pclath	equ	0xFFA
  6497                           tblptru	equ	0xFF8
  6498                           tblptrh	equ	0xFF7
  6499                           tblptrl	equ	0xFF6
  6500                           tablat	equ	0xFF5
  6501                           prodh	equ	0xFF4
  6502                           prodl	equ	0xFF3
  6503                           intcon	equ	0xFF2
  6504                           intcon2	equ	0xFF1
  6505                           postinc0	equ	0xFEE
  6506                           fsr0h	equ	0xFEA
  6507                           fsr0l	equ	0xFE9
  6508                           wreg	equ	0xFE8
  6509                           indf1	equ	0xFE7
  6510                           postinc1	equ	0xFE6
  6511                           postdec1	equ	0xFE5
  6512                           fsr1h	equ	0xFE2
  6513                           fsr1l	equ	0xFE1
  6514                           bsr	equ	0xFE0
  6515                           indf2	equ	0xFDF
  6516                           postinc2	equ	0xFDE
  6517                           postdec2	equ	0xFDD
  6518                           fsr2h	equ	0xFDA
  6519                           fsr2l	equ	0xFD9
  6520                           status	equ	0xFD8
  6521                           
  6522 ;; *************** function _InterruptHandlerHigh *****************
  6523 ;; Defined at:
  6524 ;;		line 84 in file "../src/interrupts.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;		None
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;		None
  6529 ;; Return value:  Size  Location     Type
  6530 ;;		None               void
  6531 ;; Registers used:
  6532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6540 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6541 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6542 ;;Total ram usage:       14 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:    5
  6545 ;; This function calls:
  6546 ;;		_SleepIfOkay
  6547 ;;		_i2c_int_handler
  6548 ;;		_timer0_int_handler
  6549 ;; This function is called by:
  6550 ;;		Interrupt level 2
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	intcode
  6555  000008                     __pintcode:
  6556                           	opt stack 0
  6557  000008                     _InterruptHandlerHigh:
  6558                           	opt stack 16
  6559                           
  6560                           ;incstack = 0
  6561  000008  CFFA F07F          	movff	pclath,??_InterruptHandlerHigh
  6562  00000C  CFFB F080          	movff	pclatu,??_InterruptHandlerHigh+1
  6563  000010  EF95  F009         	goto	int_func
  6564                           pclatu	equ	0xFFB
  6565                           pclath	equ	0xFFA
  6566                           tblptru	equ	0xFF8
  6567                           tblptrh	equ	0xFF7
  6568                           tblptrl	equ	0xFF6
  6569                           tablat	equ	0xFF5
  6570                           prodh	equ	0xFF4
  6571                           prodl	equ	0xFF3
  6572                           intcon	equ	0xFF2
  6573                           intcon2	equ	0xFF1
  6574                           postinc0	equ	0xFEE
  6575                           fsr0h	equ	0xFEA
  6576                           fsr0l	equ	0xFE9
  6577                           wreg	equ	0xFE8
  6578                           indf1	equ	0xFE7
  6579                           postinc1	equ	0xFE6
  6580                           postdec1	equ	0xFE5
  6581                           fsr1h	equ	0xFE2
  6582                           fsr1l	equ	0xFE1
  6583                           bsr	equ	0xFE0
  6584                           indf2	equ	0xFDF
  6585                           postinc2	equ	0xFDE
  6586                           postdec2	equ	0xFDD
  6587                           fsr2h	equ	0xFDA
  6588                           fsr2l	equ	0xFD9
  6589                           status	equ	0xFD8
  6590                           
  6591                           	psect	intcode_body
  6592  00132A                     __pintcode_body:
  6593                           	opt stack 16
  6594  00132A                     int_func:
  6595                           	opt stack 16
  6596  00132A  CFE9 F081          	movff	fsr0l,??_InterruptHandlerHigh+2
  6597  00132E  CFEA F082          	movff	fsr0h,??_InterruptHandlerHigh+3
  6598  001332  CFE1 F083          	movff	fsr1l,??_InterruptHandlerHigh+4
  6599  001336  CFE2 F084          	movff	fsr1h,??_InterruptHandlerHigh+5
  6600  00133A  CFD9 F085          	movff	fsr2l,??_InterruptHandlerHigh+6
  6601  00133E  CFDA F086          	movff	fsr2h,??_InterruptHandlerHigh+7
  6602  001342  CFF3 F087          	movff	prodl,??_InterruptHandlerHigh+8
  6603  001346  CFF4 F088          	movff	prodh,??_InterruptHandlerHigh+9
  6604  00134A  CFF6 F089          	movff	tblptrl,??_InterruptHandlerHigh+10
  6605  00134E  CFF7 F08A          	movff	tblptrh,??_InterruptHandlerHigh+11
  6606  001352  CFF8 F08B          	movff	tblptru,??_InterruptHandlerHigh+12
  6607  001356  CFF5 F08C          	movff	tablat,??_InterruptHandlerHigh+13
  6608                           
  6609                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6610  00135A  A69E               	btfss	3998,3,c	;volatile
  6611  00135C  D003               	goto	i2l3672
  6612                           
  6613                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6614  00135E  969E               	bcf	3998,3,c	;volatile
  6615                           
  6616                           ;interrupts.c: 94: i2c_int_handler();
  6617  001360  EC51  F00E         	call	_i2c_int_handler	;wreg free
  6618  001364                     i2l3672:
  6619                           
  6620                           ;interrupts.c: 96: }
  6621                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  6622  001364  A4F2               	btfss	intcon,2,c	;volatile
  6623  001366  D003               	goto	i2l3678
  6624                           
  6625                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  6626  001368  94F2               	bcf	intcon,2,c	;volatile
  6627                           
  6628                           ;interrupts.c: 103: timer0_int_handler();
  6629  00136A  ECF2  F00D         	call	_timer0_int_handler	;wreg free
  6630  00136E                     i2l3678:
  6631                           
  6632                           ;interrupts.c: 104: }
  6633                           ;interrupts.c: 113: SleepIfOkay();
  6634  00136E  EC3B  F00B         	call	_SleepIfOkay	;wreg free
  6635  001372  C08C  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6636  001376  C08B  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6637  00137A  C08A  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6638  00137E  C089  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6639  001382  C088  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6640  001386  C087  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6641  00138A  C086  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6642  00138E  C085  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6643  001392  C084  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6644  001396  C083  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6645  00139A  C082  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6646  00139E  C081  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6647  0013A2  C080  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6648  0013A6  C07F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6649  0013AA  0011               	retfie		f
  6650  0013AC                     __end_of_InterruptHandlerHigh:
  6651                           	opt stack 0
  6652                           pclatu	equ	0xFFB
  6653                           pclath	equ	0xFFA
  6654                           tblptru	equ	0xFF8
  6655                           tblptrh	equ	0xFF7
  6656                           tblptrl	equ	0xFF6
  6657                           tablat	equ	0xFF5
  6658                           prodh	equ	0xFF4
  6659                           prodl	equ	0xFF3
  6660                           intcon	equ	0xFF2
  6661                           intcon2	equ	0xFF1
  6662                           postinc0	equ	0xFEE
  6663                           fsr0h	equ	0xFEA
  6664                           fsr0l	equ	0xFE9
  6665                           wreg	equ	0xFE8
  6666                           indf1	equ	0xFE7
  6667                           postinc1	equ	0xFE6
  6668                           postdec1	equ	0xFE5
  6669                           fsr1h	equ	0xFE2
  6670                           fsr1l	equ	0xFE1
  6671                           bsr	equ	0xFE0
  6672                           indf2	equ	0xFDF
  6673                           postinc2	equ	0xFDE
  6674                           postdec2	equ	0xFDD
  6675                           fsr2h	equ	0xFDA
  6676                           fsr2l	equ	0xFD9
  6677                           status	equ	0xFD8
  6678                           
  6679 ;; *************** function _timer0_int_handler *****************
  6680 ;; Defined at:
  6681 ;;		line 16 in file "../src/user_interrupts.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;		None               void
  6688 ;; Registers used:
  6689 ;;		wreg, status,2, status,0, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:    1
  6702 ;; This function calls:
  6703 ;;		_WriteTimer0
  6704 ;; This function is called by:
  6705 ;;		_InterruptHandlerHigh
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           	psect	text39
  6710  001BE4                     __ptext39:
  6711                           	opt stack 0
  6712  001BE4                     _timer0_int_handler:
  6713                           	opt stack 19
  6714                           
  6715                           ;user_interrupts.c: 17: WriteTimer0(0);
  6716                           
  6717                           ;incstack = 0
  6718  001BE4  0E00               	movlw	0
  6719  001BE6  0100               	movlb	0	; () banked
  6720  001BE8  0100               	movlb	0	; () banked
  6721  001BEA  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6722  001BEC  0E00               	movlw	0
  6723  001BEE  0100               	movlb	0	; () banked
  6724  001BF0  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  6725  001BF2  EC2D  F00E         	call	_WriteTimer0	;wreg free
  6726                           
  6727                           ;user_interrupts.c: 33: UART_timeout++;
  6728  001BF6  4A39               	infsnz	_UART_timeout,f,c
  6729  001BF8  2A3A               	incf	_UART_timeout+1,f,c
  6730  001BFA  0012               	return	
  6731  001BFC                     __end_of_timer0_int_handler:
  6732                           	opt stack 0
  6733                           pclatu	equ	0xFFB
  6734                           pclath	equ	0xFFA
  6735                           tblptru	equ	0xFF8
  6736                           tblptrh	equ	0xFF7
  6737                           tblptrl	equ	0xFF6
  6738                           tablat	equ	0xFF5
  6739                           prodh	equ	0xFF4
  6740                           prodl	equ	0xFF3
  6741                           intcon	equ	0xFF2
  6742                           intcon2	equ	0xFF1
  6743                           postinc0	equ	0xFEE
  6744                           fsr0h	equ	0xFEA
  6745                           fsr0l	equ	0xFE9
  6746                           wreg	equ	0xFE8
  6747                           indf1	equ	0xFE7
  6748                           postinc1	equ	0xFE6
  6749                           postdec1	equ	0xFE5
  6750                           fsr1h	equ	0xFE2
  6751                           fsr1l	equ	0xFE1
  6752                           bsr	equ	0xFE0
  6753                           indf2	equ	0xFDF
  6754                           postinc2	equ	0xFDE
  6755                           postdec2	equ	0xFDD
  6756                           fsr2h	equ	0xFDA
  6757                           fsr2l	equ	0xFD9
  6758                           status	equ	0xFD8
  6759                           
  6760 ;; *************** function _WriteTimer0 *****************
  6761 ;; Defined at:
  6762 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;  timer0          2    0[BANK0 ] unsigned int 
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;  timer           2    2[BANK0 ] struct Timers
  6767 ;; Return value:  Size  Location     Type
  6768 ;;		None               void
  6769 ;; Registers used:
  6770 ;;		None
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6776 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6777 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6779 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6780 ;;Total ram usage:        4 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		_timer0_int_handler
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	text40
  6790  001C5A                     __ptext40:
  6791                           	opt stack 0
  6792  001C5A                     _WriteTimer0:
  6793                           	opt stack 19
  6794                           
  6795                           ;incstack = 0
  6796  001C5A  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6797  001C5E  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6798  001C62  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6799  001C66  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6800  001C6A  0012               	return	
  6801  001C6C                     __end_of_WriteTimer0:
  6802                           	opt stack 0
  6803                           pclatu	equ	0xFFB
  6804                           pclath	equ	0xFFA
  6805                           tblptru	equ	0xFF8
  6806                           tblptrh	equ	0xFF7
  6807                           tblptrl	equ	0xFF6
  6808                           tablat	equ	0xFF5
  6809                           prodh	equ	0xFF4
  6810                           prodl	equ	0xFF3
  6811                           intcon	equ	0xFF2
  6812                           intcon2	equ	0xFF1
  6813                           postinc0	equ	0xFEE
  6814                           fsr0h	equ	0xFEA
  6815                           fsr0l	equ	0xFE9
  6816                           wreg	equ	0xFE8
  6817                           indf1	equ	0xFE7
  6818                           postinc1	equ	0xFE6
  6819                           postdec1	equ	0xFE5
  6820                           fsr1h	equ	0xFE2
  6821                           fsr1l	equ	0xFE1
  6822                           bsr	equ	0xFE0
  6823                           indf2	equ	0xFDF
  6824                           postinc2	equ	0xFDE
  6825                           postdec2	equ	0xFDD
  6826                           fsr2h	equ	0xFDA
  6827                           fsr2l	equ	0xFD9
  6828                           status	equ	0xFD8
  6829                           
  6830 ;; *************** function _i2c_int_handler *****************
  6831 ;; Defined at:
  6832 ;;		line 139 in file "../src/my_i2c.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;		None
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;		None
  6837 ;; Return value:  Size  Location     Type
  6838 ;;		None               void
  6839 ;; Registers used:
  6840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6850 ;;Total ram usage:        0 bytes
  6851 ;; Hardware stack levels used:    1
  6852 ;; Hardware stack levels required when called:    4
  6853 ;; This function calls:
  6854 ;;		_i2c_master_int_handler
  6855 ;; This function is called by:
  6856 ;;		_InterruptHandlerHigh
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text41
  6861  001CA2                     __ptext41:
  6862                           	opt stack 0
  6863  001CA2                     _i2c_int_handler:
  6864                           	opt stack 16
  6865                           
  6866                           ;my_i2c.c: 141: i2c_master_int_handler();
  6867                           
  6868                           ;incstack = 0
  6869  001CA2  EC0B  F003         	call	_i2c_master_int_handler	;wreg free
  6870  001CA6  0012               	return	
  6871  001CA8                     __end_of_i2c_int_handler:
  6872                           	opt stack 0
  6873                           pclatu	equ	0xFFB
  6874                           pclath	equ	0xFFA
  6875                           tblptru	equ	0xFF8
  6876                           tblptrh	equ	0xFF7
  6877                           tblptrl	equ	0xFF6
  6878                           tablat	equ	0xFF5
  6879                           prodh	equ	0xFF4
  6880                           prodl	equ	0xFF3
  6881                           intcon	equ	0xFF2
  6882                           intcon2	equ	0xFF1
  6883                           postinc0	equ	0xFEE
  6884                           fsr0h	equ	0xFEA
  6885                           fsr0l	equ	0xFE9
  6886                           wreg	equ	0xFE8
  6887                           indf1	equ	0xFE7
  6888                           postinc1	equ	0xFE6
  6889                           postdec1	equ	0xFE5
  6890                           fsr1h	equ	0xFE2
  6891                           fsr1l	equ	0xFE1
  6892                           bsr	equ	0xFE0
  6893                           indf2	equ	0xFDF
  6894                           postinc2	equ	0xFDE
  6895                           postdec2	equ	0xFDD
  6896                           fsr2h	equ	0xFDA
  6897                           fsr2l	equ	0xFD9
  6898                           status	equ	0xFD8
  6899                           
  6900 ;; *************** function _i2c_master_int_handler *****************
  6901 ;; Defined at:
  6902 ;;		line 147 in file "../src/my_i2c.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;		None
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;		None
  6907 ;; Return value:  Size  Location     Type
  6908 ;;		None               void
  6909 ;; Registers used:
  6910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6918 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6919 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6920 ;;Total ram usage:        5 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; Hardware stack levels required when called:    3
  6923 ;; This function calls:
  6924 ;;		_ToMainHigh_sendmsg
  6925 ;;		_i2c_master_recv
  6926 ;; This function is called by:
  6927 ;;		_i2c_int_handler
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text42
  6932  000616                     __ptext42:
  6933                           	opt stack 0
  6934  000616                     _i2c_master_int_handler:
  6935                           	opt stack 16
  6936                           
  6937                           ;my_i2c.c: 150: if(!(ic_ptr->status == 0x5)) {
  6938                           
  6939                           ;incstack = 0
  6940  000616  0100               	movlb	0	; () banked
  6941  000618  EE20 F00D          	lfsr	2,13
  6942  00061C  0100               	movlb	0	; () banked
  6943  00061E  51C8               	movf	_ic_ptr& (0+255),w,b
  6944  000620  26D9               	addwf	fsr2l,f,c
  6945  000622  0100               	movlb	0	; () banked
  6946  000624  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  6947  000626  22DA               	addwfc	fsr2h,f,c
  6948  000628  50DF               	movf	indf2,w,c
  6949  00062A  0A05               	xorlw	5
  6950  00062C  B4D8               	btfsc	status,2,c
  6951  00062E  0012               	return	
  6952  000630  D1B5               	goto	i2l3786
  6953  000632                     i2l3728:
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;my_i2c.c: 154: {
  6957                           ;my_i2c.c: 155: if(ic_ptr->slave_addr % 2){
  6958  000632  0100               	movlb	0	; () banked
  6959  000634  EE20 F01C          	lfsr	2,28
  6960  000638  0100               	movlb	0	; () banked
  6961  00063A  51C8               	movf	_ic_ptr& (0+255),w,b
  6962  00063C  26D9               	addwf	fsr2l,f,c
  6963  00063E  0100               	movlb	0	; () banked
  6964  000640  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  6965  000642  22DA               	addwfc	fsr2h,f,c
  6966  000644  50DF               	movf	indf2,w,c
  6967  000646  0100               	movlb	0	; () banked
  6968  000648  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  6969  00064A  0100               	movlb	0	; () banked
  6970  00064C  A17A               	btfss	??_i2c_master_int_handler& (0+255),0,b
  6971  00064E  D00B               	goto	i2l3732
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;my_i2c.c: 157: ic_ptr->status = 0x7;
  6975  000650  0100               	movlb	0	; () banked
  6976  000652  EE20 F00D          	lfsr	2,13
  6977  000656  0100               	movlb	0	; () banked
  6978  000658  51C8               	movf	_ic_ptr& (0+255),w,b
  6979  00065A  26D9               	addwf	fsr2l,f,c
  6980  00065C  0100               	movlb	0	; () banked
  6981  00065E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  6982  000660  22DA               	addwfc	fsr2h,f,c
  6983  000662  0E07               	movlw	7
  6984  000664  D00A               	goto	L3
  6985  000666                     i2l3732:
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;my_i2c.c: 160: ic_ptr->status = 0x9;
  6989  000666  0100               	movlb	0	; () banked
  6990  000668  EE20 F00D          	lfsr	2,13
  6991  00066C  0100               	movlb	0	; () banked
  6992  00066E  51C8               	movf	_ic_ptr& (0+255),w,b
  6993  000670  26D9               	addwf	fsr2l,f,c
  6994  000672  0100               	movlb	0	; () banked
  6995  000674  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  6996  000676  22DA               	addwfc	fsr2h,f,c
  6997  000678  0E09               	movlw	9
  6998  00067A                     L3:
  6999  00067A  6EDF               	movwf	indf2,c
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;my_i2c.c: 161: }
  7003                           ;my_i2c.c: 162: ic_ptr->bufind = 0;
  7004  00067C  0100               	movlb	0	; () banked
  7005  00067E  EE20 F00B          	lfsr	2,11
  7006  000682  0100               	movlb	0	; () banked
  7007  000684  51C8               	movf	_ic_ptr& (0+255),w,b
  7008  000686  26D9               	addwf	fsr2l,f,c
  7009  000688  0100               	movlb	0	; () banked
  7010  00068A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7011  00068C  22DA               	addwfc	fsr2h,f,c
  7012  00068E  0E00               	movlw	0
  7013  000690  6EDF               	movwf	indf2,c
  7014                           
  7015                           ;my_i2c.c: 163: SSPBUF = ic_ptr->slave_addr;
  7016  000692  0100               	movlb	0	; () banked
  7017  000694  EE20 F01C          	lfsr	2,28
  7018  000698  0100               	movlb	0	; () banked
  7019  00069A  51C8               	movf	_ic_ptr& (0+255),w,b
  7020  00069C  26D9               	addwf	fsr2l,f,c
  7021  00069E  0100               	movlb	0	; () banked
  7022  0006A0  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7023  0006A2  22DA               	addwfc	fsr2h,f,c
  7024  0006A4  50DF               	movf	indf2,w,c
  7025  0006A6  6EC9               	movwf	4041,c	;volatile
  7026                           
  7027                           ;my_i2c.c: 165: break;
  7028  0006A8  0012               	return	
  7029  0006AA                     i2l350:
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;my_i2c.c: 168: {
  7033                           ;my_i2c.c: 169: if(!SSPCON2bits.ACKSTAT){
  7034  0006AA  BCC5               	btfsc	4037,6,c	;volatile
  7035  0006AC  D070               	goto	i2l351
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;my_i2c.c: 170: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7039  0006AE  0100               	movlb	0	; () banked
  7040  0006B0  EE20 F01B          	lfsr	2,27
  7041  0006B4  0100               	movlb	0	; () banked
  7042  0006B6  51C8               	movf	_ic_ptr& (0+255),w,b
  7043  0006B8  26D9               	addwf	fsr2l,f,c
  7044  0006BA  0100               	movlb	0	; () banked
  7045  0006BC  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7046  0006BE  22DA               	addwfc	fsr2h,f,c
  7047  0006C0  50DF               	movf	indf2,w,c
  7048  0006C2  0100               	movlb	0	; () banked
  7049  0006C4  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7050  0006C6  0100               	movlb	0	; () banked
  7051  0006C8  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7052  0006CA  0D01               	mullw	1
  7053  0006CC  0E10               	movlw	16
  7054  0006CE  26F3               	addwf	prodl,f,c
  7055  0006D0  0E00               	movlw	0
  7056  0006D2  22F4               	addwfc	prodh,f,c
  7057  0006D4  50F3               	movf	prodl,w,c
  7058  0006D6  0100               	movlb	0	; () banked
  7059  0006D8  0100               	movlb	0	; () banked
  7060  0006DA  25C8               	addwf	_ic_ptr& (0+255),w,b
  7061  0006DC  6ED9               	movwf	fsr2l,c
  7062  0006DE  50F4               	movf	prodh,w,c
  7063  0006E0  0100               	movlb	0	; () banked
  7064  0006E2  0100               	movlb	0	; () banked
  7065  0006E4  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7066  0006E6  6EDA               	movwf	fsr2h,c
  7067  0006E8  50DF               	movf	indf2,w,c
  7068  0006EA  6EC9               	movwf	4041,c	;volatile
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;my_i2c.c: 172: if(ic_ptr->outbuflen > ic_ptr->outbufind+1){
  7072  0006EC  0100               	movlb	0	; () banked
  7073  0006EE  EE20 F01A          	lfsr	2,26
  7074  0006F2  0100               	movlb	0	; () banked
  7075  0006F4  51C8               	movf	_ic_ptr& (0+255),w,b
  7076  0006F6  26D9               	addwf	fsr2l,f,c
  7077  0006F8  0100               	movlb	0	; () banked
  7078  0006FA  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7079  0006FC  22DA               	addwfc	fsr2h,f,c
  7080  0006FE  50DF               	movf	indf2,w,c
  7081  000700  0100               	movlb	0	; () banked
  7082  000702  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7083  000704  6B7B               	clrf	(??_i2c_master_int_handler+1)& (0+255),b
  7084  000706  0100               	movlb	0	; () banked
  7085  000708  EE20 F01B          	lfsr	2,27
  7086  00070C  0100               	movlb	0	; () banked
  7087  00070E  51C8               	movf	_ic_ptr& (0+255),w,b
  7088  000710  26D9               	addwf	fsr2l,f,c
  7089  000712  0100               	movlb	0	; () banked
  7090  000714  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7091  000716  22DA               	addwfc	fsr2h,f,c
  7092  000718  50DF               	movf	indf2,w,c
  7093  00071A  0100               	movlb	0	; () banked
  7094  00071C  6F7C               	movwf	(??_i2c_master_int_handler+2)& (0+255),b
  7095  00071E  6B7D               	clrf	(??_i2c_master_int_handler+3)& (0+255),b
  7096  000720  0E01               	movlw	1
  7097  000722  0100               	movlb	0	; () banked
  7098  000724  277C               	addwf	(??_i2c_master_int_handler+2)& (0+255),f,b
  7099  000726  0E00               	movlw	0
  7100  000728  237D               	addwfc	(??_i2c_master_int_handler+3)& (0+255),f,b
  7101  00072A  0100               	movlb	0	; () banked
  7102  00072C  517D               	movf	(??_i2c_master_int_handler+3)& (0+255),w,b
  7103  00072E  0A80               	xorlw	128
  7104  000730  0100               	movlb	0	; () banked
  7105  000732  6F7E               	movwf	(??_i2c_master_int_handler+4)& (0+255),b
  7106  000734  0100               	movlb	0	; () banked
  7107  000736  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7108  000738  0100               	movlb	0	; () banked
  7109  00073A  5D7C               	subwf	(??_i2c_master_int_handler+2)& (0+255),w,b
  7110  00073C  0100               	movlb	0	; () banked
  7111  00073E  517B               	movf	(??_i2c_master_int_handler+1)& (0+255),w,b
  7112  000740  0A80               	xorlw	128
  7113  000742  0100               	movlb	0	; () banked
  7114  000744  597E               	subwfb	(??_i2c_master_int_handler+4)& (0+255),w,b
  7115  000746  B0D8               	btfsc	status,0,c
  7116  000748  D016               	goto	i2l3740
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;my_i2c.c: 173: ic_ptr->outbufind++;
  7120  00074A  0100               	movlb	0	; () banked
  7121  00074C  EE20 F01B          	lfsr	2,27
  7122  000750  0100               	movlb	0	; () banked
  7123  000752  51C8               	movf	_ic_ptr& (0+255),w,b
  7124  000754  26D9               	addwf	fsr2l,f,c
  7125  000756  0100               	movlb	0	; () banked
  7126  000758  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7127  00075A  22DA               	addwfc	fsr2h,f,c
  7128  00075C  2ADF               	incf	indf2,f,c
  7129                           
  7130                           ;my_i2c.c: 174: ic_ptr->status = 0x9;
  7131  00075E  0100               	movlb	0	; () banked
  7132  000760  EE20 F00D          	lfsr	2,13
  7133  000764  0100               	movlb	0	; () banked
  7134  000766  51C8               	movf	_ic_ptr& (0+255),w,b
  7135  000768  26D9               	addwf	fsr2l,f,c
  7136  00076A  0100               	movlb	0	; () banked
  7137  00076C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7138  00076E  22DA               	addwfc	fsr2h,f,c
  7139  000770  0E09               	movlw	9
  7140  000772  6EDF               	movwf	indf2,c
  7141                           
  7142                           ;my_i2c.c: 175: }else{
  7143  000774  0012               	return	
  7144  000776                     i2l3740:
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;my_i2c.c: 177: ic_ptr->status = 0xD;
  7148  000776  0100               	movlb	0	; () banked
  7149  000778  EE20 F00D          	lfsr	2,13
  7150  00077C  0100               	movlb	0	; () banked
  7151  00077E  51C8               	movf	_ic_ptr& (0+255),w,b
  7152  000780  26D9               	addwf	fsr2l,f,c
  7153  000782  0100               	movlb	0	; () banked
  7154  000784  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7155  000786  22DA               	addwfc	fsr2h,f,c
  7156  000788  0E0D               	movlw	13
  7157  00078A  6EDF               	movwf	indf2,c
  7158  00078C  0012               	return	
  7159  00078E                     i2l351:
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;my_i2c.c: 181: SSPCON2bits.RSEN = 1;
  7163  00078E  82C5               	bsf	4037,1,c	;volatile
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;my_i2c.c: 182: ic_ptr->status = 0xA;
  7167  000790  0100               	movlb	0	; () banked
  7168  000792  EE20 F00D          	lfsr	2,13
  7169  000796  0100               	movlb	0	; () banked
  7170  000798  51C8               	movf	_ic_ptr& (0+255),w,b
  7171  00079A  26D9               	addwf	fsr2l,f,c
  7172  00079C  0100               	movlb	0	; () banked
  7173  00079E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7174  0007A0  22DA               	addwfc	fsr2h,f,c
  7175  0007A2  0E0A               	movlw	10
  7176  0007A4  6EDF               	movwf	indf2,c
  7177  0007A6  0012               	return	
  7178  0007A8                     i2l355:
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;my_i2c.c: 187: {
  7182                           ;my_i2c.c: 188: if(!SSPCON2bits.ACKSTAT){
  7183  0007A8  BCC5               	btfsc	4037,6,c	;volatile
  7184  0007AA  D00D               	goto	i2l3748
  7185                           
  7186                           ; BSR set to: 0
  7187                           ;my_i2c.c: 189: SSPCON2bits.RCEN = 1;
  7188  0007AC  86C5               	bsf	4037,3,c	;volatile
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;my_i2c.c: 190: ic_ptr->status = 0xC;
  7192  0007AE  0100               	movlb	0	; () banked
  7193  0007B0  EE20 F00D          	lfsr	2,13
  7194  0007B4  0100               	movlb	0	; () banked
  7195  0007B6  51C8               	movf	_ic_ptr& (0+255),w,b
  7196  0007B8  26D9               	addwf	fsr2l,f,c
  7197  0007BA  0100               	movlb	0	; () banked
  7198  0007BC  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7199  0007BE  22DA               	addwfc	fsr2h,f,c
  7200  0007C0  0E0C               	movlw	12
  7201  0007C2  6EDF               	movwf	indf2,c
  7202                           
  7203                           ;my_i2c.c: 191: } else {
  7204  0007C4  0012               	return	
  7205  0007C6                     i2l3748:
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;my_i2c.c: 193: if(ic_ptr->buffer[4] == 0x78)
  7209  0007C6  0100               	movlb	0	; () banked
  7210  0007C8  EE20 F004          	lfsr	2,4
  7211  0007CC  0100               	movlb	0	; () banked
  7212  0007CE  51C8               	movf	_ic_ptr& (0+255),w,b
  7213  0007D0  26D9               	addwf	fsr2l,f,c
  7214  0007D2  0100               	movlb	0	; () banked
  7215  0007D4  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7216  0007D6  22DA               	addwfc	fsr2h,f,c
  7217  0007D8  0E78               	movlw	120
  7218  0007DA  62DF               	cpfseq	indf2,c
  7219  0007DC  D001               	goto	i2l3752
  7220                           
  7221                           ; BSR set to: 0
  7222                           ;my_i2c.c: 194: LATBbits.LATB2 = 1;
  7223  0007DE  848A               	bsf	3978,2,c	;volatile
  7224  0007E0                     i2l3752:
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;my_i2c.c: 195: ToMainHigh_sendmsg(0, 46, ic_ptr->buffer);
  7228  0007E0  0100               	movlb	0	; () banked
  7229  0007E2  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7230  0007E4  0E2E               	movlw	46
  7231  0007E6  0100               	movlb	0	; () banked
  7232  0007E8  0100               	movlb	0	; () banked
  7233  0007EA  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7234  0007EC  0100               	movlb	0	; () banked
  7235  0007EE  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7236  0007F0  0100               	movlb	0	; () banked
  7237  0007F2  0100               	movlb	0	; () banked
  7238  0007F4  C0C9  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7239  0007F8  0100               	movlb	0	; () banked
  7240  0007FA  0100               	movlb	0	; () banked
  7241  0007FC  C0C8  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7242  000800  0E00               	movlw	0
  7243  000802  EC56  F00D         	call	_ToMainHigh_sendmsg
  7244                           
  7245                           ;my_i2c.c: 196: LATBbits.LATB2 = 0;
  7246  000806  948A               	bcf	3978,2,c	;volatile
  7247                           
  7248                           ;my_i2c.c: 197: ic_ptr->buflen = 0;
  7249  000808  0100               	movlb	0	; () banked
  7250  00080A  EE20 F00A          	lfsr	2,10
  7251  00080E  0100               	movlb	0	; () banked
  7252  000810  51C8               	movf	_ic_ptr& (0+255),w,b
  7253  000812  26D9               	addwf	fsr2l,f,c
  7254  000814  0100               	movlb	0	; () banked
  7255  000816  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7256  000818  22DA               	addwfc	fsr2h,f,c
  7257  00081A  0E00               	movlw	0
  7258  00081C  6EDF               	movwf	indf2,c
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;my_i2c.c: 198: ic_ptr->status = 0x5;
  7262  00081E  0100               	movlb	0	; () banked
  7263  000820  EE20 F00D          	lfsr	2,13
  7264  000824  0100               	movlb	0	; () banked
  7265  000826  51C8               	movf	_ic_ptr& (0+255),w,b
  7266  000828  26D9               	addwf	fsr2l,f,c
  7267  00082A  0100               	movlb	0	; () banked
  7268  00082C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7269  00082E  22DA               	addwfc	fsr2h,f,c
  7270  000830  0E05               	movlw	5
  7271  000832  6EDF               	movwf	indf2,c
  7272  000834  0012               	return	
  7273  000836                     i2l359:
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;my_i2c.c: 203: {
  7277                           ;my_i2c.c: 204: LATBbits.LATB1 = 1;
  7278  000836  828A               	bsf	3978,1,c	;volatile
  7279                           
  7280                           ;my_i2c.c: 205: LATBbits.LATB1 = 0;
  7281  000838  928A               	bcf	3978,1,c	;volatile
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;my_i2c.c: 206: if(ic_ptr->bufind < ic_ptr->buflen){
  7285  00083A  0100               	movlb	0	; () banked
  7286  00083C  EE20 F00B          	lfsr	2,11
  7287  000840  0100               	movlb	0	; () banked
  7288  000842  51C8               	movf	_ic_ptr& (0+255),w,b
  7289  000844  26D9               	addwf	fsr2l,f,c
  7290  000846  0100               	movlb	0	; () banked
  7291  000848  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7292  00084A  22DA               	addwfc	fsr2h,f,c
  7293  00084C  50DF               	movf	indf2,w,c
  7294  00084E  0100               	movlb	0	; () banked
  7295  000850  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7296  000852  0100               	movlb	0	; () banked
  7297  000854  EE20 F00A          	lfsr	2,10
  7298  000858  0100               	movlb	0	; () banked
  7299  00085A  51C8               	movf	_ic_ptr& (0+255),w,b
  7300  00085C  26D9               	addwf	fsr2l,f,c
  7301  00085E  0100               	movlb	0	; () banked
  7302  000860  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7303  000862  22DA               	addwfc	fsr2h,f,c
  7304  000864  50DF               	movf	indf2,w,c
  7305  000866  0100               	movlb	0	; () banked
  7306  000868  5D7A               	subwf	??_i2c_master_int_handler& (0+255),w,b
  7307  00086A  B0D8               	btfsc	status,0,c
  7308  00086C  D030               	goto	i2l3768
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;my_i2c.c: 207: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  7312  00086E  0100               	movlb	0	; () banked
  7313  000870  EE20 F00B          	lfsr	2,11
  7314  000874  0100               	movlb	0	; () banked
  7315  000876  51C8               	movf	_ic_ptr& (0+255),w,b
  7316  000878  26D9               	addwf	fsr2l,f,c
  7317  00087A  0100               	movlb	0	; () banked
  7318  00087C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7319  00087E  22DA               	addwfc	fsr2h,f,c
  7320  000880  50DF               	movf	indf2,w,c
  7321  000882  0100               	movlb	0	; () banked
  7322  000884  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7323  000886  0100               	movlb	0	; () banked
  7324  000888  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7325  00088A  0D01               	mullw	1
  7326  00088C  50F3               	movf	prodl,w,c
  7327  00088E  0100               	movlb	0	; () banked
  7328  000890  0100               	movlb	0	; () banked
  7329  000892  25C8               	addwf	_ic_ptr& (0+255),w,b
  7330  000894  6ED9               	movwf	fsr2l,c
  7331  000896  50F4               	movf	prodh,w,c
  7332  000898  0100               	movlb	0	; () banked
  7333  00089A  0100               	movlb	0	; () banked
  7334  00089C  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7335  00089E  6EDA               	movwf	fsr2h,c
  7336  0008A0  CFC9 FFDF          	movff	4041,indf2	;volatile
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;my_i2c.c: 208: ic_ptr->bufind++;
  7340  0008A4  0100               	movlb	0	; () banked
  7341  0008A6  EE20 F00B          	lfsr	2,11
  7342  0008AA  0100               	movlb	0	; () banked
  7343  0008AC  51C8               	movf	_ic_ptr& (0+255),w,b
  7344  0008AE  26D9               	addwf	fsr2l,f,c
  7345  0008B0  0100               	movlb	0	; () banked
  7346  0008B2  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7347  0008B4  22DA               	addwfc	fsr2h,f,c
  7348  0008B6  2ADF               	incf	indf2,f,c
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;my_i2c.c: 209: ic_ptr->status = 0x7;
  7352  0008B8  0100               	movlb	0	; () banked
  7353  0008BA  EE20 F00D          	lfsr	2,13
  7354  0008BE  0100               	movlb	0	; () banked
  7355  0008C0  51C8               	movf	_ic_ptr& (0+255),w,b
  7356  0008C2  26D9               	addwf	fsr2l,f,c
  7357  0008C4  0100               	movlb	0	; () banked
  7358  0008C6  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7359  0008C8  22DA               	addwfc	fsr2h,f,c
  7360  0008CA  0E07               	movlw	7
  7361  0008CC  6EDF               	movwf	indf2,c
  7362  0008CE                     i2l3768:
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;my_i2c.c: 211: }
  7366                           ;my_i2c.c: 212: if(ic_ptr->bufind == ic_ptr->buflen){
  7367  0008CE  0100               	movlb	0	; () banked
  7368  0008D0  EE20 F00B          	lfsr	2,11
  7369  0008D4  0100               	movlb	0	; () banked
  7370  0008D6  51C8               	movf	_ic_ptr& (0+255),w,b
  7371  0008D8  26D9               	addwf	fsr2l,f,c
  7372  0008DA  0100               	movlb	0	; () banked
  7373  0008DC  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7374  0008DE  22DA               	addwfc	fsr2h,f,c
  7375  0008E0  0100               	movlb	0	; () banked
  7376  0008E2  EE10 F00A          	lfsr	1,10
  7377  0008E6  0100               	movlb	0	; () banked
  7378  0008E8  51C8               	movf	_ic_ptr& (0+255),w,b
  7379  0008EA  26E1               	addwf	fsr1l,f,c
  7380  0008EC  0100               	movlb	0	; () banked
  7381  0008EE  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7382  0008F0  22E2               	addwfc	fsr1h,f,c
  7383  0008F2  50E7               	movf	indf1,w,c
  7384  0008F4  62DF               	cpfseq	indf2,c
  7385  0008F6  D02A               	goto	i2l361
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;my_i2c.c: 213: ic_ptr->status = 0xB;
  7389  0008F8  0100               	movlb	0	; () banked
  7390  0008FA  EE20 F00D          	lfsr	2,13
  7391  0008FE  0100               	movlb	0	; () banked
  7392  000900  51C8               	movf	_ic_ptr& (0+255),w,b
  7393  000902  26D9               	addwf	fsr2l,f,c
  7394  000904  0100               	movlb	0	; () banked
  7395  000906  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7396  000908  22DA               	addwfc	fsr2h,f,c
  7397  00090A  0E0B               	movlw	11
  7398  00090C  6EDF               	movwf	indf2,c
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;my_i2c.c: 216: ToMainHigh_sendmsg(ic_ptr->buflen, 45, ic_ptr->buffer);
  7402  00090E  0100               	movlb	0	; () banked
  7403  000910  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7404  000912  0E2D               	movlw	45
  7405  000914  0100               	movlb	0	; () banked
  7406  000916  0100               	movlb	0	; () banked
  7407  000918  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7408  00091A  0100               	movlb	0	; () banked
  7409  00091C  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7410  00091E  0100               	movlb	0	; () banked
  7411  000920  0100               	movlb	0	; () banked
  7412  000922  C0C9  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7413  000926  0100               	movlb	0	; () banked
  7414  000928  0100               	movlb	0	; () banked
  7415  00092A  C0C8  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7416  00092E  0100               	movlb	0	; () banked
  7417  000930  EE20 F00A          	lfsr	2,10
  7418  000934  0100               	movlb	0	; () banked
  7419  000936  51C8               	movf	_ic_ptr& (0+255),w,b
  7420  000938  26D9               	addwf	fsr2l,f,c
  7421  00093A  0100               	movlb	0	; () banked
  7422  00093C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7423  00093E  22DA               	addwfc	fsr2h,f,c
  7424  000940  50DF               	movf	indf2,w,c
  7425  000942  EC56  F00D         	call	_ToMainHigh_sendmsg
  7426                           
  7427                           ;my_i2c.c: 219: SSPCON2bits.ACKDT = 1;
  7428  000946  8AC5               	bsf	4037,5,c	;volatile
  7429                           
  7430                           ;my_i2c.c: 220: SSPCON2bits.ACKEN = 1;
  7431  000948  88C5               	bsf	4037,4,c	;volatile
  7432                           
  7433                           ;my_i2c.c: 221: } else {
  7434  00094A  0012               	return	
  7435  00094C                     i2l361:
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;my_i2c.c: 223: SSPCON2bits.ACKDT = 0;
  7439  00094C  9AC5               	bcf	4037,5,c	;volatile
  7440                           
  7441                           ;my_i2c.c: 224: SSPCON2bits.ACKEN = 1;
  7442  00094E  88C5               	bsf	4037,4,c	;volatile
  7443  000950  0012               	return	
  7444  000952                     i2l3778:
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;my_i2c.c: 230: {
  7448                           ;my_i2c.c: 231: ic_ptr->status = 0x5;
  7449  000952  0100               	movlb	0	; () banked
  7450  000954  EE20 F00D          	lfsr	2,13
  7451  000958  0100               	movlb	0	; () banked
  7452  00095A  51C8               	movf	_ic_ptr& (0+255),w,b
  7453  00095C  26D9               	addwf	fsr2l,f,c
  7454  00095E  0100               	movlb	0	; () banked
  7455  000960  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7456  000962  22DA               	addwfc	fsr2h,f,c
  7457  000964  0E05               	movlw	5
  7458  000966  6EDF               	movwf	indf2,c
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;my_i2c.c: 232: i2c_master_recv(ic_ptr->buflen);
  7462  000968  0100               	movlb	0	; () banked
  7463  00096A  EE20 F00A          	lfsr	2,10
  7464  00096E  0100               	movlb	0	; () banked
  7465  000970  51C8               	movf	_ic_ptr& (0+255),w,b
  7466  000972  26D9               	addwf	fsr2l,f,c
  7467  000974  0100               	movlb	0	; () banked
  7468  000976  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7469  000978  22DA               	addwfc	fsr2h,f,c
  7470  00097A  50DF               	movf	indf2,w,c
  7471  00097C  ECA4  F00B         	call	_i2c_master_recv
  7472                           
  7473                           ;my_i2c.c: 233: break;
  7474  000980  0012               	return	
  7475  000982                     i2l364:
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;my_i2c.c: 236: {
  7479                           ;my_i2c.c: 238: SSPCON2bits.PEN = 1;
  7480  000982  84C5               	bsf	4037,2,c	;volatile
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;my_i2c.c: 240: ic_ptr->status = 0x5;
  7484  000984  0100               	movlb	0	; () banked
  7485  000986  EE20 F00D          	lfsr	2,13
  7486  00098A  0100               	movlb	0	; () banked
  7487  00098C  51C8               	movf	_ic_ptr& (0+255),w,b
  7488  00098E  26D9               	addwf	fsr2l,f,c
  7489  000990  0100               	movlb	0	; () banked
  7490  000992  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7491  000994  22DA               	addwfc	fsr2h,f,c
  7492  000996  0E05               	movlw	5
  7493  000998  6EDF               	movwf	indf2,c
  7494                           
  7495                           ;my_i2c.c: 241: break;
  7496  00099A  0012               	return	
  7497  00099C                     i2l3786:
  7498                           
  7499                           ; BSR set to: 0
  7500  00099C  0100               	movlb	0	; () banked
  7501  00099E  EE20 F00D          	lfsr	2,13
  7502  0009A2  0100               	movlb	0	; () banked
  7503  0009A4  51C8               	movf	_ic_ptr& (0+255),w,b
  7504  0009A6  26D9               	addwf	fsr2l,f,c
  7505  0009A8  0100               	movlb	0	; () banked
  7506  0009AA  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7507  0009AC  22DA               	addwfc	fsr2h,f,c
  7508  0009AE  50DF               	movf	indf2,w,c
  7509                           
  7510                           ; Switch size 1, requested type "space"
  7511                           ; Number of cases is 6, Range of values is 7 to 13
  7512                           ; switch strategies available:
  7513                           ; Name         Instructions Cycles
  7514                           ; simple_byte           19    10 (average)
  7515                           ;	Chosen strategy is simple_byte
  7516  0009B0  0A07               	xorlw	7	; case 7
  7517  0009B2  B4D8               	btfsc	status,2,c
  7518  0009B4  D6F9               	goto	i2l355
  7519  0009B6  0A0E               	xorlw	14	; case 9
  7520  0009B8  B4D8               	btfsc	status,2,c
  7521  0009BA  D677               	goto	i2l350
  7522  0009BC  0A03               	xorlw	3	; case 10
  7523  0009BE  B4D8               	btfsc	status,2,c
  7524  0009C0  D638               	goto	i2l3728
  7525  0009C2  0A01               	xorlw	1	; case 11
  7526  0009C4  B4D8               	btfsc	status,2,c
  7527  0009C6  D7DD               	goto	i2l364
  7528  0009C8  0A07               	xorlw	7	; case 12
  7529  0009CA  B4D8               	btfsc	status,2,c
  7530  0009CC  D734               	goto	i2l359
  7531  0009CE  0A01               	xorlw	1	; case 13
  7532  0009D0  A4D8               	btfss	status,2,c
  7533  0009D2  0012               	return	
  7534  0009D4  D7BE               	goto	i2l3778
  7535  0009D6                     __end_of_i2c_master_int_handler:
  7536                           	opt stack 0
  7537                           pclatu	equ	0xFFB
  7538                           pclath	equ	0xFFA
  7539                           tblptru	equ	0xFF8
  7540                           tblptrh	equ	0xFF7
  7541                           tblptrl	equ	0xFF6
  7542                           tablat	equ	0xFF5
  7543                           prodh	equ	0xFF4
  7544                           prodl	equ	0xFF3
  7545                           intcon	equ	0xFF2
  7546                           intcon2	equ	0xFF1
  7547                           postinc0	equ	0xFEE
  7548                           fsr0h	equ	0xFEA
  7549                           fsr0l	equ	0xFE9
  7550                           wreg	equ	0xFE8
  7551                           indf1	equ	0xFE7
  7552                           postinc1	equ	0xFE6
  7553                           postdec1	equ	0xFE5
  7554                           fsr1h	equ	0xFE2
  7555                           fsr1l	equ	0xFE1
  7556                           bsr	equ	0xFE0
  7557                           indf2	equ	0xFDF
  7558                           postinc2	equ	0xFDE
  7559                           postdec2	equ	0xFDD
  7560                           fsr2h	equ	0xFDA
  7561                           fsr2l	equ	0xFD9
  7562                           status	equ	0xFD8
  7563                           
  7564 ;; *************** function _i2c_master_recv *****************
  7565 ;; Defined at:
  7566 ;;		line 74 in file "../src/my_i2c.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;  length          1    wreg     unsigned char 
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;  length          1    0[BANK0 ] unsigned char 
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  1    wreg      unsigned char 
  7573 ;; Registers used:
  7574 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7583 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7584 ;;Total ram usage:        1 bytes
  7585 ;; Hardware stack levels used:    1
  7586 ;; This function calls:
  7587 ;;		Nothing
  7588 ;; This function is called by:
  7589 ;;		_i2c_master_int_handler
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text43
  7594  001748                     __ptext43:
  7595                           	opt stack 0
  7596  001748                     _i2c_master_recv:
  7597                           	opt stack 18
  7598                           
  7599                           ;incstack = 0
  7600                           ;i2c_master_recv@length stored from wreg
  7601  001748  CFE8 F060          	movff	wreg,i2c_master_recv@length
  7602                           
  7603                           ;my_i2c.c: 77: if(ic_ptr->status == 0x5){
  7604  00174C  0100               	movlb	0	; () banked
  7605  00174E  EE20 F00D          	lfsr	2,13
  7606  001752  0100               	movlb	0	; () banked
  7607  001754  51C8               	movf	_ic_ptr& (0+255),w,b
  7608  001756  26D9               	addwf	fsr2l,f,c
  7609  001758  0100               	movlb	0	; () banked
  7610  00175A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7611  00175C  22DA               	addwfc	fsr2h,f,c
  7612  00175E  0E05               	movlw	5
  7613  001760  62DF               	cpfseq	indf2,c
  7614  001762  0012               	return	
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;my_i2c.c: 78: ic_ptr->slave_addr |= 0x01;
  7618  001764  0100               	movlb	0	; () banked
  7619  001766  EE20 F01C          	lfsr	2,28
  7620  00176A  0100               	movlb	0	; () banked
  7621  00176C  51C8               	movf	_ic_ptr& (0+255),w,b
  7622  00176E  26D9               	addwf	fsr2l,f,c
  7623  001770  0100               	movlb	0	; () banked
  7624  001772  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7625  001774  22DA               	addwfc	fsr2h,f,c
  7626  001776  0E00               	movlw	0
  7627  001778  80DB               	bsf	plusw2,0,c
  7628                           
  7629                           ;my_i2c.c: 79: ic_ptr->buflen = length;
  7630  00177A  0100               	movlb	0	; () banked
  7631  00177C  EE20 F00A          	lfsr	2,10
  7632  001780  0100               	movlb	0	; () banked
  7633  001782  51C8               	movf	_ic_ptr& (0+255),w,b
  7634  001784  26D9               	addwf	fsr2l,f,c
  7635  001786  0100               	movlb	0	; () banked
  7636  001788  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7637  00178A  22DA               	addwfc	fsr2h,f,c
  7638  00178C  0100               	movlb	0	; () banked
  7639  00178E  C060  FFDF         	movff	i2c_master_recv@length,indf2
  7640                           
  7641                           ;my_i2c.c: 81: ic_ptr->status = 0xA;
  7642  001792  0100               	movlb	0	; () banked
  7643  001794  EE20 F00D          	lfsr	2,13
  7644  001798  0100               	movlb	0	; () banked
  7645  00179A  51C8               	movf	_ic_ptr& (0+255),w,b
  7646  00179C  26D9               	addwf	fsr2l,f,c
  7647  00179E  0100               	movlb	0	; () banked
  7648  0017A0  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7649  0017A2  22DA               	addwfc	fsr2h,f,c
  7650  0017A4  0E0A               	movlw	10
  7651  0017A6  6EDF               	movwf	indf2,c
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;my_i2c.c: 84: SSPCON2bits.RSEN = 1;
  7655  0017A8  82C5               	bsf	4037,1,c	;volatile
  7656  0017AA  0012               	return	
  7657  0017AC                     __end_of_i2c_master_recv:
  7658                           	opt stack 0
  7659                           pclatu	equ	0xFFB
  7660                           pclath	equ	0xFFA
  7661                           tblptru	equ	0xFF8
  7662                           tblptrh	equ	0xFF7
  7663                           tblptrl	equ	0xFF6
  7664                           tablat	equ	0xFF5
  7665                           prodh	equ	0xFF4
  7666                           prodl	equ	0xFF3
  7667                           intcon	equ	0xFF2
  7668                           intcon2	equ	0xFF1
  7669                           postinc0	equ	0xFEE
  7670                           fsr0h	equ	0xFEA
  7671                           fsr0l	equ	0xFE9
  7672                           wreg	equ	0xFE8
  7673                           indf1	equ	0xFE7
  7674                           postinc1	equ	0xFE6
  7675                           postdec1	equ	0xFE5
  7676                           fsr1h	equ	0xFE2
  7677                           fsr1l	equ	0xFE1
  7678                           bsr	equ	0xFE0
  7679                           indf2	equ	0xFDF
  7680                           postinc2	equ	0xFDE
  7681                           postdec2	equ	0xFDD
  7682                           plusw2	equ	0xFDB
  7683                           fsr2h	equ	0xFDA
  7684                           fsr2l	equ	0xFD9
  7685                           status	equ	0xFD8
  7686                           
  7687 ;; *************** function _ToMainHigh_sendmsg *****************
  7688 ;; Defined at:
  7689 ;;		line 126 in file "../src/messages.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;  length          1    wreg     unsigned char 
  7692 ;;  msgtype         1   22[BANK0 ] unsigned char 
  7693 ;;  data            2   23[BANK0 ] PTR void 
  7694 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), 
  7695 ;; Auto vars:     Size  Location     Type
  7696 ;;  length          1   25[BANK0 ] unsigned char 
  7697 ;; Return value:  Size  Location     Type
  7698 ;;                  1    wreg      char 
  7699 ;; Registers used:
  7700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7701 ;; Tracked objects:
  7702 ;;		On entry : 0/0
  7703 ;;		On exit  : 0/0
  7704 ;;		Unchanged: 0/0
  7705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7706 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7709 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7710 ;;Total ram usage:        4 bytes
  7711 ;; Hardware stack levels used:    1
  7712 ;; Hardware stack levels required when called:    2
  7713 ;; This function calls:
  7714 ;;		i2_send_msg
  7715 ;; This function is called by:
  7716 ;;		_i2c_master_int_handler
  7717 ;;		_i2c_slave_int_handler
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text44
  7722  001AAC                     __ptext44:
  7723                           	opt stack 0
  7724  001AAC                     _ToMainHigh_sendmsg:
  7725                           	opt stack 16
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;incstack = 0
  7729                           ;ToMainHigh_sendmsg@length stored from wreg
  7730  001AAC  CFE8 F079          	movff	wreg,ToMainHigh_sendmsg@length
  7731                           
  7732                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7733                           ;	Return value of _ToMainHigh_sendmsg is never used
  7734  001AB0  0101               	movlb	1	; () banked
  7735  001AB2  0E01               	movlw	high _ToMainHigh_MQ
  7736  001AB4  0100               	movlb	0	; () banked
  7737  001AB6  0100               	movlb	0	; () banked
  7738  001AB8  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  7739  001ABA  0101               	movlb	1	; () banked
  7740  001ABC  0E00               	movlw	low _ToMainHigh_MQ
  7741  001ABE  0100               	movlb	0	; () banked
  7742  001AC0  0100               	movlb	0	; () banked
  7743  001AC2  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  7744  001AC4  C079  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7745  001AC8  C076  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7746  001ACC  0100               	movlb	0	; () banked
  7747  001ACE  0100               	movlb	0	; () banked
  7748  001AD0  C078  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7749  001AD4  0100               	movlb	0	; () banked
  7750  001AD6  0100               	movlb	0	; () banked
  7751  001AD8  C077  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7752  001ADC  EC39  F006         	call	i2_send_msg	;wreg free
  7753  001AE0  0012               	return	
  7754  001AE2                     __end_of_ToMainHigh_sendmsg:
  7755                           	opt stack 0
  7756                           pclatu	equ	0xFFB
  7757                           pclath	equ	0xFFA
  7758                           tblptru	equ	0xFF8
  7759                           tblptrh	equ	0xFF7
  7760                           tblptrl	equ	0xFF6
  7761                           tablat	equ	0xFF5
  7762                           prodh	equ	0xFF4
  7763                           prodl	equ	0xFF3
  7764                           intcon	equ	0xFF2
  7765                           intcon2	equ	0xFF1
  7766                           postinc0	equ	0xFEE
  7767                           fsr0h	equ	0xFEA
  7768                           fsr0l	equ	0xFE9
  7769                           wreg	equ	0xFE8
  7770                           indf1	equ	0xFE7
  7771                           postinc1	equ	0xFE6
  7772                           postdec1	equ	0xFE5
  7773                           fsr1h	equ	0xFE2
  7774                           fsr1l	equ	0xFE1
  7775                           bsr	equ	0xFE0
  7776                           indf2	equ	0xFDF
  7777                           postinc2	equ	0xFDE
  7778                           postdec2	equ	0xFDD
  7779                           plusw2	equ	0xFDB
  7780                           fsr2h	equ	0xFDA
  7781                           fsr2l	equ	0xFD9
  7782                           status	equ	0xFD8
  7783                           
  7784 ;; *************** function i2_send_msg *****************
  7785 ;; Defined at:
  7786 ;;		line 24 in file "../src/messages.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7789 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  7790 ;;  length          1   12[BANK0 ] unsigned char 
  7791 ;;  msgtype         1   13[BANK0 ] unsigned char 
  7792 ;;  data            2   14[BANK0 ] PTR void 
  7793 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), main@uc(15), 
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  7796 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  7797 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  7798 ;;  send_msg        2   17[BANK0 ] unsigned int 
  7799 ;;  send_msg        1   19[BANK0 ] unsigned char 
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  1    wreg      char 
  7802 ;; Registers used:
  7803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7809 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7810 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7811 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7812 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7813 ;;Total ram usage:       12 bytes
  7814 ;; Hardware stack levels used:    1
  7815 ;; Hardware stack levels required when called:    1
  7816 ;; This function calls:
  7817 ;;		i2___awmod
  7818 ;;		i2_memcpy
  7819 ;; This function is called by:
  7820 ;;		_ToMainHigh_sendmsg
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824                           	psect	text45
  7825  000C72                     __ptext45:
  7826                           	opt stack 0
  7827  000C72                     i2_send_msg:
  7828                           	opt stack 16
  7829                           
  7830                           ;messages.c: 25: unsigned char slot;
  7831                           ;messages.c: 27: msg *qmsg;
  7832                           ;messages.c: 28: size_t tlength = length;
  7833                           
  7834                           ;incstack = 0
  7835  000C72  0100               	movlb	0	; () banked
  7836  000C74  0100               	movlb	0	; () banked
  7837  000C76  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  7838  000C7A  0100               	movlb	0	; () banked
  7839  000C7C  0100               	movlb	0	; () banked
  7840  000C7E  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7844  000C80  0100               	movlb	0	; () banked
  7845  000C82  EE20 F041          	lfsr	2,65
  7846  000C86  0100               	movlb	0	; () banked
  7847  000C88  516A               	movf	i2send_msg@qptr& (0+255),w,b
  7848  000C8A  26D9               	addwf	fsr2l,f,c
  7849  000C8C  0100               	movlb	0	; () banked
  7850  000C8E  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7851  000C90  22DA               	addwfc	fsr2h,f,c
  7852  000C92  50DF               	movf	indf2,w,c
  7853  000C94  0100               	movlb	0	; () banked
  7854  000C96  0100               	movlb	0	; () banked
  7855  000C98  6F73               	movwf	i2send_msg@slot& (0+255),b
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7859  000C9A  0100               	movlb	0	; () banked
  7860  000C9C  0100               	movlb	0	; () banked
  7861  000C9E  5173               	movf	i2send_msg@slot& (0+255),w,b
  7862  000CA0  0D0D               	mullw	13
  7863  000CA2  50F3               	movf	prodl,w,c
  7864  000CA4  0100               	movlb	0	; () banked
  7865  000CA6  0100               	movlb	0	; () banked
  7866  000CA8  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  7867  000CAA  0100               	movlb	0	; () banked
  7868  000CAC  0100               	movlb	0	; () banked
  7869  000CAE  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  7870  000CB0  50F4               	movf	prodh,w,c
  7871  000CB2  0100               	movlb	0	; () banked
  7872  000CB4  0100               	movlb	0	; () banked
  7873  000CB6  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  7874  000CB8  0100               	movlb	0	; () banked
  7875  000CBA  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;messages.c: 41: if (qmsg->full != 0) {
  7879  000CBC  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7880  000CC0  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7881  000CC4  50DF               	movf	indf2,w,c
  7882  000CC6  B4D8               	btfsc	status,2,c
  7883  000CC8  D002               	goto	i2l3996
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;messages.c: 42: return (-1);
  7887  000CCA  0EFF               	movlw	255
  7888  000CCC  0012               	return	
  7889  000CCE                     i2l3996:
  7890                           
  7891                           ; BSR set to: 0
  7892                           ;messages.c: 43: }
  7893                           ;messages.c: 46: qmsg->length = length;
  7894  000CCE  0100               	movlb	0	; () banked
  7895  000CD0  EE20 F001          	lfsr	2,1
  7896  000CD4  0100               	movlb	0	; () banked
  7897  000CD6  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  7898  000CD8  26D9               	addwf	fsr2l,f,c
  7899  000CDA  0100               	movlb	0	; () banked
  7900  000CDC  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7901  000CDE  22DA               	addwfc	fsr2h,f,c
  7902  000CE0  0100               	movlb	0	; () banked
  7903  000CE2  C06C  FFDF         	movff	i2send_msg@length,indf2
  7904                           
  7905                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7906  000CE6  0100               	movlb	0	; () banked
  7907  000CE8  EE20 F002          	lfsr	2,2
  7908  000CEC  0100               	movlb	0	; () banked
  7909  000CEE  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  7910  000CF0  26D9               	addwf	fsr2l,f,c
  7911  000CF2  0100               	movlb	0	; () banked
  7912  000CF4  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7913  000CF6  22DA               	addwfc	fsr2h,f,c
  7914  000CF8  0100               	movlb	0	; () banked
  7915  000CFA  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7919  000CFE  0E03               	movlw	3
  7920  000D00  0100               	movlb	0	; () banked
  7921  000D02  0100               	movlb	0	; () banked
  7922  000D04  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  7923  000D06  0100               	movlb	0	; () banked
  7924  000D08  0100               	movlb	0	; () banked
  7925  000D0A  6F60               	movwf	i2memcpy@d1& (0+255),b
  7926  000D0C  0E00               	movlw	0
  7927  000D0E  0100               	movlb	0	; () banked
  7928  000D10  0100               	movlb	0	; () banked
  7929  000D12  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  7930  000D14  0100               	movlb	0	; () banked
  7931  000D16  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  7932  000D18  0100               	movlb	0	; () banked
  7933  000D1A  0100               	movlb	0	; () banked
  7934  000D1C  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7935  000D20  0100               	movlb	0	; () banked
  7936  000D22  0100               	movlb	0	; () banked
  7937  000D24  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  7938  000D28  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  7939  000D2C  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7940  000D30  EC05  F00C         	call	i2_memcpy	;wreg free
  7941                           
  7942                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  7943  000D34  0100               	movlb	0	; () banked
  7944  000D36  EE20 F041          	lfsr	2,65
  7945  000D3A  0100               	movlb	0	; () banked
  7946  000D3C  516A               	movf	i2send_msg@qptr& (0+255),w,b
  7947  000D3E  26D9               	addwf	fsr2l,f,c
  7948  000D40  0100               	movlb	0	; () banked
  7949  000D42  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7950  000D44  22DA               	addwfc	fsr2h,f,c
  7951  000D46  0100               	movlb	0	; () banked
  7952  000D48  EE10 F041          	lfsr	1,65
  7953  000D4C  0100               	movlb	0	; () banked
  7954  000D4E  516A               	movf	i2send_msg@qptr& (0+255),w,b
  7955  000D50  26E1               	addwf	fsr1l,f,c
  7956  000D52  0100               	movlb	0	; () banked
  7957  000D54  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7958  000D56  22E2               	addwfc	fsr1h,f,c
  7959  000D58  50E7               	movf	indf1,w,c
  7960  000D5A  0100               	movlb	0	; () banked
  7961  000D5C  6F70               	movwf	??i2_send_msg& (0+255),b
  7962  000D5E  0E01               	movlw	1
  7963  000D60  0100               	movlb	0	; () banked
  7964  000D62  2570               	addwf	??i2_send_msg& (0+255),w,b
  7965  000D64  0100               	movlb	0	; () banked
  7966  000D66  0100               	movlb	0	; () banked
  7967  000D68  6F60               	movwf	i2___awmod@dividend& (0+255),b
  7968  000D6A  0100               	movlb	0	; () banked
  7969  000D6C  0100               	movlb	0	; () banked
  7970  000D6E  6B61               	clrf	(i2___awmod@dividend+1)& (0+255),b
  7971  000D70  0E00               	movlw	0
  7972  000D72  2361               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  7973  000D74  0E00               	movlw	0
  7974  000D76  0100               	movlb	0	; () banked
  7975  000D78  0100               	movlb	0	; () banked
  7976  000D7A  6F63               	movwf	(i2___awmod@divisor+1)& (0+255),b
  7977  000D7C  0E05               	movlw	5
  7978  000D7E  0100               	movlb	0	; () banked
  7979  000D80  6F62               	movwf	i2___awmod@divisor& (0+255),b
  7980  000D82  EC56  F007         	call	i2___awmod	;wreg free
  7981  000D86  0100               	movlb	0	; () banked
  7982  000D88  0100               	movlb	0	; () banked
  7983  000D8A  5160               	movf	?i2___awmod& (0+255),w,b
  7984  000D8C  6EDF               	movwf	indf2,c
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;messages.c: 59: qmsg->full = 1;
  7988  000D8E  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7989  000D92  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7990  000D96  0E01               	movlw	1
  7991  000D98  6EDF               	movwf	indf2,c
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;messages.c: 60: return (1);
  7995  000D9A  0E01               	movlw	1
  7996  000D9C  0012               	return	
  7997  000D9E                     __end_ofi2_send_msg:
  7998                           	opt stack 0
  7999                           pclatu	equ	0xFFB
  8000                           pclath	equ	0xFFA
  8001                           tblptru	equ	0xFF8
  8002                           tblptrh	equ	0xFF7
  8003                           tblptrl	equ	0xFF6
  8004                           tablat	equ	0xFF5
  8005                           prodh	equ	0xFF4
  8006                           prodl	equ	0xFF3
  8007                           intcon	equ	0xFF2
  8008                           intcon2	equ	0xFF1
  8009                           postinc0	equ	0xFEE
  8010                           fsr0h	equ	0xFEA
  8011                           fsr0l	equ	0xFE9
  8012                           wreg	equ	0xFE8
  8013                           indf1	equ	0xFE7
  8014                           postinc1	equ	0xFE6
  8015                           postdec1	equ	0xFE5
  8016                           fsr1h	equ	0xFE2
  8017                           fsr1l	equ	0xFE1
  8018                           bsr	equ	0xFE0
  8019                           indf2	equ	0xFDF
  8020                           postinc2	equ	0xFDE
  8021                           postdec2	equ	0xFDD
  8022                           plusw2	equ	0xFDB
  8023                           fsr2h	equ	0xFDA
  8024                           fsr2l	equ	0xFD9
  8025                           status	equ	0xFD8
  8026                           
  8027 ;; *************** function i2_memcpy *****************
  8028 ;; Defined at:
  8029 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;  d1              2    0[BANK0 ] PTR void 
  8032 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8033 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8034 ;;		 -> main@msgbuffer(11), 
  8035 ;;  s1              2    2[BANK0 ] PTR const void 
  8036 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8037 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8038 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  8039 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  8040 ;;  n               2    4[BANK0 ] unsigned int 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8043 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8044 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8045 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  8046 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  8047 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8048 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8049 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8050 ;;		 -> main@msgbuffer(11), 
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  2    0[BANK0 ] PTR void 
  8053 ;; Registers used:
  8054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8060 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8061 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8063 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8064 ;;Total ram usage:       10 bytes
  8065 ;; Hardware stack levels used:    1
  8066 ;; This function calls:
  8067 ;;		Nothing
  8068 ;; This function is called by:
  8069 ;;		i2_send_msg
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text46
  8074  00180A                     __ptext46:
  8075                           	opt stack 0
  8076  00180A                     i2_memcpy:
  8077                           	opt stack 16
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;incstack = 0
  8081  00180A  0100               	movlb	0	; () banked
  8082  00180C  0100               	movlb	0	; () banked
  8083  00180E  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8084  001812  0100               	movlb	0	; () banked
  8085  001814  0100               	movlb	0	; () banked
  8086  001816  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  8087  00181A  0100               	movlb	0	; () banked
  8088  00181C  0100               	movlb	0	; () banked
  8089  00181E  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8090  001822  0100               	movlb	0	; () banked
  8091  001824  0100               	movlb	0	; () banked
  8092  001826  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  8093  00182A  D012               	goto	i2l4020
  8094  00182C                     i2l4014:
  8095                           
  8096                           ; BSR set to: 0
  8097  00182C  C068  FFD9         	movff	i2memcpy@s,fsr2l
  8098  001830  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  8099  001834  C066  FFE1         	movff	i2memcpy@d,fsr1l
  8100  001838  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  8101  00183C  CFDF FFE7          	movff	indf2,indf1
  8102                           
  8103                           ; BSR set to: 0
  8104  001840  0100               	movlb	0	; () banked
  8105  001842  0100               	movlb	0	; () banked
  8106  001844  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  8107  001846  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  8108                           
  8109                           ; BSR set to: 0
  8110  001848  0100               	movlb	0	; () banked
  8111  00184A  0100               	movlb	0	; () banked
  8112  00184C  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  8113  00184E  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  8114  001850                     i2l4020:
  8115                           
  8116                           ; BSR set to: 0
  8117  001850  0100               	movlb	0	; () banked
  8118  001852  0100               	movlb	0	; () banked
  8119  001854  0764               	decf	i2memcpy@n& (0+255),f,b
  8120  001856  A0D8               	btfss	status,0,c
  8121  001858  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  8122  00185A  0100               	movlb	0	; () banked
  8123  00185C  2964               	incf	i2memcpy@n& (0+255),w,b
  8124  00185E  B4D8               	btfsc	status,2,c
  8125  001860  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  8126  001862  B4D8               	btfsc	status,2,c
  8127                           
  8128                           ; BSR set to: 0
  8129                           
  8130                           ; BSR set to: 0
  8131                           ;	Return value of i2_memcpy is never used
  8132  001864  0012               	return	
  8133  001866  D7E2               	goto	i2l4014
  8134  001868                     __end_ofi2_memcpy:
  8135                           	opt stack 0
  8136                           pclatu	equ	0xFFB
  8137                           pclath	equ	0xFFA
  8138                           tblptru	equ	0xFF8
  8139                           tblptrh	equ	0xFF7
  8140                           tblptrl	equ	0xFF6
  8141                           tablat	equ	0xFF5
  8142                           prodh	equ	0xFF4
  8143                           prodl	equ	0xFF3
  8144                           intcon	equ	0xFF2
  8145                           intcon2	equ	0xFF1
  8146                           postinc0	equ	0xFEE
  8147                           fsr0h	equ	0xFEA
  8148                           fsr0l	equ	0xFE9
  8149                           wreg	equ	0xFE8
  8150                           indf1	equ	0xFE7
  8151                           postinc1	equ	0xFE6
  8152                           postdec1	equ	0xFE5
  8153                           fsr1h	equ	0xFE2
  8154                           fsr1l	equ	0xFE1
  8155                           bsr	equ	0xFE0
  8156                           indf2	equ	0xFDF
  8157                           postinc2	equ	0xFDE
  8158                           postdec2	equ	0xFDD
  8159                           plusw2	equ	0xFDB
  8160                           fsr2h	equ	0xFDA
  8161                           fsr2l	equ	0xFD9
  8162                           status	equ	0xFD8
  8163                           
  8164 ;; *************** function i2___awmod *****************
  8165 ;; Defined at:
  8166 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  dividend        2    0[BANK0 ] int 
  8169 ;;  divisor         2    2[BANK0 ] int 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;  __awmod         1    6[BANK0 ] unsigned char 
  8172 ;;  __awmod         1    5[BANK0 ] unsigned char 
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  2    0[BANK0 ] int 
  8175 ;; Registers used:
  8176 ;;		wreg, status,2, status,0, prodl
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8182 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8183 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8184 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8185 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8186 ;;Total ram usage:        7 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; This function calls:
  8189 ;;		Nothing
  8190 ;; This function is called by:
  8191 ;;		i2_send_msg
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text47
  8196  000EAC                     __ptext47:
  8197                           	opt stack 0
  8198  000EAC                     i2___awmod:
  8199                           	opt stack 16
  8200                           
  8201                           ; BSR set to: 0
  8202                           ;incstack = 0
  8203  000EAC  0100               	movlb	0	; () banked
  8204  000EAE  6F64               	movwf	??i2___awmod& (0+255),b
  8205  000EB0  0E00               	movlw	0
  8206  000EB2  0100               	movlb	0	; () banked
  8207  000EB4  0100               	movlb	0	; () banked
  8208  000EB6  6F66               	movwf	i2___awmod@sign& (0+255),b
  8209  000EB8  0100               	movlb	0	; () banked
  8210  000EBA  5164               	movf	??i2___awmod& (0+255),w,b
  8211                           
  8212                           ; BSR set to: 0
  8213  000EBC  0100               	movlb	0	; () banked
  8214  000EBE  0100               	movlb	0	; () banked
  8215  000EC0  5161               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  8216  000EC2  0A80               	xorlw	128
  8217  000EC4  6EF3               	movwf	prodl,c
  8218  000EC6  0E80               	movlw	128
  8219  000EC8  5CF3               	subwf	prodl,w,c
  8220  000ECA  0E00               	movlw	0
  8221  000ECC  B4D8               	btfsc	status,2,c
  8222  000ECE  5D60               	subwf	i2___awmod@dividend& (0+255),w,b
  8223  000ED0  B0D8               	btfsc	status,0,c
  8224  000ED2  D00F               	goto	i2l4030
  8225                           
  8226                           ; BSR set to: 0
  8227  000ED4  0100               	movlb	0	; () banked
  8228  000ED6  0100               	movlb	0	; () banked
  8229  000ED8  6D60               	negf	i2___awmod@dividend& (0+255),b
  8230  000EDA  0100               	movlb	0	; () banked
  8231  000EDC  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  8232  000EDE  B0D8               	btfsc	status,0,c
  8233  000EE0  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  8234                           
  8235                           ; BSR set to: 0
  8236  000EE2  0100               	movlb	0	; () banked
  8237  000EE4  6F64               	movwf	??i2___awmod& (0+255),b
  8238  000EE6  0E01               	movlw	1
  8239  000EE8  0100               	movlb	0	; () banked
  8240  000EEA  0100               	movlb	0	; () banked
  8241  000EEC  6F66               	movwf	i2___awmod@sign& (0+255),b
  8242  000EEE  0100               	movlb	0	; () banked
  8243  000EF0  5164               	movf	??i2___awmod& (0+255),w,b
  8244  000EF2                     i2l4030:
  8245                           
  8246                           ; BSR set to: 0
  8247  000EF2  0100               	movlb	0	; () banked
  8248  000EF4  0100               	movlb	0	; () banked
  8249  000EF6  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8250  000EF8  0A80               	xorlw	128
  8251  000EFA  6EF3               	movwf	prodl,c
  8252  000EFC  0E80               	movlw	128
  8253  000EFE  5CF3               	subwf	prodl,w,c
  8254  000F00  0E00               	movlw	0
  8255  000F02  B4D8               	btfsc	status,2,c
  8256  000F04  5D62               	subwf	i2___awmod@divisor& (0+255),w,b
  8257  000F06  B0D8               	btfsc	status,0,c
  8258  000F08  D007               	goto	i2l4034
  8259                           
  8260                           ; BSR set to: 0
  8261  000F0A  0100               	movlb	0	; () banked
  8262  000F0C  0100               	movlb	0	; () banked
  8263  000F0E  6D62               	negf	i2___awmod@divisor& (0+255),b
  8264  000F10  0100               	movlb	0	; () banked
  8265  000F12  1F63               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  8266  000F14  B0D8               	btfsc	status,0,c
  8267  000F16  2B63               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  8268  000F18                     i2l4034:
  8269                           
  8270                           ; BSR set to: 0
  8271  000F18  0100               	movlb	0	; () banked
  8272  000F1A  0100               	movlb	0	; () banked
  8273  000F1C  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8274  000F1E  1162               	iorwf	i2___awmod@divisor& (0+255),w,b
  8275  000F20  B4D8               	btfsc	status,2,c
  8276  000F22  D03A               	goto	i2l4050
  8277                           
  8278                           ; BSR set to: 0
  8279  000F24  0100               	movlb	0	; () banked
  8280  000F26  6F64               	movwf	??i2___awmod& (0+255),b
  8281  000F28  0E01               	movlw	1
  8282  000F2A  0100               	movlb	0	; () banked
  8283  000F2C  0100               	movlb	0	; () banked
  8284  000F2E  6F65               	movwf	i2___awmod@counter& (0+255),b
  8285  000F30  0100               	movlb	0	; () banked
  8286  000F32  5164               	movf	??i2___awmod& (0+255),w,b
  8287  000F34  D009               	goto	i2l4040
  8288  000F36                     i2l4038:
  8289                           
  8290                           ; BSR set to: 0
  8291  000F36  0100               	movlb	0	; () banked
  8292  000F38  0100               	movlb	0	; () banked
  8293  000F3A  0100               	movlb	0	; () banked
  8294  000F3C  90D8               	bcf	status,0,c
  8295  000F3E  3762               	rlcf	i2___awmod@divisor& (0+255),f,b
  8296  000F40  3763               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  8297  000F42  0100               	movlb	0	; () banked
  8298  000F44  0100               	movlb	0	; () banked
  8299  000F46  2B65               	incf	i2___awmod@counter& (0+255),f,b
  8300  000F48                     i2l4040:
  8301                           
  8302                           ; BSR set to: 0
  8303  000F48  0100               	movlb	0	; () banked
  8304  000F4A  0100               	movlb	0	; () banked
  8305  000F4C  AF63               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  8306  000F4E  D7F3               	goto	i2l4038
  8307  000F50                     i2l4042:
  8308                           
  8309                           ; BSR set to: 0
  8310  000F50  0100               	movlb	0	; () banked
  8311  000F52  0100               	movlb	0	; () banked
  8312  000F54  5162               	movf	i2___awmod@divisor& (0+255),w,b
  8313  000F56  0100               	movlb	0	; () banked
  8314  000F58  0100               	movlb	0	; () banked
  8315  000F5A  5D60               	subwf	i2___awmod@dividend& (0+255),w,b
  8316  000F5C  0100               	movlb	0	; () banked
  8317  000F5E  0100               	movlb	0	; () banked
  8318  000F60  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8319  000F62  0100               	movlb	0	; () banked
  8320  000F64  0100               	movlb	0	; () banked
  8321  000F66  5961               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  8322  000F68  A0D8               	btfss	status,0,c
  8323  000F6A  D00C               	goto	i2l4046
  8324                           
  8325                           ; BSR set to: 0
  8326  000F6C  0100               	movlb	0	; () banked
  8327  000F6E  0100               	movlb	0	; () banked
  8328  000F70  5162               	movf	i2___awmod@divisor& (0+255),w,b
  8329  000F72  0100               	movlb	0	; () banked
  8330  000F74  0100               	movlb	0	; () banked
  8331  000F76  5F60               	subwf	i2___awmod@dividend& (0+255),f,b
  8332  000F78  0100               	movlb	0	; () banked
  8333  000F7A  0100               	movlb	0	; () banked
  8334  000F7C  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8335  000F7E  0100               	movlb	0	; () banked
  8336  000F80  0100               	movlb	0	; () banked
  8337  000F82  5B61               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  8338  000F84                     i2l4046:
  8339                           
  8340                           ; BSR set to: 0
  8341  000F84  0100               	movlb	0	; () banked
  8342  000F86  0100               	movlb	0	; () banked
  8343  000F88  0100               	movlb	0	; () banked
  8344  000F8A  90D8               	bcf	status,0,c
  8345  000F8C  3363               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  8346  000F8E  3362               	rrcf	i2___awmod@divisor& (0+255),f,b
  8347                           
  8348                           ; BSR set to: 0
  8349  000F90  0100               	movlb	0	; () banked
  8350  000F92  0100               	movlb	0	; () banked
  8351  000F94  2F65               	decfsz	i2___awmod@counter& (0+255),f,b
  8352  000F96  D7DC               	goto	i2l4042
  8353  000F98                     i2l4050:
  8354                           
  8355                           ; BSR set to: 0
  8356  000F98  0100               	movlb	0	; () banked
  8357  000F9A  0100               	movlb	0	; () banked
  8358  000F9C  5166               	movf	i2___awmod@sign& (0+255),w,b
  8359  000F9E  B4D8               	btfsc	status,2,c
  8360  000FA0  D007               	goto	i2l4054
  8361                           
  8362                           ; BSR set to: 0
  8363  000FA2  0100               	movlb	0	; () banked
  8364  000FA4  0100               	movlb	0	; () banked
  8365  000FA6  6D60               	negf	i2___awmod@dividend& (0+255),b
  8366  000FA8  0100               	movlb	0	; () banked
  8367  000FAA  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  8368  000FAC  B0D8               	btfsc	status,0,c
  8369  000FAE  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  8370  000FB0                     i2l4054:
  8371                           
  8372                           ; BSR set to: 0
  8373  000FB0  C060  F060         	movff	i2___awmod@dividend,?i2___awmod
  8374  000FB4  C061  F061         	movff	i2___awmod@dividend+1,?i2___awmod+1
  8375  000FB8  0012               	return	
  8376  000FBA                     __end_ofi2___awmod:
  8377                           	opt stack 0
  8378                           pclatu	equ	0xFFB
  8379                           pclath	equ	0xFFA
  8380                           tblptru	equ	0xFF8
  8381                           tblptrh	equ	0xFF7
  8382                           tblptrl	equ	0xFF6
  8383                           tablat	equ	0xFF5
  8384                           prodh	equ	0xFF4
  8385                           prodl	equ	0xFF3
  8386                           intcon	equ	0xFF2
  8387                           intcon2	equ	0xFF1
  8388                           postinc0	equ	0xFEE
  8389                           fsr0h	equ	0xFEA
  8390                           fsr0l	equ	0xFE9
  8391                           wreg	equ	0xFE8
  8392                           indf1	equ	0xFE7
  8393                           postinc1	equ	0xFE6
  8394                           postdec1	equ	0xFE5
  8395                           fsr1h	equ	0xFE2
  8396                           fsr1l	equ	0xFE1
  8397                           bsr	equ	0xFE0
  8398                           indf2	equ	0xFDF
  8399                           postinc2	equ	0xFDE
  8400                           postdec2	equ	0xFDD
  8401                           plusw2	equ	0xFDB
  8402                           fsr2h	equ	0xFDA
  8403                           fsr2l	equ	0xFD9
  8404                           status	equ	0xFD8
  8405                           
  8406 ;; *************** function _SleepIfOkay *****************
  8407 ;; Defined at:
  8408 ;;		line 228 in file "../src/messages.c"
  8409 ;; Parameters:    Size  Location     Type
  8410 ;;		None
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;		None
  8413 ;; Return value:  Size  Location     Type
  8414 ;;		None               void
  8415 ;; Registers used:
  8416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8426 ;;Total ram usage:        0 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; Hardware stack levels required when called:    2
  8429 ;; This function calls:
  8430 ;;		_enter_sleep_mode
  8431 ;;		i2_check_msg
  8432 ;;		i2_in_high_int
  8433 ;;		i2_in_low_int
  8434 ;; This function is called by:
  8435 ;;		_InterruptHandlerHigh
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text48
  8440  001676                     __ptext48:
  8441                           	opt stack 0
  8442  001676                     _SleepIfOkay:
  8443                           	opt stack 18
  8444                           
  8445                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8446                           
  8447                           ; BSR set to: 0
  8448                           ;incstack = 0
  8449  001676  663D               	tstfsz	_MQ_Main_Willing_to_block,c
  8450  001678  D001               	goto	i2l3690
  8451  00167A  0012               	return	
  8452  00167C                     i2l3690:
  8453                           
  8454                           ;messages.c: 232: }
  8455                           ;messages.c: 235: if (in_low_int()) {
  8456  00167C  EC57  F00C         	call	i2_in_low_int	;wreg free
  8457  001680  0100               	movlb	0	; () banked
  8458  001682  0100               	movlb	0	; () banked
  8459  001684  5163               	movf	(?i2_in_low_int+1)& (0+255),w,b
  8460  001686  0100               	movlb	0	; () banked
  8461  001688  1162               	iorwf	?i2_in_low_int& (0+255),w,b
  8462  00168A  A4D8               	btfss	status,2,c
  8463  00168C  0012               	return	
  8464                           
  8465                           ; BSR set to: 0
  8466                           ;messages.c: 237: }
  8467                           ;messages.c: 240: if (!in_high_int()) {
  8468                           
  8469                           ; BSR set to: 0
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;messages.c: 236: return;
  8473  00168E  EC36  F00E         	call	i2_in_high_int	;wreg free
  8474  001692  0100               	movlb	0	; () banked
  8475  001694  0100               	movlb	0	; () banked
  8476  001696  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8477  001698  0100               	movlb	0	; () banked
  8478  00169A  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8479  00169C  B4D8               	btfsc	status,2,c
  8480  00169E  0012               	return	
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;messages.c: 242: }
  8484                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8485                           
  8486                           ; BSR set to: 0
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;messages.c: 241: return;
  8490  0016A0  0101               	movlb	1	; () banked
  8491  0016A2  0E01               	movlw	high _ToMainHigh_MQ
  8492  0016A4  0100               	movlb	0	; () banked
  8493  0016A6  0100               	movlb	0	; () banked
  8494  0016A8  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8495  0016AA  0101               	movlb	1	; () banked
  8496  0016AC  0E00               	movlw	low _ToMainHigh_MQ
  8497  0016AE  0100               	movlb	0	; () banked
  8498  0016B0  0100               	movlb	0	; () banked
  8499  0016B2  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8500  0016B4  EC71  F00D         	call	i2_check_msg	;wreg free
  8501  0016B8  0900               	iorlw	0
  8502  0016BA  A4D8               	btfss	status,2,c
  8503  0016BC  0012               	return	
  8504                           
  8505                           ;messages.c: 249: }
  8506                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8507                           
  8508                           ;messages.c: 248: return;
  8509  0016BE  0101               	movlb	1	; () banked
  8510  0016C0  0E01               	movlw	high _ToMainLow_MQ
  8511  0016C2  0100               	movlb	0	; () banked
  8512  0016C4  0100               	movlb	0	; () banked
  8513  0016C6  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8514  0016C8  0101               	movlb	1	; () banked
  8515  0016CA  0E43               	movlw	low _ToMainLow_MQ
  8516  0016CC  0100               	movlb	0	; () banked
  8517  0016CE  0100               	movlb	0	; () banked
  8518  0016D0  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8519  0016D2  EC71  F00D         	call	i2_check_msg	;wreg free
  8520  0016D6  0900               	iorlw	0
  8521  0016D8  B4D8               	btfsc	status,2,c
  8522                           
  8523                           ;messages.c: 252: }
  8524                           ;messages.c: 253: enter_sleep_mode();
  8525                           
  8526                           ;messages.c: 251: return;
  8527  0016DA  EC54  F00E         	call	_enter_sleep_mode	;wreg free
  8528  0016DE  0012               	return	
  8529  0016E0                     __end_of_SleepIfOkay:
  8530                           	opt stack 0
  8531                           pclatu	equ	0xFFB
  8532                           pclath	equ	0xFFA
  8533                           tblptru	equ	0xFF8
  8534                           tblptrh	equ	0xFF7
  8535                           tblptrl	equ	0xFF6
  8536                           tablat	equ	0xFF5
  8537                           prodh	equ	0xFF4
  8538                           prodl	equ	0xFF3
  8539                           intcon	equ	0xFF2
  8540                           intcon2	equ	0xFF1
  8541                           postinc0	equ	0xFEE
  8542                           fsr0h	equ	0xFEA
  8543                           fsr0l	equ	0xFE9
  8544                           wreg	equ	0xFE8
  8545                           indf1	equ	0xFE7
  8546                           postinc1	equ	0xFE6
  8547                           postdec1	equ	0xFE5
  8548                           fsr1h	equ	0xFE2
  8549                           fsr1l	equ	0xFE1
  8550                           bsr	equ	0xFE0
  8551                           indf2	equ	0xFDF
  8552                           postinc2	equ	0xFDE
  8553                           postdec2	equ	0xFDD
  8554                           plusw2	equ	0xFDB
  8555                           fsr2h	equ	0xFDA
  8556                           fsr2l	equ	0xFD9
  8557                           status	equ	0xFD8
  8558                           
  8559 ;; *************** function i2_in_low_int *****************
  8560 ;; Defined at:
  8561 ;;		line 31 in file "../src/interrupts.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;		None
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;		None
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  2    2[BANK0 ] int 
  8568 ;; Registers used:
  8569 ;;		wreg, status,2, status,0, cstack
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8575 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8578 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8579 ;;Total ram usage:        2 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; Hardware stack levels required when called:    1
  8582 ;; This function calls:
  8583 ;;		i2_in_high_int
  8584 ;; This function is called by:
  8585 ;;		_SleepIfOkay
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text49
  8590  0018AE                     __ptext49:
  8591                           	opt stack 0
  8592  0018AE                     i2_in_low_int:
  8593                           	opt stack 18
  8594                           
  8595                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  8596                           
  8597                           ;incstack = 0
  8598  0018AE  ACF2               	btfss	intcon,6,c	;volatile
  8599  0018B0  D008               	goto	i2l3972
  8600                           
  8601                           ;interrupts.c: 33: return (0);
  8602  0018B2  0E00               	movlw	0
  8603  0018B4  0100               	movlb	0	; () banked
  8604  0018B6  0100               	movlb	0	; () banked
  8605  0018B8  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8606  0018BA  0E00               	movlw	0
  8607  0018BC  0100               	movlb	0	; () banked
  8608  0018BE  6F62               	movwf	?i2_in_low_int& (0+255),b
  8609  0018C0  0012               	return	
  8610  0018C2                     i2l3972:
  8611  0018C2  EC36  F00E         	call	i2_in_high_int	;wreg free
  8612  0018C6  0100               	movlb	0	; () banked
  8613  0018C8  0100               	movlb	0	; () banked
  8614  0018CA  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8615  0018CC  0100               	movlb	0	; () banked
  8616  0018CE  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8617  0018D0  B4D8               	btfsc	status,2,c
  8618  0018D2  D008               	goto	i2l3980
  8619                           
  8620                           ; BSR set to: 0
  8621                           ;interrupts.c: 35: return (0);
  8622  0018D4  0E00               	movlw	0
  8623  0018D6  0100               	movlb	0	; () banked
  8624  0018D8  0100               	movlb	0	; () banked
  8625  0018DA  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8626  0018DC  0E00               	movlw	0
  8627  0018DE  0100               	movlb	0	; () banked
  8628  0018E0  6F62               	movwf	?i2_in_low_int& (0+255),b
  8629  0018E2  0012               	return	
  8630  0018E4                     i2l3980:
  8631                           
  8632                           ; BSR set to: 0
  8633                           ;interrupts.c: 37: return (1);
  8634  0018E4  0E00               	movlw	0
  8635  0018E6  0100               	movlb	0	; () banked
  8636  0018E8  0100               	movlb	0	; () banked
  8637  0018EA  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8638  0018EC  0E01               	movlw	1
  8639  0018EE  0100               	movlb	0	; () banked
  8640  0018F0  6F62               	movwf	?i2_in_low_int& (0+255),b
  8641  0018F2  0012               	return	
  8642  0018F4                     __end_ofi2_in_low_int:
  8643                           	opt stack 0
  8644                           pclatu	equ	0xFFB
  8645                           pclath	equ	0xFFA
  8646                           tblptru	equ	0xFF8
  8647                           tblptrh	equ	0xFF7
  8648                           tblptrl	equ	0xFF6
  8649                           tablat	equ	0xFF5
  8650                           prodh	equ	0xFF4
  8651                           prodl	equ	0xFF3
  8652                           intcon	equ	0xFF2
  8653                           intcon2	equ	0xFF1
  8654                           postinc0	equ	0xFEE
  8655                           fsr0h	equ	0xFEA
  8656                           fsr0l	equ	0xFE9
  8657                           wreg	equ	0xFE8
  8658                           indf1	equ	0xFE7
  8659                           postinc1	equ	0xFE6
  8660                           postdec1	equ	0xFE5
  8661                           fsr1h	equ	0xFE2
  8662                           fsr1l	equ	0xFE1
  8663                           bsr	equ	0xFE0
  8664                           indf2	equ	0xFDF
  8665                           postinc2	equ	0xFDE
  8666                           postdec2	equ	0xFDD
  8667                           plusw2	equ	0xFDB
  8668                           fsr2h	equ	0xFDA
  8669                           fsr2l	equ	0xFD9
  8670                           status	equ	0xFD8
  8671                           
  8672 ;; *************** function i2_in_high_int *****************
  8673 ;; Defined at:
  8674 ;;		line 23 in file "../src/interrupts.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;		None
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;		None
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  2    0[BANK0 ] int 
  8681 ;; Registers used:
  8682 ;;		wreg, status,2
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8688 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8691 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8692 ;;Total ram usage:        2 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; This function calls:
  8695 ;;		Nothing
  8696 ;; This function is called by:
  8697 ;;		_SleepIfOkay
  8698 ;;		i2_in_low_int
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text50
  8703  001C6C                     __ptext50:
  8704                           	opt stack 0
  8705  001C6C                     i2_in_high_int:
  8706                           	opt stack 18
  8707                           
  8708                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;incstack = 0
  8712  001C6C  0E00               	movlw	0
  8713  001C6E  AEF2               	btfss	intcon,7,c	;volatile
  8714  001C70  0E01               	movlw	1
  8715  001C72  0100               	movlb	0	; () banked
  8716  001C74  0100               	movlb	0	; () banked
  8717  001C76  6F60               	movwf	?i2_in_high_int& (0+255),b
  8718  001C78  0100               	movlb	0	; () banked
  8719  001C7A  6B61               	clrf	(?i2_in_high_int+1)& (0+255),b
  8720  001C7C  0012               	return	
  8721  001C7E                     __end_ofi2_in_high_int:
  8722                           	opt stack 0
  8723                           pclatu	equ	0xFFB
  8724                           pclath	equ	0xFFA
  8725                           tblptru	equ	0xFF8
  8726                           tblptrh	equ	0xFF7
  8727                           tblptrl	equ	0xFF6
  8728                           tablat	equ	0xFF5
  8729                           prodh	equ	0xFF4
  8730                           prodl	equ	0xFF3
  8731                           intcon	equ	0xFF2
  8732                           intcon2	equ	0xFF1
  8733                           postinc0	equ	0xFEE
  8734                           fsr0h	equ	0xFEA
  8735                           fsr0l	equ	0xFE9
  8736                           wreg	equ	0xFE8
  8737                           indf1	equ	0xFE7
  8738                           postinc1	equ	0xFE6
  8739                           postdec1	equ	0xFE5
  8740                           fsr1h	equ	0xFE2
  8741                           fsr1l	equ	0xFE1
  8742                           bsr	equ	0xFE0
  8743                           indf2	equ	0xFDF
  8744                           postinc2	equ	0xFDE
  8745                           postdec2	equ	0xFDD
  8746                           plusw2	equ	0xFDB
  8747                           fsr2h	equ	0xFDA
  8748                           fsr2l	equ	0xFD9
  8749                           status	equ	0xFD8
  8750                           
  8751 ;; *************** function i2_check_msg *****************
  8752 ;; Defined at:
  8753 ;;		line 222 in file "../src/messages.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  8756 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;		None
  8759 ;; Return value:  Size  Location     Type
  8760 ;;                  1    wreg      unsigned char 
  8761 ;; Registers used:
  8762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8763 ;; Tracked objects:
  8764 ;;		On entry : 0/0
  8765 ;;		On exit  : 0/0
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8768 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8770 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8771 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8772 ;;Total ram usage:        3 bytes
  8773 ;; Hardware stack levels used:    1
  8774 ;; This function calls:
  8775 ;;		Nothing
  8776 ;; This function is called by:
  8777 ;;		_SleepIfOkay
  8778 ;; This function uses a non-reentrant model
  8779 ;;
  8780                           
  8781                           	psect	text51
  8782  001AE2                     __ptext51:
  8783                           	opt stack 0
  8784  001AE2                     i2_check_msg:
  8785                           	opt stack 19
  8786                           
  8787                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8788                           
  8789                           ; BSR set to: 0
  8790                           ;incstack = 0
  8791  001AE2  0100               	movlb	0	; () banked
  8792  001AE4  EE20 F042          	lfsr	2,66
  8793  001AE8  0100               	movlb	0	; () banked
  8794  001AEA  5160               	movf	i2check_msg@qptr& (0+255),w,b
  8795  001AEC  26D9               	addwf	fsr2l,f,c
  8796  001AEE  0100               	movlb	0	; () banked
  8797  001AF0  5161               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  8798  001AF2  22DA               	addwfc	fsr2h,f,c
  8799  001AF4  50DF               	movf	indf2,w,c
  8800  001AF6  0100               	movlb	0	; () banked
  8801  001AF8  6F62               	movwf	??i2_check_msg& (0+255),b
  8802  001AFA  0100               	movlb	0	; () banked
  8803  001AFC  5162               	movf	??i2_check_msg& (0+255),w,b
  8804  001AFE  0D0D               	mullw	13
  8805  001B00  50F3               	movf	prodl,w,c
  8806  001B02  0100               	movlb	0	; () banked
  8807  001B04  0100               	movlb	0	; () banked
  8808  001B06  2560               	addwf	i2check_msg@qptr& (0+255),w,b
  8809  001B08  6ED9               	movwf	fsr2l,c
  8810  001B0A  50F4               	movf	prodh,w,c
  8811  001B0C  0100               	movlb	0	; () banked
  8812  001B0E  0100               	movlb	0	; () banked
  8813  001B10  2161               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  8814  001B12  6EDA               	movwf	fsr2h,c
  8815  001B14  50DF               	movf	indf2,w,c
  8816  001B16  0012               	return	
  8817  001B18                     __end_ofi2_check_msg:
  8818                           	opt stack 0
  8819                           pclatu	equ	0xFFB
  8820                           pclath	equ	0xFFA
  8821                           tblptru	equ	0xFF8
  8822                           tblptrh	equ	0xFF7
  8823                           tblptrl	equ	0xFF6
  8824                           tablat	equ	0xFF5
  8825                           prodh	equ	0xFF4
  8826                           prodl	equ	0xFF3
  8827                           intcon	equ	0xFF2
  8828                           intcon2	equ	0xFF1
  8829                           postinc0	equ	0xFEE
  8830                           fsr0h	equ	0xFEA
  8831                           fsr0l	equ	0xFE9
  8832                           wreg	equ	0xFE8
  8833                           indf1	equ	0xFE7
  8834                           postinc1	equ	0xFE6
  8835                           postdec1	equ	0xFE5
  8836                           fsr1h	equ	0xFE2
  8837                           fsr1l	equ	0xFE1
  8838                           bsr	equ	0xFE0
  8839                           indf2	equ	0xFDF
  8840                           postinc2	equ	0xFDE
  8841                           postdec2	equ	0xFDD
  8842                           plusw2	equ	0xFDB
  8843                           fsr2h	equ	0xFDA
  8844                           fsr2l	equ	0xFD9
  8845                           status	equ	0xFD8
  8846                           
  8847 ;; *************** function _enter_sleep_mode *****************
  8848 ;; Defined at:
  8849 ;;		line 202 in file "../src/messages.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;		None
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;		None
  8854 ;; Return value:  Size  Location     Type
  8855 ;;		None               void
  8856 ;; Registers used:
  8857 ;;		None
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8867 ;;Total ram usage:        0 bytes
  8868 ;; Hardware stack levels used:    1
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_SleepIfOkay
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text52
  8877  001CA8                     __ptext52:
  8878                           	opt stack 0
  8879  001CA8                     _enter_sleep_mode:
  8880                           	opt stack 19
  8881                           
  8882                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;incstack = 0
  8886  001CA8  8ED3               	bsf	4051,7,c	;volatile
  8887  001CAA  0003               	sleep		;# 
  8888  001CAC  0012               	return	
  8889  001CAE                     __end_of_enter_sleep_mode:
  8890                           	opt stack 0
  8891  0000                     pclatu	equ	0xFFB
  8892                           pclath	equ	0xFFA
  8893                           tblptru	equ	0xFF8
  8894                           tblptrh	equ	0xFF7
  8895                           tblptrl	equ	0xFF6
  8896                           tablat	equ	0xFF5
  8897                           prodh	equ	0xFF4
  8898                           prodl	equ	0xFF3
  8899                           intcon	equ	0xFF2
  8900                           intcon2	equ	0xFF1
  8901                           postinc0	equ	0xFEE
  8902                           fsr0h	equ	0xFEA
  8903                           fsr0l	equ	0xFE9
  8904                           wreg	equ	0xFE8
  8905                           indf1	equ	0xFE7
  8906                           postinc1	equ	0xFE6
  8907                           postdec1	equ	0xFE5
  8908                           fsr1h	equ	0xFE2
  8909                           fsr1l	equ	0xFE1
  8910                           bsr	equ	0xFE0
  8911                           indf2	equ	0xFDF
  8912                           postinc2	equ	0xFDE
  8913                           postdec2	equ	0xFDD
  8914                           plusw2	equ	0xFDB
  8915                           fsr2h	equ	0xFDA
  8916                           fsr2l	equ	0xFD9
  8917                           status	equ	0xFD8
  8918                           pclatu	equ	0xFFB
  8919                           pclath	equ	0xFFA
  8920                           tblptru	equ	0xFF8
  8921                           tblptrh	equ	0xFF7
  8922                           tblptrl	equ	0xFF6
  8923                           tablat	equ	0xFF5
  8924                           prodh	equ	0xFF4
  8925                           prodl	equ	0xFF3
  8926                           intcon	equ	0xFF2
  8927                           intcon2	equ	0xFF1
  8928                           postinc0	equ	0xFEE
  8929                           fsr0h	equ	0xFEA
  8930                           fsr0l	equ	0xFE9
  8931                           wreg	equ	0xFE8
  8932                           indf1	equ	0xFE7
  8933                           postinc1	equ	0xFE6
  8934                           postdec1	equ	0xFE5
  8935                           fsr1h	equ	0xFE2
  8936                           fsr1l	equ	0xFE1
  8937                           bsr	equ	0xFE0
  8938                           indf2	equ	0xFDF
  8939                           postinc2	equ	0xFDE
  8940                           postdec2	equ	0xFDD
  8941                           plusw2	equ	0xFDB
  8942                           fsr2h	equ	0xFDA
  8943                           fsr2l	equ	0xFD9
  8944                           status	equ	0xFD8
  8945                           
  8946                           	psect	param0
  8947  0000                     pclatu	equ	0xFFB
  8948                           pclath	equ	0xFFA
  8949                           tblptru	equ	0xFF8
  8950                           tblptrh	equ	0xFF7
  8951                           tblptrl	equ	0xFF6
  8952                           tablat	equ	0xFF5
  8953                           prodh	equ	0xFF4
  8954                           prodl	equ	0xFF3
  8955                           intcon	equ	0xFF2
  8956                           intcon2	equ	0xFF1
  8957                           postinc0	equ	0xFEE
  8958                           fsr0h	equ	0xFEA
  8959                           fsr0l	equ	0xFE9
  8960                           wreg	equ	0xFE8
  8961                           indf1	equ	0xFE7
  8962                           postinc1	equ	0xFE6
  8963                           postdec1	equ	0xFE5
  8964                           fsr1h	equ	0xFE2
  8965                           fsr1l	equ	0xFE1
  8966                           bsr	equ	0xFE0
  8967                           indf2	equ	0xFDF
  8968                           postinc2	equ	0xFDE
  8969                           postdec2	equ	0xFDD
  8970                           plusw2	equ	0xFDB
  8971                           fsr2h	equ	0xFDA
  8972                           fsr2l	equ	0xFD9
  8973                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        27
    BSS         302
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      64
    BANK0           160     76     106
    BANK1           256     81     230
    BANK2           256      0     134
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@ic(BANK1[29]), main@uc(BANK1[15]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@ic(BANK1[29]), main@uc(BANK1[15]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_slave_int_handler@motorcomm(COMRAM[2]), main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 15
		 -> main@uc(BANK1[15]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 15
		 -> NULL(NULL[0]), main@uc(BANK1[15]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@sensorMsg(BANK1[1]), main@correct(BANK1[6]), main@stop(BANK1[6]), main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 15
		 -> NULL(NULL[0]), main@uc(BANK1[15]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[29]), main@uc(BANK1[15]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_i2c_master_int_handler
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                87    87      0    8794
                                             74 BANK0      2     2      0
                                              0 BANK1     81    81      0
                         _Open1USART
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     256
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             45 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             49 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4    1064
                                             45 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             51 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             49 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             47 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2125
                                             69 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2125
                                             69 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1953
                                             55 BANK0     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     360
                                             45 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     390
                                             45 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      22
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     119
                                             45 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              7     4      3     282
                                             45 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     273
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    5587
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2761
                                             26 COMRAM     1     1      0
                         _Read1USART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _Read1USART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   1     1      0    2826
                                             26 COMRAM     1     1      0
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2738
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (8) _send_msg                                            12     6      6    2354
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     530
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     747
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    4430
                                             31 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  0     0      0     121
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    4025
             _i2c_master_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_master_int_handler                              5     5      0    4025
                                             26 BANK0      5     5      0
                 _ToMainHigh_sendmsg
                    _i2c_master_recv
 ---------------------------------------------------------------------------------
 (13) _i2c_master_recv                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3994
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    3381
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4    1034
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1USART
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _ToMainLow_sendmsg
       _send_msg
         i1___awmod
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _Read1USART
     _ToMainLow_sendmsg
       _send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _i2c_master_recv
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      86      10       52.3%
BITBANK1           100      0       0       7        0.0%
BANK1              100     51      E6       8       89.8%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      6A       5       66.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      40       1       67.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     216       6        0.0%
DATA                 0      0     216       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Apr 07 17:31:21 2014

       _MQ_Main_Willing_to_block 003D                      _SSPSTATbits 000FC7  
      __end_of_ToMainLow_recvmsg 197A                               bsr 000FE0  
      __end_of_ToMainLow_sendmsg 1B68                     __CFG_CP0$OFF 000000  
                            l134 0254                              l151 03CC  
                            l161 0494                              l175 052E  
                            l612 13E0                              l533 128A  
                            l616 13FE                              l552 1B3C  
                            l553 1B3E                              l618 140C  
                            l619 140E                              l580 19F2  
                            l581 19F4                              l844 1C00  
__size_of_uart_trans_int_handler 0068             __size_of_WriteTimer0 0012  
           __size_of_WriteTimer1 0012                     ___awmod@sign 0093  
                 _FromMainLow_MQ 0243                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     __CFG_IESO$ON 000000  
                   ?_in_high_int 008D                 ??_init_uart_recv 008F  
     i2c_slave_int_handler@F9160 0032       i2c_slave_int_handler@F9162 0037  
     i2c_slave_int_handler@F9158 002D                             l3010 0BD4  
                           l3006 0B50                             l3030 156C  
                           l3044 17F2                             l3038 17CE  
                           l2600 1928                             l3058 0A42  
                           l3074 0B30                             l3420 0E42  
                           l3412 0E0A                             l3432 0EA2  
                           l3424 0E76                             l3416 0E28  
                           l3408 0DE4                             l3418 0E3A  
                           l2722 0202                             l2714 01C0  
                           l3428 0E8A                             l2804 04B4  
                           l2724 025A                             l2814 0516  
                           l2806 04EE                             l2920 13CC  
                           l2840 05B2                             l2808 04F2  
                           l2760 0344                             l2736 0284  
                           l2586 189E                             l2578 187C  
                           l2746 02DA                             l2940 1400  
                           l2844 05F8                             l2828 0556  
                           l2838 0576                             l2774 03AA  
                           l2928 13E2                             l2848 05FC  
                           l2792 0436                             l2786 0410  
                           l2794 0456                             l2972 144A  
                           l2984 14A2                             l2978 1476  
                           l2994 1150                             l2998 11BA  
                    main@correct 018E                             _LATA 000F89  
                           _LATB 000F8A                             u2095 1204  
                           u1771 028E                             u1781 02A0  
                           u3627 1C02                             i1l57 0080  
                _FromMainHigh_MQ 0200                   Read1USART@data 0001  
         ?_block_on_To_msgqueues 0001                             _main 00CA  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
         __CFG_DSWDTOSC$T1OSCREF 000000                      main@msgtype 01A8  
                           pclat 000FFA                      i2_check_msg 1AE2  
                           prodh 000FF4                             prodl 000FF3  
                           start 00C6                 ?_adc_int_handler 0001  
                     i2_send_msg 0C72    __size_of_i2c_configure_master 0020  
      ToMainHigh_recvmsg@msgtype 00A5                   send_msg@length 000D  
                __end_of_OpenADC 128E      __size_of_timer0_int_handler 0018  
                    _Delay1KTCYx 1BFC                    __CFG_PLLDIV$3 000000  
                          ?_main 0001                  __end_of___awmod 0EAC  
                          _T0CON 000FD5                            _T1CON 000FCD  
                     i1memcpy@d1 0001                            i1l629 1BD4  
                          i1l469 1744                            i2l350 06AA  
                          i2l351 078E                            i2l361 094C  
                          i2l355 07A8                            i2l364 0982  
                          i2l359 0836                       i1memcpy@s1 0003  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _PORTA 000F80                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TXREG 000FAE                       i2memcpy@d1 0060  
                 __CFG_FCMEN$OFF 000000                       i2memcpy@s1 0062  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
                 i1___awmod@sign 0007                  __end_of_in_main 1938  
     ToMainLow_recvmsg@maxlength 00A9                       _Read1USART 1BC6  
        timer0_lthread@msgbuffer 0093                   __CFG_T1DIG$OFF 000000  
                          tablat 000FF5                            plusw2 000FDB  
                          status 000FD8           _uart_trans_int_handler 16E0  
               __end_ofi1_memcpy 1A3C               __size_ofi1___awmod 009C  
               __end_ofi2_memcpy 1868               __size_ofi2___awmod 010E  
                __initialization 14AA                     __end_of_main 0616  
    __size_of_timer1_int_handler 003A       __size_of_ToMainLow_recvmsg 0042  
     __size_of_ToMainLow_sendmsg 0026            __size_ofi2_in_low_int 0046  
                 __CFG_OSC$HSPLL 000000                       _Open1USART 13AC  
                         ??_main 00AA                  send_msg@msgtype 000E  
                  __activetblptr 000002                  send_msg@tlength 0012  
                     _SetChanADC 1B88                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ANCON0 000F48  
                         _ANCON1 000F49          ??_uart_recv_int_handler 001B  
                         _T1GCON 000F9A                           i1l3520 12D6  
                         i1l3540 1320                           i1l3532 1308  
                         i1l3524 12E8                           i1l3516 12BA  
                         i1l3526 12F0                           i1l3630 1016  
                         i1l3528 12F4                           i1l3536 1312  
                         i1l3616 1A68                           i1l3490 1A0E  
                         i1l3636 105A                           i1l3654 0070  
                         i1l3496 1A2A                           i1l3592 10B2  
                         i1l3648 0066                           i2l4020 1850  
                         i2l4030 0EF2                           i2l4014 182C  
                         i2l4040 0F48                       _OpenTimer0 1B18  
                         i2l4042 0F50                           i2l4050 0F98  
                         i2l4034 0F18                       _OpenTimer1 19BC  
                         i2l4054 0FB0                           i2l4046 0F84  
                         i2l4038 0F36                   __CFG_WDTEN$OFF 000000  
                         i2l3740 0776                           i2l3732 0666  
                         i2l3752 07E0                           i2l3728 0632  
                         i2l3672 1364                           i2l3690 167C  
                         i2l3748 07C6                           i2l3678 136E  
                         i2l3768 08CE                           i2l3778 0952  
                         i2l3786 099C                           i2l3980 18E4  
                         i2l3972 18C2                           i2l3996 0CCE  
                         _RCREG1 000FAF                    ??_SleepIfOkay 0064  
                         _RCSTA1 000FAC                           _OSCCON 000FD3  
                         _SPBRG1 000FB0                           _SSPADD 000FC8  
                 __CFG_WPCFG$OFF 000000                           _SSPBUF 000FC9  
                         _TXSTA1 000FAD               timer0_lthread@tptr 008D  
                 __CFG_WPDIS$OFF 000000                        ??_OpenADC 0090  
                   i2_in_low_int 18AE                      ?i2_send_msg 006A  
                 __CFG_XINST$OFF 000000                           _t1Mult 003B  
                _i2c_int_handler 1CA2                        ??___awmod 0091  
                _i2c_master_recv 1748                  _i2c_master_send 0B34  
               OpenTimer0@config 008D                           _ic_ptr 00C8  
                  main@msgbuffer 019C                 __end_of_init_i2c 1676  
               OpenTimer1@config 008F                           _memcpy 17AC  
                         clear_0 14B0                           clear_1 14BC  
                         clear_2 14C8                  ___awmod@divisor 008F  
                         _uc_ptr 003F                  ___awmod@counter 0092  
                         main@ic 01BA                           main@uc 01AB  
               __end_of_recv_msg 0B34                    main@sensorMsg 0199  
                      ??_in_main 0093                __end_ofi1___awmod 132A  
               __end_of_send_msg 113A                     __pdataCOMRAM 002D  
              __end_ofi2___awmod 0FBA                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 0090                   i2___awmod@sign 0066  
       ToMainLow_recvmsg@msgtype 00A5             __size_of_in_high_int 0012  
                    ?_Read1USART 0001                       __accesstop 0060  
        __end_of__initialization 151A       __end_of_ToMainHigh_recvmsg 19BC  
     __end_of_ToMainHigh_sendmsg 1AE2                  __CFG_IOL1WAY$ON 000000  
           __CFG_WPEND$PAGE_WPFP 000000      __end_of_init_timer1_lthread 1C36  
            __end_of_SleepIfOkay 16E0                   __pcstackCOMRAM 0001  
                   __pidataBANK1 1C7E           __size_ofi2_in_high_int 0012  
             __size_of_check_msg 0036                  __CFG_DSWDTPS$G2 000000  
                    ?_Open1USART 008D                      ?_SetChanADC 0001  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 13A4  
    __end_of_InterruptHandlerLow 00C6                        ?i2_memcpy 0060  
                  _ToMainHigh_MQ 0100                 _enter_sleep_mode 1CA8  
            __size_ofi2_send_msg 012C                    check_msg@qptr 008D  
        ??_block_on_To_msgqueues 0093             __size_of_init_queues 006E  
                     __pbssBANK0 00AC                       __pbssBANK1 0100  
                     __pbssBANK2 0200                      ?_OpenTimer0 0001  
                    ?_OpenTimer1 008D                       __pnvCOMRAM 003F  
        __end_of_i2c_int_handler 1CA8                     ?i2_check_msg 0060  
        __end_of_i2c_master_recv 17AC          __end_of_i2c_master_send 0C72  
       ??_i2c_master_int_handler 007A                recv_msg@maxlength 0099  
                recv_msg@msgtype 009A                  recv_msg@tlength 00A1  
                   ?_Delay1KTCYx 0001                 WriteTimer0@timer 0062  
                        ?_memcpy 008D                 WriteTimer1@timer 0003  
                  ??_WriteTimer0 0062                    ??_WriteTimer1 0003  
            __size_of_Read1USART 001E          __size_of_timer0_lthread 0012  
               Open1USART@config 0092     __end_of_i2c_configure_master 1B88  
                     ??i1_memcpy 0007                       ??i2_memcpy 0066  
                 main@lastMotors 019A                          _SPBRGH1 000F7F  
                  i2_in_high_int 1C6C                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
        ?_uart_trans_int_handler 0001                __end_of_check_msg 1AAC  
                      ?_init_i2c 008D                      _SleepIfOkay 1676  
            __size_of_Open1USART 0080                        ?_recv_msg 0097  
                        _OpenADC 11EE                       _in_low_int 1868  
                        __Hparam 0000              __size_of_SetChanADC 0020  
                      ?_send_msg 000B                          __Lparam 0000  
     __end_of_timer0_int_handler 1BFC                 init_uart_recv@uc 008D  
                        ___awmod 0D9E                  __CFG_STVREN$OFF 000000  
                        __pcinit 14AA                  __size_of_memcpy 005E  
       __size_of_adc_int_handler 0002                       _init_queue 1524  
                        __ramtop 0F00              __size_of_OpenTimer0 002A  
            __size_of_OpenTimer1 0040                          __ptext0 00CA  
                        __ptext1 113A                          __ptext2 1C12  
                        __ptext3 1BA8                          __ptext4 1C24  
                        __ptext5 159E                          __ptext6 1524  
                        __ptext7 160C                          __ptext8 0B34  
                        __ptext9 1B68                        _T0CONbits 000FD5  
              OpenTimer1@config1 008D                          _in_main 18F4  
                      _T1CONbits 000FCD                 ___awmod@dividend 008D  
            __end_of_WriteTimer0 1C6C              __end_of_WriteTimer1 1C5A  
                 ?i2_in_high_int 0060   __end_of_uart_trans_int_handler 1748  
                 OpenADC@config2 008D                   OpenADC@config3 008E  
                        main@msg 0186                   __pintcode_body 132A  
           end_of_initialization 151A   __size_of_uart_recv_int_handler 00C0  
                        memcpy@d 0093                          memcpy@n 0091  
                        memcpy@s 0095    __end_of_uart_recv_int_handler 107A  
                     ??_init_i2c 008F                    __Lmediumconst 0000  
                        int_func 132A          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                 ?_i2c_master_recv 0001  
               ?_i2c_master_send 008D                       ??_recv_msg 009E  
                   ??i2_send_msg 0070                       ??_send_msg 0011  
__size_of_i2c_master_int_handler 03C0       __end_of_timer1_int_handler 1A76  
                      _RCSTAbits 000FAC                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 0076                       _uart_trans 113A  
                      _PORTBbits 000F81                 __CFG_DSBOREN$OFF 000000  
               __CFG_CPUDIV$OSC1 000000                        _TRISBbits 000F93  
                      _TRISCbits 000F94                        i1___awmod 128E  
             __end_ofi2_send_msg 0D9E                        i2___awmod 0EAC  
                   ??_Read1USART 0001                __CFG_WPFP$PAGE_63 000000  
                      _TXSTAbits 000FAD                       main@length 01A7  
                    ?_in_low_int 008F            timer0_lthread@msgtype 008F  
           _i2c_configure_master 1B68              __CFG_MSSP7B_EN$MSK7 000000  
           __size_ofi2_check_msg 0036         __end_of_enter_sleep_mode 1CAE  
             _ToMainHigh_recvmsg 197A                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 1AAC                        i1memcpy@n 0005  
                      i1memcpy@s 0009        i2c_master_send@recvlength 008D  
                  __pidataCOMRAM 1C8D                   _timer0_lthread 1C12  
                   ??_Open1USART 008F                      ?_init_queue 008D  
                      i2memcpy@d 0066                      _WriteTimer0 1C5A  
                    _WriteTimer1 1C48                        i2memcpy@n 0064  
                      i2memcpy@s 0068               __end_of_Read1USART 1BE4  
                 __end_of_memcpy 180A                _enable_interrupts 1C9A  
           __size_of_Delay1KTCYx 0016                 __CFG_DSWDTEN$OFF 000000  
                   ??_SetChanADC 008D        i2c_master_send@sendlength 0093  
            ?_ToMainHigh_recvmsg 00A5                  ??i2_in_high_int 0062  
            ?_ToMainHigh_sendmsg 0076               ?_enable_interrupts 0001  
            start_initialization 14AA           _i2c_master_int_handler 0616  
                  ??_in_high_int 008F                ??_adc_int_handler 0001  
                     ?i1___awmod 0001                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 005E        i2c_master_send@slave_addr 0090  
                     ?i2___awmod 0060              ??_enable_interrupts 008D  
                   ??_OpenTimer0 008D                     ??_OpenTimer1 008E  
 __size_of_block_on_To_msgqueues 007E    __end_of_block_on_To_msgqueues 14AA  
   __end_of_InterruptHandlerHigh 13AC               __end_of_Open1USART 142C  
                     init_i2c@ic 008D             ??_ToMainHigh_recvmsg 00A9  
           ??_ToMainHigh_sendmsg 0079            ?_i2c_configure_master 0001  
             __end_of_SetChanADC 1BA8           __end_of_timer0_lthread 1C24  
                    __pdataBANK1 01D7               i1___awmod@dividend 0001  
               __CFG_LPT1OSC$OFF 000000        __end_of_enable_interrupts 1CA2  
                       ??_memcpy 0093                      ?_uart_trans 008D  
   __size_of_init_timer1_lthread 0012               __end_of_OpenTimer0 1B42  
             __end_of_OpenTimer1 19FC                      __pbssCOMRAM 0039  
                  ??_init_queues 0091                    __pcstackBANK0 0060  
                  __pcstackBANK1 0186              __size_of_in_low_int 0046  
                      _adcbuffer 00AC                  Delay1KTCYx@unit 008D  
       ToMainLow_sendmsg@msgtype 0017     __size_of_InterruptHandlerLow 00AE  
            __end_of_in_high_int 1C48                     ?_SleepIfOkay 0001  
          ToMainLow_recvmsg@data 00A7                     _ToMainLow_MQ 0143  
            __size_of_init_queue 007A                   _init_uart_recv 1BA8  
                      _check_msg 1A76                        __pnvBANK0 00C8  
              __size_of_init_i2c 006A                         ?_OpenADC 008D  
                   recv_msg@data 009C                     recv_msg@qmsg 00A3  
                   recv_msg@slot 00A0                     recv_msg@qptr 0097  
              __size_of_recv_msg 015E                        __pintcode 0008  
              __size_of_send_msg 00C0                         ?___awmod 008D  
                ?_timer0_lthread 008D                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 00A7                  Open1USART@spbrg 008D  
                       ?_in_main 0091                WriteTimer0@timer0 0060  
             _timer0_int_handler 1BE4                WriteTimer1@timer1 0001  
           __CFG_RTCOSC$T1OSCREF 000000                      ??i1___awmod 0005  
          ToMainLow_sendmsg@data 0018                      ??i2___awmod 0064  
            ?_timer0_int_handler 0001           __end_of_init_uart_recv 1BC6  
            __end_of_init_queues 160C            i2c_master_recv@length 0060  
            __size_of_uart_trans 00B4                    OpenADC@config 0093  
                       _LATAbits 000F89                         _LATBbits 000F8A  
         ??_i2c_configure_master 008D                  i2check_msg@qptr 0060  
                     ?_check_msg 008D                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0062  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 0077  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                      main@F9242 01E3                        main@F9252 01E5  
                      main@F9247 01D7                        main@F9249 01DD  
           ??_timer0_int_handler 0064       __size_of_enable_interrupts 0008  
                     _ADCON0bits 000FC2             timer0_lthread@length 0091  
             _timer1_int_handler 1A3C                         i1_memcpy 19FC  
           _InterruptHandlerHigh 0008                         i2_memcpy 180A  
           timer0_lthread@msgval 0095                        main@state 01A9  
                    _in_high_int 1C36                     send_msg@data 000F  
                   send_msg@qmsg 0015                     send_msg@slot 0014  
                   send_msg@qptr 000B                      _INTCON2bits 000FF1  
                      copy_data0 14EE                        copy_data1 150E  
            ?_timer1_int_handler 0001               i2___awmod@dividend 0060  
                ?_init_uart_recv 008D                   ??i2_in_low_int 0064  
                       __Hparam0 0000            _uart_recv_int_handler 0FBA  
                   ??_in_low_int 0091                         __Lparam0 0000  
               __size_of_OpenADC 00A0                ?_enter_sleep_mode 0001  
              i1___awmod@divisor 0003             ??_timer1_int_handler 001B  
              i1___awmod@counter 0006                  _adc_int_handler 1CAE  
       __size_of_i2c_int_handler 0006                 __size_of___awmod 010E  
             ??_enter_sleep_mode 0060         __size_of_i2c_master_recv 0064  
       __size_of_i2c_master_send 013E                     ??_init_queue 008F  
                   ?_WriteTimer0 0060                     ?_WriteTimer1 0001  
        ToMainLow_sendmsg@length 001A          ?_i2c_master_int_handler 0001  
              main@t0thread_data 0195            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 0044                i2send_msg@msgtype 006D  
    ToMainHigh_recvmsg@maxlength 00A9                i2send_msg@tlength 0071  
        init_timer1_lthread@tptr 008D                      _init_queues 159E  
             __end_of_in_low_int 18AE                         __ptext10 1C9A  
                       __ptext11 142C                         __ptext20 17AC  
                       __ptext12 18F4                         __ptext21 0D9E  
                       __ptext13 1868                       _T1GCONbits 000F9A  
                       __ptext30 1BC6                         __ptext22 1B88  
                       __ptext14 1C36                         __ptext31 1A3C  
                       __ptext23 19BC                         __ptext15 1A76  
                       __ptext40 1C5A                         __ptext32 1C48  
                       __ptext24 1B18                         __ptext16 1BFC  
                       __ptext41 1CA2                         __ptext33 1B42  
                       __ptext25 11EE                         __ptext17 1938  
                       __ptext50 1C6C                         __ptext42 0616  
                       __ptext34 107A                         __ptext26 13AC  
                       __ptext18 197A                         __ptext51 1AE2  
                       __ptext43 1748                         __ptext35 19FC  
                       __ptext19 09D6                         __ptext52 1CA8  
                       __ptext44 1AAC                         __ptext36 128E  
                       __ptext28 16E0                         __ptext45 0C72  
                       __ptext37 1CAE                         __ptext29 0FBA  
                       __ptext46 180A                         __ptext47 0EAC  
                       __ptext39 1BE4                         __ptext48 1676  
                       __ptext49 18AE                         _init_i2c 160C  
            _init_timer1_lthread 1C24                    __size_of_main 054C  
                  ??i2_check_msg 0062                main@t1thread_data 0197  
                    ??_check_msg 008F               __end_of_init_queue 159E  
           __size_of_SleepIfOkay 006A                         _recv_msg 09D6  
                       _send_msg 107A                   init_queue@qptr 008D  
                  ??_Delay1KTCYx 008D   __end_of_i2c_master_int_handler 09D6  
               uart_trans@length 0091                     ??_uart_trans 008F  
            _InterruptHandlerLow 0018                         main@stop 0188  
           ?_init_timer1_lthread 008D                    _USART1_Status 003E  
       ??_uart_trans_int_handler 0001                i2___awmod@divisor 0062  
              i2___awmod@counter 0065                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                     _UART_timeout 0039  
                       memcpy@d1 008D                         memcpy@s1 008F  
          __end_ofi2_in_high_int 1C7E                 i2send_msg@length 006C  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001           ?_uart_recv_int_handler 0001  
             __end_of_uart_trans 11EE                SetChanADC@channel 008E  
                     _RCSTA1bits 000FAC            _block_on_To_msgqueues 142C  
               ??_timer0_lthread 0095      __size_of_ToMainHigh_recvmsg 0042  
        __end_of_adc_int_handler 1CB0      __size_of_ToMainHigh_sendmsg 0036  
                     _OSCCONbits 000FD3         ToMainHigh_sendmsg@length 0079  
            __end_ofi2_check_msg 1B18            ??_init_timer1_lthread 008F  
         ??_InterruptHandlerHigh 007F                _ToMainLow_recvmsg 1938  
              _ToMainLow_sendmsg 1B42               main@last_reg_recvd 0194  
           __end_ofi2_in_low_int 18F4               ?_ToMainLow_recvmsg 00A5  
            __end_of_Delay1KTCYx 1C12                ??_i2c_int_handler 007F  
             ?_ToMainLow_sendmsg 0017                ??_i2c_master_recv 0060  
              ??_i2c_master_send 0091               i2c_master_send@msg 008E  
                 uart_trans@data 008D                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 006E  
          ??_InterruptHandlerLow 001C              ??_ToMainLow_recvmsg 00A9  
                 i2send_msg@qmsg 0074                   i2send_msg@slot 0073  
                 i2send_msg@qptr 006A              ??_ToMainLow_sendmsg 001A  
