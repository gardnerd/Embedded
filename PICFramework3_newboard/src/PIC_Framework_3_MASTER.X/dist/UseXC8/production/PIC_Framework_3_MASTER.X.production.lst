

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri May 02 22:55:47 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	param0,global,class=BANK0,space=1,delta=1
    75  0000                     
    76                           	psect	idataCOMRAM
    77  001EBE                     __pidataCOMRAM:
    78                           	opt stack 0
    79                           
    80                           ;initializer for i2c_slave_int_handler@F9158
    81  001EBE  01                 	db	1
    82  001EBF  01                 	db	1
    83  001EC0  02                 	db	2
    84  001EC1  03                 	db	3
    85  001EC2  06                 	db	6
    86                           
    87                           ;initializer for i2c_slave_int_handler@F9160
    88  001EC3  03                 	db	3
    89  001EC4  04                 	db	4
    90  001EC5  04                 	db	4
    91  001EC6  00                 	db	0
    92  001EC7  00                 	db	0
    93                           
    94                           ;initializer for i2c_slave_int_handler@F9162
    95  001EC8  9F                 	db	159
    96  001EC9  1F                 	db	31
    97                           
    98                           	psect	idataBANK1
    99  001E2A                     __pidataBANK1:
   100                           	opt stack 0
   101                           
   102                           ;initializer for main@F9247
   103  001E2A  BC                 	db	188
   104  001E2B  00                 	db	0
   105  001E2C  00                 	db	0
   106  001E2D  00                 	db	0
   107  001E2E  00                 	db	0
   108  001E2F  00                 	db	0
   109                           
   110                           ;initializer for main@F9249
   111  001E30  BC                 	db	188
   112  001E31  00                 	db	0
   113  001E32  00                 	db	0
   114  001E33  00                 	db	0
   115  001E34  00                 	db	0
   116  001E35  00                 	db	0
   117                           
   118                           ;initializer for main@F9254
   119  001E36  03                 	db	3
   120  001E37  00                 	db	0
   121  001E38  00                 	db	0
   122  001E39  00                 	db	0
   123  001E3A  00                 	db	0
   124  001E3B  00                 	db	0
   125                           
   126                           ;initializer for main@F9242
   127  001E3C  01                 	db	1
   128  001E3D  02                 	db	2
   129                           
   130                           ;initializer for main@F9252
   131  001E3E  AA                 	db	170
   132  0000                     _ADCON0	set	4034
   133  0000                     _ADCON0bits	set	4034
   134  0000                     _ADCON1	set	4033
   135  0000                     _ANCON0	set	3912
   136  0000                     _ANCON1	set	3913
   137  0000                     _INTCON2bits	set	4081
   138  0000                     _INTCONbits	set	4082
   139  0000                     _IPR1bits	set	3999
   140  0000                     _LATA	set	3977
   141  0000                     _LATAbits	set	3977
   142  0000                     _LATB	set	3978
   143  0000                     _LATBbits	set	3978
   144  0000                     _OSCCON	set	4051
   145  0000                     _OSCCONbits	set	4051
   146  0000                     _OSCTUNEbits	set	3995
   147  0000                     _PIE1bits	set	3997
   148  0000                     _PIR1bits	set	3998
   149  0000                     _PORTA	set	3968
   150  0000                     _PORTBbits	set	3969
   151  0000                     _RCONbits	set	4048
   152  0000                     _RCREG1	set	4015
   153  0000                     _RCSTA1	set	4012
   154  0000                     _RCSTA1bits	set	4012
   155  0000                     _RCSTAbits	set	4012
   156  0000                     _SPBRG1	set	4016
   157  0000                     _SPBRGH1	set	3967
   158  0000                     _SSPADD	set	4040
   159  0000                     _SSPBUF	set	4041
   160  0000                     _SSPCON1	set	4038
   161  0000                     _SSPCON1bits	set	4038
   162  0000                     _SSPCON2	set	4037
   163  0000                     _SSPCON2bits	set	4037
   164  0000                     _SSPSTAT	set	4039
   165  0000                     _SSPSTATbits	set	4039
   166  0000                     _T0CON	set	4053
   167  0000                     _T0CONbits	set	4053
   168  0000                     _T1CON	set	4045
   169  0000                     _T1CONbits	set	4045
   170  0000                     _T1GCON	set	3994
   171  0000                     _T1GCONbits	set	3994
   172  0000                     _TMR0H	set	4055
   173  0000                     _TMR0L	set	4054
   174  0000                     _TMR1H	set	4047
   175  0000                     _TMR1L	set	4046
   176  0000                     _TRISA	set	3986
   177  0000                     _TRISB	set	3987
   178  0000                     _TRISBbits	set	3987
   179  0000                     _TRISC	set	3988
   180  0000                     _TRISCbits	set	3988
   181  0000                     _TXREG	set	4014
   182  0000                     _TXSTA1	set	4013
   183  0000                     _TXSTA1bits	set	4013
   184  0000                     _TXSTAbits	set	4013
   185                           
   186                           	psect	nvCOMRAM
   187  00003F                     __pnvCOMRAM:
   188                           	opt stack 0
   189  00003F                     _uc_ptr:
   190                           	opt stack 0
   191  00003F                     	ds	2
   192                           
   193                           	psect	nvBANK0
   194  0000C8                     __pnvBANK0:
   195                           	opt stack 0
   196  0000C8                     _ic_ptr:
   197                           	opt stack 0
   198  0000C8                     	ds	2
   199                           
   200                           ; #config settings
   201  0000                     
   202                           	psect	cinit
   203  001662                     __pcinit:
   204                           	opt stack 0
   205  001662                     start_initialization:
   206                           	opt stack 0
   207  001662                     __initialization:
   208                           	opt stack 0
   209                           
   210                           ; Clear objects allocated to BANK2 (134 bytes)
   211  001662  EE02  F000         	lfsr	0,__pbssBANK2
   212  001666  0E86               	movlw	134
   213  001668                     clear_0:
   214  001668  6AEE               	clrf	postinc0,c
   215  00166A  06E8               	decf	wreg,f,c
   216  00166C  E1FD               	bnz	clear_0
   217                           
   218                           ; Clear objects allocated to BANK1 (134 bytes)
   219  00166E  EE01  F000         	lfsr	0,__pbssBANK1
   220  001672  0E86               	movlw	134
   221  001674                     clear_1:
   222  001674  6AEE               	clrf	postinc0,c
   223  001676  06E8               	decf	wreg,f,c
   224  001678  E1FD               	bnz	clear_1
   225                           
   226                           ; Clear objects allocated to BANK0 (28 bytes)
   227  00167A  EE00  F0AC         	lfsr	0,__pbssBANK0
   228  00167E  0E1C               	movlw	28
   229  001680                     clear_2:
   230  001680  6AEE               	clrf	postinc0,c
   231  001682  06E8               	decf	wreg,f,c
   232  001684  E1FD               	bnz	clear_2
   233                           
   234                           ; Clear objects allocated to COMRAM (6 bytes)
   235  001686  6A3E               	clrf	(__pbssCOMRAM+5)& (0+255),c
   236  001688  6A3D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   237  00168A  6A3C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   238  00168C  6A3B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   239  00168E  6A3A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   240  001690  6A39               	clrf	__pbssCOMRAM& (0+255),c
   241                           
   242                           ; Initialize objects allocated to BANK1 (21 bytes)
   243                           ; load TBLPTR registers with __pidataBANK1
   244  001692  0E2A               	movlw	low __pidataBANK1
   245  001694  6EF6               	movwf	tblptrl,c
   246  001696  0E1E               	movlw	high __pidataBANK1
   247  001698  6EF7               	movwf	tblptrh,c
   248  00169A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   249  00169C  6EF8               	movwf	tblptru,c
   250  00169E  EE01  F0DD         	lfsr	0,__pdataBANK1
   251  0016A2  EE10 F015          	lfsr	1,21
   252  0016A6                     copy_data0:
   253  0016A6  0009               	tblrd		*+
   254  0016A8  CFF5 FFEE          	movff	tablat,postinc0
   255  0016AC  50E5               	movf	postdec1,w,c
   256  0016AE  50E1               	movf	fsr1l,w,c
   257  0016B0  E1FA               	bnz	copy_data0
   258                           
   259                           ; Initialize objects allocated to COMRAM (12 bytes)
   260                           ; load TBLPTR registers with __pidataCOMRAM
   261  0016B2  0EBE               	movlw	low __pidataCOMRAM
   262  0016B4  6EF6               	movwf	tblptrl,c
   263  0016B6  0E1E               	movlw	high __pidataCOMRAM
   264  0016B8  6EF7               	movwf	tblptrh,c
   265  0016BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   266  0016BC  6EF8               	movwf	tblptru,c
   267  0016BE  EE00  F02D         	lfsr	0,__pdataCOMRAM
   268  0016C2  EE10 F00C          	lfsr	1,12
   269  0016C6                     copy_data1:
   270  0016C6  0009               	tblrd		*+
   271  0016C8  CFF5 FFEE          	movff	tablat,postinc0
   272  0016CC  50E5               	movf	postdec1,w,c
   273  0016CE  50E1               	movf	fsr1l,w,c
   274  0016D0  E1FA               	bnz	copy_data1
   275  0016D2                     end_of_initialization:
   276                           	opt stack 0
   277  0016D2                     __end_of__initialization:
   278                           	opt stack 0
   279  0016D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   280  0016D4  6EF8               	movwf	tblptru,c
   281  0016D6  0100               	movlb	0
   282  0016D8  EF6A  F000         	goto	_main	;jump to C main() function
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           postdec1	equ	0xFE5
   290                           fsr1l	equ	0xFE1
   291                           
   292                           	psect	bssCOMRAM
   293  000039                     __pbssCOMRAM:
   294                           	opt stack 0
   295  000039                     _UART_timeout:
   296                           	opt stack 0
   297  000039                     	ds	2
   298  00003B                     _t1Mult:
   299                           	opt stack 0
   300  00003B                     	ds	2
   301  00003D                     _MQ_Main_Willing_to_block:
   302                           	opt stack 0
   303  00003D                     	ds	1
   304  00003E                     _USART1_Status:
   305                           	opt stack 0
   306  00003E                     	ds	1
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	dataCOMRAM
   317  00002D                     __pdataCOMRAM:
   318                           	opt stack 0
   319  00002D                     i2c_slave_int_handler@F9158:
   320                           	opt stack 0
   321  00002D                     	ds	5
   322  000032                     i2c_slave_int_handler@F9160:
   323                           	opt stack 0
   324  000032                     	ds	5
   325  000037                     i2c_slave_int_handler@F9162:
   326                           	opt stack 0
   327  000037                     	ds	2
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	bssBANK0
   338  0000AC                     __pbssBANK0:
   339                           	opt stack 0
   340  0000AC                     _adcbuffer:
   341                           	opt stack 0
   342  0000AC                     	ds	28
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           postdec1	equ	0xFE5
   350                           fsr1l	equ	0xFE1
   351                           
   352                           	psect	bssBANK1
   353  000100                     __pbssBANK1:
   354                           	opt stack 0
   355  000100                     _ToMainHigh_MQ:
   356                           	opt stack 0
   357  000100                     	ds	67
   358  000143                     _ToMainLow_MQ:
   359                           	opt stack 0
   360  000143                     	ds	67
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           postdec1	equ	0xFE5
   368                           fsr1l	equ	0xFE1
   369                           
   370                           	psect	dataBANK1
   371  0001DD                     __pdataBANK1:
   372                           	opt stack 0
   373  0001DD                     main@F9247:
   374                           	opt stack 0
   375  0001DD                     	ds	6
   376  0001E3                     main@F9249:
   377                           	opt stack 0
   378  0001E3                     	ds	6
   379  0001E9                     main@F9254:
   380                           	opt stack 0
   381  0001E9                     	ds	6
   382  0001EF                     main@F9242:
   383                           	opt stack 0
   384  0001EF                     	ds	2
   385  0001F1                     main@F9252:
   386                           	opt stack 0
   387  0001F1                     	ds	1
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           postdec1	equ	0xFE5
   395                           fsr1l	equ	0xFE1
   396                           
   397                           	psect	bssBANK2
   398  000200                     __pbssBANK2:
   399                           	opt stack 0
   400  000200                     _FromMainHigh_MQ:
   401                           	opt stack 0
   402  000200                     	ds	67
   403  000243                     _FromMainLow_MQ:
   404                           	opt stack 0
   405  000243                     	ds	67
   406                           tblptru	equ	0xFF8
   407                           tblptrh	equ	0xFF7
   408                           tblptrl	equ	0xFF6
   409                           tablat	equ	0xFF5
   410                           postinc0	equ	0xFEE
   411                           wreg	equ	0xFE8
   412                           postdec1	equ	0xFE5
   413                           fsr1l	equ	0xFE1
   414                           
   415                           	psect	cstackBANK1
   416  000186                     __pcstackBANK1:
   417                           	opt stack 0
   418  000186                     main@motorAck:
   419                           	opt stack 0
   420                           
   421                           ; 6 bytes @ 0x0
   422  000186                     	ds	6
   423  00018C                     main@msg:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x6
   427  00018C                     	ds	2
   428  00018E                     main@last_reg_recvd:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x8
   432  00018E                     	ds	1
   433  00018F                     main@stop:
   434                           	opt stack 0
   435                           
   436                           ; 6 bytes @ 0x9
   437  00018F                     	ds	6
   438  000195                     main@t0thread_data:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0xF
   442  000195                     	ds	2
   443  000197                     main@t1thread_data:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x11
   447  000197                     	ds	2
   448  000199                     main@sensorMsg:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x13
   452  000199                     	ds	1
   453  00019A                     main@correct:
   454                           	opt stack 0
   455                           
   456                           ; 6 bytes @ 0x14
   457  00019A                     	ds	6
   458  0001A0                     main@msgbuffer:
   459                           	opt stack 0
   460                           
   461                           ; 11 bytes @ 0x1A
   462  0001A0                     	ds	11
   463  0001AB                     main@lastMotors:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x25
   467  0001AB                     	ds	2
   468  0001AD                     main@length:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x27
   472  0001AD                     	ds	1
   473  0001AE                     main@msgtype:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x28
   477  0001AE                     	ds	1
   478  0001AF                     main@state:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x29
   482  0001AF                     	ds	2
   483  0001B1                     main@uc:
   484                           	opt stack 0
   485                           
   486                           ; 15 bytes @ 0x2B
   487  0001B1                     	ds	15
   488  0001C0                     main@ic:
   489                           	opt stack 0
   490                           
   491                           ; 29 bytes @ 0x3A
   492  0001C0                     	ds	29
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           postdec1	equ	0xFE5
   500                           fsr1l	equ	0xFE1
   501                           
   502                           	psect	cstackBANK0
   503  000060                     __pcstackBANK0:
   504                           	opt stack 0
   505  000060                     ?i2_in_high_int:
   506                           	opt stack 0
   507  000060                     ?i2___awmod:
   508                           	opt stack 0
   509  000060                     i2c_master_recv@length:
   510                           	opt stack 0
   511  000060                     i2check_msg@qptr:
   512                           	opt stack 0
   513  000060                     i2memcpy@d1:
   514                           	opt stack 0
   515  000060                     i2___awmod@dividend:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x0
   519  000060                     	ds	2
   520  000062                     ??i2_check_msg:
   521  000062                     ?i2_in_low_int:
   522                           	opt stack 0
   523  000062                     i2memcpy@s1:
   524                           	opt stack 0
   525  000062                     i2___awmod@divisor:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x2
   529  000062                     	ds	2
   530  000064                     ??i2___awmod:
   531  000064                     i2memcpy@n:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x4
   535  000064                     	ds	1
   536  000065                     i2___awmod@counter:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x5
   540  000065                     	ds	1
   541  000066                     i2___awmod@sign:
   542                           	opt stack 0
   543  000066                     i2memcpy@d:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x6
   547  000066                     	ds	2
   548  000068                     i2memcpy@s:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0x8
   552  000068                     	ds	2
   553  00006A                     i2send_msg@qptr:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0xA
   557  00006A                     	ds	2
   558  00006C                     i2send_msg@length:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0xC
   562  00006C                     	ds	1
   563  00006D                     i2send_msg@msgtype:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0xD
   567  00006D                     	ds	1
   568  00006E                     i2send_msg@data:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0xE
   572  00006E                     	ds	2
   573  000070                     ??i2_send_msg:
   574                           
   575                           ; 0 bytes @ 0x10
   576  000070                     	ds	1
   577  000071                     i2send_msg@tlength:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x11
   581  000071                     	ds	2
   582  000073                     i2send_msg@slot:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x13
   586  000073                     	ds	1
   587  000074                     i2send_msg@qmsg:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x14
   591  000074                     	ds	2
   592  000076                     ToMainHigh_sendmsg@msgtype:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x16
   596  000076                     	ds	1
   597  000077                     ToMainHigh_sendmsg@data:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x17
   601  000077                     	ds	2
   602  000079                     ToMainHigh_sendmsg@length:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x19
   606  000079                     	ds	1
   607  00007A                     ??_i2c_master_int_handler:
   608                           
   609                           ; 0 bytes @ 0x1A
   610  00007A                     	ds	5
   611  00007F                     ??_InterruptHandlerHigh:
   612                           
   613                           ; 0 bytes @ 0x1F
   614  00007F                     	ds	14
   615  00008D                     ??_SetChanADC:
   616  00008D                     ?_in_high_int:
   617                           	opt stack 0
   618  00008D                     ?___awmod:
   619                           	opt stack 0
   620  00008D                     i2c_master_send@recvlength:
   621                           	opt stack 0
   622  00008D                     OpenADC@config2:
   623                           	opt stack 0
   624  00008D                     OpenTimer0@config:
   625                           	opt stack 0
   626  00008D                     OpenTimer1@config1:
   627                           	opt stack 0
   628  00008D                     Delay1KTCYx@unit:
   629                           	opt stack 0
   630  00008D                     init_queue@qptr:
   631                           	opt stack 0
   632  00008D                     check_msg@qptr:
   633                           	opt stack 0
   634  00008D                     init_i2c@ic:
   635                           	opt stack 0
   636  00008D                     init_uart_recv@uc:
   637                           	opt stack 0
   638  00008D                     uart_trans@data:
   639                           	opt stack 0
   640  00008D                     timer0_lthread@tptr:
   641                           	opt stack 0
   642  00008D                     init_timer1_lthread@tptr:
   643                           	opt stack 0
   644  00008D                     Open1USART@spbrg:
   645                           	opt stack 0
   646  00008D                     ___awmod@dividend:
   647                           	opt stack 0
   648  00008D                     memcpy@d1:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x2D
   652  00008D                     	ds	1
   653  00008E                     ??_OpenTimer1:
   654  00008E                     SetChanADC@channel:
   655                           	opt stack 0
   656  00008E                     i2c_master_send@msg:
   657                           	opt stack 0
   658  00008E                     OpenADC@config3:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x2E
   662  00008E                     	ds	1
   663  00008F                     ??_Open1USART:
   664  00008F                     ??_uart_trans:
   665  00008F                     ??_init_queue:
   666  00008F                     ??_check_msg:
   667  00008F                     ?_in_low_int:
   668                           	opt stack 0
   669  00008F                     OpenTimer1@config:
   670                           	opt stack 0
   671  00008F                     timer0_lthread@msgtype:
   672                           	opt stack 0
   673  00008F                     ___awmod@divisor:
   674                           	opt stack 0
   675  00008F                     memcpy@s1:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x2F
   679  00008F                     	ds	1
   680  000090                     ??_OpenADC:
   681  000090                     init_queue@i:
   682                           	opt stack 0
   683  000090                     i2c_master_send@slave_addr:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x30
   687  000090                     	ds	1
   688  000091                     ??_init_queues:
   689  000091                     ??_i2c_master_send:
   690  000091                     ??___awmod:
   691  000091                     ?_in_main:
   692                           	opt stack 0
   693  000091                     uart_trans@length:
   694                           	opt stack 0
   695  000091                     timer0_lthread@length:
   696                           	opt stack 0
   697  000091                     memcpy@n:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x31
   701  000091                     	ds	1
   702  000092                     Open1USART@config:
   703                           	opt stack 0
   704  000092                     ___awmod@counter:
   705                           	opt stack 0
   706                           
   707                           ; 1 bytes @ 0x32
   708  000092                     	ds	1
   709  000093                     ??_block_on_To_msgqueues:
   710  000093                     i2c_master_send@sendlength:
   711                           	opt stack 0
   712  000093                     OpenADC@config:
   713                           	opt stack 0
   714  000093                     ___awmod@sign:
   715                           	opt stack 0
   716  000093                     timer0_lthread@msgbuffer:
   717                           	opt stack 0
   718  000093                     memcpy@d:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0x33
   722  000093                     	ds	2
   723  000095                     timer0_lthread@msgval:
   724                           	opt stack 0
   725  000095                     memcpy@s:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x35
   729  000095                     	ds	2
   730  000097                     recv_msg@qptr:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x37
   734  000097                     	ds	2
   735  000099                     recv_msg@maxlength:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x39
   739  000099                     	ds	1
   740  00009A                     recv_msg@msgtype:
   741                           	opt stack 0
   742                           
   743                           ; 2 bytes @ 0x3A
   744  00009A                     	ds	2
   745  00009C                     recv_msg@data:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x3C
   749  00009C                     	ds	2
   750  00009E                     ??_recv_msg:
   751                           
   752                           ; 0 bytes @ 0x3E
   753  00009E                     	ds	2
   754  0000A0                     recv_msg@slot:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x40
   758  0000A0                     	ds	1
   759  0000A1                     recv_msg@tlength:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x41
   763  0000A1                     	ds	2
   764  0000A3                     recv_msg@qmsg:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x43
   768  0000A3                     	ds	2
   769  0000A5                     ToMainLow_recvmsg@msgtype:
   770                           	opt stack 0
   771  0000A5                     ToMainHigh_recvmsg@msgtype:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x45
   775  0000A5                     	ds	2
   776  0000A7                     ToMainLow_recvmsg@data:
   777                           	opt stack 0
   778  0000A7                     ToMainHigh_recvmsg@data:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x47
   782  0000A7                     	ds	2
   783  0000A9                     ToMainLow_recvmsg@maxlength:
   784                           	opt stack 0
   785  0000A9                     ToMainHigh_recvmsg@maxlength:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x49
   789  0000A9                     	ds	1
   790  0000AA                     ??_main:
   791                           
   792                           ; 0 bytes @ 0x4A
   793  0000AA                     	ds	2
   794                           tblptru	equ	0xFF8
   795                           tblptrh	equ	0xFF7
   796                           tblptrl	equ	0xFF6
   797                           tablat	equ	0xFF5
   798                           postinc0	equ	0xFEE
   799                           wreg	equ	0xFE8
   800                           postdec1	equ	0xFE5
   801                           fsr1l	equ	0xFE1
   802                           
   803                           	psect	cstackCOMRAM
   804  000001                     __pcstackCOMRAM:
   805                           	opt stack 0
   806  000001                     ??_uart_trans_int_handler:
   807  000001                     ?i1___awmod:
   808                           	opt stack 0
   809  000001                     Read1USART@data:
   810                           	opt stack 0
   811  000001                     WriteTimer0@timer0:
   812                           	opt stack 0
   813  000001                     WriteTimer1@timer1:
   814                           	opt stack 0
   815  000001                     i1memcpy@d1:
   816                           	opt stack 0
   817  000001                     i1___awmod@dividend:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x0
   821  000001                     	ds	2
   822  000003                     WriteTimer0@timer:
   823                           	opt stack 0
   824  000003                     WriteTimer1@timer:
   825                           	opt stack 0
   826  000003                     i1memcpy@s1:
   827                           	opt stack 0
   828  000003                     i1___awmod@divisor:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x2
   832  000003                     	ds	2
   833  000005                     ??i1___awmod:
   834  000005                     i1memcpy@n:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x4
   838  000005                     	ds	1
   839  000006                     i1___awmod@counter:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x5
   843  000006                     	ds	1
   844  000007                     i1___awmod@sign:
   845                           	opt stack 0
   846  000007                     i1memcpy@d:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x6
   850  000007                     	ds	2
   851  000009                     i1memcpy@s:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x8
   855  000009                     	ds	2
   856  00000B                     send_msg@qptr:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0xA
   860  00000B                     	ds	2
   861  00000D                     send_msg@length:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0xC
   865  00000D                     	ds	1
   866  00000E                     send_msg@msgtype:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0xD
   870  00000E                     	ds	1
   871  00000F                     send_msg@data:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0xE
   875  00000F                     	ds	2
   876  000011                     ??_send_msg:
   877                           
   878                           ; 0 bytes @ 0x10
   879  000011                     	ds	1
   880  000012                     send_msg@tlength:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0x11
   884  000012                     	ds	2
   885  000014                     send_msg@slot:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0x13
   889  000014                     	ds	1
   890  000015                     send_msg@qmsg:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x14
   894  000015                     	ds	2
   895  000017                     ToMainLow_sendmsg@msgtype:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0x16
   899  000017                     	ds	1
   900  000018                     ToMainLow_sendmsg@data:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x17
   904  000018                     	ds	2
   905  00001A                     ToMainLow_sendmsg@length:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x19
   909  00001A                     	ds	1
   910  00001B                     ??_timer1_int_handler:
   911  00001B                     ??_uart_recv_int_handler:
   912                           
   913                           ; 0 bytes @ 0x1A
   914  00001B                     	ds	1
   915  00001C                     ??_InterruptHandlerLow:
   916                           
   917                           ; 0 bytes @ 0x1B
   918  00001C                     	ds	17
   919                           tblptru	equ	0xFF8
   920                           tblptrh	equ	0xFF7
   921                           tblptrl	equ	0xFF6
   922                           tablat	equ	0xFF5
   923                           postinc0	equ	0xFEE
   924                           wreg	equ	0xFE8
   925                           postdec1	equ	0xFE5
   926                           fsr1l	equ	0xFE1
   927                           
   928 ;;
   929 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   930 ;;
   931 ;; *************** function _main *****************
   932 ;; Defined at:
   933 ;;		line 186 in file "../src/main.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  motorAck        6    0[BANK1 ] unsigned char [6]
   938 ;;  sensorMsg       1   19[BANK1 ] unsigned char [1]
   939 ;;  correct         6   20[BANK1 ] unsigned char [6]
   940 ;;  stop            6    9[BANK1 ] unsigned char [6]
   941 ;;  ic             29   58[BANK1 ] struct __i2c_comm
   942 ;;  uc             15   43[BANK1 ] struct __uart_comm
   943 ;;  msgbuffer      11   26[BANK1 ] unsigned char [11]
   944 ;;  lastMotors      2   37[BANK1 ] unsigned char [2]
   945 ;;  state           2   41[BANK1 ] unsigned int 
   946 ;;  t1thread_dat    2   17[BANK1 ] struct __timer1_thread_s
   947 ;;  t0thread_dat    2   15[BANK1 ] struct __timer0_thread_s
   948 ;;  msg             2    6[BANK1 ] unsigned char [2]
   949 ;;  uthread_data    2    0        struct __uart_thread_str
   950 ;;  msgtype         1   40[BANK1 ] unsigned char 
   951 ;;  length          1   39[BANK1 ] char 
   952 ;;  last_reg_rec    1    8[BANK1 ] unsigned char 
   953 ;;  i               1    0        unsigned char 
   954 ;;  c               1    0        unsigned char 
   955 ;; Return value:  Size  Location     Type
   956 ;;		None               void
   957 ;; Registers used:
   958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Locals:         0       0      87       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;      Totals:         0       2      87       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   968 ;;Total ram usage:       89 bytes
   969 ;; Hardware stack levels required when called:   15
   970 ;; This function calls:
   971 ;;		_Open1USART
   972 ;;		_OpenADC
   973 ;;		_OpenTimer0
   974 ;;		_OpenTimer1
   975 ;;		_SetChanADC
   976 ;;		_ToMainHigh_recvmsg
   977 ;;		_ToMainLow_recvmsg
   978 ;;		_block_on_To_msgqueues
   979 ;;		_enable_interrupts
   980 ;;		_i2c_configure_master
   981 ;;		_i2c_master_send
   982 ;;		_init_i2c
   983 ;;		_init_queues
   984 ;;		_init_timer1_lthread
   985 ;;		_init_uart_recv
   986 ;;		_timer0_lthread
   987 ;;		_uart_trans
   988 ;; This function is called by:
   989 ;;		Startup code after reset
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text0
   994  0000D4                     __ptext0:
   995                           	opt stack 0
   996  0000D4                     _main:
   997                           	opt stack 16
   998                           
   999                           ;main.c: 187: char c;
  1000                           ;main.c: 188: signed char length;
  1001                           ;main.c: 189: unsigned char msgtype;
  1002                           ;main.c: 190: unsigned char last_reg_recvd;
  1003                           ;main.c: 191: uart_comm uc;
  1004                           ;main.c: 192: i2c_comm ic;
  1005                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1006                           ;main.c: 194: unsigned char i;
  1007                           ;main.c: 195: uart_thread_struct uthread_data;
  1008                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1009                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1010                           ;main.c: 213: OSCCON = 0xE0;
  1011                           
  1012                           ;incstack = 0
  1013  0000D4  0EE0               	movlw	224
  1014  0000D6  6ED3               	movwf	4051,c	;volatile
  1015                           
  1016                           ;main.c: 214: OSCTUNEbits.PLLEN = 1;
  1017  0000D8  8C9B               	bsf	3995,6,c	;volatile
  1018                           
  1019                           ;main.c: 224: init_uart_recv(&uc);
  1020  0000DA  0101               	movlb	1	; () banked
  1021  0000DC  0E01               	movlw	high main@uc
  1022  0000DE  0100               	movlb	0	; () banked
  1023  0000E0  0100               	movlb	0	; () banked
  1024  0000E2  6F8E               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1025  0000E4  0101               	movlb	1	; () banked
  1026  0000E6  0EB1               	movlw	low main@uc
  1027  0000E8  0100               	movlb	0	; () banked
  1028  0000EA  0100               	movlb	0	; () banked
  1029  0000EC  6F8D               	movwf	init_uart_recv@uc& (0+255),b
  1030  0000EE  ECEC  F00E         	call	_init_uart_recv	;wreg free
  1031                           
  1032                           ;main.c: 227: init_i2c(&ic);
  1033  0000F2  0101               	movlb	1	; () banked
  1034  0000F4  0E01               	movlw	high main@ic
  1035  0000F6  0100               	movlb	0	; () banked
  1036  0000F8  0100               	movlb	0	; () banked
  1037  0000FA  6F8E               	movwf	(init_i2c@ic+1)& (0+255),b
  1038  0000FC  0101               	movlb	1	; () banked
  1039  0000FE  0EC0               	movlw	low main@ic
  1040  000100  0100               	movlb	0	; () banked
  1041  000102  0100               	movlb	0	; () banked
  1042  000104  6F8D               	movwf	init_i2c@ic& (0+255),b
  1043  000106  EC1E  F00C         	call	_init_i2c	;wreg free
  1044                           
  1045                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1046  00010A  0101               	movlb	1	; () banked
  1047  00010C  0E01               	movlw	high main@t1thread_data
  1048  00010E  0100               	movlb	0	; () banked
  1049  000110  0100               	movlb	0	; () banked
  1050  000112  6F8E               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1051  000114  0101               	movlb	1	; () banked
  1052  000116  0E97               	movlw	low main@t1thread_data
  1053  000118  0100               	movlb	0	; () banked
  1054  00011A  0100               	movlb	0	; () banked
  1055  00011C  6F8D               	movwf	init_timer1_lthread@tptr& (0+255),b
  1056  00011E  EC29  F00F         	call	_init_timer1_lthread	;wreg free
  1057                           
  1058                           ;main.c: 233: init_queues();
  1059  000122  ECE7  F00B         	call	_init_queues	;wreg free
  1060                           
  1061                           ;main.c: 237: TRISB = 0xFF;
  1062  000126  6893               	setf	3987,c	;volatile
  1063                           
  1064                           ;main.c: 238: LATB = 0x0;
  1065  000128  0E00               	movlw	0
  1066  00012A  6E8A               	movwf	3978,c	;volatile
  1067                           
  1068                           ;main.c: 240: PORTA = 0x0;
  1069  00012C  0E00               	movlw	0
  1070  00012E  6E80               	movwf	3968,c	;volatile
  1071                           
  1072                           ;main.c: 241: LATA = 0x0;
  1073  000130  0E00               	movlw	0
  1074  000132  6E89               	movwf	3977,c	;volatile
  1075                           
  1076                           ;main.c: 242: TRISA = 0x00;
  1077  000134  0E00               	movlw	0
  1078  000136  6E92               	movwf	3986,c	;volatile
  1079                           
  1080                           ;main.c: 259: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110101);
  1081  000138  0ED5               	movlw	213
  1082  00013A  ECA4  F00E         	call	_OpenTimer0
  1083                           
  1084                           ;main.c: 267: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1085  00013E  0100               	movlb	0	; () banked
  1086  000140  6FAA               	movwf	??_main& (0+255),b
  1087  000142  0E00               	movlw	0
  1088  000144  0100               	movlb	0	; () banked
  1089  000146  0100               	movlb	0	; () banked
  1090  000148  6F8D               	movwf	OpenTimer1@config1& (0+255),b
  1091  00014A  0100               	movlb	0	; () banked
  1092  00014C  51AA               	movf	??_main& (0+255),w,b
  1093  00014E  0E9B               	movlw	155
  1094  000150  ECF6  F00D         	call	_OpenTimer1
  1095                           
  1096                           ;main.c: 277: IPR1bits.ADIP = 0;
  1097  000154  9C9F               	bcf	3999,6,c	;volatile
  1098                           
  1099                           ;main.c: 278: PIE1bits.ADIE = 1;
  1100  000156  8C9D               	bsf	3997,6,c	;volatile
  1101                           
  1102                           ;main.c: 280: IPR1bits.TMR1IP = 0;
  1103  000158  909F               	bcf	3999,0,c	;volatile
  1104                           
  1105                           ;main.c: 282: INTCON2bits.TMR0IP = 0;
  1106  00015A  94F1               	bcf	intcon2,2,c	;volatile
  1107                           
  1108                           ;main.c: 284: IPR1bits.RCIP = 0;
  1109  00015C  9A9F               	bcf	3999,5,c	;volatile
  1110                           
  1111                           ;main.c: 286: IPR1bits.TXIP = 0;
  1112  00015E  989F               	bcf	3999,4,c	;volatile
  1113                           
  1114                           ;main.c: 288: IPR1bits.SSPIP = 1;
  1115  000160  869F               	bsf	3999,3,c	;volatile
  1116                           
  1117                           ;main.c: 299: i2c_configure_master();
  1118  000162  ECCC  F00E         	call	_i2c_configure_master	;wreg free
  1119                           
  1120                           ;main.c: 324: PIE1bits.SSPIE = 1;
  1121  000166  869D               	bsf	3997,3,c	;volatile
  1122                           
  1123                           ;main.c: 332: Open1USART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1124                           ;main.c: 333: 0b11111111 & 0b11101111, 38);
  1125  000168  0E00               	movlw	0
  1126  00016A  0100               	movlb	0	; () banked
  1127  00016C  0100               	movlb	0	; () banked
  1128  00016E  6F8E               	movwf	(Open1USART@spbrg+1)& (0+255),b
  1129  000170  0E26               	movlw	38
  1130  000172  0100               	movlb	0	; () banked
  1131  000174  6F8D               	movwf	Open1USART@spbrg& (0+255),b
  1132  000176  0EEC               	movlw	236
  1133  000178  ECB2  F00A         	call	_Open1USART
  1134                           
  1135                           ;main.c: 334: RCSTAbits.SPEN = 1;
  1136  00017C  8EAC               	bsf	4012,7,c	;volatile
  1137                           
  1138                           ;main.c: 335: TRISC = 0xFF;
  1139  00017E  6894               	setf	3988,c	;volatile
  1140                           
  1141                           ;main.c: 347: enable_interrupts();
  1142  000180  EC65  F00F         	call	_enable_interrupts	;wreg free
  1143                           
  1144                           ;main.c: 361: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1145                           ;main.c: 362: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1146                           ;main.c: 363: 0b1011);
  1147  000184  0100               	movlb	0	; () banked
  1148  000186  6FAA               	movwf	??_main& (0+255),b
  1149  000188  0E0C               	movlw	12
  1150  00018A  0100               	movlb	0	; () banked
  1151  00018C  0100               	movlb	0	; () banked
  1152  00018E  6F8D               	movwf	OpenADC@config2& (0+255),b
  1153  000190  0100               	movlb	0	; () banked
  1154  000192  51AA               	movf	??_main& (0+255),w,b
  1155  000194  0E00               	movlw	0
  1156  000196  0100               	movlb	0	; () banked
  1157  000198  0100               	movlb	0	; () banked
  1158  00019A  6F8F               	movwf	(OpenADC@config3+1)& (0+255),b
  1159  00019C  0E0B               	movlw	11
  1160  00019E  0100               	movlb	0	; () banked
  1161  0001A0  6F8E               	movwf	OpenADC@config3& (0+255),b
  1162  0001A2  0E53               	movlw	83
  1163  0001A4  EC14  F00A         	call	_OpenADC
  1164                           
  1165                           ;main.c: 364: SetChanADC(0b10001111);
  1166  0001A8  0E8F               	movlw	143
  1167  0001AA  ECDC  F00E         	call	_SetChanADC
  1168                           
  1169                           ;main.c: 375: unsigned char msg[2] = {0x01, 0x02};
  1170  0001AE  C1EF  F18C         	movff	main@F9242,main@msg
  1171  0001B2  C1F0  F18D         	movff	main@F9242+1,main@msg+1
  1172                           
  1173                           ;main.c: 394: unsigned char lastMotors[2];
  1174                           ;main.c: 395: unsigned int state = 0;
  1175  0001B6  0E00               	movlw	0
  1176  0001B8  0101               	movlb	1	; () banked
  1177  0001BA  0101               	movlb	1	; () banked
  1178  0001BC  6FB0               	movwf	(main@state+1)& (0+255),b
  1179  0001BE  0E00               	movlw	0
  1180  0001C0  0101               	movlb	1	; () banked
  1181  0001C2  6FAF               	movwf	main@state& (0+255),b
  1182                           
  1183                           ; BSR set to: 1
  1184                           ;main.c: 396: LATAbits.LA1 = 0;
  1185  0001C4  9289               	bcf	3977,1,c	;volatile
  1186                           
  1187                           ; BSR set to: 1
  1188                           ;main.c: 397: LATAbits.LA2 = 0;
  1189  0001C6  9489               	bcf	3977,2,c	;volatile
  1190                           
  1191                           ; BSR set to: 1
  1192                           ;main.c: 398: LATAbits.LA3 = 0;
  1193  0001C8  9689               	bcf	3977,3,c	;volatile
  1194  0001CA                     l2805:
  1195                           
  1196                           ;main.c: 404: block_on_To_msgqueues();
  1197  0001CA  ECF2  F00A         	call	_block_on_To_msgqueues	;wreg free
  1198                           
  1199                           ;main.c: 411: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1200  0001CE  0101               	movlb	1	; () banked
  1201  0001D0  0E01               	movlw	high main@msgtype
  1202  0001D2  0100               	movlb	0	; () banked
  1203  0001D4  0100               	movlb	0	; () banked
  1204  0001D6  6FA6               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1205  0001D8  0101               	movlb	1	; () banked
  1206  0001DA  0EAE               	movlw	low main@msgtype
  1207  0001DC  0100               	movlb	0	; () banked
  1208  0001DE  0100               	movlb	0	; () banked
  1209  0001E0  6FA5               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1210  0001E2  0101               	movlb	1	; () banked
  1211  0001E4  0E01               	movlw	high main@msgbuffer
  1212  0001E6  0100               	movlb	0	; () banked
  1213  0001E8  0100               	movlb	0	; () banked
  1214  0001EA  6FA8               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1215  0001EC  0101               	movlb	1	; () banked
  1216  0001EE  0EA0               	movlw	low main@msgbuffer
  1217  0001F0  0100               	movlb	0	; () banked
  1218  0001F2  0100               	movlb	0	; () banked
  1219  0001F4  6FA7               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1220  0001F6  0E0A               	movlw	10
  1221  0001F8  ECD5  F00D         	call	_ToMainHigh_recvmsg
  1222  0001FC  0101               	movlb	1	; () banked
  1223  0001FE  0101               	movlb	1	; () banked
  1224  000200  6FAD               	movwf	main@length& (0+255),b
  1225                           
  1226                           ; BSR set to: 1
  1227                           ;main.c: 412: if (length < 0) {
  1228  000202  0101               	movlb	1	; () banked
  1229  000204  0101               	movlb	1	; () banked
  1230  000206  BFAD               	btfsc	main@length& (0+255),7,b
  1231  000208  D210               	goto	l2945
  1232  00020A  D1FF               	goto	l2943
  1233  00020C                     l2813:
  1234                           
  1235                           ; BSR set to: 1
  1236                           ;main.c: 420: {
  1237                           ;main.c: 421: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1238  00020C  0101               	movlb	1	; () banked
  1239  00020E  0E01               	movlw	high main@t0thread_data
  1240  000210  0100               	movlb	0	; () banked
  1241  000212  0100               	movlb	0	; () banked
  1242  000214  6F8E               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1243  000216  0101               	movlb	1	; () banked
  1244  000218  0E95               	movlw	low main@t0thread_data
  1245  00021A  0100               	movlb	0	; () banked
  1246  00021C  0100               	movlb	0	; () banked
  1247  00021E  6F8D               	movwf	timer0_lthread@tptr& (0+255),b
  1248  000220  0101               	movlb	1	; () banked
  1249  000222  0100               	movlb	0	; () banked
  1250  000224  C1AE  F08F         	movff	main@msgtype,timer0_lthread@msgtype
  1251  000228  0100               	movlb	0	; () banked
  1252  00022A  0100               	movlb	0	; () banked
  1253  00022C  6B90               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1254  00022E  0101               	movlb	1	; () banked
  1255  000230  0101               	movlb	1	; () banked
  1256  000232  51AD               	movf	main@length& (0+255),w,b
  1257  000234  0100               	movlb	0	; () banked
  1258  000236  0100               	movlb	0	; () banked
  1259  000238  6F91               	movwf	timer0_lthread@length& (0+255),b
  1260  00023A  0100               	movlb	0	; () banked
  1261  00023C  6B92               	clrf	(timer0_lthread@length+1)& (0+255),b
  1262  00023E  0100               	movlb	0	; () banked
  1263  000240  BF91               	btfsc	timer0_lthread@length& (0+255),7,b
  1264  000242  0792               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1265  000244  0101               	movlb	1	; () banked
  1266  000246  0E01               	movlw	high main@msgbuffer
  1267  000248  0100               	movlb	0	; () banked
  1268  00024A  0100               	movlb	0	; () banked
  1269  00024C  6F94               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1270  00024E  0101               	movlb	1	; () banked
  1271  000250  0EA0               	movlw	low main@msgbuffer
  1272  000252  0100               	movlb	0	; () banked
  1273  000254  0100               	movlb	0	; () banked
  1274  000256  6F93               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1275  000258  EC20  F00F         	call	_timer0_lthread	;wreg free
  1276                           
  1277                           ;main.c: 422: break;
  1278  00025C  D1E6               	goto	l2945
  1279  00025E                     l134:
  1280                           
  1281                           ;main.c: 425: case 41:
  1282                           ;main.c: 426: {
  1283                           ;main.c: 429: last_reg_recvd = msgbuffer[0];
  1284  00025E  C1A0  F18E         	movff	main@msgbuffer,main@last_reg_recvd
  1285                           
  1286                           ;main.c: 430: break;
  1287  000262  D1E3               	goto	l2945
  1288  000264                     l2815:
  1289                           
  1290                           ;main.c: 433: {
  1291                           ;main.c: 435: if(msgbuffer[0] == 0x04){
  1292  000264  0101               	movlb	1	; () banked
  1293  000266  0101               	movlb	1	; () banked
  1294  000268  51A0               	movf	main@msgbuffer& (0+255),w,b
  1295  00026A  0A04               	xorlw	4
  1296  00026C  A4D8               	btfss	status,2,c
  1297  00026E  D00C               	goto	l2821
  1298                           
  1299                           ; BSR set to: 1
  1300                           ;main.c: 436: if(msgbuffer[1] == 0x01){
  1301  000270  0101               	movlb	1	; () banked
  1302  000272  0101               	movlb	1	; () banked
  1303  000274  05A1               	decf	(main@msgbuffer+1)& (0+255),w,b
  1304  000276  A4D8               	btfss	status,2,c
  1305  000278  D007               	goto	l2821
  1306                           
  1307                           ; BSR set to: 1
  1308                           ;main.c: 437: state = 0;
  1309  00027A  0E00               	movlw	0
  1310  00027C  0101               	movlb	1	; () banked
  1311  00027E  0101               	movlb	1	; () banked
  1312  000280  6FB0               	movwf	(main@state+1)& (0+255),b
  1313  000282  0E00               	movlw	0
  1314  000284  0101               	movlb	1	; () banked
  1315  000286  6FAF               	movwf	main@state& (0+255),b
  1316  000288                     l2821:
  1317                           
  1318                           ; BSR set to: 1
  1319                           ;main.c: 441: }
  1320                           ;main.c: 442: }
  1321                           ;main.c: 444: unsigned char stop[6] = {0xBC, 0x00, 0x00, 0x00, 0x00, 0x00};
  1322  000288  EE21  F0DD         	lfsr	2,main@F9247
  1323  00028C  EE11  F08F         	lfsr	1,main@stop
  1324  000290  0E06               	movlw	6
  1325  000292                     u1881:
  1326  000292  CFDE FFE6          	movff	postinc2,postinc1
  1327  000296  2EE8               	decfsz	wreg,f,c
  1328  000298  D7FC               	goto	u1881
  1329                           
  1330                           ; BSR set to: 1
  1331                           ;main.c: 445: unsigned char correct[6] = {0xBC, 0x00, 0x00, 0x00, 0x00, 0x00};
  1332  00029A  EE21  F0E3         	lfsr	2,main@F9249
  1333  00029E  EE11  F09A         	lfsr	1,main@correct
  1334  0002A2  0E06               	movlw	6
  1335  0002A4                     u1891:
  1336  0002A4  CFDE FFE6          	movff	postinc2,postinc1
  1337  0002A8  2EE8               	decfsz	wreg,f,c
  1338  0002AA  D7FC               	goto	u1891
  1339                           
  1340                           ; BSR set to: 1
  1341                           ;main.c: 446: if(msgbuffer[0] == 0x01){
  1342  0002AC  0101               	movlb	1	; () banked
  1343  0002AE  0101               	movlb	1	; () banked
  1344  0002B0  05A0               	decf	main@msgbuffer& (0+255),w,b
  1345  0002B2  A4D8               	btfss	status,2,c
  1346  0002B4  D197               	goto	l2937
  1347                           
  1348                           ; BSR set to: 1
  1349                           ;main.c: 447: if(state == 0){
  1350  0002B6  0101               	movlb	1	; () banked
  1351  0002B8  0101               	movlb	1	; () banked
  1352  0002BA  51B0               	movf	(main@state+1)& (0+255),w,b
  1353  0002BC  11AF               	iorwf	main@state& (0+255),w,b
  1354  0002BE  A4D8               	btfss	status,2,c
  1355  0002C0  D00E               	goto	l2831
  1356                           
  1357                           ; BSR set to: 1
  1358                           ;main.c: 448: uart_trans(6, msgbuffer);
  1359  0002C2  0101               	movlb	1	; () banked
  1360  0002C4  0E01               	movlw	high main@msgbuffer
  1361  0002C6  0100               	movlb	0	; () banked
  1362  0002C8  0100               	movlb	0	; () banked
  1363  0002CA  6F8E               	movwf	(uart_trans@data+1)& (0+255),b
  1364  0002CC  0101               	movlb	1	; () banked
  1365  0002CE  0EA0               	movlw	low main@msgbuffer
  1366  0002D0  0100               	movlb	0	; () banked
  1367  0002D2  0100               	movlb	0	; () banked
  1368  0002D4  6F8D               	movwf	uart_trans@data& (0+255),b
  1369  0002D6  0E06               	movlw	6
  1370  0002D8  ECBA  F009         	call	_uart_trans
  1371                           
  1372                           ;main.c: 457: }else if(state == 1){
  1373  0002DC  D1A6               	goto	l2945
  1374  0002DE                     l2831:
  1375  0002DE  0101               	movlb	1	; () banked
  1376  0002E0  0101               	movlb	1	; () banked
  1377  0002E2  05AF               	decf	main@state& (0+255),w,b
  1378  0002E4  11B0               	iorwf	(main@state+1)& (0+255),w,b
  1379  0002E6  A4D8               	btfss	status,2,c
  1380  0002E8  D117               	goto	l2909
  1381                           
  1382                           ; BSR set to: 1
  1383                           ;main.c: 458: if(msgbuffer[1] == 0x1){
  1384  0002EA  0101               	movlb	1	; () banked
  1385  0002EC  0101               	movlb	1	; () banked
  1386  0002EE  05A1               	decf	(main@msgbuffer+1)& (0+255),w,b
  1387  0002F0  A4D8               	btfss	status,2,c
  1388  0002F2  D027               	goto	l2845
  1389                           
  1390                           ; BSR set to: 1
  1391                           ;main.c: 459: i2c_master_send(6, 6, stop, 0xBE);
  1392  0002F4  0100               	movlb	0	; () banked
  1393  0002F6  6FAA               	movwf	??_main& (0+255),b
  1394  0002F8  0E06               	movlw	6
  1395  0002FA  0100               	movlb	0	; () banked
  1396  0002FC  0100               	movlb	0	; () banked
  1397  0002FE  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1398  000300  0100               	movlb	0	; () banked
  1399  000302  51AA               	movf	??_main& (0+255),w,b
  1400  000304  0101               	movlb	1	; () banked
  1401  000306  0E01               	movlw	high main@stop
  1402  000308  0100               	movlb	0	; () banked
  1403  00030A  0100               	movlb	0	; () banked
  1404  00030C  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1405  00030E  0101               	movlb	1	; () banked
  1406  000310  0E8F               	movlw	low main@stop
  1407  000312  0100               	movlb	0	; () banked
  1408  000314  0100               	movlb	0	; () banked
  1409  000316  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1410  000318  0100               	movlb	0	; () banked
  1411  00031A  6FAB               	movwf	(??_main+1)& (0+255),b
  1412  00031C  0EBE               	movlw	190
  1413  00031E  0100               	movlb	0	; () banked
  1414  000320  0100               	movlb	0	; () banked
  1415  000322  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1416  000324  0100               	movlb	0	; () banked
  1417  000326  51AB               	movf	(??_main+1)& (0+255),w,b
  1418  000328  0E06               	movlw	6
  1419  00032A  ECB7  F006         	call	_i2c_master_send
  1420                           
  1421                           ;main.c: 460: state = 0;
  1422  00032E  0E00               	movlw	0
  1423  000330  0101               	movlb	1	; () banked
  1424  000332  0101               	movlb	1	; () banked
  1425  000334  6FB0               	movwf	(main@state+1)& (0+255),b
  1426  000336  0E00               	movlw	0
  1427  000338  0101               	movlb	1	; () banked
  1428  00033A  6FAF               	movwf	main@state& (0+255),b
  1429                           
  1430                           ; BSR set to: 1
  1431                           ;main.c: 461: LATAbits.LA1 = 1;
  1432  00033C  8289               	bsf	3977,1,c	;volatile
  1433                           
  1434                           ; BSR set to: 1
  1435                           ;main.c: 462: LATAbits.LA2 = 0;
  1436  00033E  9489               	bcf	3977,2,c	;volatile
  1437  000340  D08E               	goto	L1
  1438  000342                     l2845:
  1439                           
  1440                           ; BSR set to: 1
  1441  000342  0101               	movlb	1	; () banked
  1442  000344  0101               	movlb	1	; () banked
  1443  000346  05A4               	decf	(main@msgbuffer+4)& (0+255),w,b
  1444  000348  A4D8               	btfss	status,2,c
  1445  00034A  D01E               	goto	l2857
  1446                           
  1447                           ; BSR set to: 1
  1448                           ;main.c: 466: i2c_master_send(6, 6, stop, 0xBE);
  1449  00034C  0100               	movlb	0	; () banked
  1450  00034E  6FAA               	movwf	??_main& (0+255),b
  1451  000350  0E06               	movlw	6
  1452  000352  0100               	movlb	0	; () banked
  1453  000354  0100               	movlb	0	; () banked
  1454  000356  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1455  000358  0100               	movlb	0	; () banked
  1456  00035A  51AA               	movf	??_main& (0+255),w,b
  1457  00035C  0101               	movlb	1	; () banked
  1458  00035E  0E01               	movlw	high main@stop
  1459  000360  0100               	movlb	0	; () banked
  1460  000362  0100               	movlb	0	; () banked
  1461  000364  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1462  000366  0101               	movlb	1	; () banked
  1463  000368  0E8F               	movlw	low main@stop
  1464  00036A  0100               	movlb	0	; () banked
  1465  00036C  0100               	movlb	0	; () banked
  1466  00036E  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1467  000370  0100               	movlb	0	; () banked
  1468  000372  6FAB               	movwf	(??_main+1)& (0+255),b
  1469  000374  0EBE               	movlw	190
  1470  000376  0100               	movlb	0	; () banked
  1471  000378  0100               	movlb	0	; () banked
  1472  00037A  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1473  00037C  0100               	movlb	0	; () banked
  1474  00037E  51AB               	movf	(??_main+1)& (0+255),w,b
  1475  000380  0E06               	movlw	6
  1476  000382  ECB7  F006         	call	_i2c_master_send
  1477  000386  D029               	goto	L2
  1478  000388                     l2857:
  1479                           
  1480                           ; BSR set to: 1
  1481  000388  0101               	movlb	1	; () banked
  1482  00038A  0101               	movlb	1	; () banked
  1483  00038C  51A2               	movf	(main@msgbuffer+2)& (0+255),w,b
  1484  00038E  0A04               	xorlw	4
  1485  000390  A4D8               	btfss	status,2,c
  1486  000392  D02D               	goto	l2871
  1487                           
  1488                           ; BSR set to: 1
  1489  000394  0101               	movlb	1	; () banked
  1490  000396  0101               	movlb	1	; () banked
  1491  000398  51A3               	movf	(main@msgbuffer+3)& (0+255),w,b
  1492  00039A  0A04               	xorlw	4
  1493  00039C  A4D8               	btfss	status,2,c
  1494  00039E  D027               	goto	l2871
  1495                           
  1496                           ; BSR set to: 1
  1497                           ;main.c: 472: i2c_master_send(6, 6, stop, 0xBE);
  1498  0003A0  0100               	movlb	0	; () banked
  1499  0003A2  6FAA               	movwf	??_main& (0+255),b
  1500  0003A4  0E06               	movlw	6
  1501  0003A6  0100               	movlb	0	; () banked
  1502  0003A8  0100               	movlb	0	; () banked
  1503  0003AA  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1504  0003AC  0100               	movlb	0	; () banked
  1505  0003AE  51AA               	movf	??_main& (0+255),w,b
  1506  0003B0  0101               	movlb	1	; () banked
  1507  0003B2  0E01               	movlw	high main@stop
  1508  0003B4  0100               	movlb	0	; () banked
  1509  0003B6  0100               	movlb	0	; () banked
  1510  0003B8  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1511  0003BA  0101               	movlb	1	; () banked
  1512  0003BC  0E8F               	movlw	low main@stop
  1513  0003BE  0100               	movlb	0	; () banked
  1514  0003C0  0100               	movlb	0	; () banked
  1515  0003C2  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1516  0003C4  0100               	movlb	0	; () banked
  1517  0003C6  6FAB               	movwf	(??_main+1)& (0+255),b
  1518  0003C8  0EBE               	movlw	190
  1519  0003CA  0100               	movlb	0	; () banked
  1520  0003CC  0100               	movlb	0	; () banked
  1521  0003CE  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1522  0003D0  0100               	movlb	0	; () banked
  1523  0003D2  51AB               	movf	(??_main+1)& (0+255),w,b
  1524  0003D4  0E06               	movlw	6
  1525  0003D6  ECB7  F006         	call	_i2c_master_send
  1526  0003DA                     L2:
  1527                           
  1528                           ;main.c: 473: state = 0;
  1529  0003DA  0E00               	movlw	0
  1530  0003DC  0101               	movlb	1	; () banked
  1531  0003DE  0101               	movlb	1	; () banked
  1532  0003E0  6FB0               	movwf	(main@state+1)& (0+255),b
  1533  0003E2  0E00               	movlw	0
  1534  0003E4  0101               	movlb	1	; () banked
  1535  0003E6  6FAF               	movwf	main@state& (0+255),b
  1536                           
  1537                           ; BSR set to: 1
  1538                           ;main.c: 474: LATAbits.LA1 = 1;
  1539  0003E8  8289               	bsf	3977,1,c	;volatile
  1540                           
  1541                           ; BSR set to: 1
  1542                           ;main.c: 475: LATAbits.LA2 = 1;
  1543  0003EA  8489               	bsf	3977,2,c	;volatile
  1544  0003EC  D093               	goto	L3
  1545  0003EE                     l2871:
  1546                           
  1547                           ; BSR set to: 1
  1548                           ;main.c: 478: else if(msgbuffer[2] == 0x3 || msgbuffer[3] == 0x3){
  1549  0003EE  0101               	movlb	1	; () banked
  1550  0003F0  0101               	movlb	1	; () banked
  1551  0003F2  51A2               	movf	(main@msgbuffer+2)& (0+255),w,b
  1552  0003F4  0A03               	xorlw	3
  1553  0003F6  B4D8               	btfsc	status,2,c
  1554  0003F8  D006               	goto	l154
  1555                           
  1556                           ; BSR set to: 1
  1557  0003FA  0101               	movlb	1	; () banked
  1558  0003FC  0101               	movlb	1	; () banked
  1559  0003FE  51A3               	movf	(main@msgbuffer+3)& (0+255),w,b
  1560  000400  0A03               	xorlw	3
  1561  000402  A4D8               	btfss	status,2,c
  1562  000404  D02E               	goto	l2885
  1563  000406                     l154:
  1564                           
  1565                           ; BSR set to: 1
  1566                           ;main.c: 479: correct[1] = lastMotors[0];
  1567  000406  C1AB  F19B         	movff	main@lastMotors,main@correct+1
  1568                           
  1569                           ; BSR set to: 1
  1570                           ;main.c: 480: correct[2] = (0x2A - lastMotors[1]) + lastMotors[1];
  1571  00040A  0101               	movlb	1	; () banked
  1572  00040C  0101               	movlb	1	; () banked
  1573  00040E  51AC               	movf	(main@lastMotors+1)& (0+255),w,b
  1574  000410  0800               	sublw	0
  1575  000412  0101               	movlb	1	; () banked
  1576  000414  0101               	movlb	1	; () banked
  1577  000416  25AC               	addwf	(main@lastMotors+1)& (0+255),w,b
  1578  000418  0F2A               	addlw	42
  1579  00041A  0101               	movlb	1	; () banked
  1580  00041C  0101               	movlb	1	; () banked
  1581  00041E  6F9C               	movwf	(main@correct+2)& (0+255),b
  1582                           
  1583                           ; BSR set to: 1
  1584                           ;main.c: 481: i2c_master_send(6, 6, correct, 0xBE);
  1585  000420  0100               	movlb	0	; () banked
  1586  000422  6FAA               	movwf	??_main& (0+255),b
  1587  000424  0E06               	movlw	6
  1588  000426  0100               	movlb	0	; () banked
  1589  000428  0100               	movlb	0	; () banked
  1590  00042A  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1591  00042C  0100               	movlb	0	; () banked
  1592  00042E  51AA               	movf	??_main& (0+255),w,b
  1593  000430  0101               	movlb	1	; () banked
  1594  000432  0E01               	movlw	high main@correct
  1595  000434  0100               	movlb	0	; () banked
  1596  000436  0100               	movlb	0	; () banked
  1597  000438  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1598  00043A  0101               	movlb	1	; () banked
  1599  00043C  0E9A               	movlw	low main@correct
  1600  00043E  0100               	movlb	0	; () banked
  1601  000440  0100               	movlb	0	; () banked
  1602  000442  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1603  000444  0100               	movlb	0	; () banked
  1604  000446  6FAB               	movwf	(??_main+1)& (0+255),b
  1605  000448  0EBE               	movlw	190
  1606  00044A  0100               	movlb	0	; () banked
  1607  00044C  0100               	movlb	0	; () banked
  1608  00044E  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1609  000450  0100               	movlb	0	; () banked
  1610  000452  51AB               	movf	(??_main+1)& (0+255),w,b
  1611  000454  0E06               	movlw	6
  1612  000456  ECB7  F006         	call	_i2c_master_send
  1613                           
  1614                           ;main.c: 482: LATAbits.LA1 = 1;
  1615  00045A  8289               	bsf	3977,1,c	;volatile
  1616  00045C  D037               	goto	L4
  1617  00045E                     L1:
  1618                           
  1619                           ;main.c: 484: LATAbits.LA3 = 1;
  1620  00045E  8689               	bsf	3977,3,c	;volatile
  1621                           
  1622                           ;main.c: 485: }else if(msgbuffer[2] == 0x1 || msgbuffer[3] == 0x1){
  1623  000460  D0E4               	goto	l2945
  1624  000462                     l2885:
  1625  000462  0101               	movlb	1	; () banked
  1626  000464  0101               	movlb	1	; () banked
  1627  000466  05A2               	decf	(main@msgbuffer+2)& (0+255),w,b
  1628  000468  B4D8               	btfsc	status,2,c
  1629  00046A  D005               	goto	l2889
  1630                           
  1631                           ; BSR set to: 1
  1632  00046C  0101               	movlb	1	; () banked
  1633  00046E  0101               	movlb	1	; () banked
  1634  000470  05A3               	decf	(main@msgbuffer+3)& (0+255),w,b
  1635  000472  A4D8               	btfss	status,2,c
  1636  000474  D02D               	goto	l156
  1637  000476                     l2889:
  1638                           
  1639                           ; BSR set to: 1
  1640                           ;main.c: 486: correct[1] = (0xAA - lastMotors[0]) + lastMotors[0];
  1641  000476  0101               	movlb	1	; () banked
  1642  000478  0101               	movlb	1	; () banked
  1643  00047A  51AB               	movf	main@lastMotors& (0+255),w,b
  1644  00047C  0800               	sublw	0
  1645  00047E  0101               	movlb	1	; () banked
  1646  000480  0101               	movlb	1	; () banked
  1647  000482  25AB               	addwf	main@lastMotors& (0+255),w,b
  1648  000484  0FAA               	addlw	170
  1649  000486  0101               	movlb	1	; () banked
  1650  000488  0101               	movlb	1	; () banked
  1651  00048A  6F9B               	movwf	(main@correct+1)& (0+255),b
  1652                           
  1653                           ; BSR set to: 1
  1654                           ;main.c: 487: correct[2] = lastMotors[1];
  1655  00048C  C1AC  F19C         	movff	main@lastMotors+1,main@correct+2
  1656                           
  1657                           ; BSR set to: 1
  1658                           ;main.c: 488: i2c_master_send(6, 6, correct, 0xBE);
  1659  000490  0100               	movlb	0	; () banked
  1660  000492  6FAA               	movwf	??_main& (0+255),b
  1661  000494  0E06               	movlw	6
  1662  000496  0100               	movlb	0	; () banked
  1663  000498  0100               	movlb	0	; () banked
  1664  00049A  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1665  00049C  0100               	movlb	0	; () banked
  1666  00049E  51AA               	movf	??_main& (0+255),w,b
  1667  0004A0  0101               	movlb	1	; () banked
  1668  0004A2  0E01               	movlw	high main@correct
  1669  0004A4  0100               	movlb	0	; () banked
  1670  0004A6  0100               	movlb	0	; () banked
  1671  0004A8  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1672  0004AA  0101               	movlb	1	; () banked
  1673  0004AC  0E9A               	movlw	low main@correct
  1674  0004AE  0100               	movlb	0	; () banked
  1675  0004B0  0100               	movlb	0	; () banked
  1676  0004B2  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1677  0004B4  0100               	movlb	0	; () banked
  1678  0004B6  6FAB               	movwf	(??_main+1)& (0+255),b
  1679  0004B8  0EBE               	movlw	190
  1680  0004BA  0100               	movlb	0	; () banked
  1681  0004BC  0100               	movlb	0	; () banked
  1682  0004BE  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1683  0004C0  0100               	movlb	0	; () banked
  1684  0004C2  51AB               	movf	(??_main+1)& (0+255),w,b
  1685  0004C4  0E06               	movlw	6
  1686  0004C6  ECB7  F006         	call	_i2c_master_send
  1687                           
  1688                           ;main.c: 489: LATAbits.LA1 = 0;
  1689  0004CA  9289               	bcf	3977,1,c	;volatile
  1690  0004CC                     L4:
  1691                           
  1692                           ;main.c: 490: LATAbits.LA2 = 1;
  1693  0004CC  8489               	bsf	3977,2,c	;volatile
  1694  0004CE  D7C7               	goto	L1
  1695  0004D0                     l156:
  1696                           
  1697                           ; BSR set to: 1
  1698                           ;main.c: 493: else{
  1699                           ;main.c: 494: correct[1] = lastMotors[0];
  1700  0004D0  C1AB  F19B         	movff	main@lastMotors,main@correct+1
  1701                           
  1702                           ;main.c: 495: correct[2] = lastMotors[1];
  1703  0004D4  C1AC  F19C         	movff	main@lastMotors+1,main@correct+2
  1704                           
  1705                           ; BSR set to: 1
  1706                           ;main.c: 496: i2c_master_send(6, 6, correct, 0xBE);
  1707  0004D8  0100               	movlb	0	; () banked
  1708  0004DA  6FAA               	movwf	??_main& (0+255),b
  1709  0004DC  0E06               	movlw	6
  1710  0004DE  0100               	movlb	0	; () banked
  1711  0004E0  0100               	movlb	0	; () banked
  1712  0004E2  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1713  0004E4  0100               	movlb	0	; () banked
  1714  0004E6  51AA               	movf	??_main& (0+255),w,b
  1715  0004E8  0101               	movlb	1	; () banked
  1716  0004EA  0E01               	movlw	high main@correct
  1717  0004EC  0100               	movlb	0	; () banked
  1718  0004EE  0100               	movlb	0	; () banked
  1719  0004F0  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1720  0004F2  0101               	movlb	1	; () banked
  1721  0004F4  0E9A               	movlw	low main@correct
  1722  0004F6  0100               	movlb	0	; () banked
  1723  0004F8  0100               	movlb	0	; () banked
  1724  0004FA  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1725  0004FC  0100               	movlb	0	; () banked
  1726  0004FE  6FAB               	movwf	(??_main+1)& (0+255),b
  1727  000500  0EBE               	movlw	190
  1728  000502  0100               	movlb	0	; () banked
  1729  000504  0100               	movlb	0	; () banked
  1730  000506  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1731  000508  0100               	movlb	0	; () banked
  1732  00050A  51AB               	movf	(??_main+1)& (0+255),w,b
  1733  00050C  0E06               	movlw	6
  1734  00050E  ECB7  F006         	call	_i2c_master_send
  1735  000512  D065               	goto	L5
  1736  000514                     L3:
  1737                           
  1738                           ;main.c: 499: LATAbits.LA3 = 0;
  1739  000514  9689               	bcf	3977,3,c	;volatile
  1740  000516  D089               	goto	l2945
  1741  000518                     l2909:
  1742  000518  0101               	movlb	1	; () banked
  1743  00051A  0101               	movlb	1	; () banked
  1744  00051C  51AF               	movf	main@state& (0+255),w,b
  1745  00051E  0A03               	xorlw	3
  1746  000520  11B0               	iorwf	(main@state+1)& (0+255),w,b
  1747  000522  A4D8               	btfss	status,2,c
  1748  000524  D082               	goto	l2945
  1749                           
  1750                           ; BSR set to: 1
  1751                           ;main.c: 502: if(msgbuffer[1] == 0x1){
  1752  000526  0101               	movlb	1	; () banked
  1753  000528  0101               	movlb	1	; () banked
  1754  00052A  05A1               	decf	(main@msgbuffer+1)& (0+255),w,b
  1755  00052C  A4D8               	btfss	status,2,c
  1756  00052E  D027               	goto	l2923
  1757                           
  1758                           ; BSR set to: 1
  1759                           ;main.c: 503: i2c_master_send(6, 6, stop, 0xBE);
  1760  000530  0100               	movlb	0	; () banked
  1761  000532  6FAA               	movwf	??_main& (0+255),b
  1762  000534  0E06               	movlw	6
  1763  000536  0100               	movlb	0	; () banked
  1764  000538  0100               	movlb	0	; () banked
  1765  00053A  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1766  00053C  0100               	movlb	0	; () banked
  1767  00053E  51AA               	movf	??_main& (0+255),w,b
  1768  000540  0101               	movlb	1	; () banked
  1769  000542  0E01               	movlw	high main@stop
  1770  000544  0100               	movlb	0	; () banked
  1771  000546  0100               	movlb	0	; () banked
  1772  000548  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1773  00054A  0101               	movlb	1	; () banked
  1774  00054C  0E8F               	movlw	low main@stop
  1775  00054E  0100               	movlb	0	; () banked
  1776  000550  0100               	movlb	0	; () banked
  1777  000552  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1778  000554  0100               	movlb	0	; () banked
  1779  000556  6FAB               	movwf	(??_main+1)& (0+255),b
  1780  000558  0EBE               	movlw	190
  1781  00055A  0100               	movlb	0	; () banked
  1782  00055C  0100               	movlb	0	; () banked
  1783  00055E  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1784  000560  0100               	movlb	0	; () banked
  1785  000562  51AB               	movf	(??_main+1)& (0+255),w,b
  1786  000564  0E06               	movlw	6
  1787  000566  ECB7  F006         	call	_i2c_master_send
  1788                           
  1789                           ;main.c: 504: state = 0;
  1790  00056A  0E00               	movlw	0
  1791  00056C  0101               	movlb	1	; () banked
  1792  00056E  0101               	movlb	1	; () banked
  1793  000570  6FB0               	movwf	(main@state+1)& (0+255),b
  1794  000572  0E00               	movlw	0
  1795  000574  0101               	movlb	1	; () banked
  1796  000576  6FAF               	movwf	main@state& (0+255),b
  1797                           
  1798                           ; BSR set to: 1
  1799                           ;main.c: 505: LATAbits.LA1 = 1;
  1800  000578  8289               	bsf	3977,1,c	;volatile
  1801                           
  1802                           ; BSR set to: 1
  1803                           ;main.c: 506: LATAbits.LA2 = 0;
  1804  00057A  9489               	bcf	3977,2,c	;volatile
  1805                           
  1806                           ; BSR set to: 1
  1807                           ;main.c: 507: LATAbits.LA3 = 1;
  1808  00057C  8689               	bsf	3977,3,c	;volatile
  1809  00057E                     l2923:
  1810                           
  1811                           ; BSR set to: 1
  1812                           ;main.c: 509: }
  1813                           ;main.c: 511: if(msgbuffer[2] != 0x4 && msgbuffer[3] != 0x4){
  1814  00057E  0101               	movlb	1	; () banked
  1815  000580  0101               	movlb	1	; () banked
  1816  000582  51A2               	movf	(main@msgbuffer+2)& (0+255),w,b
  1817  000584  0A04               	xorlw	4
  1818  000586  B4D8               	btfsc	status,2,c
  1819  000588  D050               	goto	l2945
  1820                           
  1821                           ; BSR set to: 1
  1822  00058A  0101               	movlb	1	; () banked
  1823  00058C  0101               	movlb	1	; () banked
  1824  00058E  51A3               	movf	(main@msgbuffer+3)& (0+255),w,b
  1825  000590  0A04               	xorlw	4
  1826  000592  B4D8               	btfsc	status,2,c
  1827  000594  D04A               	goto	l2945
  1828                           
  1829                           ; BSR set to: 1
  1830                           ;main.c: 512: i2c_master_send(6, 6, stop, 0xBE);
  1831  000596  0100               	movlb	0	; () banked
  1832  000598  6FAA               	movwf	??_main& (0+255),b
  1833  00059A  0E06               	movlw	6
  1834  00059C  0100               	movlb	0	; () banked
  1835  00059E  0100               	movlb	0	; () banked
  1836  0005A0  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  1837  0005A2  0100               	movlb	0	; () banked
  1838  0005A4  51AA               	movf	??_main& (0+255),w,b
  1839  0005A6  0101               	movlb	1	; () banked
  1840  0005A8  0E01               	movlw	high main@stop
  1841  0005AA  0100               	movlb	0	; () banked
  1842  0005AC  0100               	movlb	0	; () banked
  1843  0005AE  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1844  0005B0  0101               	movlb	1	; () banked
  1845  0005B2  0E8F               	movlw	low main@stop
  1846  0005B4  0100               	movlb	0	; () banked
  1847  0005B6  0100               	movlb	0	; () banked
  1848  0005B8  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  1849  0005BA  0100               	movlb	0	; () banked
  1850  0005BC  6FAB               	movwf	(??_main+1)& (0+255),b
  1851  0005BE  0EBE               	movlw	190
  1852  0005C0  0100               	movlb	0	; () banked
  1853  0005C2  0100               	movlb	0	; () banked
  1854  0005C4  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  1855  0005C6  0100               	movlb	0	; () banked
  1856  0005C8  51AB               	movf	(??_main+1)& (0+255),w,b
  1857  0005CA  0E06               	movlw	6
  1858  0005CC  ECB7  F006         	call	_i2c_master_send
  1859                           
  1860                           ;main.c: 513: state = 0;
  1861  0005D0  0E00               	movlw	0
  1862  0005D2  0101               	movlb	1	; () banked
  1863  0005D4  0101               	movlb	1	; () banked
  1864  0005D6  6FB0               	movwf	(main@state+1)& (0+255),b
  1865  0005D8  0E00               	movlw	0
  1866  0005DA  0101               	movlb	1	; () banked
  1867  0005DC  6FAF               	movwf	main@state& (0+255),b
  1868  0005DE                     L5:
  1869                           
  1870                           ; BSR set to: 1
  1871                           ;main.c: 514: LATAbits.LA1 = 1;
  1872  0005DE  8289               	bsf	3977,1,c	;volatile
  1873                           
  1874                           ; BSR set to: 1
  1875                           ;main.c: 515: LATAbits.LA2 = 0;
  1876  0005E0  9489               	bcf	3977,2,c	;volatile
  1877  0005E2  D798               	goto	L3
  1878  0005E4                     l2937:
  1879                           
  1880                           ; BSR set to: 1
  1881  0005E4  0101               	movlb	1	; () banked
  1882  0005E6  0101               	movlb	1	; () banked
  1883  0005E8  51A0               	movf	main@msgbuffer& (0+255),w,b
  1884  0005EA  B4D8               	btfsc	status,2,c
  1885  0005EC  D01E               	goto	l2945
  1886                           
  1887                           ; BSR set to: 1
  1888                           ;main.c: 521: uart_trans(6, msgbuffer);
  1889  0005EE  0101               	movlb	1	; () banked
  1890  0005F0  0E01               	movlw	high main@msgbuffer
  1891  0005F2  0100               	movlb	0	; () banked
  1892  0005F4  0100               	movlb	0	; () banked
  1893  0005F6  6F8E               	movwf	(uart_trans@data+1)& (0+255),b
  1894  0005F8  0101               	movlb	1	; () banked
  1895  0005FA  0EA0               	movlw	low main@msgbuffer
  1896  0005FC  0100               	movlb	0	; () banked
  1897  0005FE  0100               	movlb	0	; () banked
  1898  000600  6F8D               	movwf	uart_trans@data& (0+255),b
  1899  000602  0E06               	movlw	6
  1900  000604  ECBA  F009         	call	_uart_trans
  1901  000608  D010               	goto	l2945
  1902  00060A                     l2943:
  1903  00060A  0101               	movlb	1	; () banked
  1904  00060C  0101               	movlb	1	; () banked
  1905  00060E  51AE               	movf	main@msgtype& (0+255),w,b
  1906                           
  1907                           ; Switch size 1, requested type "space"
  1908                           ; Number of cases is 5, Range of values is 10 to 46
  1909                           ; switch strategies available:
  1910                           ; Name         Instructions Cycles
  1911                           ; simple_byte           16     9 (average)
  1912                           ;	Chosen strategy is simple_byte
  1913  000610  0A0A               	xorlw	10	; case 10
  1914  000612  B4D8               	btfsc	status,2,c
  1915  000614  D5FB               	goto	l2813
  1916  000616  0A22               	xorlw	34	; case 40
  1917  000618  B4D8               	btfsc	status,2,c
  1918  00061A  D621               	goto	l134
  1919  00061C  0A01               	xorlw	1	; case 41
  1920  00061E  B4D8               	btfsc	status,2,c
  1921  000620  D61E               	goto	l134
  1922  000622  0A04               	xorlw	4	; case 45
  1923  000624  B4D8               	btfsc	status,2,c
  1924  000626  D61E               	goto	l2815
  1925  000628  0A03               	xorlw	3	; case 46
  1926  00062A                     l2945:
  1927                           
  1928                           ;main.c: 540: }
  1929                           ;main.c: 543: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1930  00062A  0101               	movlb	1	; () banked
  1931  00062C  0E01               	movlw	high main@msgtype
  1932  00062E  0100               	movlb	0	; () banked
  1933  000630  0100               	movlb	0	; () banked
  1934  000632  6FA6               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1935  000634  0101               	movlb	1	; () banked
  1936  000636  0EAE               	movlw	low main@msgtype
  1937  000638  0100               	movlb	0	; () banked
  1938  00063A  0100               	movlb	0	; () banked
  1939  00063C  6FA5               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1940  00063E  0101               	movlb	1	; () banked
  1941  000640  0E01               	movlw	high main@msgbuffer
  1942  000642  0100               	movlb	0	; () banked
  1943  000644  0100               	movlb	0	; () banked
  1944  000646  6FA8               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1945  000648  0101               	movlb	1	; () banked
  1946  00064A  0EA0               	movlw	low main@msgbuffer
  1947  00064C  0100               	movlb	0	; () banked
  1948  00064E  0100               	movlb	0	; () banked
  1949  000650  6FA7               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1950  000652  0E0A               	movlw	10
  1951  000654  ECB4  F00D         	call	_ToMainLow_recvmsg
  1952  000658  0101               	movlb	1	; () banked
  1953  00065A  0101               	movlb	1	; () banked
  1954  00065C  6FAD               	movwf	main@length& (0+255),b
  1955                           
  1956                           ; BSR set to: 1
  1957                           ;main.c: 544: if (length < 0) {
  1958  00065E  0101               	movlb	1	; () banked
  1959  000660  0101               	movlb	1	; () banked
  1960  000662  BFAD               	btfsc	main@length& (0+255),7,b
  1961  000664  D5B2               	goto	l2805
  1962  000666  D0E7               	goto	l3021
  1963  000668                     l172:
  1964                           
  1965                           ; BSR set to: 1
  1966                           ;main.c: 552: {
  1967                           ;main.c: 553: LATAbits.LA0 = 1;
  1968  000668  8089               	bsf	3977,0,c	;volatile
  1969                           
  1970                           ;main.c: 554: unsigned char sensorMsg[1] = {0xAA};
  1971  00066A  C1F1  F199         	movff	main@F9252,main@sensorMsg
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;main.c: 556: if(state == 1 || state == 3){
  1975  00066E  0101               	movlb	1	; () banked
  1976  000670  0101               	movlb	1	; () banked
  1977  000672  05AF               	decf	main@state& (0+255),w,b
  1978  000674  11B0               	iorwf	(main@state+1)& (0+255),w,b
  1979  000676  B4D8               	btfsc	status,2,c
  1980  000678  D007               	goto	l2955
  1981                           
  1982                           ; BSR set to: 1
  1983  00067A  0101               	movlb	1	; () banked
  1984  00067C  0101               	movlb	1	; () banked
  1985  00067E  51AF               	movf	main@state& (0+255),w,b
  1986  000680  0A03               	xorlw	3
  1987  000682  11B0               	iorwf	(main@state+1)& (0+255),w,b
  1988  000684  A4D8               	btfss	status,2,c
  1989  000686  D01D               	goto	l2957
  1990  000688                     l2955:
  1991                           
  1992                           ; BSR set to: 1
  1993                           ;main.c: 557: i2c_master_send(1, 6, sensorMsg, 0x9E);
  1994  000688  0100               	movlb	0	; () banked
  1995  00068A  6FAA               	movwf	??_main& (0+255),b
  1996  00068C  0E06               	movlw	6
  1997  00068E  0100               	movlb	0	; () banked
  1998  000690  0100               	movlb	0	; () banked
  1999  000692  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  2000  000694  0100               	movlb	0	; () banked
  2001  000696  51AA               	movf	??_main& (0+255),w,b
  2002  000698  0101               	movlb	1	; () banked
  2003  00069A  0E01               	movlw	high main@sensorMsg
  2004  00069C  0100               	movlb	0	; () banked
  2005  00069E  0100               	movlb	0	; () banked
  2006  0006A0  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  2007  0006A2  0101               	movlb	1	; () banked
  2008  0006A4  0E99               	movlw	low main@sensorMsg
  2009  0006A6  0100               	movlb	0	; () banked
  2010  0006A8  0100               	movlb	0	; () banked
  2011  0006AA  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  2012  0006AC  0100               	movlb	0	; () banked
  2013  0006AE  6FAB               	movwf	(??_main+1)& (0+255),b
  2014  0006B0  0E9E               	movlw	158
  2015  0006B2  0100               	movlb	0	; () banked
  2016  0006B4  0100               	movlb	0	; () banked
  2017  0006B6  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  2018  0006B8  0100               	movlb	0	; () banked
  2019  0006BA  51AB               	movf	(??_main+1)& (0+255),w,b
  2020  0006BC  0E01               	movlw	1
  2021  0006BE  ECB7  F006         	call	_i2c_master_send
  2022  0006C2                     l2957:
  2023                           
  2024                           ;main.c: 558: }
  2025                           ;main.c: 559: LATAbits.LA0 = 0;
  2026  0006C2  9089               	bcf	3977,0,c	;volatile
  2027                           
  2028                           ;main.c: 560: break;
  2029  0006C4  D582               	goto	l2805
  2030  0006C6                     l2959:
  2031                           
  2032                           ;main.c: 563: case 31:
  2033                           ;main.c: 564: {
  2034                           ;main.c: 566: if(msgbuffer[0] == 0xBA || msgbuffer[0] == 0xCA || msgbuffer[0] == 0xBC ||
      +                           msgbuffer[0] == 0xBD){
  2035  0006C6  0101               	movlb	1	; () banked
  2036  0006C8  0101               	movlb	1	; () banked
  2037  0006CA  51A0               	movf	main@msgbuffer& (0+255),w,b
  2038  0006CC  0ABA               	xorlw	186
  2039  0006CE  B4D8               	btfsc	status,2,c
  2040  0006D0  D012               	goto	l2967
  2041                           
  2042                           ; BSR set to: 1
  2043  0006D2  0101               	movlb	1	; () banked
  2044  0006D4  0101               	movlb	1	; () banked
  2045  0006D6  51A0               	movf	main@msgbuffer& (0+255),w,b
  2046  0006D8  0ACA               	xorlw	202
  2047  0006DA  B4D8               	btfsc	status,2,c
  2048  0006DC  D00C               	goto	l2967
  2049                           
  2050                           ; BSR set to: 1
  2051  0006DE  0101               	movlb	1	; () banked
  2052  0006E0  0101               	movlb	1	; () banked
  2053  0006E2  51A0               	movf	main@msgbuffer& (0+255),w,b
  2054  0006E4  0ABC               	xorlw	188
  2055  0006E6  B4D8               	btfsc	status,2,c
  2056  0006E8  D006               	goto	l2967
  2057                           
  2058                           ; BSR set to: 1
  2059  0006EA  0101               	movlb	1	; () banked
  2060  0006EC  0101               	movlb	1	; () banked
  2061  0006EE  51A0               	movf	main@msgbuffer& (0+255),w,b
  2062  0006F0  0ABD               	xorlw	189
  2063  0006F2  A4D8               	btfss	status,2,c
  2064  0006F4  D07B               	goto	l3013
  2065  0006F6                     l2967:
  2066                           
  2067                           ; BSR set to: 1
  2068                           ;main.c: 568: if(msgbuffer[0] == 0x0BA || msgbuffer[0] == 0xBC || msgbuffer[0] == 0xBD){
  2069  0006F6  0101               	movlb	1	; () banked
  2070  0006F8  0101               	movlb	1	; () banked
  2071  0006FA  51A0               	movf	main@msgbuffer& (0+255),w,b
  2072  0006FC  0ABA               	xorlw	186
  2073  0006FE  B4D8               	btfsc	status,2,c
  2074  000700  D00C               	goto	l2973
  2075                           
  2076                           ; BSR set to: 1
  2077  000702  0101               	movlb	1	; () banked
  2078  000704  0101               	movlb	1	; () banked
  2079  000706  51A0               	movf	main@msgbuffer& (0+255),w,b
  2080  000708  0ABC               	xorlw	188
  2081  00070A  B4D8               	btfsc	status,2,c
  2082  00070C  D006               	goto	l2973
  2083                           
  2084                           ; BSR set to: 1
  2085  00070E  0101               	movlb	1	; () banked
  2086  000710  0101               	movlb	1	; () banked
  2087  000712  51A0               	movf	main@msgbuffer& (0+255),w,b
  2088  000714  0ABD               	xorlw	189
  2089  000716  A4D8               	btfss	status,2,c
  2090  000718  D04B               	goto	l3011
  2091  00071A                     l2973:
  2092                           
  2093                           ; BSR set to: 1
  2094                           ;main.c: 570: unsigned char motorAck[6] = {0x03, 0x00, 0x00, 0x00, 0x00, 0x00};
  2095  00071A  EE21  F0E9         	lfsr	2,main@F9254
  2096  00071E  EE11  F086         	lfsr	1,main@motorAck
  2097  000722  0E06               	movlw	6
  2098  000724                     u2161:
  2099  000724  CFDE FFE6          	movff	postinc2,postinc1
  2100  000728  2EE8               	decfsz	wreg,f,c
  2101  00072A  D7FC               	goto	u2161
  2102                           
  2103                           ; BSR set to: 1
  2104                           ;main.c: 571: uart_trans(6, motorAck);
  2105  00072C  0101               	movlb	1	; () banked
  2106  00072E  0E01               	movlw	high main@motorAck
  2107  000730  0100               	movlb	0	; () banked
  2108  000732  0100               	movlb	0	; () banked
  2109  000734  6F8E               	movwf	(uart_trans@data+1)& (0+255),b
  2110  000736  0101               	movlb	1	; () banked
  2111  000738  0E86               	movlw	low main@motorAck
  2112  00073A  0100               	movlb	0	; () banked
  2113  00073C  0100               	movlb	0	; () banked
  2114  00073E  6F8D               	movwf	uart_trans@data& (0+255),b
  2115  000740  0E06               	movlw	6
  2116  000742  ECBA  F009         	call	_uart_trans
  2117                           
  2118                           ;main.c: 573: lastMotors[0] = msgbuffer[1];
  2119  000746  C1A1  F1AB         	movff	main@msgbuffer+1,main@lastMotors
  2120                           
  2121                           ;main.c: 574: lastMotors[1] = msgbuffer[2];
  2122  00074A  C1A2  F1AC         	movff	main@msgbuffer+2,main@lastMotors+1
  2123                           
  2124                           ;main.c: 576: if(msgbuffer[0] == 0xBA){
  2125  00074E  0101               	movlb	1	; () banked
  2126  000750  0101               	movlb	1	; () banked
  2127  000752  51A0               	movf	main@msgbuffer& (0+255),w,b
  2128  000754  0ABA               	xorlw	186
  2129  000756  A4D8               	btfss	status,2,c
  2130  000758  D00A               	goto	l2991
  2131                           
  2132                           ; BSR set to: 1
  2133                           ;main.c: 577: state = 2;
  2134  00075A  0E00               	movlw	0
  2135  00075C  0101               	movlb	1	; () banked
  2136  00075E  0101               	movlb	1	; () banked
  2137  000760  6FB0               	movwf	(main@state+1)& (0+255),b
  2138  000762  0E02               	movlw	2
  2139  000764  0101               	movlb	1	; () banked
  2140  000766  6FAF               	movwf	main@state& (0+255),b
  2141                           
  2142                           ; BSR set to: 1
  2143                           ;main.c: 578: LATAbits.LA1 = 0;
  2144  000768  9289               	bcf	3977,1,c	;volatile
  2145                           
  2146                           ; BSR set to: 1
  2147                           ;main.c: 579: LATAbits.LA2 = 1;
  2148  00076A  8489               	bsf	3977,2,c	;volatile
  2149  00076C  D00F               	goto	L6
  2150  00076E                     l2991:
  2151                           
  2152                           ; BSR set to: 1
  2153  00076E  0101               	movlb	1	; () banked
  2154  000770  0101               	movlb	1	; () banked
  2155  000772  51A0               	movf	main@msgbuffer& (0+255),w,b
  2156  000774  0ABC               	xorlw	188
  2157  000776  A4D8               	btfss	status,2,c
  2158  000778  D00B               	goto	l3001
  2159                           
  2160                           ; BSR set to: 1
  2161                           ;main.c: 582: state = 1;
  2162  00077A  0E00               	movlw	0
  2163  00077C  0101               	movlb	1	; () banked
  2164  00077E  0101               	movlb	1	; () banked
  2165  000780  6FB0               	movwf	(main@state+1)& (0+255),b
  2166  000782  0E01               	movlw	1
  2167  000784  0101               	movlb	1	; () banked
  2168  000786  6FAF               	movwf	main@state& (0+255),b
  2169                           
  2170                           ; BSR set to: 1
  2171                           ;main.c: 583: LATAbits.LA1 = 1;
  2172  000788  8289               	bsf	3977,1,c	;volatile
  2173                           
  2174                           ; BSR set to: 1
  2175                           ;main.c: 584: LATAbits.LA2 = 0;
  2176  00078A  9489               	bcf	3977,2,c	;volatile
  2177  00078C                     L6:
  2178                           
  2179                           ; BSR set to: 1
  2180                           ;main.c: 585: LATAbits.LA3 = 0;
  2181  00078C  9689               	bcf	3977,3,c	;volatile
  2182                           
  2183                           ;main.c: 586: } else if(msgbuffer[0] == 0xBD){
  2184  00078E  D010               	goto	l3011
  2185  000790                     l3001:
  2186                           
  2187                           ; BSR set to: 1
  2188  000790  0101               	movlb	1	; () banked
  2189  000792  0101               	movlb	1	; () banked
  2190  000794  51A0               	movf	main@msgbuffer& (0+255),w,b
  2191  000796  0ABD               	xorlw	189
  2192  000798  A4D8               	btfss	status,2,c
  2193  00079A  D00A               	goto	l3011
  2194                           
  2195                           ; BSR set to: 1
  2196                           ;main.c: 587: state = 3;
  2197  00079C  0E00               	movlw	0
  2198  00079E  0101               	movlb	1	; () banked
  2199  0007A0  0101               	movlb	1	; () banked
  2200  0007A2  6FB0               	movwf	(main@state+1)& (0+255),b
  2201  0007A4  0E03               	movlw	3
  2202  0007A6  0101               	movlb	1	; () banked
  2203  0007A8  6FAF               	movwf	main@state& (0+255),b
  2204                           
  2205                           ; BSR set to: 1
  2206                           ;main.c: 588: LATAbits.LA1 = 0;
  2207  0007AA  9289               	bcf	3977,1,c	;volatile
  2208                           
  2209                           ; BSR set to: 1
  2210                           ;main.c: 589: LATAbits.LA2 = 1;
  2211  0007AC  8489               	bsf	3977,2,c	;volatile
  2212                           
  2213                           ; BSR set to: 1
  2214                           ;main.c: 590: LATAbits.LA3 = 1;
  2215  0007AE  8689               	bsf	3977,3,c	;volatile
  2216  0007B0                     l3011:
  2217                           
  2218                           ; BSR set to: 1
  2219                           ;main.c: 591: }
  2220                           ;main.c: 593: }
  2221                           ;main.c: 594: i2c_master_send(6, 6, msgbuffer, 0xBE);
  2222  0007B0  0100               	movlb	0	; () banked
  2223  0007B2  6FAA               	movwf	??_main& (0+255),b
  2224  0007B4  0E06               	movlw	6
  2225  0007B6  0100               	movlb	0	; () banked
  2226  0007B8  0100               	movlb	0	; () banked
  2227  0007BA  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  2228  0007BC  0100               	movlb	0	; () banked
  2229  0007BE  51AA               	movf	??_main& (0+255),w,b
  2230  0007C0  0101               	movlb	1	; () banked
  2231  0007C2  0E01               	movlw	high main@msgbuffer
  2232  0007C4  0100               	movlb	0	; () banked
  2233  0007C6  0100               	movlb	0	; () banked
  2234  0007C8  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  2235  0007CA  0101               	movlb	1	; () banked
  2236  0007CC  0EA0               	movlw	low main@msgbuffer
  2237  0007CE  0100               	movlb	0	; () banked
  2238  0007D0  0100               	movlb	0	; () banked
  2239  0007D2  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  2240  0007D4  0100               	movlb	0	; () banked
  2241  0007D6  6FAB               	movwf	(??_main+1)& (0+255),b
  2242  0007D8  0EBE               	movlw	190
  2243  0007DA  0100               	movlb	0	; () banked
  2244  0007DC  0100               	movlb	0	; () banked
  2245  0007DE  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  2246  0007E0  0100               	movlb	0	; () banked
  2247  0007E2  51AB               	movf	(??_main+1)& (0+255),w,b
  2248  0007E4  0E06               	movlw	6
  2249  0007E6  ECB7  F006         	call	_i2c_master_send
  2250                           
  2251                           ;main.c: 596: } else if(msgbuffer[0] == 0xAA){
  2252  0007EA  D023               	goto	l3017
  2253  0007EC                     l3013:
  2254  0007EC  0101               	movlb	1	; () banked
  2255  0007EE  0101               	movlb	1	; () banked
  2256  0007F0  51A0               	movf	main@msgbuffer& (0+255),w,b
  2257  0007F2  0AAA               	xorlw	170
  2258  0007F4  A4D8               	btfss	status,2,c
  2259  0007F6  D01D               	goto	l3017
  2260                           
  2261                           ; BSR set to: 1
  2262                           ;main.c: 598: i2c_master_send(1, 6, msgbuffer, 0x9E);
  2263  0007F8  0100               	movlb	0	; () banked
  2264  0007FA  6FAA               	movwf	??_main& (0+255),b
  2265  0007FC  0E06               	movlw	6
  2266  0007FE  0100               	movlb	0	; () banked
  2267  000800  0100               	movlb	0	; () banked
  2268  000802  6F8D               	movwf	i2c_master_send@recvlength& (0+255),b
  2269  000804  0100               	movlb	0	; () banked
  2270  000806  51AA               	movf	??_main& (0+255),w,b
  2271  000808  0101               	movlb	1	; () banked
  2272  00080A  0E01               	movlw	high main@msgbuffer
  2273  00080C  0100               	movlb	0	; () banked
  2274  00080E  0100               	movlb	0	; () banked
  2275  000810  6F8F               	movwf	(i2c_master_send@msg+1)& (0+255),b
  2276  000812  0101               	movlb	1	; () banked
  2277  000814  0EA0               	movlw	low main@msgbuffer
  2278  000816  0100               	movlb	0	; () banked
  2279  000818  0100               	movlb	0	; () banked
  2280  00081A  6F8E               	movwf	i2c_master_send@msg& (0+255),b
  2281  00081C  0100               	movlb	0	; () banked
  2282  00081E  6FAB               	movwf	(??_main+1)& (0+255),b
  2283  000820  0E9E               	movlw	158
  2284  000822  0100               	movlb	0	; () banked
  2285  000824  0100               	movlb	0	; () banked
  2286  000826  6F90               	movwf	i2c_master_send@slave_addr& (0+255),b
  2287  000828  0100               	movlb	0	; () banked
  2288  00082A  51AB               	movf	(??_main+1)& (0+255),w,b
  2289  00082C  0E01               	movlw	1
  2290  00082E  ECB7  F006         	call	_i2c_master_send
  2291  000832                     l3017:
  2292                           
  2293                           ;main.c: 599: }
  2294                           ;main.c: 601: LATBbits.LATB2 = 0;
  2295  000832  948A               	bcf	3978,2,c	;volatile
  2296                           
  2297                           ;main.c: 603: break;
  2298  000834  D4CA               	goto	l2805
  2299  000836                     l3021:
  2300  000836  0101               	movlb	1	; () banked
  2301  000838  0101               	movlb	1	; () banked
  2302  00083A  51AE               	movf	main@msgtype& (0+255),w,b
  2303                           
  2304                           ; Switch size 1, requested type "space"
  2305                           ; Number of cases is 3, Range of values is 11 to 31
  2306                           ; switch strategies available:
  2307                           ; Name         Instructions Cycles
  2308                           ; simple_byte           10     6 (average)
  2309                           ;	Chosen strategy is simple_byte
  2310  00083C  0A0B               	xorlw	11	; case 11
  2311  00083E  B4D8               	btfsc	status,2,c
  2312  000840  D713               	goto	l172
  2313  000842  0A15               	xorlw	21	; case 30
  2314  000844  B4D8               	btfsc	status,2,c
  2315  000846  D73F               	goto	l2959
  2316  000848  0A01               	xorlw	1	; case 31
  2317  00084A  B4D8               	btfsc	status,2,c
  2318  00084C  D73C               	goto	l2959
  2319  00084E  D4BD               	goto	l2805
  2320  000850                     __end_of_main:
  2321                           	opt stack 0
  2322                           tblptru	equ	0xFF8
  2323                           tblptrh	equ	0xFF7
  2324                           tblptrl	equ	0xFF6
  2325                           tablat	equ	0xFF5
  2326                           intcon2	equ	0xFF1
  2327                           postinc0	equ	0xFEE
  2328                           wreg	equ	0xFE8
  2329                           postinc1	equ	0xFE6
  2330                           postdec1	equ	0xFE5
  2331                           fsr1l	equ	0xFE1
  2332                           postinc2	equ	0xFDE
  2333                           status	equ	0xFD8
  2334                           
  2335 ;; *************** function _uart_trans *****************
  2336 ;; Defined at:
  2337 ;;		line 61 in file "../src/my_uart.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  length          1    wreg     unsigned char 
  2340 ;;  data            2   45[BANK0 ] PTR unsigned char 
  2341 ;;		 -> i2c_slave_int_handler@motorcomm(2), main@motorAck(6), main@msgbuffer(11), 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  length          1   49[BANK0 ] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;		None               void
  2346 ;; Registers used:
  2347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2353 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2355 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2356 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2357 ;;Total ram usage:        5 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:   11
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;;		_i2c_slave_int_handler
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text1
  2369  001374                     __ptext1:
  2370                           	opt stack 0
  2371  001374                     _uart_trans:
  2372                           	opt stack 19
  2373                           
  2374                           ; BSR set to: 1
  2375                           ;incstack = 0
  2376                           ;uart_trans@length stored from wreg
  2377  001374  CFE8 F091          	movff	wreg,uart_trans@length
  2378                           
  2379                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  2380  001378  EE20 F00D          	lfsr	2,13
  2381  00137C  503F               	movf	_uc_ptr,w,c
  2382  00137E  26D9               	addwf	fsr2l,f,c
  2383  001380  5040               	movf	_uc_ptr+1,w,c
  2384  001382  22DA               	addwfc	fsr2h,f,c
  2385  001384  0E00               	movlw	0
  2386  001386  6EDF               	movwf	indf2,c
  2387  001388  D035               	goto	l3171
  2388  00138A                     l3167:
  2389                           
  2390                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  2391  00138A  EE20 F00D          	lfsr	2,13
  2392  00138E  503F               	movf	_uc_ptr,w,c
  2393  001390  26D9               	addwf	fsr2l,f,c
  2394  001392  5040               	movf	_uc_ptr+1,w,c
  2395  001394  22DA               	addwfc	fsr2h,f,c
  2396  001396  50DF               	movf	indf2,w,c
  2397  001398  0100               	movlb	0	; () banked
  2398  00139A  6F8F               	movwf	??_uart_trans& (0+255),b
  2399  00139C  0100               	movlb	0	; () banked
  2400  00139E  518F               	movf	??_uart_trans& (0+255),w,b
  2401  0013A0  0D01               	mullw	1
  2402  0013A2  50F3               	movf	prodl,w,c
  2403  0013A4  0100               	movlb	0	; () banked
  2404  0013A6  0100               	movlb	0	; () banked
  2405  0013A8  258D               	addwf	uart_trans@data& (0+255),w,b
  2406  0013AA  6ED9               	movwf	fsr2l,c
  2407  0013AC  50F4               	movf	prodh,w,c
  2408  0013AE  0100               	movlb	0	; () banked
  2409  0013B0  0100               	movlb	0	; () banked
  2410  0013B2  218E               	addwfc	(uart_trans@data+1)& (0+255),w,b
  2411  0013B4  6EDA               	movwf	fsr2h,c
  2412  0013B6  EE10 F00D          	lfsr	1,13
  2413  0013BA  503F               	movf	_uc_ptr,w,c
  2414  0013BC  26E1               	addwf	fsr1l,f,c
  2415  0013BE  5040               	movf	_uc_ptr+1,w,c
  2416  0013C0  22E2               	addwfc	fsr1h,f,c
  2417  0013C2  50E7               	movf	indf1,w,c
  2418  0013C4  0100               	movlb	0	; () banked
  2419  0013C6  6F90               	movwf	(??_uart_trans+1)& (0+255),b
  2420  0013C8  0100               	movlb	0	; () banked
  2421  0013CA  5190               	movf	(??_uart_trans+1)& (0+255),w,b
  2422  0013CC  0D01               	mullw	1
  2423  0013CE  0E07               	movlw	7
  2424  0013D0  26F3               	addwf	prodl,f,c
  2425  0013D2  0E00               	movlw	0
  2426  0013D4  22F4               	addwfc	prodh,f,c
  2427  0013D6  50F3               	movf	prodl,w,c
  2428  0013D8  243F               	addwf	_uc_ptr,w,c
  2429  0013DA  6EE1               	movwf	fsr1l,c
  2430  0013DC  50F4               	movf	prodh,w,c
  2431  0013DE  2040               	addwfc	_uc_ptr+1,w,c
  2432  0013E0  6EE2               	movwf	fsr1h,c
  2433  0013E2  CFDF FFE7          	movff	indf2,indf1
  2434                           
  2435                           ; BSR set to: 0
  2436  0013E6  EE20 F00D          	lfsr	2,13
  2437  0013EA  503F               	movf	_uc_ptr,w,c
  2438  0013EC  26D9               	addwf	fsr2l,f,c
  2439  0013EE  5040               	movf	_uc_ptr+1,w,c
  2440  0013F0  22DA               	addwfc	fsr2h,f,c
  2441  0013F2  2ADF               	incf	indf2,f,c
  2442  0013F4                     l3171:
  2443  0013F4  EE20 F00D          	lfsr	2,13
  2444  0013F8  503F               	movf	_uc_ptr,w,c
  2445  0013FA  26D9               	addwf	fsr2l,f,c
  2446  0013FC  5040               	movf	_uc_ptr+1,w,c
  2447  0013FE  22DA               	addwfc	fsr2h,f,c
  2448  001400  50DF               	movf	indf2,w,c
  2449  001402  0100               	movlb	0	; () banked
  2450  001404  6F8F               	movwf	??_uart_trans& (0+255),b
  2451  001406  0100               	movlb	0	; () banked
  2452  001408  0100               	movlb	0	; () banked
  2453  00140A  5191               	movf	uart_trans@length& (0+255),w,b
  2454  00140C  0100               	movlb	0	; () banked
  2455  00140E  5D8F               	subwf	??_uart_trans& (0+255),w,b
  2456  001410  A0D8               	btfss	status,0,c
  2457  001412  D7BB               	goto	l3167
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;my_uart.c: 67: }
  2461                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  2462                           
  2463                           ; BSR set to: 0
  2464  001414  EE20 F00E          	lfsr	2,14
  2465  001418  503F               	movf	_uc_ptr,w,c
  2466  00141A  26D9               	addwf	fsr2l,f,c
  2467  00141C  5040               	movf	_uc_ptr+1,w,c
  2468  00141E  22DA               	addwfc	fsr2h,f,c
  2469  001420  0E00               	movlw	0
  2470  001422  6EDF               	movwf	indf2,c
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  2474  001424  889D               	bsf	3997,4,c	;volatile
  2475                           
  2476                           ; BSR set to: 0
  2477  001426  0012               	return	
  2478  001428                     __end_of_uart_trans:
  2479                           	opt stack 0
  2480                           tblptru	equ	0xFF8
  2481                           tblptrh	equ	0xFF7
  2482                           tblptrl	equ	0xFF6
  2483                           tablat	equ	0xFF5
  2484                           prodh	equ	0xFF4
  2485                           prodl	equ	0xFF3
  2486                           intcon2	equ	0xFF1
  2487                           postinc0	equ	0xFEE
  2488                           wreg	equ	0xFE8
  2489                           indf1	equ	0xFE7
  2490                           postinc1	equ	0xFE6
  2491                           postdec1	equ	0xFE5
  2492                           fsr1h	equ	0xFE2
  2493                           fsr1l	equ	0xFE1
  2494                           indf2	equ	0xFDF
  2495                           postinc2	equ	0xFDE
  2496                           fsr2h	equ	0xFDA
  2497                           fsr2l	equ	0xFD9
  2498                           status	equ	0xFD8
  2499                           
  2500 ;; *************** function _timer0_lthread *****************
  2501 ;; Defined at:
  2502 ;;		line 9 in file "../src/timer0_thread.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  tptr            2   45[BANK0 ] PTR struct __timer0_thre
  2505 ;;		 -> main@t0thread_data(2), 
  2506 ;;  msgtype         2   47[BANK0 ] int 
  2507 ;;  length          2   49[BANK0 ] int 
  2508 ;;  msgbuffer       2   51[BANK0 ] PTR unsigned char 
  2509 ;;		 -> main@msgbuffer(11), 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  msgval          2   53[BANK0 ] PTR unsigned int 
  2512 ;;		 -> main@msgbuffer(11), 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  2   45[BANK0 ] int 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2522 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2523 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2526 ;;Total ram usage:       10 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:   11
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_main
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text2
  2537  001E40                     __ptext2:
  2538                           	opt stack 0
  2539  001E40                     _timer0_lthread:
  2540                           	opt stack 19
  2541                           
  2542                           ;timer0_thread.c: 10: unsigned int *msgval;
  2543                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;incstack = 0
  2547  001E40  0100               	movlb	0	; () banked
  2548  001E42  0100               	movlb	0	; () banked
  2549  001E44  C094  F096         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2550  001E48  0100               	movlb	0	; () banked
  2551  001E4A  0100               	movlb	0	; () banked
  2552  001E4C  C093  F095         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2553                           
  2554                           ; BSR set to: 0
  2555  001E50  0012               	return	
  2556  001E52                     __end_of_timer0_lthread:
  2557                           	opt stack 0
  2558                           tblptru	equ	0xFF8
  2559                           tblptrh	equ	0xFF7
  2560                           tblptrl	equ	0xFF6
  2561                           tablat	equ	0xFF5
  2562                           prodh	equ	0xFF4
  2563                           prodl	equ	0xFF3
  2564                           intcon2	equ	0xFF1
  2565                           postinc0	equ	0xFEE
  2566                           wreg	equ	0xFE8
  2567                           indf1	equ	0xFE7
  2568                           postinc1	equ	0xFE6
  2569                           postdec1	equ	0xFE5
  2570                           fsr1h	equ	0xFE2
  2571                           fsr1l	equ	0xFE1
  2572                           indf2	equ	0xFDF
  2573                           postinc2	equ	0xFDE
  2574                           fsr2h	equ	0xFDA
  2575                           fsr2l	equ	0xFD9
  2576                           status	equ	0xFD8
  2577                           
  2578 ;; *************** function _init_uart_recv *****************
  2579 ;; Defined at:
  2580 ;;		line 54 in file "../src/my_uart.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  uc              2   45[BANK0 ] PTR struct __uart_comm
  2583 ;;		 -> main@uc(15), 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;		None               void
  2588 ;; Registers used:
  2589 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2598 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2599 ;;Total ram usage:        2 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:   11
  2602 ;; This function calls:
  2603 ;;		Nothing
  2604 ;; This function is called by:
  2605 ;;		_main
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text3
  2610  001DD8                     __ptext3:
  2611                           	opt stack 0
  2612  001DD8                     _init_uart_recv:
  2613                           	opt stack 19
  2614                           
  2615                           ;my_uart.c: 57: uc_ptr = uc;
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;incstack = 0
  2619  001DD8  0100               	movlb	0	; () banked
  2620  001DDA  C08E  F040         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2621  001DDE  0100               	movlb	0	; () banked
  2622  001DE0  C08D  F03F         	movff	init_uart_recv@uc,_uc_ptr
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;my_uart.c: 58: uc_ptr->buflen = 0;
  2626  001DE4  EE20 F006          	lfsr	2,6
  2627  001DE8  503F               	movf	_uc_ptr,w,c
  2628  001DEA  26D9               	addwf	fsr2l,f,c
  2629  001DEC  5040               	movf	_uc_ptr+1,w,c
  2630  001DEE  22DA               	addwfc	fsr2h,f,c
  2631  001DF0  0E00               	movlw	0
  2632  001DF2  6EDF               	movwf	indf2,c
  2633                           
  2634                           ; BSR set to: 0
  2635  001DF4  0012               	return	
  2636  001DF6                     __end_of_init_uart_recv:
  2637                           	opt stack 0
  2638                           tblptru	equ	0xFF8
  2639                           tblptrh	equ	0xFF7
  2640                           tblptrl	equ	0xFF6
  2641                           tablat	equ	0xFF5
  2642                           prodh	equ	0xFF4
  2643                           prodl	equ	0xFF3
  2644                           intcon2	equ	0xFF1
  2645                           postinc0	equ	0xFEE
  2646                           wreg	equ	0xFE8
  2647                           indf1	equ	0xFE7
  2648                           postinc1	equ	0xFE6
  2649                           postdec1	equ	0xFE5
  2650                           fsr1h	equ	0xFE2
  2651                           fsr1l	equ	0xFE1
  2652                           indf2	equ	0xFDF
  2653                           postinc2	equ	0xFDE
  2654                           fsr2h	equ	0xFDA
  2655                           fsr2l	equ	0xFD9
  2656                           status	equ	0xFD8
  2657                           
  2658 ;; *************** function _init_timer1_lthread *****************
  2659 ;; Defined at:
  2660 ;;		line 6 in file "../src/timer1_thread.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  tptr            2   45[BANK0 ] PTR struct __timer1_thre
  2663 ;;		 -> main@t1thread_data(2), 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;		None               void
  2668 ;; Registers used:
  2669 ;;		wreg, fsr2l, fsr2h
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2675 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2678 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2679 ;;Total ram usage:        2 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:   11
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_main
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text4
  2690  001E52                     __ptext4:
  2691                           	opt stack 0
  2692  001E52                     _init_timer1_lthread:
  2693                           	opt stack 19
  2694                           
  2695                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;incstack = 0
  2699  001E52  C08D  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2700  001E56  C08E  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2701  001E5A  0E00               	movlw	0
  2702  001E5C  6EDE               	movwf	postinc2,c
  2703  001E5E  0E00               	movlw	0
  2704  001E60  6EDD               	movwf	postdec2,c
  2705  001E62  0012               	return	
  2706  001E64                     __end_of_init_timer1_lthread:
  2707                           	opt stack 0
  2708                           tblptru	equ	0xFF8
  2709                           tblptrh	equ	0xFF7
  2710                           tblptrl	equ	0xFF6
  2711                           tablat	equ	0xFF5
  2712                           prodh	equ	0xFF4
  2713                           prodl	equ	0xFF3
  2714                           intcon2	equ	0xFF1
  2715                           postinc0	equ	0xFEE
  2716                           wreg	equ	0xFE8
  2717                           indf1	equ	0xFE7
  2718                           postinc1	equ	0xFE6
  2719                           postdec1	equ	0xFE5
  2720                           fsr1h	equ	0xFE2
  2721                           fsr1l	equ	0xFE1
  2722                           indf2	equ	0xFDF
  2723                           postinc2	equ	0xFDE
  2724                           postdec2	equ	0xFDD
  2725                           fsr2h	equ	0xFDA
  2726                           fsr2l	equ	0xFD9
  2727                           status	equ	0xFD8
  2728                           
  2729 ;; *************** function _init_queues *****************
  2730 ;; Defined at:
  2731 ;;		line 194 in file "../src/messages.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;		None
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;		None               void
  2738 ;; Registers used:
  2739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2748 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2749 ;;Total ram usage:        1 bytes
  2750 ;; Hardware stack levels used:    1
  2751 ;; Hardware stack levels required when called:   12
  2752 ;; This function calls:
  2753 ;;		_init_queue
  2754 ;; This function is called by:
  2755 ;;		_main
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text5
  2760  0017CE                     __ptext5:
  2761                           	opt stack 0
  2762  0017CE                     _init_queues:
  2763                           	opt stack 18
  2764                           
  2765                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2766                           
  2767                           ;incstack = 0
  2768  0017CE  0100               	movlb	0	; () banked
  2769  0017D0  6F91               	movwf	??_init_queues& (0+255),b
  2770  0017D2  0E00               	movlw	0
  2771  0017D4  6E3D               	movwf	_MQ_Main_Willing_to_block,c
  2772  0017D6  0100               	movlb	0	; () banked
  2773  0017D8  5191               	movf	??_init_queues& (0+255),w,b
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2777  0017DA  0101               	movlb	1	; () banked
  2778  0017DC  0E01               	movlw	high _ToMainLow_MQ
  2779  0017DE  0100               	movlb	0	; () banked
  2780  0017E0  0100               	movlb	0	; () banked
  2781  0017E2  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2782  0017E4  0101               	movlb	1	; () banked
  2783  0017E6  0E43               	movlw	low _ToMainLow_MQ
  2784  0017E8  0100               	movlb	0	; () banked
  2785  0017EA  0100               	movlb	0	; () banked
  2786  0017EC  6F8D               	movwf	init_queue@qptr& (0+255),b
  2787  0017EE  EC6E  F00B         	call	_init_queue	;wreg free
  2788                           
  2789                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2790  0017F2  0101               	movlb	1	; () banked
  2791  0017F4  0E01               	movlw	high _ToMainHigh_MQ
  2792  0017F6  0100               	movlb	0	; () banked
  2793  0017F8  0100               	movlb	0	; () banked
  2794  0017FA  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2795  0017FC  0101               	movlb	1	; () banked
  2796  0017FE  0E00               	movlw	low _ToMainHigh_MQ
  2797  001800  0100               	movlb	0	; () banked
  2798  001802  0100               	movlb	0	; () banked
  2799  001804  6F8D               	movwf	init_queue@qptr& (0+255),b
  2800  001806  EC6E  F00B         	call	_init_queue	;wreg free
  2801                           
  2802                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2803  00180A  0102               	movlb	2	; () banked
  2804  00180C  0E02               	movlw	high _FromMainLow_MQ
  2805  00180E  0100               	movlb	0	; () banked
  2806  001810  0100               	movlb	0	; () banked
  2807  001812  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2808  001814  0102               	movlb	2	; () banked
  2809  001816  0E43               	movlw	low _FromMainLow_MQ
  2810  001818  0100               	movlb	0	; () banked
  2811  00181A  0100               	movlb	0	; () banked
  2812  00181C  6F8D               	movwf	init_queue@qptr& (0+255),b
  2813  00181E  EC6E  F00B         	call	_init_queue	;wreg free
  2814                           
  2815                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2816  001822  0102               	movlb	2	; () banked
  2817  001824  0E02               	movlw	high _FromMainHigh_MQ
  2818  001826  0100               	movlb	0	; () banked
  2819  001828  0100               	movlb	0	; () banked
  2820  00182A  6F8E               	movwf	(init_queue@qptr+1)& (0+255),b
  2821  00182C  0102               	movlb	2	; () banked
  2822  00182E  0E00               	movlw	low _FromMainHigh_MQ
  2823  001830  0100               	movlb	0	; () banked
  2824  001832  0100               	movlb	0	; () banked
  2825  001834  6F8D               	movwf	init_queue@qptr& (0+255),b
  2826  001836  EC6E  F00B         	call	_init_queue	;wreg free
  2827  00183A  0012               	return	
  2828  00183C                     __end_of_init_queues:
  2829                           	opt stack 0
  2830                           tblptru	equ	0xFF8
  2831                           tblptrh	equ	0xFF7
  2832                           tblptrl	equ	0xFF6
  2833                           tablat	equ	0xFF5
  2834                           prodh	equ	0xFF4
  2835                           prodl	equ	0xFF3
  2836                           intcon2	equ	0xFF1
  2837                           postinc0	equ	0xFEE
  2838                           wreg	equ	0xFE8
  2839                           indf1	equ	0xFE7
  2840                           postinc1	equ	0xFE6
  2841                           postdec1	equ	0xFE5
  2842                           fsr1h	equ	0xFE2
  2843                           fsr1l	equ	0xFE1
  2844                           indf2	equ	0xFDF
  2845                           postinc2	equ	0xFDE
  2846                           postdec2	equ	0xFDD
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _init_queue *****************
  2852 ;; Defined at:
  2853 ;;		line 14 in file "../src/messages.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  2856 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  i               1   48[BANK0 ] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;		None               void
  2861 ;; Registers used:
  2862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2868 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2872 ;;Total ram usage:        4 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:   11
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_init_queues
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text6
  2883  0016DC                     __ptext6:
  2884                           	opt stack 0
  2885  0016DC                     _init_queue:
  2886                           	opt stack 18
  2887                           
  2888                           ;messages.c: 15: unsigned char i;
  2889                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2890                           
  2891                           ;incstack = 0
  2892  0016DC  0100               	movlb	0	; () banked
  2893  0016DE  EE20 F041          	lfsr	2,65
  2894  0016E2  0100               	movlb	0	; () banked
  2895  0016E4  518D               	movf	init_queue@qptr& (0+255),w,b
  2896  0016E6  26D9               	addwf	fsr2l,f,c
  2897  0016E8  0100               	movlb	0	; () banked
  2898  0016EA  518E               	movf	(init_queue@qptr+1)& (0+255),w,b
  2899  0016EC  22DA               	addwfc	fsr2h,f,c
  2900  0016EE  0E00               	movlw	0
  2901  0016F0  6EDF               	movwf	indf2,c
  2902                           
  2903                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2904  0016F2  0100               	movlb	0	; () banked
  2905  0016F4  EE20 F042          	lfsr	2,66
  2906  0016F8  0100               	movlb	0	; () banked
  2907  0016FA  518D               	movf	init_queue@qptr& (0+255),w,b
  2908  0016FC  26D9               	addwf	fsr2l,f,c
  2909  0016FE  0100               	movlb	0	; () banked
  2910  001700  518E               	movf	(init_queue@qptr+1)& (0+255),w,b
  2911  001702  22DA               	addwfc	fsr2h,f,c
  2912  001704  0E00               	movlw	0
  2913  001706  6EDF               	movwf	indf2,c
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2917  001708  0100               	movlb	0	; () banked
  2918  00170A  6F8F               	movwf	??_init_queue& (0+255),b
  2919  00170C  0E00               	movlw	0
  2920  00170E  0100               	movlb	0	; () banked
  2921  001710  0100               	movlb	0	; () banked
  2922  001712  6F90               	movwf	init_queue@i& (0+255),b
  2923  001714  0100               	movlb	0	; () banked
  2924  001716  518F               	movf	??_init_queue& (0+255),w,b
  2925                           
  2926                           ; BSR set to: 0
  2927  001718  0E04               	movlw	4
  2928  00171A  0100               	movlb	0	; () banked
  2929  00171C  0100               	movlb	0	; () banked
  2930  00171E  6590               	cpfsgt	init_queue@i& (0+255),b
  2931  001720  D001               	goto	l3203
  2932  001722  0012               	return	
  2933  001724                     l3203:
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;messages.c: 20: qptr->queue[i].full = 0;
  2937  001724  0100               	movlb	0	; () banked
  2938  001726  0100               	movlb	0	; () banked
  2939  001728  5190               	movf	init_queue@i& (0+255),w,b
  2940  00172A  0D0D               	mullw	13
  2941  00172C  50F3               	movf	prodl,w,c
  2942  00172E  0100               	movlb	0	; () banked
  2943  001730  0100               	movlb	0	; () banked
  2944  001732  258D               	addwf	init_queue@qptr& (0+255),w,b
  2945  001734  6ED9               	movwf	fsr2l,c
  2946  001736  50F4               	movf	prodh,w,c
  2947  001738  0100               	movlb	0	; () banked
  2948  00173A  0100               	movlb	0	; () banked
  2949  00173C  218E               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2950  00173E  6EDA               	movwf	fsr2h,c
  2951  001740  0E00               	movlw	0
  2952  001742  6EDF               	movwf	indf2,c
  2953                           
  2954                           ; BSR set to: 0
  2955  001744  0100               	movlb	0	; () banked
  2956  001746  0100               	movlb	0	; () banked
  2957  001748  2B90               	incf	init_queue@i& (0+255),f,b
  2958                           
  2959                           ; BSR set to: 0
  2960  00174A  0E04               	movlw	4
  2961  00174C  0100               	movlb	0	; () banked
  2962  00174E  0100               	movlb	0	; () banked
  2963  001750  6590               	cpfsgt	init_queue@i& (0+255),b
  2964  001752  D7E8               	goto	l3203
  2965  001754  0012               	return	
  2966  001756                     __end_of_init_queue:
  2967                           	opt stack 0
  2968                           tblptru	equ	0xFF8
  2969                           tblptrh	equ	0xFF7
  2970                           tblptrl	equ	0xFF6
  2971                           tablat	equ	0xFF5
  2972                           prodh	equ	0xFF4
  2973                           prodl	equ	0xFF3
  2974                           intcon2	equ	0xFF1
  2975                           postinc0	equ	0xFEE
  2976                           wreg	equ	0xFE8
  2977                           indf1	equ	0xFE7
  2978                           postinc1	equ	0xFE6
  2979                           postdec1	equ	0xFE5
  2980                           fsr1h	equ	0xFE2
  2981                           fsr1l	equ	0xFE1
  2982                           indf2	equ	0xFDF
  2983                           postinc2	equ	0xFDE
  2984                           postdec2	equ	0xFDD
  2985                           fsr2h	equ	0xFDA
  2986                           fsr2l	equ	0xFD9
  2987                           status	equ	0xFD8
  2988                           
  2989 ;; *************** function _init_i2c *****************
  2990 ;; Defined at:
  2991 ;;		line 441 in file "../src/my_i2c.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  ic              2   45[BANK0 ] PTR struct __i2c_comm
  2994 ;;		 -> main@ic(29), 
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;		None               void
  2999 ;; Registers used:
  3000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3010 ;;Total ram usage:        2 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:   11
  3013 ;; This function calls:
  3014 ;;		Nothing
  3015 ;; This function is called by:
  3016 ;;		_main
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text7
  3021  00183C                     __ptext7:
  3022                           	opt stack 0
  3023  00183C                     _init_i2c:
  3024                           	opt stack 19
  3025                           
  3026                           ;my_i2c.c: 442: ic_ptr = ic;
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;incstack = 0
  3030  00183C  0100               	movlb	0	; () banked
  3031  00183E  0100               	movlb	0	; () banked
  3032  001840  C08E  F0C9         	movff	init_i2c@ic+1,_ic_ptr+1
  3033  001844  0100               	movlb	0	; () banked
  3034  001846  0100               	movlb	0	; () banked
  3035  001848  C08D  F0C8         	movff	init_i2c@ic,_ic_ptr
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;my_i2c.c: 443: ic_ptr->buflen = 0;
  3039  00184C  0100               	movlb	0	; () banked
  3040  00184E  EE20 F00A          	lfsr	2,10
  3041  001852  0100               	movlb	0	; () banked
  3042  001854  51C8               	movf	_ic_ptr& (0+255),w,b
  3043  001856  26D9               	addwf	fsr2l,f,c
  3044  001858  0100               	movlb	0	; () banked
  3045  00185A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3046  00185C  22DA               	addwfc	fsr2h,f,c
  3047  00185E  0E00               	movlw	0
  3048  001860  6EDF               	movwf	indf2,c
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;my_i2c.c: 444: ic_ptr->event_count = 0;
  3052  001862  0100               	movlb	0	; () banked
  3053  001864  EE20 F00C          	lfsr	2,12
  3054  001868  0100               	movlb	0	; () banked
  3055  00186A  51C8               	movf	_ic_ptr& (0+255),w,b
  3056  00186C  26D9               	addwf	fsr2l,f,c
  3057  00186E  0100               	movlb	0	; () banked
  3058  001870  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3059  001872  22DA               	addwfc	fsr2h,f,c
  3060  001874  0E00               	movlw	0
  3061  001876  6EDF               	movwf	indf2,c
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;my_i2c.c: 445: ic_ptr->status = 0x5;
  3065  001878  0100               	movlb	0	; () banked
  3066  00187A  EE20 F00D          	lfsr	2,13
  3067  00187E  0100               	movlb	0	; () banked
  3068  001880  51C8               	movf	_ic_ptr& (0+255),w,b
  3069  001882  26D9               	addwf	fsr2l,f,c
  3070  001884  0100               	movlb	0	; () banked
  3071  001886  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3072  001888  22DA               	addwfc	fsr2h,f,c
  3073  00188A  0E05               	movlw	5
  3074  00188C  6EDF               	movwf	indf2,c
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;my_i2c.c: 446: ic_ptr->error_count = 0;
  3078  00188E  0100               	movlb	0	; () banked
  3079  001890  EE20 F00F          	lfsr	2,15
  3080  001894  0100               	movlb	0	; () banked
  3081  001896  51C8               	movf	_ic_ptr& (0+255),w,b
  3082  001898  26D9               	addwf	fsr2l,f,c
  3083  00189A  0100               	movlb	0	; () banked
  3084  00189C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3085  00189E  22DA               	addwfc	fsr2h,f,c
  3086  0018A0  0E00               	movlw	0
  3087  0018A2  6EDF               	movwf	indf2,c
  3088                           
  3089                           ; BSR set to: 0
  3090  0018A4  0012               	return	
  3091  0018A6                     __end_of_init_i2c:
  3092                           	opt stack 0
  3093                           tblptru	equ	0xFF8
  3094                           tblptrh	equ	0xFF7
  3095                           tblptrl	equ	0xFF6
  3096                           tablat	equ	0xFF5
  3097                           prodh	equ	0xFF4
  3098                           prodl	equ	0xFF3
  3099                           intcon2	equ	0xFF1
  3100                           postinc0	equ	0xFEE
  3101                           wreg	equ	0xFE8
  3102                           indf1	equ	0xFE7
  3103                           postinc1	equ	0xFE6
  3104                           postdec1	equ	0xFE5
  3105                           fsr1h	equ	0xFE2
  3106                           fsr1l	equ	0xFE1
  3107                           indf2	equ	0xFDF
  3108                           postinc2	equ	0xFDE
  3109                           postdec2	equ	0xFDD
  3110                           fsr2h	equ	0xFDA
  3111                           fsr2l	equ	0xFD9
  3112                           status	equ	0xFD8
  3113                           
  3114 ;; *************** function _i2c_master_send *****************
  3115 ;; Defined at:
  3116 ;;		line 44 in file "../src/my_i2c.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  sendlength      1    wreg     unsigned char 
  3119 ;;  recvlength      1   45[BANK0 ] unsigned char 
  3120 ;;  msg             2   46[BANK0 ] PTR unsigned char 
  3121 ;;		 -> main@sensorMsg(1), main@correct(6), main@stop(6), main@msgbuffer(11), 
  3122 ;;  slave_addr      1   48[BANK0 ] unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  sendlength      1   51[BANK0 ] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      unsigned char 
  3127 ;; Registers used:
  3128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3134 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3136 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3137 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3138 ;;Total ram usage:        7 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:   11
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_main
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text8
  3149  000D6E                     __ptext8:
  3150                           	opt stack 0
  3151  000D6E                     _i2c_master_send:
  3152                           	opt stack 19
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;incstack = 0
  3156                           ;i2c_master_send@sendlength stored from wreg
  3157  000D6E  CFE8 F093          	movff	wreg,i2c_master_send@sendlength
  3158                           
  3159                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  3160  000D72  0100               	movlb	0	; () banked
  3161  000D74  EE20 F01A          	lfsr	2,26
  3162  000D78  0100               	movlb	0	; () banked
  3163  000D7A  51C8               	movf	_ic_ptr& (0+255),w,b
  3164  000D7C  26D9               	addwf	fsr2l,f,c
  3165  000D7E  0100               	movlb	0	; () banked
  3166  000D80  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3167  000D82  22DA               	addwfc	fsr2h,f,c
  3168  000D84  0E00               	movlw	0
  3169  000D86  6EDF               	movwf	indf2,c
  3170  000D88  D042               	goto	l3183
  3171  000D8A                     l3179:
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  3175  000D8A  0100               	movlb	0	; () banked
  3176  000D8C  EE20 F01A          	lfsr	2,26
  3177  000D90  0100               	movlb	0	; () banked
  3178  000D92  51C8               	movf	_ic_ptr& (0+255),w,b
  3179  000D94  26D9               	addwf	fsr2l,f,c
  3180  000D96  0100               	movlb	0	; () banked
  3181  000D98  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3182  000D9A  22DA               	addwfc	fsr2h,f,c
  3183  000D9C  50DF               	movf	indf2,w,c
  3184  000D9E  0100               	movlb	0	; () banked
  3185  000DA0  6F91               	movwf	??_i2c_master_send& (0+255),b
  3186  000DA2  0100               	movlb	0	; () banked
  3187  000DA4  5191               	movf	??_i2c_master_send& (0+255),w,b
  3188  000DA6  0D01               	mullw	1
  3189  000DA8  50F3               	movf	prodl,w,c
  3190  000DAA  0100               	movlb	0	; () banked
  3191  000DAC  0100               	movlb	0	; () banked
  3192  000DAE  258E               	addwf	i2c_master_send@msg& (0+255),w,b
  3193  000DB0  6ED9               	movwf	fsr2l,c
  3194  000DB2  50F4               	movf	prodh,w,c
  3195  000DB4  0100               	movlb	0	; () banked
  3196  000DB6  0100               	movlb	0	; () banked
  3197  000DB8  218F               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  3198  000DBA  6EDA               	movwf	fsr2h,c
  3199  000DBC  0100               	movlb	0	; () banked
  3200  000DBE  EE10 F01A          	lfsr	1,26
  3201  000DC2  0100               	movlb	0	; () banked
  3202  000DC4  51C8               	movf	_ic_ptr& (0+255),w,b
  3203  000DC6  26E1               	addwf	fsr1l,f,c
  3204  000DC8  0100               	movlb	0	; () banked
  3205  000DCA  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3206  000DCC  22E2               	addwfc	fsr1h,f,c
  3207  000DCE  50E7               	movf	indf1,w,c
  3208  000DD0  0100               	movlb	0	; () banked
  3209  000DD2  6F92               	movwf	(??_i2c_master_send+1)& (0+255),b
  3210  000DD4  0100               	movlb	0	; () banked
  3211  000DD6  5192               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3212  000DD8  0D01               	mullw	1
  3213  000DDA  0E10               	movlw	16
  3214  000DDC  26F3               	addwf	prodl,f,c
  3215  000DDE  0E00               	movlw	0
  3216  000DE0  22F4               	addwfc	prodh,f,c
  3217  000DE2  50F3               	movf	prodl,w,c
  3218  000DE4  0100               	movlb	0	; () banked
  3219  000DE6  0100               	movlb	0	; () banked
  3220  000DE8  25C8               	addwf	_ic_ptr& (0+255),w,b
  3221  000DEA  6EE1               	movwf	fsr1l,c
  3222  000DEC  50F4               	movf	prodh,w,c
  3223  000DEE  0100               	movlb	0	; () banked
  3224  000DF0  0100               	movlb	0	; () banked
  3225  000DF2  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3226  000DF4  6EE2               	movwf	fsr1h,c
  3227  000DF6  CFDF FFE7          	movff	indf2,indf1
  3228                           
  3229                           ; BSR set to: 0
  3230  000DFA  0100               	movlb	0	; () banked
  3231  000DFC  EE20 F01A          	lfsr	2,26
  3232  000E00  0100               	movlb	0	; () banked
  3233  000E02  51C8               	movf	_ic_ptr& (0+255),w,b
  3234  000E04  26D9               	addwf	fsr2l,f,c
  3235  000E06  0100               	movlb	0	; () banked
  3236  000E08  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3237  000E0A  22DA               	addwfc	fsr2h,f,c
  3238  000E0C  2ADF               	incf	indf2,f,c
  3239  000E0E                     l3183:
  3240                           
  3241                           ; BSR set to: 0
  3242  000E0E  0100               	movlb	0	; () banked
  3243  000E10  EE20 F01A          	lfsr	2,26
  3244  000E14  0100               	movlb	0	; () banked
  3245  000E16  51C8               	movf	_ic_ptr& (0+255),w,b
  3246  000E18  26D9               	addwf	fsr2l,f,c
  3247  000E1A  0100               	movlb	0	; () banked
  3248  000E1C  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3249  000E1E  22DA               	addwfc	fsr2h,f,c
  3250  000E20  50DF               	movf	indf2,w,c
  3251  000E22  0100               	movlb	0	; () banked
  3252  000E24  6F91               	movwf	??_i2c_master_send& (0+255),b
  3253  000E26  0100               	movlb	0	; () banked
  3254  000E28  0100               	movlb	0	; () banked
  3255  000E2A  5193               	movf	i2c_master_send@sendlength& (0+255),w,b
  3256  000E2C  0100               	movlb	0	; () banked
  3257  000E2E  5D91               	subwf	??_i2c_master_send& (0+255),w,b
  3258  000E30  A0D8               	btfss	status,0,c
  3259  000E32  D7AB               	goto	l3179
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;my_i2c.c: 48: }
  3263                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  3264                           
  3265                           ; BSR set to: 0
  3266  000E34  0100               	movlb	0	; () banked
  3267  000E36  EE20 F01C          	lfsr	2,28
  3268  000E3A  0100               	movlb	0	; () banked
  3269  000E3C  51C8               	movf	_ic_ptr& (0+255),w,b
  3270  000E3E  26D9               	addwf	fsr2l,f,c
  3271  000E40  0100               	movlb	0	; () banked
  3272  000E42  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3273  000E44  22DA               	addwfc	fsr2h,f,c
  3274  000E46  0100               	movlb	0	; () banked
  3275  000E48  C090  FFDF         	movff	i2c_master_send@slave_addr,indf2
  3276                           
  3277                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  3278  000E4C  0100               	movlb	0	; () banked
  3279  000E4E  EE20 F01A          	lfsr	2,26
  3280  000E52  0100               	movlb	0	; () banked
  3281  000E54  51C8               	movf	_ic_ptr& (0+255),w,b
  3282  000E56  26D9               	addwf	fsr2l,f,c
  3283  000E58  0100               	movlb	0	; () banked
  3284  000E5A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3285  000E5C  22DA               	addwfc	fsr2h,f,c
  3286  000E5E  0100               	movlb	0	; () banked
  3287  000E60  C093  FFDF         	movff	i2c_master_send@sendlength,indf2
  3288                           
  3289                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  3290  000E64  0100               	movlb	0	; () banked
  3291  000E66  EE20 F00A          	lfsr	2,10
  3292  000E6A  0100               	movlb	0	; () banked
  3293  000E6C  51C8               	movf	_ic_ptr& (0+255),w,b
  3294  000E6E  26D9               	addwf	fsr2l,f,c
  3295  000E70  0100               	movlb	0	; () banked
  3296  000E72  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3297  000E74  22DA               	addwfc	fsr2h,f,c
  3298  000E76  0100               	movlb	0	; () banked
  3299  000E78  C08D  FFDF         	movff	i2c_master_send@recvlength,indf2
  3300                           
  3301                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  3302  000E7C  0100               	movlb	0	; () banked
  3303  000E7E  EE20 F00D          	lfsr	2,13
  3304  000E82  0100               	movlb	0	; () banked
  3305  000E84  51C8               	movf	_ic_ptr& (0+255),w,b
  3306  000E86  26D9               	addwf	fsr2l,f,c
  3307  000E88  0100               	movlb	0	; () banked
  3308  000E8A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3309  000E8C  22DA               	addwfc	fsr2h,f,c
  3310  000E8E  0E0A               	movlw	10
  3311  000E90  6EDF               	movwf	indf2,c
  3312                           
  3313                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  3314  000E92  0100               	movlb	0	; () banked
  3315  000E94  EE20 F01B          	lfsr	2,27
  3316  000E98  0100               	movlb	0	; () banked
  3317  000E9A  51C8               	movf	_ic_ptr& (0+255),w,b
  3318  000E9C  26D9               	addwf	fsr2l,f,c
  3319  000E9E  0100               	movlb	0	; () banked
  3320  000EA0  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  3321  000EA2  22DA               	addwfc	fsr2h,f,c
  3322  000EA4  0E00               	movlw	0
  3323  000EA6  6EDF               	movwf	indf2,c
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  3327  000EA8  80C5               	bsf	4037,0,c	;volatile
  3328  000EAA  0012               	return	
  3329  000EAC                     __end_of_i2c_master_send:
  3330                           	opt stack 0
  3331                           tblptru	equ	0xFF8
  3332                           tblptrh	equ	0xFF7
  3333                           tblptrl	equ	0xFF6
  3334                           tablat	equ	0xFF5
  3335                           prodh	equ	0xFF4
  3336                           prodl	equ	0xFF3
  3337                           intcon2	equ	0xFF1
  3338                           postinc0	equ	0xFEE
  3339                           wreg	equ	0xFE8
  3340                           indf1	equ	0xFE7
  3341                           postinc1	equ	0xFE6
  3342                           postdec1	equ	0xFE5
  3343                           fsr1h	equ	0xFE2
  3344                           fsr1l	equ	0xFE1
  3345                           indf2	equ	0xFDF
  3346                           postinc2	equ	0xFDE
  3347                           postdec2	equ	0xFDD
  3348                           fsr2h	equ	0xFDA
  3349                           fsr2l	equ	0xFD9
  3350                           status	equ	0xFD8
  3351                           
  3352 ;; *************** function _i2c_configure_master *****************
  3353 ;; Defined at:
  3354 ;;		line 15 in file "../src/my_i2c.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;		None               void
  3361 ;; Registers used:
  3362 ;;		wreg, status,2
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3372 ;;Total ram usage:        0 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:   11
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_main
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text9
  3383  001D98                     __ptext9:
  3384                           	opt stack 0
  3385  001D98                     _i2c_configure_master:
  3386                           	opt stack 19
  3387                           
  3388                           ;my_i2c.c: 18: SSPSTAT = 0x0;
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;incstack = 0
  3392  001D98  0E00               	movlw	0
  3393  001D9A  6EC7               	movwf	4039,c	;volatile
  3394                           
  3395                           ;my_i2c.c: 19: SSPCON1 = 0x0;
  3396  001D9C  0E00               	movlw	0
  3397  001D9E  6EC6               	movwf	4038,c	;volatile
  3398                           
  3399                           ;my_i2c.c: 20: SSPCON2 = 0x0;
  3400  001DA0  0E00               	movlw	0
  3401  001DA2  6EC5               	movwf	4037,c	;volatile
  3402                           
  3403                           ;my_i2c.c: 22: TRISCbits.TRISC3 = 1;
  3404  001DA4  8694               	bsf	3988,3,c	;volatile
  3405                           
  3406                           ;my_i2c.c: 23: TRISCbits.TRISC4 = 1;
  3407  001DA6  8894               	bsf	3988,4,c	;volatile
  3408                           
  3409                           ;my_i2c.c: 24: SSPADD = 29;
  3410  001DA8  0E1D               	movlw	29
  3411  001DAA  6EC8               	movwf	4040,c	;volatile
  3412                           
  3413                           ;my_i2c.c: 27: SSPCON1bits.SSPM = 0x8;
  3414  001DAC  50C6               	movf	4038,w,c	;volatile
  3415  001DAE  0BF0               	andlw	-16
  3416  001DB0  0908               	iorlw	8
  3417  001DB2  6EC6               	movwf	4038,c	;volatile
  3418                           
  3419                           ;my_i2c.c: 28: SSPCON1bits.SSPEN = 1;
  3420  001DB4  8AC6               	bsf	4038,5,c	;volatile
  3421  001DB6  0012               	return	
  3422  001DB8                     __end_of_i2c_configure_master:
  3423                           	opt stack 0
  3424                           tblptru	equ	0xFF8
  3425                           tblptrh	equ	0xFF7
  3426                           tblptrl	equ	0xFF6
  3427                           tablat	equ	0xFF5
  3428                           prodh	equ	0xFF4
  3429                           prodl	equ	0xFF3
  3430                           intcon2	equ	0xFF1
  3431                           postinc0	equ	0xFEE
  3432                           wreg	equ	0xFE8
  3433                           indf1	equ	0xFE7
  3434                           postinc1	equ	0xFE6
  3435                           postdec1	equ	0xFE5
  3436                           fsr1h	equ	0xFE2
  3437                           fsr1l	equ	0xFE1
  3438                           indf2	equ	0xFDF
  3439                           postinc2	equ	0xFDE
  3440                           postdec2	equ	0xFDD
  3441                           fsr2h	equ	0xFDA
  3442                           fsr2l	equ	0xFD9
  3443                           status	equ	0xFD8
  3444                           
  3445 ;; *************** function _enable_interrupts *****************
  3446 ;; Defined at:
  3447 ;;		line 15 in file "../src/interrupts.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;		None               void
  3454 ;; Registers used:
  3455 ;;		None
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3465 ;;Total ram usage:        0 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:   11
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text10
  3476  001ECA                     __ptext10:
  3477                           	opt stack 0
  3478  001ECA                     _enable_interrupts:
  3479                           	opt stack 19
  3480                           
  3481                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3482                           
  3483                           ;incstack = 0
  3484  001ECA  8ED0               	bsf	4048,7,c	;volatile
  3485                           
  3486                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3487  001ECC  8EF2               	bsf	intcon,7,c	;volatile
  3488                           
  3489                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3490  001ECE  8CF2               	bsf	intcon,6,c	;volatile
  3491  001ED0  0012               	return	
  3492  001ED2                     __end_of_enable_interrupts:
  3493                           	opt stack 0
  3494                           tblptru	equ	0xFF8
  3495                           tblptrh	equ	0xFF7
  3496                           tblptrl	equ	0xFF6
  3497                           tablat	equ	0xFF5
  3498                           prodh	equ	0xFF4
  3499                           prodl	equ	0xFF3
  3500                           intcon	equ	0xFF2
  3501                           intcon2	equ	0xFF1
  3502                           postinc0	equ	0xFEE
  3503                           wreg	equ	0xFE8
  3504                           indf1	equ	0xFE7
  3505                           postinc1	equ	0xFE6
  3506                           postdec1	equ	0xFE5
  3507                           fsr1h	equ	0xFE2
  3508                           fsr1l	equ	0xFE1
  3509                           indf2	equ	0xFDF
  3510                           postinc2	equ	0xFDE
  3511                           postdec2	equ	0xFDD
  3512                           fsr2h	equ	0xFDA
  3513                           fsr2l	equ	0xFD9
  3514                           status	equ	0xFD8
  3515                           
  3516 ;; *************** function _block_on_To_msgqueues *****************
  3517 ;; Defined at:
  3518 ;;		line 258 in file "../src/messages.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;		None               void
  3525 ;; Registers used:
  3526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3534 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3535 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3536 ;;Total ram usage:        1 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:   14
  3539 ;; This function calls:
  3540 ;;		_Delay1KTCYx
  3541 ;;		_check_msg
  3542 ;;		_in_main
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text11
  3549  0015E4                     __ptext11:
  3550                           	opt stack 0
  3551  0015E4                     _block_on_To_msgqueues:
  3552                           	opt stack 16
  3553                           
  3554                           ;messages.c: 259: if (!in_main()) {
  3555                           
  3556                           ;incstack = 0
  3557  0015E4  EC92  F00D         	call	_in_main	;wreg free
  3558  0015E8  0100               	movlb	0	; () banked
  3559  0015EA  0100               	movlb	0	; () banked
  3560  0015EC  5192               	movf	(?_in_main+1)& (0+255),w,b
  3561  0015EE  0100               	movlb	0	; () banked
  3562  0015F0  1191               	iorwf	?_in_main& (0+255),w,b
  3563  0015F2  B4D8               	btfsc	status,2,c
  3564  0015F4  0012               	return	
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;messages.c: 261: }
  3568                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3569                           
  3570                           ; BSR set to: 0
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;messages.c: 260: return;
  3574  0015F6  0100               	movlb	0	; () banked
  3575  0015F8  6F93               	movwf	??_block_on_To_msgqueues& (0+255),b
  3576  0015FA  0E01               	movlw	1
  3577  0015FC  6E3D               	movwf	_MQ_Main_Willing_to_block,c
  3578  0015FE  0100               	movlb	0	; () banked
  3579  001600  5193               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3580  001602                     l3145:
  3581                           
  3582                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3583  001602  0101               	movlb	1	; () banked
  3584  001604  0E01               	movlw	high _ToMainHigh_MQ
  3585  001606  0100               	movlb	0	; () banked
  3586  001608  0100               	movlb	0	; () banked
  3587  00160A  6F8E               	movwf	(check_msg@qptr+1)& (0+255),b
  3588  00160C  0101               	movlb	1	; () banked
  3589  00160E  0E00               	movlw	low _ToMainHigh_MQ
  3590  001610  0100               	movlb	0	; () banked
  3591  001612  0100               	movlb	0	; () banked
  3592  001614  6F8D               	movwf	check_msg@qptr& (0+255),b
  3593  001616  EC53  F00E         	call	_check_msg	;wreg free
  3594  00161A  0900               	iorlw	0
  3595  00161C  B4D8               	btfsc	status,2,c
  3596  00161E  D007               	goto	l3151
  3597                           
  3598                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3599  001620  0100               	movlb	0	; () banked
  3600  001622  6F93               	movwf	??_block_on_To_msgqueues& (0+255),b
  3601  001624  0E00               	movlw	0
  3602  001626  6E3D               	movwf	_MQ_Main_Willing_to_block,c
  3603  001628  0100               	movlb	0	; () banked
  3604  00162A  5193               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3605  00162C  0012               	return	
  3606  00162E                     l3151:
  3607                           
  3608                           ;messages.c: 271: }
  3609                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3610  00162E  0101               	movlb	1	; () banked
  3611  001630  0E01               	movlw	high _ToMainLow_MQ
  3612  001632  0100               	movlb	0	; () banked
  3613  001634  0100               	movlb	0	; () banked
  3614  001636  6F8E               	movwf	(check_msg@qptr+1)& (0+255),b
  3615  001638  0101               	movlb	1	; () banked
  3616  00163A  0E43               	movlw	low _ToMainLow_MQ
  3617  00163C  0100               	movlb	0	; () banked
  3618  00163E  0100               	movlb	0	; () banked
  3619  001640  6F8D               	movwf	check_msg@qptr& (0+255),b
  3620  001642  EC53  F00E         	call	_check_msg	;wreg free
  3621  001646  0900               	iorlw	0
  3622  001648  B4D8               	btfsc	status,2,c
  3623  00164A  D007               	goto	l3157
  3624                           
  3625                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3626  00164C  0100               	movlb	0	; () banked
  3627  00164E  6F93               	movwf	??_block_on_To_msgqueues& (0+255),b
  3628  001650  0E00               	movlw	0
  3629  001652  6E3D               	movwf	_MQ_Main_Willing_to_block,c
  3630  001654  0100               	movlb	0	; () banked
  3631  001656  5193               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3632  001658  0012               	return	
  3633  00165A                     l3157:
  3634                           
  3635                           ;messages.c: 278: }
  3636                           ;messages.c: 279: Delay1KTCYx(10);
  3637  00165A  0E0A               	movlw	10
  3638  00165C  EC0A  F00F         	call	_Delay1KTCYx
  3639  001660  D7D0               	goto	l3145
  3640  001662                     __end_of_block_on_To_msgqueues:
  3641                           	opt stack 0
  3642                           tblptru	equ	0xFF8
  3643                           tblptrh	equ	0xFF7
  3644                           tblptrl	equ	0xFF6
  3645                           tablat	equ	0xFF5
  3646                           prodh	equ	0xFF4
  3647                           prodl	equ	0xFF3
  3648                           intcon	equ	0xFF2
  3649                           intcon2	equ	0xFF1
  3650                           postinc0	equ	0xFEE
  3651                           wreg	equ	0xFE8
  3652                           indf1	equ	0xFE7
  3653                           postinc1	equ	0xFE6
  3654                           postdec1	equ	0xFE5
  3655                           fsr1h	equ	0xFE2
  3656                           fsr1l	equ	0xFE1
  3657                           indf2	equ	0xFDF
  3658                           postinc2	equ	0xFDE
  3659                           postdec2	equ	0xFDD
  3660                           fsr2h	equ	0xFDA
  3661                           fsr2l	equ	0xFD9
  3662                           status	equ	0xFD8
  3663                           
  3664 ;; *************** function _in_main *****************
  3665 ;; Defined at:
  3666 ;;		line 41 in file "../src/interrupts.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;		None
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  2   49[BANK0 ] int 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3683 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3684 ;;Total ram usage:        2 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:   13
  3687 ;; This function calls:
  3688 ;;		_in_high_int
  3689 ;;		_in_low_int
  3690 ;; This function is called by:
  3691 ;;		_block_on_To_msgqueues
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text12
  3696  001B24                     __ptext12:
  3697                           	opt stack 0
  3698  001B24                     _in_main:
  3699                           	opt stack 16
  3700                           
  3701                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3702                           
  3703                           ;incstack = 0
  3704  001B24  EC4C  F00D         	call	_in_low_int	;wreg free
  3705  001B28  0100               	movlb	0	; () banked
  3706  001B2A  0100               	movlb	0	; () banked
  3707  001B2C  5190               	movf	(?_in_low_int+1)& (0+255),w,b
  3708  001B2E  0100               	movlb	0	; () banked
  3709  001B30  118F               	iorwf	?_in_low_int& (0+255),w,b
  3710  001B32  A4D8               	btfss	status,2,c
  3711  001B34  D011               	goto	l2697
  3712                           
  3713                           ; BSR set to: 0
  3714  001B36  EC32  F00F         	call	_in_high_int	;wreg free
  3715  001B3A  0100               	movlb	0	; () banked
  3716  001B3C  0100               	movlb	0	; () banked
  3717  001B3E  518E               	movf	(?_in_high_int+1)& (0+255),w,b
  3718  001B40  0100               	movlb	0	; () banked
  3719  001B42  118D               	iorwf	?_in_high_int& (0+255),w,b
  3720  001B44  A4D8               	btfss	status,2,c
  3721  001B46  D008               	goto	l2697
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;interrupts.c: 43: return (1);
  3725  001B48  0E00               	movlw	0
  3726  001B4A  0100               	movlb	0	; () banked
  3727  001B4C  0100               	movlb	0	; () banked
  3728  001B4E  6F92               	movwf	(?_in_main+1)& (0+255),b
  3729  001B50  0E01               	movlw	1
  3730  001B52  0100               	movlb	0	; () banked
  3731  001B54  6F91               	movwf	?_in_main& (0+255),b
  3732  001B56  0012               	return	
  3733  001B58                     l2697:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;interrupts.c: 45: return (0);
  3737  001B58  0E00               	movlw	0
  3738  001B5A  0100               	movlb	0	; () banked
  3739  001B5C  0100               	movlb	0	; () banked
  3740  001B5E  6F92               	movwf	(?_in_main+1)& (0+255),b
  3741  001B60  0E00               	movlw	0
  3742  001B62  0100               	movlb	0	; () banked
  3743  001B64  6F91               	movwf	?_in_main& (0+255),b
  3744  001B66  0012               	return	
  3745  001B68                     __end_of_in_main:
  3746                           	opt stack 0
  3747                           tblptru	equ	0xFF8
  3748                           tblptrh	equ	0xFF7
  3749                           tblptrl	equ	0xFF6
  3750                           tablat	equ	0xFF5
  3751                           prodh	equ	0xFF4
  3752                           prodl	equ	0xFF3
  3753                           intcon	equ	0xFF2
  3754                           intcon2	equ	0xFF1
  3755                           postinc0	equ	0xFEE
  3756                           wreg	equ	0xFE8
  3757                           indf1	equ	0xFE7
  3758                           postinc1	equ	0xFE6
  3759                           postdec1	equ	0xFE5
  3760                           fsr1h	equ	0xFE2
  3761                           fsr1l	equ	0xFE1
  3762                           indf2	equ	0xFDF
  3763                           postinc2	equ	0xFDE
  3764                           postdec2	equ	0xFDD
  3765                           fsr2h	equ	0xFDA
  3766                           fsr2l	equ	0xFD9
  3767                           status	equ	0xFD8
  3768                           
  3769 ;; *************** function _in_low_int *****************
  3770 ;; Defined at:
  3771 ;;		line 31 in file "../src/interrupts.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;		None
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  2   47[BANK0 ] int 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0, cstack
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3785 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3788 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3789 ;;Total ram usage:        2 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:   12
  3792 ;; This function calls:
  3793 ;;		_in_high_int
  3794 ;; This function is called by:
  3795 ;;		_in_main
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text13
  3800  001A98                     __ptext13:
  3801                           	opt stack 0
  3802  001A98                     _in_low_int:
  3803                           	opt stack 16
  3804                           
  3805                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;incstack = 0
  3809  001A98  ACF2               	btfss	intcon,6,c	;volatile
  3810  001A9A  D008               	goto	l2675
  3811                           
  3812                           ;interrupts.c: 33: return (0);
  3813  001A9C  0E00               	movlw	0
  3814  001A9E  0100               	movlb	0	; () banked
  3815  001AA0  0100               	movlb	0	; () banked
  3816  001AA2  6F90               	movwf	(?_in_low_int+1)& (0+255),b
  3817  001AA4  0E00               	movlw	0
  3818  001AA6  0100               	movlb	0	; () banked
  3819  001AA8  6F8F               	movwf	?_in_low_int& (0+255),b
  3820  001AAA  0012               	return	
  3821  001AAC                     l2675:
  3822  001AAC  EC32  F00F         	call	_in_high_int	;wreg free
  3823  001AB0  0100               	movlb	0	; () banked
  3824  001AB2  0100               	movlb	0	; () banked
  3825  001AB4  518E               	movf	(?_in_high_int+1)& (0+255),w,b
  3826  001AB6  0100               	movlb	0	; () banked
  3827  001AB8  118D               	iorwf	?_in_high_int& (0+255),w,b
  3828  001ABA  B4D8               	btfsc	status,2,c
  3829  001ABC  D008               	goto	l2683
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;interrupts.c: 35: return (0);
  3833  001ABE  0E00               	movlw	0
  3834  001AC0  0100               	movlb	0	; () banked
  3835  001AC2  0100               	movlb	0	; () banked
  3836  001AC4  6F90               	movwf	(?_in_low_int+1)& (0+255),b
  3837  001AC6  0E00               	movlw	0
  3838  001AC8  0100               	movlb	0	; () banked
  3839  001ACA  6F8F               	movwf	?_in_low_int& (0+255),b
  3840  001ACC  0012               	return	
  3841  001ACE                     l2683:
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;interrupts.c: 37: return (1);
  3845  001ACE  0E00               	movlw	0
  3846  001AD0  0100               	movlb	0	; () banked
  3847  001AD2  0100               	movlb	0	; () banked
  3848  001AD4  6F90               	movwf	(?_in_low_int+1)& (0+255),b
  3849  001AD6  0E01               	movlw	1
  3850  001AD8  0100               	movlb	0	; () banked
  3851  001ADA  6F8F               	movwf	?_in_low_int& (0+255),b
  3852  001ADC  0012               	return	
  3853  001ADE                     __end_of_in_low_int:
  3854                           	opt stack 0
  3855                           tblptru	equ	0xFF8
  3856                           tblptrh	equ	0xFF7
  3857                           tblptrl	equ	0xFF6
  3858                           tablat	equ	0xFF5
  3859                           prodh	equ	0xFF4
  3860                           prodl	equ	0xFF3
  3861                           intcon	equ	0xFF2
  3862                           intcon2	equ	0xFF1
  3863                           postinc0	equ	0xFEE
  3864                           wreg	equ	0xFE8
  3865                           indf1	equ	0xFE7
  3866                           postinc1	equ	0xFE6
  3867                           postdec1	equ	0xFE5
  3868                           fsr1h	equ	0xFE2
  3869                           fsr1l	equ	0xFE1
  3870                           indf2	equ	0xFDF
  3871                           postinc2	equ	0xFDE
  3872                           postdec2	equ	0xFDD
  3873                           fsr2h	equ	0xFDA
  3874                           fsr2l	equ	0xFD9
  3875                           status	equ	0xFD8
  3876                           
  3877 ;; *************** function _in_high_int *****************
  3878 ;; Defined at:
  3879 ;;		line 23 in file "../src/interrupts.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  2   45[BANK0 ] int 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3893 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3896 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3897 ;;Total ram usage:        2 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:   11
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_in_low_int
  3904 ;;		_in_main
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text14
  3909  001E64                     __ptext14:
  3910                           	opt stack 0
  3911  001E64                     _in_high_int:
  3912                           	opt stack 16
  3913                           
  3914                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;incstack = 0
  3918  001E64  0E00               	movlw	0
  3919  001E66  AEF2               	btfss	intcon,7,c	;volatile
  3920  001E68  0E01               	movlw	1
  3921  001E6A  0100               	movlb	0	; () banked
  3922  001E6C  0100               	movlb	0	; () banked
  3923  001E6E  6F8D               	movwf	?_in_high_int& (0+255),b
  3924  001E70  0100               	movlb	0	; () banked
  3925  001E72  6B8E               	clrf	(?_in_high_int+1)& (0+255),b
  3926  001E74  0012               	return	
  3927  001E76                     __end_of_in_high_int:
  3928                           	opt stack 0
  3929                           tblptru	equ	0xFF8
  3930                           tblptrh	equ	0xFF7
  3931                           tblptrl	equ	0xFF6
  3932                           tablat	equ	0xFF5
  3933                           prodh	equ	0xFF4
  3934                           prodl	equ	0xFF3
  3935                           intcon	equ	0xFF2
  3936                           intcon2	equ	0xFF1
  3937                           postinc0	equ	0xFEE
  3938                           wreg	equ	0xFE8
  3939                           indf1	equ	0xFE7
  3940                           postinc1	equ	0xFE6
  3941                           postdec1	equ	0xFE5
  3942                           fsr1h	equ	0xFE2
  3943                           fsr1l	equ	0xFE1
  3944                           indf2	equ	0xFDF
  3945                           postinc2	equ	0xFDE
  3946                           postdec2	equ	0xFDD
  3947                           fsr2h	equ	0xFDA
  3948                           fsr2l	equ	0xFD9
  3949                           status	equ	0xFD8
  3950                           
  3951 ;; *************** function _check_msg *****************
  3952 ;; Defined at:
  3953 ;;		line 222 in file "../src/messages.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  3956 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      unsigned char 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3968 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3971 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3972 ;;Total ram usage:        3 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:   11
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_block_on_To_msgqueues
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text15
  3983  001CA6                     __ptext15:
  3984                           	opt stack 0
  3985  001CA6                     _check_msg:
  3986                           	opt stack 18
  3987                           
  3988                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;incstack = 0
  3992  001CA6  0100               	movlb	0	; () banked
  3993  001CA8  EE20 F042          	lfsr	2,66
  3994  001CAC  0100               	movlb	0	; () banked
  3995  001CAE  518D               	movf	check_msg@qptr& (0+255),w,b
  3996  001CB0  26D9               	addwf	fsr2l,f,c
  3997  001CB2  0100               	movlb	0	; () banked
  3998  001CB4  518E               	movf	(check_msg@qptr+1)& (0+255),w,b
  3999  001CB6  22DA               	addwfc	fsr2h,f,c
  4000  001CB8  50DF               	movf	indf2,w,c
  4001  001CBA  0100               	movlb	0	; () banked
  4002  001CBC  6F8F               	movwf	??_check_msg& (0+255),b
  4003  001CBE  0100               	movlb	0	; () banked
  4004  001CC0  518F               	movf	??_check_msg& (0+255),w,b
  4005  001CC2  0D0D               	mullw	13
  4006  001CC4  50F3               	movf	prodl,w,c
  4007  001CC6  0100               	movlb	0	; () banked
  4008  001CC8  0100               	movlb	0	; () banked
  4009  001CCA  258D               	addwf	check_msg@qptr& (0+255),w,b
  4010  001CCC  6ED9               	movwf	fsr2l,c
  4011  001CCE  50F4               	movf	prodh,w,c
  4012  001CD0  0100               	movlb	0	; () banked
  4013  001CD2  0100               	movlb	0	; () banked
  4014  001CD4  218E               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4015  001CD6  6EDA               	movwf	fsr2h,c
  4016  001CD8  50DF               	movf	indf2,w,c
  4017  001CDA  0012               	return	
  4018  001CDC                     __end_of_check_msg:
  4019                           	opt stack 0
  4020                           tblptru	equ	0xFF8
  4021                           tblptrh	equ	0xFF7
  4022                           tblptrl	equ	0xFF6
  4023                           tablat	equ	0xFF5
  4024                           prodh	equ	0xFF4
  4025                           prodl	equ	0xFF3
  4026                           intcon	equ	0xFF2
  4027                           intcon2	equ	0xFF1
  4028                           postinc0	equ	0xFEE
  4029                           wreg	equ	0xFE8
  4030                           indf1	equ	0xFE7
  4031                           postinc1	equ	0xFE6
  4032                           postdec1	equ	0xFE5
  4033                           fsr1h	equ	0xFE2
  4034                           fsr1l	equ	0xFE1
  4035                           indf2	equ	0xFDF
  4036                           postinc2	equ	0xFDE
  4037                           postdec2	equ	0xFDD
  4038                           fsr2h	equ	0xFDA
  4039                           fsr2l	equ	0xFD9
  4040                           status	equ	0xFD8
  4041                           
  4042 ;; *************** function _Delay1KTCYx *****************
  4043 ;; Defined at:
  4044 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  unit            1    wreg     unsigned char 
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;  unit            1   45[BANK0 ] unsigned char 
  4049 ;; Return value:  Size  Location     Type
  4050 ;;		None               void
  4051 ;; Registers used:
  4052 ;;		wreg
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4059 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4061 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4062 ;;Total ram usage:        1 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:   11
  4065 ;; This function calls:
  4066 ;;		Nothing
  4067 ;; This function is called by:
  4068 ;;		_block_on_To_msgqueues
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text16
  4073  001E14                     __ptext16:
  4074                           	opt stack 0
  4075  001E14                     _Delay1KTCYx:
  4076                           	opt stack 18
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;incstack = 0
  4080                           ;Delay1KTCYx@unit stored from wreg
  4081  001E14  CFE8 F08D          	movff	wreg,Delay1KTCYx@unit
  4082  001E18                     l859:
  4083  001E18  0EFA               	movlw	250
  4084  001E1A                     u3857:
  4085  001E1A  F000               	nop	
  4086  001E1C  2EE8               	decfsz	wreg,f,c
  4087  001E1E  D7FD               	goto	u3857
  4088  001E20  0100               	movlb	0	; () banked
  4089  001E22  0100               	movlb	0	; () banked
  4090  001E24  2F8D               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4091  001E26  D7F8               	goto	l859
  4092  001E28  0012               	return	
  4093  001E2A                     __end_of_Delay1KTCYx:
  4094                           	opt stack 0
  4095                           tblptru	equ	0xFF8
  4096                           tblptrh	equ	0xFF7
  4097                           tblptrl	equ	0xFF6
  4098                           tablat	equ	0xFF5
  4099                           prodh	equ	0xFF4
  4100                           prodl	equ	0xFF3
  4101                           intcon	equ	0xFF2
  4102                           intcon2	equ	0xFF1
  4103                           postinc0	equ	0xFEE
  4104                           wreg	equ	0xFE8
  4105                           indf1	equ	0xFE7
  4106                           postinc1	equ	0xFE6
  4107                           postdec1	equ	0xFE5
  4108                           fsr1h	equ	0xFE2
  4109                           fsr1l	equ	0xFE1
  4110                           indf2	equ	0xFDF
  4111                           postinc2	equ	0xFDE
  4112                           postdec2	equ	0xFDD
  4113                           fsr2h	equ	0xFDA
  4114                           fsr2l	equ	0xFD9
  4115                           status	equ	0xFD8
  4116                           
  4117 ;; *************** function _ToMainLow_recvmsg *****************
  4118 ;; Defined at:
  4119 ;;		line 112 in file "../src/messages.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  maxlength       1    wreg     unsigned char 
  4122 ;;  msgtype         2   69[BANK0 ] PTR unsigned char 
  4123 ;;		 -> main@msgtype(1), 
  4124 ;;  data            2   71[BANK0 ] PTR void 
  4125 ;;		 -> main@msgbuffer(11), 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  maxlength       1   73[BANK0 ] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      char 
  4130 ;; Registers used:
  4131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4137 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4140 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4141 ;;Total ram usage:        5 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:   13
  4144 ;; This function calls:
  4145 ;;		_recv_msg
  4146 ;; This function is called by:
  4147 ;;		_main
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text17
  4152  001B68                     __ptext17:
  4153                           	opt stack 0
  4154  001B68                     _ToMainLow_recvmsg:
  4155                           	opt stack 17
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;incstack = 0
  4159                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4160  001B68  CFE8 F0A9          	movff	wreg,ToMainLow_recvmsg@maxlength
  4161                           
  4162                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4163  001B6C  0101               	movlb	1	; () banked
  4164  001B6E  0E01               	movlw	high _ToMainLow_MQ
  4165  001B70  0100               	movlb	0	; () banked
  4166  001B72  0100               	movlb	0	; () banked
  4167  001B74  6F98               	movwf	(recv_msg@qptr+1)& (0+255),b
  4168  001B76  0101               	movlb	1	; () banked
  4169  001B78  0E43               	movlw	low _ToMainLow_MQ
  4170  001B7A  0100               	movlb	0	; () banked
  4171  001B7C  0100               	movlb	0	; () banked
  4172  001B7E  6F97               	movwf	recv_msg@qptr& (0+255),b
  4173  001B80  C0A9  F099         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4174  001B84  0100               	movlb	0	; () banked
  4175  001B86  0100               	movlb	0	; () banked
  4176  001B88  C0A6  F09B         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4177  001B8C  0100               	movlb	0	; () banked
  4178  001B8E  0100               	movlb	0	; () banked
  4179  001B90  C0A5  F09A         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4180  001B94  0100               	movlb	0	; () banked
  4181  001B96  0100               	movlb	0	; () banked
  4182  001B98  C0A8  F09D         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4183  001B9C  0100               	movlb	0	; () banked
  4184  001B9E  0100               	movlb	0	; () banked
  4185  001BA0  C0A7  F09C         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4186  001BA4  EC08  F006         	call	_recv_msg	;wreg free
  4187  001BA8  0012               	return	
  4188  001BAA                     __end_of_ToMainLow_recvmsg:
  4189                           	opt stack 0
  4190                           tblptru	equ	0xFF8
  4191                           tblptrh	equ	0xFF7
  4192                           tblptrl	equ	0xFF6
  4193                           tablat	equ	0xFF5
  4194                           prodh	equ	0xFF4
  4195                           prodl	equ	0xFF3
  4196                           intcon	equ	0xFF2
  4197                           intcon2	equ	0xFF1
  4198                           postinc0	equ	0xFEE
  4199                           wreg	equ	0xFE8
  4200                           indf1	equ	0xFE7
  4201                           postinc1	equ	0xFE6
  4202                           postdec1	equ	0xFE5
  4203                           fsr1h	equ	0xFE2
  4204                           fsr1l	equ	0xFE1
  4205                           indf2	equ	0xFDF
  4206                           postinc2	equ	0xFDE
  4207                           postdec2	equ	0xFDD
  4208                           fsr2h	equ	0xFDA
  4209                           fsr2l	equ	0xFD9
  4210                           status	equ	0xFD8
  4211                           
  4212 ;; *************** function _ToMainHigh_recvmsg *****************
  4213 ;; Defined at:
  4214 ;;		line 135 in file "../src/messages.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  maxlength       1    wreg     unsigned char 
  4217 ;;  msgtype         2   69[BANK0 ] PTR unsigned char 
  4218 ;;		 -> main@msgtype(1), 
  4219 ;;  data            2   71[BANK0 ] PTR void 
  4220 ;;		 -> main@msgbuffer(11), 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  maxlength       1   73[BANK0 ] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      char 
  4225 ;; Registers used:
  4226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4232 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4235 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4236 ;;Total ram usage:        5 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:   13
  4239 ;; This function calls:
  4240 ;;		_recv_msg
  4241 ;; This function is called by:
  4242 ;;		_main
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text18
  4247  001BAA                     __ptext18:
  4248                           	opt stack 0
  4249  001BAA                     _ToMainHigh_recvmsg:
  4250                           	opt stack 17
  4251                           
  4252                           ;incstack = 0
  4253                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4254  001BAA  CFE8 F0A9          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4255                           
  4256                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4257  001BAE  0101               	movlb	1	; () banked
  4258  001BB0  0E01               	movlw	high _ToMainHigh_MQ
  4259  001BB2  0100               	movlb	0	; () banked
  4260  001BB4  0100               	movlb	0	; () banked
  4261  001BB6  6F98               	movwf	(recv_msg@qptr+1)& (0+255),b
  4262  001BB8  0101               	movlb	1	; () banked
  4263  001BBA  0E00               	movlw	low _ToMainHigh_MQ
  4264  001BBC  0100               	movlb	0	; () banked
  4265  001BBE  0100               	movlb	0	; () banked
  4266  001BC0  6F97               	movwf	recv_msg@qptr& (0+255),b
  4267  001BC2  C0A9  F099         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4268  001BC6  0100               	movlb	0	; () banked
  4269  001BC8  0100               	movlb	0	; () banked
  4270  001BCA  C0A6  F09B         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4271  001BCE  0100               	movlb	0	; () banked
  4272  001BD0  0100               	movlb	0	; () banked
  4273  001BD2  C0A5  F09A         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4274  001BD6  0100               	movlb	0	; () banked
  4275  001BD8  0100               	movlb	0	; () banked
  4276  001BDA  C0A8  F09D         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4277  001BDE  0100               	movlb	0	; () banked
  4278  001BE0  0100               	movlb	0	; () banked
  4279  001BE2  C0A7  F09C         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4280  001BE6  EC08  F006         	call	_recv_msg	;wreg free
  4281  001BEA  0012               	return	
  4282  001BEC                     __end_of_ToMainHigh_recvmsg:
  4283                           	opt stack 0
  4284                           tblptru	equ	0xFF8
  4285                           tblptrh	equ	0xFF7
  4286                           tblptrl	equ	0xFF6
  4287                           tablat	equ	0xFF5
  4288                           prodh	equ	0xFF4
  4289                           prodl	equ	0xFF3
  4290                           intcon	equ	0xFF2
  4291                           intcon2	equ	0xFF1
  4292                           postinc0	equ	0xFEE
  4293                           wreg	equ	0xFE8
  4294                           indf1	equ	0xFE7
  4295                           postinc1	equ	0xFE6
  4296                           postdec1	equ	0xFE5
  4297                           fsr1h	equ	0xFE2
  4298                           fsr1l	equ	0xFE1
  4299                           indf2	equ	0xFDF
  4300                           postinc2	equ	0xFDE
  4301                           postdec2	equ	0xFDD
  4302                           fsr2h	equ	0xFDA
  4303                           fsr2l	equ	0xFD9
  4304                           status	equ	0xFD8
  4305                           
  4306 ;; *************** function _recv_msg *****************
  4307 ;; Defined at:
  4308 ;;		line 63 in file "../src/messages.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  qptr            2   55[BANK0 ] PTR struct __msg_queue
  4311 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4312 ;;  maxlength       1   57[BANK0 ] unsigned char 
  4313 ;;  msgtype         2   58[BANK0 ] PTR unsigned char 
  4314 ;;		 -> main@msgtype(1), 
  4315 ;;  data            2   60[BANK0 ] PTR void 
  4316 ;;		 -> main@msgbuffer(11), 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  qmsg            2   67[BANK0 ] PTR struct __msg
  4319 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4320 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4321 ;;  tlength         2   65[BANK0 ] unsigned int 
  4322 ;;  slot            1   64[BANK0 ] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      char 
  4325 ;; Registers used:
  4326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4332 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4333 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4334 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4335 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4336 ;;Total ram usage:       14 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:   12
  4339 ;; This function calls:
  4340 ;;		___awmod
  4341 ;;		_memcpy
  4342 ;; This function is called by:
  4343 ;;		_ToMainLow_recvmsg
  4344 ;;		_ToMainHigh_recvmsg
  4345 ;;		_FromMainLow_recvmsg
  4346 ;;		_FromMainHigh_recvmsg
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text19
  4351  000C10                     __ptext19:
  4352                           	opt stack 0
  4353  000C10                     _recv_msg:
  4354                           	opt stack 17
  4355                           
  4356                           ;messages.c: 64: unsigned char slot;
  4357                           ;messages.c: 68: msg *qmsg;
  4358                           ;messages.c: 69: size_t tlength;
  4359                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4360                           
  4361                           ;incstack = 0
  4362  000C10  0100               	movlb	0	; () banked
  4363  000C12  EE20 F042          	lfsr	2,66
  4364  000C16  0100               	movlb	0	; () banked
  4365  000C18  5197               	movf	recv_msg@qptr& (0+255),w,b
  4366  000C1A  26D9               	addwf	fsr2l,f,c
  4367  000C1C  0100               	movlb	0	; () banked
  4368  000C1E  5198               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4369  000C20  22DA               	addwfc	fsr2h,f,c
  4370  000C22  50DF               	movf	indf2,w,c
  4371  000C24  0100               	movlb	0	; () banked
  4372  000C26  0100               	movlb	0	; () banked
  4373  000C28  6FA0               	movwf	recv_msg@slot& (0+255),b
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4377  000C2A  0100               	movlb	0	; () banked
  4378  000C2C  0100               	movlb	0	; () banked
  4379  000C2E  51A0               	movf	recv_msg@slot& (0+255),w,b
  4380  000C30  0D0D               	mullw	13
  4381  000C32  50F3               	movf	prodl,w,c
  4382  000C34  0100               	movlb	0	; () banked
  4383  000C36  0100               	movlb	0	; () banked
  4384  000C38  2597               	addwf	recv_msg@qptr& (0+255),w,b
  4385  000C3A  0100               	movlb	0	; () banked
  4386  000C3C  0100               	movlb	0	; () banked
  4387  000C3E  6FA3               	movwf	recv_msg@qmsg& (0+255),b
  4388  000C40  50F4               	movf	prodh,w,c
  4389  000C42  0100               	movlb	0	; () banked
  4390  000C44  0100               	movlb	0	; () banked
  4391  000C46  2198               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4392  000C48  0100               	movlb	0	; () banked
  4393  000C4A  6FA4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;messages.c: 74: if (qmsg->full == 1) {
  4397  000C4C  0E01               	movlw	1
  4398  000C4E  C0A3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4399  000C52  C0A4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4400  000C56  62DF               	cpfseq	indf2,c
  4401  000C58  D088               	goto	l3247
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4405  000C5A  0100               	movlb	0	; () banked
  4406  000C5C  EE20 F001          	lfsr	2,1
  4407  000C60  0100               	movlb	0	; () banked
  4408  000C62  51A3               	movf	recv_msg@qmsg& (0+255),w,b
  4409  000C64  26D9               	addwf	fsr2l,f,c
  4410  000C66  0100               	movlb	0	; () banked
  4411  000C68  51A4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4412  000C6A  22DA               	addwfc	fsr2h,f,c
  4413  000C6C  50DF               	movf	indf2,w,c
  4414  000C6E  0100               	movlb	0	; () banked
  4415  000C70  0100               	movlb	0	; () banked
  4416  000C72  5D99               	subwf	recv_msg@maxlength& (0+255),w,b
  4417  000C74  B0D8               	btfsc	status,0,c
  4418  000C76  D002               	goto	l3231
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;messages.c: 77: return (-3);
  4422  000C78  0EFD               	movlw	253
  4423  000C7A  0012               	return	
  4424  000C7C                     l3231:
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;messages.c: 78: }
  4428                           ;messages.c: 80: tlength = qmsg->length;
  4429  000C7C  0100               	movlb	0	; () banked
  4430  000C7E  EE20 F001          	lfsr	2,1
  4431  000C82  0100               	movlb	0	; () banked
  4432  000C84  51A3               	movf	recv_msg@qmsg& (0+255),w,b
  4433  000C86  26D9               	addwf	fsr2l,f,c
  4434  000C88  0100               	movlb	0	; () banked
  4435  000C8A  51A4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4436  000C8C  22DA               	addwfc	fsr2h,f,c
  4437  000C8E  50DF               	movf	indf2,w,c
  4438  000C90  0100               	movlb	0	; () banked
  4439  000C92  6F9E               	movwf	??_recv_msg& (0+255),b
  4440  000C94  0100               	movlb	0	; () banked
  4441  000C96  519E               	movf	??_recv_msg& (0+255),w,b
  4442  000C98  0100               	movlb	0	; () banked
  4443  000C9A  0100               	movlb	0	; () banked
  4444  000C9C  6FA1               	movwf	recv_msg@tlength& (0+255),b
  4445  000C9E  0100               	movlb	0	; () banked
  4446  000CA0  6BA2               	clrf	(recv_msg@tlength+1)& (0+255),b
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4450  000CA2  0100               	movlb	0	; () banked
  4451  000CA4  0100               	movlb	0	; () banked
  4452  000CA6  C09D  F08E         	movff	recv_msg@data+1,memcpy@d1+1
  4453  000CAA  0100               	movlb	0	; () banked
  4454  000CAC  0100               	movlb	0	; () banked
  4455  000CAE  C09C  F08D         	movff	recv_msg@data,memcpy@d1
  4456  000CB2  0E03               	movlw	3
  4457  000CB4  0100               	movlb	0	; () banked
  4458  000CB6  0100               	movlb	0	; () banked
  4459  000CB8  25A3               	addwf	recv_msg@qmsg& (0+255),w,b
  4460  000CBA  0100               	movlb	0	; () banked
  4461  000CBC  6F9E               	movwf	??_recv_msg& (0+255),b
  4462  000CBE  0E00               	movlw	0
  4463  000CC0  0100               	movlb	0	; () banked
  4464  000CC2  0100               	movlb	0	; () banked
  4465  000CC4  21A4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4466  000CC6  0100               	movlb	0	; () banked
  4467  000CC8  6F9F               	movwf	(??_recv_msg+1)& (0+255),b
  4468  000CCA  C09E  F08F         	movff	??_recv_msg,memcpy@s1
  4469  000CCE  C09F  F090         	movff	??_recv_msg+1,memcpy@s1+1
  4470  000CD2  C0A1  F091         	movff	recv_msg@tlength,memcpy@n
  4471  000CD6  C0A2  F092         	movff	recv_msg@tlength+1,memcpy@n+1
  4472  000CDA  ECEE  F00C         	call	_memcpy	;wreg free
  4473                           
  4474                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4475  000CDE  0100               	movlb	0	; () banked
  4476  000CE0  EE20 F042          	lfsr	2,66
  4477  000CE4  0100               	movlb	0	; () banked
  4478  000CE6  5197               	movf	recv_msg@qptr& (0+255),w,b
  4479  000CE8  26D9               	addwf	fsr2l,f,c
  4480  000CEA  0100               	movlb	0	; () banked
  4481  000CEC  5198               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4482  000CEE  22DA               	addwfc	fsr2h,f,c
  4483  000CF0  0100               	movlb	0	; () banked
  4484  000CF2  EE10 F042          	lfsr	1,66
  4485  000CF6  0100               	movlb	0	; () banked
  4486  000CF8  5197               	movf	recv_msg@qptr& (0+255),w,b
  4487  000CFA  26E1               	addwf	fsr1l,f,c
  4488  000CFC  0100               	movlb	0	; () banked
  4489  000CFE  5198               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4490  000D00  22E2               	addwfc	fsr1h,f,c
  4491  000D02  50E7               	movf	indf1,w,c
  4492  000D04  0100               	movlb	0	; () banked
  4493  000D06  6F9E               	movwf	??_recv_msg& (0+255),b
  4494  000D08  0E01               	movlw	1
  4495  000D0A  0100               	movlb	0	; () banked
  4496  000D0C  259E               	addwf	??_recv_msg& (0+255),w,b
  4497  000D0E  0100               	movlb	0	; () banked
  4498  000D10  0100               	movlb	0	; () banked
  4499  000D12  6F8D               	movwf	___awmod@dividend& (0+255),b
  4500  000D14  0100               	movlb	0	; () banked
  4501  000D16  0100               	movlb	0	; () banked
  4502  000D18  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
  4503  000D1A  0E00               	movlw	0
  4504  000D1C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4505  000D1E  0E00               	movlw	0
  4506  000D20  0100               	movlb	0	; () banked
  4507  000D22  0100               	movlb	0	; () banked
  4508  000D24  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
  4509  000D26  0E05               	movlw	5
  4510  000D28  0100               	movlb	0	; () banked
  4511  000D2A  6F8F               	movwf	___awmod@divisor& (0+255),b
  4512  000D2C  ECEC  F007         	call	___awmod	;wreg free
  4513  000D30  0100               	movlb	0	; () banked
  4514  000D32  0100               	movlb	0	; () banked
  4515  000D34  518D               	movf	?___awmod& (0+255),w,b
  4516  000D36  6EDF               	movwf	indf2,c
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4520  000D38  0100               	movlb	0	; () banked
  4521  000D3A  EE20 F002          	lfsr	2,2
  4522  000D3E  0100               	movlb	0	; () banked
  4523  000D40  51A3               	movf	recv_msg@qmsg& (0+255),w,b
  4524  000D42  26D9               	addwf	fsr2l,f,c
  4525  000D44  0100               	movlb	0	; () banked
  4526  000D46  51A4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4527  000D48  22DA               	addwfc	fsr2h,f,c
  4528  000D4A  C09A  FFE1         	movff	recv_msg@msgtype,fsr1l
  4529  000D4E  C09B  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4530  000D52  CFDF FFE7          	movff	indf2,indf1
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;messages.c: 91: qmsg->full = 0;
  4534  000D56  C0A3  FFD9         	movff	recv_msg@qmsg,fsr2l
  4535  000D5A  C0A4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4536  000D5E  0E00               	movlw	0
  4537  000D60  6EDF               	movwf	indf2,c
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;messages.c: 92: return (tlength);
  4541  000D62  0100               	movlb	0	; () banked
  4542  000D64  0100               	movlb	0	; () banked
  4543  000D66  51A1               	movf	recv_msg@tlength& (0+255),w,b
  4544  000D68  0012               	return	
  4545  000D6A                     l3247:
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;messages.c: 94: return (-4);
  4549  000D6A  0EFC               	movlw	252
  4550  000D6C  0012               	return	
  4551  000D6E                     __end_of_recv_msg:
  4552                           	opt stack 0
  4553                           tblptru	equ	0xFF8
  4554                           tblptrh	equ	0xFF7
  4555                           tblptrl	equ	0xFF6
  4556                           tablat	equ	0xFF5
  4557                           prodh	equ	0xFF4
  4558                           prodl	equ	0xFF3
  4559                           intcon	equ	0xFF2
  4560                           intcon2	equ	0xFF1
  4561                           postinc0	equ	0xFEE
  4562                           wreg	equ	0xFE8
  4563                           indf1	equ	0xFE7
  4564                           postinc1	equ	0xFE6
  4565                           postdec1	equ	0xFE5
  4566                           fsr1h	equ	0xFE2
  4567                           fsr1l	equ	0xFE1
  4568                           indf2	equ	0xFDF
  4569                           postinc2	equ	0xFDE
  4570                           postdec2	equ	0xFDD
  4571                           fsr2h	equ	0xFDA
  4572                           fsr2l	equ	0xFD9
  4573                           status	equ	0xFD8
  4574                           
  4575 ;; *************** function _memcpy *****************
  4576 ;; Defined at:
  4577 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  d1              2   45[BANK0 ] PTR void 
  4580 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4581 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4582 ;;		 -> main@msgbuffer(11), 
  4583 ;;  s1              2   47[BANK0 ] PTR const void 
  4584 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4585 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4586 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4587 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  4588 ;;  n               2   49[BANK0 ] unsigned int 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  s               2   53[BANK0 ] PTR const unsigned char 
  4591 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4592 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4593 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4594 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  4595 ;;  d               2   51[BANK0 ] PTR unsigned char 
  4596 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4597 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4598 ;;		 -> main@msgbuffer(11), 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  2   45[BANK0 ] PTR void 
  4601 ;; Registers used:
  4602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4608 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4609 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4611 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4612 ;;Total ram usage:       10 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:   11
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_recv_msg
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text20
  4623  0019DC                     __ptext20:
  4624                           	opt stack 0
  4625  0019DC                     _memcpy:
  4626                           	opt stack 17
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;incstack = 0
  4630  0019DC  0100               	movlb	0	; () banked
  4631  0019DE  0100               	movlb	0	; () banked
  4632  0019E0  C090  F096         	movff	memcpy@s1+1,memcpy@s+1
  4633  0019E4  0100               	movlb	0	; () banked
  4634  0019E6  0100               	movlb	0	; () banked
  4635  0019E8  C08F  F095         	movff	memcpy@s1,memcpy@s
  4636  0019EC  0100               	movlb	0	; () banked
  4637  0019EE  0100               	movlb	0	; () banked
  4638  0019F0  C08E  F094         	movff	memcpy@d1+1,memcpy@d+1
  4639  0019F4  0100               	movlb	0	; () banked
  4640  0019F6  0100               	movlb	0	; () banked
  4641  0019F8  C08D  F093         	movff	memcpy@d1,memcpy@d
  4642  0019FC  D012               	goto	l3217
  4643  0019FE                     l3211:
  4644                           
  4645                           ; BSR set to: 0
  4646  0019FE  C095  FFD9         	movff	memcpy@s,fsr2l
  4647  001A02  C096  FFDA         	movff	memcpy@s+1,fsr2h
  4648  001A06  C093  FFE1         	movff	memcpy@d,fsr1l
  4649  001A0A  C094  FFE2         	movff	memcpy@d+1,fsr1h
  4650  001A0E  CFDF FFE7          	movff	indf2,indf1
  4651                           
  4652                           ; BSR set to: 0
  4653  001A12  0100               	movlb	0	; () banked
  4654  001A14  0100               	movlb	0	; () banked
  4655  001A16  4B95               	infsnz	memcpy@s& (0+255),f,b
  4656  001A18  2B96               	incf	(memcpy@s+1)& (0+255),f,b
  4657                           
  4658                           ; BSR set to: 0
  4659  001A1A  0100               	movlb	0	; () banked
  4660  001A1C  0100               	movlb	0	; () banked
  4661  001A1E  4B93               	infsnz	memcpy@d& (0+255),f,b
  4662  001A20  2B94               	incf	(memcpy@d+1)& (0+255),f,b
  4663  001A22                     l3217:
  4664                           
  4665                           ; BSR set to: 0
  4666  001A22  0100               	movlb	0	; () banked
  4667  001A24  0100               	movlb	0	; () banked
  4668  001A26  0791               	decf	memcpy@n& (0+255),f,b
  4669  001A28  A0D8               	btfss	status,0,c
  4670  001A2A  0792               	decf	(memcpy@n+1)& (0+255),f,b
  4671  001A2C  0100               	movlb	0	; () banked
  4672  001A2E  2991               	incf	memcpy@n& (0+255),w,b
  4673  001A30  B4D8               	btfsc	status,2,c
  4674  001A32  2992               	incf	(memcpy@n+1)& (0+255),w,b
  4675  001A34  B4D8               	btfsc	status,2,c
  4676                           
  4677                           ; BSR set to: 0
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;	Return value of _memcpy is never used
  4681  001A36  0012               	return	
  4682  001A38  D7E2               	goto	l3211
  4683  001A3A                     __end_of_memcpy:
  4684                           	opt stack 0
  4685                           tblptru	equ	0xFF8
  4686                           tblptrh	equ	0xFF7
  4687                           tblptrl	equ	0xFF6
  4688                           tablat	equ	0xFF5
  4689                           prodh	equ	0xFF4
  4690                           prodl	equ	0xFF3
  4691                           intcon	equ	0xFF2
  4692                           intcon2	equ	0xFF1
  4693                           postinc0	equ	0xFEE
  4694                           wreg	equ	0xFE8
  4695                           indf1	equ	0xFE7
  4696                           postinc1	equ	0xFE6
  4697                           postdec1	equ	0xFE5
  4698                           fsr1h	equ	0xFE2
  4699                           fsr1l	equ	0xFE1
  4700                           indf2	equ	0xFDF
  4701                           postinc2	equ	0xFDE
  4702                           postdec2	equ	0xFDD
  4703                           fsr2h	equ	0xFDA
  4704                           fsr2l	equ	0xFD9
  4705                           status	equ	0xFD8
  4706                           
  4707 ;; *************** function ___awmod *****************
  4708 ;; Defined at:
  4709 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  dividend        2   45[BANK0 ] int 
  4712 ;;  divisor         2   47[BANK0 ] int 
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  sign            1   51[BANK0 ] unsigned char 
  4715 ;;  counter         1   50[BANK0 ] unsigned char 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  2   45[BANK0 ] int 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0, prodl
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4725 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4726 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4727 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4728 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4729 ;;Total ram usage:        7 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:   11
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_send_msg
  4736 ;;		_recv_msg
  4737 ;;		i2_send_msg
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text21
  4742  000FD8                     __ptext21:
  4743                           	opt stack 0
  4744  000FD8                     ___awmod:
  4745                           	opt stack 17
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;incstack = 0
  4749  000FD8  0100               	movlb	0	; () banked
  4750  000FDA  6F91               	movwf	??___awmod& (0+255),b
  4751  000FDC  0E00               	movlw	0
  4752  000FDE  0100               	movlb	0	; () banked
  4753  000FE0  0100               	movlb	0	; () banked
  4754  000FE2  6F93               	movwf	___awmod@sign& (0+255),b
  4755  000FE4  0100               	movlb	0	; () banked
  4756  000FE6  5191               	movf	??___awmod& (0+255),w,b
  4757                           
  4758                           ; BSR set to: 0
  4759  000FE8  0100               	movlb	0	; () banked
  4760  000FEA  0100               	movlb	0	; () banked
  4761  000FEC  518E               	movf	(___awmod@dividend+1)& (0+255),w,b
  4762  000FEE  0A80               	xorlw	128
  4763  000FF0  6EF3               	movwf	prodl,c
  4764  000FF2  0E80               	movlw	128
  4765  000FF4  5CF3               	subwf	prodl,w,c
  4766  000FF6  0E00               	movlw	0
  4767  000FF8  B4D8               	btfsc	status,2,c
  4768  000FFA  5D8D               	subwf	___awmod@dividend& (0+255),w,b
  4769  000FFC  B0D8               	btfsc	status,0,c
  4770  000FFE  D00F               	goto	l3581
  4771                           
  4772                           ; BSR set to: 0
  4773  001000  0100               	movlb	0	; () banked
  4774  001002  0100               	movlb	0	; () banked
  4775  001004  6D8D               	negf	___awmod@dividend& (0+255),b
  4776  001006  0100               	movlb	0	; () banked
  4777  001008  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
  4778  00100A  B0D8               	btfsc	status,0,c
  4779  00100C  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
  4780                           
  4781                           ; BSR set to: 0
  4782  00100E  0100               	movlb	0	; () banked
  4783  001010  6F91               	movwf	??___awmod& (0+255),b
  4784  001012  0E01               	movlw	1
  4785  001014  0100               	movlb	0	; () banked
  4786  001016  0100               	movlb	0	; () banked
  4787  001018  6F93               	movwf	___awmod@sign& (0+255),b
  4788  00101A  0100               	movlb	0	; () banked
  4789  00101C  5191               	movf	??___awmod& (0+255),w,b
  4790  00101E                     l3581:
  4791                           
  4792                           ; BSR set to: 0
  4793  00101E  0100               	movlb	0	; () banked
  4794  001020  0100               	movlb	0	; () banked
  4795  001022  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4796  001024  0A80               	xorlw	128
  4797  001026  6EF3               	movwf	prodl,c
  4798  001028  0E80               	movlw	128
  4799  00102A  5CF3               	subwf	prodl,w,c
  4800  00102C  0E00               	movlw	0
  4801  00102E  B4D8               	btfsc	status,2,c
  4802  001030  5D8F               	subwf	___awmod@divisor& (0+255),w,b
  4803  001032  B0D8               	btfsc	status,0,c
  4804  001034  D007               	goto	l3585
  4805                           
  4806                           ; BSR set to: 0
  4807  001036  0100               	movlb	0	; () banked
  4808  001038  0100               	movlb	0	; () banked
  4809  00103A  6D8F               	negf	___awmod@divisor& (0+255),b
  4810  00103C  0100               	movlb	0	; () banked
  4811  00103E  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
  4812  001040  B0D8               	btfsc	status,0,c
  4813  001042  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
  4814  001044                     l3585:
  4815                           
  4816                           ; BSR set to: 0
  4817  001044  0100               	movlb	0	; () banked
  4818  001046  0100               	movlb	0	; () banked
  4819  001048  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4820  00104A  118F               	iorwf	___awmod@divisor& (0+255),w,b
  4821  00104C  B4D8               	btfsc	status,2,c
  4822  00104E  D03A               	goto	l3601
  4823                           
  4824                           ; BSR set to: 0
  4825  001050  0100               	movlb	0	; () banked
  4826  001052  6F91               	movwf	??___awmod& (0+255),b
  4827  001054  0E01               	movlw	1
  4828  001056  0100               	movlb	0	; () banked
  4829  001058  0100               	movlb	0	; () banked
  4830  00105A  6F92               	movwf	___awmod@counter& (0+255),b
  4831  00105C  0100               	movlb	0	; () banked
  4832  00105E  5191               	movf	??___awmod& (0+255),w,b
  4833  001060  D009               	goto	l3591
  4834  001062                     l3589:
  4835                           
  4836                           ; BSR set to: 0
  4837  001062  0100               	movlb	0	; () banked
  4838  001064  0100               	movlb	0	; () banked
  4839  001066  0100               	movlb	0	; () banked
  4840  001068  90D8               	bcf	status,0,c
  4841  00106A  378F               	rlcf	___awmod@divisor& (0+255),f,b
  4842  00106C  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4843  00106E  0100               	movlb	0	; () banked
  4844  001070  0100               	movlb	0	; () banked
  4845  001072  2B92               	incf	___awmod@counter& (0+255),f,b
  4846  001074                     l3591:
  4847                           
  4848                           ; BSR set to: 0
  4849  001074  0100               	movlb	0	; () banked
  4850  001076  0100               	movlb	0	; () banked
  4851  001078  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4852  00107A  D7F3               	goto	l3589
  4853  00107C                     l3593:
  4854                           
  4855                           ; BSR set to: 0
  4856  00107C  0100               	movlb	0	; () banked
  4857  00107E  0100               	movlb	0	; () banked
  4858  001080  518F               	movf	___awmod@divisor& (0+255),w,b
  4859  001082  0100               	movlb	0	; () banked
  4860  001084  0100               	movlb	0	; () banked
  4861  001086  5D8D               	subwf	___awmod@dividend& (0+255),w,b
  4862  001088  0100               	movlb	0	; () banked
  4863  00108A  0100               	movlb	0	; () banked
  4864  00108C  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4865  00108E  0100               	movlb	0	; () banked
  4866  001090  0100               	movlb	0	; () banked
  4867  001092  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4868  001094  A0D8               	btfss	status,0,c
  4869  001096  D00C               	goto	l3597
  4870                           
  4871                           ; BSR set to: 0
  4872  001098  0100               	movlb	0	; () banked
  4873  00109A  0100               	movlb	0	; () banked
  4874  00109C  518F               	movf	___awmod@divisor& (0+255),w,b
  4875  00109E  0100               	movlb	0	; () banked
  4876  0010A0  0100               	movlb	0	; () banked
  4877  0010A2  5F8D               	subwf	___awmod@dividend& (0+255),f,b
  4878  0010A4  0100               	movlb	0	; () banked
  4879  0010A6  0100               	movlb	0	; () banked
  4880  0010A8  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
  4881  0010AA  0100               	movlb	0	; () banked
  4882  0010AC  0100               	movlb	0	; () banked
  4883  0010AE  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4884  0010B0                     l3597:
  4885                           
  4886                           ; BSR set to: 0
  4887  0010B0  0100               	movlb	0	; () banked
  4888  0010B2  0100               	movlb	0	; () banked
  4889  0010B4  0100               	movlb	0	; () banked
  4890  0010B6  90D8               	bcf	status,0,c
  4891  0010B8  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4892  0010BA  338F               	rrcf	___awmod@divisor& (0+255),f,b
  4893                           
  4894                           ; BSR set to: 0
  4895  0010BC  0100               	movlb	0	; () banked
  4896  0010BE  0100               	movlb	0	; () banked
  4897  0010C0  2F92               	decfsz	___awmod@counter& (0+255),f,b
  4898  0010C2  D7DC               	goto	l3593
  4899  0010C4                     l3601:
  4900                           
  4901                           ; BSR set to: 0
  4902  0010C4  0100               	movlb	0	; () banked
  4903  0010C6  0100               	movlb	0	; () banked
  4904  0010C8  5193               	movf	___awmod@sign& (0+255),w,b
  4905  0010CA  B4D8               	btfsc	status,2,c
  4906  0010CC  D007               	goto	l3605
  4907                           
  4908                           ; BSR set to: 0
  4909  0010CE  0100               	movlb	0	; () banked
  4910  0010D0  0100               	movlb	0	; () banked
  4911  0010D2  6D8D               	negf	___awmod@dividend& (0+255),b
  4912  0010D4  0100               	movlb	0	; () banked
  4913  0010D6  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
  4914  0010D8  B0D8               	btfsc	status,0,c
  4915  0010DA  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
  4916  0010DC                     l3605:
  4917                           
  4918                           ; BSR set to: 0
  4919  0010DC  C08D  F08D         	movff	___awmod@dividend,?___awmod
  4920  0010E0  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
  4921  0010E4  0012               	return	
  4922  0010E6                     __end_of___awmod:
  4923                           	opt stack 0
  4924                           tblptru	equ	0xFF8
  4925                           tblptrh	equ	0xFF7
  4926                           tblptrl	equ	0xFF6
  4927                           tablat	equ	0xFF5
  4928                           prodh	equ	0xFF4
  4929                           prodl	equ	0xFF3
  4930                           intcon	equ	0xFF2
  4931                           intcon2	equ	0xFF1
  4932                           postinc0	equ	0xFEE
  4933                           wreg	equ	0xFE8
  4934                           indf1	equ	0xFE7
  4935                           postinc1	equ	0xFE6
  4936                           postdec1	equ	0xFE5
  4937                           fsr1h	equ	0xFE2
  4938                           fsr1l	equ	0xFE1
  4939                           indf2	equ	0xFDF
  4940                           postinc2	equ	0xFDE
  4941                           postdec2	equ	0xFDD
  4942                           fsr2h	equ	0xFDA
  4943                           fsr2l	equ	0xFD9
  4944                           status	equ	0xFD8
  4945                           
  4946 ;; *************** function _SetChanADC *****************
  4947 ;; Defined at:
  4948 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  channel         1    wreg     unsigned char 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  channel         1   46[BANK0 ] unsigned char 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;		None               void
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4964 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4965 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4966 ;;Total ram usage:        2 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:   11
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_main
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text22
  4977  001DB8                     __ptext22:
  4978                           	opt stack 0
  4979  001DB8                     _SetChanADC:
  4980                           	opt stack 19
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;incstack = 0
  4984                           ;SetChanADC@channel stored from wreg
  4985  001DB8  CFE8 F08E          	movff	wreg,SetChanADC@channel
  4986  001DBC  CFC2 F08D          	movff	4034,??_SetChanADC	;volatile
  4987  001DC0  0EC3               	movlw	195
  4988  001DC2  0100               	movlb	0	; () banked
  4989  001DC4  178D               	andwf	??_SetChanADC& (0+255),f,b
  4990  001DC6  0100               	movlb	0	; () banked
  4991  001DC8  0100               	movlb	0	; () banked
  4992  001DCA  90D8               	bcf	status,0,c
  4993  001DCC  318E               	rrcf	SetChanADC@channel& (0+255),w,b
  4994  001DCE  0B3C               	andlw	60
  4995  001DD0  0100               	movlb	0	; () banked
  4996  001DD2  118D               	iorwf	??_SetChanADC& (0+255),w,b
  4997  001DD4  6EC2               	movwf	4034,c	;volatile
  4998                           
  4999                           ; BSR set to: 0
  5000  001DD6  0012               	return	
  5001  001DD8                     __end_of_SetChanADC:
  5002                           	opt stack 0
  5003                           tblptru	equ	0xFF8
  5004                           tblptrh	equ	0xFF7
  5005                           tblptrl	equ	0xFF6
  5006                           tablat	equ	0xFF5
  5007                           prodh	equ	0xFF4
  5008                           prodl	equ	0xFF3
  5009                           intcon	equ	0xFF2
  5010                           intcon2	equ	0xFF1
  5011                           postinc0	equ	0xFEE
  5012                           wreg	equ	0xFE8
  5013                           indf1	equ	0xFE7
  5014                           postinc1	equ	0xFE6
  5015                           postdec1	equ	0xFE5
  5016                           fsr1h	equ	0xFE2
  5017                           fsr1l	equ	0xFE1
  5018                           indf2	equ	0xFDF
  5019                           postinc2	equ	0xFDE
  5020                           postdec2	equ	0xFDD
  5021                           fsr2h	equ	0xFDA
  5022                           fsr2l	equ	0xFD9
  5023                           status	equ	0xFD8
  5024                           
  5025 ;; *************** function _OpenTimer1 *****************
  5026 ;; Defined at:
  5027 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  config          1    wreg     unsigned char 
  5030 ;;  config1         1   45[BANK0 ] unsigned char 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  config          1   47[BANK0 ] unsigned char 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;		None               void
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5042 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5043 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5046 ;;Total ram usage:        3 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:   11
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_main
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text23
  5057  001BEC                     __ptext23:
  5058                           	opt stack 0
  5059  001BEC                     _OpenTimer1:
  5060                           	opt stack 19
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;incstack = 0
  5064                           ;OpenTimer1@config stored from wreg
  5065  001BEC  CFE8 F08F          	movff	wreg,OpenTimer1@config
  5066  001BF0  0100               	movlb	0	; () banked
  5067  001BF2  0100               	movlb	0	; () banked
  5068  001BF4  518D               	movf	OpenTimer1@config1& (0+255),w,b
  5069  001BF6  0BF3               	andlw	243
  5070  001BF8  6E9A               	movwf	3994,c	;volatile
  5071  001BFA  C08F  F08E         	movff	OpenTimer1@config,??_OpenTimer1
  5072  001BFE  0E7F               	movlw	127
  5073  001C00  0100               	movlb	0	; () banked
  5074  001C02  178E               	andwf	??_OpenTimer1& (0+255),f,b
  5075  001C04  0100               	movlb	0	; () banked
  5076  001C06  90D8               	bcf	status,0,c
  5077  001C08  358E               	rlcf	??_OpenTimer1& (0+255),w,b
  5078  001C0A  6ECD               	movwf	4045,c	;volatile
  5079                           
  5080                           ; BSR set to: 0
  5081  001C0C  0E00               	movlw	0
  5082  001C0E  6ECF               	movwf	4047,c	;volatile
  5083                           
  5084                           ; BSR set to: 0
  5085  001C10  0E00               	movlw	0
  5086  001C12  6ECE               	movwf	4046,c	;volatile
  5087                           
  5088                           ; BSR set to: 0
  5089  001C14  909E               	bcf	3998,0,c	;volatile
  5090                           
  5091                           ; BSR set to: 0
  5092  001C16  0100               	movlb	0	; () banked
  5093  001C18  0100               	movlb	0	; () banked
  5094  001C1A  AF8F               	btfss	OpenTimer1@config& (0+255),7,b
  5095  001C1C  D002               	goto	l595
  5096                           
  5097                           ; BSR set to: 0
  5098  001C1E  809D               	bsf	3997,0,c	;volatile
  5099  001C20  D001               	goto	l596
  5100  001C22                     l595:
  5101                           
  5102                           ; BSR set to: 0
  5103  001C22  909D               	bcf	3997,0,c	;volatile
  5104  001C24                     l596:
  5105                           
  5106                           ; BSR set to: 0
  5107  001C24  BE9A               	btfsc	3994,7,c	;volatile
  5108                           
  5109                           ; BSR set to: 0
  5110  001C26  869A               	bsf	3994,3,c	;volatile
  5111                           
  5112                           ; BSR set to: 0
  5113  001C28  80CD               	bsf	4045,0,c	;volatile
  5114                           
  5115                           ; BSR set to: 0
  5116  001C2A  0012               	return	
  5117  001C2C                     __end_of_OpenTimer1:
  5118                           	opt stack 0
  5119                           tblptru	equ	0xFF8
  5120                           tblptrh	equ	0xFF7
  5121                           tblptrl	equ	0xFF6
  5122                           tablat	equ	0xFF5
  5123                           prodh	equ	0xFF4
  5124                           prodl	equ	0xFF3
  5125                           intcon	equ	0xFF2
  5126                           intcon2	equ	0xFF1
  5127                           postinc0	equ	0xFEE
  5128                           wreg	equ	0xFE8
  5129                           indf1	equ	0xFE7
  5130                           postinc1	equ	0xFE6
  5131                           postdec1	equ	0xFE5
  5132                           fsr1h	equ	0xFE2
  5133                           fsr1l	equ	0xFE1
  5134                           indf2	equ	0xFDF
  5135                           postinc2	equ	0xFDE
  5136                           postdec2	equ	0xFDD
  5137                           fsr2h	equ	0xFDA
  5138                           fsr2l	equ	0xFD9
  5139                           status	equ	0xFD8
  5140                           
  5141 ;; *************** function _OpenTimer0 *****************
  5142 ;; Defined at:
  5143 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  config          1    wreg     unsigned char 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  config          1   45[BANK0 ] unsigned char 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;		None               void
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5160 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5161 ;;Total ram usage:        1 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:   11
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_main
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text24
  5172  001D48                     __ptext24:
  5173                           	opt stack 0
  5174  001D48                     _OpenTimer0:
  5175                           	opt stack 19
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;incstack = 0
  5179                           ;OpenTimer0@config stored from wreg
  5180  001D48  CFE8 F08D          	movff	wreg,OpenTimer0@config
  5181  001D4C  0100               	movlb	0	; () banked
  5182  001D4E  0100               	movlb	0	; () banked
  5183  001D50  518D               	movf	OpenTimer0@config& (0+255),w,b
  5184  001D52  0B7F               	andlw	127
  5185  001D54  6ED5               	movwf	4053,c	;volatile
  5186                           
  5187                           ; BSR set to: 0
  5188  001D56  0E00               	movlw	0
  5189  001D58  6ED7               	movwf	4055,c	;volatile
  5190                           
  5191                           ; BSR set to: 0
  5192  001D5A  0E00               	movlw	0
  5193  001D5C  6ED6               	movwf	4054,c	;volatile
  5194                           
  5195                           ; BSR set to: 0
  5196  001D5E  94F2               	bcf	intcon,2,c	;volatile
  5197                           
  5198                           ; BSR set to: 0
  5199  001D60  0100               	movlb	0	; () banked
  5200  001D62  0100               	movlb	0	; () banked
  5201  001D64  AF8D               	btfss	OpenTimer0@config& (0+255),7,b
  5202  001D66  D002               	goto	l567
  5203                           
  5204                           ; BSR set to: 0
  5205  001D68  8AF2               	bsf	intcon,5,c	;volatile
  5206  001D6A  D001               	goto	l568
  5207  001D6C                     l567:
  5208                           
  5209                           ; BSR set to: 0
  5210  001D6C  9AF2               	bcf	intcon,5,c	;volatile
  5211  001D6E                     l568:
  5212                           
  5213                           ; BSR set to: 0
  5214  001D6E  8ED5               	bsf	4053,7,c	;volatile
  5215                           
  5216                           ; BSR set to: 0
  5217  001D70  0012               	return	
  5218  001D72                     __end_of_OpenTimer0:
  5219                           	opt stack 0
  5220                           tblptru	equ	0xFF8
  5221                           tblptrh	equ	0xFF7
  5222                           tblptrl	equ	0xFF6
  5223                           tablat	equ	0xFF5
  5224                           prodh	equ	0xFF4
  5225                           prodl	equ	0xFF3
  5226                           intcon	equ	0xFF2
  5227                           intcon2	equ	0xFF1
  5228                           postinc0	equ	0xFEE
  5229                           wreg	equ	0xFE8
  5230                           indf1	equ	0xFE7
  5231                           postinc1	equ	0xFE6
  5232                           postdec1	equ	0xFE5
  5233                           fsr1h	equ	0xFE2
  5234                           fsr1l	equ	0xFE1
  5235                           indf2	equ	0xFDF
  5236                           postinc2	equ	0xFDE
  5237                           postdec2	equ	0xFDD
  5238                           fsr2h	equ	0xFDA
  5239                           fsr2l	equ	0xFD9
  5240                           status	equ	0xFD8
  5241                           
  5242 ;; *************** function _OpenADC *****************
  5243 ;; Defined at:
  5244 ;;		line 225 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  config          1    wreg     unsigned char 
  5247 ;;  config2         1   45[BANK0 ] unsigned char 
  5248 ;;  config3         2   46[BANK0 ] unsigned int 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  config          1   51[BANK0 ] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;		None               void
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5260 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5262 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5263 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5264 ;;Total ram usage:        7 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:   11
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_main
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text25
  5275  001428                     __ptext25:
  5276                           	opt stack 0
  5277  001428                     _OpenADC:
  5278                           	opt stack 19
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;incstack = 0
  5282                           ;OpenADC@config stored from wreg
  5283  001428  CFE8 F093          	movff	wreg,OpenADC@config
  5284  00142C  0E00               	movlw	0
  5285  00142E  6EC2               	movwf	4034,c	;volatile
  5286  001430  0E00               	movlw	0
  5287  001432  6EC1               	movwf	4033,c	;volatile
  5288  001434  C08D  F090         	movff	OpenADC@config2,??_OpenADC
  5289  001438  0E06               	movlw	6
  5290  00143A  0100               	movlb	0	; () banked
  5291  00143C  6F91               	movwf	(??_OpenADC+1)& (0+255),b
  5292  00143E                     u2325:
  5293  00143E  0100               	movlb	0	; () banked
  5294  001440  90D8               	bcf	status,0,c
  5295  001442  3790               	rlcf	??_OpenADC& (0+255),f,b
  5296  001444  0100               	movlb	0	; () banked
  5297  001446  2F91               	decfsz	(??_OpenADC+1)& (0+255),f,b
  5298  001448  D7FA               	goto	u2325
  5299  00144A  0EC0               	movlw	192
  5300  00144C  0100               	movlb	0	; () banked
  5301  00144E  1790               	andwf	??_OpenADC& (0+255),f,b
  5302  001450  0100               	movlb	0	; () banked
  5303  001452  0100               	movlb	0	; () banked
  5304  001454  90D8               	bcf	status,0,c
  5305  001456  318D               	rrcf	OpenADC@config2& (0+255),w,b
  5306  001458  0B3C               	andlw	60
  5307  00145A  0100               	movlb	0	; () banked
  5308  00145C  1190               	iorwf	??_OpenADC& (0+255),w,b
  5309  00145E  6EC2               	movwf	4034,c	;volatile
  5310                           
  5311                           ; BSR set to: 0
  5312  001460  C093  F090         	movff	OpenADC@config,??_OpenADC
  5313  001464  0100               	movlb	0	; () banked
  5314  001466  90D8               	bcf	status,0,c
  5315  001468  3790               	rlcf	??_OpenADC& (0+255),f,b
  5316  00146A  0100               	movlb	0	; () banked
  5317  00146C  90D8               	bcf	status,0,c
  5318  00146E  3790               	rlcf	??_OpenADC& (0+255),f,b
  5319  001470  0E38               	movlw	56
  5320  001472  0100               	movlb	0	; () banked
  5321  001474  1790               	andwf	??_OpenADC& (0+255),f,b
  5322  001476  C093  F091         	movff	OpenADC@config,??_OpenADC+1
  5323  00147A  0100               	movlb	0	; () banked
  5324  00147C  3B91               	swapf	(??_OpenADC+1)& (0+255),f,b
  5325  00147E  0E0F               	movlw	15
  5326  001480  1791               	andwf	(??_OpenADC+1)& (0+255),f,b
  5327  001482  0E07               	movlw	7
  5328  001484  0100               	movlb	0	; () banked
  5329  001486  1791               	andwf	(??_OpenADC+1)& (0+255),f,b
  5330  001488  0100               	movlb	0	; () banked
  5331  00148A  0100               	movlb	0	; () banked
  5332  00148C  5193               	movf	OpenADC@config& (0+255),w,b
  5333  00148E  0B80               	andlw	128
  5334  001490  0100               	movlb	0	; () banked
  5335  001492  1191               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5336  001494  0100               	movlb	0	; () banked
  5337  001496  1190               	iorwf	??_OpenADC& (0+255),w,b
  5338  001498  6EC1               	movwf	4033,c	;volatile
  5339                           
  5340                           ; BSR set to: 0
  5341  00149A  C08E  FF48         	movff	OpenADC@config3,3912	;volatile
  5342                           
  5343                           ; BSR set to: 0
  5344  00149E  0100               	movlb	0	; () banked
  5345  0014A0  C08F  F090         	movff	OpenADC@config3+1,??_OpenADC
  5346  0014A4  C090  F091         	movff	??_OpenADC,??_OpenADC+1
  5347  0014A8  0100               	movlb	0	; () banked
  5348  0014AA  6B92               	clrf	(??_OpenADC+2)& (0+255),b
  5349  0014AC  0100               	movlb	0	; () banked
  5350  0014AE  5191               	movf	(??_OpenADC+1)& (0+255),w,b
  5351  0014B0  010F               	movlb	15	; () banked
  5352  0014B2  010F               	movlb	15	; () banked
  5353  0014B4  6F49               	movwf	73,b	;volatile
  5354                           
  5355                           ; BSR set to: 15
  5356  0014B6  0100               	movlb	0	; () banked
  5357  0014B8  0100               	movlb	0	; () banked
  5358  0014BA  AF8D               	btfss	OpenADC@config2& (0+255),7,b
  5359  0014BC  D003               	goto	l548
  5360                           
  5361                           ; BSR set to: 0
  5362  0014BE  9C9E               	bcf	3998,6,c	;volatile
  5363  0014C0  8C9D               	bsf	3997,6,c	;volatile
  5364  0014C2  8CF2               	bsf	intcon,6,c	;volatile
  5365  0014C4                     l548:
  5366                           
  5367                           ; BSR set to: 0
  5368  0014C4  80C2               	bsf	4034,0,c	;volatile
  5369                           
  5370                           ; BSR set to: 0
  5371  0014C6  0012               	return	
  5372  0014C8                     __end_of_OpenADC:
  5373                           	opt stack 0
  5374                           tblptru	equ	0xFF8
  5375                           tblptrh	equ	0xFF7
  5376                           tblptrl	equ	0xFF6
  5377                           tablat	equ	0xFF5
  5378                           prodh	equ	0xFF4
  5379                           prodl	equ	0xFF3
  5380                           intcon	equ	0xFF2
  5381                           intcon2	equ	0xFF1
  5382                           postinc0	equ	0xFEE
  5383                           wreg	equ	0xFE8
  5384                           indf1	equ	0xFE7
  5385                           postinc1	equ	0xFE6
  5386                           postdec1	equ	0xFE5
  5387                           fsr1h	equ	0xFE2
  5388                           fsr1l	equ	0xFE1
  5389                           indf2	equ	0xFDF
  5390                           postinc2	equ	0xFDE
  5391                           postdec2	equ	0xFDD
  5392                           fsr2h	equ	0xFDA
  5393                           fsr2l	equ	0xFD9
  5394                           status	equ	0xFD8
  5395                           
  5396 ;; *************** function _Open1USART *****************
  5397 ;; Defined at:
  5398 ;;		line 124 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\u1open.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  config          1    wreg     unsigned char 
  5401 ;;  spbrg           2   45[BANK0 ] unsigned int 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;  config          1   50[BANK0 ] unsigned char 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;		None               void
  5406 ;; Registers used:
  5407 ;;		wreg, status,2
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5414 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5415 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5416 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5417 ;;Total ram usage:        6 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:   11
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_main
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text26
  5428  001564                     __ptext26:
  5429                           	opt stack 0
  5430  001564                     _Open1USART:
  5431                           	opt stack 19
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;incstack = 0
  5435                           ;Open1USART@config stored from wreg
  5436  001564  CFE8 F092          	movff	wreg,Open1USART@config
  5437  001568  0E00               	movlw	0
  5438  00156A  6EAD               	movwf	4013,c	;volatile
  5439  00156C  0E00               	movlw	0
  5440  00156E  6EAC               	movwf	4012,c	;volatile
  5441  001570  0100               	movlb	0	; () banked
  5442  001572  0100               	movlb	0	; () banked
  5443  001574  B192               	btfsc	Open1USART@config& (0+255),0,b
  5444                           
  5445                           ; BSR set to: 0
  5446  001576  88AD               	bsf	4013,4,c	;volatile
  5447                           
  5448                           ; BSR set to: 0
  5449                           
  5450                           ; BSR set to: 0
  5451  001578  0100               	movlb	0	; () banked
  5452  00157A  0100               	movlb	0	; () banked
  5453  00157C  A392               	btfss	Open1USART@config& (0+255),1,b
  5454  00157E  D002               	goto	l3093
  5455                           
  5456                           ; BSR set to: 0
  5457  001580  8CAD               	bsf	4013,6,c	;volatile
  5458  001582  8CAC               	bsf	4012,6,c	;volatile
  5459  001584                     l3093:
  5460                           
  5461                           ; BSR set to: 0
  5462  001584  0100               	movlb	0	; () banked
  5463  001586  0100               	movlb	0	; () banked
  5464  001588  B592               	btfsc	Open1USART@config& (0+255),2,b
  5465                           
  5466                           ; BSR set to: 0
  5467  00158A  8EAD               	bsf	4013,7,c	;volatile
  5468                           
  5469                           ; BSR set to: 0
  5470                           
  5471                           ; BSR set to: 0
  5472  00158C  0100               	movlb	0	; () banked
  5473  00158E  0100               	movlb	0	; () banked
  5474  001590  A792               	btfss	Open1USART@config& (0+255),3,b
  5475  001592  D002               	goto	l627
  5476                           
  5477                           ; BSR set to: 0
  5478  001594  88AC               	bsf	4012,4,c	;volatile
  5479  001596  D001               	goto	l3101
  5480  001598                     l627:
  5481                           
  5482                           ; BSR set to: 0
  5483  001598  8AAC               	bsf	4012,5,c	;volatile
  5484  00159A                     l3101:
  5485                           
  5486                           ; BSR set to: 0
  5487  00159A  0100               	movlb	0	; () banked
  5488  00159C  0100               	movlb	0	; () banked
  5489  00159E  B992               	btfsc	Open1USART@config& (0+255),4,b
  5490                           
  5491                           ; BSR set to: 0
  5492  0015A0  84AD               	bsf	4013,2,c	;volatile
  5493                           
  5494                           ; BSR set to: 0
  5495                           
  5496                           ; BSR set to: 0
  5497  0015A2  0100               	movlb	0	; () banked
  5498  0015A4  0100               	movlb	0	; () banked
  5499  0015A6  BB92               	btfsc	Open1USART@config& (0+255),5,b
  5500                           
  5501                           ; BSR set to: 0
  5502  0015A8  86AC               	bsf	4012,3,c	;volatile
  5503                           
  5504                           ; BSR set to: 0
  5505                           
  5506                           ; BSR set to: 0
  5507  0015AA  0100               	movlb	0	; () banked
  5508  0015AC  0100               	movlb	0	; () banked
  5509  0015AE  AD92               	btfss	Open1USART@config& (0+255),6,b
  5510  0015B0  D002               	goto	l631
  5511                           
  5512                           ; BSR set to: 0
  5513  0015B2  8A9D               	bsf	3997,5,c	;volatile
  5514  0015B4  D001               	goto	l3113
  5515  0015B6                     l631:
  5516                           
  5517                           ; BSR set to: 0
  5518  0015B6  9A9D               	bcf	3997,5,c	;volatile
  5519  0015B8                     l3113:
  5520                           
  5521                           ; BSR set to: 0
  5522  0015B8  0100               	movlb	0	; () banked
  5523  0015BA  0100               	movlb	0	; () banked
  5524  0015BC  AF92               	btfss	Open1USART@config& (0+255),7,b
  5525  0015BE  D002               	goto	l633
  5526                           
  5527                           ; BSR set to: 0
  5528  0015C0  889D               	bsf	3997,4,c	;volatile
  5529  0015C2  D001               	goto	l634
  5530  0015C4                     l633:
  5531                           
  5532                           ; BSR set to: 0
  5533  0015C4  989D               	bcf	3997,4,c	;volatile
  5534  0015C6                     l634:
  5535                           
  5536                           ; BSR set to: 0
  5537  0015C6  C08D  FFB0         	movff	Open1USART@spbrg,4016	;volatile
  5538                           
  5539                           ; BSR set to: 0
  5540  0015CA  0100               	movlb	0	; () banked
  5541  0015CC  C08E  F08F         	movff	Open1USART@spbrg+1,??_Open1USART
  5542  0015D0  C08F  F090         	movff	??_Open1USART,??_Open1USART+1
  5543  0015D4  0100               	movlb	0	; () banked
  5544  0015D6  6B91               	clrf	(??_Open1USART+2)& (0+255),b
  5545  0015D8  0100               	movlb	0	; () banked
  5546  0015DA  5190               	movf	(??_Open1USART+1)& (0+255),w,b
  5547  0015DC  6E7F               	movwf	3967,c	;volatile
  5548                           
  5549                           ; BSR set to: 0
  5550  0015DE  8AAD               	bsf	4013,5,c	;volatile
  5551                           
  5552                           ; BSR set to: 0
  5553  0015E0  8EAC               	bsf	4012,7,c	;volatile
  5554                           
  5555                           ; BSR set to: 0
  5556  0015E2  0012               	return	
  5557  0015E4                     __end_of_Open1USART:
  5558                           	opt stack 0
  5559                           tblptru	equ	0xFF8
  5560                           tblptrh	equ	0xFF7
  5561                           tblptrl	equ	0xFF6
  5562                           tablat	equ	0xFF5
  5563                           prodh	equ	0xFF4
  5564                           prodl	equ	0xFF3
  5565                           intcon	equ	0xFF2
  5566                           intcon2	equ	0xFF1
  5567                           postinc0	equ	0xFEE
  5568                           wreg	equ	0xFE8
  5569                           indf1	equ	0xFE7
  5570                           postinc1	equ	0xFE6
  5571                           postdec1	equ	0xFE5
  5572                           fsr1h	equ	0xFE2
  5573                           fsr1l	equ	0xFE1
  5574                           indf2	equ	0xFDF
  5575                           postinc2	equ	0xFDE
  5576                           postdec2	equ	0xFDD
  5577                           fsr2h	equ	0xFDA
  5578                           fsr2l	equ	0xFD9
  5579                           status	equ	0xFD8
  5580                           
  5581 ;; *************** function _InterruptHandlerLow *****************
  5582 ;; Defined at:
  5583 ;;		line 121 in file "../src/interrupts.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;		None
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;		None               void
  5590 ;; Registers used:
  5591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5599 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5600 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5601 ;;Total ram usage:       17 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:   10
  5604 ;; This function calls:
  5605 ;;		_adc_int_handler
  5606 ;;		_timer0_int_handler
  5607 ;;		_timer1_int_handler
  5608 ;;		_uart_recv_int_handler
  5609 ;;		_uart_trans_int_handler
  5610 ;; This function is called by:
  5611 ;;		Interrupt level 1
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	intcodelo
  5616  000018                     __pintcodelo:
  5617                           	opt stack 0
  5618  000018                     _InterruptHandlerLow:
  5619                           	opt stack 16
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;incstack = 0
  5623  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5624  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5625  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5626  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5627  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5628  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5629  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5630  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5631  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5632  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5633  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5634  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5635  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5636  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5637  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5638  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5639  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5640                           
  5641                           ;interrupts.c: 123: if(PIR1bits.ADIF){
  5642  00005C  AC9E               	btfss	3998,6,c	;volatile
  5643  00005E  D003               	goto	i1l3821
  5644                           
  5645                           ;interrupts.c: 125: PIR1bits.ADIF = 0;
  5646  000060  9C9E               	bcf	3998,6,c	;volatile
  5647                           
  5648                           ;interrupts.c: 126: adc_int_handler();
  5649  000062  EC6F  F00F         	call	_adc_int_handler	;wreg free
  5650  000066                     i1l3821:
  5651                           
  5652                           ;interrupts.c: 127: }
  5653                           ;interrupts.c: 130: if (PIR1bits.TMR1IF) {
  5654  000066  A09E               	btfss	3998,0,c	;volatile
  5655  000068  D003               	goto	i1l3827
  5656                           
  5657                           ;interrupts.c: 131: PIR1bits.TMR1IF = 0;
  5658  00006A  909E               	bcf	3998,0,c	;volatile
  5659                           
  5660                           ;interrupts.c: 132: timer1_int_handler();
  5661  00006C  EC36  F00E         	call	_timer1_int_handler	;wreg free
  5662  000070                     i1l3827:
  5663                           
  5664                           ;interrupts.c: 134: }
  5665                           ;interrupts.c: 136: if (PIR1bits.TXIF) {
  5666  000070  B89E               	btfsc	3998,4,c	;volatile
  5667                           
  5668                           ;interrupts.c: 138: uart_trans_int_handler();
  5669  000072  EC88  F00C         	call	_uart_trans_int_handler	;wreg free
  5670                           
  5671                           ;interrupts.c: 139: }
  5672                           ;interrupts.c: 141: if (PIR1bits.RCIF) {
  5673  000076  AA9E               	btfss	3998,5,c	;volatile
  5674  000078  D003               	goto	i1l3837
  5675                           
  5676                           ;interrupts.c: 142: PIR1bits.RCIF = 0;
  5677  00007A  9A9E               	bcf	3998,5,c	;volatile
  5678                           
  5679                           ;interrupts.c: 144: uart_recv_int_handler();
  5680  00007C  ECFA  F008         	call	_uart_recv_int_handler	;wreg free
  5681  000080                     i1l3837:
  5682                           
  5683                           ;interrupts.c: 146: }
  5684                           ;interrupts.c: 149: if (INTCONbits.TMR0IF) {
  5685  000080  A4F2               	btfss	intcon,2,c	;volatile
  5686  000082  D003               	goto	i1l57
  5687                           
  5688                           ;interrupts.c: 150: INTCONbits.TMR0IF = 0;
  5689  000084  94F2               	bcf	intcon,2,c	;volatile
  5690                           
  5691                           ;interrupts.c: 152: timer0_int_handler();
  5692  000086  EC44  F00F         	call	_timer0_int_handler	;wreg free
  5693  00008A                     i1l57:
  5694  00008A  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5695  00008E  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5696  000092  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5697  000096  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5698  00009A  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5699  00009E  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5700  0000A2  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5701  0000A6  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5702  0000AA  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5703  0000AE  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5704  0000B2  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5705  0000B6  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5706  0000BA  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5707  0000BE  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5708  0000C2  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5709  0000C6  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5710  0000CA  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5711  0000CE  0010               	retfie	
  5712  0000D0                     __end_of_InterruptHandlerLow:
  5713                           	opt stack 0
  5714                           pclatu	equ	0xFFB
  5715                           pclath	equ	0xFFA
  5716                           tblptru	equ	0xFF8
  5717                           tblptrh	equ	0xFF7
  5718                           tblptrl	equ	0xFF6
  5719                           tablat	equ	0xFF5
  5720                           prodh	equ	0xFF4
  5721                           prodl	equ	0xFF3
  5722                           intcon	equ	0xFF2
  5723                           intcon2	equ	0xFF1
  5724                           postinc0	equ	0xFEE
  5725                           fsr0h	equ	0xFEA
  5726                           fsr0l	equ	0xFE9
  5727                           wreg	equ	0xFE8
  5728                           indf1	equ	0xFE7
  5729                           postinc1	equ	0xFE6
  5730                           postdec1	equ	0xFE5
  5731                           fsr1h	equ	0xFE2
  5732                           fsr1l	equ	0xFE1
  5733                           bsr	equ	0xFE0
  5734                           indf2	equ	0xFDF
  5735                           postinc2	equ	0xFDE
  5736                           postdec2	equ	0xFDD
  5737                           fsr2h	equ	0xFDA
  5738                           fsr2l	equ	0xFD9
  5739                           status	equ	0xFD8
  5740                           
  5741 ;; *************** function _uart_trans_int_handler *****************
  5742 ;; Defined at:
  5743 ;;		line 73 in file "../src/my_uart.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;		None
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;		None
  5748 ;; Return value:  Size  Location     Type
  5749 ;;		None               void
  5750 ;; Registers used:
  5751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;Total ram usage:        1 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    6
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_InterruptHandlerLow
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text28
  5772  001910                     __ptext28:
  5773                           	opt stack 0
  5774  001910                     _uart_trans_int_handler:
  5775                           	opt stack 19
  5776                           
  5777                           ;my_uart.c: 75: if(TXSTAbits.TRMT){
  5778                           
  5779                           ;incstack = 0
  5780  001910  A2AD               	btfss	4013,1,c	;volatile
  5781  001912  0012               	return	
  5782                           
  5783                           ;my_uart.c: 76: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5784  001914  EE20 F00E          	lfsr	2,14
  5785  001918  503F               	movf	_uc_ptr,w,c
  5786  00191A  26D9               	addwf	fsr2l,f,c
  5787  00191C  5040               	movf	_uc_ptr+1,w,c
  5788  00191E  22DA               	addwfc	fsr2h,f,c
  5789  001920  50DF               	movf	indf2,w,c
  5790  001922  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5791  001924  EE20 F00D          	lfsr	2,13
  5792  001928  503F               	movf	_uc_ptr,w,c
  5793  00192A  26D9               	addwf	fsr2l,f,c
  5794  00192C  5040               	movf	_uc_ptr+1,w,c
  5795  00192E  22DA               	addwfc	fsr2h,f,c
  5796  001930  50DF               	movf	indf2,w,c
  5797  001932  5C01               	subwf	??_uart_trans_int_handler,w,c
  5798  001934  B0D8               	btfsc	status,0,c
  5799  001936  D01E               	goto	i1l484
  5800                           
  5801                           ;my_uart.c: 77: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5802  001938  EE20 F00E          	lfsr	2,14
  5803  00193C  503F               	movf	_uc_ptr,w,c
  5804  00193E  26D9               	addwf	fsr2l,f,c
  5805  001940  5040               	movf	_uc_ptr+1,w,c
  5806  001942  22DA               	addwfc	fsr2h,f,c
  5807  001944  50DF               	movf	indf2,w,c
  5808  001946  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5809  001948  5001               	movf	??_uart_trans_int_handler,w,c
  5810  00194A  0D01               	mullw	1
  5811  00194C  0E07               	movlw	7
  5812  00194E  26F3               	addwf	prodl,f,c
  5813  001950  0E00               	movlw	0
  5814  001952  22F4               	addwfc	prodh,f,c
  5815  001954  50F3               	movf	prodl,w,c
  5816  001956  243F               	addwf	_uc_ptr,w,c
  5817  001958  6ED9               	movwf	fsr2l,c
  5818  00195A  50F4               	movf	prodh,w,c
  5819  00195C  2040               	addwfc	_uc_ptr+1,w,c
  5820  00195E  6EDA               	movwf	fsr2h,c
  5821  001960  50DF               	movf	indf2,w,c
  5822  001962  6EAE               	movwf	4014,c	;volatile
  5823                           
  5824                           ;my_uart.c: 79: uc_ptr->txBufind++;
  5825  001964  EE20 F00E          	lfsr	2,14
  5826  001968  503F               	movf	_uc_ptr,w,c
  5827  00196A  26D9               	addwf	fsr2l,f,c
  5828  00196C  5040               	movf	_uc_ptr+1,w,c
  5829  00196E  22DA               	addwfc	fsr2h,f,c
  5830  001970  2ADF               	incf	indf2,f,c
  5831                           
  5832                           ;my_uart.c: 80: } else
  5833  001972  0012               	return	
  5834  001974                     i1l484:
  5835                           
  5836                           ;my_uart.c: 81: PIE1bits.TX1IE = 0;
  5837  001974  989D               	bcf	3997,4,c	;volatile
  5838  001976  0012               	return	
  5839  001978                     __end_of_uart_trans_int_handler:
  5840                           	opt stack 0
  5841                           pclatu	equ	0xFFB
  5842                           pclath	equ	0xFFA
  5843                           tblptru	equ	0xFF8
  5844                           tblptrh	equ	0xFF7
  5845                           tblptrl	equ	0xFF6
  5846                           tablat	equ	0xFF5
  5847                           prodh	equ	0xFF4
  5848                           prodl	equ	0xFF3
  5849                           intcon	equ	0xFF2
  5850                           intcon2	equ	0xFF1
  5851                           postinc0	equ	0xFEE
  5852                           fsr0h	equ	0xFEA
  5853                           fsr0l	equ	0xFE9
  5854                           wreg	equ	0xFE8
  5855                           indf1	equ	0xFE7
  5856                           postinc1	equ	0xFE6
  5857                           postdec1	equ	0xFE5
  5858                           fsr1h	equ	0xFE2
  5859                           fsr1l	equ	0xFE1
  5860                           bsr	equ	0xFE0
  5861                           indf2	equ	0xFDF
  5862                           postinc2	equ	0xFDE
  5863                           postdec2	equ	0xFDD
  5864                           fsr2h	equ	0xFDA
  5865                           fsr2l	equ	0xFD9
  5866                           status	equ	0xFD8
  5867                           
  5868 ;; *************** function _uart_recv_int_handler *****************
  5869 ;; Defined at:
  5870 ;;		line 11 in file "../src/my_uart.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;		None
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;		None               void
  5877 ;; Registers used:
  5878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5888 ;;Total ram usage:        1 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    9
  5891 ;; This function calls:
  5892 ;;		_Read1USART
  5893 ;;		_ToMainLow_sendmsg
  5894 ;; This function is called by:
  5895 ;;		_InterruptHandlerLow
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text29
  5900  0011F4                     __ptext29:
  5901                           	opt stack 0
  5902  0011F4                     _uart_recv_int_handler:
  5903                           	opt stack 16
  5904                           
  5905                           ;my_uart.c: 17: if ((PIR1bits.RC1IF)) {
  5906                           
  5907                           ;incstack = 0
  5908  0011F4  AA9E               	btfss	3998,5,c	;volatile
  5909  0011F6  D04E               	goto	i1l3809
  5910                           
  5911                           ;my_uart.c: 18: uc_ptr->buffer[uc_ptr->buflen] = Read1USART();
  5912  0011F8  EE20 F006          	lfsr	2,6
  5913  0011FC  503F               	movf	_uc_ptr,w,c
  5914  0011FE  26D9               	addwf	fsr2l,f,c
  5915  001200  5040               	movf	_uc_ptr+1,w,c
  5916  001202  22DA               	addwfc	fsr2h,f,c
  5917  001204  50DF               	movf	indf2,w,c
  5918  001206  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5919  001208  501B               	movf	??_uart_recv_int_handler,w,c
  5920  00120A  0D01               	mullw	1
  5921  00120C  50F3               	movf	prodl,w,c
  5922  00120E  243F               	addwf	_uc_ptr,w,c
  5923  001210  6ED9               	movwf	fsr2l,c
  5924  001212  50F4               	movf	prodh,w,c
  5925  001214  2040               	addwfc	_uc_ptr+1,w,c
  5926  001216  6EDA               	movwf	fsr2h,c
  5927  001218  ECFB  F00E         	call	_Read1USART	;wreg free
  5928  00121C  6EDF               	movwf	indf2,c
  5929                           
  5930                           ;my_uart.c: 25: uc_ptr->buflen++;
  5931  00121E  EE20 F006          	lfsr	2,6
  5932  001222  503F               	movf	_uc_ptr,w,c
  5933  001224  26D9               	addwf	fsr2l,f,c
  5934  001226  5040               	movf	_uc_ptr+1,w,c
  5935  001228  22DA               	addwfc	fsr2h,f,c
  5936  00122A  2ADF               	incf	indf2,f,c
  5937                           
  5938                           ;my_uart.c: 26: if(UART_timeout > 20000){
  5939  00122C  0E21               	movlw	33
  5940  00122E  5C39               	subwf	_UART_timeout,w,c
  5941  001230  0E4E               	movlw	78
  5942  001232  583A               	subwfb	_UART_timeout+1,w,c
  5943  001234  A0D8               	btfss	status,0,c
  5944  001236  D00C               	goto	i1l3803
  5945                           
  5946                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  5947  001238  EE20 F006          	lfsr	2,6
  5948  00123C  503F               	movf	_uc_ptr,w,c
  5949  00123E  26D9               	addwf	fsr2l,f,c
  5950  001240  5040               	movf	_uc_ptr+1,w,c
  5951  001242  22DA               	addwfc	fsr2h,f,c
  5952  001244  0E01               	movlw	1
  5953  001246  6EDF               	movwf	indf2,c
  5954                           
  5955                           ;my_uart.c: 28: UART_timeout = 0;
  5956  001248  0E00               	movlw	0
  5957  00124A  6E3A               	movwf	_UART_timeout+1,c
  5958  00124C  0E00               	movlw	0
  5959  00124E  6E39               	movwf	_UART_timeout,c
  5960  001250                     i1l3803:
  5961                           
  5962                           ;my_uart.c: 29: }
  5963                           ;my_uart.c: 32: if (uc_ptr->buflen == 6) {
  5964  001250  EE20 F006          	lfsr	2,6
  5965  001254  503F               	movf	_uc_ptr,w,c
  5966  001256  26D9               	addwf	fsr2l,f,c
  5967  001258  5040               	movf	_uc_ptr+1,w,c
  5968  00125A  22DA               	addwfc	fsr2h,f,c
  5969  00125C  0E06               	movlw	6
  5970  00125E  62DF               	cpfseq	indf2,c
  5971  001260  D019               	goto	i1l3809
  5972                           
  5973                           ;my_uart.c: 33: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5974  001262  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5975  001264  0E1F               	movlw	31
  5976  001266  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5977  001268  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5978  00126A  C040  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5979  00126E  C03F  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5980  001272  EE20 F006          	lfsr	2,6
  5981  001276  503F               	movf	_uc_ptr,w,c
  5982  001278  26D9               	addwf	fsr2l,f,c
  5983  00127A  5040               	movf	_uc_ptr+1,w,c
  5984  00127C  22DA               	addwfc	fsr2h,f,c
  5985  00127E  50DF               	movf	indf2,w,c
  5986  001280  ECB9  F00E         	call	_ToMainLow_sendmsg
  5987                           
  5988                           ;my_uart.c: 34: uc_ptr->buflen = 0;
  5989  001284  EE20 F006          	lfsr	2,6
  5990  001288  503F               	movf	_uc_ptr,w,c
  5991  00128A  26D9               	addwf	fsr2l,f,c
  5992  00128C  5040               	movf	_uc_ptr+1,w,c
  5993  00128E  22DA               	addwfc	fsr2h,f,c
  5994  001290  0E00               	movlw	0
  5995  001292  6EDF               	movwf	indf2,c
  5996  001294                     i1l3809:
  5997                           
  5998                           ;my_uart.c: 35: }
  5999                           ;my_uart.c: 36: }
  6000                           ;my_uart.c: 41: if (USART1_Status.OVERRUN_ERROR == 1) {
  6001  001294  A63E               	btfss	_USART1_Status,3,c
  6002  001296  0012               	return	
  6003                           
  6004                           ;my_uart.c: 48: RCSTAbits.CREN = 0;
  6005  001298  98AC               	bcf	4012,4,c	;volatile
  6006                           
  6007                           ;my_uart.c: 49: RCSTAbits.CREN = 1;
  6008  00129A  88AC               	bsf	4012,4,c	;volatile
  6009                           
  6010                           ;my_uart.c: 50: ToMainLow_sendmsg(0, 30, (void *) 0);
  6011  00129C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6012  00129E  0E1E               	movlw	30
  6013  0012A0  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6014  0012A2  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6015  0012A4  0E00               	movlw	0
  6016  0012A6  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6017  0012A8  0E00               	movlw	0
  6018  0012AA  6E18               	movwf	ToMainLow_sendmsg@data,c
  6019  0012AC  0E00               	movlw	0
  6020  0012AE  ECB9  F00E         	call	_ToMainLow_sendmsg
  6021  0012B2  0012               	return	
  6022  0012B4                     __end_of_uart_recv_int_handler:
  6023                           	opt stack 0
  6024                           pclatu	equ	0xFFB
  6025                           pclath	equ	0xFFA
  6026                           tblptru	equ	0xFF8
  6027                           tblptrh	equ	0xFF7
  6028                           tblptrl	equ	0xFF6
  6029                           tablat	equ	0xFF5
  6030                           prodh	equ	0xFF4
  6031                           prodl	equ	0xFF3
  6032                           intcon	equ	0xFF2
  6033                           intcon2	equ	0xFF1
  6034                           postinc0	equ	0xFEE
  6035                           fsr0h	equ	0xFEA
  6036                           fsr0l	equ	0xFE9
  6037                           wreg	equ	0xFE8
  6038                           indf1	equ	0xFE7
  6039                           postinc1	equ	0xFE6
  6040                           postdec1	equ	0xFE5
  6041                           fsr1h	equ	0xFE2
  6042                           fsr1l	equ	0xFE1
  6043                           bsr	equ	0xFE0
  6044                           indf2	equ	0xFDF
  6045                           postinc2	equ	0xFDE
  6046                           postdec2	equ	0xFDD
  6047                           fsr2h	equ	0xFDA
  6048                           fsr2l	equ	0xFD9
  6049                           status	equ	0xFD8
  6050                           
  6051 ;; *************** function _Read1USART *****************
  6052 ;; Defined at:
  6053 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\u1read.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;		None
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  data            1    0[COMRAM] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      unsigned char 
  6060 ;; Registers used:
  6061 ;;		wreg, status,2, status,0
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6071 ;;Total ram usage:        1 bytes
  6072 ;; Hardware stack levels used:    1
  6073 ;; Hardware stack levels required when called:    6
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_uart_recv_int_handler
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           	psect	text30
  6082  001DF6                     __ptext30:
  6083                           	opt stack 0
  6084  001DF6                     _Read1USART:
  6085                           	opt stack 18
  6086                           
  6087                           ;incstack = 0
  6088  001DF6  0EF2               	movlw	242
  6089  001DF8  163E               	andwf	_USART1_Status,f,c
  6090  001DFA  ACAC               	btfss	4012,6,c	;volatile
  6091  001DFC  D003               	goto	i1l644
  6092  001DFE  903E               	bcf	_USART1_Status,0,c
  6093  001E00  B0AC               	btfsc	4012,0,c	;volatile
  6094  001E02  803E               	bsf	_USART1_Status,0,c
  6095  001E04                     i1l644:
  6096  001E04  B4AC               	btfsc	4012,2,c	;volatile
  6097  001E06  843E               	bsf	_USART1_Status,2,c
  6098  001E08  B2AC               	btfsc	4012,1,c	;volatile
  6099  001E0A  863E               	bsf	_USART1_Status,3,c
  6100  001E0C  CFAF F001          	movff	4015,Read1USART@data	;volatile
  6101  001E10  5001               	movf	Read1USART@data,w,c
  6102  001E12  0012               	return	
  6103  001E14                     __end_of_Read1USART:
  6104                           	opt stack 0
  6105                           pclatu	equ	0xFFB
  6106                           pclath	equ	0xFFA
  6107                           tblptru	equ	0xFF8
  6108                           tblptrh	equ	0xFF7
  6109                           tblptrl	equ	0xFF6
  6110                           tablat	equ	0xFF5
  6111                           prodh	equ	0xFF4
  6112                           prodl	equ	0xFF3
  6113                           intcon	equ	0xFF2
  6114                           intcon2	equ	0xFF1
  6115                           postinc0	equ	0xFEE
  6116                           fsr0h	equ	0xFEA
  6117                           fsr0l	equ	0xFE9
  6118                           wreg	equ	0xFE8
  6119                           indf1	equ	0xFE7
  6120                           postinc1	equ	0xFE6
  6121                           postdec1	equ	0xFE5
  6122                           fsr1h	equ	0xFE2
  6123                           fsr1l	equ	0xFE1
  6124                           bsr	equ	0xFE0
  6125                           indf2	equ	0xFDF
  6126                           postinc2	equ	0xFDE
  6127                           postdec2	equ	0xFDD
  6128                           fsr2h	equ	0xFDA
  6129                           fsr2l	equ	0xFD9
  6130                           status	equ	0xFD8
  6131                           
  6132 ;; *************** function _timer1_int_handler *****************
  6133 ;; Defined at:
  6134 ;;		line 51 in file "../src/user_interrupts.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;		None
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;		None
  6139 ;; Return value:  Size  Location     Type
  6140 ;;		None               void
  6141 ;; Registers used:
  6142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6152 ;;Total ram usage:        1 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:    9
  6155 ;; This function calls:
  6156 ;;		_ToMainLow_sendmsg
  6157 ;;		_WriteTimer1
  6158 ;; This function is called by:
  6159 ;;		_InterruptHandlerLow
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text31
  6164  001C6C                     __ptext31:
  6165                           	opt stack 0
  6166  001C6C                     _timer1_int_handler:
  6167                           	opt stack 16
  6168                           
  6169                           ;user_interrupts.c: 59: t1Mult++;
  6170                           
  6171                           ;incstack = 0
  6172  001C6C  4A3B               	infsnz	_t1Mult,f,c
  6173  001C6E  2A3C               	incf	_t1Mult+1,f,c
  6174                           
  6175                           ;user_interrupts.c: 61: if(t1Mult == 2){
  6176  001C70  503B               	movf	_t1Mult,w,c
  6177  001C72  0A02               	xorlw	2
  6178  001C74  103C               	iorwf	_t1Mult+1,w,c
  6179  001C76  A4D8               	btfss	status,2,c
  6180  001C78  D00F               	goto	i1l3789
  6181                           
  6182                           ;user_interrupts.c: 62: ToMainLow_sendmsg(0, 11, (void *) 0);
  6183  001C7A  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  6184  001C7C  0E0B               	movlw	11
  6185  001C7E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6186  001C80  501B               	movf	??_timer1_int_handler& (0+255),w,c
  6187  001C82  0E00               	movlw	0
  6188  001C84  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6189  001C86  0E00               	movlw	0
  6190  001C88  6E18               	movwf	ToMainLow_sendmsg@data,c
  6191  001C8A  0E00               	movlw	0
  6192  001C8C  ECB9  F00E         	call	_ToMainLow_sendmsg
  6193                           
  6194                           ;user_interrupts.c: 63: t1Mult = 0;
  6195  001C90  0E00               	movlw	0
  6196  001C92  6E3C               	movwf	_t1Mult+1,c
  6197  001C94  0E00               	movlw	0
  6198  001C96  6E3B               	movwf	_t1Mult,c
  6199  001C98                     i1l3789:
  6200                           
  6201                           ;user_interrupts.c: 64: }
  6202                           ;user_interrupts.c: 67: WriteTimer1(0);
  6203  001C98  0E00               	movlw	0
  6204  001C9A  6E02               	movwf	WriteTimer1@timer1+1,c
  6205  001C9C  0E00               	movlw	0
  6206  001C9E  6E01               	movwf	WriteTimer1@timer1,c
  6207  001CA0  EC3B  F00F         	call	_WriteTimer1	;wreg free
  6208  001CA4  0012               	return	
  6209  001CA6                     __end_of_timer1_int_handler:
  6210                           	opt stack 0
  6211                           pclatu	equ	0xFFB
  6212                           pclath	equ	0xFFA
  6213                           tblptru	equ	0xFF8
  6214                           tblptrh	equ	0xFF7
  6215                           tblptrl	equ	0xFF6
  6216                           tablat	equ	0xFF5
  6217                           prodh	equ	0xFF4
  6218                           prodl	equ	0xFF3
  6219                           intcon	equ	0xFF2
  6220                           intcon2	equ	0xFF1
  6221                           postinc0	equ	0xFEE
  6222                           fsr0h	equ	0xFEA
  6223                           fsr0l	equ	0xFE9
  6224                           wreg	equ	0xFE8
  6225                           indf1	equ	0xFE7
  6226                           postinc1	equ	0xFE6
  6227                           postdec1	equ	0xFE5
  6228                           fsr1h	equ	0xFE2
  6229                           fsr1l	equ	0xFE1
  6230                           bsr	equ	0xFE0
  6231                           indf2	equ	0xFDF
  6232                           postinc2	equ	0xFDE
  6233                           postdec2	equ	0xFDD
  6234                           fsr2h	equ	0xFDA
  6235                           fsr2l	equ	0xFD9
  6236                           status	equ	0xFD8
  6237                           
  6238 ;; *************** function _WriteTimer1 *****************
  6239 ;; Defined at:
  6240 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  timer1          2    0[COMRAM] unsigned int 
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;  timer           2    2[COMRAM] struct Timers
  6245 ;; Return value:  Size  Location     Type
  6246 ;;		None               void
  6247 ;; Registers used:
  6248 ;;		None
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6254 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6257 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6258 ;;Total ram usage:        4 bytes
  6259 ;; Hardware stack levels used:    1
  6260 ;; Hardware stack levels required when called:    6
  6261 ;; This function calls:
  6262 ;;		Nothing
  6263 ;; This function is called by:
  6264 ;;		_timer1_int_handler
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           	psect	text32
  6269  001E76                     __ptext32:
  6270                           	opt stack 0
  6271  001E76                     _WriteTimer1:
  6272                           	opt stack 18
  6273                           
  6274                           ;incstack = 0
  6275  001E76  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6276  001E7A  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6277  001E7E  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6278  001E82  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6279  001E86  0012               	return	
  6280  001E88                     __end_of_WriteTimer1:
  6281                           	opt stack 0
  6282                           pclatu	equ	0xFFB
  6283                           pclath	equ	0xFFA
  6284                           tblptru	equ	0xFF8
  6285                           tblptrh	equ	0xFF7
  6286                           tblptrl	equ	0xFF6
  6287                           tablat	equ	0xFF5
  6288                           prodh	equ	0xFF4
  6289                           prodl	equ	0xFF3
  6290                           intcon	equ	0xFF2
  6291                           intcon2	equ	0xFF1
  6292                           postinc0	equ	0xFEE
  6293                           fsr0h	equ	0xFEA
  6294                           fsr0l	equ	0xFE9
  6295                           wreg	equ	0xFE8
  6296                           indf1	equ	0xFE7
  6297                           postinc1	equ	0xFE6
  6298                           postdec1	equ	0xFE5
  6299                           fsr1h	equ	0xFE2
  6300                           fsr1l	equ	0xFE1
  6301                           bsr	equ	0xFE0
  6302                           indf2	equ	0xFDF
  6303                           postinc2	equ	0xFDE
  6304                           postdec2	equ	0xFDD
  6305                           fsr2h	equ	0xFDA
  6306                           fsr2l	equ	0xFD9
  6307                           status	equ	0xFD8
  6308                           
  6309 ;; *************** function _ToMainLow_sendmsg *****************
  6310 ;; Defined at:
  6311 ;;		line 103 in file "../src/messages.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  length          1    wreg     unsigned char 
  6314 ;;  msgtype         1   22[COMRAM] unsigned char 
  6315 ;;  data            2   23[COMRAM] PTR void 
  6316 ;;		 -> NULL(0), main@uc(15), 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  length          1   25[COMRAM] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      char 
  6321 ;; Registers used:
  6322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6328 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6331 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6332 ;;Total ram usage:        4 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    8
  6335 ;; This function calls:
  6336 ;;		_send_msg
  6337 ;; This function is called by:
  6338 ;;		_uart_recv_int_handler
  6339 ;;		_timer1_int_handler
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           	psect	text33
  6344  001D72                     __ptext33:
  6345                           	opt stack 0
  6346  001D72                     _ToMainLow_sendmsg:
  6347                           	opt stack 16
  6348                           
  6349                           ;incstack = 0
  6350                           ;ToMainLow_sendmsg@length stored from wreg
  6351  001D72  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  6352                           
  6353                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6354                           ;	Return value of _ToMainLow_sendmsg is never used
  6355  001D76  0101               	movlb	1	; () banked
  6356  001D78  0E01               	movlw	high _ToMainLow_MQ
  6357  001D7A  6E0C               	movwf	send_msg@qptr+1,c
  6358  001D7C  0101               	movlb	1	; () banked
  6359  001D7E  0E43               	movlw	low _ToMainLow_MQ
  6360  001D80  6E0B               	movwf	send_msg@qptr,c
  6361  001D82  C01A  F00D         	movff	ToMainLow_sendmsg@length,send_msg@length
  6362  001D86  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  6363  001D8A  C019  F010         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  6364  001D8E  C018  F00F         	movff	ToMainLow_sendmsg@data,send_msg@data
  6365  001D92  EC5A  F009         	call	_send_msg	;wreg free
  6366  001D96  0012               	return	
  6367  001D98                     __end_of_ToMainLow_sendmsg:
  6368                           	opt stack 0
  6369                           pclatu	equ	0xFFB
  6370                           pclath	equ	0xFFA
  6371                           tblptru	equ	0xFF8
  6372                           tblptrh	equ	0xFF7
  6373                           tblptrl	equ	0xFF6
  6374                           tablat	equ	0xFF5
  6375                           prodh	equ	0xFF4
  6376                           prodl	equ	0xFF3
  6377                           intcon	equ	0xFF2
  6378                           intcon2	equ	0xFF1
  6379                           postinc0	equ	0xFEE
  6380                           fsr0h	equ	0xFEA
  6381                           fsr0l	equ	0xFE9
  6382                           wreg	equ	0xFE8
  6383                           indf1	equ	0xFE7
  6384                           postinc1	equ	0xFE6
  6385                           postdec1	equ	0xFE5
  6386                           fsr1h	equ	0xFE2
  6387                           fsr1l	equ	0xFE1
  6388                           bsr	equ	0xFE0
  6389                           indf2	equ	0xFDF
  6390                           postinc2	equ	0xFDE
  6391                           postdec2	equ	0xFDD
  6392                           fsr2h	equ	0xFDA
  6393                           fsr2l	equ	0xFD9
  6394                           status	equ	0xFD8
  6395                           
  6396 ;; *************** function _send_msg *****************
  6397 ;; Defined at:
  6398 ;;		line 24 in file "../src/messages.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6401 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6402 ;;  length          1   12[COMRAM] unsigned char 
  6403 ;;  msgtype         1   13[COMRAM] unsigned char 
  6404 ;;  data            2   14[COMRAM] PTR void 
  6405 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), main@uc(15), 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  6408 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6409 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6410 ;;  tlength         2   17[COMRAM] unsigned int 
  6411 ;;  slot            1   19[COMRAM] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  1    wreg      char 
  6414 ;; Registers used:
  6415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6421 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6422 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6424 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;Total ram usage:       12 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:    7
  6428 ;; This function calls:
  6429 ;;		i1___awmod
  6430 ;;		i1_memcpy
  6431 ;; This function is called by:
  6432 ;;		_ToMainLow_sendmsg
  6433 ;;		_FromMainLow_sendmsg
  6434 ;;		_FromMainHigh_sendmsg
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text34
  6439  0012B4                     __ptext34:
  6440                           	opt stack 0
  6441  0012B4                     _send_msg:
  6442                           	opt stack 16
  6443                           
  6444                           ;messages.c: 25: unsigned char slot;
  6445                           ;messages.c: 27: msg *qmsg;
  6446                           ;messages.c: 28: size_t tlength = length;
  6447                           
  6448                           ;incstack = 0
  6449  0012B4  C00D  F012         	movff	send_msg@length,send_msg@tlength
  6450  0012B8  6A13               	clrf	send_msg@tlength+1,c
  6451                           
  6452                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6453  0012BA  EE20 F041          	lfsr	2,65
  6454  0012BE  500B               	movf	send_msg@qptr,w,c
  6455  0012C0  26D9               	addwf	fsr2l,f,c
  6456  0012C2  500C               	movf	send_msg@qptr+1,w,c
  6457  0012C4  22DA               	addwfc	fsr2h,f,c
  6458  0012C6  50DF               	movf	indf2,w,c
  6459  0012C8  6E14               	movwf	send_msg@slot,c
  6460                           
  6461                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6462  0012CA  5014               	movf	send_msg@slot,w,c
  6463  0012CC  0D0D               	mullw	13
  6464  0012CE  50F3               	movf	prodl,w,c
  6465  0012D0  240B               	addwf	send_msg@qptr,w,c
  6466  0012D2  6E15               	movwf	send_msg@qmsg,c
  6467  0012D4  50F4               	movf	prodh,w,c
  6468  0012D6  200C               	addwfc	send_msg@qptr+1,w,c
  6469  0012D8  6E16               	movwf	send_msg@qmsg+1,c
  6470                           
  6471                           ;messages.c: 41: if (qmsg->full != 0) {
  6472  0012DA  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  6473  0012DE  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  6474  0012E2  50DF               	movf	indf2,w,c
  6475  0012E4  B4D8               	btfsc	status,2,c
  6476  0012E6  D002               	goto	i1l3765
  6477                           
  6478                           ;messages.c: 42: return (-1);
  6479  0012E8  0EFF               	movlw	255
  6480  0012EA  0012               	return	
  6481  0012EC                     i1l3765:
  6482                           
  6483                           ;messages.c: 43: }
  6484                           ;messages.c: 46: qmsg->length = length;
  6485  0012EC  EE20 F001          	lfsr	2,1
  6486  0012F0  5015               	movf	send_msg@qmsg,w,c
  6487  0012F2  26D9               	addwf	fsr2l,f,c
  6488  0012F4  5016               	movf	send_msg@qmsg+1,w,c
  6489  0012F6  22DA               	addwfc	fsr2h,f,c
  6490  0012F8  C00D  FFDF         	movff	send_msg@length,indf2
  6491                           
  6492                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6493  0012FC  EE20 F002          	lfsr	2,2
  6494  001300  5015               	movf	send_msg@qmsg,w,c
  6495  001302  26D9               	addwf	fsr2l,f,c
  6496  001304  5016               	movf	send_msg@qmsg+1,w,c
  6497  001306  22DA               	addwfc	fsr2h,f,c
  6498  001308  C00E  FFDF         	movff	send_msg@msgtype,indf2
  6499                           
  6500                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6501  00130C  0E03               	movlw	3
  6502  00130E  2415               	addwf	send_msg@qmsg,w,c
  6503  001310  6E01               	movwf	i1memcpy@d1,c
  6504  001312  0E00               	movlw	0
  6505  001314  2016               	addwfc	send_msg@qmsg+1,w,c
  6506  001316  6E02               	movwf	i1memcpy@d1+1,c
  6507  001318  C010  F004         	movff	send_msg@data+1,i1memcpy@s1+1
  6508  00131C  C00F  F003         	movff	send_msg@data,i1memcpy@s1
  6509  001320  C012  F005         	movff	send_msg@tlength,i1memcpy@n
  6510  001324  C013  F006         	movff	send_msg@tlength+1,i1memcpy@n+1
  6511  001328  EC16  F00E         	call	i1_memcpy	;wreg free
  6512                           
  6513                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6514  00132C  EE20 F041          	lfsr	2,65
  6515  001330  500B               	movf	send_msg@qptr,w,c
  6516  001332  26D9               	addwf	fsr2l,f,c
  6517  001334  500C               	movf	send_msg@qptr+1,w,c
  6518  001336  22DA               	addwfc	fsr2h,f,c
  6519  001338  EE10 F041          	lfsr	1,65
  6520  00133C  500B               	movf	send_msg@qptr,w,c
  6521  00133E  26E1               	addwf	fsr1l,f,c
  6522  001340  500C               	movf	send_msg@qptr+1,w,c
  6523  001342  22E2               	addwfc	fsr1h,f,c
  6524  001344  50E7               	movf	indf1,w,c
  6525  001346  6E11               	movwf	??_send_msg& (0+255),c
  6526  001348  0E01               	movlw	1
  6527  00134A  2411               	addwf	??_send_msg,w,c
  6528  00134C  6E01               	movwf	i1___awmod@dividend,c
  6529  00134E  6A02               	clrf	i1___awmod@dividend+1,c
  6530  001350  0E00               	movlw	0
  6531  001352  2202               	addwfc	i1___awmod@dividend+1,f,c
  6532  001354  0E00               	movlw	0
  6533  001356  6E04               	movwf	i1___awmod@divisor+1,c
  6534  001358  0E05               	movlw	5
  6535  00135A  6E03               	movwf	i1___awmod@divisor,c
  6536  00135C  EC64  F00A         	call	i1___awmod	;wreg free
  6537  001360  5001               	movf	?i1___awmod,w,c
  6538  001362  6EDF               	movwf	indf2,c
  6539                           
  6540                           ;messages.c: 59: qmsg->full = 1;
  6541  001364  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  6542  001368  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  6543  00136C  0E01               	movlw	1
  6544  00136E  6EDF               	movwf	indf2,c
  6545                           
  6546                           ;messages.c: 60: return (1);
  6547  001370  0E01               	movlw	1
  6548  001372  0012               	return	
  6549  001374                     __end_of_send_msg:
  6550                           	opt stack 0
  6551                           pclatu	equ	0xFFB
  6552                           pclath	equ	0xFFA
  6553                           tblptru	equ	0xFF8
  6554                           tblptrh	equ	0xFF7
  6555                           tblptrl	equ	0xFF6
  6556                           tablat	equ	0xFF5
  6557                           prodh	equ	0xFF4
  6558                           prodl	equ	0xFF3
  6559                           intcon	equ	0xFF2
  6560                           intcon2	equ	0xFF1
  6561                           postinc0	equ	0xFEE
  6562                           fsr0h	equ	0xFEA
  6563                           fsr0l	equ	0xFE9
  6564                           wreg	equ	0xFE8
  6565                           indf1	equ	0xFE7
  6566                           postinc1	equ	0xFE6
  6567                           postdec1	equ	0xFE5
  6568                           fsr1h	equ	0xFE2
  6569                           fsr1l	equ	0xFE1
  6570                           bsr	equ	0xFE0
  6571                           indf2	equ	0xFDF
  6572                           postinc2	equ	0xFDE
  6573                           postdec2	equ	0xFDD
  6574                           fsr2h	equ	0xFDA
  6575                           fsr2l	equ	0xFD9
  6576                           status	equ	0xFD8
  6577                           
  6578 ;; *************** function i1_memcpy *****************
  6579 ;; Defined at:
  6580 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;  d1              2    0[COMRAM] PTR void 
  6583 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6584 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6585 ;;		 -> main@msgbuffer(11), 
  6586 ;;  s1              2    2[COMRAM] PTR const void 
  6587 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6588 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6589 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6590 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  6591 ;;  n               2    4[COMRAM] unsigned int 
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6594 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6595 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6596 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6597 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  6598 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6599 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6600 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6601 ;;		 -> main@msgbuffer(11), 
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  2    0[COMRAM] PTR void 
  6604 ;; Registers used:
  6605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6611 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6612 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6614 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6615 ;;Total ram usage:       10 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; Hardware stack levels required when called:    6
  6618 ;; This function calls:
  6619 ;;		Nothing
  6620 ;; This function is called by:
  6621 ;;		_send_msg
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           	psect	text35
  6626  001C2C                     __ptext35:
  6627                           	opt stack 0
  6628  001C2C                     i1_memcpy:
  6629                           	opt stack 16
  6630                           
  6631                           ;incstack = 0
  6632  001C2C  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6633  001C30  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6634  001C34  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6635  001C38  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6636  001C3C  D00E               	goto	i1l3669
  6637  001C3E                     i1l3663:
  6638  001C3E  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6639  001C42  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6640  001C46  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6641  001C4A  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6642  001C4E  CFDF FFE7          	movff	indf2,indf1
  6643  001C52  4A09               	infsnz	i1memcpy@s,f,c
  6644  001C54  2A0A               	incf	i1memcpy@s+1,f,c
  6645  001C56  4A07               	infsnz	i1memcpy@d,f,c
  6646  001C58  2A08               	incf	i1memcpy@d+1,f,c
  6647  001C5A                     i1l3669:
  6648  001C5A  0605               	decf	i1memcpy@n,f,c
  6649  001C5C  A0D8               	btfss	status,0,c
  6650  001C5E  0606               	decf	i1memcpy@n+1,f,c
  6651  001C60  2805               	incf	i1memcpy@n& (0+255),w,c
  6652  001C62  B4D8               	btfsc	status,2,c
  6653  001C64  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6654  001C66  B4D8               	btfsc	status,2,c
  6655                           
  6656                           ;	Return value of i1_memcpy is never used
  6657  001C68  0012               	return	
  6658  001C6A  D7E9               	goto	i1l3663
  6659  001C6C                     __end_ofi1_memcpy:
  6660                           	opt stack 0
  6661                           pclatu	equ	0xFFB
  6662                           pclath	equ	0xFFA
  6663                           tblptru	equ	0xFF8
  6664                           tblptrh	equ	0xFF7
  6665                           tblptrl	equ	0xFF6
  6666                           tablat	equ	0xFF5
  6667                           prodh	equ	0xFF4
  6668                           prodl	equ	0xFF3
  6669                           intcon	equ	0xFF2
  6670                           intcon2	equ	0xFF1
  6671                           postinc0	equ	0xFEE
  6672                           fsr0h	equ	0xFEA
  6673                           fsr0l	equ	0xFE9
  6674                           wreg	equ	0xFE8
  6675                           indf1	equ	0xFE7
  6676                           postinc1	equ	0xFE6
  6677                           postdec1	equ	0xFE5
  6678                           fsr1h	equ	0xFE2
  6679                           fsr1l	equ	0xFE1
  6680                           bsr	equ	0xFE0
  6681                           indf2	equ	0xFDF
  6682                           postinc2	equ	0xFDE
  6683                           postdec2	equ	0xFDD
  6684                           fsr2h	equ	0xFDA
  6685                           fsr2l	equ	0xFD9
  6686                           status	equ	0xFD8
  6687                           
  6688 ;; *************** function i1___awmod *****************
  6689 ;; Defined at:
  6690 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  dividend        2    0[COMRAM] int 
  6693 ;;  divisor         2    2[COMRAM] int 
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;  __awmod         1    6[COMRAM] unsigned char 
  6696 ;;  __awmod         1    5[COMRAM] unsigned char 
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  2    0[COMRAM] int 
  6699 ;; Registers used:
  6700 ;;		wreg, status,2, status,0, prodl
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6706 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6707 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6708 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6709 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6710 ;;Total ram usage:        7 bytes
  6711 ;; Hardware stack levels used:    1
  6712 ;; Hardware stack levels required when called:    6
  6713 ;; This function calls:
  6714 ;;		Nothing
  6715 ;; This function is called by:
  6716 ;;		_send_msg
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text36
  6721  0014C8                     __ptext36:
  6722                           	opt stack 0
  6723  0014C8                     i1___awmod:
  6724                           	opt stack 16
  6725                           
  6726                           ;incstack = 0
  6727  0014C8  6E05               	movwf	??i1___awmod& (0+255),c
  6728  0014CA  0E00               	movlw	0
  6729  0014CC  6E07               	movwf	i1___awmod@sign,c
  6730  0014CE  5005               	movf	??i1___awmod& (0+255),w,c
  6731  0014D0  5002               	movf	i1___awmod@dividend+1,w,c
  6732  0014D2  0A80               	xorlw	128
  6733  0014D4  6EF3               	movwf	prodl,c
  6734  0014D6  0E80               	movlw	128
  6735  0014D8  5CF3               	subwf	prodl,w,c
  6736  0014DA  0E00               	movlw	0
  6737  0014DC  B4D8               	btfsc	status,2,c
  6738  0014DE  5C01               	subwf	i1___awmod@dividend,w,c
  6739  0014E0  B0D8               	btfsc	status,0,c
  6740  0014E2  D008               	goto	i1l3689
  6741  0014E4  6C01               	negf	i1___awmod@dividend,c
  6742  0014E6  1E02               	comf	i1___awmod@dividend+1,f,c
  6743  0014E8  B0D8               	btfsc	status,0,c
  6744  0014EA  2A02               	incf	i1___awmod@dividend+1,f,c
  6745  0014EC  6E05               	movwf	??i1___awmod& (0+255),c
  6746  0014EE  0E01               	movlw	1
  6747  0014F0  6E07               	movwf	i1___awmod@sign,c
  6748  0014F2  5005               	movf	??i1___awmod& (0+255),w,c
  6749  0014F4                     i1l3689:
  6750  0014F4  5004               	movf	i1___awmod@divisor+1,w,c
  6751  0014F6  0A80               	xorlw	128
  6752  0014F8  6EF3               	movwf	prodl,c
  6753  0014FA  0E80               	movlw	128
  6754  0014FC  5CF3               	subwf	prodl,w,c
  6755  0014FE  0E00               	movlw	0
  6756  001500  B4D8               	btfsc	status,2,c
  6757  001502  5C03               	subwf	i1___awmod@divisor,w,c
  6758  001504  B0D8               	btfsc	status,0,c
  6759  001506  D004               	goto	i1l3693
  6760  001508  6C03               	negf	i1___awmod@divisor,c
  6761  00150A  1E04               	comf	i1___awmod@divisor+1,f,c
  6762  00150C  B0D8               	btfsc	status,0,c
  6763  00150E  2A04               	incf	i1___awmod@divisor+1,f,c
  6764  001510                     i1l3693:
  6765  001510  5004               	movf	i1___awmod@divisor+1,w,c
  6766  001512  1003               	iorwf	i1___awmod@divisor,w,c
  6767  001514  B4D8               	btfsc	status,2,c
  6768  001516  D01A               	goto	i1l3709
  6769  001518  6E05               	movwf	??i1___awmod& (0+255),c
  6770  00151A  0E01               	movlw	1
  6771  00151C  6E06               	movwf	i1___awmod@counter,c
  6772  00151E  5005               	movf	??i1___awmod& (0+255),w,c
  6773  001520  D004               	goto	i1l3699
  6774  001522                     i1l3697:
  6775  001522  90D8               	bcf	status,0,c
  6776  001524  3603               	rlcf	i1___awmod@divisor,f,c
  6777  001526  3604               	rlcf	i1___awmod@divisor+1,f,c
  6778  001528  2A06               	incf	i1___awmod@counter,f,c
  6779  00152A                     i1l3699:
  6780  00152A  AE04               	btfss	i1___awmod@divisor+1,7,c
  6781  00152C  D7FA               	goto	i1l3697
  6782  00152E                     i1l3701:
  6783  00152E  5003               	movf	i1___awmod@divisor,w,c
  6784  001530  5C01               	subwf	i1___awmod@dividend,w,c
  6785  001532  5004               	movf	i1___awmod@divisor+1,w,c
  6786  001534  5802               	subwfb	i1___awmod@dividend+1,w,c
  6787  001536  A0D8               	btfss	status,0,c
  6788  001538  D004               	goto	i1l3705
  6789  00153A  5003               	movf	i1___awmod@divisor,w,c
  6790  00153C  5E01               	subwf	i1___awmod@dividend,f,c
  6791  00153E  5004               	movf	i1___awmod@divisor+1,w,c
  6792  001540  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6793  001542                     i1l3705:
  6794  001542  90D8               	bcf	status,0,c
  6795  001544  3204               	rrcf	i1___awmod@divisor+1,f,c
  6796  001546  3203               	rrcf	i1___awmod@divisor,f,c
  6797  001548  2E06               	decfsz	i1___awmod@counter,f,c
  6798  00154A  D7F1               	goto	i1l3701
  6799  00154C                     i1l3709:
  6800  00154C  5007               	movf	i1___awmod@sign,w,c
  6801  00154E  B4D8               	btfsc	status,2,c
  6802  001550  D004               	goto	i1l3713
  6803  001552  6C01               	negf	i1___awmod@dividend,c
  6804  001554  1E02               	comf	i1___awmod@dividend+1,f,c
  6805  001556  B0D8               	btfsc	status,0,c
  6806  001558  2A02               	incf	i1___awmod@dividend+1,f,c
  6807  00155A                     i1l3713:
  6808  00155A  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6809  00155E  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6810  001562  0012               	return	
  6811  001564                     __end_ofi1___awmod:
  6812                           	opt stack 0
  6813                           pclatu	equ	0xFFB
  6814                           pclath	equ	0xFFA
  6815                           tblptru	equ	0xFF8
  6816                           tblptrh	equ	0xFF7
  6817                           tblptrl	equ	0xFF6
  6818                           tablat	equ	0xFF5
  6819                           prodh	equ	0xFF4
  6820                           prodl	equ	0xFF3
  6821                           intcon	equ	0xFF2
  6822                           intcon2	equ	0xFF1
  6823                           postinc0	equ	0xFEE
  6824                           fsr0h	equ	0xFEA
  6825                           fsr0l	equ	0xFE9
  6826                           wreg	equ	0xFE8
  6827                           indf1	equ	0xFE7
  6828                           postinc1	equ	0xFE6
  6829                           postdec1	equ	0xFE5
  6830                           fsr1h	equ	0xFE2
  6831                           fsr1l	equ	0xFE1
  6832                           bsr	equ	0xFE0
  6833                           indf2	equ	0xFDF
  6834                           postinc2	equ	0xFDE
  6835                           postdec2	equ	0xFDD
  6836                           fsr2h	equ	0xFDA
  6837                           fsr2l	equ	0xFD9
  6838                           status	equ	0xFD8
  6839                           
  6840 ;; *************** function _timer0_int_handler *****************
  6841 ;; Defined at:
  6842 ;;		line 16 in file "../src/user_interrupts.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;		None
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;		None
  6847 ;; Return value:  Size  Location     Type
  6848 ;;		None               void
  6849 ;; Registers used:
  6850 ;;		wreg, status,2, status,0, cstack
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6860 ;;Total ram usage:        0 bytes
  6861 ;; Hardware stack levels used:    1
  6862 ;; Hardware stack levels required when called:    7
  6863 ;; This function calls:
  6864 ;;		_WriteTimer0
  6865 ;; This function is called by:
  6866 ;;		_InterruptHandlerLow
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text37
  6871  001E88                     __ptext37:
  6872                           	opt stack 0
  6873  001E88                     _timer0_int_handler:
  6874                           	opt stack 18
  6875                           
  6876                           ;user_interrupts.c: 17: WriteTimer0(0);
  6877                           
  6878                           ;incstack = 0
  6879  001E88  0E00               	movlw	0
  6880  001E8A  6E02               	movwf	WriteTimer0@timer0+1,c
  6881  001E8C  0E00               	movlw	0
  6882  001E8E  6E01               	movwf	WriteTimer0@timer0,c
  6883  001E90  EC4D  F00F         	call	_WriteTimer0	;wreg free
  6884                           
  6885                           ;user_interrupts.c: 33: UART_timeout++;
  6886  001E94  4A39               	infsnz	_UART_timeout,f,c
  6887  001E96  2A3A               	incf	_UART_timeout+1,f,c
  6888  001E98  0012               	return	
  6889  001E9A                     __end_of_timer0_int_handler:
  6890                           	opt stack 0
  6891                           pclatu	equ	0xFFB
  6892                           pclath	equ	0xFFA
  6893                           tblptru	equ	0xFF8
  6894                           tblptrh	equ	0xFF7
  6895                           tblptrl	equ	0xFF6
  6896                           tablat	equ	0xFF5
  6897                           prodh	equ	0xFF4
  6898                           prodl	equ	0xFF3
  6899                           intcon	equ	0xFF2
  6900                           intcon2	equ	0xFF1
  6901                           postinc0	equ	0xFEE
  6902                           fsr0h	equ	0xFEA
  6903                           fsr0l	equ	0xFE9
  6904                           wreg	equ	0xFE8
  6905                           indf1	equ	0xFE7
  6906                           postinc1	equ	0xFE6
  6907                           postdec1	equ	0xFE5
  6908                           fsr1h	equ	0xFE2
  6909                           fsr1l	equ	0xFE1
  6910                           bsr	equ	0xFE0
  6911                           indf2	equ	0xFDF
  6912                           postinc2	equ	0xFDE
  6913                           postdec2	equ	0xFDD
  6914                           fsr2h	equ	0xFDA
  6915                           fsr2l	equ	0xFD9
  6916                           status	equ	0xFD8
  6917                           
  6918 ;; *************** function _WriteTimer0 *****************
  6919 ;; Defined at:
  6920 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  timer0          2    0[COMRAM] unsigned int 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;  timer           2    2[COMRAM] struct Timers
  6925 ;; Return value:  Size  Location     Type
  6926 ;;		None               void
  6927 ;; Registers used:
  6928 ;;		None
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6935 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6937 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6938 ;;Total ram usage:        4 bytes
  6939 ;; Hardware stack levels used:    1
  6940 ;; Hardware stack levels required when called:    6
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_timer0_int_handler
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           	psect	text38
  6949  001E9A                     __ptext38:
  6950                           	opt stack 0
  6951  001E9A                     _WriteTimer0:
  6952                           	opt stack 18
  6953                           
  6954                           ;incstack = 0
  6955  001E9A  C001  F003         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6956  001E9E  C002  F004         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6957  001EA2  C004  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6958  001EA6  C003  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6959  001EAA  0012               	return	
  6960  001EAC                     __end_of_WriteTimer0:
  6961                           	opt stack 0
  6962                           pclatu	equ	0xFFB
  6963                           pclath	equ	0xFFA
  6964                           tblptru	equ	0xFF8
  6965                           tblptrh	equ	0xFF7
  6966                           tblptrl	equ	0xFF6
  6967                           tablat	equ	0xFF5
  6968                           prodh	equ	0xFF4
  6969                           prodl	equ	0xFF3
  6970                           intcon	equ	0xFF2
  6971                           intcon2	equ	0xFF1
  6972                           postinc0	equ	0xFEE
  6973                           fsr0h	equ	0xFEA
  6974                           fsr0l	equ	0xFE9
  6975                           wreg	equ	0xFE8
  6976                           indf1	equ	0xFE7
  6977                           postinc1	equ	0xFE6
  6978                           postdec1	equ	0xFE5
  6979                           fsr1h	equ	0xFE2
  6980                           fsr1l	equ	0xFE1
  6981                           bsr	equ	0xFE0
  6982                           indf2	equ	0xFDF
  6983                           postinc2	equ	0xFDE
  6984                           postdec2	equ	0xFDD
  6985                           fsr2h	equ	0xFDA
  6986                           fsr2l	equ	0xFD9
  6987                           status	equ	0xFD8
  6988                           
  6989 ;; *************** function _adc_int_handler *****************
  6990 ;; Defined at:
  6991 ;;		line 70 in file "../src/user_interrupts.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;		None
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;		None
  6996 ;; Return value:  Size  Location     Type
  6997 ;;		None               void
  6998 ;; Registers used:
  6999 ;;		None
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7009 ;;Total ram usage:        0 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; Hardware stack levels required when called:    6
  7012 ;; This function calls:
  7013 ;;		Nothing
  7014 ;; This function is called by:
  7015 ;;		_InterruptHandlerLow
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           	psect	text39
  7020  001EDE                     __ptext39:
  7021                           	opt stack 0
  7022  001EDE                     _adc_int_handler:
  7023                           	opt stack 19
  7024                           
  7025                           ;incstack = 0
  7026  001EDE  0012               	return	
  7027  001EE0                     __end_of_adc_int_handler:
  7028                           	opt stack 0
  7029                           pclatu	equ	0xFFB
  7030                           pclath	equ	0xFFA
  7031                           tblptru	equ	0xFF8
  7032                           tblptrh	equ	0xFF7
  7033                           tblptrl	equ	0xFF6
  7034                           tablat	equ	0xFF5
  7035                           prodh	equ	0xFF4
  7036                           prodl	equ	0xFF3
  7037                           intcon	equ	0xFF2
  7038                           intcon2	equ	0xFF1
  7039                           postinc0	equ	0xFEE
  7040                           fsr0h	equ	0xFEA
  7041                           fsr0l	equ	0xFE9
  7042                           wreg	equ	0xFE8
  7043                           indf1	equ	0xFE7
  7044                           postinc1	equ	0xFE6
  7045                           postdec1	equ	0xFE5
  7046                           fsr1h	equ	0xFE2
  7047                           fsr1l	equ	0xFE1
  7048                           bsr	equ	0xFE0
  7049                           indf2	equ	0xFDF
  7050                           postinc2	equ	0xFDE
  7051                           postdec2	equ	0xFDD
  7052                           fsr2h	equ	0xFDA
  7053                           fsr2l	equ	0xFD9
  7054                           status	equ	0xFD8
  7055                           
  7056 ;; *************** function _InterruptHandlerHigh *****************
  7057 ;; Defined at:
  7058 ;;		line 84 in file "../src/interrupts.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;		None
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;		None
  7063 ;; Return value:  Size  Location     Type
  7064 ;;		None               void
  7065 ;; Registers used:
  7066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7074 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7075 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7076 ;;Total ram usage:       14 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:    5
  7079 ;; This function calls:
  7080 ;;		_SleepIfOkay
  7081 ;;		_i2c_int_handler
  7082 ;; This function is called by:
  7083 ;;		Interrupt level 2
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           
  7087                           	psect	intcode
  7088  000008                     __pintcode:
  7089                           	opt stack 0
  7090  000008                     _InterruptHandlerHigh:
  7091                           	opt stack 16
  7092                           
  7093                           ;incstack = 0
  7094  000008  CFFA F07F          	movff	pclath,??_InterruptHandlerHigh
  7095  00000C  CFFB F080          	movff	pclatu,??_InterruptHandlerHigh+1
  7096  000010  EFAB  F00B         	goto	int_func
  7097                           pclatu	equ	0xFFB
  7098                           pclath	equ	0xFFA
  7099                           tblptru	equ	0xFF8
  7100                           tblptrh	equ	0xFF7
  7101                           tblptrl	equ	0xFF6
  7102                           tablat	equ	0xFF5
  7103                           prodh	equ	0xFF4
  7104                           prodl	equ	0xFF3
  7105                           intcon	equ	0xFF2
  7106                           intcon2	equ	0xFF1
  7107                           postinc0	equ	0xFEE
  7108                           fsr0h	equ	0xFEA
  7109                           fsr0l	equ	0xFE9
  7110                           wreg	equ	0xFE8
  7111                           indf1	equ	0xFE7
  7112                           postinc1	equ	0xFE6
  7113                           postdec1	equ	0xFE5
  7114                           fsr1h	equ	0xFE2
  7115                           fsr1l	equ	0xFE1
  7116                           bsr	equ	0xFE0
  7117                           indf2	equ	0xFDF
  7118                           postinc2	equ	0xFDE
  7119                           postdec2	equ	0xFDD
  7120                           fsr2h	equ	0xFDA
  7121                           fsr2l	equ	0xFD9
  7122                           status	equ	0xFD8
  7123                           
  7124                           	psect	intcode_body
  7125  001756                     __pintcode_body:
  7126                           	opt stack 16
  7127  001756                     int_func:
  7128                           	opt stack 16
  7129  001756  CFE9 F081          	movff	fsr0l,??_InterruptHandlerHigh+2
  7130  00175A  CFEA F082          	movff	fsr0h,??_InterruptHandlerHigh+3
  7131  00175E  CFE1 F083          	movff	fsr1l,??_InterruptHandlerHigh+4
  7132  001762  CFE2 F084          	movff	fsr1h,??_InterruptHandlerHigh+5
  7133  001766  CFD9 F085          	movff	fsr2l,??_InterruptHandlerHigh+6
  7134  00176A  CFDA F086          	movff	fsr2h,??_InterruptHandlerHigh+7
  7135  00176E  CFF3 F087          	movff	prodl,??_InterruptHandlerHigh+8
  7136  001772  CFF4 F088          	movff	prodh,??_InterruptHandlerHigh+9
  7137  001776  CFF6 F089          	movff	tblptrl,??_InterruptHandlerHigh+10
  7138  00177A  CFF7 F08A          	movff	tblptrh,??_InterruptHandlerHigh+11
  7139  00177E  CFF8 F08B          	movff	tblptru,??_InterruptHandlerHigh+12
  7140  001782  CFF5 F08C          	movff	tablat,??_InterruptHandlerHigh+13
  7141                           
  7142                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  7143  001786  A69E               	btfss	3998,3,c	;volatile
  7144  001788  D003               	goto	i2l3851
  7145                           
  7146                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  7147  00178A  969E               	bcf	3998,3,c	;volatile
  7148                           
  7149                           ;interrupts.c: 94: i2c_int_handler();
  7150  00178C  EC69  F00F         	call	_i2c_int_handler	;wreg free
  7151  001790                     i2l3851:
  7152                           
  7153                           ;interrupts.c: 96: }
  7154                           ;interrupts.c: 108: SleepIfOkay();
  7155  001790  EC53  F00C         	call	_SleepIfOkay	;wreg free
  7156  001794  C08C  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  7157  001798  C08B  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  7158  00179C  C08A  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  7159  0017A0  C089  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  7160  0017A4  C088  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  7161  0017A8  C087  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  7162  0017AC  C086  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  7163  0017B0  C085  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  7164  0017B4  C084  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  7165  0017B8  C083  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  7166  0017BC  C082  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  7167  0017C0  C081  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  7168  0017C4  C080  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  7169  0017C8  C07F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  7170  0017CC  0011               	retfie		f
  7171  0017CE                     __end_of_InterruptHandlerHigh:
  7172                           	opt stack 0
  7173                           pclatu	equ	0xFFB
  7174                           pclath	equ	0xFFA
  7175                           tblptru	equ	0xFF8
  7176                           tblptrh	equ	0xFF7
  7177                           tblptrl	equ	0xFF6
  7178                           tablat	equ	0xFF5
  7179                           prodh	equ	0xFF4
  7180                           prodl	equ	0xFF3
  7181                           intcon	equ	0xFF2
  7182                           intcon2	equ	0xFF1
  7183                           postinc0	equ	0xFEE
  7184                           fsr0h	equ	0xFEA
  7185                           fsr0l	equ	0xFE9
  7186                           wreg	equ	0xFE8
  7187                           indf1	equ	0xFE7
  7188                           postinc1	equ	0xFE6
  7189                           postdec1	equ	0xFE5
  7190                           fsr1h	equ	0xFE2
  7191                           fsr1l	equ	0xFE1
  7192                           bsr	equ	0xFE0
  7193                           indf2	equ	0xFDF
  7194                           postinc2	equ	0xFDE
  7195                           postdec2	equ	0xFDD
  7196                           fsr2h	equ	0xFDA
  7197                           fsr2l	equ	0xFD9
  7198                           status	equ	0xFD8
  7199                           
  7200 ;; *************** function _i2c_int_handler *****************
  7201 ;; Defined at:
  7202 ;;		line 139 in file "../src/my_i2c.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;		None
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;		None
  7207 ;; Return value:  Size  Location     Type
  7208 ;;		None               void
  7209 ;; Registers used:
  7210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;Total ram usage:        0 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    4
  7223 ;; This function calls:
  7224 ;;		_i2c_master_int_handler
  7225 ;; This function is called by:
  7226 ;;		_InterruptHandlerHigh
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           	psect	text41
  7231  001ED2                     __ptext41:
  7232                           	opt stack 0
  7233  001ED2                     _i2c_int_handler:
  7234                           	opt stack 16
  7235                           
  7236                           ;my_i2c.c: 141: i2c_master_int_handler();
  7237                           
  7238                           ;incstack = 0
  7239  001ED2  EC28  F004         	call	_i2c_master_int_handler	;wreg free
  7240  001ED6  0012               	return	
  7241  001ED8                     __end_of_i2c_int_handler:
  7242                           	opt stack 0
  7243                           pclatu	equ	0xFFB
  7244                           pclath	equ	0xFFA
  7245                           tblptru	equ	0xFF8
  7246                           tblptrh	equ	0xFF7
  7247                           tblptrl	equ	0xFF6
  7248                           tablat	equ	0xFF5
  7249                           prodh	equ	0xFF4
  7250                           prodl	equ	0xFF3
  7251                           intcon	equ	0xFF2
  7252                           intcon2	equ	0xFF1
  7253                           postinc0	equ	0xFEE
  7254                           fsr0h	equ	0xFEA
  7255                           fsr0l	equ	0xFE9
  7256                           wreg	equ	0xFE8
  7257                           indf1	equ	0xFE7
  7258                           postinc1	equ	0xFE6
  7259                           postdec1	equ	0xFE5
  7260                           fsr1h	equ	0xFE2
  7261                           fsr1l	equ	0xFE1
  7262                           bsr	equ	0xFE0
  7263                           indf2	equ	0xFDF
  7264                           postinc2	equ	0xFDE
  7265                           postdec2	equ	0xFDD
  7266                           fsr2h	equ	0xFDA
  7267                           fsr2l	equ	0xFD9
  7268                           status	equ	0xFD8
  7269                           
  7270 ;; *************** function _i2c_master_int_handler *****************
  7271 ;; Defined at:
  7272 ;;		line 147 in file "../src/my_i2c.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;		None
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;		None
  7277 ;; Return value:  Size  Location     Type
  7278 ;;		None               void
  7279 ;; Registers used:
  7280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7288 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7289 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7290 ;;Total ram usage:        5 bytes
  7291 ;; Hardware stack levels used:    1
  7292 ;; Hardware stack levels required when called:    3
  7293 ;; This function calls:
  7294 ;;		_ToMainHigh_sendmsg
  7295 ;;		_i2c_master_recv
  7296 ;; This function is called by:
  7297 ;;		_i2c_int_handler
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           	psect	text42
  7302  000850                     __ptext42:
  7303                           	opt stack 0
  7304  000850                     _i2c_master_int_handler:
  7305                           	opt stack 16
  7306                           
  7307                           ;my_i2c.c: 150: if(!(ic_ptr->status == 0x5)) {
  7308                           
  7309                           ;incstack = 0
  7310  000850  0100               	movlb	0	; () banked
  7311  000852  EE20 F00D          	lfsr	2,13
  7312  000856  0100               	movlb	0	; () banked
  7313  000858  51C8               	movf	_ic_ptr& (0+255),w,b
  7314  00085A  26D9               	addwf	fsr2l,f,c
  7315  00085C  0100               	movlb	0	; () banked
  7316  00085E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7317  000860  22DA               	addwfc	fsr2h,f,c
  7318  000862  50DF               	movf	indf2,w,c
  7319  000864  0A05               	xorlw	5
  7320  000866  B4D8               	btfsc	status,2,c
  7321  000868  0012               	return	
  7322  00086A  D1B5               	goto	i2l3955
  7323  00086C                     i2l3897:
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;my_i2c.c: 154: {
  7327                           ;my_i2c.c: 155: if(ic_ptr->slave_addr % 2){
  7328  00086C  0100               	movlb	0	; () banked
  7329  00086E  EE20 F01C          	lfsr	2,28
  7330  000872  0100               	movlb	0	; () banked
  7331  000874  51C8               	movf	_ic_ptr& (0+255),w,b
  7332  000876  26D9               	addwf	fsr2l,f,c
  7333  000878  0100               	movlb	0	; () banked
  7334  00087A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7335  00087C  22DA               	addwfc	fsr2h,f,c
  7336  00087E  50DF               	movf	indf2,w,c
  7337  000880  0100               	movlb	0	; () banked
  7338  000882  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7339  000884  0100               	movlb	0	; () banked
  7340  000886  A17A               	btfss	??_i2c_master_int_handler& (0+255),0,b
  7341  000888  D00B               	goto	i2l3901
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;my_i2c.c: 157: ic_ptr->status = 0x7;
  7345  00088A  0100               	movlb	0	; () banked
  7346  00088C  EE20 F00D          	lfsr	2,13
  7347  000890  0100               	movlb	0	; () banked
  7348  000892  51C8               	movf	_ic_ptr& (0+255),w,b
  7349  000894  26D9               	addwf	fsr2l,f,c
  7350  000896  0100               	movlb	0	; () banked
  7351  000898  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7352  00089A  22DA               	addwfc	fsr2h,f,c
  7353  00089C  0E07               	movlw	7
  7354  00089E  D00A               	goto	L7
  7355  0008A0                     i2l3901:
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;my_i2c.c: 160: ic_ptr->status = 0x9;
  7359  0008A0  0100               	movlb	0	; () banked
  7360  0008A2  EE20 F00D          	lfsr	2,13
  7361  0008A6  0100               	movlb	0	; () banked
  7362  0008A8  51C8               	movf	_ic_ptr& (0+255),w,b
  7363  0008AA  26D9               	addwf	fsr2l,f,c
  7364  0008AC  0100               	movlb	0	; () banked
  7365  0008AE  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7366  0008B0  22DA               	addwfc	fsr2h,f,c
  7367  0008B2  0E09               	movlw	9
  7368  0008B4                     L7:
  7369  0008B4  6EDF               	movwf	indf2,c
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;my_i2c.c: 161: }
  7373                           ;my_i2c.c: 162: ic_ptr->bufind = 0;
  7374  0008B6  0100               	movlb	0	; () banked
  7375  0008B8  EE20 F00B          	lfsr	2,11
  7376  0008BC  0100               	movlb	0	; () banked
  7377  0008BE  51C8               	movf	_ic_ptr& (0+255),w,b
  7378  0008C0  26D9               	addwf	fsr2l,f,c
  7379  0008C2  0100               	movlb	0	; () banked
  7380  0008C4  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7381  0008C6  22DA               	addwfc	fsr2h,f,c
  7382  0008C8  0E00               	movlw	0
  7383  0008CA  6EDF               	movwf	indf2,c
  7384                           
  7385                           ;my_i2c.c: 163: SSPBUF = ic_ptr->slave_addr;
  7386  0008CC  0100               	movlb	0	; () banked
  7387  0008CE  EE20 F01C          	lfsr	2,28
  7388  0008D2  0100               	movlb	0	; () banked
  7389  0008D4  51C8               	movf	_ic_ptr& (0+255),w,b
  7390  0008D6  26D9               	addwf	fsr2l,f,c
  7391  0008D8  0100               	movlb	0	; () banked
  7392  0008DA  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7393  0008DC  22DA               	addwfc	fsr2h,f,c
  7394  0008DE  50DF               	movf	indf2,w,c
  7395  0008E0  6EC9               	movwf	4041,c	;volatile
  7396                           
  7397                           ;my_i2c.c: 165: break;
  7398  0008E2  0012               	return	
  7399  0008E4                     i2l365:
  7400                           
  7401                           ; BSR set to: 0
  7402                           ;my_i2c.c: 168: {
  7403                           ;my_i2c.c: 169: if(!SSPCON2bits.ACKSTAT){
  7404  0008E4  BCC5               	btfsc	4037,6,c	;volatile
  7405  0008E6  D070               	goto	i2l366
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;my_i2c.c: 170: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7409  0008E8  0100               	movlb	0	; () banked
  7410  0008EA  EE20 F01B          	lfsr	2,27
  7411  0008EE  0100               	movlb	0	; () banked
  7412  0008F0  51C8               	movf	_ic_ptr& (0+255),w,b
  7413  0008F2  26D9               	addwf	fsr2l,f,c
  7414  0008F4  0100               	movlb	0	; () banked
  7415  0008F6  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7416  0008F8  22DA               	addwfc	fsr2h,f,c
  7417  0008FA  50DF               	movf	indf2,w,c
  7418  0008FC  0100               	movlb	0	; () banked
  7419  0008FE  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7420  000900  0100               	movlb	0	; () banked
  7421  000902  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7422  000904  0D01               	mullw	1
  7423  000906  0E10               	movlw	16
  7424  000908  26F3               	addwf	prodl,f,c
  7425  00090A  0E00               	movlw	0
  7426  00090C  22F4               	addwfc	prodh,f,c
  7427  00090E  50F3               	movf	prodl,w,c
  7428  000910  0100               	movlb	0	; () banked
  7429  000912  0100               	movlb	0	; () banked
  7430  000914  25C8               	addwf	_ic_ptr& (0+255),w,b
  7431  000916  6ED9               	movwf	fsr2l,c
  7432  000918  50F4               	movf	prodh,w,c
  7433  00091A  0100               	movlb	0	; () banked
  7434  00091C  0100               	movlb	0	; () banked
  7435  00091E  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7436  000920  6EDA               	movwf	fsr2h,c
  7437  000922  50DF               	movf	indf2,w,c
  7438  000924  6EC9               	movwf	4041,c	;volatile
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;my_i2c.c: 172: if(ic_ptr->outbuflen > ic_ptr->outbufind+1){
  7442  000926  0100               	movlb	0	; () banked
  7443  000928  EE20 F01A          	lfsr	2,26
  7444  00092C  0100               	movlb	0	; () banked
  7445  00092E  51C8               	movf	_ic_ptr& (0+255),w,b
  7446  000930  26D9               	addwf	fsr2l,f,c
  7447  000932  0100               	movlb	0	; () banked
  7448  000934  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7449  000936  22DA               	addwfc	fsr2h,f,c
  7450  000938  50DF               	movf	indf2,w,c
  7451  00093A  0100               	movlb	0	; () banked
  7452  00093C  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7453  00093E  6B7B               	clrf	(??_i2c_master_int_handler+1)& (0+255),b
  7454  000940  0100               	movlb	0	; () banked
  7455  000942  EE20 F01B          	lfsr	2,27
  7456  000946  0100               	movlb	0	; () banked
  7457  000948  51C8               	movf	_ic_ptr& (0+255),w,b
  7458  00094A  26D9               	addwf	fsr2l,f,c
  7459  00094C  0100               	movlb	0	; () banked
  7460  00094E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7461  000950  22DA               	addwfc	fsr2h,f,c
  7462  000952  50DF               	movf	indf2,w,c
  7463  000954  0100               	movlb	0	; () banked
  7464  000956  6F7C               	movwf	(??_i2c_master_int_handler+2)& (0+255),b
  7465  000958  6B7D               	clrf	(??_i2c_master_int_handler+3)& (0+255),b
  7466  00095A  0E01               	movlw	1
  7467  00095C  0100               	movlb	0	; () banked
  7468  00095E  277C               	addwf	(??_i2c_master_int_handler+2)& (0+255),f,b
  7469  000960  0E00               	movlw	0
  7470  000962  237D               	addwfc	(??_i2c_master_int_handler+3)& (0+255),f,b
  7471  000964  0100               	movlb	0	; () banked
  7472  000966  517D               	movf	(??_i2c_master_int_handler+3)& (0+255),w,b
  7473  000968  0A80               	xorlw	128
  7474  00096A  0100               	movlb	0	; () banked
  7475  00096C  6F7E               	movwf	(??_i2c_master_int_handler+4)& (0+255),b
  7476  00096E  0100               	movlb	0	; () banked
  7477  000970  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7478  000972  0100               	movlb	0	; () banked
  7479  000974  5D7C               	subwf	(??_i2c_master_int_handler+2)& (0+255),w,b
  7480  000976  0100               	movlb	0	; () banked
  7481  000978  517B               	movf	(??_i2c_master_int_handler+1)& (0+255),w,b
  7482  00097A  0A80               	xorlw	128
  7483  00097C  0100               	movlb	0	; () banked
  7484  00097E  597E               	subwfb	(??_i2c_master_int_handler+4)& (0+255),w,b
  7485  000980  B0D8               	btfsc	status,0,c
  7486  000982  D016               	goto	i2l3909
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;my_i2c.c: 173: ic_ptr->outbufind++;
  7490  000984  0100               	movlb	0	; () banked
  7491  000986  EE20 F01B          	lfsr	2,27
  7492  00098A  0100               	movlb	0	; () banked
  7493  00098C  51C8               	movf	_ic_ptr& (0+255),w,b
  7494  00098E  26D9               	addwf	fsr2l,f,c
  7495  000990  0100               	movlb	0	; () banked
  7496  000992  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7497  000994  22DA               	addwfc	fsr2h,f,c
  7498  000996  2ADF               	incf	indf2,f,c
  7499                           
  7500                           ;my_i2c.c: 174: ic_ptr->status = 0x9;
  7501  000998  0100               	movlb	0	; () banked
  7502  00099A  EE20 F00D          	lfsr	2,13
  7503  00099E  0100               	movlb	0	; () banked
  7504  0009A0  51C8               	movf	_ic_ptr& (0+255),w,b
  7505  0009A2  26D9               	addwf	fsr2l,f,c
  7506  0009A4  0100               	movlb	0	; () banked
  7507  0009A6  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7508  0009A8  22DA               	addwfc	fsr2h,f,c
  7509  0009AA  0E09               	movlw	9
  7510  0009AC  6EDF               	movwf	indf2,c
  7511                           
  7512                           ;my_i2c.c: 175: }else{
  7513  0009AE  0012               	return	
  7514  0009B0                     i2l3909:
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;my_i2c.c: 177: ic_ptr->status = 0xD;
  7518  0009B0  0100               	movlb	0	; () banked
  7519  0009B2  EE20 F00D          	lfsr	2,13
  7520  0009B6  0100               	movlb	0	; () banked
  7521  0009B8  51C8               	movf	_ic_ptr& (0+255),w,b
  7522  0009BA  26D9               	addwf	fsr2l,f,c
  7523  0009BC  0100               	movlb	0	; () banked
  7524  0009BE  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7525  0009C0  22DA               	addwfc	fsr2h,f,c
  7526  0009C2  0E0D               	movlw	13
  7527  0009C4  6EDF               	movwf	indf2,c
  7528  0009C6  0012               	return	
  7529  0009C8                     i2l366:
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;my_i2c.c: 181: SSPCON2bits.RSEN = 1;
  7533  0009C8  82C5               	bsf	4037,1,c	;volatile
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;my_i2c.c: 182: ic_ptr->status = 0xA;
  7537  0009CA  0100               	movlb	0	; () banked
  7538  0009CC  EE20 F00D          	lfsr	2,13
  7539  0009D0  0100               	movlb	0	; () banked
  7540  0009D2  51C8               	movf	_ic_ptr& (0+255),w,b
  7541  0009D4  26D9               	addwf	fsr2l,f,c
  7542  0009D6  0100               	movlb	0	; () banked
  7543  0009D8  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7544  0009DA  22DA               	addwfc	fsr2h,f,c
  7545  0009DC  0E0A               	movlw	10
  7546  0009DE  6EDF               	movwf	indf2,c
  7547  0009E0  0012               	return	
  7548  0009E2                     i2l370:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;my_i2c.c: 187: {
  7552                           ;my_i2c.c: 188: if(!SSPCON2bits.ACKSTAT){
  7553  0009E2  BCC5               	btfsc	4037,6,c	;volatile
  7554  0009E4  D00D               	goto	i2l3917
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;my_i2c.c: 189: SSPCON2bits.RCEN = 1;
  7558  0009E6  86C5               	bsf	4037,3,c	;volatile
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;my_i2c.c: 190: ic_ptr->status = 0xC;
  7562  0009E8  0100               	movlb	0	; () banked
  7563  0009EA  EE20 F00D          	lfsr	2,13
  7564  0009EE  0100               	movlb	0	; () banked
  7565  0009F0  51C8               	movf	_ic_ptr& (0+255),w,b
  7566  0009F2  26D9               	addwf	fsr2l,f,c
  7567  0009F4  0100               	movlb	0	; () banked
  7568  0009F6  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7569  0009F8  22DA               	addwfc	fsr2h,f,c
  7570  0009FA  0E0C               	movlw	12
  7571  0009FC  6EDF               	movwf	indf2,c
  7572                           
  7573                           ;my_i2c.c: 191: } else {
  7574  0009FE  0012               	return	
  7575  000A00                     i2l3917:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;my_i2c.c: 193: if(ic_ptr->buffer[4] == 0x78)
  7579  000A00  0100               	movlb	0	; () banked
  7580  000A02  EE20 F004          	lfsr	2,4
  7581  000A06  0100               	movlb	0	; () banked
  7582  000A08  51C8               	movf	_ic_ptr& (0+255),w,b
  7583  000A0A  26D9               	addwf	fsr2l,f,c
  7584  000A0C  0100               	movlb	0	; () banked
  7585  000A0E  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7586  000A10  22DA               	addwfc	fsr2h,f,c
  7587  000A12  0E78               	movlw	120
  7588  000A14  62DF               	cpfseq	indf2,c
  7589  000A16  D001               	goto	i2l3921
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;my_i2c.c: 194: LATBbits.LATB2 = 1;
  7593  000A18  848A               	bsf	3978,2,c	;volatile
  7594  000A1A                     i2l3921:
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;my_i2c.c: 195: ToMainHigh_sendmsg(0, 46, ic_ptr->buffer);
  7598  000A1A  0100               	movlb	0	; () banked
  7599  000A1C  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7600  000A1E  0E2E               	movlw	46
  7601  000A20  0100               	movlb	0	; () banked
  7602  000A22  0100               	movlb	0	; () banked
  7603  000A24  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7604  000A26  0100               	movlb	0	; () banked
  7605  000A28  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7606  000A2A  0100               	movlb	0	; () banked
  7607  000A2C  0100               	movlb	0	; () banked
  7608  000A2E  C0C9  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7609  000A32  0100               	movlb	0	; () banked
  7610  000A34  0100               	movlb	0	; () banked
  7611  000A36  C0C8  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7612  000A3A  0E00               	movlw	0
  7613  000A3C  EC6E  F00E         	call	_ToMainHigh_sendmsg
  7614                           
  7615                           ;my_i2c.c: 196: LATBbits.LATB2 = 0;
  7616  000A40  948A               	bcf	3978,2,c	;volatile
  7617                           
  7618                           ;my_i2c.c: 197: ic_ptr->buflen = 0;
  7619  000A42  0100               	movlb	0	; () banked
  7620  000A44  EE20 F00A          	lfsr	2,10
  7621  000A48  0100               	movlb	0	; () banked
  7622  000A4A  51C8               	movf	_ic_ptr& (0+255),w,b
  7623  000A4C  26D9               	addwf	fsr2l,f,c
  7624  000A4E  0100               	movlb	0	; () banked
  7625  000A50  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7626  000A52  22DA               	addwfc	fsr2h,f,c
  7627  000A54  0E00               	movlw	0
  7628  000A56  6EDF               	movwf	indf2,c
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;my_i2c.c: 198: ic_ptr->status = 0x5;
  7632  000A58  0100               	movlb	0	; () banked
  7633  000A5A  EE20 F00D          	lfsr	2,13
  7634  000A5E  0100               	movlb	0	; () banked
  7635  000A60  51C8               	movf	_ic_ptr& (0+255),w,b
  7636  000A62  26D9               	addwf	fsr2l,f,c
  7637  000A64  0100               	movlb	0	; () banked
  7638  000A66  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7639  000A68  22DA               	addwfc	fsr2h,f,c
  7640  000A6A  0E05               	movlw	5
  7641  000A6C  6EDF               	movwf	indf2,c
  7642  000A6E  0012               	return	
  7643  000A70                     i2l374:
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;my_i2c.c: 203: {
  7647                           ;my_i2c.c: 204: LATBbits.LATB1 = 1;
  7648  000A70  828A               	bsf	3978,1,c	;volatile
  7649                           
  7650                           ;my_i2c.c: 205: LATBbits.LATB1 = 0;
  7651  000A72  928A               	bcf	3978,1,c	;volatile
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;my_i2c.c: 206: if(ic_ptr->bufind < ic_ptr->buflen){
  7655  000A74  0100               	movlb	0	; () banked
  7656  000A76  EE20 F00B          	lfsr	2,11
  7657  000A7A  0100               	movlb	0	; () banked
  7658  000A7C  51C8               	movf	_ic_ptr& (0+255),w,b
  7659  000A7E  26D9               	addwf	fsr2l,f,c
  7660  000A80  0100               	movlb	0	; () banked
  7661  000A82  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7662  000A84  22DA               	addwfc	fsr2h,f,c
  7663  000A86  50DF               	movf	indf2,w,c
  7664  000A88  0100               	movlb	0	; () banked
  7665  000A8A  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7666  000A8C  0100               	movlb	0	; () banked
  7667  000A8E  EE20 F00A          	lfsr	2,10
  7668  000A92  0100               	movlb	0	; () banked
  7669  000A94  51C8               	movf	_ic_ptr& (0+255),w,b
  7670  000A96  26D9               	addwf	fsr2l,f,c
  7671  000A98  0100               	movlb	0	; () banked
  7672  000A9A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7673  000A9C  22DA               	addwfc	fsr2h,f,c
  7674  000A9E  50DF               	movf	indf2,w,c
  7675  000AA0  0100               	movlb	0	; () banked
  7676  000AA2  5D7A               	subwf	??_i2c_master_int_handler& (0+255),w,b
  7677  000AA4  B0D8               	btfsc	status,0,c
  7678  000AA6  D030               	goto	i2l3937
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;my_i2c.c: 207: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
  7682  000AA8  0100               	movlb	0	; () banked
  7683  000AAA  EE20 F00B          	lfsr	2,11
  7684  000AAE  0100               	movlb	0	; () banked
  7685  000AB0  51C8               	movf	_ic_ptr& (0+255),w,b
  7686  000AB2  26D9               	addwf	fsr2l,f,c
  7687  000AB4  0100               	movlb	0	; () banked
  7688  000AB6  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7689  000AB8  22DA               	addwfc	fsr2h,f,c
  7690  000ABA  50DF               	movf	indf2,w,c
  7691  000ABC  0100               	movlb	0	; () banked
  7692  000ABE  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7693  000AC0  0100               	movlb	0	; () banked
  7694  000AC2  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7695  000AC4  0D01               	mullw	1
  7696  000AC6  50F3               	movf	prodl,w,c
  7697  000AC8  0100               	movlb	0	; () banked
  7698  000ACA  0100               	movlb	0	; () banked
  7699  000ACC  25C8               	addwf	_ic_ptr& (0+255),w,b
  7700  000ACE  6ED9               	movwf	fsr2l,c
  7701  000AD0  50F4               	movf	prodh,w,c
  7702  000AD2  0100               	movlb	0	; () banked
  7703  000AD4  0100               	movlb	0	; () banked
  7704  000AD6  21C9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7705  000AD8  6EDA               	movwf	fsr2h,c
  7706  000ADA  CFC9 FFDF          	movff	4041,indf2	;volatile
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;my_i2c.c: 208: ic_ptr->bufind++;
  7710  000ADE  0100               	movlb	0	; () banked
  7711  000AE0  EE20 F00B          	lfsr	2,11
  7712  000AE4  0100               	movlb	0	; () banked
  7713  000AE6  51C8               	movf	_ic_ptr& (0+255),w,b
  7714  000AE8  26D9               	addwf	fsr2l,f,c
  7715  000AEA  0100               	movlb	0	; () banked
  7716  000AEC  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7717  000AEE  22DA               	addwfc	fsr2h,f,c
  7718  000AF0  2ADF               	incf	indf2,f,c
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;my_i2c.c: 209: ic_ptr->status = 0x7;
  7722  000AF2  0100               	movlb	0	; () banked
  7723  000AF4  EE20 F00D          	lfsr	2,13
  7724  000AF8  0100               	movlb	0	; () banked
  7725  000AFA  51C8               	movf	_ic_ptr& (0+255),w,b
  7726  000AFC  26D9               	addwf	fsr2l,f,c
  7727  000AFE  0100               	movlb	0	; () banked
  7728  000B00  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7729  000B02  22DA               	addwfc	fsr2h,f,c
  7730  000B04  0E07               	movlw	7
  7731  000B06  6EDF               	movwf	indf2,c
  7732  000B08                     i2l3937:
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;my_i2c.c: 211: }
  7736                           ;my_i2c.c: 212: if(ic_ptr->bufind == ic_ptr->buflen){
  7737  000B08  0100               	movlb	0	; () banked
  7738  000B0A  EE20 F00B          	lfsr	2,11
  7739  000B0E  0100               	movlb	0	; () banked
  7740  000B10  51C8               	movf	_ic_ptr& (0+255),w,b
  7741  000B12  26D9               	addwf	fsr2l,f,c
  7742  000B14  0100               	movlb	0	; () banked
  7743  000B16  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7744  000B18  22DA               	addwfc	fsr2h,f,c
  7745  000B1A  0100               	movlb	0	; () banked
  7746  000B1C  EE10 F00A          	lfsr	1,10
  7747  000B20  0100               	movlb	0	; () banked
  7748  000B22  51C8               	movf	_ic_ptr& (0+255),w,b
  7749  000B24  26E1               	addwf	fsr1l,f,c
  7750  000B26  0100               	movlb	0	; () banked
  7751  000B28  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7752  000B2A  22E2               	addwfc	fsr1h,f,c
  7753  000B2C  50E7               	movf	indf1,w,c
  7754  000B2E  62DF               	cpfseq	indf2,c
  7755  000B30  D02A               	goto	i2l376
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;my_i2c.c: 213: ic_ptr->status = 0xB;
  7759  000B32  0100               	movlb	0	; () banked
  7760  000B34  EE20 F00D          	lfsr	2,13
  7761  000B38  0100               	movlb	0	; () banked
  7762  000B3A  51C8               	movf	_ic_ptr& (0+255),w,b
  7763  000B3C  26D9               	addwf	fsr2l,f,c
  7764  000B3E  0100               	movlb	0	; () banked
  7765  000B40  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7766  000B42  22DA               	addwfc	fsr2h,f,c
  7767  000B44  0E0B               	movlw	11
  7768  000B46  6EDF               	movwf	indf2,c
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;my_i2c.c: 216: ToMainHigh_sendmsg(ic_ptr->buflen, 45, ic_ptr->buffer);
  7772  000B48  0100               	movlb	0	; () banked
  7773  000B4A  6F7A               	movwf	??_i2c_master_int_handler& (0+255),b
  7774  000B4C  0E2D               	movlw	45
  7775  000B4E  0100               	movlb	0	; () banked
  7776  000B50  0100               	movlb	0	; () banked
  7777  000B52  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7778  000B54  0100               	movlb	0	; () banked
  7779  000B56  517A               	movf	??_i2c_master_int_handler& (0+255),w,b
  7780  000B58  0100               	movlb	0	; () banked
  7781  000B5A  0100               	movlb	0	; () banked
  7782  000B5C  C0C9  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7783  000B60  0100               	movlb	0	; () banked
  7784  000B62  0100               	movlb	0	; () banked
  7785  000B64  C0C8  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7786  000B68  0100               	movlb	0	; () banked
  7787  000B6A  EE20 F00A          	lfsr	2,10
  7788  000B6E  0100               	movlb	0	; () banked
  7789  000B70  51C8               	movf	_ic_ptr& (0+255),w,b
  7790  000B72  26D9               	addwf	fsr2l,f,c
  7791  000B74  0100               	movlb	0	; () banked
  7792  000B76  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7793  000B78  22DA               	addwfc	fsr2h,f,c
  7794  000B7A  50DF               	movf	indf2,w,c
  7795  000B7C  EC6E  F00E         	call	_ToMainHigh_sendmsg
  7796                           
  7797                           ;my_i2c.c: 219: SSPCON2bits.ACKDT = 1;
  7798  000B80  8AC5               	bsf	4037,5,c	;volatile
  7799                           
  7800                           ;my_i2c.c: 220: SSPCON2bits.ACKEN = 1;
  7801  000B82  88C5               	bsf	4037,4,c	;volatile
  7802                           
  7803                           ;my_i2c.c: 221: } else {
  7804  000B84  0012               	return	
  7805  000B86                     i2l376:
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;my_i2c.c: 223: SSPCON2bits.ACKDT = 0;
  7809  000B86  9AC5               	bcf	4037,5,c	;volatile
  7810                           
  7811                           ;my_i2c.c: 224: SSPCON2bits.ACKEN = 1;
  7812  000B88  88C5               	bsf	4037,4,c	;volatile
  7813  000B8A  0012               	return	
  7814  000B8C                     i2l3947:
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;my_i2c.c: 230: {
  7818                           ;my_i2c.c: 231: ic_ptr->status = 0x5;
  7819  000B8C  0100               	movlb	0	; () banked
  7820  000B8E  EE20 F00D          	lfsr	2,13
  7821  000B92  0100               	movlb	0	; () banked
  7822  000B94  51C8               	movf	_ic_ptr& (0+255),w,b
  7823  000B96  26D9               	addwf	fsr2l,f,c
  7824  000B98  0100               	movlb	0	; () banked
  7825  000B9A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7826  000B9C  22DA               	addwfc	fsr2h,f,c
  7827  000B9E  0E05               	movlw	5
  7828  000BA0  6EDF               	movwf	indf2,c
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;my_i2c.c: 232: i2c_master_recv(ic_ptr->buflen);
  7832  000BA2  0100               	movlb	0	; () banked
  7833  000BA4  EE20 F00A          	lfsr	2,10
  7834  000BA8  0100               	movlb	0	; () banked
  7835  000BAA  51C8               	movf	_ic_ptr& (0+255),w,b
  7836  000BAC  26D9               	addwf	fsr2l,f,c
  7837  000BAE  0100               	movlb	0	; () banked
  7838  000BB0  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7839  000BB2  22DA               	addwfc	fsr2h,f,c
  7840  000BB4  50DF               	movf	indf2,w,c
  7841  000BB6  ECBC  F00C         	call	_i2c_master_recv
  7842                           
  7843                           ;my_i2c.c: 233: break;
  7844  000BBA  0012               	return	
  7845  000BBC                     i2l379:
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;my_i2c.c: 236: {
  7849                           ;my_i2c.c: 238: SSPCON2bits.PEN = 1;
  7850  000BBC  84C5               	bsf	4037,2,c	;volatile
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;my_i2c.c: 240: ic_ptr->status = 0x5;
  7854  000BBE  0100               	movlb	0	; () banked
  7855  000BC0  EE20 F00D          	lfsr	2,13
  7856  000BC4  0100               	movlb	0	; () banked
  7857  000BC6  51C8               	movf	_ic_ptr& (0+255),w,b
  7858  000BC8  26D9               	addwf	fsr2l,f,c
  7859  000BCA  0100               	movlb	0	; () banked
  7860  000BCC  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7861  000BCE  22DA               	addwfc	fsr2h,f,c
  7862  000BD0  0E05               	movlw	5
  7863  000BD2  6EDF               	movwf	indf2,c
  7864                           
  7865                           ;my_i2c.c: 241: break;
  7866  000BD4  0012               	return	
  7867  000BD6                     i2l3955:
  7868                           
  7869                           ; BSR set to: 0
  7870  000BD6  0100               	movlb	0	; () banked
  7871  000BD8  EE20 F00D          	lfsr	2,13
  7872  000BDC  0100               	movlb	0	; () banked
  7873  000BDE  51C8               	movf	_ic_ptr& (0+255),w,b
  7874  000BE0  26D9               	addwf	fsr2l,f,c
  7875  000BE2  0100               	movlb	0	; () banked
  7876  000BE4  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7877  000BE6  22DA               	addwfc	fsr2h,f,c
  7878  000BE8  50DF               	movf	indf2,w,c
  7879                           
  7880                           ; Switch size 1, requested type "space"
  7881                           ; Number of cases is 6, Range of values is 7 to 13
  7882                           ; switch strategies available:
  7883                           ; Name         Instructions Cycles
  7884                           ; simple_byte           19    10 (average)
  7885                           ;	Chosen strategy is simple_byte
  7886  000BEA  0A07               	xorlw	7	; case 7
  7887  000BEC  B4D8               	btfsc	status,2,c
  7888  000BEE  D6F9               	goto	i2l370
  7889  000BF0  0A0E               	xorlw	14	; case 9
  7890  000BF2  B4D8               	btfsc	status,2,c
  7891  000BF4  D677               	goto	i2l365
  7892  000BF6  0A03               	xorlw	3	; case 10
  7893  000BF8  B4D8               	btfsc	status,2,c
  7894  000BFA  D638               	goto	i2l3897
  7895  000BFC  0A01               	xorlw	1	; case 11
  7896  000BFE  B4D8               	btfsc	status,2,c
  7897  000C00  D7DD               	goto	i2l379
  7898  000C02  0A07               	xorlw	7	; case 12
  7899  000C04  B4D8               	btfsc	status,2,c
  7900  000C06  D734               	goto	i2l374
  7901  000C08  0A01               	xorlw	1	; case 13
  7902  000C0A  A4D8               	btfss	status,2,c
  7903  000C0C  0012               	return	
  7904  000C0E  D7BE               	goto	i2l3947
  7905  000C10                     __end_of_i2c_master_int_handler:
  7906                           	opt stack 0
  7907                           pclatu	equ	0xFFB
  7908                           pclath	equ	0xFFA
  7909                           tblptru	equ	0xFF8
  7910                           tblptrh	equ	0xFF7
  7911                           tblptrl	equ	0xFF6
  7912                           tablat	equ	0xFF5
  7913                           prodh	equ	0xFF4
  7914                           prodl	equ	0xFF3
  7915                           intcon	equ	0xFF2
  7916                           intcon2	equ	0xFF1
  7917                           postinc0	equ	0xFEE
  7918                           fsr0h	equ	0xFEA
  7919                           fsr0l	equ	0xFE9
  7920                           wreg	equ	0xFE8
  7921                           indf1	equ	0xFE7
  7922                           postinc1	equ	0xFE6
  7923                           postdec1	equ	0xFE5
  7924                           fsr1h	equ	0xFE2
  7925                           fsr1l	equ	0xFE1
  7926                           bsr	equ	0xFE0
  7927                           indf2	equ	0xFDF
  7928                           postinc2	equ	0xFDE
  7929                           postdec2	equ	0xFDD
  7930                           fsr2h	equ	0xFDA
  7931                           fsr2l	equ	0xFD9
  7932                           status	equ	0xFD8
  7933                           
  7934 ;; *************** function _i2c_master_recv *****************
  7935 ;; Defined at:
  7936 ;;		line 74 in file "../src/my_i2c.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;  length          1    wreg     unsigned char 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;  length          1    0[BANK0 ] unsigned char 
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  1    wreg      unsigned char 
  7943 ;; Registers used:
  7944 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7951 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7953 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7954 ;;Total ram usage:        1 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; This function calls:
  7957 ;;		Nothing
  7958 ;; This function is called by:
  7959 ;;		_i2c_master_int_handler
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           	psect	text43
  7964  001978                     __ptext43:
  7965                           	opt stack 0
  7966  001978                     _i2c_master_recv:
  7967                           	opt stack 18
  7968                           
  7969                           ;incstack = 0
  7970                           ;i2c_master_recv@length stored from wreg
  7971  001978  CFE8 F060          	movff	wreg,i2c_master_recv@length
  7972                           
  7973                           ;my_i2c.c: 77: if(ic_ptr->status == 0x5){
  7974  00197C  0100               	movlb	0	; () banked
  7975  00197E  EE20 F00D          	lfsr	2,13
  7976  001982  0100               	movlb	0	; () banked
  7977  001984  51C8               	movf	_ic_ptr& (0+255),w,b
  7978  001986  26D9               	addwf	fsr2l,f,c
  7979  001988  0100               	movlb	0	; () banked
  7980  00198A  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7981  00198C  22DA               	addwfc	fsr2h,f,c
  7982  00198E  0E05               	movlw	5
  7983  001990  62DF               	cpfseq	indf2,c
  7984  001992  0012               	return	
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;my_i2c.c: 78: ic_ptr->slave_addr |= 0x01;
  7988  001994  0100               	movlb	0	; () banked
  7989  001996  EE20 F01C          	lfsr	2,28
  7990  00199A  0100               	movlb	0	; () banked
  7991  00199C  51C8               	movf	_ic_ptr& (0+255),w,b
  7992  00199E  26D9               	addwf	fsr2l,f,c
  7993  0019A0  0100               	movlb	0	; () banked
  7994  0019A2  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  7995  0019A4  22DA               	addwfc	fsr2h,f,c
  7996  0019A6  0E00               	movlw	0
  7997  0019A8  80DB               	bsf	plusw2,0,c
  7998                           
  7999                           ;my_i2c.c: 79: ic_ptr->buflen = length;
  8000  0019AA  0100               	movlb	0	; () banked
  8001  0019AC  EE20 F00A          	lfsr	2,10
  8002  0019B0  0100               	movlb	0	; () banked
  8003  0019B2  51C8               	movf	_ic_ptr& (0+255),w,b
  8004  0019B4  26D9               	addwf	fsr2l,f,c
  8005  0019B6  0100               	movlb	0	; () banked
  8006  0019B8  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8007  0019BA  22DA               	addwfc	fsr2h,f,c
  8008  0019BC  0100               	movlb	0	; () banked
  8009  0019BE  C060  FFDF         	movff	i2c_master_recv@length,indf2
  8010                           
  8011                           ;my_i2c.c: 81: ic_ptr->status = 0xA;
  8012  0019C2  0100               	movlb	0	; () banked
  8013  0019C4  EE20 F00D          	lfsr	2,13
  8014  0019C8  0100               	movlb	0	; () banked
  8015  0019CA  51C8               	movf	_ic_ptr& (0+255),w,b
  8016  0019CC  26D9               	addwf	fsr2l,f,c
  8017  0019CE  0100               	movlb	0	; () banked
  8018  0019D0  51C9               	movf	(_ic_ptr+1)& (0+255),w,b
  8019  0019D2  22DA               	addwfc	fsr2h,f,c
  8020  0019D4  0E0A               	movlw	10
  8021  0019D6  6EDF               	movwf	indf2,c
  8022                           
  8023                           ; BSR set to: 0
  8024                           ;my_i2c.c: 84: SSPCON2bits.RSEN = 1;
  8025  0019D8  82C5               	bsf	4037,1,c	;volatile
  8026  0019DA  0012               	return	
  8027  0019DC                     __end_of_i2c_master_recv:
  8028                           	opt stack 0
  8029                           pclatu	equ	0xFFB
  8030                           pclath	equ	0xFFA
  8031                           tblptru	equ	0xFF8
  8032                           tblptrh	equ	0xFF7
  8033                           tblptrl	equ	0xFF6
  8034                           tablat	equ	0xFF5
  8035                           prodh	equ	0xFF4
  8036                           prodl	equ	0xFF3
  8037                           intcon	equ	0xFF2
  8038                           intcon2	equ	0xFF1
  8039                           postinc0	equ	0xFEE
  8040                           fsr0h	equ	0xFEA
  8041                           fsr0l	equ	0xFE9
  8042                           wreg	equ	0xFE8
  8043                           indf1	equ	0xFE7
  8044                           postinc1	equ	0xFE6
  8045                           postdec1	equ	0xFE5
  8046                           fsr1h	equ	0xFE2
  8047                           fsr1l	equ	0xFE1
  8048                           bsr	equ	0xFE0
  8049                           indf2	equ	0xFDF
  8050                           postinc2	equ	0xFDE
  8051                           postdec2	equ	0xFDD
  8052                           plusw2	equ	0xFDB
  8053                           fsr2h	equ	0xFDA
  8054                           fsr2l	equ	0xFD9
  8055                           status	equ	0xFD8
  8056                           
  8057 ;; *************** function _ToMainHigh_sendmsg *****************
  8058 ;; Defined at:
  8059 ;;		line 126 in file "../src/messages.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  length          1    wreg     unsigned char 
  8062 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8063 ;;  data            2   23[BANK0 ] PTR void 
  8064 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), 
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;  length          1   25[BANK0 ] unsigned char 
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  1    wreg      char 
  8069 ;; Registers used:
  8070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8076 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8077 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8079 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8080 ;;Total ram usage:        4 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:    2
  8083 ;; This function calls:
  8084 ;;		i2_send_msg
  8085 ;; This function is called by:
  8086 ;;		_i2c_master_int_handler
  8087 ;;		_i2c_slave_int_handler
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text44
  8092  001CDC                     __ptext44:
  8093                           	opt stack 0
  8094  001CDC                     _ToMainHigh_sendmsg:
  8095                           	opt stack 16
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;incstack = 0
  8099                           ;ToMainHigh_sendmsg@length stored from wreg
  8100  001CDC  CFE8 F079          	movff	wreg,ToMainHigh_sendmsg@length
  8101                           
  8102                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8103                           ;	Return value of _ToMainHigh_sendmsg is never used
  8104  001CE0  0101               	movlb	1	; () banked
  8105  001CE2  0E01               	movlw	high _ToMainHigh_MQ
  8106  001CE4  0100               	movlb	0	; () banked
  8107  001CE6  0100               	movlb	0	; () banked
  8108  001CE8  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8109  001CEA  0101               	movlb	1	; () banked
  8110  001CEC  0E00               	movlw	low _ToMainHigh_MQ
  8111  001CEE  0100               	movlb	0	; () banked
  8112  001CF0  0100               	movlb	0	; () banked
  8113  001CF2  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  8114  001CF4  C079  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8115  001CF8  C076  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8116  001CFC  0100               	movlb	0	; () banked
  8117  001CFE  0100               	movlb	0	; () banked
  8118  001D00  C078  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8119  001D04  0100               	movlb	0	; () banked
  8120  001D06  0100               	movlb	0	; () banked
  8121  001D08  C077  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8122  001D0C  EC56  F007         	call	i2_send_msg	;wreg free
  8123  001D10  0012               	return	
  8124  001D12                     __end_of_ToMainHigh_sendmsg:
  8125                           	opt stack 0
  8126                           pclatu	equ	0xFFB
  8127                           pclath	equ	0xFFA
  8128                           tblptru	equ	0xFF8
  8129                           tblptrh	equ	0xFF7
  8130                           tblptrl	equ	0xFF6
  8131                           tablat	equ	0xFF5
  8132                           prodh	equ	0xFF4
  8133                           prodl	equ	0xFF3
  8134                           intcon	equ	0xFF2
  8135                           intcon2	equ	0xFF1
  8136                           postinc0	equ	0xFEE
  8137                           fsr0h	equ	0xFEA
  8138                           fsr0l	equ	0xFE9
  8139                           wreg	equ	0xFE8
  8140                           indf1	equ	0xFE7
  8141                           postinc1	equ	0xFE6
  8142                           postdec1	equ	0xFE5
  8143                           fsr1h	equ	0xFE2
  8144                           fsr1l	equ	0xFE1
  8145                           bsr	equ	0xFE0
  8146                           indf2	equ	0xFDF
  8147                           postinc2	equ	0xFDE
  8148                           postdec2	equ	0xFDD
  8149                           plusw2	equ	0xFDB
  8150                           fsr2h	equ	0xFDA
  8151                           fsr2l	equ	0xFD9
  8152                           status	equ	0xFD8
  8153                           
  8154 ;; *************** function i2_send_msg *****************
  8155 ;; Defined at:
  8156 ;;		line 24 in file "../src/messages.c"
  8157 ;; Parameters:    Size  Location     Type
  8158 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8159 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8160 ;;  length          1   12[BANK0 ] unsigned char 
  8161 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8162 ;;  data            2   14[BANK0 ] PTR void 
  8163 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), main@uc(15), 
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8166 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8167 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8168 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8169 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8170 ;; Return value:  Size  Location     Type
  8171 ;;                  1    wreg      char 
  8172 ;; Registers used:
  8173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8179 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8180 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8181 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8182 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8183 ;;Total ram usage:       12 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; Hardware stack levels required when called:    1
  8186 ;; This function calls:
  8187 ;;		i2___awmod
  8188 ;;		i2_memcpy
  8189 ;; This function is called by:
  8190 ;;		_ToMainHigh_sendmsg
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           	psect	text45
  8195  000EAC                     __ptext45:
  8196                           	opt stack 0
  8197  000EAC                     i2_send_msg:
  8198                           	opt stack 16
  8199                           
  8200                           ;messages.c: 25: unsigned char slot;
  8201                           ;messages.c: 27: msg *qmsg;
  8202                           ;messages.c: 28: size_t tlength = length;
  8203                           
  8204                           ;incstack = 0
  8205  000EAC  0100               	movlb	0	; () banked
  8206  000EAE  0100               	movlb	0	; () banked
  8207  000EB0  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  8208  000EB4  0100               	movlb	0	; () banked
  8209  000EB6  0100               	movlb	0	; () banked
  8210  000EB8  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8214  000EBA  0100               	movlb	0	; () banked
  8215  000EBC  EE20 F041          	lfsr	2,65
  8216  000EC0  0100               	movlb	0	; () banked
  8217  000EC2  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8218  000EC4  26D9               	addwf	fsr2l,f,c
  8219  000EC6  0100               	movlb	0	; () banked
  8220  000EC8  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8221  000ECA  22DA               	addwfc	fsr2h,f,c
  8222  000ECC  50DF               	movf	indf2,w,c
  8223  000ECE  0100               	movlb	0	; () banked
  8224  000ED0  0100               	movlb	0	; () banked
  8225  000ED2  6F73               	movwf	i2send_msg@slot& (0+255),b
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8229  000ED4  0100               	movlb	0	; () banked
  8230  000ED6  0100               	movlb	0	; () banked
  8231  000ED8  5173               	movf	i2send_msg@slot& (0+255),w,b
  8232  000EDA  0D0D               	mullw	13
  8233  000EDC  50F3               	movf	prodl,w,c
  8234  000EDE  0100               	movlb	0	; () banked
  8235  000EE0  0100               	movlb	0	; () banked
  8236  000EE2  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  8237  000EE4  0100               	movlb	0	; () banked
  8238  000EE6  0100               	movlb	0	; () banked
  8239  000EE8  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  8240  000EEA  50F4               	movf	prodh,w,c
  8241  000EEC  0100               	movlb	0	; () banked
  8242  000EEE  0100               	movlb	0	; () banked
  8243  000EF0  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8244  000EF2  0100               	movlb	0	; () banked
  8245  000EF4  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;messages.c: 41: if (qmsg->full != 0) {
  8249  000EF6  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8250  000EFA  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8251  000EFE  50DF               	movf	indf2,w,c
  8252  000F00  B4D8               	btfsc	status,2,c
  8253  000F02  D002               	goto	i2l4163
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;messages.c: 42: return (-1);
  8257  000F04  0EFF               	movlw	255
  8258  000F06  0012               	return	
  8259  000F08                     i2l4163:
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;messages.c: 43: }
  8263                           ;messages.c: 46: qmsg->length = length;
  8264  000F08  0100               	movlb	0	; () banked
  8265  000F0A  EE20 F001          	lfsr	2,1
  8266  000F0E  0100               	movlb	0	; () banked
  8267  000F10  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8268  000F12  26D9               	addwf	fsr2l,f,c
  8269  000F14  0100               	movlb	0	; () banked
  8270  000F16  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8271  000F18  22DA               	addwfc	fsr2h,f,c
  8272  000F1A  0100               	movlb	0	; () banked
  8273  000F1C  C06C  FFDF         	movff	i2send_msg@length,indf2
  8274                           
  8275                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8276  000F20  0100               	movlb	0	; () banked
  8277  000F22  EE20 F002          	lfsr	2,2
  8278  000F26  0100               	movlb	0	; () banked
  8279  000F28  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8280  000F2A  26D9               	addwf	fsr2l,f,c
  8281  000F2C  0100               	movlb	0	; () banked
  8282  000F2E  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8283  000F30  22DA               	addwfc	fsr2h,f,c
  8284  000F32  0100               	movlb	0	; () banked
  8285  000F34  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8289  000F38  0E03               	movlw	3
  8290  000F3A  0100               	movlb	0	; () banked
  8291  000F3C  0100               	movlb	0	; () banked
  8292  000F3E  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  8293  000F40  0100               	movlb	0	; () banked
  8294  000F42  0100               	movlb	0	; () banked
  8295  000F44  6F60               	movwf	i2memcpy@d1& (0+255),b
  8296  000F46  0E00               	movlw	0
  8297  000F48  0100               	movlb	0	; () banked
  8298  000F4A  0100               	movlb	0	; () banked
  8299  000F4C  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8300  000F4E  0100               	movlb	0	; () banked
  8301  000F50  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  8302  000F52  0100               	movlb	0	; () banked
  8303  000F54  0100               	movlb	0	; () banked
  8304  000F56  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8305  000F5A  0100               	movlb	0	; () banked
  8306  000F5C  0100               	movlb	0	; () banked
  8307  000F5E  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  8308  000F62  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  8309  000F66  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8310  000F6A  EC1D  F00D         	call	i2_memcpy	;wreg free
  8311                           
  8312                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8313  000F6E  0100               	movlb	0	; () banked
  8314  000F70  EE20 F041          	lfsr	2,65
  8315  000F74  0100               	movlb	0	; () banked
  8316  000F76  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8317  000F78  26D9               	addwf	fsr2l,f,c
  8318  000F7A  0100               	movlb	0	; () banked
  8319  000F7C  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8320  000F7E  22DA               	addwfc	fsr2h,f,c
  8321  000F80  0100               	movlb	0	; () banked
  8322  000F82  EE10 F041          	lfsr	1,65
  8323  000F86  0100               	movlb	0	; () banked
  8324  000F88  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8325  000F8A  26E1               	addwf	fsr1l,f,c
  8326  000F8C  0100               	movlb	0	; () banked
  8327  000F8E  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8328  000F90  22E2               	addwfc	fsr1h,f,c
  8329  000F92  50E7               	movf	indf1,w,c
  8330  000F94  0100               	movlb	0	; () banked
  8331  000F96  6F70               	movwf	??i2_send_msg& (0+255),b
  8332  000F98  0E01               	movlw	1
  8333  000F9A  0100               	movlb	0	; () banked
  8334  000F9C  2570               	addwf	??i2_send_msg& (0+255),w,b
  8335  000F9E  0100               	movlb	0	; () banked
  8336  000FA0  0100               	movlb	0	; () banked
  8337  000FA2  6F60               	movwf	i2___awmod@dividend& (0+255),b
  8338  000FA4  0100               	movlb	0	; () banked
  8339  000FA6  0100               	movlb	0	; () banked
  8340  000FA8  6B61               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8341  000FAA  0E00               	movlw	0
  8342  000FAC  2361               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8343  000FAE  0E00               	movlw	0
  8344  000FB0  0100               	movlb	0	; () banked
  8345  000FB2  0100               	movlb	0	; () banked
  8346  000FB4  6F63               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8347  000FB6  0E05               	movlw	5
  8348  000FB8  0100               	movlb	0	; () banked
  8349  000FBA  6F62               	movwf	i2___awmod@divisor& (0+255),b
  8350  000FBC  EC73  F008         	call	i2___awmod	;wreg free
  8351  000FC0  0100               	movlb	0	; () banked
  8352  000FC2  0100               	movlb	0	; () banked
  8353  000FC4  5160               	movf	?i2___awmod& (0+255),w,b
  8354  000FC6  6EDF               	movwf	indf2,c
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;messages.c: 59: qmsg->full = 1;
  8358  000FC8  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8359  000FCC  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8360  000FD0  0E01               	movlw	1
  8361  000FD2  6EDF               	movwf	indf2,c
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;messages.c: 60: return (1);
  8365  000FD4  0E01               	movlw	1
  8366  000FD6  0012               	return	
  8367  000FD8                     __end_ofi2_send_msg:
  8368                           	opt stack 0
  8369                           pclatu	equ	0xFFB
  8370                           pclath	equ	0xFFA
  8371                           tblptru	equ	0xFF8
  8372                           tblptrh	equ	0xFF7
  8373                           tblptrl	equ	0xFF6
  8374                           tablat	equ	0xFF5
  8375                           prodh	equ	0xFF4
  8376                           prodl	equ	0xFF3
  8377                           intcon	equ	0xFF2
  8378                           intcon2	equ	0xFF1
  8379                           postinc0	equ	0xFEE
  8380                           fsr0h	equ	0xFEA
  8381                           fsr0l	equ	0xFE9
  8382                           wreg	equ	0xFE8
  8383                           indf1	equ	0xFE7
  8384                           postinc1	equ	0xFE6
  8385                           postdec1	equ	0xFE5
  8386                           fsr1h	equ	0xFE2
  8387                           fsr1l	equ	0xFE1
  8388                           bsr	equ	0xFE0
  8389                           indf2	equ	0xFDF
  8390                           postinc2	equ	0xFDE
  8391                           postdec2	equ	0xFDD
  8392                           plusw2	equ	0xFDB
  8393                           fsr2h	equ	0xFDA
  8394                           fsr2l	equ	0xFD9
  8395                           status	equ	0xFD8
  8396                           
  8397 ;; *************** function i2_memcpy *****************
  8398 ;; Defined at:
  8399 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;  d1              2    0[BANK0 ] PTR void 
  8402 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8403 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8404 ;;		 -> main@msgbuffer(11), 
  8405 ;;  s1              2    2[BANK0 ] PTR const void 
  8406 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8407 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8408 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  8409 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  8410 ;;  n               2    4[BANK0 ] unsigned int 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8413 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8414 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8415 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  8416 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@ic(29), main@uc(15), 
  8417 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8418 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8419 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8420 ;;		 -> main@msgbuffer(11), 
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  2    0[BANK0 ] PTR void 
  8423 ;; Registers used:
  8424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8430 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8431 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8433 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8434 ;;Total ram usage:       10 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; This function calls:
  8437 ;;		Nothing
  8438 ;; This function is called by:
  8439 ;;		i2_send_msg
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text46
  8444  001A3A                     __ptext46:
  8445                           	opt stack 0
  8446  001A3A                     i2_memcpy:
  8447                           	opt stack 16
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;incstack = 0
  8451  001A3A  0100               	movlb	0	; () banked
  8452  001A3C  0100               	movlb	0	; () banked
  8453  001A3E  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8454  001A42  0100               	movlb	0	; () banked
  8455  001A44  0100               	movlb	0	; () banked
  8456  001A46  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  8457  001A4A  0100               	movlb	0	; () banked
  8458  001A4C  0100               	movlb	0	; () banked
  8459  001A4E  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8460  001A52  0100               	movlb	0	; () banked
  8461  001A54  0100               	movlb	0	; () banked
  8462  001A56  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  8463  001A5A  D012               	goto	i2l4187
  8464  001A5C                     i2l4181:
  8465                           
  8466                           ; BSR set to: 0
  8467  001A5C  C068  FFD9         	movff	i2memcpy@s,fsr2l
  8468  001A60  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  8469  001A64  C066  FFE1         	movff	i2memcpy@d,fsr1l
  8470  001A68  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  8471  001A6C  CFDF FFE7          	movff	indf2,indf1
  8472                           
  8473                           ; BSR set to: 0
  8474  001A70  0100               	movlb	0	; () banked
  8475  001A72  0100               	movlb	0	; () banked
  8476  001A74  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  8477  001A76  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  8478                           
  8479                           ; BSR set to: 0
  8480  001A78  0100               	movlb	0	; () banked
  8481  001A7A  0100               	movlb	0	; () banked
  8482  001A7C  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  8483  001A7E  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  8484  001A80                     i2l4187:
  8485                           
  8486                           ; BSR set to: 0
  8487  001A80  0100               	movlb	0	; () banked
  8488  001A82  0100               	movlb	0	; () banked
  8489  001A84  0764               	decf	i2memcpy@n& (0+255),f,b
  8490  001A86  A0D8               	btfss	status,0,c
  8491  001A88  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  8492  001A8A  0100               	movlb	0	; () banked
  8493  001A8C  2964               	incf	i2memcpy@n& (0+255),w,b
  8494  001A8E  B4D8               	btfsc	status,2,c
  8495  001A90  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  8496  001A92  B4D8               	btfsc	status,2,c
  8497                           
  8498                           ; BSR set to: 0
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;	Return value of i2_memcpy is never used
  8502  001A94  0012               	return	
  8503  001A96  D7E2               	goto	i2l4181
  8504  001A98                     __end_ofi2_memcpy:
  8505                           	opt stack 0
  8506                           pclatu	equ	0xFFB
  8507                           pclath	equ	0xFFA
  8508                           tblptru	equ	0xFF8
  8509                           tblptrh	equ	0xFF7
  8510                           tblptrl	equ	0xFF6
  8511                           tablat	equ	0xFF5
  8512                           prodh	equ	0xFF4
  8513                           prodl	equ	0xFF3
  8514                           intcon	equ	0xFF2
  8515                           intcon2	equ	0xFF1
  8516                           postinc0	equ	0xFEE
  8517                           fsr0h	equ	0xFEA
  8518                           fsr0l	equ	0xFE9
  8519                           wreg	equ	0xFE8
  8520                           indf1	equ	0xFE7
  8521                           postinc1	equ	0xFE6
  8522                           postdec1	equ	0xFE5
  8523                           fsr1h	equ	0xFE2
  8524                           fsr1l	equ	0xFE1
  8525                           bsr	equ	0xFE0
  8526                           indf2	equ	0xFDF
  8527                           postinc2	equ	0xFDE
  8528                           postdec2	equ	0xFDD
  8529                           plusw2	equ	0xFDB
  8530                           fsr2h	equ	0xFDA
  8531                           fsr2l	equ	0xFD9
  8532                           status	equ	0xFD8
  8533                           
  8534 ;; *************** function i2___awmod *****************
  8535 ;; Defined at:
  8536 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  dividend        2    0[BANK0 ] int 
  8539 ;;  divisor         2    2[BANK0 ] int 
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;  __awmod         1    6[BANK0 ] unsigned char 
  8542 ;;  __awmod         1    5[BANK0 ] unsigned char 
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  2    0[BANK0 ] int 
  8545 ;; Registers used:
  8546 ;;		wreg, status,2, status,0, prodl
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8552 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8553 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8554 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8555 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8556 ;;Total ram usage:        7 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		i2_send_msg
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text47
  8566  0010E6                     __ptext47:
  8567                           	opt stack 0
  8568  0010E6                     i2___awmod:
  8569                           	opt stack 16
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;incstack = 0
  8573  0010E6  0100               	movlb	0	; () banked
  8574  0010E8  6F64               	movwf	??i2___awmod& (0+255),b
  8575  0010EA  0E00               	movlw	0
  8576  0010EC  0100               	movlb	0	; () banked
  8577  0010EE  0100               	movlb	0	; () banked
  8578  0010F0  6F66               	movwf	i2___awmod@sign& (0+255),b
  8579  0010F2  0100               	movlb	0	; () banked
  8580  0010F4  5164               	movf	??i2___awmod& (0+255),w,b
  8581                           
  8582                           ; BSR set to: 0
  8583  0010F6  0100               	movlb	0	; () banked
  8584  0010F8  0100               	movlb	0	; () banked
  8585  0010FA  5161               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  8586  0010FC  0A80               	xorlw	128
  8587  0010FE  6EF3               	movwf	prodl,c
  8588  001100  0E80               	movlw	128
  8589  001102  5CF3               	subwf	prodl,w,c
  8590  001104  0E00               	movlw	0
  8591  001106  B4D8               	btfsc	status,2,c
  8592  001108  5D60               	subwf	i2___awmod@dividend& (0+255),w,b
  8593  00110A  B0D8               	btfsc	status,0,c
  8594  00110C  D00F               	goto	i2l4197
  8595                           
  8596                           ; BSR set to: 0
  8597  00110E  0100               	movlb	0	; () banked
  8598  001110  0100               	movlb	0	; () banked
  8599  001112  6D60               	negf	i2___awmod@dividend& (0+255),b
  8600  001114  0100               	movlb	0	; () banked
  8601  001116  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  8602  001118  B0D8               	btfsc	status,0,c
  8603  00111A  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  8604                           
  8605                           ; BSR set to: 0
  8606  00111C  0100               	movlb	0	; () banked
  8607  00111E  6F64               	movwf	??i2___awmod& (0+255),b
  8608  001120  0E01               	movlw	1
  8609  001122  0100               	movlb	0	; () banked
  8610  001124  0100               	movlb	0	; () banked
  8611  001126  6F66               	movwf	i2___awmod@sign& (0+255),b
  8612  001128  0100               	movlb	0	; () banked
  8613  00112A  5164               	movf	??i2___awmod& (0+255),w,b
  8614  00112C                     i2l4197:
  8615                           
  8616                           ; BSR set to: 0
  8617  00112C  0100               	movlb	0	; () banked
  8618  00112E  0100               	movlb	0	; () banked
  8619  001130  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8620  001132  0A80               	xorlw	128
  8621  001134  6EF3               	movwf	prodl,c
  8622  001136  0E80               	movlw	128
  8623  001138  5CF3               	subwf	prodl,w,c
  8624  00113A  0E00               	movlw	0
  8625  00113C  B4D8               	btfsc	status,2,c
  8626  00113E  5D62               	subwf	i2___awmod@divisor& (0+255),w,b
  8627  001140  B0D8               	btfsc	status,0,c
  8628  001142  D007               	goto	i2l4201
  8629                           
  8630                           ; BSR set to: 0
  8631  001144  0100               	movlb	0	; () banked
  8632  001146  0100               	movlb	0	; () banked
  8633  001148  6D62               	negf	i2___awmod@divisor& (0+255),b
  8634  00114A  0100               	movlb	0	; () banked
  8635  00114C  1F63               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  8636  00114E  B0D8               	btfsc	status,0,c
  8637  001150  2B63               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  8638  001152                     i2l4201:
  8639                           
  8640                           ; BSR set to: 0
  8641  001152  0100               	movlb	0	; () banked
  8642  001154  0100               	movlb	0	; () banked
  8643  001156  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8644  001158  1162               	iorwf	i2___awmod@divisor& (0+255),w,b
  8645  00115A  B4D8               	btfsc	status,2,c
  8646  00115C  D03A               	goto	i2l4217
  8647                           
  8648                           ; BSR set to: 0
  8649  00115E  0100               	movlb	0	; () banked
  8650  001160  6F64               	movwf	??i2___awmod& (0+255),b
  8651  001162  0E01               	movlw	1
  8652  001164  0100               	movlb	0	; () banked
  8653  001166  0100               	movlb	0	; () banked
  8654  001168  6F65               	movwf	i2___awmod@counter& (0+255),b
  8655  00116A  0100               	movlb	0	; () banked
  8656  00116C  5164               	movf	??i2___awmod& (0+255),w,b
  8657  00116E  D009               	goto	i2l4207
  8658  001170                     i2l4205:
  8659                           
  8660                           ; BSR set to: 0
  8661  001170  0100               	movlb	0	; () banked
  8662  001172  0100               	movlb	0	; () banked
  8663  001174  0100               	movlb	0	; () banked
  8664  001176  90D8               	bcf	status,0,c
  8665  001178  3762               	rlcf	i2___awmod@divisor& (0+255),f,b
  8666  00117A  3763               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  8667  00117C  0100               	movlb	0	; () banked
  8668  00117E  0100               	movlb	0	; () banked
  8669  001180  2B65               	incf	i2___awmod@counter& (0+255),f,b
  8670  001182                     i2l4207:
  8671                           
  8672                           ; BSR set to: 0
  8673  001182  0100               	movlb	0	; () banked
  8674  001184  0100               	movlb	0	; () banked
  8675  001186  AF63               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  8676  001188  D7F3               	goto	i2l4205
  8677  00118A                     i2l4209:
  8678                           
  8679                           ; BSR set to: 0
  8680  00118A  0100               	movlb	0	; () banked
  8681  00118C  0100               	movlb	0	; () banked
  8682  00118E  5162               	movf	i2___awmod@divisor& (0+255),w,b
  8683  001190  0100               	movlb	0	; () banked
  8684  001192  0100               	movlb	0	; () banked
  8685  001194  5D60               	subwf	i2___awmod@dividend& (0+255),w,b
  8686  001196  0100               	movlb	0	; () banked
  8687  001198  0100               	movlb	0	; () banked
  8688  00119A  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8689  00119C  0100               	movlb	0	; () banked
  8690  00119E  0100               	movlb	0	; () banked
  8691  0011A0  5961               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  8692  0011A2  A0D8               	btfss	status,0,c
  8693  0011A4  D00C               	goto	i2l4213
  8694                           
  8695                           ; BSR set to: 0
  8696  0011A6  0100               	movlb	0	; () banked
  8697  0011A8  0100               	movlb	0	; () banked
  8698  0011AA  5162               	movf	i2___awmod@divisor& (0+255),w,b
  8699  0011AC  0100               	movlb	0	; () banked
  8700  0011AE  0100               	movlb	0	; () banked
  8701  0011B0  5F60               	subwf	i2___awmod@dividend& (0+255),f,b
  8702  0011B2  0100               	movlb	0	; () banked
  8703  0011B4  0100               	movlb	0	; () banked
  8704  0011B6  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  8705  0011B8  0100               	movlb	0	; () banked
  8706  0011BA  0100               	movlb	0	; () banked
  8707  0011BC  5B61               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  8708  0011BE                     i2l4213:
  8709                           
  8710                           ; BSR set to: 0
  8711  0011BE  0100               	movlb	0	; () banked
  8712  0011C0  0100               	movlb	0	; () banked
  8713  0011C2  0100               	movlb	0	; () banked
  8714  0011C4  90D8               	bcf	status,0,c
  8715  0011C6  3363               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  8716  0011C8  3362               	rrcf	i2___awmod@divisor& (0+255),f,b
  8717                           
  8718                           ; BSR set to: 0
  8719  0011CA  0100               	movlb	0	; () banked
  8720  0011CC  0100               	movlb	0	; () banked
  8721  0011CE  2F65               	decfsz	i2___awmod@counter& (0+255),f,b
  8722  0011D0  D7DC               	goto	i2l4209
  8723  0011D2                     i2l4217:
  8724                           
  8725                           ; BSR set to: 0
  8726  0011D2  0100               	movlb	0	; () banked
  8727  0011D4  0100               	movlb	0	; () banked
  8728  0011D6  5166               	movf	i2___awmod@sign& (0+255),w,b
  8729  0011D8  B4D8               	btfsc	status,2,c
  8730  0011DA  D007               	goto	i2l4221
  8731                           
  8732                           ; BSR set to: 0
  8733  0011DC  0100               	movlb	0	; () banked
  8734  0011DE  0100               	movlb	0	; () banked
  8735  0011E0  6D60               	negf	i2___awmod@dividend& (0+255),b
  8736  0011E2  0100               	movlb	0	; () banked
  8737  0011E4  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  8738  0011E6  B0D8               	btfsc	status,0,c
  8739  0011E8  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  8740  0011EA                     i2l4221:
  8741                           
  8742                           ; BSR set to: 0
  8743  0011EA  C060  F060         	movff	i2___awmod@dividend,?i2___awmod
  8744  0011EE  C061  F061         	movff	i2___awmod@dividend+1,?i2___awmod+1
  8745  0011F2  0012               	return	
  8746  0011F4                     __end_ofi2___awmod:
  8747                           	opt stack 0
  8748                           pclatu	equ	0xFFB
  8749                           pclath	equ	0xFFA
  8750                           tblptru	equ	0xFF8
  8751                           tblptrh	equ	0xFF7
  8752                           tblptrl	equ	0xFF6
  8753                           tablat	equ	0xFF5
  8754                           prodh	equ	0xFF4
  8755                           prodl	equ	0xFF3
  8756                           intcon	equ	0xFF2
  8757                           intcon2	equ	0xFF1
  8758                           postinc0	equ	0xFEE
  8759                           fsr0h	equ	0xFEA
  8760                           fsr0l	equ	0xFE9
  8761                           wreg	equ	0xFE8
  8762                           indf1	equ	0xFE7
  8763                           postinc1	equ	0xFE6
  8764                           postdec1	equ	0xFE5
  8765                           fsr1h	equ	0xFE2
  8766                           fsr1l	equ	0xFE1
  8767                           bsr	equ	0xFE0
  8768                           indf2	equ	0xFDF
  8769                           postinc2	equ	0xFDE
  8770                           postdec2	equ	0xFDD
  8771                           plusw2	equ	0xFDB
  8772                           fsr2h	equ	0xFDA
  8773                           fsr2l	equ	0xFD9
  8774                           status	equ	0xFD8
  8775                           
  8776 ;; *************** function _SleepIfOkay *****************
  8777 ;; Defined at:
  8778 ;;		line 228 in file "../src/messages.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;		None
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;		None
  8783 ;; Return value:  Size  Location     Type
  8784 ;;		None               void
  8785 ;; Registers used:
  8786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8796 ;;Total ram usage:        0 bytes
  8797 ;; Hardware stack levels used:    1
  8798 ;; Hardware stack levels required when called:    2
  8799 ;; This function calls:
  8800 ;;		_enter_sleep_mode
  8801 ;;		i2_check_msg
  8802 ;;		i2_in_high_int
  8803 ;;		i2_in_low_int
  8804 ;; This function is called by:
  8805 ;;		_InterruptHandlerHigh
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           	psect	text48
  8810  0018A6                     __ptext48:
  8811                           	opt stack 0
  8812  0018A6                     _SleepIfOkay:
  8813                           	opt stack 18
  8814                           
  8815                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8816                           
  8817                           ; BSR set to: 0
  8818                           ;incstack = 0
  8819  0018A6  663D               	tstfsz	_MQ_Main_Willing_to_block,c
  8820  0018A8  D001               	goto	i2l3859
  8821  0018AA  0012               	return	
  8822  0018AC                     i2l3859:
  8823                           
  8824                           ;messages.c: 232: }
  8825                           ;messages.c: 235: if (in_low_int()) {
  8826  0018AC  EC6F  F00D         	call	i2_in_low_int	;wreg free
  8827  0018B0  0100               	movlb	0	; () banked
  8828  0018B2  0100               	movlb	0	; () banked
  8829  0018B4  5163               	movf	(?i2_in_low_int+1)& (0+255),w,b
  8830  0018B6  0100               	movlb	0	; () banked
  8831  0018B8  1162               	iorwf	?i2_in_low_int& (0+255),w,b
  8832  0018BA  A4D8               	btfss	status,2,c
  8833  0018BC  0012               	return	
  8834                           
  8835                           ; BSR set to: 0
  8836                           ;messages.c: 237: }
  8837                           ;messages.c: 240: if (!in_high_int()) {
  8838                           
  8839                           ; BSR set to: 0
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;messages.c: 236: return;
  8843  0018BE  EC56  F00F         	call	i2_in_high_int	;wreg free
  8844  0018C2  0100               	movlb	0	; () banked
  8845  0018C4  0100               	movlb	0	; () banked
  8846  0018C6  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8847  0018C8  0100               	movlb	0	; () banked
  8848  0018CA  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8849  0018CC  B4D8               	btfsc	status,2,c
  8850  0018CE  0012               	return	
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;messages.c: 242: }
  8854                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8855                           
  8856                           ; BSR set to: 0
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;messages.c: 241: return;
  8860  0018D0  0101               	movlb	1	; () banked
  8861  0018D2  0E01               	movlw	high _ToMainHigh_MQ
  8862  0018D4  0100               	movlb	0	; () banked
  8863  0018D6  0100               	movlb	0	; () banked
  8864  0018D8  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8865  0018DA  0101               	movlb	1	; () banked
  8866  0018DC  0E00               	movlw	low _ToMainHigh_MQ
  8867  0018DE  0100               	movlb	0	; () banked
  8868  0018E0  0100               	movlb	0	; () banked
  8869  0018E2  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8870  0018E4  EC89  F00E         	call	i2_check_msg	;wreg free
  8871  0018E8  0900               	iorlw	0
  8872  0018EA  A4D8               	btfss	status,2,c
  8873  0018EC  0012               	return	
  8874                           
  8875                           ;messages.c: 249: }
  8876                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8877                           
  8878                           ;messages.c: 248: return;
  8879  0018EE  0101               	movlb	1	; () banked
  8880  0018F0  0E01               	movlw	high _ToMainLow_MQ
  8881  0018F2  0100               	movlb	0	; () banked
  8882  0018F4  0100               	movlb	0	; () banked
  8883  0018F6  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8884  0018F8  0101               	movlb	1	; () banked
  8885  0018FA  0E43               	movlw	low _ToMainLow_MQ
  8886  0018FC  0100               	movlb	0	; () banked
  8887  0018FE  0100               	movlb	0	; () banked
  8888  001900  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8889  001902  EC89  F00E         	call	i2_check_msg	;wreg free
  8890  001906  0900               	iorlw	0
  8891  001908  B4D8               	btfsc	status,2,c
  8892                           
  8893                           ;messages.c: 252: }
  8894                           ;messages.c: 253: enter_sleep_mode();
  8895                           
  8896                           ;messages.c: 251: return;
  8897  00190A  EC6C  F00F         	call	_enter_sleep_mode	;wreg free
  8898  00190E  0012               	return	
  8899  001910                     __end_of_SleepIfOkay:
  8900                           	opt stack 0
  8901                           pclatu	equ	0xFFB
  8902                           pclath	equ	0xFFA
  8903                           tblptru	equ	0xFF8
  8904                           tblptrh	equ	0xFF7
  8905                           tblptrl	equ	0xFF6
  8906                           tablat	equ	0xFF5
  8907                           prodh	equ	0xFF4
  8908                           prodl	equ	0xFF3
  8909                           intcon	equ	0xFF2
  8910                           intcon2	equ	0xFF1
  8911                           postinc0	equ	0xFEE
  8912                           fsr0h	equ	0xFEA
  8913                           fsr0l	equ	0xFE9
  8914                           wreg	equ	0xFE8
  8915                           indf1	equ	0xFE7
  8916                           postinc1	equ	0xFE6
  8917                           postdec1	equ	0xFE5
  8918                           fsr1h	equ	0xFE2
  8919                           fsr1l	equ	0xFE1
  8920                           bsr	equ	0xFE0
  8921                           indf2	equ	0xFDF
  8922                           postinc2	equ	0xFDE
  8923                           postdec2	equ	0xFDD
  8924                           plusw2	equ	0xFDB
  8925                           fsr2h	equ	0xFDA
  8926                           fsr2l	equ	0xFD9
  8927                           status	equ	0xFD8
  8928                           
  8929 ;; *************** function i2_in_low_int *****************
  8930 ;; Defined at:
  8931 ;;		line 31 in file "../src/interrupts.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;		None
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;		None
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  2    2[BANK0 ] int 
  8938 ;; Registers used:
  8939 ;;		wreg, status,2, status,0, cstack
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8948 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8949 ;;Total ram usage:        2 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; Hardware stack levels required when called:    1
  8952 ;; This function calls:
  8953 ;;		i2_in_high_int
  8954 ;; This function is called by:
  8955 ;;		_SleepIfOkay
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           	psect	text49
  8960  001ADE                     __ptext49:
  8961                           	opt stack 0
  8962  001ADE                     i2_in_low_int:
  8963                           	opt stack 18
  8964                           
  8965                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  8966                           
  8967                           ;incstack = 0
  8968  001ADE  ACF2               	btfss	intcon,6,c	;volatile
  8969  001AE0  D008               	goto	i2l4139
  8970                           
  8971                           ;interrupts.c: 33: return (0);
  8972  001AE2  0E00               	movlw	0
  8973  001AE4  0100               	movlb	0	; () banked
  8974  001AE6  0100               	movlb	0	; () banked
  8975  001AE8  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8976  001AEA  0E00               	movlw	0
  8977  001AEC  0100               	movlb	0	; () banked
  8978  001AEE  6F62               	movwf	?i2_in_low_int& (0+255),b
  8979  001AF0  0012               	return	
  8980  001AF2                     i2l4139:
  8981  001AF2  EC56  F00F         	call	i2_in_high_int	;wreg free
  8982  001AF6  0100               	movlb	0	; () banked
  8983  001AF8  0100               	movlb	0	; () banked
  8984  001AFA  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8985  001AFC  0100               	movlb	0	; () banked
  8986  001AFE  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8987  001B00  B4D8               	btfsc	status,2,c
  8988  001B02  D008               	goto	i2l4147
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;interrupts.c: 35: return (0);
  8992  001B04  0E00               	movlw	0
  8993  001B06  0100               	movlb	0	; () banked
  8994  001B08  0100               	movlb	0	; () banked
  8995  001B0A  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8996  001B0C  0E00               	movlw	0
  8997  001B0E  0100               	movlb	0	; () banked
  8998  001B10  6F62               	movwf	?i2_in_low_int& (0+255),b
  8999  001B12  0012               	return	
  9000  001B14                     i2l4147:
  9001                           
  9002                           ; BSR set to: 0
  9003                           ;interrupts.c: 37: return (1);
  9004  001B14  0E00               	movlw	0
  9005  001B16  0100               	movlb	0	; () banked
  9006  001B18  0100               	movlb	0	; () banked
  9007  001B1A  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  9008  001B1C  0E01               	movlw	1
  9009  001B1E  0100               	movlb	0	; () banked
  9010  001B20  6F62               	movwf	?i2_in_low_int& (0+255),b
  9011  001B22  0012               	return	
  9012  001B24                     __end_ofi2_in_low_int:
  9013                           	opt stack 0
  9014                           pclatu	equ	0xFFB
  9015                           pclath	equ	0xFFA
  9016                           tblptru	equ	0xFF8
  9017                           tblptrh	equ	0xFF7
  9018                           tblptrl	equ	0xFF6
  9019                           tablat	equ	0xFF5
  9020                           prodh	equ	0xFF4
  9021                           prodl	equ	0xFF3
  9022                           intcon	equ	0xFF2
  9023                           intcon2	equ	0xFF1
  9024                           postinc0	equ	0xFEE
  9025                           fsr0h	equ	0xFEA
  9026                           fsr0l	equ	0xFE9
  9027                           wreg	equ	0xFE8
  9028                           indf1	equ	0xFE7
  9029                           postinc1	equ	0xFE6
  9030                           postdec1	equ	0xFE5
  9031                           fsr1h	equ	0xFE2
  9032                           fsr1l	equ	0xFE1
  9033                           bsr	equ	0xFE0
  9034                           indf2	equ	0xFDF
  9035                           postinc2	equ	0xFDE
  9036                           postdec2	equ	0xFDD
  9037                           plusw2	equ	0xFDB
  9038                           fsr2h	equ	0xFDA
  9039                           fsr2l	equ	0xFD9
  9040                           status	equ	0xFD8
  9041                           
  9042 ;; *************** function i2_in_high_int *****************
  9043 ;; Defined at:
  9044 ;;		line 23 in file "../src/interrupts.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;		None
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;		None
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  2    0[BANK0 ] int 
  9051 ;; Registers used:
  9052 ;;		wreg, status,2
  9053 ;; Tracked objects:
  9054 ;;		On entry : 0/0
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9058 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9061 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9062 ;;Total ram usage:        2 bytes
  9063 ;; Hardware stack levels used:    1
  9064 ;; This function calls:
  9065 ;;		Nothing
  9066 ;; This function is called by:
  9067 ;;		_SleepIfOkay
  9068 ;;		i2_in_low_int
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           	psect	text50
  9073  001EAC                     __ptext50:
  9074                           	opt stack 0
  9075  001EAC                     i2_in_high_int:
  9076                           	opt stack 18
  9077                           
  9078                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  9079                           
  9080                           ; BSR set to: 0
  9081                           ;incstack = 0
  9082  001EAC  0E00               	movlw	0
  9083  001EAE  AEF2               	btfss	intcon,7,c	;volatile
  9084  001EB0  0E01               	movlw	1
  9085  001EB2  0100               	movlb	0	; () banked
  9086  001EB4  0100               	movlb	0	; () banked
  9087  001EB6  6F60               	movwf	?i2_in_high_int& (0+255),b
  9088  001EB8  0100               	movlb	0	; () banked
  9089  001EBA  6B61               	clrf	(?i2_in_high_int+1)& (0+255),b
  9090  001EBC  0012               	return	
  9091  001EBE                     __end_ofi2_in_high_int:
  9092                           	opt stack 0
  9093                           pclatu	equ	0xFFB
  9094                           pclath	equ	0xFFA
  9095                           tblptru	equ	0xFF8
  9096                           tblptrh	equ	0xFF7
  9097                           tblptrl	equ	0xFF6
  9098                           tablat	equ	0xFF5
  9099                           prodh	equ	0xFF4
  9100                           prodl	equ	0xFF3
  9101                           intcon	equ	0xFF2
  9102                           intcon2	equ	0xFF1
  9103                           postinc0	equ	0xFEE
  9104                           fsr0h	equ	0xFEA
  9105                           fsr0l	equ	0xFE9
  9106                           wreg	equ	0xFE8
  9107                           indf1	equ	0xFE7
  9108                           postinc1	equ	0xFE6
  9109                           postdec1	equ	0xFE5
  9110                           fsr1h	equ	0xFE2
  9111                           fsr1l	equ	0xFE1
  9112                           bsr	equ	0xFE0
  9113                           indf2	equ	0xFDF
  9114                           postinc2	equ	0xFDE
  9115                           postdec2	equ	0xFDD
  9116                           plusw2	equ	0xFDB
  9117                           fsr2h	equ	0xFDA
  9118                           fsr2l	equ	0xFD9
  9119                           status	equ	0xFD8
  9120                           
  9121 ;; *************** function i2_check_msg *****************
  9122 ;; Defined at:
  9123 ;;		line 222 in file "../src/messages.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9126 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  1    wreg      unsigned char 
  9131 ;; Registers used:
  9132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9140 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9141 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9142 ;;Total ram usage:        3 bytes
  9143 ;; Hardware stack levels used:    1
  9144 ;; This function calls:
  9145 ;;		Nothing
  9146 ;; This function is called by:
  9147 ;;		_SleepIfOkay
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           	psect	text51
  9152  001D12                     __ptext51:
  9153                           	opt stack 0
  9154  001D12                     i2_check_msg:
  9155                           	opt stack 19
  9156                           
  9157                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9158                           
  9159                           ; BSR set to: 0
  9160                           ;incstack = 0
  9161  001D12  0100               	movlb	0	; () banked
  9162  001D14  EE20 F042          	lfsr	2,66
  9163  001D18  0100               	movlb	0	; () banked
  9164  001D1A  5160               	movf	i2check_msg@qptr& (0+255),w,b
  9165  001D1C  26D9               	addwf	fsr2l,f,c
  9166  001D1E  0100               	movlb	0	; () banked
  9167  001D20  5161               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  9168  001D22  22DA               	addwfc	fsr2h,f,c
  9169  001D24  50DF               	movf	indf2,w,c
  9170  001D26  0100               	movlb	0	; () banked
  9171  001D28  6F62               	movwf	??i2_check_msg& (0+255),b
  9172  001D2A  0100               	movlb	0	; () banked
  9173  001D2C  5162               	movf	??i2_check_msg& (0+255),w,b
  9174  001D2E  0D0D               	mullw	13
  9175  001D30  50F3               	movf	prodl,w,c
  9176  001D32  0100               	movlb	0	; () banked
  9177  001D34  0100               	movlb	0	; () banked
  9178  001D36  2560               	addwf	i2check_msg@qptr& (0+255),w,b
  9179  001D38  6ED9               	movwf	fsr2l,c
  9180  001D3A  50F4               	movf	prodh,w,c
  9181  001D3C  0100               	movlb	0	; () banked
  9182  001D3E  0100               	movlb	0	; () banked
  9183  001D40  2161               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  9184  001D42  6EDA               	movwf	fsr2h,c
  9185  001D44  50DF               	movf	indf2,w,c
  9186  001D46  0012               	return	
  9187  001D48                     __end_ofi2_check_msg:
  9188                           	opt stack 0
  9189                           pclatu	equ	0xFFB
  9190                           pclath	equ	0xFFA
  9191                           tblptru	equ	0xFF8
  9192                           tblptrh	equ	0xFF7
  9193                           tblptrl	equ	0xFF6
  9194                           tablat	equ	0xFF5
  9195                           prodh	equ	0xFF4
  9196                           prodl	equ	0xFF3
  9197                           intcon	equ	0xFF2
  9198                           intcon2	equ	0xFF1
  9199                           postinc0	equ	0xFEE
  9200                           fsr0h	equ	0xFEA
  9201                           fsr0l	equ	0xFE9
  9202                           wreg	equ	0xFE8
  9203                           indf1	equ	0xFE7
  9204                           postinc1	equ	0xFE6
  9205                           postdec1	equ	0xFE5
  9206                           fsr1h	equ	0xFE2
  9207                           fsr1l	equ	0xFE1
  9208                           bsr	equ	0xFE0
  9209                           indf2	equ	0xFDF
  9210                           postinc2	equ	0xFDE
  9211                           postdec2	equ	0xFDD
  9212                           plusw2	equ	0xFDB
  9213                           fsr2h	equ	0xFDA
  9214                           fsr2l	equ	0xFD9
  9215                           status	equ	0xFD8
  9216                           
  9217 ;; *************** function _enter_sleep_mode *****************
  9218 ;; Defined at:
  9219 ;;		line 202 in file "../src/messages.c"
  9220 ;; Parameters:    Size  Location     Type
  9221 ;;		None
  9222 ;; Auto vars:     Size  Location     Type
  9223 ;;		None
  9224 ;; Return value:  Size  Location     Type
  9225 ;;		None               void
  9226 ;; Registers used:
  9227 ;;		None
  9228 ;; Tracked objects:
  9229 ;;		On entry : 0/0
  9230 ;;		On exit  : 0/0
  9231 ;;		Unchanged: 0/0
  9232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9237 ;;Total ram usage:        0 bytes
  9238 ;; Hardware stack levels used:    1
  9239 ;; This function calls:
  9240 ;;		Nothing
  9241 ;; This function is called by:
  9242 ;;		_SleepIfOkay
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           	psect	text52
  9247  001ED8                     __ptext52:
  9248                           	opt stack 0
  9249  001ED8                     _enter_sleep_mode:
  9250                           	opt stack 19
  9251                           
  9252                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9253                           
  9254                           ; BSR set to: 0
  9255                           ;incstack = 0
  9256  001ED8  8ED3               	bsf	4051,7,c	;volatile
  9257  001EDA  0003               	sleep		;# 
  9258  001EDC  0012               	return	
  9259  001EDE                     __end_of_enter_sleep_mode:
  9260                           	opt stack 0
  9261  0000                     pclatu	equ	0xFFB
  9262                           pclath	equ	0xFFA
  9263                           tblptru	equ	0xFF8
  9264                           tblptrh	equ	0xFF7
  9265                           tblptrl	equ	0xFF6
  9266                           tablat	equ	0xFF5
  9267                           prodh	equ	0xFF4
  9268                           prodl	equ	0xFF3
  9269                           intcon	equ	0xFF2
  9270                           intcon2	equ	0xFF1
  9271                           postinc0	equ	0xFEE
  9272                           fsr0h	equ	0xFEA
  9273                           fsr0l	equ	0xFE9
  9274                           wreg	equ	0xFE8
  9275                           indf1	equ	0xFE7
  9276                           postinc1	equ	0xFE6
  9277                           postdec1	equ	0xFE5
  9278                           fsr1h	equ	0xFE2
  9279                           fsr1l	equ	0xFE1
  9280                           bsr	equ	0xFE0
  9281                           indf2	equ	0xFDF
  9282                           postinc2	equ	0xFDE
  9283                           postdec2	equ	0xFDD
  9284                           plusw2	equ	0xFDB
  9285                           fsr2h	equ	0xFDA
  9286                           fsr2l	equ	0xFD9
  9287                           status	equ	0xFD8
  9288                           pclatu	equ	0xFFB
  9289                           pclath	equ	0xFFA
  9290                           tblptru	equ	0xFF8
  9291                           tblptrh	equ	0xFF7
  9292                           tblptrl	equ	0xFF6
  9293                           tablat	equ	0xFF5
  9294                           prodh	equ	0xFF4
  9295                           prodl	equ	0xFF3
  9296                           intcon	equ	0xFF2
  9297                           intcon2	equ	0xFF1
  9298                           postinc0	equ	0xFEE
  9299                           fsr0h	equ	0xFEA
  9300                           fsr0l	equ	0xFE9
  9301                           wreg	equ	0xFE8
  9302                           indf1	equ	0xFE7
  9303                           postinc1	equ	0xFE6
  9304                           postdec1	equ	0xFE5
  9305                           fsr1h	equ	0xFE2
  9306                           fsr1l	equ	0xFE1
  9307                           bsr	equ	0xFE0
  9308                           indf2	equ	0xFDF
  9309                           postinc2	equ	0xFDE
  9310                           postdec2	equ	0xFDD
  9311                           plusw2	equ	0xFDB
  9312                           fsr2h	equ	0xFDA
  9313                           fsr2l	equ	0xFD9
  9314                           status	equ	0xFD8
  9315                           
  9316                           	psect	param0
  9317  0000                     pclatu	equ	0xFFB
  9318                           pclath	equ	0xFFA
  9319                           tblptru	equ	0xFF8
  9320                           tblptrh	equ	0xFF7
  9321                           tblptrl	equ	0xFF6
  9322                           tablat	equ	0xFF5
  9323                           prodh	equ	0xFF4
  9324                           prodl	equ	0xFF3
  9325                           intcon	equ	0xFF2
  9326                           intcon2	equ	0xFF1
  9327                           postinc0	equ	0xFEE
  9328                           fsr0h	equ	0xFEA
  9329                           fsr0l	equ	0xFE9
  9330                           wreg	equ	0xFE8
  9331                           indf1	equ	0xFE7
  9332                           postinc1	equ	0xFE6
  9333                           postdec1	equ	0xFE5
  9334                           fsr1h	equ	0xFE2
  9335                           fsr1l	equ	0xFE1
  9336                           bsr	equ	0xFE0
  9337                           indf2	equ	0xFDF
  9338                           postinc2	equ	0xFDE
  9339                           postdec2	equ	0xFDD
  9340                           plusw2	equ	0xFDB
  9341                           fsr2h	equ	0xFDA
  9342                           fsr2l	equ	0xFD9
  9343                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         302
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      64
    BANK0           160     76     106
    BANK1           256     87     242
    BANK2           256      0     134
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@ic(BANK1[29]), main@uc(BANK1[15]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@ic(BANK1[29]), main@uc(BANK1[15]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_slave_int_handler@motorcomm(COMRAM[2]), main@motorAck(BANK1[6]), main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 15
		 -> main@uc(BANK1[15]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 15
		 -> NULL(NULL[0]), main@uc(BANK1[15]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@sensorMsg(BANK1[1]), main@correct(BANK1[6]), main@stop(BANK1[6]), main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 15
		 -> NULL(NULL[0]), main@uc(BANK1[15]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[29]), main@uc(BANK1[15]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->i1_memcpy
    _timer0_int_handler->_WriteTimer0

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _i2c_int_handler->_i2c_master_int_handler
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                93    93      0   10260
                                             74 BANK0      2     2      0
                                              0 BANK1     87    87      0
                         _Open1USART
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     309
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             45 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                             49 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4    1859
                                             45 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                             51 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             49 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             47 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2125
                                             69 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2125
                                             69 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1953
                                             55 BANK0     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     360
                                             45 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     390
                                             45 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      22
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     119
                                             45 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              7     4      3     282
                                             45 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     273
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    5675
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer0_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2761
                                             26 COMRAM     1     1      0
                         _Read1USART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _Read1USART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   1     1      0    2826
                                             26 COMRAM     1     1      0
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2738
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (8) _send_msg                                            12     6      6    2354
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     530
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     747
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (6) _timer0_int_handler                                   0     0      0      88
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    4309
                                             31 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    4025
             _i2c_master_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_master_int_handler                              5     5      0    4025
                                             26 BANK0      5     5      0
                 _ToMainHigh_sendmsg
                    _i2c_master_recv
 ---------------------------------------------------------------------------------
 (13) _i2c_master_recv                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3994
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    3381
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     796
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4    1034
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1USART
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer0_int_handler
     _WriteTimer0
   _timer1_int_handler
     _ToMainLow_sendmsg
       _send_msg
         i1___awmod
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _Read1USART
     _ToMainLow_sendmsg
       _send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_master_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _i2c_master_recv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      86      10       52.3%
BITBANK1           100      0       0       7        0.0%
BANK1              100     57      F2       8       94.5%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      6A       5       66.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      40       1       67.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     222       6        0.0%
DATA                 0      0     222       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri May 02 22:55:47 2014

       _MQ_Main_Willing_to_block 003D                      _SSPSTATbits 000FC7  
      __end_of_ToMainLow_recvmsg 1BAA                               bsr 000FE0  
      __end_of_ToMainLow_sendmsg 1D98                     __CFG_CP0$OFF 000000  
                            l134 025E                              l154 0406  
                            l172 0668                              l156 04D0  
                            l631 15B6                              l633 15C4  
                            l634 15C6                              l627 1598  
                            l548 14C4                              l567 1D6C  
                            l568 1D6E                              l595 1C22  
                            l596 1C24                              l859 1E18  
__size_of_uart_trans_int_handler 0068             __size_of_WriteTimer0 0012  
           __size_of_WriteTimer1 0012                     ___awmod@sign 0093  
                 _FromMainLow_MQ 0243                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     __CFG_IESO$ON 000000  
                   ?_in_high_int 008D                 ??_init_uart_recv 008F  
     i2c_slave_int_handler@F9160 0032       i2c_slave_int_handler@F9162 0037  
     i2c_slave_int_handler@F9158 002D                             l3001 0790  
                           l3011 07B0                             l3101 159A  
                           l3013 07EC                             l3021 0836  
                           l3113 15B8                             l3017 0832  
                           l3211 19FE                             l3203 1724  
                           l3231 0C7C                             l3151 162E  
                           l3217 1A22                             l3145 1602  
                           l3171 13F4                             l3093 1584  
                           l3157 165A                             l3247 0D6A  
                           l3183 0E0E                             l3167 138A  
                           l3601 10C4                             l3179 0D8A  
                           l3605 10DC                             l2821 0288  
                           l2813 020C                             l2805 01CA  
                           l2831 02DE                             l2815 0264  
                           l2683 1ACE                             l2675 1AAC  
                           l2923 057E                             l3581 101E  
                           l2845 0342                             l2909 0518  
                           l3591 1074                             l2871 03EE  
                           l2943 060A                             l3593 107C  
                           l3585 1044                             l2697 1B58  
                           l2857 0388                             l2937 05E4  
                           l2945 062A                             l2955 0688  
                           l3597 10B0                             l3589 1062  
                           l2973 071A                             l2957 06C2  
                           l2885 0462                             l2991 076E  
                           l2967 06F6                             l2959 06C6  
                           l2889 0476                      main@correct 019A  
                           _LATA 000F89                             _LATB 000F8A  
                           u2161 0724                             u2325 143E  
                           u1881 0292                             u1891 02A4  
                           i1l57 008A                             u3857 1E1A  
                _FromMainHigh_MQ 0200                   Read1USART@data 0001  
         ?_block_on_To_msgqueues 0001                             _main 00D4  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
         __CFG_DSWDTOSC$T1OSCREF 000000                      main@msgtype 01AE  
                           pclat 000FFA                      i2_check_msg 1D12  
                           prodh 000FF4                             prodl 000FF3  
                           start 00D0                 ?_adc_int_handler 0001  
                     i2_send_msg 0EAC    __size_of_i2c_configure_master 0020  
      ToMainHigh_recvmsg@msgtype 00A5                   send_msg@length 000D  
                __end_of_OpenADC 14C8      __size_of_timer0_int_handler 0012  
                    _Delay1KTCYx 1E14                    __CFG_PLLDIV$3 000000  
                          ?_main 0001                  __end_of___awmod 10E6  
                          _T0CON 000FD5                            _T1CON 000FCD  
                     i1memcpy@d1 0001                            i1l644 1E04  
                          i1l484 1974                            i2l370 09E2  
                          i2l365 08E4                            i2l374 0A70  
                          i2l366 09C8                            i2l376 0B86  
                          i2l379 0BBC                       i1memcpy@s1 0003  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _PORTA 000F80                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TXREG 000FAE                       i2memcpy@d1 0060  
                 __CFG_FCMEN$OFF 000000                       i2memcpy@s1 0062  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
                 i1___awmod@sign 0007                  __end_of_in_main 1B68  
     ToMainLow_recvmsg@maxlength 00A9                     main@motorAck 0186  
                     _Read1USART 1DF6          timer0_lthread@msgbuffer 0093  
                 __CFG_T1DIG$OFF 000000                            tablat 000FF5  
                          plusw2 000FDB                            status 000FD8  
         _uart_trans_int_handler 1910                 __end_ofi1_memcpy 1C6C  
             __size_ofi1___awmod 009C                 __end_ofi2_memcpy 1A98  
             __size_ofi2___awmod 010E                  __initialization 1662  
                   __end_of_main 0850      __size_of_timer1_int_handler 003A  
     __size_of_ToMainLow_recvmsg 0042       __size_of_ToMainLow_sendmsg 0026  
          __size_ofi2_in_low_int 0046                   __CFG_OSC$HSPLL 000000  
                     _Open1USART 1564                           ??_main 00AA  
                send_msg@msgtype 000E                    __activetblptr 000002  
                send_msg@tlength 0012                       _SetChanADC 1DB8  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ANCON0 000F48                           _ANCON1 000F49  
        ??_uart_recv_int_handler 001B                           _T1GCON 000F9A  
                         i1l3701 152E                           i1l3713 155A  
                         i1l3705 1542                           i1l3803 1250  
                         i1l3709 154C                           i1l3821 0066  
                         i1l3663 1C3E                           i1l3809 1294  
                         i1l3827 0070                           i1l3693 1510  
                         i1l3669 1C5A                           i1l3765 12EC  
                         i1l3837 0080                           i2l4201 1152  
                         i1l3697 1522                           i1l3689 14F4  
                     _OpenTimer0 1D48                       _OpenTimer1 1BEC  
                         i1l3699 152A                           i2l4221 11EA  
                         i2l4213 11BE                           i2l4205 1170  
                         i1l3789 1C98                   __CFG_WDTEN$OFF 000000  
                         i2l4207 1182                           i2l4209 118A  
                         i2l4217 11D2                           i2l4147 1B14  
                         i2l4139 1AF2                           i2l4163 0F08  
                         i2l4181 1A5C                           i2l4187 1A80  
                         i2l4197 112C                           i2l3901 08A0  
                         i2l3921 0A1A                           i2l3851 1790  
                         i2l3917 0A00                           i2l3909 09B0  
                         i2l3937 0B08                           i2l3859 18AC  
                         i2l3947 0B8C                           i2l3955 0BD6  
                         i2l3897 086C                           _RCREG1 000FAF  
                  ??_SleepIfOkay 0064                           _RCSTA1 000FAC  
                         _OSCCON 000FD3                           _SPBRG1 000FB0  
                         _SSPADD 000FC8                   __CFG_WPCFG$OFF 000000  
                         _SSPBUF 000FC9                           _TXSTA1 000FAD  
             timer0_lthread@tptr 008D                   __CFG_WPDIS$OFF 000000  
                      ??_OpenADC 0090                     i2_in_low_int 1ADE  
                    ?i2_send_msg 006A                   __CFG_XINST$OFF 000000  
                         _t1Mult 003B                  _i2c_int_handler 1ED2  
                      ??___awmod 0091                  _i2c_master_recv 1978  
                _i2c_master_send 0D6E                 OpenTimer0@config 008D  
                         _ic_ptr 00C8                    main@msgbuffer 01A0  
               __end_of_init_i2c 18A6                 OpenTimer1@config 008F  
                         _memcpy 19DC                           clear_0 1668  
                         clear_1 1674                           clear_2 1680  
                ___awmod@divisor 008F                           _uc_ptr 003F  
                ___awmod@counter 0092                           main@ic 01C0  
                         main@uc 01B1                 __end_of_recv_msg 0D6E  
                  main@sensorMsg 0199                        ??_in_main 0093  
              __end_ofi1___awmod 1564                 __end_of_send_msg 1374  
                   __pdataCOMRAM 002D                __end_ofi2___awmod 11F4  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 0090  
                 i2___awmod@sign 0066         ToMainLow_recvmsg@msgtype 00A5  
           __size_of_in_high_int 0012                      ?_Read1USART 0001  
                     __accesstop 0060          __end_of__initialization 16D2  
     __end_of_ToMainHigh_recvmsg 1BEC       __end_of_ToMainHigh_sendmsg 1D12  
                __CFG_IOL1WAY$ON 000000             __CFG_WPEND$PAGE_WPFP 000000  
    __end_of_init_timer1_lthread 1E64              __end_of_SleepIfOkay 1910  
                 __pcstackCOMRAM 0001                     __pidataBANK1 1E2A  
         __size_ofi2_in_high_int 0012               __size_of_check_msg 0036  
                __CFG_DSWDTPS$G2 000000                      ?_Open1USART 008D  
                    ?_SetChanADC 0001                        ?i1_memcpy 0001  
  __size_of_InterruptHandlerHigh 17C6      __end_of_InterruptHandlerLow 00D0  
                      ?i2_memcpy 0060                    _ToMainHigh_MQ 0100  
               _enter_sleep_mode 1ED8              __size_ofi2_send_msg 012C  
                  check_msg@qptr 008D          ??_block_on_To_msgqueues 0093  
           __size_of_init_queues 006E                       __pbssBANK0 00AC  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 008D  
                     __pnvCOMRAM 003F          __end_of_i2c_int_handler 1ED8  
                   ?i2_check_msg 0060          __end_of_i2c_master_recv 19DC  
        __end_of_i2c_master_send 0EAC         ??_i2c_master_int_handler 007A  
              recv_msg@maxlength 0099                  recv_msg@msgtype 009A  
                recv_msg@tlength 00A1                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 0003                          ?_memcpy 008D  
               WriteTimer1@timer 0003                    ??_WriteTimer0 0003  
                  ??_WriteTimer1 0003              __size_of_Read1USART 001E  
        __size_of_timer0_lthread 0012                 Open1USART@config 0092  
   __end_of_i2c_configure_master 1DB8                       ??i1_memcpy 0007  
                     ??i2_memcpy 0066                   main@lastMotors 01AB  
                        _SPBRGH1 000F7F                    i2_in_high_int 1EAC  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
              __end_of_check_msg 1CDC                        ?_init_i2c 008D  
                    _SleepIfOkay 18A6              __size_of_Open1USART 0080  
                      ?_recv_msg 0097                          _OpenADC 1428  
                     _in_low_int 1A98                          __Hparam 0000  
            __size_of_SetChanADC 0020                        ?_send_msg 000B  
                        __Lparam 0000       __end_of_timer0_int_handler 1E9A  
               init_uart_recv@uc 008D                          ___awmod 0FD8  
                __CFG_STVREN$OFF 000000                          __pcinit 1662  
                __size_of_memcpy 005E         __size_of_adc_int_handler 0002  
                     _init_queue 16DC                          __ramtop 0F00  
            __size_of_OpenTimer0 002A              __size_of_OpenTimer1 0040  
                        __ptext0 00D4                          __ptext1 1374  
                        __ptext2 1E40                          __ptext3 1DD8  
                        __ptext4 1E52                          __ptext5 17CE  
                        __ptext6 16DC                          __ptext7 183C  
                        __ptext8 0D6E                          __ptext9 1D98  
                      _T0CONbits 000FD5                OpenTimer1@config1 008D  
                        _in_main 1B24                        _T1CONbits 000FCD  
               ___awmod@dividend 008D              __end_of_WriteTimer0 1EAC  
            __end_of_WriteTimer1 1E88                   ?i2_in_high_int 0060  
 __end_of_uart_trans_int_handler 1978                   OpenADC@config2 008D  
                 OpenADC@config3 008E                          main@msg 018C  
                 __pintcode_body 1756             end_of_initialization 16D2  
 __size_of_uart_recv_int_handler 00C0                          memcpy@d 0093  
                        memcpy@n 0091                          memcpy@s 0095  
  __end_of_uart_recv_int_handler 12B4                       ??_init_i2c 008F  
                  __Lmediumconst 0000                          int_func 1756  
        __size_of_init_uart_recv 001E                 ?_i2c_int_handler 0001  
               ?_i2c_master_recv 0001                 ?_i2c_master_send 008D  
                     ??_recv_msg 009E                     ??i2_send_msg 0070  
                     ??_send_msg 0011  __size_of_i2c_master_int_handler 03C0  
     __end_of_timer1_int_handler 1CA6                        _RCSTAbits 000FAC  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0076  
                     _uart_trans 1374                        _PORTBbits 000F81  
               __CFG_DSBOREN$OFF 000000                 __CFG_CPUDIV$OSC1 000000  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
                      i1___awmod 14C8               __end_ofi2_send_msg 0FD8  
                      i2___awmod 10E6                     ??_Read1USART 0001  
              __CFG_WPFP$PAGE_63 000000                        _TXSTAbits 000FAD  
                     main@length 01AD                      ?_in_low_int 008F  
          timer0_lthread@msgtype 008F             _i2c_configure_master 1D98  
            __CFG_MSSP7B_EN$MSK7 000000             __size_ofi2_check_msg 0036  
       __end_of_enter_sleep_mode 1EDE               _ToMainHigh_recvmsg 1BAA  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1CDC  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
      i2c_master_send@recvlength 008D                    __pidataCOMRAM 1EBE  
                 _timer0_lthread 1E40                     ??_Open1USART 008F  
                    ?_init_queue 008D                        i2memcpy@d 0066  
                    _WriteTimer0 1E9A                      _WriteTimer1 1E76  
                      i2memcpy@n 0064                        i2memcpy@s 0068  
             __end_of_Read1USART 1E14                   __end_of_memcpy 1A3A  
              _enable_interrupts 1ECA             __size_of_Delay1KTCYx 0016  
               __CFG_DSWDTEN$OFF 000000                     ??_SetChanADC 008D  
      i2c_master_send@sendlength 0093              ?_ToMainHigh_recvmsg 00A5  
                ??i2_in_high_int 0062              ?_ToMainHigh_sendmsg 0076  
             ?_enable_interrupts 0001              start_initialization 1662  
         _i2c_master_int_handler 0850                    ??_in_high_int 008F  
              ??_adc_int_handler 0001                       ?i1___awmod 0001  
              __size_ofi1_memcpy 0040                __size_ofi2_memcpy 005E  
      i2c_master_send@slave_addr 0090                       ?i2___awmod 0060  
            ??_enable_interrupts 008D                     ??_OpenTimer0 008D  
                   ??_OpenTimer1 008E   __size_of_block_on_To_msgqueues 007E  
  __end_of_block_on_To_msgqueues 1662     __end_of_InterruptHandlerHigh 17CE  
             __end_of_Open1USART 15E4                       init_i2c@ic 008D  
           ??_ToMainHigh_recvmsg 00A9             ??_ToMainHigh_sendmsg 0079  
          ?_i2c_configure_master 0001               __end_of_SetChanADC 1DD8  
         __end_of_timer0_lthread 1E52                      __pdataBANK1 01DD  
             i1___awmod@dividend 0001                 __CFG_LPT1OSC$OFF 000000  
      __end_of_enable_interrupts 1ED2                         ??_memcpy 0093  
                    ?_uart_trans 008D     __size_of_init_timer1_lthread 0012  
             __end_of_OpenTimer0 1D72               __end_of_OpenTimer1 1C2C  
                    __pbssCOMRAM 0039                    ??_init_queues 0091  
                  __pcstackBANK0 0060                    __pcstackBANK1 0186  
            __size_of_in_low_int 0046                        _adcbuffer 00AC  
                Delay1KTCYx@unit 008D         ToMainLow_sendmsg@msgtype 0017  
   __size_of_InterruptHandlerLow 00B8              __end_of_in_high_int 1E76  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 00A7  
                   _ToMainLow_MQ 0143              __size_of_init_queue 007A  
                 _init_uart_recv 1DD8                        _check_msg 1CA6  
                      __pnvBANK0 00C8                __size_of_init_i2c 006A  
                       ?_OpenADC 008D                     recv_msg@data 009C  
                   recv_msg@qmsg 00A3                     recv_msg@slot 00A0  
                   recv_msg@qptr 0097                __size_of_recv_msg 015E  
                      __pintcode 0008                __size_of_send_msg 00C0  
                       ?___awmod 008D                  ?_timer0_lthread 008D  
                    __pintcodelo 0018           ToMainHigh_recvmsg@data 00A7  
                Open1USART@spbrg 008D                         ?_in_main 0091  
              WriteTimer0@timer0 0001               _timer0_int_handler 1E88  
              WriteTimer1@timer1 0001             __CFG_RTCOSC$T1OSCREF 000000  
                    ??i1___awmod 0005            ToMainLow_sendmsg@data 0018  
                    ??i2___awmod 0064              ?_timer0_int_handler 0001  
         __end_of_init_uart_recv 1DF6              __end_of_init_queues 183C  
          i2c_master_recv@length 0060              __size_of_uart_trans 00B4  
                  OpenADC@config 0093                         _LATAbits 000F89  
                       _LATBbits 000F8A           ??_i2c_configure_master 008D  
                i2check_msg@qptr 0060                       ?_check_msg 008D  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                  ?i2_in_low_int 0062                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 0077                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                        main@F9242 01EF  
                      main@F9252 01F1                        main@F9254 01E9  
                      main@F9247 01DD                        main@F9249 01E3  
           ??_timer0_int_handler 0005       __size_of_enable_interrupts 0008  
                     _ADCON0bits 000FC2             timer0_lthread@length 0091  
             _timer1_int_handler 1C6C                         i1_memcpy 1C2C  
           _InterruptHandlerHigh 0008                         i2_memcpy 1A3A  
           timer0_lthread@msgval 0095                        main@state 01AF  
                    _in_high_int 1E64                     send_msg@data 000F  
                   send_msg@qmsg 0015                     send_msg@slot 0014  
                   send_msg@qptr 000B                      _INTCON2bits 000FF1  
                      copy_data0 16A6                        copy_data1 16C6  
            ?_timer1_int_handler 0001               i2___awmod@dividend 0060  
                ?_init_uart_recv 008D                   ??i2_in_low_int 0064  
                       __Hparam0 0000            _uart_recv_int_handler 11F4  
                   ??_in_low_int 0091                         __Lparam0 0000  
               __size_of_OpenADC 00A0                ?_enter_sleep_mode 0001  
              i1___awmod@divisor 0003             ??_timer1_int_handler 001B  
              i1___awmod@counter 0006                  _adc_int_handler 1EDE  
       __size_of_i2c_int_handler 0006                 __size_of___awmod 010E  
             ??_enter_sleep_mode 0060         __size_of_i2c_master_recv 0064  
       __size_of_i2c_master_send 013E                     ??_init_queue 008F  
                   ?_WriteTimer0 0001                     ?_WriteTimer1 0001  
        ToMainLow_sendmsg@length 001A          ?_i2c_master_int_handler 0001  
              main@t0thread_data 0195            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 0044                i2send_msg@msgtype 006D  
    ToMainHigh_recvmsg@maxlength 00A9                i2send_msg@tlength 0071  
        init_timer1_lthread@tptr 008D                      _init_queues 17CE  
             __end_of_in_low_int 1ADE                         __ptext10 1ECA  
                       __ptext11 15E4                         __ptext20 19DC  
                       __ptext12 1B24                         __ptext21 0FD8  
                       __ptext13 1A98                       _T1GCONbits 000F9A  
                       __ptext30 1DF6                         __ptext22 1DB8  
                       __ptext14 1E64                         __ptext31 1C6C  
                       __ptext23 1BEC                         __ptext15 1CA6  
                       __ptext32 1E76                         __ptext24 1D48  
                       __ptext16 1E14                         __ptext41 1ED2  
                       __ptext33 1D72                         __ptext25 1428  
                       __ptext17 1B68                         __ptext50 1EAC  
                       __ptext42 0850                         __ptext34 12B4  
                       __ptext26 1564                         __ptext18 1BAA  
                       __ptext51 1D12                         __ptext43 1978  
                       __ptext35 1C2C                         __ptext19 0C10  
                       __ptext52 1ED8                         __ptext44 1CDC  
                       __ptext36 14C8                         __ptext28 1910  
                       __ptext45 0EAC                         __ptext37 1E88  
                       __ptext29 11F4                         __ptext46 1A3A  
                       __ptext38 1E9A                         __ptext47 10E6  
                       __ptext39 1EDE                         __ptext48 18A6  
                       __ptext49 1ADE                         _init_i2c 183C  
            _init_timer1_lthread 1E52                    __size_of_main 077C  
                  ??i2_check_msg 0062                main@t1thread_data 0197  
                    ??_check_msg 008F               __end_of_init_queue 1756  
           __size_of_SleepIfOkay 006A                         _recv_msg 0C10  
                       _send_msg 12B4                   init_queue@qptr 008D  
                  ??_Delay1KTCYx 008D   __end_of_i2c_master_int_handler 0C10  
               uart_trans@length 0091                     ??_uart_trans 008F  
            _InterruptHandlerLow 0018                         main@stop 018F  
           ?_init_timer1_lthread 008D                    _USART1_Status 003E  
       ??_uart_trans_int_handler 0001                i2___awmod@divisor 0062  
              i2___awmod@counter 0065                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                     _UART_timeout 0039  
                       memcpy@d1 008D                         memcpy@s1 008F  
          __end_ofi2_in_high_int 1EBE                 i2send_msg@length 006C  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001           ?_uart_recv_int_handler 0001  
             __end_of_uart_trans 1428                SetChanADC@channel 008E  
                     _RCSTA1bits 000FAC            _block_on_To_msgqueues 15E4  
               ??_timer0_lthread 0095      __size_of_ToMainHigh_recvmsg 0042  
        __end_of_adc_int_handler 1EE0      __size_of_ToMainHigh_sendmsg 0036  
                     _OSCCONbits 000FD3         ToMainHigh_sendmsg@length 0079  
            __end_ofi2_check_msg 1D48            ??_init_timer1_lthread 008F  
         ??_InterruptHandlerHigh 007F                _ToMainLow_recvmsg 1B68  
              _ToMainLow_sendmsg 1D72               main@last_reg_recvd 018E  
           __end_ofi2_in_low_int 1B24               ?_ToMainLow_recvmsg 00A5  
            __end_of_Delay1KTCYx 1E2A                ??_i2c_int_handler 007F  
             ?_ToMainLow_sendmsg 0017                ??_i2c_master_recv 0060  
              ??_i2c_master_send 0091               i2c_master_send@msg 008E  
                 uart_trans@data 008D                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 006E  
          ??_InterruptHandlerLow 001C              ??_ToMainLow_recvmsg 00A9  
                 i2send_msg@qmsg 0074                   i2send_msg@slot 0073  
                 i2send_msg@qptr 006A              ??_ToMainLow_sendmsg 001A  
