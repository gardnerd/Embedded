

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Apr 09 18:03:53 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    95                           	psect	param0,global,class=BANK0,space=1,delta=1
    96  0000                     
    97                           	psect	idataCOMRAM
    98  002DA4                     __pidataCOMRAM:
    99                           	opt stack 0
   100                           
   101                           ;initializer for timer0_int_handler@F5118
   102  002DA4  04                 	db	4
   103  002DA5  00                 	db	0
   104  002DA6  00                 	db	0
   105  002DA7  00                 	db	0
   106  002DA8  00                 	db	0
   107  002DA9  00                 	db	0
   108                           
   109                           ;initializer for timer1_int_handler@F5122
   110  002DAA  04                 	db	4
   111  002DAB  00                 	db	0
   112  002DAC  00                 	db	0
   113  002DAD  00                 	db	0
   114  002DAE  00                 	db	0
   115  002DAF  00                 	db	0
   116                           
   117                           ;initializer for timer0_int_handler@F5120
   118  002DB0  40                 	db	64
   119  002DB1  40                 	db	64
   120                           
   121                           ;initializer for timer1_int_handler@F5124
   122  002DB2  C0                 	db	192
   123  002DB3  C0                 	db	192
   124                           
   125                           	psect	idataBANK0
   126  002DBC                     __pidataBANK0:
   127                           	opt stack 0
   128                           
   129                           ;initializer for i2c_slave_int_handler@F5145
   130  002DBC  04                 	db	4
   131  002DBD  00                 	db	0
   132  002DBE  00                 	db	0
   133  002DBF  00                 	db	0
   134  002DC0  00                 	db	0
   135  002DC1  00                 	db	0
   136                           
   137                           	psect	idataBANK1
   138  002DCE                     __pidataBANK1:
   139                           	opt stack 0
   140                           
   141                           ;initializer for main@F5223
   142  002DCE  01                 	db	1
   143  002DCF  02                 	db	2
   144  0000                     _ADCON0	set	4034
   145  0000                     _ADCON0bits	set	4034
   146  0000                     _ADCON1	set	4033
   147  0000                     _ADCON2	set	4032
   148  0000                     _ADRESH	set	4036
   149  0000                     _INTCON2bits	set	4081
   150  0000                     _INTCONbits	set	4082
   151  0000                     _IPR1bits	set	3999
   152  0000                     _LATA	set	3977
   153  0000                     _LATB	set	3978
   154  0000                     _LATBbits	set	3978
   155  0000                     _OSCCON	set	4051
   156  0000                     _OSCCONbits	set	4051
   157  0000                     _OSCTUNEbits	set	3995
   158  0000                     _PIE1bits	set	3997
   159  0000                     _PIR1bits	set	3998
   160  0000                     _PORTA	set	3968
   161  0000                     _PORTAbits	set	3968
   162  0000                     _RCONbits	set	4048
   163  0000                     _RCREG	set	4014
   164  0000                     _RCSTA	set	4011
   165  0000                     _RCSTAbits	set	4011
   166  0000                     _SPBRG	set	4015
   167  0000                     _SPBRGH	set	4016
   168  0000                     _SSPADD	set	4040
   169  0000                     _SSPBUF	set	4041
   170  0000                     _SSPCON1	set	4038
   171  0000                     _SSPCON1bits	set	4038
   172  0000                     _SSPCON2	set	4037
   173  0000                     _SSPCON2bits	set	4037
   174  0000                     _SSPSTAT	set	4039
   175  0000                     _SSPSTATbits	set	4039
   176  0000                     _T0CON	set	4053
   177  0000                     _T0CONbits	set	4053
   178  0000                     _T1CON	set	4045
   179  0000                     _T1CONbits	set	4045
   180  0000                     _TMR0H	set	4055
   181  0000                     _TMR0L	set	4054
   182  0000                     _TMR1H	set	4047
   183  0000                     _TMR1L	set	4046
   184  0000                     _TRISA	set	3986
   185  0000                     _TRISB	set	3987
   186  0000                     _TRISC	set	3988
   187  0000                     _TRISCbits	set	3988
   188  0000                     _TXREG	set	4013
   189  0000                     _TXSTA	set	4012
   190  0000                     _TXSTAbits	set	4012
   191                           
   192                           	psect	nvCOMRAM
   193  00006A                     __pnvCOMRAM:
   194                           	opt stack 0
   195  00006A                     _uc_ptr:
   196                           	opt stack 0
   197  00006A                     	ds	2
   198                           
   199                           	psect	nvBANK1
   200  0001C5                     __pnvBANK1:
   201                           	opt stack 0
   202  0001C5                     _ic_ptr:
   203                           	opt stack 0
   204  0001C5                     	ds	2
   205                           
   206                           ; #config settings
   207  0000                     
   208                           	psect	cinit
   209  0020AA                     __pcinit:
   210                           	opt stack 0
   211  0020AA                     start_initialization:
   212                           	opt stack 0
   213  0020AA                     __initialization:
   214                           	opt stack 0
   215                           
   216                           ; Clear objects allocated to BANK2 (201 bytes)
   217  0020AA  EE02  F000         	lfsr	0,__pbssBANK2
   218  0020AE  0EC9               	movlw	201
   219  0020B0                     clear_0:
   220  0020B0  6AEE               	clrf	postinc0,c
   221  0020B2  06E8               	decf	wreg,f,c
   222  0020B4  E1FD               	bnz	clear_0
   223                           
   224                           ; Clear objects allocated to BANK1 (95 bytes)
   225  0020B6  EE01  F066         	lfsr	0,__pbssBANK1
   226  0020BA  0E5F               	movlw	95
   227  0020BC                     clear_1:
   228  0020BC  6AEE               	clrf	postinc0,c
   229  0020BE  06E8               	decf	wreg,f,c
   230  0020C0  E1FD               	bnz	clear_1
   231                           
   232                           ; Clear objects allocated to BANK0 (16 bytes)
   233  0020C2  EE00  F0D0         	lfsr	0,__pbssBANK0
   234  0020C6  0E10               	movlw	16
   235  0020C8                     clear_2:
   236  0020C8  6AEE               	clrf	postinc0,c
   237  0020CA  06E8               	decf	wreg,f,c
   238  0020CC  E1FD               	bnz	clear_2
   239                           
   240                           ; Clear objects allocated to COMRAM (6 bytes)
   241  0020CE  6A69               	clrf	(__pbssCOMRAM+5)& (0+255),c
   242  0020D0  6A68               	clrf	(__pbssCOMRAM+4)& (0+255),c
   243  0020D2  6A67               	clrf	(__pbssCOMRAM+3)& (0+255),c
   244  0020D4  6A66               	clrf	(__pbssCOMRAM+2)& (0+255),c
   245  0020D6  6A65               	clrf	(__pbssCOMRAM+1)& (0+255),c
   246  0020D8  6A64               	clrf	__pbssCOMRAM& (0+255),c
   247                           
   248                           ; Initialize objects allocated to BANK1 (2 bytes)
   249                           ; load TBLPTR registers with __pidataBANK1
   250  0020DA  0ECE               	movlw	low __pidataBANK1
   251  0020DC  6EF6               	movwf	tblptrl,c
   252  0020DE  0E2D               	movlw	high __pidataBANK1
   253  0020E0  6EF7               	movwf	tblptrh,c
   254  0020E2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   255  0020E4  6EF8               	movwf	tblptru,c
   256  0020E6  0009               	tblrd		*+	;fetch initializer
   257  0020E8  CFF5 F1C7          	movff	tablat,__pdataBANK1
   258  0020EC  0009               	tblrd		*+	;fetch initializer
   259  0020EE  CFF5 F1C8          	movff	tablat,__pdataBANK1+1
   260                           
   261                           ; Initialize objects allocated to BANK0 (6 bytes)
   262                           ; load TBLPTR registers with __pidataBANK0
   263  0020F2  0EBC               	movlw	low __pidataBANK0
   264  0020F4  6EF6               	movwf	tblptrl,c
   265  0020F6  0E2D               	movlw	high __pidataBANK0
   266  0020F8  6EF7               	movwf	tblptrh,c
   267  0020FA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   268  0020FC  6EF8               	movwf	tblptru,c
   269  0020FE  EE00  F0E0         	lfsr	0,__pdataBANK0
   270  002102  EE10 F006          	lfsr	1,6
   271  002106                     copy_data0:
   272  002106  0009               	tblrd		*+
   273  002108  CFF5 FFEE          	movff	tablat,postinc0
   274  00210C  50E5               	movf	postdec1,w,c
   275  00210E  50E1               	movf	fsr1l,w,c
   276  002110  E1FA               	bnz	copy_data0
   277                           
   278                           ; Initialize objects allocated to COMRAM (16 bytes)
   279                           ; load TBLPTR registers with __pidataCOMRAM
   280  002112  0EA4               	movlw	low __pidataCOMRAM
   281  002114  6EF6               	movwf	tblptrl,c
   282  002116  0E2D               	movlw	high __pidataCOMRAM
   283  002118  6EF7               	movwf	tblptrh,c
   284  00211A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   285  00211C  6EF8               	movwf	tblptru,c
   286  00211E  EE00  F054         	lfsr	0,__pdataCOMRAM
   287  002122  EE10 F010          	lfsr	1,16
   288  002126                     copy_data1:
   289  002126  0009               	tblrd		*+
   290  002128  CFF5 FFEE          	movff	tablat,postinc0
   291  00212C  50E5               	movf	postdec1,w,c
   292  00212E  50E1               	movf	fsr1l,w,c
   293  002130  E1FA               	bnz	copy_data1
   294  002132                     end_of_initialization:
   295                           	opt stack 0
   296  002132                     __end_of__initialization:
   297                           	opt stack 0
   298  002132  0E00               	movlw	low (__Lmediumconst shr (0+16))
   299  002134  6EF8               	movwf	tblptru,c
   300  002136  0100               	movlb	0
   301  002138  EFB6  F004         	goto	_main	;jump to C main() function
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           postdec1	equ	0xFE5
   309                           fsr1l	equ	0xFE1
   310                           
   311                           	psect	bssCOMRAM
   312  000064                     __pbssCOMRAM:
   313                           	opt stack 0
   314  000064                     _UART_timeout:
   315                           	opt stack 0
   316  000064                     	ds	2
   317  000066                     _USART_Status:
   318                           	opt stack 0
   319  000066                     	ds	1
   320  000067                     _distMoved:
   321                           	opt stack 0
   322  000067                     	ds	1
   323  000068                     _leftDistDesired:
   324                           	opt stack 0
   325  000068                     	ds	1
   326  000069                     _rightDistDesired:
   327                           	opt stack 0
   328  000069                     	ds	1
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           postdec1	equ	0xFE5
   336                           fsr1l	equ	0xFE1
   337                           
   338                           	psect	dataCOMRAM
   339  000054                     __pdataCOMRAM:
   340                           	opt stack 0
   341  000054                     timer0_int_handler@F5118:
   342                           	opt stack 0
   343  000054                     	ds	6
   344  00005A                     timer1_int_handler@F5122:
   345                           	opt stack 0
   346  00005A                     	ds	6
   347  000060                     timer0_int_handler@F5120:
   348                           	opt stack 0
   349  000060                     	ds	2
   350  000062                     timer1_int_handler@F5124:
   351                           	opt stack 0
   352  000062                     	ds	2
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           postdec1	equ	0xFE5
   360                           fsr1l	equ	0xFE1
   361                           
   362                           	psect	bssBANK0
   363  0000D0                     __pbssBANK0:
   364                           	opt stack 0
   365  0000D0                     i2c_slave_int_handler@F5143:
   366                           	opt stack 0
   367  0000D0                     	ds	6
   368  0000D6                     i2c_slave_int_handler@F5147:
   369                           	opt stack 0
   370  0000D6                     	ds	6
   371  0000DC                     _MQ_Main_Willing_to_block:
   372                           	opt stack 0
   373  0000DC                     	ds	1
   374  0000DD                     _leftEncoder:
   375                           	opt stack 0
   376  0000DD                     	ds	1
   377  0000DE                     _rightEncoder:
   378                           	opt stack 0
   379  0000DE                     	ds	1
   380  0000DF                     _stopCond:
   381                           	opt stack 0
   382  0000DF                     	ds	1
   383                           tblptru	equ	0xFF8
   384                           tblptrh	equ	0xFF7
   385                           tblptrl	equ	0xFF6
   386                           tablat	equ	0xFF5
   387                           postinc0	equ	0xFEE
   388                           wreg	equ	0xFE8
   389                           postdec1	equ	0xFE5
   390                           fsr1l	equ	0xFE1
   391                           
   392                           	psect	dataBANK0
   393  0000E0                     __pdataBANK0:
   394                           	opt stack 0
   395  0000E0                     i2c_slave_int_handler@F5145:
   396                           	opt stack 0
   397  0000E0                     	ds	6
   398                           tblptru	equ	0xFF8
   399                           tblptrh	equ	0xFF7
   400                           tblptrl	equ	0xFF6
   401                           tablat	equ	0xFF5
   402                           postinc0	equ	0xFEE
   403                           wreg	equ	0xFE8
   404                           postdec1	equ	0xFE5
   405                           fsr1l	equ	0xFE1
   406                           
   407                           	psect	bssBANK1
   408  000166                     __pbssBANK1:
   409                           	opt stack 0
   410  000166                     _adcbuffer:
   411                           	opt stack 0
   412  000166                     	ds	28
   413  000182                     _ToMainLow_MQ:
   414                           	opt stack 0
   415  000182                     	ds	67
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           postdec1	equ	0xFE5
   423                           fsr1l	equ	0xFE1
   424                           
   425                           	psect	dataBANK1
   426  0001C7                     __pdataBANK1:
   427                           	opt stack 0
   428  0001C7                     main@F5223:
   429                           	opt stack 0
   430  0001C7                     	ds	2
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           postdec1	equ	0xFE5
   438                           fsr1l	equ	0xFE1
   439                           
   440                           	psect	bssBANK2
   441  000200                     __pbssBANK2:
   442                           	opt stack 0
   443  000200                     _FromMainHigh_MQ:
   444                           	opt stack 0
   445  000200                     	ds	67
   446  000243                     _FromMainLow_MQ:
   447                           	opt stack 0
   448  000243                     	ds	67
   449  000286                     _ToMainHigh_MQ:
   450                           	opt stack 0
   451  000286                     	ds	67
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           postdec1	equ	0xFE5
   459                           fsr1l	equ	0xFE1
   460                           
   461                           	psect	cstackBANK1
   462  000100                     __pcstackBANK1:
   463                           	opt stack 0
   464  000100                     ??_SetChanADC:
   465  000100                     ?_in_high_int:
   466                           	opt stack 0
   467  000100                     ?___awmod:
   468                           	opt stack 0
   469  000100                     ?___lwmod:
   470                           	opt stack 0
   471  000100                     i2c_master_send@recvlength:
   472                           	opt stack 0
   473  000100                     i2c_configure_slave@addr:
   474                           	opt stack 0
   475  000100                     OpenADC@config2:
   476                           	opt stack 0
   477  000100                     OpenTimer0@config:
   478                           	opt stack 0
   479  000100                     OpenTimer1@config:
   480                           	opt stack 0
   481  000100                     Delay1KTCYx@unit:
   482                           	opt stack 0
   483  000100                     init_queue@qptr:
   484                           	opt stack 0
   485  000100                     check_msg@qptr:
   486                           	opt stack 0
   487  000100                     init_i2c@ic:
   488                           	opt stack 0
   489  000100                     init_uart_recv@uc:
   490                           	opt stack 0
   491  000100                     uart_trans@data:
   492                           	opt stack 0
   493  000100                     timer0_lthread@tptr:
   494                           	opt stack 0
   495  000100                     init_timer1_lthread@tptr:
   496                           	opt stack 0
   497  000100                     OpenUSART@spbrg:
   498                           	opt stack 0
   499  000100                     ___awmod@dividend:
   500                           	opt stack 0
   501  000100                     ___lwmod@dividend:
   502                           	opt stack 0
   503  000100                     memcpy@d1:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x0
   507  000100                     	ds	1
   508  000101                     OpenADC@portconfig:
   509                           	opt stack 0
   510  000101                     SetChanADC@channel:
   511                           	opt stack 0
   512  000101                     i2c_master_send@msg:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x1
   516  000101                     	ds	1
   517  000102                     ??_OpenUSART:
   518  000102                     ??_OpenADC:
   519  000102                     ??_uart_trans:
   520  000102                     ??_init_queue:
   521  000102                     ??_check_msg:
   522  000102                     ?_in_low_int:
   523                           	opt stack 0
   524  000102                     timer0_lthread@msgtype:
   525                           	opt stack 0
   526  000102                     ___awmod@divisor:
   527                           	opt stack 0
   528  000102                     ___lwmod@divisor:
   529                           	opt stack 0
   530  000102                     memcpy@s1:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x2
   534  000102                     	ds	1
   535  000103                     init_queue@i:
   536                           	opt stack 0
   537  000103                     i2c_master_send@slave_addr:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x3
   541  000103                     	ds	1
   542  000104                     ??_init_queues:
   543  000104                     ??_i2c_master_send:
   544  000104                     ??___awmod:
   545  000104                     ??___lwmod:
   546  000104                     ?_in_main:
   547                           	opt stack 0
   548  000104                     uart_trans@length:
   549                           	opt stack 0
   550  000104                     OpenADC@config:
   551                           	opt stack 0
   552  000104                     timer0_lthread@length:
   553                           	opt stack 0
   554  000104                     memcpy@n:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x4
   558  000104                     	ds	1
   559  000105                     OpenUSART@config:
   560                           	opt stack 0
   561  000105                     ___awmod@counter:
   562                           	opt stack 0
   563  000105                     ___lwmod@counter:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x5
   567  000105                     	ds	1
   568  000106                     ??_block_on_To_msgqueues:
   569  000106                     i2c_master_send@sendlength:
   570                           	opt stack 0
   571  000106                     ___awmod@sign:
   572                           	opt stack 0
   573  000106                     timer0_lthread@msgbuffer:
   574                           	opt stack 0
   575  000106                     memcpy@d:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x6
   579  000106                     	ds	2
   580  000108                     timer0_lthread@msgval:
   581                           	opt stack 0
   582  000108                     memcpy@s:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x8
   586  000108                     	ds	2
   587  00010A                     send_msg@qptr:
   588                           	opt stack 0
   589  00010A                     recv_msg@qptr:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0xA
   593  00010A                     	ds	2
   594  00010C                     send_msg@length:
   595                           	opt stack 0
   596  00010C                     recv_msg@maxlength:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0xC
   600  00010C                     	ds	1
   601  00010D                     send_msg@msgtype:
   602                           	opt stack 0
   603  00010D                     recv_msg@msgtype:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0xD
   607  00010D                     	ds	1
   608  00010E                     send_msg@data:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0xE
   612  00010E                     	ds	1
   613  00010F                     recv_msg@data:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0xF
   617  00010F                     	ds	1
   618  000110                     ??_send_msg:
   619                           
   620                           ; 0 bytes @ 0x10
   621  000110                     	ds	1
   622  000111                     ??_recv_msg:
   623  000111                     send_msg@tlength:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x11
   627  000111                     	ds	2
   628  000113                     send_msg@slot:
   629                           	opt stack 0
   630  000113                     recv_msg@slot:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x13
   634  000113                     	ds	1
   635  000114                     send_msg@qmsg:
   636                           	opt stack 0
   637  000114                     recv_msg@tlength:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x14
   641  000114                     	ds	2
   642  000116                     FromMainHigh_sendmsg@msgtype:
   643                           	opt stack 0
   644  000116                     recv_msg@qmsg:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x16
   648  000116                     	ds	1
   649  000117                     FromMainHigh_sendmsg@data:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x17
   653  000117                     	ds	1
   654  000118                     ToMainLow_recvmsg@msgtype:
   655                           	opt stack 0
   656  000118                     ToMainHigh_recvmsg@msgtype:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x18
   660  000118                     	ds	1
   661  000119                     FromMainHigh_sendmsg@length:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0x19
   665  000119                     	ds	1
   666  00011A                     ToMainLow_recvmsg@data:
   667                           	opt stack 0
   668  00011A                     ToMainHigh_recvmsg@data:
   669                           	opt stack 0
   670  00011A                     timer1_lthread@tptr:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x1A
   674  00011A                     	ds	2
   675  00011C                     ToMainLow_recvmsg@maxlength:
   676                           	opt stack 0
   677  00011C                     ToMainHigh_recvmsg@maxlength:
   678                           	opt stack 0
   679  00011C                     timer1_lthread@msgtype:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x1C
   683  00011C                     	ds	2
   684  00011E                     timer1_lthread@length:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x1E
   688  00011E                     	ds	2
   689  000120                     timer1_lthread@msgbuffer:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x20
   693  000120                     	ds	2
   694  000122                     ??_timer1_lthread:
   695                           
   696                           ; 0 bytes @ 0x22
   697  000122                     	ds	1
   698  000123                     timer1_lthread@retval:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x23
   702  000123                     	ds	1
   703  000124                     ??_main:
   704                           
   705                           ; 0 bytes @ 0x24
   706  000124                     	ds	2
   707  000126                     main@msg:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x26
   711  000126                     	ds	2
   712  000128                     main@last_reg_recvd:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x28
   716  000128                     	ds	1
   717  000129                     main@msgbuffer:
   718                           	opt stack 0
   719                           
   720                           ; 11 bytes @ 0x29
   721  000129                     	ds	11
   722  000134                     main@t0thread_data:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x34
   726  000134                     	ds	2
   727  000136                     main@t1thread_data:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x36
   731  000136                     	ds	2
   732  000138                     main@msgtype:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0x38
   736  000138                     	ds	1
   737  000139                     main@length:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x39
   741  000139                     	ds	1
   742  00013A                     main@uc:
   743                           	opt stack 0
   744                           
   745                           ; 15 bytes @ 0x3A
   746  00013A                     	ds	15
   747  000149                     main@ic:
   748                           	opt stack 0
   749                           
   750                           ; 29 bytes @ 0x49
   751  000149                     	ds	29
   752                           tblptru	equ	0xFF8
   753                           tblptrh	equ	0xFF7
   754                           tblptrl	equ	0xFF6
   755                           tablat	equ	0xFF5
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           postdec1	equ	0xFE5
   759                           fsr1l	equ	0xFE1
   760                           
   761                           	psect	cstackBANK0
   762  000080                     __pcstackBANK0:
   763                           	opt stack 0
   764  000080                     ?i2_in_high_int:
   765                           	opt stack 0
   766  000080                     ?i2___awmod:
   767                           	opt stack 0
   768  000080                     handle_start@data_read:
   769                           	opt stack 0
   770  000080                     start_i2c_slave_reply@msg:
   771                           	opt stack 0
   772  000080                     i2check_msg@qptr:
   773                           	opt stack 0
   774  000080                     i2uart_trans@data:
   775                           	opt stack 0
   776  000080                     i2WriteTimer0@timer0:
   777                           	opt stack 0
   778  000080                     i2WriteTimer1@timer1:
   779                           	opt stack 0
   780  000080                     i2memcpy@d1:
   781                           	opt stack 0
   782  000080                     i2___awmod@dividend:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x0
   786  000080                     	ds	2
   787  000082                     ??_start_i2c_slave_reply:
   788  000082                     ??i2_check_msg:
   789  000082                     ??i2_uart_trans:
   790  000082                     ?i2_in_low_int:
   791                           	opt stack 0
   792  000082                     i2WriteTimer0@timer:
   793                           	opt stack 0
   794  000082                     i2WriteTimer1@timer:
   795                           	opt stack 0
   796  000082                     i2memcpy@s1:
   797                           	opt stack 0
   798  000082                     i2___awmod@divisor:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x2
   802  000082                     	ds	2
   803  000084                     ??i2___awmod:
   804  000084                     start_i2c_slave_reply@length:
   805                           	opt stack 0
   806  000084                     i2uart_trans@length:
   807                           	opt stack 0
   808  000084                     i2memcpy@n:
   809                           	opt stack 0
   810                           
   811                           ; 2 bytes @ 0x4
   812  000084                     	ds	1
   813  000085                     i2motorMove@right:
   814                           	opt stack 0
   815  000085                     i2___awmod@counter:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x5
   819  000085                     	ds	1
   820  000086                     i2motorMove@leftDistance:
   821                           	opt stack 0
   822  000086                     i2___awmod@sign:
   823                           	opt stack 0
   824  000086                     i2memcpy@d:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x6
   828  000086                     	ds	1
   829  000087                     i2motorMove@rightDistance:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x7
   833  000087                     	ds	1
   834  000088                     ??i2_motorMove:
   835  000088                     i2memcpy@s:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x8
   839  000088                     	ds	1
   840  000089                     i2motorMove@direction:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x9
   844  000089                     	ds	1
   845  00008A                     i2send_msg@qptr:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0xA
   849  00008A                     	ds	1
   850  00008B                     i2motorMove@left:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0xB
   854  00008B                     	ds	1
   855  00008C                     i2send_msg@length:
   856                           	opt stack 0
   857                           
   858                           ; 1 bytes @ 0xC
   859  00008C                     	ds	1
   860  00008D                     i2send_msg@msgtype:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0xD
   864  00008D                     	ds	1
   865  00008E                     i2send_msg@data:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0xE
   869  00008E                     	ds	2
   870  000090                     ??i2_send_msg:
   871                           
   872                           ; 0 bytes @ 0x10
   873  000090                     	ds	1
   874  000091                     i2send_msg@tlength:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x11
   878  000091                     	ds	2
   879  000093                     i2send_msg@slot:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x13
   883  000093                     	ds	1
   884  000094                     i2send_msg@qmsg:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0x14
   888  000094                     	ds	2
   889  000096                     ToMainHigh_sendmsg@msgtype:
   890                           	opt stack 0
   891                           
   892                           ; 1 bytes @ 0x16
   893  000096                     	ds	1
   894  000097                     ToMainHigh_sendmsg@data:
   895                           	opt stack 0
   896                           
   897                           ; 2 bytes @ 0x17
   898  000097                     	ds	2
   899  000099                     ToMainHigh_sendmsg@length:
   900                           	opt stack 0
   901                           
   902                           ; 1 bytes @ 0x19
   903  000099                     	ds	1
   904  00009A                     ??_i2c_slave_int_handler:
   905                           
   906                           ; 0 bytes @ 0x1A
   907  00009A                     	ds	2
   908  00009C                     i2c_slave_int_handler@ack:
   909                           	opt stack 0
   910                           
   911                           ; 6 bytes @ 0x1C
   912  00009C                     	ds	6
   913  0000A2                     i2c_slave_int_handler@ack_1696:
   914                           	opt stack 0
   915                           
   916                           ; 6 bytes @ 0x22
   917  0000A2                     	ds	6
   918  0000A8                     i2c_slave_int_handler@dist:
   919                           	opt stack 0
   920                           
   921                           ; 6 bytes @ 0x28
   922  0000A8                     	ds	6
   923  0000AE                     i2c_slave_int_handler@messageType:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x2E
   927  0000AE                     	ds	1
   928  0000AF                     i2c_slave_int_handler@bitmask:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x2F
   932  0000AF                     	ds	1
   933  0000B0                     i2c_slave_int_handler@checksum:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x30
   937  0000B0                     	ds	1
   938  0000B1                     i2c_slave_int_handler@error_buf:
   939                           	opt stack 0
   940                           
   941                           ; 3 bytes @ 0x31
   942  0000B1                     	ds	3
   943  0000B4                     i2c_slave_int_handler@data_written:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x34
   947  0000B4                     	ds	1
   948  0000B5                     i2c_slave_int_handler@overrun_error:
   949                           	opt stack 0
   950                           
   951                           ; 1 bytes @ 0x35
   952  0000B5                     	ds	1
   953  0000B6                     i2c_slave_int_handler@message:
   954                           	opt stack 0
   955                           
   956                           ; 6 bytes @ 0x36
   957  0000B6                     	ds	6
   958  0000BC                     i2c_slave_int_handler@i2c_data:
   959                           	opt stack 0
   960                           
   961                           ; 1 bytes @ 0x3C
   962  0000BC                     	ds	1
   963  0000BD                     i2c_slave_int_handler@msg_to_send:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x3D
   967  0000BD                     	ds	1
   968  0000BE                     i2c_slave_int_handler@msg_ready:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x3E
   972  0000BE                     	ds	1
   973  0000BF                     i2c_slave_int_handler@length:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x3F
   977  0000BF                     	ds	2
   978  0000C1                     i2c_slave_int_handler@data_read:
   979                           	opt stack 0
   980                           
   981                           ; 1 bytes @ 0x41
   982  0000C1                     	ds	1
   983  0000C2                     ??_InterruptHandlerHigh:
   984                           
   985                           ; 0 bytes @ 0x42
   986  0000C2                     	ds	14
   987                           tblptru	equ	0xFF8
   988                           tblptrh	equ	0xFF7
   989                           tblptrl	equ	0xFF6
   990                           tablat	equ	0xFF5
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           postdec1	equ	0xFE5
   994                           fsr1l	equ	0xFE1
   995                           
   996                           	psect	cstackCOMRAM
   997  000001                     __pcstackCOMRAM:
   998                           	opt stack 0
   999  000001                     ??_uart_trans_int_handler:
  1000  000001                     ??i1_SetChanADC:
  1001  000001                     ?i1___awmod:
  1002                           	opt stack 0
  1003  000001                     ?___ftpack:
  1004                           	opt stack 0
  1005  000001                     ReadUSART@data:
  1006                           	opt stack 0
  1007  000001                     WriteTimer0@timer0:
  1008                           	opt stack 0
  1009  000001                     WriteTimer1@timer1:
  1010                           	opt stack 0
  1011  000001                     i1uart_trans@data:
  1012                           	opt stack 0
  1013  000001                     i1memcpy@d1:
  1014                           	opt stack 0
  1015  000001                     i1___awmod@dividend:
  1016                           	opt stack 0
  1017  000001                     ___ftpack@arg:
  1018                           	opt stack 0
  1019  000001                     ___ftge@ff1:
  1020                           	opt stack 0
  1021                           
  1022                           ; 3 bytes @ 0x0
  1023  000001                     	ds	1
  1024  000002                     i1SetChanADC@channel:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0x1
  1028  000002                     	ds	1
  1029  000003                     ??i1_uart_trans:
  1030  000003                     WriteTimer0@timer:
  1031                           	opt stack 0
  1032  000003                     WriteTimer1@timer:
  1033                           	opt stack 0
  1034  000003                     i1memcpy@s1:
  1035                           	opt stack 0
  1036  000003                     i1___awmod@divisor:
  1037                           	opt stack 0
  1038                           
  1039                           ; 2 bytes @ 0x2
  1040  000003                     	ds	1
  1041  000004                     ___ftpack@exp:
  1042                           	opt stack 0
  1043  000004                     ___ftge@ff2:
  1044                           	opt stack 0
  1045                           
  1046                           ; 3 bytes @ 0x3
  1047  000004                     	ds	1
  1048  000005                     ??i1___awmod:
  1049  000005                     ___ftpack@sign:
  1050                           	opt stack 0
  1051  000005                     i1uart_trans@length:
  1052                           	opt stack 0
  1053  000005                     i1memcpy@n:
  1054                           	opt stack 0
  1055                           
  1056                           ; 2 bytes @ 0x4
  1057  000005                     	ds	1
  1058  000006                     ??___ftpack:
  1059  000006                     motorMove@right:
  1060                           	opt stack 0
  1061  000006                     i1___awmod@counter:
  1062                           	opt stack 0
  1063                           
  1064                           ; 1 bytes @ 0x5
  1065  000006                     	ds	1
  1066  000007                     ??___ftge:
  1067  000007                     motorMove@leftDistance:
  1068                           	opt stack 0
  1069  000007                     i1___awmod@sign:
  1070                           	opt stack 0
  1071  000007                     i1memcpy@d:
  1072                           	opt stack 0
  1073                           
  1074                           ; 2 bytes @ 0x6
  1075  000007                     	ds	1
  1076  000008                     motorMove@rightDistance:
  1077                           	opt stack 0
  1078                           
  1079                           ; 1 bytes @ 0x7
  1080  000008                     	ds	1
  1081  000009                     ??_motorMove:
  1082  000009                     ?___awtoft:
  1083                           	opt stack 0
  1084  000009                     ?___fttol:
  1085                           	opt stack 0
  1086  000009                     ___awtoft@c:
  1087                           	opt stack 0
  1088  000009                     i1memcpy@s:
  1089                           	opt stack 0
  1090  000009                     ___fttol@f1:
  1091                           	opt stack 0
  1092                           
  1093                           ; 3 bytes @ 0x8
  1094  000009                     	ds	1
  1095  00000A                     motorMove@direction:
  1096                           	opt stack 0
  1097                           
  1098                           ; 2 bytes @ 0x9
  1099  00000A                     	ds	1
  1100  00000B                     i1send_msg@qptr:
  1101                           	opt stack 0
  1102                           
  1103                           ; 2 bytes @ 0xA
  1104  00000B                     	ds	1
  1105  00000C                     ??___awtoft:
  1106  00000C                     motorMove@left:
  1107                           	opt stack 0
  1108                           
  1109                           ; 1 bytes @ 0xB
  1110  00000C                     	ds	1
  1111  00000D                     ??_timer1_int_handler:
  1112  00000D                     ??_timer0_int_handler:
  1113  00000D                     ??___fttol:
  1114  00000D                     ___awtoft@sign:
  1115                           	opt stack 0
  1116  00000D                     i1send_msg@length:
  1117                           	opt stack 0
  1118                           
  1119                           ; 1 bytes @ 0xC
  1120  00000D                     	ds	1
  1121  00000E                     ?___ftmul:
  1122                           	opt stack 0
  1123  00000E                     i1send_msg@msgtype:
  1124                           	opt stack 0
  1125  00000E                     timer0_int_handler@motorcomm:
  1126                           	opt stack 0
  1127  00000E                     timer1_int_handler@motorcomm:
  1128                           	opt stack 0
  1129  00000E                     ___ftmul@f1:
  1130                           	opt stack 0
  1131                           
  1132                           ; 3 bytes @ 0xD
  1133  00000E                     	ds	1
  1134  00000F                     i1send_msg@data:
  1135                           	opt stack 0
  1136                           
  1137                           ; 2 bytes @ 0xE
  1138  00000F                     	ds	1
  1139  000010                     timer0_int_handler@motormsg:
  1140                           	opt stack 0
  1141  000010                     timer1_int_handler@motormsg:
  1142                           	opt stack 0
  1143                           
  1144                           ; 6 bytes @ 0xF
  1145  000010                     	ds	1
  1146  000011                     ??i1_send_msg:
  1147  000011                     ___ftmul@f2:
  1148                           	opt stack 0
  1149                           
  1150                           ; 3 bytes @ 0x10
  1151  000011                     	ds	1
  1152  000012                     ___fttol@sign1:
  1153                           	opt stack 0
  1154  000012                     i1send_msg@tlength:
  1155                           	opt stack 0
  1156                           
  1157                           ; 2 bytes @ 0x11
  1158  000012                     	ds	1
  1159  000013                     ___fttol@lval:
  1160                           	opt stack 0
  1161                           
  1162                           ; 4 bytes @ 0x12
  1163  000013                     	ds	1
  1164  000014                     ??___ftmul:
  1165  000014                     i1send_msg@slot:
  1166                           	opt stack 0
  1167                           
  1168                           ; 1 bytes @ 0x13
  1169  000014                     	ds	1
  1170  000015                     i1send_msg@qmsg:
  1171                           	opt stack 0
  1172                           
  1173                           ; 2 bytes @ 0x14
  1174  000015                     	ds	2
  1175  000017                     ToMainLow_sendmsg@msgtype:
  1176                           	opt stack 0
  1177  000017                     ___ftmul@exp:
  1178                           	opt stack 0
  1179  000017                     ___fttol@exp1:
  1180                           	opt stack 0
  1181                           
  1182                           ; 1 bytes @ 0x16
  1183  000017                     	ds	1
  1184  000018                     ?___ftadd:
  1185                           	opt stack 0
  1186  000018                     ToMainLow_sendmsg@data:
  1187                           	opt stack 0
  1188  000018                     ___ftadd@f1:
  1189                           	opt stack 0
  1190  000018                     ___ftmul@f3_as_product:
  1191                           	opt stack 0
  1192                           
  1193                           ; 3 bytes @ 0x17
  1194  000018                     	ds	2
  1195  00001A                     ToMainLow_sendmsg@length:
  1196                           	opt stack 0
  1197                           
  1198                           ; 1 bytes @ 0x19
  1199  00001A                     	ds	1
  1200  00001B                     ??_uart_recv_int_handler:
  1201  00001B                     ___ftmul@cntr:
  1202                           	opt stack 0
  1203  00001B                     ___ftadd@f2:
  1204                           	opt stack 0
  1205                           
  1206                           ; 3 bytes @ 0x1A
  1207  00001B                     	ds	1
  1208  00001C                     ___ftmul@sign:
  1209                           	opt stack 0
  1210                           
  1211                           ; 1 bytes @ 0x1B
  1212  00001C                     	ds	2
  1213  00001E                     ??___ftadd:
  1214                           
  1215                           ; 0 bytes @ 0x1D
  1216  00001E                     	ds	3
  1217  000021                     ___ftadd@sign:
  1218                           	opt stack 0
  1219                           
  1220                           ; 1 bytes @ 0x20
  1221  000021                     	ds	1
  1222  000022                     ___ftadd@exp2:
  1223                           	opt stack 0
  1224                           
  1225                           ; 1 bytes @ 0x21
  1226  000022                     	ds	1
  1227  000023                     ___ftadd@exp1:
  1228                           	opt stack 0
  1229                           
  1230                           ; 1 bytes @ 0x22
  1231  000023                     	ds	1
  1232  000024                     ?___ftdiv:
  1233                           	opt stack 0
  1234  000024                     ___ftdiv@f1:
  1235                           	opt stack 0
  1236                           
  1237                           ; 3 bytes @ 0x23
  1238  000024                     	ds	3
  1239  000027                     ___ftdiv@f2:
  1240                           	opt stack 0
  1241                           
  1242                           ; 3 bytes @ 0x26
  1243  000027                     	ds	3
  1244  00002A                     ??___ftdiv:
  1245                           
  1246                           ; 0 bytes @ 0x29
  1247  00002A                     	ds	3
  1248  00002D                     ___ftdiv@cntr:
  1249                           	opt stack 0
  1250                           
  1251                           ; 1 bytes @ 0x2C
  1252  00002D                     	ds	1
  1253  00002E                     ___ftdiv@f3:
  1254                           	opt stack 0
  1255                           
  1256                           ; 3 bytes @ 0x2D
  1257  00002E                     	ds	3
  1258  000031                     ___ftdiv@exp:
  1259                           	opt stack 0
  1260                           
  1261                           ; 1 bytes @ 0x30
  1262  000031                     	ds	1
  1263  000032                     ___ftdiv@sign:
  1264                           	opt stack 0
  1265                           
  1266                           ; 1 bytes @ 0x31
  1267  000032                     	ds	1
  1268  000033                     ??_adc_int_handler:
  1269                           
  1270                           ; 0 bytes @ 0x32
  1271  000033                     	ds	4
  1272  000037                     adc_int_handler@dist:
  1273                           	opt stack 0
  1274                           
  1275                           ; 3 bytes @ 0x36
  1276  000037                     	ds	3
  1277  00003A                     adc_int_handler@k:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x39
  1281  00003A                     	ds	2
  1282  00003C                     adc_int_handler@voltage:
  1283                           	opt stack 0
  1284                           
  1285                           ; 3 bytes @ 0x3B
  1286  00003C                     	ds	3
  1287  00003F                     adc_int_handler@channel:
  1288                           	opt stack 0
  1289                           
  1290                           ; 2 bytes @ 0x3E
  1291  00003F                     	ds	2
  1292  000041                     adc_int_handler@roundDist:
  1293                           	opt stack 0
  1294                           
  1295                           ; 2 bytes @ 0x40
  1296  000041                     	ds	2
  1297  000043                     ??_InterruptHandlerLow:
  1298                           
  1299                           ; 0 bytes @ 0x42
  1300  000043                     	ds	17
  1301                           tblptru	equ	0xFF8
  1302                           tblptrh	equ	0xFF7
  1303                           tblptrl	equ	0xFF6
  1304                           tablat	equ	0xFF5
  1305                           postinc0	equ	0xFEE
  1306                           wreg	equ	0xFE8
  1307                           postdec1	equ	0xFE5
  1308                           fsr1l	equ	0xFE1
  1309                           
  1310 ;;
  1311 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1312 ;;
  1313 ;; *************** function _main *****************
  1314 ;; Defined at:
  1315 ;;		line 186 in file "../src/main.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  ic             29   73[BANK1 ] struct __i2c_comm
  1320 ;;  uc             15   58[BANK1 ] struct __uart_comm
  1321 ;;  msgbuffer      11   41[BANK1 ] unsigned char [11]
  1322 ;;  t1thread_dat    2   54[BANK1 ] struct __timer1_thread_s
  1323 ;;  t0thread_dat    2   52[BANK1 ] struct __timer0_thread_s
  1324 ;;  msg             2   38[BANK1 ] unsigned char [2]
  1325 ;;  uthread_data    2    0        struct __uart_thread_str
  1326 ;;  length          1   57[BANK1 ] char 
  1327 ;;  msgtype         1   56[BANK1 ] unsigned char 
  1328 ;;  last_reg_rec    1   40[BANK1 ] unsigned char 
  1329 ;;  i               1    0        unsigned char 
  1330 ;;  c               1    0        unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;		None               void
  1333 ;; Registers used:
  1334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1340 ;;      Params:         0       0       0       0       0
  1341 ;;      Locals:         0       0      64       0       0
  1342 ;;      Temps:          0       0       2       0       0
  1343 ;;      Totals:         0       0      66       0       0
  1344 ;;Total ram usage:       66 bytes
  1345 ;; Hardware stack levels required when called:   15
  1346 ;; This function calls:
  1347 ;;		_OpenADC
  1348 ;;		_OpenTimer0
  1349 ;;		_OpenTimer1
  1350 ;;		_OpenUSART
  1351 ;;		_SetChanADC
  1352 ;;		_ToMainHigh_recvmsg
  1353 ;;		_ToMainLow_recvmsg
  1354 ;;		_block_on_To_msgqueues
  1355 ;;		_enable_interrupts
  1356 ;;		_i2c_configure_slave
  1357 ;;		_i2c_master_send
  1358 ;;		_init_i2c
  1359 ;;		_init_queues
  1360 ;;		_init_timer1_lthread
  1361 ;;		_init_uart_recv
  1362 ;;		_timer0_lthread
  1363 ;;		_timer1_lthread
  1364 ;;		_uart_trans
  1365 ;; This function is called by:
  1366 ;;		Startup code after reset
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text0
  1371  00096C                     __ptext0:
  1372                           	opt stack 0
  1373  00096C                     _main:
  1374                           	opt stack 16
  1375                           
  1376                           ;main.c: 187: char c;
  1377                           ;main.c: 188: signed char length;
  1378                           ;main.c: 189: unsigned char msgtype;
  1379                           ;main.c: 190: unsigned char last_reg_recvd;
  1380                           ;main.c: 191: uart_comm uc;
  1381                           ;main.c: 192: i2c_comm ic;
  1382                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1383                           ;main.c: 194: unsigned char i;
  1384                           ;main.c: 195: uart_thread_struct uthread_data;
  1385                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1386                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1387                           ;main.c: 205: OSCCON = 0x82;
  1388                           
  1389                           ;incstack = 0
  1390  00096C  0E82               	movlw	130
  1391  00096E  6ED3               	movwf	4051,c	;volatile
  1392                           
  1393                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
  1394  000970  9C9B               	bcf	3995,6,c	;volatile
  1395                           
  1396                           ;main.c: 224: init_uart_recv(&uc);
  1397  000972  0101               	movlb	1	; () banked
  1398  000974  0E01               	movlw	high main@uc
  1399  000976  0101               	movlb	1	; () banked
  1400  000978  0101               	movlb	1	; () banked
  1401  00097A  6F01               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1402  00097C  0101               	movlb	1	; () banked
  1403  00097E  0E3A               	movlw	low main@uc
  1404  000980  0101               	movlb	1	; () banked
  1405  000982  0101               	movlb	1	; () banked
  1406  000984  6F00               	movwf	init_uart_recv@uc& (0+255),b
  1407  000986  EC55  F016         	call	_init_uart_recv	;wreg free
  1408                           
  1409                           ;main.c: 227: init_i2c(&ic);
  1410  00098A  0101               	movlb	1	; () banked
  1411  00098C  0E01               	movlw	high main@ic
  1412  00098E  0101               	movlb	1	; () banked
  1413  000990  0101               	movlb	1	; () banked
  1414  000992  6F01               	movwf	(init_i2c@ic+1)& (0+255),b
  1415  000994  0101               	movlb	1	; () banked
  1416  000996  0E49               	movlw	low main@ic
  1417  000998  0101               	movlb	1	; () banked
  1418  00099A  0101               	movlb	1	; () banked
  1419  00099C  6F00               	movwf	init_i2c@ic& (0+255),b
  1420  00099E  EC93  F013         	call	_init_i2c	;wreg free
  1421                           
  1422                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1423  0009A2  0101               	movlb	1	; () banked
  1424  0009A4  0E01               	movlw	high main@t1thread_data
  1425  0009A6  0101               	movlb	1	; () banked
  1426  0009A8  0101               	movlb	1	; () banked
  1427  0009AA  6F01               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1428  0009AC  0101               	movlb	1	; () banked
  1429  0009AE  0E36               	movlw	low main@t1thread_data
  1430  0009B0  0101               	movlb	1	; () banked
  1431  0009B2  0101               	movlb	1	; () banked
  1432  0009B4  6F00               	movwf	init_timer1_lthread@tptr& (0+255),b
  1433  0009B6  EC93  F016         	call	_init_timer1_lthread	;wreg free
  1434                           
  1435                           ;main.c: 233: init_queues();
  1436  0009BA  EC23  F013         	call	_init_queues	;wreg free
  1437                           
  1438                           ;main.c: 237: TRISB = 0xFF;
  1439  0009BE  6893               	setf	3987,c	;volatile
  1440                           
  1441                           ;main.c: 238: LATB = 0x0;
  1442  0009C0  0E00               	movlw	0
  1443  0009C2  6E8A               	movwf	3978,c	;volatile
  1444                           
  1445                           ;main.c: 240: PORTA = 0x0;
  1446  0009C4  0E00               	movlw	0
  1447  0009C6  6E80               	movwf	3968,c	;volatile
  1448                           
  1449                           ;main.c: 241: LATA = 0x0;
  1450  0009C8  0E00               	movlw	0
  1451  0009CA  6E89               	movwf	3977,c	;volatile
  1452                           
  1453                           ;main.c: 242: TRISA = 0x00;
  1454  0009CC  0E00               	movlw	0
  1455  0009CE  6E92               	movwf	3986,c	;volatile
  1456                           
  1457                           ;main.c: 261: OpenTimer0(0b11111111 & 0b11111111 & 0b11111111 & 0b11101111 & 0b11111111);
  1458  0009D0  0EEF               	movlw	239
  1459  0009D2  EC09  F016         	call	_OpenTimer0
  1460                           
  1461                           ;main.c: 273: OpenTimer1(0b11111111 & 0b11111111 & 0b11001111 & 0b11111111 & 0b11110111 
      +                          & 0b11111111);
  1462  0009D6  0EC7               	movlw	199
  1463  0009D8  EC81  F015         	call	_OpenTimer1
  1464                           
  1465                           ;main.c: 274: TRISC = 0xFF;
  1466  0009DC  6894               	setf	3988,c	;volatile
  1467                           
  1468                           ;main.c: 282: IPR1bits.ADIP = 0;
  1469  0009DE  9C9F               	bcf	3999,6,c	;volatile
  1470                           
  1471                           ;main.c: 283: PIE1bits.ADIE = 1;
  1472  0009E0  8C9D               	bsf	3997,6,c	;volatile
  1473                           
  1474                           ;main.c: 285: IPR1bits.TMR1IP = 0;
  1475  0009E2  909F               	bcf	3999,0,c	;volatile
  1476                           
  1477                           ;main.c: 287: INTCON2bits.TMR0IP = 0;
  1478  0009E4  94F1               	bcf	intcon2,2,c	;volatile
  1479                           
  1480                           ;main.c: 289: IPR1bits.RCIP = 0;
  1481  0009E6  9A9F               	bcf	3999,5,c	;volatile
  1482                           
  1483                           ;main.c: 291: IPR1bits.TXIP = 0;
  1484  0009E8  989F               	bcf	3999,4,c	;volatile
  1485                           
  1486                           ;main.c: 293: IPR1bits.SSPIP = 1;
  1487  0009EA  869F               	bsf	3999,3,c	;volatile
  1488                           
  1489                           ;main.c: 310: i2c_configure_slave(0xBE);
  1490  0009EC  0EBE               	movlw	190
  1491  0009EE  EC1E  F016         	call	_i2c_configure_slave
  1492                           
  1493                           ;main.c: 329: PIE1bits.SSPIE = 1;
  1494  0009F2  869D               	bsf	3997,3,c	;volatile
  1495                           
  1496                           ;main.c: 340: OpenUSART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1497                           ;main.c: 341: 0b11111111 & 0b11111111, 38);
  1498  0009F4  0E00               	movlw	0
  1499  0009F6  0101               	movlb	1	; () banked
  1500  0009F8  0101               	movlb	1	; () banked
  1501  0009FA  6F01               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1502  0009FC  0E26               	movlw	38
  1503  0009FE  0101               	movlb	1	; () banked
  1504  000A00  6F00               	movwf	OpenUSART@spbrg& (0+255),b
  1505  000A02  0EFC               	movlw	252
  1506  000A04  EC9E  F010         	call	_OpenUSART
  1507                           
  1508                           ;main.c: 342: RCSTAbits.SPEN = 1;
  1509  000A08  8EAB               	bsf	4011,7,c	;volatile
  1510                           
  1511                           ;main.c: 343: TRISC = 0xFF;
  1512  000A0A  6894               	setf	3988,c	;volatile
  1513                           
  1514                           ;main.c: 350: enable_interrupts();
  1515  000A0C  ECDA  F016         	call	_enable_interrupts	;wreg free
  1516                           
  1517                           ;main.c: 364: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1518                           ;main.c: 365: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1519                           ;main.c: 366: 0b1011);
  1520  000A10  0101               	movlb	1	; () banked
  1521  000A12  6F24               	movwf	??_main& (0+255),b
  1522  000A14  0E0C               	movlw	12
  1523  000A16  0101               	movlb	1	; () banked
  1524  000A18  0101               	movlb	1	; () banked
  1525  000A1A  6F00               	movwf	OpenADC@config2& (0+255),b
  1526  000A1C  0101               	movlb	1	; () banked
  1527  000A1E  5124               	movf	??_main& (0+255),w,b
  1528  000A20  0101               	movlb	1	; () banked
  1529  000A22  6F25               	movwf	(??_main+1)& (0+255),b
  1530  000A24  0E0B               	movlw	11
  1531  000A26  0101               	movlb	1	; () banked
  1532  000A28  0101               	movlb	1	; () banked
  1533  000A2A  6F01               	movwf	OpenADC@portconfig& (0+255),b
  1534  000A2C  0101               	movlb	1	; () banked
  1535  000A2E  5125               	movf	(??_main+1)& (0+255),w,b
  1536  000A30  0E53               	movlw	83
  1537  000A32  ECB9  F011         	call	_OpenADC
  1538                           
  1539                           ;main.c: 367: SetChanADC(0b10001111);
  1540  000A36  0E8F               	movlw	143
  1541  000A38  EC45  F016         	call	_SetChanADC
  1542                           
  1543                           ;main.c: 378: unsigned char msg[2] = {0x01, 0x02};
  1544  000A3C  C1C7  F126         	movff	main@F5223,main@msg
  1545  000A40  C1C8  F127         	movff	main@F5223+1,main@msg+1
  1546  000A44                     l3422:
  1547                           
  1548                           ;main.c: 390: block_on_To_msgqueues();
  1549  000A44  EC74  F011         	call	_block_on_To_msgqueues	;wreg free
  1550                           
  1551                           ;main.c: 397: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1552  000A48  0101               	movlb	1	; () banked
  1553  000A4A  0E01               	movlw	high main@msgtype
  1554  000A4C  0101               	movlb	1	; () banked
  1555  000A4E  0101               	movlb	1	; () banked
  1556  000A50  6F19               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1557  000A52  0101               	movlb	1	; () banked
  1558  000A54  0E38               	movlw	low main@msgtype
  1559  000A56  0101               	movlb	1	; () banked
  1560  000A58  0101               	movlb	1	; () banked
  1561  000A5A  6F18               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1562  000A5C  0101               	movlb	1	; () banked
  1563  000A5E  0E01               	movlw	high main@msgbuffer
  1564  000A60  0101               	movlb	1	; () banked
  1565  000A62  0101               	movlb	1	; () banked
  1566  000A64  6F1B               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1567  000A66  0101               	movlb	1	; () banked
  1568  000A68  0E29               	movlw	low main@msgbuffer
  1569  000A6A  0101               	movlb	1	; () banked
  1570  000A6C  0101               	movlb	1	; () banked
  1571  000A6E  6F1A               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1572  000A70  0E0A               	movlw	10
  1573  000A72  EC40  F015         	call	_ToMainHigh_recvmsg
  1574  000A76  0101               	movlb	1	; () banked
  1575  000A78  0101               	movlb	1	; () banked
  1576  000A7A  6F39               	movwf	main@length& (0+255),b
  1577                           
  1578                           ; BSR set to: 1
  1579                           ;main.c: 398: if (length < 0) {
  1580  000A7C  0101               	movlb	1	; () banked
  1581  000A7E  0101               	movlb	1	; () banked
  1582  000A80  BF39               	btfsc	main@length& (0+255),7,b
  1583  000A82  D04D               	goto	l3438
  1584  000A84  D03C               	goto	l3436
  1585  000A86                     l3430:
  1586                           
  1587                           ; BSR set to: 1
  1588                           ;main.c: 406: {
  1589                           ;main.c: 407: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1590  000A86  0101               	movlb	1	; () banked
  1591  000A88  0E01               	movlw	high main@t0thread_data
  1592  000A8A  0101               	movlb	1	; () banked
  1593  000A8C  0101               	movlb	1	; () banked
  1594  000A8E  6F01               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1595  000A90  0101               	movlb	1	; () banked
  1596  000A92  0E34               	movlw	low main@t0thread_data
  1597  000A94  0101               	movlb	1	; () banked
  1598  000A96  0101               	movlb	1	; () banked
  1599  000A98  6F00               	movwf	timer0_lthread@tptr& (0+255),b
  1600  000A9A  0101               	movlb	1	; () banked
  1601  000A9C  0101               	movlb	1	; () banked
  1602  000A9E  C138  F102         	movff	main@msgtype,timer0_lthread@msgtype
  1603  000AA2  0101               	movlb	1	; () banked
  1604  000AA4  0101               	movlb	1	; () banked
  1605  000AA6  6B03               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1606  000AA8  0101               	movlb	1	; () banked
  1607  000AAA  0101               	movlb	1	; () banked
  1608  000AAC  5139               	movf	main@length& (0+255),w,b
  1609  000AAE  0101               	movlb	1	; () banked
  1610  000AB0  0101               	movlb	1	; () banked
  1611  000AB2  6F04               	movwf	timer0_lthread@length& (0+255),b
  1612  000AB4  0101               	movlb	1	; () banked
  1613  000AB6  6B05               	clrf	(timer0_lthread@length+1)& (0+255),b
  1614  000AB8  0101               	movlb	1	; () banked
  1615  000ABA  BF04               	btfsc	timer0_lthread@length& (0+255),7,b
  1616  000ABC  0705               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1617  000ABE  0101               	movlb	1	; () banked
  1618  000AC0  0E01               	movlw	high main@msgbuffer
  1619  000AC2  0101               	movlb	1	; () banked
  1620  000AC4  0101               	movlb	1	; () banked
  1621  000AC6  6F07               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1622  000AC8  0101               	movlb	1	; () banked
  1623  000ACA  0E29               	movlw	low main@msgbuffer
  1624  000ACC  0101               	movlb	1	; () banked
  1625  000ACE  0101               	movlb	1	; () banked
  1626  000AD0  6F06               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1627  000AD2  EC8A  F016         	call	_timer0_lthread	;wreg free
  1628                           
  1629                           ;main.c: 408: break;
  1630  000AD6  D023               	goto	l3438
  1631  000AD8                     l160:
  1632                           
  1633                           ;main.c: 411: case 41:
  1634                           ;main.c: 412: {
  1635                           ;main.c: 415: last_reg_recvd = msgbuffer[0];
  1636  000AD8  C129  F128         	movff	main@msgbuffer,main@last_reg_recvd
  1637                           
  1638                           ;main.c: 416: break;
  1639  000ADC  D020               	goto	l3438
  1640  000ADE                     l3432:
  1641                           
  1642                           ;main.c: 419: {
  1643                           ;main.c: 422: uart_trans(length, msgbuffer);
  1644  000ADE  0101               	movlb	1	; () banked
  1645  000AE0  0E01               	movlw	high main@msgbuffer
  1646  000AE2  0101               	movlb	1	; () banked
  1647  000AE4  0101               	movlb	1	; () banked
  1648  000AE6  6F01               	movwf	(uart_trans@data+1)& (0+255),b
  1649  000AE8  0101               	movlb	1	; () banked
  1650  000AEA  0E29               	movlw	low main@msgbuffer
  1651  000AEC  0101               	movlb	1	; () banked
  1652  000AEE  0101               	movlb	1	; () banked
  1653  000AF0  6F00               	movwf	uart_trans@data& (0+255),b
  1654  000AF2  0101               	movlb	1	; () banked
  1655  000AF4  0101               	movlb	1	; () banked
  1656  000AF6  5139               	movf	main@length& (0+255),w,b
  1657  000AF8  EC67  F00E         	call	_uart_trans
  1658                           
  1659                           ;main.c: 425: break;
  1660  000AFC  D010               	goto	l3438
  1661  000AFE                     l3436:
  1662  000AFE  0101               	movlb	1	; () banked
  1663  000B00  0101               	movlb	1	; () banked
  1664  000B02  5138               	movf	main@msgtype& (0+255),w,b
  1665                           
  1666                           ; Switch size 1, requested type "space"
  1667                           ; Number of cases is 5, Range of values is 10 to 46
  1668                           ; switch strategies available:
  1669                           ; Name         Instructions Cycles
  1670                           ; simple_byte           16     9 (average)
  1671                           ;	Chosen strategy is simple_byte
  1672  000B04  0A0A               	xorlw	10	; case 10
  1673  000B06  B4D8               	btfsc	status,2,c
  1674  000B08  D7BE               	goto	l3430
  1675  000B0A  0A22               	xorlw	34	; case 40
  1676  000B0C  B4D8               	btfsc	status,2,c
  1677  000B0E  D7E4               	goto	l160
  1678  000B10  0A01               	xorlw	1	; case 41
  1679  000B12  B4D8               	btfsc	status,2,c
  1680  000B14  D7E1               	goto	l160
  1681  000B16  0A04               	xorlw	4	; case 45
  1682  000B18  B4D8               	btfsc	status,2,c
  1683  000B1A  D7E1               	goto	l3432
  1684  000B1C  0A03               	xorlw	3	; case 46
  1685  000B1E                     l3438:
  1686                           
  1687                           ;main.c: 440: }
  1688                           ;main.c: 443: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1689  000B1E  0101               	movlb	1	; () banked
  1690  000B20  0E01               	movlw	high main@msgtype
  1691  000B22  0101               	movlb	1	; () banked
  1692  000B24  0101               	movlb	1	; () banked
  1693  000B26  6F19               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1694  000B28  0101               	movlb	1	; () banked
  1695  000B2A  0E38               	movlw	low main@msgtype
  1696  000B2C  0101               	movlb	1	; () banked
  1697  000B2E  0101               	movlb	1	; () banked
  1698  000B30  6F18               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1699  000B32  0101               	movlb	1	; () banked
  1700  000B34  0E01               	movlw	high main@msgbuffer
  1701  000B36  0101               	movlb	1	; () banked
  1702  000B38  0101               	movlb	1	; () banked
  1703  000B3A  6F1B               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1704  000B3C  0101               	movlb	1	; () banked
  1705  000B3E  0E29               	movlw	low main@msgbuffer
  1706  000B40  0101               	movlb	1	; () banked
  1707  000B42  0101               	movlb	1	; () banked
  1708  000B44  6F1A               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1709  000B46  0E0A               	movlw	10
  1710  000B48  EC1F  F015         	call	_ToMainLow_recvmsg
  1711  000B4C  0101               	movlb	1	; () banked
  1712  000B4E  0101               	movlb	1	; () banked
  1713  000B50  6F39               	movwf	main@length& (0+255),b
  1714                           
  1715                           ; BSR set to: 1
  1716                           ;main.c: 444: if (length < 0) {
  1717  000B52  0101               	movlb	1	; () banked
  1718  000B54  0101               	movlb	1	; () banked
  1719  000B56  BF39               	btfsc	main@length& (0+255),7,b
  1720  000B58  D775               	goto	l3422
  1721  000B5A  D072               	goto	l3458
  1722  000B5C                     l3444:
  1723                           
  1724                           ; BSR set to: 1
  1725                           ;main.c: 452: {
  1726                           ;main.c: 453: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1727  000B5C  0101               	movlb	1	; () banked
  1728  000B5E  0E01               	movlw	high main@t1thread_data
  1729  000B60  0101               	movlb	1	; () banked
  1730  000B62  0101               	movlb	1	; () banked
  1731  000B64  6F1B               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1732  000B66  0101               	movlb	1	; () banked
  1733  000B68  0E36               	movlw	low main@t1thread_data
  1734  000B6A  0101               	movlb	1	; () banked
  1735  000B6C  0101               	movlb	1	; () banked
  1736  000B6E  6F1A               	movwf	timer1_lthread@tptr& (0+255),b
  1737  000B70  0101               	movlb	1	; () banked
  1738  000B72  0101               	movlb	1	; () banked
  1739  000B74  C138  F11C         	movff	main@msgtype,timer1_lthread@msgtype
  1740  000B78  0101               	movlb	1	; () banked
  1741  000B7A  0101               	movlb	1	; () banked
  1742  000B7C  6B1D               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1743  000B7E  0101               	movlb	1	; () banked
  1744  000B80  0101               	movlb	1	; () banked
  1745  000B82  5139               	movf	main@length& (0+255),w,b
  1746  000B84  0101               	movlb	1	; () banked
  1747  000B86  0101               	movlb	1	; () banked
  1748  000B88  6F1E               	movwf	timer1_lthread@length& (0+255),b
  1749  000B8A  0101               	movlb	1	; () banked
  1750  000B8C  6B1F               	clrf	(timer1_lthread@length+1)& (0+255),b
  1751  000B8E  0101               	movlb	1	; () banked
  1752  000B90  BF1E               	btfsc	timer1_lthread@length& (0+255),7,b
  1753  000B92  071F               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1754  000B94  0101               	movlb	1	; () banked
  1755  000B96  0E01               	movlw	high main@msgbuffer
  1756  000B98  0101               	movlb	1	; () banked
  1757  000B9A  0101               	movlb	1	; () banked
  1758  000B9C  6F21               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1759  000B9E  0101               	movlb	1	; () banked
  1760  000BA0  0E29               	movlw	low main@msgbuffer
  1761  000BA2  0101               	movlb	1	; () banked
  1762  000BA4  0101               	movlb	1	; () banked
  1763  000BA6  6F20               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1764  000BA8  ECEA  F012         	call	_timer1_lthread	;wreg free
  1765                           
  1766                           ;main.c: 454: break;
  1767  000BAC  D74B               	goto	l3422
  1768  000BAE                     l3446:
  1769                           
  1770                           ;main.c: 457: case 31:
  1771                           ;main.c: 458: {
  1772                           ;main.c: 461: if(msgbuffer[0] == 0xBA){
  1773  000BAE  0101               	movlb	1	; () banked
  1774  000BB0  0101               	movlb	1	; () banked
  1775  000BB2  5129               	movf	main@msgbuffer& (0+255),w,b
  1776  000BB4  0ABA               	xorlw	186
  1777  000BB6  A4D8               	btfss	status,2,c
  1778  000BB8  D01E               	goto	l3450
  1779                           
  1780                           ; BSR set to: 1
  1781                           ;main.c: 463: i2c_master_send(5, 5, msgbuffer, 0xBE);
  1782  000BBA  0101               	movlb	1	; () banked
  1783  000BBC  6F24               	movwf	??_main& (0+255),b
  1784  000BBE  0E05               	movlw	5
  1785  000BC0  0101               	movlb	1	; () banked
  1786  000BC2  0101               	movlb	1	; () banked
  1787  000BC4  6F00               	movwf	i2c_master_send@recvlength& (0+255),b
  1788  000BC6  0101               	movlb	1	; () banked
  1789  000BC8  5124               	movf	??_main& (0+255),w,b
  1790  000BCA  0101               	movlb	1	; () banked
  1791  000BCC  0E01               	movlw	high main@msgbuffer
  1792  000BCE  0101               	movlb	1	; () banked
  1793  000BD0  0101               	movlb	1	; () banked
  1794  000BD2  6F02               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1795  000BD4  0101               	movlb	1	; () banked
  1796  000BD6  0E29               	movlw	low main@msgbuffer
  1797  000BD8  0101               	movlb	1	; () banked
  1798  000BDA  0101               	movlb	1	; () banked
  1799  000BDC  6F01               	movwf	i2c_master_send@msg& (0+255),b
  1800  000BDE  0101               	movlb	1	; () banked
  1801  000BE0  6F25               	movwf	(??_main+1)& (0+255),b
  1802  000BE2  0EBE               	movlw	190
  1803  000BE4  0101               	movlb	1	; () banked
  1804  000BE6  0101               	movlb	1	; () banked
  1805  000BE8  6F03               	movwf	i2c_master_send@slave_addr& (0+255),b
  1806  000BEA  0101               	movlb	1	; () banked
  1807  000BEC  5125               	movf	(??_main+1)& (0+255),w,b
  1808  000BEE  0E05               	movlw	5
  1809  000BF0  EC77  F008         	call	_i2c_master_send
  1810                           
  1811                           ;main.c: 464: } else if(msgbuffer[0] == 0xAA){
  1812  000BF4  D023               	goto	l3454
  1813  000BF6                     l3450:
  1814  000BF6  0101               	movlb	1	; () banked
  1815  000BF8  0101               	movlb	1	; () banked
  1816  000BFA  5129               	movf	main@msgbuffer& (0+255),w,b
  1817  000BFC  0AAA               	xorlw	170
  1818  000BFE  A4D8               	btfss	status,2,c
  1819  000C00  D01D               	goto	l3454
  1820                           
  1821                           ; BSR set to: 1
  1822                           ;main.c: 466: i2c_master_send(1, 5, msgbuffer, 0x9E);
  1823  000C02  0101               	movlb	1	; () banked
  1824  000C04  6F24               	movwf	??_main& (0+255),b
  1825  000C06  0E05               	movlw	5
  1826  000C08  0101               	movlb	1	; () banked
  1827  000C0A  0101               	movlb	1	; () banked
  1828  000C0C  6F00               	movwf	i2c_master_send@recvlength& (0+255),b
  1829  000C0E  0101               	movlb	1	; () banked
  1830  000C10  5124               	movf	??_main& (0+255),w,b
  1831  000C12  0101               	movlb	1	; () banked
  1832  000C14  0E01               	movlw	high main@msgbuffer
  1833  000C16  0101               	movlb	1	; () banked
  1834  000C18  0101               	movlb	1	; () banked
  1835  000C1A  6F02               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1836  000C1C  0101               	movlb	1	; () banked
  1837  000C1E  0E29               	movlw	low main@msgbuffer
  1838  000C20  0101               	movlb	1	; () banked
  1839  000C22  0101               	movlb	1	; () banked
  1840  000C24  6F01               	movwf	i2c_master_send@msg& (0+255),b
  1841  000C26  0101               	movlb	1	; () banked
  1842  000C28  6F25               	movwf	(??_main+1)& (0+255),b
  1843  000C2A  0E9E               	movlw	158
  1844  000C2C  0101               	movlb	1	; () banked
  1845  000C2E  0101               	movlb	1	; () banked
  1846  000C30  6F03               	movwf	i2c_master_send@slave_addr& (0+255),b
  1847  000C32  0101               	movlb	1	; () banked
  1848  000C34  5125               	movf	(??_main+1)& (0+255),w,b
  1849  000C36  0E01               	movlw	1
  1850  000C38  EC77  F008         	call	_i2c_master_send
  1851  000C3C                     l3454:
  1852                           
  1853                           ;main.c: 467: }
  1854                           ;main.c: 469: LATBbits.LATB2 = 0;
  1855  000C3C  948A               	bcf	3978,2,c	;volatile
  1856                           
  1857                           ;main.c: 471: break;
  1858  000C3E  D702               	goto	l3422
  1859  000C40                     l3458:
  1860  000C40  0101               	movlb	1	; () banked
  1861  000C42  0101               	movlb	1	; () banked
  1862  000C44  5138               	movf	main@msgtype& (0+255),w,b
  1863                           
  1864                           ; Switch size 1, requested type "space"
  1865                           ; Number of cases is 3, Range of values is 11 to 31
  1866                           ; switch strategies available:
  1867                           ; Name         Instructions Cycles
  1868                           ; simple_byte           10     6 (average)
  1869                           ;	Chosen strategy is simple_byte
  1870  000C46  0A0B               	xorlw	11	; case 11
  1871  000C48  B4D8               	btfsc	status,2,c
  1872  000C4A  D788               	goto	l3444
  1873  000C4C  0A15               	xorlw	21	; case 30
  1874  000C4E  B4D8               	btfsc	status,2,c
  1875  000C50  D7AE               	goto	l3446
  1876  000C52  0A01               	xorlw	1	; case 31
  1877  000C54  B4D8               	btfsc	status,2,c
  1878  000C56  D7AB               	goto	l3446
  1879  000C58  D6F5               	goto	l3422
  1880  000C5A                     __end_of_main:
  1881                           	opt stack 0
  1882                           tblptru	equ	0xFF8
  1883                           tblptrh	equ	0xFF7
  1884                           tblptrl	equ	0xFF6
  1885                           tablat	equ	0xFF5
  1886                           intcon2	equ	0xFF1
  1887                           postinc0	equ	0xFEE
  1888                           wreg	equ	0xFE8
  1889                           postdec1	equ	0xFE5
  1890                           fsr1l	equ	0xFE1
  1891                           status	equ	0xFD8
  1892                           
  1893 ;; *************** function _uart_trans *****************
  1894 ;; Defined at:
  1895 ;;		line 61 in file "../src/my_uart.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  length          1    wreg     unsigned char 
  1898 ;;  data            2    0[BANK1 ] PTR unsigned char 
  1899 ;;		 -> motorMove@direction(2), main@msgbuffer(11), 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  length          1    4[BANK1 ] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;		None               void
  1904 ;; Registers used:
  1905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1911 ;;      Params:         0       0       2       0       0
  1912 ;;      Locals:         0       0       1       0       0
  1913 ;;      Temps:          0       0       2       0       0
  1914 ;;      Totals:         0       0       5       0       0
  1915 ;;Total ram usage:        5 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:   11
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text1
  1926  001CCE                     __ptext1:
  1927                           	opt stack 0
  1928  001CCE                     _uart_trans:
  1929                           	opt stack 19
  1930                           
  1931                           ; BSR set to: 1
  1932                           ;incstack = 0
  1933                           ;uart_trans@length stored from wreg
  1934  001CCE  CFE8 F104          	movff	wreg,uart_trans@length
  1935                           
  1936                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1937  001CD2  EE20 F00D          	lfsr	2,13
  1938  001CD6  506A               	movf	_uc_ptr,w,c
  1939  001CD8  26D9               	addwf	fsr2l,f,c
  1940  001CDA  506B               	movf	_uc_ptr+1,w,c
  1941  001CDC  22DA               	addwfc	fsr2h,f,c
  1942  001CDE  0E00               	movlw	0
  1943  001CE0  6EDF               	movwf	indf2,c
  1944  001CE2  D035               	goto	l3630
  1945  001CE4                     l3626:
  1946                           
  1947                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1948  001CE4  EE20 F00D          	lfsr	2,13
  1949  001CE8  506A               	movf	_uc_ptr,w,c
  1950  001CEA  26D9               	addwf	fsr2l,f,c
  1951  001CEC  506B               	movf	_uc_ptr+1,w,c
  1952  001CEE  22DA               	addwfc	fsr2h,f,c
  1953  001CF0  50DF               	movf	indf2,w,c
  1954  001CF2  0101               	movlb	1	; () banked
  1955  001CF4  6F02               	movwf	??_uart_trans& (0+255),b
  1956  001CF6  0101               	movlb	1	; () banked
  1957  001CF8  5102               	movf	??_uart_trans& (0+255),w,b
  1958  001CFA  0D01               	mullw	1
  1959  001CFC  50F3               	movf	prodl,w,c
  1960  001CFE  0101               	movlb	1	; () banked
  1961  001D00  0101               	movlb	1	; () banked
  1962  001D02  2500               	addwf	uart_trans@data& (0+255),w,b
  1963  001D04  6ED9               	movwf	fsr2l,c
  1964  001D06  50F4               	movf	prodh,w,c
  1965  001D08  0101               	movlb	1	; () banked
  1966  001D0A  0101               	movlb	1	; () banked
  1967  001D0C  2101               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1968  001D0E  6EDA               	movwf	fsr2h,c
  1969  001D10  EE10 F00D          	lfsr	1,13
  1970  001D14  506A               	movf	_uc_ptr,w,c
  1971  001D16  26E1               	addwf	fsr1l,f,c
  1972  001D18  506B               	movf	_uc_ptr+1,w,c
  1973  001D1A  22E2               	addwfc	fsr1h,f,c
  1974  001D1C  50E7               	movf	indf1,w,c
  1975  001D1E  0101               	movlb	1	; () banked
  1976  001D20  6F03               	movwf	(??_uart_trans+1)& (0+255),b
  1977  001D22  0101               	movlb	1	; () banked
  1978  001D24  5103               	movf	(??_uart_trans+1)& (0+255),w,b
  1979  001D26  0D01               	mullw	1
  1980  001D28  0E07               	movlw	7
  1981  001D2A  26F3               	addwf	prodl,f,c
  1982  001D2C  0E00               	movlw	0
  1983  001D2E  22F4               	addwfc	prodh,f,c
  1984  001D30  50F3               	movf	prodl,w,c
  1985  001D32  246A               	addwf	_uc_ptr,w,c
  1986  001D34  6EE1               	movwf	fsr1l,c
  1987  001D36  50F4               	movf	prodh,w,c
  1988  001D38  206B               	addwfc	_uc_ptr+1,w,c
  1989  001D3A  6EE2               	movwf	fsr1h,c
  1990  001D3C  CFDF FFE7          	movff	indf2,indf1
  1991                           
  1992                           ; BSR set to: 1
  1993  001D40  EE20 F00D          	lfsr	2,13
  1994  001D44  506A               	movf	_uc_ptr,w,c
  1995  001D46  26D9               	addwf	fsr2l,f,c
  1996  001D48  506B               	movf	_uc_ptr+1,w,c
  1997  001D4A  22DA               	addwfc	fsr2h,f,c
  1998  001D4C  2ADF               	incf	indf2,f,c
  1999  001D4E                     l3630:
  2000  001D4E  EE20 F00D          	lfsr	2,13
  2001  001D52  506A               	movf	_uc_ptr,w,c
  2002  001D54  26D9               	addwf	fsr2l,f,c
  2003  001D56  506B               	movf	_uc_ptr+1,w,c
  2004  001D58  22DA               	addwfc	fsr2h,f,c
  2005  001D5A  50DF               	movf	indf2,w,c
  2006  001D5C  0101               	movlb	1	; () banked
  2007  001D5E  6F02               	movwf	??_uart_trans& (0+255),b
  2008  001D60  0101               	movlb	1	; () banked
  2009  001D62  0101               	movlb	1	; () banked
  2010  001D64  5104               	movf	uart_trans@length& (0+255),w,b
  2011  001D66  0101               	movlb	1	; () banked
  2012  001D68  5D02               	subwf	??_uart_trans& (0+255),w,b
  2013  001D6A  A0D8               	btfss	status,0,c
  2014  001D6C  D7BB               	goto	l3626
  2015                           
  2016                           ; BSR set to: 1
  2017                           ;my_uart.c: 67: }
  2018                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  2019                           
  2020                           ; BSR set to: 1
  2021  001D6E  EE20 F00E          	lfsr	2,14
  2022  001D72  506A               	movf	_uc_ptr,w,c
  2023  001D74  26D9               	addwf	fsr2l,f,c
  2024  001D76  506B               	movf	_uc_ptr+1,w,c
  2025  001D78  22DA               	addwfc	fsr2h,f,c
  2026  001D7A  0E00               	movlw	0
  2027  001D7C  6EDF               	movwf	indf2,c
  2028                           
  2029                           ; BSR set to: 1
  2030                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  2031  001D7E  889D               	bsf	3997,4,c	;volatile
  2032                           
  2033                           ; BSR set to: 1
  2034  001D80  0012               	return	
  2035  001D82                     __end_of_uart_trans:
  2036                           	opt stack 0
  2037                           tblptru	equ	0xFF8
  2038                           tblptrh	equ	0xFF7
  2039                           tblptrl	equ	0xFF6
  2040                           tablat	equ	0xFF5
  2041                           prodh	equ	0xFF4
  2042                           prodl	equ	0xFF3
  2043                           intcon2	equ	0xFF1
  2044                           postinc0	equ	0xFEE
  2045                           wreg	equ	0xFE8
  2046                           indf1	equ	0xFE7
  2047                           postdec1	equ	0xFE5
  2048                           fsr1h	equ	0xFE2
  2049                           fsr1l	equ	0xFE1
  2050                           indf2	equ	0xFDF
  2051                           fsr2h	equ	0xFDA
  2052                           fsr2l	equ	0xFD9
  2053                           status	equ	0xFD8
  2054                           
  2055 ;; *************** function _timer1_lthread *****************
  2056 ;; Defined at:
  2057 ;;		line 14 in file "../src/timer1_thread.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  2060 ;;		 -> main@t1thread_data(2), 
  2061 ;;  msgtype         2   28[BANK1 ] int 
  2062 ;;  length          2   30[BANK1 ] int 
  2063 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  2064 ;;		 -> main@msgbuffer(11), 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  retval          1   35[BANK1 ] char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  2   26[BANK1 ] int 
  2069 ;; Registers used:
  2070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2076 ;;      Params:         0       0       8       0       0
  2077 ;;      Locals:         0       0       1       0       0
  2078 ;;      Temps:          0       0       1       0       0
  2079 ;;      Totals:         0       0      10       0       0
  2080 ;;Total ram usage:       10 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:   14
  2083 ;; This function calls:
  2084 ;;		_FromMainHigh_sendmsg
  2085 ;;		___lwmod
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text2
  2092  0025D4                     __ptext2:
  2093                           	opt stack 0
  2094  0025D4                     _timer1_lthread:
  2095                           	opt stack 16
  2096                           
  2097                           ;timer1_thread.c: 15: signed char retval;
  2098                           ;timer1_thread.c: 17: tptr->msgcount++;
  2099                           
  2100                           ; BSR set to: 1
  2101                           ;incstack = 0
  2102  0025D4  C11A  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2103  0025D8  C11B  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2104  0025DC  2ADE               	incf	postinc2,f,c
  2105  0025DE  0E00               	movlw	0
  2106  0025E0  22DD               	addwfc	postdec2,f,c
  2107                           
  2108                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  2109  0025E2  C11A  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2110  0025E6  C11B  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2111  0025EA  0101               	movlb	1	; () banked
  2112  0025EC  CFDE F100          	movff	postinc2,___lwmod@dividend
  2113  0025F0  0101               	movlb	1	; () banked
  2114  0025F2  CFDD F101          	movff	postdec2,___lwmod@dividend+1
  2115  0025F6  0E00               	movlw	0
  2116  0025F8  0101               	movlb	1	; () banked
  2117  0025FA  0101               	movlb	1	; () banked
  2118  0025FC  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
  2119  0025FE  0E0A               	movlw	10
  2120  002600  0101               	movlb	1	; () banked
  2121  002602  6F02               	movwf	___lwmod@divisor& (0+255),b
  2122  002604  EC2F  F011         	call	___lwmod	;wreg free
  2123  002608  0101               	movlb	1	; () banked
  2124  00260A  0101               	movlb	1	; () banked
  2125  00260C  5100               	movf	?___lwmod& (0+255),w,b
  2126  00260E  0A09               	xorlw	9
  2127  002610  0101               	movlb	1	; () banked
  2128  002612  1101               	iorwf	(?___lwmod+1)& (0+255),w,b
  2129  002614  A4D8               	btfss	status,2,c
  2130  002616  0012               	return	
  2131                           
  2132                           ; BSR set to: 1
  2133                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  2134  002618  0101               	movlb	1	; () banked
  2135  00261A  6F22               	movwf	??_timer1_lthread& (0+255),b
  2136  00261C  0E14               	movlw	20
  2137  00261E  0101               	movlb	1	; () banked
  2138  002620  0101               	movlb	1	; () banked
  2139  002622  6F16               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2140  002624  0101               	movlb	1	; () banked
  2141  002626  5122               	movf	??_timer1_lthread& (0+255),w,b
  2142  002628  0101               	movlb	1	; () banked
  2143  00262A  0101               	movlb	1	; () banked
  2144  00262C  C11B  F118         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2145  002630  0101               	movlb	1	; () banked
  2146  002632  0101               	movlb	1	; () banked
  2147  002634  C11A  F117         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  2148  002638  0E02               	movlw	2
  2149  00263A  EC9D  F015         	call	_FromMainHigh_sendmsg
  2150  00263E  0101               	movlb	1	; () banked
  2151  002640  0101               	movlb	1	; () banked
  2152  002642  6F23               	movwf	timer1_lthread@retval& (0+255),b
  2153  002644  0012               	return	
  2154  002646                     __end_of_timer1_lthread:
  2155                           	opt stack 0
  2156                           tblptru	equ	0xFF8
  2157                           tblptrh	equ	0xFF7
  2158                           tblptrl	equ	0xFF6
  2159                           tablat	equ	0xFF5
  2160                           prodh	equ	0xFF4
  2161                           prodl	equ	0xFF3
  2162                           intcon2	equ	0xFF1
  2163                           postinc0	equ	0xFEE
  2164                           wreg	equ	0xFE8
  2165                           indf1	equ	0xFE7
  2166                           postdec1	equ	0xFE5
  2167                           fsr1h	equ	0xFE2
  2168                           fsr1l	equ	0xFE1
  2169                           indf2	equ	0xFDF
  2170                           postinc2	equ	0xFDE
  2171                           postdec2	equ	0xFDD
  2172                           fsr2h	equ	0xFDA
  2173                           fsr2l	equ	0xFD9
  2174                           status	equ	0xFD8
  2175                           
  2176 ;; *************** function ___lwmod *****************
  2177 ;; Defined at:
  2178 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  dividend        2    0[BANK1 ] unsigned int 
  2181 ;;  divisor         2    2[BANK1 ] unsigned int 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  counter         1    5[BANK1 ] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  2    0[BANK1 ] unsigned int 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2193 ;;      Params:         0       0       4       0       0
  2194 ;;      Locals:         0       0       1       0       0
  2195 ;;      Temps:          0       0       1       0       0
  2196 ;;      Totals:         0       0       6       0       0
  2197 ;;Total ram usage:        6 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:   11
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_timer1_lthread
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text3
  2208  00225E                     __ptext3:
  2209                           	opt stack 0
  2210  00225E                     ___lwmod:
  2211                           	opt stack 18
  2212                           
  2213                           ; BSR set to: 1
  2214                           ;incstack = 0
  2215  00225E  0101               	movlb	1	; () banked
  2216  002260  0101               	movlb	1	; () banked
  2217  002262  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2218  002264  1102               	iorwf	___lwmod@divisor& (0+255),w,b
  2219  002266  B4D8               	btfsc	status,2,c
  2220  002268  D03A               	goto	l1218
  2221                           
  2222                           ; BSR set to: 1
  2223  00226A  0101               	movlb	1	; () banked
  2224  00226C  6F04               	movwf	??___lwmod& (0+255),b
  2225  00226E  0E01               	movlw	1
  2226  002270  0101               	movlb	1	; () banked
  2227  002272  0101               	movlb	1	; () banked
  2228  002274  6F05               	movwf	___lwmod@counter& (0+255),b
  2229  002276  0101               	movlb	1	; () banked
  2230  002278  5104               	movf	??___lwmod& (0+255),w,b
  2231  00227A  D009               	goto	l4178
  2232  00227C                     l4176:
  2233                           
  2234                           ; BSR set to: 1
  2235  00227C  0101               	movlb	1	; () banked
  2236  00227E  0101               	movlb	1	; () banked
  2237  002280  0101               	movlb	1	; () banked
  2238  002282  90D8               	bcf	status,0,c
  2239  002284  3702               	rlcf	___lwmod@divisor& (0+255),f,b
  2240  002286  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2241  002288  0101               	movlb	1	; () banked
  2242  00228A  0101               	movlb	1	; () banked
  2243  00228C  2B05               	incf	___lwmod@counter& (0+255),f,b
  2244  00228E                     l4178:
  2245                           
  2246                           ; BSR set to: 1
  2247  00228E  0101               	movlb	1	; () banked
  2248  002290  0101               	movlb	1	; () banked
  2249  002292  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2250  002294  D7F3               	goto	l4176
  2251  002296                     l4180:
  2252                           
  2253                           ; BSR set to: 1
  2254  002296  0101               	movlb	1	; () banked
  2255  002298  0101               	movlb	1	; () banked
  2256  00229A  5102               	movf	___lwmod@divisor& (0+255),w,b
  2257  00229C  0101               	movlb	1	; () banked
  2258  00229E  0101               	movlb	1	; () banked
  2259  0022A0  5D00               	subwf	___lwmod@dividend& (0+255),w,b
  2260  0022A2  0101               	movlb	1	; () banked
  2261  0022A4  0101               	movlb	1	; () banked
  2262  0022A6  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2263  0022A8  0101               	movlb	1	; () banked
  2264  0022AA  0101               	movlb	1	; () banked
  2265  0022AC  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2266  0022AE  A0D8               	btfss	status,0,c
  2267  0022B0  D00C               	goto	l4184
  2268                           
  2269                           ; BSR set to: 1
  2270  0022B2  0101               	movlb	1	; () banked
  2271  0022B4  0101               	movlb	1	; () banked
  2272  0022B6  5102               	movf	___lwmod@divisor& (0+255),w,b
  2273  0022B8  0101               	movlb	1	; () banked
  2274  0022BA  0101               	movlb	1	; () banked
  2275  0022BC  5F00               	subwf	___lwmod@dividend& (0+255),f,b
  2276  0022BE  0101               	movlb	1	; () banked
  2277  0022C0  0101               	movlb	1	; () banked
  2278  0022C2  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2279  0022C4  0101               	movlb	1	; () banked
  2280  0022C6  0101               	movlb	1	; () banked
  2281  0022C8  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2282  0022CA                     l4184:
  2283                           
  2284                           ; BSR set to: 1
  2285  0022CA  0101               	movlb	1	; () banked
  2286  0022CC  0101               	movlb	1	; () banked
  2287  0022CE  0101               	movlb	1	; () banked
  2288  0022D0  90D8               	bcf	status,0,c
  2289  0022D2  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2290  0022D4  3302               	rrcf	___lwmod@divisor& (0+255),f,b
  2291                           
  2292                           ; BSR set to: 1
  2293  0022D6  0101               	movlb	1	; () banked
  2294  0022D8  0101               	movlb	1	; () banked
  2295  0022DA  2F05               	decfsz	___lwmod@counter& (0+255),f,b
  2296  0022DC  D7DC               	goto	l4180
  2297  0022DE                     l1218:
  2298                           
  2299                           ; BSR set to: 1
  2300  0022DE  C100  F100         	movff	___lwmod@dividend,?___lwmod
  2301  0022E2  C101  F101         	movff	___lwmod@dividend+1,?___lwmod+1
  2302                           
  2303                           ; BSR set to: 1
  2304  0022E6  0012               	return	
  2305  0022E8                     __end_of___lwmod:
  2306                           	opt stack 0
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           prodh	equ	0xFF4
  2312                           prodl	equ	0xFF3
  2313                           intcon2	equ	0xFF1
  2314                           postinc0	equ	0xFEE
  2315                           wreg	equ	0xFE8
  2316                           indf1	equ	0xFE7
  2317                           postdec1	equ	0xFE5
  2318                           fsr1h	equ	0xFE2
  2319                           fsr1l	equ	0xFE1
  2320                           indf2	equ	0xFDF
  2321                           postinc2	equ	0xFDE
  2322                           postdec2	equ	0xFDD
  2323                           fsr2h	equ	0xFDA
  2324                           fsr2l	equ	0xFD9
  2325                           status	equ	0xFD8
  2326                           
  2327 ;; *************** function _FromMainHigh_sendmsg *****************
  2328 ;; Defined at:
  2329 ;;		line 174 in file "../src/messages.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  length          1    wreg     unsigned char 
  2332 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2333 ;;  data            2   23[BANK1 ] PTR void 
  2334 ;;		 -> main@t1thread_data(2), 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  length          1   25[BANK1 ] unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      char 
  2339 ;; Registers used:
  2340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2346 ;;      Params:         0       0       3       0       0
  2347 ;;      Locals:         0       0       1       0       0
  2348 ;;      Temps:          0       0       0       0       0
  2349 ;;      Totals:         0       0       4       0       0
  2350 ;;Total ram usage:        4 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:   13
  2353 ;; This function calls:
  2354 ;;		_send_msg
  2355 ;; This function is called by:
  2356 ;;		_timer1_lthread
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text4
  2361  002B3A                     __ptext4:
  2362                           	opt stack 0
  2363  002B3A                     _FromMainHigh_sendmsg:
  2364                           	opt stack 16
  2365                           
  2366                           ; BSR set to: 1
  2367                           ;incstack = 0
  2368                           ;FromMainHigh_sendmsg@length stored from wreg
  2369  002B3A  CFE8 F119          	movff	wreg,FromMainHigh_sendmsg@length
  2370                           
  2371                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2372  002B3E  0102               	movlb	2	; () banked
  2373  002B40  0E02               	movlw	high _FromMainHigh_MQ
  2374  002B42  0101               	movlb	1	; () banked
  2375  002B44  0101               	movlb	1	; () banked
  2376  002B46  6F0B               	movwf	(send_msg@qptr+1)& (0+255),b
  2377  002B48  0102               	movlb	2	; () banked
  2378  002B4A  0E00               	movlw	low _FromMainHigh_MQ
  2379  002B4C  0101               	movlb	1	; () banked
  2380  002B4E  0101               	movlb	1	; () banked
  2381  002B50  6F0A               	movwf	send_msg@qptr& (0+255),b
  2382  002B52  C119  F10C         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2383  002B56  C116  F10D         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2384  002B5A  0101               	movlb	1	; () banked
  2385  002B5C  0101               	movlb	1	; () banked
  2386  002B5E  C118  F10F         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2387  002B62  0101               	movlb	1	; () banked
  2388  002B64  0101               	movlb	1	; () banked
  2389  002B66  C117  F10E         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2390  002B6A  EC16  F009         	call	_send_msg	;wreg free
  2391  002B6E  0012               	return	
  2392  002B70                     __end_of_FromMainHigh_sendmsg:
  2393                           	opt stack 0
  2394                           tblptru	equ	0xFF8
  2395                           tblptrh	equ	0xFF7
  2396                           tblptrl	equ	0xFF6
  2397                           tablat	equ	0xFF5
  2398                           prodh	equ	0xFF4
  2399                           prodl	equ	0xFF3
  2400                           intcon2	equ	0xFF1
  2401                           postinc0	equ	0xFEE
  2402                           wreg	equ	0xFE8
  2403                           indf1	equ	0xFE7
  2404                           postdec1	equ	0xFE5
  2405                           fsr1h	equ	0xFE2
  2406                           fsr1l	equ	0xFE1
  2407                           indf2	equ	0xFDF
  2408                           postinc2	equ	0xFDE
  2409                           postdec2	equ	0xFDD
  2410                           fsr2h	equ	0xFDA
  2411                           fsr2l	equ	0xFD9
  2412                           status	equ	0xFD8
  2413                           
  2414 ;; *************** function _send_msg *****************
  2415 ;; Defined at:
  2416 ;;		line 24 in file "../src/messages.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2419 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2420 ;;  length          1   12[BANK1 ] unsigned char 
  2421 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2422 ;;  data            2   14[BANK1 ] PTR void 
  2423 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  2424 ;;		 -> main@uc(15), 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2427 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  2428 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2429 ;;  tlength         2   17[BANK1 ] unsigned int 
  2430 ;;  slot            1   19[BANK1 ] unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      char 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2440 ;;      Params:         0       0       6       0       0
  2441 ;;      Locals:         0       0       5       0       0
  2442 ;;      Temps:          0       0       1       0       0
  2443 ;;      Totals:         0       0      12       0       0
  2444 ;;Total ram usage:       12 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:   12
  2447 ;; This function calls:
  2448 ;;		___awmod
  2449 ;;		_memcpy
  2450 ;; This function is called by:
  2451 ;;		_FromMainHigh_sendmsg
  2452 ;;		_FromMainLow_sendmsg
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text5
  2457  00122C                     __ptext5:
  2458                           	opt stack 0
  2459  00122C                     _send_msg:
  2460                           	opt stack 16
  2461                           
  2462                           ;messages.c: 25: unsigned char slot;
  2463                           ;messages.c: 27: msg *qmsg;
  2464                           ;messages.c: 28: size_t tlength = length;
  2465                           
  2466                           ;incstack = 0
  2467  00122C  0101               	movlb	1	; () banked
  2468  00122E  0101               	movlb	1	; () banked
  2469  001230  C10C  F111         	movff	send_msg@length,send_msg@tlength
  2470  001234  0101               	movlb	1	; () banked
  2471  001236  0101               	movlb	1	; () banked
  2472  001238  6B12               	clrf	(send_msg@tlength+1)& (0+255),b
  2473                           
  2474                           ; BSR set to: 1
  2475                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2476  00123A  0101               	movlb	1	; () banked
  2477  00123C  EE20 F041          	lfsr	2,65
  2478  001240  0101               	movlb	1	; () banked
  2479  001242  510A               	movf	send_msg@qptr& (0+255),w,b
  2480  001244  26D9               	addwf	fsr2l,f,c
  2481  001246  0101               	movlb	1	; () banked
  2482  001248  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2483  00124A  22DA               	addwfc	fsr2h,f,c
  2484  00124C  50DF               	movf	indf2,w,c
  2485  00124E  0101               	movlb	1	; () banked
  2486  001250  0101               	movlb	1	; () banked
  2487  001252  6F13               	movwf	send_msg@slot& (0+255),b
  2488                           
  2489                           ; BSR set to: 1
  2490                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2491  001254  0101               	movlb	1	; () banked
  2492  001256  0101               	movlb	1	; () banked
  2493  001258  5113               	movf	send_msg@slot& (0+255),w,b
  2494  00125A  0D0D               	mullw	13
  2495  00125C  50F3               	movf	prodl,w,c
  2496  00125E  0101               	movlb	1	; () banked
  2497  001260  0101               	movlb	1	; () banked
  2498  001262  250A               	addwf	send_msg@qptr& (0+255),w,b
  2499  001264  0101               	movlb	1	; () banked
  2500  001266  0101               	movlb	1	; () banked
  2501  001268  6F14               	movwf	send_msg@qmsg& (0+255),b
  2502  00126A  50F4               	movf	prodh,w,c
  2503  00126C  0101               	movlb	1	; () banked
  2504  00126E  0101               	movlb	1	; () banked
  2505  001270  210B               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2506  001272  0101               	movlb	1	; () banked
  2507  001274  6F15               	movwf	(send_msg@qmsg+1)& (0+255),b
  2508                           
  2509                           ; BSR set to: 1
  2510                           ;messages.c: 41: if (qmsg->full != 0) {
  2511  001276  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2512  00127A  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2513  00127E  50DF               	movf	indf2,w,c
  2514  001280  B4D8               	btfsc	status,2,c
  2515  001282  D002               	goto	l3688
  2516                           
  2517                           ; BSR set to: 1
  2518                           ;messages.c: 42: return (-1);
  2519  001284  0EFF               	movlw	255
  2520  001286  0012               	return	
  2521  001288                     l3688:
  2522                           
  2523                           ; BSR set to: 1
  2524                           ;messages.c: 43: }
  2525                           ;messages.c: 46: qmsg->length = length;
  2526  001288  0101               	movlb	1	; () banked
  2527  00128A  EE20 F001          	lfsr	2,1
  2528  00128E  0101               	movlb	1	; () banked
  2529  001290  5114               	movf	send_msg@qmsg& (0+255),w,b
  2530  001292  26D9               	addwf	fsr2l,f,c
  2531  001294  0101               	movlb	1	; () banked
  2532  001296  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2533  001298  22DA               	addwfc	fsr2h,f,c
  2534  00129A  0101               	movlb	1	; () banked
  2535  00129C  C10C  FFDF         	movff	send_msg@length,indf2
  2536                           
  2537                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2538  0012A0  0101               	movlb	1	; () banked
  2539  0012A2  EE20 F002          	lfsr	2,2
  2540  0012A6  0101               	movlb	1	; () banked
  2541  0012A8  5114               	movf	send_msg@qmsg& (0+255),w,b
  2542  0012AA  26D9               	addwf	fsr2l,f,c
  2543  0012AC  0101               	movlb	1	; () banked
  2544  0012AE  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2545  0012B0  22DA               	addwfc	fsr2h,f,c
  2546  0012B2  0101               	movlb	1	; () banked
  2547  0012B4  C10D  FFDF         	movff	send_msg@msgtype,indf2
  2548                           
  2549                           ; BSR set to: 1
  2550                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2551  0012B8  0E03               	movlw	3
  2552  0012BA  0101               	movlb	1	; () banked
  2553  0012BC  0101               	movlb	1	; () banked
  2554  0012BE  2514               	addwf	send_msg@qmsg& (0+255),w,b
  2555  0012C0  0101               	movlb	1	; () banked
  2556  0012C2  0101               	movlb	1	; () banked
  2557  0012C4  6F00               	movwf	memcpy@d1& (0+255),b
  2558  0012C6  0E00               	movlw	0
  2559  0012C8  0101               	movlb	1	; () banked
  2560  0012CA  0101               	movlb	1	; () banked
  2561  0012CC  2115               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2562  0012CE  0101               	movlb	1	; () banked
  2563  0012D0  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  2564  0012D2  0101               	movlb	1	; () banked
  2565  0012D4  0101               	movlb	1	; () banked
  2566  0012D6  C10F  F103         	movff	send_msg@data+1,memcpy@s1+1
  2567  0012DA  0101               	movlb	1	; () banked
  2568  0012DC  0101               	movlb	1	; () banked
  2569  0012DE  C10E  F102         	movff	send_msg@data,memcpy@s1
  2570  0012E2  C111  F104         	movff	send_msg@tlength,memcpy@n
  2571  0012E6  C112  F105         	movff	send_msg@tlength+1,memcpy@n+1
  2572  0012EA  EC2F  F014         	call	_memcpy	;wreg free
  2573                           
  2574                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  2575  0012EE  0101               	movlb	1	; () banked
  2576  0012F0  EE20 F041          	lfsr	2,65
  2577  0012F4  0101               	movlb	1	; () banked
  2578  0012F6  510A               	movf	send_msg@qptr& (0+255),w,b
  2579  0012F8  26D9               	addwf	fsr2l,f,c
  2580  0012FA  0101               	movlb	1	; () banked
  2581  0012FC  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2582  0012FE  22DA               	addwfc	fsr2h,f,c
  2583  001300  0101               	movlb	1	; () banked
  2584  001302  EE10 F041          	lfsr	1,65
  2585  001306  0101               	movlb	1	; () banked
  2586  001308  510A               	movf	send_msg@qptr& (0+255),w,b
  2587  00130A  26E1               	addwf	fsr1l,f,c
  2588  00130C  0101               	movlb	1	; () banked
  2589  00130E  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2590  001310  22E2               	addwfc	fsr1h,f,c
  2591  001312  50E7               	movf	indf1,w,c
  2592  001314  0101               	movlb	1	; () banked
  2593  001316  6F10               	movwf	??_send_msg& (0+255),b
  2594  001318  0E01               	movlw	1
  2595  00131A  0101               	movlb	1	; () banked
  2596  00131C  2510               	addwf	??_send_msg& (0+255),w,b
  2597  00131E  0101               	movlb	1	; () banked
  2598  001320  0101               	movlb	1	; () banked
  2599  001322  6F00               	movwf	___awmod@dividend& (0+255),b
  2600  001324  0101               	movlb	1	; () banked
  2601  001326  0101               	movlb	1	; () banked
  2602  001328  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
  2603  00132A  0E00               	movlw	0
  2604  00132C  2301               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2605  00132E  0E00               	movlw	0
  2606  001330  0101               	movlb	1	; () banked
  2607  001332  0101               	movlb	1	; () banked
  2608  001334  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
  2609  001336  0E05               	movlw	5
  2610  001338  0101               	movlb	1	; () banked
  2611  00133A  6F02               	movwf	___awmod@divisor& (0+255),b
  2612  00133C  EC42  F00A         	call	___awmod	;wreg free
  2613  001340  0101               	movlb	1	; () banked
  2614  001342  0101               	movlb	1	; () banked
  2615  001344  5100               	movf	?___awmod& (0+255),w,b
  2616  001346  6EDF               	movwf	indf2,c
  2617                           
  2618                           ; BSR set to: 1
  2619                           ;messages.c: 59: qmsg->full = 1;
  2620  001348  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2621  00134C  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2622  001350  0E01               	movlw	1
  2623  001352  6EDF               	movwf	indf2,c
  2624                           
  2625                           ; BSR set to: 1
  2626                           ;messages.c: 60: return (1);
  2627  001354  0E01               	movlw	1
  2628  001356  0012               	return	
  2629  001358                     __end_of_send_msg:
  2630                           	opt stack 0
  2631                           tblptru	equ	0xFF8
  2632                           tblptrh	equ	0xFF7
  2633                           tblptrl	equ	0xFF6
  2634                           tablat	equ	0xFF5
  2635                           prodh	equ	0xFF4
  2636                           prodl	equ	0xFF3
  2637                           intcon2	equ	0xFF1
  2638                           postinc0	equ	0xFEE
  2639                           wreg	equ	0xFE8
  2640                           indf1	equ	0xFE7
  2641                           postdec1	equ	0xFE5
  2642                           fsr1h	equ	0xFE2
  2643                           fsr1l	equ	0xFE1
  2644                           indf2	equ	0xFDF
  2645                           postinc2	equ	0xFDE
  2646                           postdec2	equ	0xFDD
  2647                           fsr2h	equ	0xFDA
  2648                           fsr2l	equ	0xFD9
  2649                           status	equ	0xFD8
  2650                           
  2651 ;; *************** function _timer0_lthread *****************
  2652 ;; Defined at:
  2653 ;;		line 9 in file "../src/timer0_thread.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2656 ;;		 -> main@t0thread_data(2), 
  2657 ;;  msgtype         2    2[BANK1 ] int 
  2658 ;;  length          2    4[BANK1 ] int 
  2659 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2660 ;;		 -> main@msgbuffer(11), 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2663 ;;		 -> main@msgbuffer(11), 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  2    0[BANK1 ] int 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2, status,0
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2673 ;;      Params:         0       0       8       0       0
  2674 ;;      Locals:         0       0       2       0       0
  2675 ;;      Temps:          0       0       0       0       0
  2676 ;;      Totals:         0       0      10       0       0
  2677 ;;Total ram usage:       10 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:   11
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text6
  2688  002D14                     __ptext6:
  2689                           	opt stack 0
  2690  002D14                     _timer0_lthread:
  2691                           	opt stack 19
  2692                           
  2693                           ;timer0_thread.c: 10: unsigned int *msgval;
  2694                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2695                           
  2696                           ; BSR set to: 1
  2697                           ;incstack = 0
  2698  002D14  0101               	movlb	1	; () banked
  2699  002D16  0101               	movlb	1	; () banked
  2700  002D18  C107  F109         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2701  002D1C  0101               	movlb	1	; () banked
  2702  002D1E  0101               	movlb	1	; () banked
  2703  002D20  C106  F108         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2704                           
  2705                           ; BSR set to: 1
  2706  002D24  0012               	return	
  2707  002D26                     __end_of_timer0_lthread:
  2708                           	opt stack 0
  2709                           tblptru	equ	0xFF8
  2710                           tblptrh	equ	0xFF7
  2711                           tblptrl	equ	0xFF6
  2712                           tablat	equ	0xFF5
  2713                           prodh	equ	0xFF4
  2714                           prodl	equ	0xFF3
  2715                           intcon2	equ	0xFF1
  2716                           postinc0	equ	0xFEE
  2717                           wreg	equ	0xFE8
  2718                           indf1	equ	0xFE7
  2719                           postdec1	equ	0xFE5
  2720                           fsr1h	equ	0xFE2
  2721                           fsr1l	equ	0xFE1
  2722                           indf2	equ	0xFDF
  2723                           postinc2	equ	0xFDE
  2724                           postdec2	equ	0xFDD
  2725                           fsr2h	equ	0xFDA
  2726                           fsr2l	equ	0xFD9
  2727                           status	equ	0xFD8
  2728                           
  2729 ;; *************** function _init_uart_recv *****************
  2730 ;; Defined at:
  2731 ;;		line 54 in file "../src/my_uart.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2734 ;;		 -> main@uc(15), 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;		None               void
  2739 ;; Registers used:
  2740 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2746 ;;      Params:         0       0       2       0       0
  2747 ;;      Locals:         0       0       0       0       0
  2748 ;;      Temps:          0       0       0       0       0
  2749 ;;      Totals:         0       0       2       0       0
  2750 ;;Total ram usage:        2 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:   11
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text7
  2761  002CAA                     __ptext7:
  2762                           	opt stack 0
  2763  002CAA                     _init_uart_recv:
  2764                           	opt stack 19
  2765                           
  2766                           ;my_uart.c: 57: uc_ptr = uc;
  2767                           
  2768                           ; BSR set to: 1
  2769                           ;incstack = 0
  2770  002CAA  0101               	movlb	1	; () banked
  2771  002CAC  C101  F06B         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2772  002CB0  0101               	movlb	1	; () banked
  2773  002CB2  C100  F06A         	movff	init_uart_recv@uc,_uc_ptr
  2774                           
  2775                           ; BSR set to: 1
  2776                           ;my_uart.c: 58: uc_ptr->buflen = 0;
  2777  002CB6  EE20 F006          	lfsr	2,6
  2778  002CBA  506A               	movf	_uc_ptr,w,c
  2779  002CBC  26D9               	addwf	fsr2l,f,c
  2780  002CBE  506B               	movf	_uc_ptr+1,w,c
  2781  002CC0  22DA               	addwfc	fsr2h,f,c
  2782  002CC2  0E00               	movlw	0
  2783  002CC4  6EDF               	movwf	indf2,c
  2784                           
  2785                           ; BSR set to: 1
  2786  002CC6  0012               	return	
  2787  002CC8                     __end_of_init_uart_recv:
  2788                           	opt stack 0
  2789                           tblptru	equ	0xFF8
  2790                           tblptrh	equ	0xFF7
  2791                           tblptrl	equ	0xFF6
  2792                           tablat	equ	0xFF5
  2793                           prodh	equ	0xFF4
  2794                           prodl	equ	0xFF3
  2795                           intcon2	equ	0xFF1
  2796                           postinc0	equ	0xFEE
  2797                           wreg	equ	0xFE8
  2798                           indf1	equ	0xFE7
  2799                           postdec1	equ	0xFE5
  2800                           fsr1h	equ	0xFE2
  2801                           fsr1l	equ	0xFE1
  2802                           indf2	equ	0xFDF
  2803                           postinc2	equ	0xFDE
  2804                           postdec2	equ	0xFDD
  2805                           fsr2h	equ	0xFDA
  2806                           fsr2l	equ	0xFD9
  2807                           status	equ	0xFD8
  2808                           
  2809 ;; *************** function _init_timer1_lthread *****************
  2810 ;; Defined at:
  2811 ;;		line 6 in file "../src/timer1_thread.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2814 ;;		 -> main@t1thread_data(2), 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;		None
  2817 ;; Return value:  Size  Location     Type
  2818 ;;		None               void
  2819 ;; Registers used:
  2820 ;;		wreg, fsr2l, fsr2h
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2826 ;;      Params:         0       0       2       0       0
  2827 ;;      Locals:         0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0
  2829 ;;      Totals:         0       0       2       0       0
  2830 ;;Total ram usage:        2 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:   11
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text8
  2841  002D26                     __ptext8:
  2842                           	opt stack 0
  2843  002D26                     _init_timer1_lthread:
  2844                           	opt stack 19
  2845                           
  2846                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2847                           
  2848                           ; BSR set to: 1
  2849                           ;incstack = 0
  2850  002D26  C100  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2851  002D2A  C101  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2852  002D2E  0E00               	movlw	0
  2853  002D30  6EDE               	movwf	postinc2,c
  2854  002D32  0E00               	movlw	0
  2855  002D34  6EDD               	movwf	postdec2,c
  2856  002D36  0012               	return	
  2857  002D38                     __end_of_init_timer1_lthread:
  2858                           	opt stack 0
  2859                           tblptru	equ	0xFF8
  2860                           tblptrh	equ	0xFF7
  2861                           tblptrl	equ	0xFF6
  2862                           tablat	equ	0xFF5
  2863                           prodh	equ	0xFF4
  2864                           prodl	equ	0xFF3
  2865                           intcon2	equ	0xFF1
  2866                           postinc0	equ	0xFEE
  2867                           wreg	equ	0xFE8
  2868                           indf1	equ	0xFE7
  2869                           postdec1	equ	0xFE5
  2870                           fsr1h	equ	0xFE2
  2871                           fsr1l	equ	0xFE1
  2872                           indf2	equ	0xFDF
  2873                           postinc2	equ	0xFDE
  2874                           postdec2	equ	0xFDD
  2875                           fsr2h	equ	0xFDA
  2876                           fsr2l	equ	0xFD9
  2877                           status	equ	0xFD8
  2878                           
  2879 ;; *************** function _init_queues *****************
  2880 ;; Defined at:
  2881 ;;		line 194 in file "../src/messages.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;		None               void
  2888 ;; Registers used:
  2889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2895 ;;      Params:         0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0
  2897 ;;      Temps:          0       0       1       0       0
  2898 ;;      Totals:         0       0       1       0       0
  2899 ;;Total ram usage:        1 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:   12
  2902 ;; This function calls:
  2903 ;;		_init_queue
  2904 ;; This function is called by:
  2905 ;;		_main
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text9
  2910  002646                     __ptext9:
  2911                           	opt stack 0
  2912  002646                     _init_queues:
  2913                           	opt stack 18
  2914                           
  2915                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2916                           
  2917                           ;incstack = 0
  2918  002646  0101               	movlb	1	; () banked
  2919  002648  6F04               	movwf	??_init_queues& (0+255),b
  2920  00264A  0E00               	movlw	0
  2921  00264C  0100               	movlb	0	; () banked
  2922  00264E  0100               	movlb	0	; () banked
  2923  002650  6FDC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2924  002652  0101               	movlb	1	; () banked
  2925  002654  5104               	movf	??_init_queues& (0+255),w,b
  2926                           
  2927                           ; BSR set to: 1
  2928                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2929  002656  0101               	movlb	1	; () banked
  2930  002658  0E01               	movlw	high _ToMainLow_MQ
  2931  00265A  0101               	movlb	1	; () banked
  2932  00265C  0101               	movlb	1	; () banked
  2933  00265E  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2934  002660  0101               	movlb	1	; () banked
  2935  002662  0E82               	movlw	low _ToMainLow_MQ
  2936  002664  0101               	movlb	1	; () banked
  2937  002666  0101               	movlb	1	; () banked
  2938  002668  6F00               	movwf	init_queue@qptr& (0+255),b
  2939  00266A  ECFB  F011         	call	_init_queue	;wreg free
  2940                           
  2941                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2942  00266E  0102               	movlb	2	; () banked
  2943  002670  0E02               	movlw	high _ToMainHigh_MQ
  2944  002672  0101               	movlb	1	; () banked
  2945  002674  0101               	movlb	1	; () banked
  2946  002676  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2947  002678  0102               	movlb	2	; () banked
  2948  00267A  0E86               	movlw	low _ToMainHigh_MQ
  2949  00267C  0101               	movlb	1	; () banked
  2950  00267E  0101               	movlb	1	; () banked
  2951  002680  6F00               	movwf	init_queue@qptr& (0+255),b
  2952  002682  ECFB  F011         	call	_init_queue	;wreg free
  2953                           
  2954                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2955  002686  0102               	movlb	2	; () banked
  2956  002688  0E02               	movlw	high _FromMainLow_MQ
  2957  00268A  0101               	movlb	1	; () banked
  2958  00268C  0101               	movlb	1	; () banked
  2959  00268E  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2960  002690  0102               	movlb	2	; () banked
  2961  002692  0E43               	movlw	low _FromMainLow_MQ
  2962  002694  0101               	movlb	1	; () banked
  2963  002696  0101               	movlb	1	; () banked
  2964  002698  6F00               	movwf	init_queue@qptr& (0+255),b
  2965  00269A  ECFB  F011         	call	_init_queue	;wreg free
  2966                           
  2967                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2968  00269E  0102               	movlb	2	; () banked
  2969  0026A0  0E02               	movlw	high _FromMainHigh_MQ
  2970  0026A2  0101               	movlb	1	; () banked
  2971  0026A4  0101               	movlb	1	; () banked
  2972  0026A6  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2973  0026A8  0102               	movlb	2	; () banked
  2974  0026AA  0E00               	movlw	low _FromMainHigh_MQ
  2975  0026AC  0101               	movlb	1	; () banked
  2976  0026AE  0101               	movlb	1	; () banked
  2977  0026B0  6F00               	movwf	init_queue@qptr& (0+255),b
  2978  0026B2  ECFB  F011         	call	_init_queue	;wreg free
  2979  0026B6  0012               	return	
  2980  0026B8                     __end_of_init_queues:
  2981                           	opt stack 0
  2982                           tblptru	equ	0xFF8
  2983                           tblptrh	equ	0xFF7
  2984                           tblptrl	equ	0xFF6
  2985                           tablat	equ	0xFF5
  2986                           prodh	equ	0xFF4
  2987                           prodl	equ	0xFF3
  2988                           intcon2	equ	0xFF1
  2989                           postinc0	equ	0xFEE
  2990                           wreg	equ	0xFE8
  2991                           indf1	equ	0xFE7
  2992                           postdec1	equ	0xFE5
  2993                           fsr1h	equ	0xFE2
  2994                           fsr1l	equ	0xFE1
  2995                           indf2	equ	0xFDF
  2996                           postinc2	equ	0xFDE
  2997                           postdec2	equ	0xFDD
  2998                           fsr2h	equ	0xFDA
  2999                           fsr2l	equ	0xFD9
  3000                           status	equ	0xFD8
  3001                           
  3002 ;; *************** function _init_queue *****************
  3003 ;; Defined at:
  3004 ;;		line 14 in file "../src/messages.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3007 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  i               1    3[BANK1 ] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;		None               void
  3012 ;; Registers used:
  3013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3019 ;;      Params:         0       0       2       0       0
  3020 ;;      Locals:         0       0       1       0       0
  3021 ;;      Temps:          0       0       1       0       0
  3022 ;;      Totals:         0       0       4       0       0
  3023 ;;Total ram usage:        4 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:   11
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_init_queues
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text10
  3034  0023F6                     __ptext10:
  3035                           	opt stack 0
  3036  0023F6                     _init_queue:
  3037                           	opt stack 18
  3038                           
  3039                           ;messages.c: 15: unsigned char i;
  3040                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3041                           
  3042                           ;incstack = 0
  3043  0023F6  0101               	movlb	1	; () banked
  3044  0023F8  EE20 F041          	lfsr	2,65
  3045  0023FC  0101               	movlb	1	; () banked
  3046  0023FE  5100               	movf	init_queue@qptr& (0+255),w,b
  3047  002400  26D9               	addwf	fsr2l,f,c
  3048  002402  0101               	movlb	1	; () banked
  3049  002404  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  3050  002406  22DA               	addwfc	fsr2h,f,c
  3051  002408  0E00               	movlw	0
  3052  00240A  6EDF               	movwf	indf2,c
  3053                           
  3054                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3055  00240C  0101               	movlb	1	; () banked
  3056  00240E  EE20 F042          	lfsr	2,66
  3057  002412  0101               	movlb	1	; () banked
  3058  002414  5100               	movf	init_queue@qptr& (0+255),w,b
  3059  002416  26D9               	addwf	fsr2l,f,c
  3060  002418  0101               	movlb	1	; () banked
  3061  00241A  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  3062  00241C  22DA               	addwfc	fsr2h,f,c
  3063  00241E  0E00               	movlw	0
  3064  002420  6EDF               	movwf	indf2,c
  3065                           
  3066                           ; BSR set to: 1
  3067                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  3068  002422  0101               	movlb	1	; () banked
  3069  002424  6F02               	movwf	??_init_queue& (0+255),b
  3070  002426  0E00               	movlw	0
  3071  002428  0101               	movlb	1	; () banked
  3072  00242A  0101               	movlb	1	; () banked
  3073  00242C  6F03               	movwf	init_queue@i& (0+255),b
  3074  00242E  0101               	movlb	1	; () banked
  3075  002430  5102               	movf	??_init_queue& (0+255),w,b
  3076                           
  3077                           ; BSR set to: 1
  3078  002432  0E04               	movlw	4
  3079  002434  0101               	movlb	1	; () banked
  3080  002436  0101               	movlb	1	; () banked
  3081  002438  6503               	cpfsgt	init_queue@i& (0+255),b
  3082  00243A  D001               	goto	l3670
  3083  00243C  0012               	return	
  3084  00243E                     l3670:
  3085                           
  3086                           ; BSR set to: 1
  3087                           ;messages.c: 20: qptr->queue[i].full = 0;
  3088  00243E  0101               	movlb	1	; () banked
  3089  002440  0101               	movlb	1	; () banked
  3090  002442  5103               	movf	init_queue@i& (0+255),w,b
  3091  002444  0D0D               	mullw	13
  3092  002446  50F3               	movf	prodl,w,c
  3093  002448  0101               	movlb	1	; () banked
  3094  00244A  0101               	movlb	1	; () banked
  3095  00244C  2500               	addwf	init_queue@qptr& (0+255),w,b
  3096  00244E  6ED9               	movwf	fsr2l,c
  3097  002450  50F4               	movf	prodh,w,c
  3098  002452  0101               	movlb	1	; () banked
  3099  002454  0101               	movlb	1	; () banked
  3100  002456  2101               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3101  002458  6EDA               	movwf	fsr2h,c
  3102  00245A  0E00               	movlw	0
  3103  00245C  6EDF               	movwf	indf2,c
  3104                           
  3105                           ; BSR set to: 1
  3106  00245E  0101               	movlb	1	; () banked
  3107  002460  0101               	movlb	1	; () banked
  3108  002462  2B03               	incf	init_queue@i& (0+255),f,b
  3109                           
  3110                           ; BSR set to: 1
  3111  002464  0E04               	movlw	4
  3112  002466  0101               	movlb	1	; () banked
  3113  002468  0101               	movlb	1	; () banked
  3114  00246A  6503               	cpfsgt	init_queue@i& (0+255),b
  3115  00246C  D7E8               	goto	l3670
  3116  00246E  0012               	return	
  3117  002470                     __end_of_init_queue:
  3118                           	opt stack 0
  3119                           tblptru	equ	0xFF8
  3120                           tblptrh	equ	0xFF7
  3121                           tblptrl	equ	0xFF6
  3122                           tablat	equ	0xFF5
  3123                           prodh	equ	0xFF4
  3124                           prodl	equ	0xFF3
  3125                           intcon2	equ	0xFF1
  3126                           postinc0	equ	0xFEE
  3127                           wreg	equ	0xFE8
  3128                           indf1	equ	0xFE7
  3129                           postdec1	equ	0xFE5
  3130                           fsr1h	equ	0xFE2
  3131                           fsr1l	equ	0xFE1
  3132                           indf2	equ	0xFDF
  3133                           postinc2	equ	0xFDE
  3134                           postdec2	equ	0xFDD
  3135                           fsr2h	equ	0xFDA
  3136                           fsr2l	equ	0xFD9
  3137                           status	equ	0xFD8
  3138                           
  3139 ;; *************** function _init_i2c *****************
  3140 ;; Defined at:
  3141 ;;		line 459 in file "../src/my_i2c.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  3144 ;;		 -> main@ic(29), 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;		None               void
  3149 ;; Registers used:
  3150 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3156 ;;      Params:         0       0       2       0       0
  3157 ;;      Locals:         0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0
  3159 ;;      Totals:         0       0       2       0       0
  3160 ;;Total ram usage:        2 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:   11
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text11
  3171  002726                     __ptext11:
  3172                           	opt stack 0
  3173  002726                     _init_i2c:
  3174                           	opt stack 19
  3175                           
  3176                           ;my_i2c.c: 460: ic_ptr = ic;
  3177                           
  3178                           ; BSR set to: 1
  3179                           ;incstack = 0
  3180  002726  0101               	movlb	1	; () banked
  3181  002728  0101               	movlb	1	; () banked
  3182  00272A  C101  F1C6         	movff	init_i2c@ic+1,_ic_ptr+1
  3183  00272E  0101               	movlb	1	; () banked
  3184  002730  0101               	movlb	1	; () banked
  3185  002732  C100  F1C5         	movff	init_i2c@ic,_ic_ptr
  3186                           
  3187                           ; BSR set to: 1
  3188                           ;my_i2c.c: 461: ic_ptr->buflen = 0;
  3189  002736  0101               	movlb	1	; () banked
  3190  002738  EE20 F00A          	lfsr	2,10
  3191  00273C  0101               	movlb	1	; () banked
  3192  00273E  51C5               	movf	_ic_ptr& (0+255),w,b
  3193  002740  26D9               	addwf	fsr2l,f,c
  3194  002742  0101               	movlb	1	; () banked
  3195  002744  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3196  002746  22DA               	addwfc	fsr2h,f,c
  3197  002748  0E00               	movlw	0
  3198  00274A  6EDF               	movwf	indf2,c
  3199                           
  3200                           ; BSR set to: 1
  3201                           ;my_i2c.c: 462: ic_ptr->event_count = 0;
  3202  00274C  0101               	movlb	1	; () banked
  3203  00274E  EE20 F00C          	lfsr	2,12
  3204  002752  0101               	movlb	1	; () banked
  3205  002754  51C5               	movf	_ic_ptr& (0+255),w,b
  3206  002756  26D9               	addwf	fsr2l,f,c
  3207  002758  0101               	movlb	1	; () banked
  3208  00275A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3209  00275C  22DA               	addwfc	fsr2h,f,c
  3210  00275E  0E00               	movlw	0
  3211  002760  6EDF               	movwf	indf2,c
  3212                           
  3213                           ; BSR set to: 1
  3214                           ;my_i2c.c: 463: ic_ptr->status = 0x5;
  3215  002762  0101               	movlb	1	; () banked
  3216  002764  EE20 F00D          	lfsr	2,13
  3217  002768  0101               	movlb	1	; () banked
  3218  00276A  51C5               	movf	_ic_ptr& (0+255),w,b
  3219  00276C  26D9               	addwf	fsr2l,f,c
  3220  00276E  0101               	movlb	1	; () banked
  3221  002770  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3222  002772  22DA               	addwfc	fsr2h,f,c
  3223  002774  0E05               	movlw	5
  3224  002776  6EDF               	movwf	indf2,c
  3225                           
  3226                           ; BSR set to: 1
  3227                           ;my_i2c.c: 464: ic_ptr->error_count = 0;
  3228  002778  0101               	movlb	1	; () banked
  3229  00277A  EE20 F00F          	lfsr	2,15
  3230  00277E  0101               	movlb	1	; () banked
  3231  002780  51C5               	movf	_ic_ptr& (0+255),w,b
  3232  002782  26D9               	addwf	fsr2l,f,c
  3233  002784  0101               	movlb	1	; () banked
  3234  002786  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3235  002788  22DA               	addwfc	fsr2h,f,c
  3236  00278A  0E00               	movlw	0
  3237  00278C  6EDF               	movwf	indf2,c
  3238                           
  3239                           ; BSR set to: 1
  3240  00278E  0012               	return	
  3241  002790                     __end_of_init_i2c:
  3242                           	opt stack 0
  3243                           tblptru	equ	0xFF8
  3244                           tblptrh	equ	0xFF7
  3245                           tblptrl	equ	0xFF6
  3246                           tablat	equ	0xFF5
  3247                           prodh	equ	0xFF4
  3248                           prodl	equ	0xFF3
  3249                           intcon2	equ	0xFF1
  3250                           postinc0	equ	0xFEE
  3251                           wreg	equ	0xFE8
  3252                           indf1	equ	0xFE7
  3253                           postdec1	equ	0xFE5
  3254                           fsr1h	equ	0xFE2
  3255                           fsr1l	equ	0xFE1
  3256                           indf2	equ	0xFDF
  3257                           postinc2	equ	0xFDE
  3258                           postdec2	equ	0xFDD
  3259                           fsr2h	equ	0xFDA
  3260                           fsr2l	equ	0xFD9
  3261                           status	equ	0xFD8
  3262                           
  3263 ;; *************** function _i2c_master_send *****************
  3264 ;; Defined at:
  3265 ;;		line 44 in file "../src/my_i2c.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  sendlength      1    wreg     unsigned char 
  3268 ;;  recvlength      1    0[BANK1 ] unsigned char 
  3269 ;;  msg             2    1[BANK1 ] PTR unsigned char 
  3270 ;;		 -> main@msgbuffer(11), 
  3271 ;;  slave_addr      1    3[BANK1 ] unsigned char 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  sendlength      1    6[BANK1 ] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      unsigned char 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3283 ;;      Params:         0       0       4       0       0
  3284 ;;      Locals:         0       0       1       0       0
  3285 ;;      Temps:          0       0       2       0       0
  3286 ;;      Totals:         0       0       7       0       0
  3287 ;;Total ram usage:        7 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:   11
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_main
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text12
  3298  0010EE                     __ptext12:
  3299                           	opt stack 0
  3300  0010EE                     _i2c_master_send:
  3301                           	opt stack 19
  3302                           
  3303                           ; BSR set to: 1
  3304                           ;incstack = 0
  3305                           ;i2c_master_send@sendlength stored from wreg
  3306  0010EE  CFE8 F106          	movff	wreg,i2c_master_send@sendlength
  3307                           
  3308                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  3309  0010F2  0101               	movlb	1	; () banked
  3310  0010F4  EE20 F01A          	lfsr	2,26
  3311  0010F8  0101               	movlb	1	; () banked
  3312  0010FA  51C5               	movf	_ic_ptr& (0+255),w,b
  3313  0010FC  26D9               	addwf	fsr2l,f,c
  3314  0010FE  0101               	movlb	1	; () banked
  3315  001100  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3316  001102  22DA               	addwfc	fsr2h,f,c
  3317  001104  0E00               	movlw	0
  3318  001106  6EDF               	movwf	indf2,c
  3319  001108  D042               	goto	l3654
  3320  00110A                     l3650:
  3321                           
  3322                           ; BSR set to: 1
  3323                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  3324  00110A  0101               	movlb	1	; () banked
  3325  00110C  EE20 F01A          	lfsr	2,26
  3326  001110  0101               	movlb	1	; () banked
  3327  001112  51C5               	movf	_ic_ptr& (0+255),w,b
  3328  001114  26D9               	addwf	fsr2l,f,c
  3329  001116  0101               	movlb	1	; () banked
  3330  001118  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3331  00111A  22DA               	addwfc	fsr2h,f,c
  3332  00111C  50DF               	movf	indf2,w,c
  3333  00111E  0101               	movlb	1	; () banked
  3334  001120  6F04               	movwf	??_i2c_master_send& (0+255),b
  3335  001122  0101               	movlb	1	; () banked
  3336  001124  5104               	movf	??_i2c_master_send& (0+255),w,b
  3337  001126  0D01               	mullw	1
  3338  001128  50F3               	movf	prodl,w,c
  3339  00112A  0101               	movlb	1	; () banked
  3340  00112C  0101               	movlb	1	; () banked
  3341  00112E  2501               	addwf	i2c_master_send@msg& (0+255),w,b
  3342  001130  6ED9               	movwf	fsr2l,c
  3343  001132  50F4               	movf	prodh,w,c
  3344  001134  0101               	movlb	1	; () banked
  3345  001136  0101               	movlb	1	; () banked
  3346  001138  2102               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  3347  00113A  6EDA               	movwf	fsr2h,c
  3348  00113C  0101               	movlb	1	; () banked
  3349  00113E  EE10 F01A          	lfsr	1,26
  3350  001142  0101               	movlb	1	; () banked
  3351  001144  51C5               	movf	_ic_ptr& (0+255),w,b
  3352  001146  26E1               	addwf	fsr1l,f,c
  3353  001148  0101               	movlb	1	; () banked
  3354  00114A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3355  00114C  22E2               	addwfc	fsr1h,f,c
  3356  00114E  50E7               	movf	indf1,w,c
  3357  001150  0101               	movlb	1	; () banked
  3358  001152  6F05               	movwf	(??_i2c_master_send+1)& (0+255),b
  3359  001154  0101               	movlb	1	; () banked
  3360  001156  5105               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3361  001158  0D01               	mullw	1
  3362  00115A  0E10               	movlw	16
  3363  00115C  26F3               	addwf	prodl,f,c
  3364  00115E  0E00               	movlw	0
  3365  001160  22F4               	addwfc	prodh,f,c
  3366  001162  50F3               	movf	prodl,w,c
  3367  001164  0101               	movlb	1	; () banked
  3368  001166  0101               	movlb	1	; () banked
  3369  001168  25C5               	addwf	_ic_ptr& (0+255),w,b
  3370  00116A  6EE1               	movwf	fsr1l,c
  3371  00116C  50F4               	movf	prodh,w,c
  3372  00116E  0101               	movlb	1	; () banked
  3373  001170  0101               	movlb	1	; () banked
  3374  001172  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3375  001174  6EE2               	movwf	fsr1h,c
  3376  001176  CFDF FFE7          	movff	indf2,indf1
  3377                           
  3378                           ; BSR set to: 1
  3379  00117A  0101               	movlb	1	; () banked
  3380  00117C  EE20 F01A          	lfsr	2,26
  3381  001180  0101               	movlb	1	; () banked
  3382  001182  51C5               	movf	_ic_ptr& (0+255),w,b
  3383  001184  26D9               	addwf	fsr2l,f,c
  3384  001186  0101               	movlb	1	; () banked
  3385  001188  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3386  00118A  22DA               	addwfc	fsr2h,f,c
  3387  00118C  2ADF               	incf	indf2,f,c
  3388  00118E                     l3654:
  3389                           
  3390                           ; BSR set to: 1
  3391  00118E  0101               	movlb	1	; () banked
  3392  001190  EE20 F01A          	lfsr	2,26
  3393  001194  0101               	movlb	1	; () banked
  3394  001196  51C5               	movf	_ic_ptr& (0+255),w,b
  3395  001198  26D9               	addwf	fsr2l,f,c
  3396  00119A  0101               	movlb	1	; () banked
  3397  00119C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3398  00119E  22DA               	addwfc	fsr2h,f,c
  3399  0011A0  50DF               	movf	indf2,w,c
  3400  0011A2  0101               	movlb	1	; () banked
  3401  0011A4  6F04               	movwf	??_i2c_master_send& (0+255),b
  3402  0011A6  0101               	movlb	1	; () banked
  3403  0011A8  0101               	movlb	1	; () banked
  3404  0011AA  5106               	movf	i2c_master_send@sendlength& (0+255),w,b
  3405  0011AC  0101               	movlb	1	; () banked
  3406  0011AE  5D04               	subwf	??_i2c_master_send& (0+255),w,b
  3407  0011B0  A0D8               	btfss	status,0,c
  3408  0011B2  D7AB               	goto	l3650
  3409                           
  3410                           ; BSR set to: 1
  3411                           ;my_i2c.c: 48: }
  3412                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  3413                           
  3414                           ; BSR set to: 1
  3415  0011B4  0101               	movlb	1	; () banked
  3416  0011B6  EE20 F01C          	lfsr	2,28
  3417  0011BA  0101               	movlb	1	; () banked
  3418  0011BC  51C5               	movf	_ic_ptr& (0+255),w,b
  3419  0011BE  26D9               	addwf	fsr2l,f,c
  3420  0011C0  0101               	movlb	1	; () banked
  3421  0011C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3422  0011C4  22DA               	addwfc	fsr2h,f,c
  3423  0011C6  0101               	movlb	1	; () banked
  3424  0011C8  C103  FFDF         	movff	i2c_master_send@slave_addr,indf2
  3425                           
  3426                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  3427  0011CC  0101               	movlb	1	; () banked
  3428  0011CE  EE20 F01A          	lfsr	2,26
  3429  0011D2  0101               	movlb	1	; () banked
  3430  0011D4  51C5               	movf	_ic_ptr& (0+255),w,b
  3431  0011D6  26D9               	addwf	fsr2l,f,c
  3432  0011D8  0101               	movlb	1	; () banked
  3433  0011DA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3434  0011DC  22DA               	addwfc	fsr2h,f,c
  3435  0011DE  0101               	movlb	1	; () banked
  3436  0011E0  C106  FFDF         	movff	i2c_master_send@sendlength,indf2
  3437                           
  3438                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  3439  0011E4  0101               	movlb	1	; () banked
  3440  0011E6  EE20 F00A          	lfsr	2,10
  3441  0011EA  0101               	movlb	1	; () banked
  3442  0011EC  51C5               	movf	_ic_ptr& (0+255),w,b
  3443  0011EE  26D9               	addwf	fsr2l,f,c
  3444  0011F0  0101               	movlb	1	; () banked
  3445  0011F2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3446  0011F4  22DA               	addwfc	fsr2h,f,c
  3447  0011F6  0101               	movlb	1	; () banked
  3448  0011F8  C100  FFDF         	movff	i2c_master_send@recvlength,indf2
  3449                           
  3450                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  3451  0011FC  0101               	movlb	1	; () banked
  3452  0011FE  EE20 F00D          	lfsr	2,13
  3453  001202  0101               	movlb	1	; () banked
  3454  001204  51C5               	movf	_ic_ptr& (0+255),w,b
  3455  001206  26D9               	addwf	fsr2l,f,c
  3456  001208  0101               	movlb	1	; () banked
  3457  00120A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3458  00120C  22DA               	addwfc	fsr2h,f,c
  3459  00120E  0E0A               	movlw	10
  3460  001210  6EDF               	movwf	indf2,c
  3461                           
  3462                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  3463  001212  0101               	movlb	1	; () banked
  3464  001214  EE20 F01B          	lfsr	2,27
  3465  001218  0101               	movlb	1	; () banked
  3466  00121A  51C5               	movf	_ic_ptr& (0+255),w,b
  3467  00121C  26D9               	addwf	fsr2l,f,c
  3468  00121E  0101               	movlb	1	; () banked
  3469  001220  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3470  001222  22DA               	addwfc	fsr2h,f,c
  3471  001224  0E00               	movlw	0
  3472  001226  6EDF               	movwf	indf2,c
  3473                           
  3474                           ; BSR set to: 1
  3475                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  3476  001228  80C5               	bsf	4037,0,c	;volatile
  3477  00122A  0012               	return	
  3478  00122C                     __end_of_i2c_master_send:
  3479                           	opt stack 0
  3480                           tblptru	equ	0xFF8
  3481                           tblptrh	equ	0xFF7
  3482                           tblptrl	equ	0xFF6
  3483                           tablat	equ	0xFF5
  3484                           prodh	equ	0xFF4
  3485                           prodl	equ	0xFF3
  3486                           intcon2	equ	0xFF1
  3487                           postinc0	equ	0xFEE
  3488                           wreg	equ	0xFE8
  3489                           indf1	equ	0xFE7
  3490                           postdec1	equ	0xFE5
  3491                           fsr1h	equ	0xFE2
  3492                           fsr1l	equ	0xFE1
  3493                           indf2	equ	0xFDF
  3494                           postinc2	equ	0xFDE
  3495                           postdec2	equ	0xFDD
  3496                           fsr2h	equ	0xFDA
  3497                           fsr2l	equ	0xFD9
  3498                           status	equ	0xFD8
  3499                           
  3500 ;; *************** function _i2c_configure_slave *****************
  3501 ;; Defined at:
  3502 ;;		line 470 in file "../src/my_i2c.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  addr            1    wreg     unsigned char 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  addr            1    0[BANK1 ] unsigned char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;		None               void
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3516 ;;      Params:         0       0       0       0       0
  3517 ;;      Locals:         0       0       1       0       0
  3518 ;;      Temps:          0       0       0       0       0
  3519 ;;      Totals:         0       0       1       0       0
  3520 ;;Total ram usage:        1 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:   11
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_main
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text13
  3531  002C3C                     __ptext13:
  3532                           	opt stack 0
  3533  002C3C                     _i2c_configure_slave:
  3534                           	opt stack 19
  3535                           
  3536                           ; BSR set to: 1
  3537                           ;incstack = 0
  3538                           ;i2c_configure_slave@addr stored from wreg
  3539  002C3C  CFE8 F100          	movff	wreg,i2c_configure_slave@addr
  3540                           
  3541                           ;my_i2c.c: 482: TRISCbits.TRISC3 = 1;
  3542  002C40  8694               	bsf	3988,3,c	;volatile
  3543                           
  3544                           ;my_i2c.c: 483: TRISCbits.TRISC4 = 1;
  3545  002C42  8894               	bsf	3988,4,c	;volatile
  3546                           
  3547                           ;my_i2c.c: 488: SSPADD = addr;
  3548  002C44  C100  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3549                           
  3550                           ;my_i2c.c: 490: SSPSTAT = 0x0;
  3551  002C48  0E00               	movlw	0
  3552  002C4A  6EC7               	movwf	4039,c	;volatile
  3553                           
  3554                           ;my_i2c.c: 491: SSPCON1 = 0x0;
  3555  002C4C  0E00               	movlw	0
  3556  002C4E  6EC6               	movwf	4038,c	;volatile
  3557                           
  3558                           ;my_i2c.c: 492: SSPCON2 = 0x0;
  3559  002C50  0E00               	movlw	0
  3560  002C52  6EC5               	movwf	4037,c	;volatile
  3561                           
  3562                           ;my_i2c.c: 493: SSPCON1 |= 0x0E;
  3563  002C54  0E0E               	movlw	14
  3564  002C56  12C6               	iorwf	4038,f,c	;volatile
  3565                           
  3566                           ;my_i2c.c: 494: SSPSTAT |= 0b10000000;
  3567  002C58  8EC7               	bsf	4039,7,c	;volatile
  3568                           
  3569                           ;my_i2c.c: 497: TRISCbits.TRISC3 = 1;
  3570  002C5A  8694               	bsf	3988,3,c	;volatile
  3571                           
  3572                           ;my_i2c.c: 498: TRISCbits.TRISC4 = 1;
  3573  002C5C  8894               	bsf	3988,4,c	;volatile
  3574                           
  3575                           ;my_i2c.c: 519: SSPCON2bits.SEN = 1;
  3576  002C5E  80C5               	bsf	4037,0,c	;volatile
  3577                           
  3578                           ;my_i2c.c: 520: SSPCON1 |= 0b00100000;
  3579  002C60  8AC6               	bsf	4038,5,c	;volatile
  3580  002C62  0012               	return	
  3581  002C64                     __end_of_i2c_configure_slave:
  3582                           	opt stack 0
  3583                           tblptru	equ	0xFF8
  3584                           tblptrh	equ	0xFF7
  3585                           tblptrl	equ	0xFF6
  3586                           tablat	equ	0xFF5
  3587                           prodh	equ	0xFF4
  3588                           prodl	equ	0xFF3
  3589                           intcon2	equ	0xFF1
  3590                           postinc0	equ	0xFEE
  3591                           wreg	equ	0xFE8
  3592                           indf1	equ	0xFE7
  3593                           postdec1	equ	0xFE5
  3594                           fsr1h	equ	0xFE2
  3595                           fsr1l	equ	0xFE1
  3596                           indf2	equ	0xFDF
  3597                           postinc2	equ	0xFDE
  3598                           postdec2	equ	0xFDD
  3599                           fsr2h	equ	0xFDA
  3600                           fsr2l	equ	0xFD9
  3601                           status	equ	0xFD8
  3602                           
  3603 ;; *************** function _enable_interrupts *****************
  3604 ;; Defined at:
  3605 ;;		line 15 in file "../src/interrupts.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;		None               void
  3612 ;; Registers used:
  3613 ;;		None
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3619 ;;      Params:         0       0       0       0       0
  3620 ;;      Locals:         0       0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0
  3622 ;;      Totals:         0       0       0       0       0
  3623 ;;Total ram usage:        0 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:   11
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_main
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text14
  3634  002DB4                     __ptext14:
  3635                           	opt stack 0
  3636  002DB4                     _enable_interrupts:
  3637                           	opt stack 19
  3638                           
  3639                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3640                           
  3641                           ;incstack = 0
  3642  002DB4  8ED0               	bsf	4048,7,c	;volatile
  3643                           
  3644                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3645  002DB6  8EF2               	bsf	intcon,7,c	;volatile
  3646                           
  3647                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3648  002DB8  8CF2               	bsf	intcon,6,c	;volatile
  3649  002DBA  0012               	return	
  3650  002DBC                     __end_of_enable_interrupts:
  3651                           	opt stack 0
  3652                           tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           prodh	equ	0xFF4
  3657                           prodl	equ	0xFF3
  3658                           intcon	equ	0xFF2
  3659                           intcon2	equ	0xFF1
  3660                           postinc0	equ	0xFEE
  3661                           wreg	equ	0xFE8
  3662                           indf1	equ	0xFE7
  3663                           postdec1	equ	0xFE5
  3664                           fsr1h	equ	0xFE2
  3665                           fsr1l	equ	0xFE1
  3666                           indf2	equ	0xFDF
  3667                           postinc2	equ	0xFDE
  3668                           postdec2	equ	0xFDD
  3669                           fsr2h	equ	0xFDA
  3670                           fsr2l	equ	0xFD9
  3671                           status	equ	0xFD8
  3672                           
  3673 ;; *************** function _block_on_To_msgqueues *****************
  3674 ;; Defined at:
  3675 ;;		line 258 in file "../src/messages.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;		None               void
  3682 ;; Registers used:
  3683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3689 ;;      Params:         0       0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0
  3691 ;;      Temps:          0       0       1       0       0
  3692 ;;      Totals:         0       0       1       0       0
  3693 ;;Total ram usage:        1 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:   14
  3696 ;; This function calls:
  3697 ;;		_Delay1KTCYx
  3698 ;;		_check_msg
  3699 ;;		_in_main
  3700 ;; This function is called by:
  3701 ;;		_main
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text15
  3706  0022E8                     __ptext15:
  3707                           	opt stack 0
  3708  0022E8                     _block_on_To_msgqueues:
  3709                           	opt stack 16
  3710                           
  3711                           ;messages.c: 259: if (!in_main()) {
  3712                           
  3713                           ;incstack = 0
  3714  0022E8  ECFD  F014         	call	_in_main	;wreg free
  3715  0022EC  0101               	movlb	1	; () banked
  3716  0022EE  0101               	movlb	1	; () banked
  3717  0022F0  5105               	movf	(?_in_main+1)& (0+255),w,b
  3718  0022F2  0101               	movlb	1	; () banked
  3719  0022F4  1104               	iorwf	?_in_main& (0+255),w,b
  3720  0022F6  B4D8               	btfsc	status,2,c
  3721  0022F8  0012               	return	
  3722                           
  3723                           ; BSR set to: 1
  3724                           ;messages.c: 261: }
  3725                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3726                           
  3727                           ; BSR set to: 1
  3728                           
  3729                           ; BSR set to: 1
  3730                           ;messages.c: 260: return;
  3731  0022FA  0101               	movlb	1	; () banked
  3732  0022FC  6F06               	movwf	??_block_on_To_msgqueues& (0+255),b
  3733  0022FE  0E01               	movlw	1
  3734  002300  0100               	movlb	0	; () banked
  3735  002302  0100               	movlb	0	; () banked
  3736  002304  6FDC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3737  002306  0101               	movlb	1	; () banked
  3738  002308  5106               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3739  00230A                     l3604:
  3740                           
  3741                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3742  00230A  0102               	movlb	2	; () banked
  3743  00230C  0E02               	movlw	high _ToMainHigh_MQ
  3744  00230E  0101               	movlb	1	; () banked
  3745  002310  0101               	movlb	1	; () banked
  3746  002312  6F01               	movwf	(check_msg@qptr+1)& (0+255),b
  3747  002314  0102               	movlb	2	; () banked
  3748  002316  0E86               	movlw	low _ToMainHigh_MQ
  3749  002318  0101               	movlb	1	; () banked
  3750  00231A  0101               	movlb	1	; () banked
  3751  00231C  6F00               	movwf	check_msg@qptr& (0+255),b
  3752  00231E  ECB8  F015         	call	_check_msg	;wreg free
  3753  002322  0900               	iorlw	0
  3754  002324  B4D8               	btfsc	status,2,c
  3755  002326  D009               	goto	l3610
  3756                           
  3757                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3758  002328  0101               	movlb	1	; () banked
  3759  00232A  6F06               	movwf	??_block_on_To_msgqueues& (0+255),b
  3760  00232C  0E00               	movlw	0
  3761  00232E  0100               	movlb	0	; () banked
  3762  002330  0100               	movlb	0	; () banked
  3763  002332  6FDC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3764  002334  0101               	movlb	1	; () banked
  3765  002336  5106               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3766  002338  0012               	return	
  3767  00233A                     l3610:
  3768                           
  3769                           ;messages.c: 271: }
  3770                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3771  00233A  0101               	movlb	1	; () banked
  3772  00233C  0E01               	movlw	high _ToMainLow_MQ
  3773  00233E  0101               	movlb	1	; () banked
  3774  002340  0101               	movlb	1	; () banked
  3775  002342  6F01               	movwf	(check_msg@qptr+1)& (0+255),b
  3776  002344  0101               	movlb	1	; () banked
  3777  002346  0E82               	movlw	low _ToMainLow_MQ
  3778  002348  0101               	movlb	1	; () banked
  3779  00234A  0101               	movlb	1	; () banked
  3780  00234C  6F00               	movwf	check_msg@qptr& (0+255),b
  3781  00234E  ECB8  F015         	call	_check_msg	;wreg free
  3782  002352  0900               	iorlw	0
  3783  002354  B4D8               	btfsc	status,2,c
  3784  002356  D009               	goto	l3616
  3785                           
  3786                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3787  002358  0101               	movlb	1	; () banked
  3788  00235A  6F06               	movwf	??_block_on_To_msgqueues& (0+255),b
  3789  00235C  0E00               	movlw	0
  3790  00235E  0100               	movlb	0	; () banked
  3791  002360  0100               	movlb	0	; () banked
  3792  002362  6FDC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3793  002364  0101               	movlb	1	; () banked
  3794  002366  5106               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3795  002368  0012               	return	
  3796  00236A                     l3616:
  3797                           
  3798                           ;messages.c: 278: }
  3799                           ;messages.c: 279: Delay1KTCYx(10);
  3800  00236A  0E0A               	movlw	10
  3801  00236C  EC7F  F016         	call	_Delay1KTCYx
  3802  002370  D7CC               	goto	l3604
  3803  002372                     __end_of_block_on_To_msgqueues:
  3804                           	opt stack 0
  3805                           tblptru	equ	0xFF8
  3806                           tblptrh	equ	0xFF7
  3807                           tblptrl	equ	0xFF6
  3808                           tablat	equ	0xFF5
  3809                           prodh	equ	0xFF4
  3810                           prodl	equ	0xFF3
  3811                           intcon	equ	0xFF2
  3812                           intcon2	equ	0xFF1
  3813                           postinc0	equ	0xFEE
  3814                           wreg	equ	0xFE8
  3815                           indf1	equ	0xFE7
  3816                           postdec1	equ	0xFE5
  3817                           fsr1h	equ	0xFE2
  3818                           fsr1l	equ	0xFE1
  3819                           indf2	equ	0xFDF
  3820                           postinc2	equ	0xFDE
  3821                           postdec2	equ	0xFDD
  3822                           fsr2h	equ	0xFDA
  3823                           fsr2l	equ	0xFD9
  3824                           status	equ	0xFD8
  3825                           
  3826 ;; *************** function _in_main *****************
  3827 ;; Defined at:
  3828 ;;		line 41 in file "../src/interrupts.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  2    4[BANK1 ] int 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3842 ;;      Params:         0       0       2       0       0
  3843 ;;      Locals:         0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0
  3845 ;;      Totals:         0       0       2       0       0
  3846 ;;Total ram usage:        2 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:   13
  3849 ;; This function calls:
  3850 ;;		_in_high_int
  3851 ;;		_in_low_int
  3852 ;; This function is called by:
  3853 ;;		_block_on_To_msgqueues
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text16
  3858  0029FA                     __ptext16:
  3859                           	opt stack 0
  3860  0029FA                     _in_main:
  3861                           	opt stack 16
  3862                           
  3863                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3864                           
  3865                           ;incstack = 0
  3866  0029FA  ECB7  F014         	call	_in_low_int	;wreg free
  3867  0029FE  0101               	movlb	1	; () banked
  3868  002A00  0101               	movlb	1	; () banked
  3869  002A02  5103               	movf	(?_in_low_int+1)& (0+255),w,b
  3870  002A04  0101               	movlb	1	; () banked
  3871  002A06  1102               	iorwf	?_in_low_int& (0+255),w,b
  3872  002A08  A4D8               	btfss	status,2,c
  3873  002A0A  D011               	goto	l3320
  3874                           
  3875                           ; BSR set to: 1
  3876  002A0C  EC9C  F016         	call	_in_high_int	;wreg free
  3877  002A10  0101               	movlb	1	; () banked
  3878  002A12  0101               	movlb	1	; () banked
  3879  002A14  5101               	movf	(?_in_high_int+1)& (0+255),w,b
  3880  002A16  0101               	movlb	1	; () banked
  3881  002A18  1100               	iorwf	?_in_high_int& (0+255),w,b
  3882  002A1A  A4D8               	btfss	status,2,c
  3883  002A1C  D008               	goto	l3320
  3884                           
  3885                           ; BSR set to: 1
  3886                           ;interrupts.c: 43: return (1);
  3887  002A1E  0E00               	movlw	0
  3888  002A20  0101               	movlb	1	; () banked
  3889  002A22  0101               	movlb	1	; () banked
  3890  002A24  6F05               	movwf	(?_in_main+1)& (0+255),b
  3891  002A26  0E01               	movlw	1
  3892  002A28  0101               	movlb	1	; () banked
  3893  002A2A  6F04               	movwf	?_in_main& (0+255),b
  3894  002A2C  0012               	return	
  3895  002A2E                     l3320:
  3896                           
  3897                           ; BSR set to: 1
  3898                           ;interrupts.c: 45: return (0);
  3899  002A2E  0E00               	movlw	0
  3900  002A30  0101               	movlb	1	; () banked
  3901  002A32  0101               	movlb	1	; () banked
  3902  002A34  6F05               	movwf	(?_in_main+1)& (0+255),b
  3903  002A36  0E00               	movlw	0
  3904  002A38  0101               	movlb	1	; () banked
  3905  002A3A  6F04               	movwf	?_in_main& (0+255),b
  3906  002A3C  0012               	return	
  3907  002A3E                     __end_of_in_main:
  3908                           	opt stack 0
  3909                           tblptru	equ	0xFF8
  3910                           tblptrh	equ	0xFF7
  3911                           tblptrl	equ	0xFF6
  3912                           tablat	equ	0xFF5
  3913                           prodh	equ	0xFF4
  3914                           prodl	equ	0xFF3
  3915                           intcon	equ	0xFF2
  3916                           intcon2	equ	0xFF1
  3917                           postinc0	equ	0xFEE
  3918                           wreg	equ	0xFE8
  3919                           indf1	equ	0xFE7
  3920                           postdec1	equ	0xFE5
  3921                           fsr1h	equ	0xFE2
  3922                           fsr1l	equ	0xFE1
  3923                           indf2	equ	0xFDF
  3924                           postinc2	equ	0xFDE
  3925                           postdec2	equ	0xFDD
  3926                           fsr2h	equ	0xFDA
  3927                           fsr2l	equ	0xFD9
  3928                           status	equ	0xFD8
  3929                           
  3930 ;; *************** function _in_low_int *****************
  3931 ;; Defined at:
  3932 ;;		line 31 in file "../src/interrupts.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  2    2[BANK1 ] int 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2, status,0, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3946 ;;      Params:         0       0       2       0       0
  3947 ;;      Locals:         0       0       0       0       0
  3948 ;;      Temps:          0       0       0       0       0
  3949 ;;      Totals:         0       0       2       0       0
  3950 ;;Total ram usage:        2 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:   12
  3953 ;; This function calls:
  3954 ;;		_in_high_int
  3955 ;; This function is called by:
  3956 ;;		_in_main
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text17
  3961  00296E                     __ptext17:
  3962                           	opt stack 0
  3963  00296E                     _in_low_int:
  3964                           	opt stack 16
  3965                           
  3966                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3967                           
  3968                           ; BSR set to: 1
  3969                           ;incstack = 0
  3970  00296E  ACF2               	btfss	intcon,6,c	;volatile
  3971  002970  D008               	goto	l3298
  3972                           
  3973                           ;interrupts.c: 33: return (0);
  3974  002972  0E00               	movlw	0
  3975  002974  0101               	movlb	1	; () banked
  3976  002976  0101               	movlb	1	; () banked
  3977  002978  6F03               	movwf	(?_in_low_int+1)& (0+255),b
  3978  00297A  0E00               	movlw	0
  3979  00297C  0101               	movlb	1	; () banked
  3980  00297E  6F02               	movwf	?_in_low_int& (0+255),b
  3981  002980  0012               	return	
  3982  002982                     l3298:
  3983  002982  EC9C  F016         	call	_in_high_int	;wreg free
  3984  002986  0101               	movlb	1	; () banked
  3985  002988  0101               	movlb	1	; () banked
  3986  00298A  5101               	movf	(?_in_high_int+1)& (0+255),w,b
  3987  00298C  0101               	movlb	1	; () banked
  3988  00298E  1100               	iorwf	?_in_high_int& (0+255),w,b
  3989  002990  B4D8               	btfsc	status,2,c
  3990  002992  D008               	goto	l3306
  3991                           
  3992                           ; BSR set to: 1
  3993                           ;interrupts.c: 35: return (0);
  3994  002994  0E00               	movlw	0
  3995  002996  0101               	movlb	1	; () banked
  3996  002998  0101               	movlb	1	; () banked
  3997  00299A  6F03               	movwf	(?_in_low_int+1)& (0+255),b
  3998  00299C  0E00               	movlw	0
  3999  00299E  0101               	movlb	1	; () banked
  4000  0029A0  6F02               	movwf	?_in_low_int& (0+255),b
  4001  0029A2  0012               	return	
  4002  0029A4                     l3306:
  4003                           
  4004                           ; BSR set to: 1
  4005                           ;interrupts.c: 37: return (1);
  4006  0029A4  0E00               	movlw	0
  4007  0029A6  0101               	movlb	1	; () banked
  4008  0029A8  0101               	movlb	1	; () banked
  4009  0029AA  6F03               	movwf	(?_in_low_int+1)& (0+255),b
  4010  0029AC  0E01               	movlw	1
  4011  0029AE  0101               	movlb	1	; () banked
  4012  0029B0  6F02               	movwf	?_in_low_int& (0+255),b
  4013  0029B2  0012               	return	
  4014  0029B4                     __end_of_in_low_int:
  4015                           	opt stack 0
  4016                           tblptru	equ	0xFF8
  4017                           tblptrh	equ	0xFF7
  4018                           tblptrl	equ	0xFF6
  4019                           tablat	equ	0xFF5
  4020                           prodh	equ	0xFF4
  4021                           prodl	equ	0xFF3
  4022                           intcon	equ	0xFF2
  4023                           intcon2	equ	0xFF1
  4024                           postinc0	equ	0xFEE
  4025                           wreg	equ	0xFE8
  4026                           indf1	equ	0xFE7
  4027                           postdec1	equ	0xFE5
  4028                           fsr1h	equ	0xFE2
  4029                           fsr1l	equ	0xFE1
  4030                           indf2	equ	0xFDF
  4031                           postinc2	equ	0xFDE
  4032                           postdec2	equ	0xFDD
  4033                           fsr2h	equ	0xFDA
  4034                           fsr2l	equ	0xFD9
  4035                           status	equ	0xFD8
  4036                           
  4037 ;; *************** function _in_high_int *****************
  4038 ;; Defined at:
  4039 ;;		line 23 in file "../src/interrupts.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;		None
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;		None
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  2    0[BANK1 ] int 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4053 ;;      Params:         0       0       2       0       0
  4054 ;;      Locals:         0       0       0       0       0
  4055 ;;      Temps:          0       0       0       0       0
  4056 ;;      Totals:         0       0       2       0       0
  4057 ;;Total ram usage:        2 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:   11
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_in_low_int
  4064 ;;		_in_main
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text18
  4069  002D38                     __ptext18:
  4070                           	opt stack 0
  4071  002D38                     _in_high_int:
  4072                           	opt stack 16
  4073                           
  4074                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  4075                           
  4076                           ; BSR set to: 1
  4077                           ;incstack = 0
  4078  002D38  0E00               	movlw	0
  4079  002D3A  AEF2               	btfss	intcon,7,c	;volatile
  4080  002D3C  0E01               	movlw	1
  4081  002D3E  0101               	movlb	1	; () banked
  4082  002D40  0101               	movlb	1	; () banked
  4083  002D42  6F00               	movwf	?_in_high_int& (0+255),b
  4084  002D44  0101               	movlb	1	; () banked
  4085  002D46  6B01               	clrf	(?_in_high_int+1)& (0+255),b
  4086  002D48  0012               	return	
  4087  002D4A                     __end_of_in_high_int:
  4088                           	opt stack 0
  4089                           tblptru	equ	0xFF8
  4090                           tblptrh	equ	0xFF7
  4091                           tblptrl	equ	0xFF6
  4092                           tablat	equ	0xFF5
  4093                           prodh	equ	0xFF4
  4094                           prodl	equ	0xFF3
  4095                           intcon	equ	0xFF2
  4096                           intcon2	equ	0xFF1
  4097                           postinc0	equ	0xFEE
  4098                           wreg	equ	0xFE8
  4099                           indf1	equ	0xFE7
  4100                           postdec1	equ	0xFE5
  4101                           fsr1h	equ	0xFE2
  4102                           fsr1l	equ	0xFE1
  4103                           indf2	equ	0xFDF
  4104                           postinc2	equ	0xFDE
  4105                           postdec2	equ	0xFDD
  4106                           fsr2h	equ	0xFDA
  4107                           fsr2l	equ	0xFD9
  4108                           status	equ	0xFD8
  4109                           
  4110 ;; *************** function _check_msg *****************
  4111 ;; Defined at:
  4112 ;;		line 222 in file "../src/messages.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4115 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;		None
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      unsigned char 
  4120 ;; Registers used:
  4121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4127 ;;      Params:         0       0       2       0       0
  4128 ;;      Locals:         0       0       0       0       0
  4129 ;;      Temps:          0       0       1       0       0
  4130 ;;      Totals:         0       0       3       0       0
  4131 ;;Total ram usage:        3 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:   11
  4134 ;; This function calls:
  4135 ;;		Nothing
  4136 ;; This function is called by:
  4137 ;;		_block_on_To_msgqueues
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text19
  4142  002B70                     __ptext19:
  4143                           	opt stack 0
  4144  002B70                     _check_msg:
  4145                           	opt stack 18
  4146                           
  4147                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4148                           
  4149                           ; BSR set to: 1
  4150                           ;incstack = 0
  4151  002B70  0101               	movlb	1	; () banked
  4152  002B72  EE20 F042          	lfsr	2,66
  4153  002B76  0101               	movlb	1	; () banked
  4154  002B78  5100               	movf	check_msg@qptr& (0+255),w,b
  4155  002B7A  26D9               	addwf	fsr2l,f,c
  4156  002B7C  0101               	movlb	1	; () banked
  4157  002B7E  5101               	movf	(check_msg@qptr+1)& (0+255),w,b
  4158  002B80  22DA               	addwfc	fsr2h,f,c
  4159  002B82  50DF               	movf	indf2,w,c
  4160  002B84  0101               	movlb	1	; () banked
  4161  002B86  6F02               	movwf	??_check_msg& (0+255),b
  4162  002B88  0101               	movlb	1	; () banked
  4163  002B8A  5102               	movf	??_check_msg& (0+255),w,b
  4164  002B8C  0D0D               	mullw	13
  4165  002B8E  50F3               	movf	prodl,w,c
  4166  002B90  0101               	movlb	1	; () banked
  4167  002B92  0101               	movlb	1	; () banked
  4168  002B94  2500               	addwf	check_msg@qptr& (0+255),w,b
  4169  002B96  6ED9               	movwf	fsr2l,c
  4170  002B98  50F4               	movf	prodh,w,c
  4171  002B9A  0101               	movlb	1	; () banked
  4172  002B9C  0101               	movlb	1	; () banked
  4173  002B9E  2101               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4174  002BA0  6EDA               	movwf	fsr2h,c
  4175  002BA2  50DF               	movf	indf2,w,c
  4176  002BA4  0012               	return	
  4177  002BA6                     __end_of_check_msg:
  4178                           	opt stack 0
  4179                           tblptru	equ	0xFF8
  4180                           tblptrh	equ	0xFF7
  4181                           tblptrl	equ	0xFF6
  4182                           tablat	equ	0xFF5
  4183                           prodh	equ	0xFF4
  4184                           prodl	equ	0xFF3
  4185                           intcon	equ	0xFF2
  4186                           intcon2	equ	0xFF1
  4187                           postinc0	equ	0xFEE
  4188                           wreg	equ	0xFE8
  4189                           indf1	equ	0xFE7
  4190                           postdec1	equ	0xFE5
  4191                           fsr1h	equ	0xFE2
  4192                           fsr1l	equ	0xFE1
  4193                           indf2	equ	0xFDF
  4194                           postinc2	equ	0xFDE
  4195                           postdec2	equ	0xFDD
  4196                           fsr2h	equ	0xFDA
  4197                           fsr2l	equ	0xFD9
  4198                           status	equ	0xFD8
  4199                           
  4200 ;; *************** function _Delay1KTCYx *****************
  4201 ;; Defined at:
  4202 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  unit            1    wreg     unsigned char 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  unit            1    0[BANK1 ] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;		None               void
  4209 ;; Registers used:
  4210 ;;		wreg
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4216 ;;      Params:         0       0       0       0       0
  4217 ;;      Locals:         0       0       1       0       0
  4218 ;;      Temps:          0       0       0       0       0
  4219 ;;      Totals:         0       0       1       0       0
  4220 ;;Total ram usage:        1 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:   11
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_block_on_To_msgqueues
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text20
  4231  002CFE                     __ptext20:
  4232                           	opt stack 0
  4233  002CFE                     _Delay1KTCYx:
  4234                           	opt stack 18
  4235                           
  4236                           ; BSR set to: 1
  4237                           ;incstack = 0
  4238                           ;Delay1KTCYx@unit stored from wreg
  4239  002CFE  CFE8 F100          	movff	wreg,Delay1KTCYx@unit
  4240  002D02                     l906:
  4241  002D02  0EFA               	movlw	250
  4242  002D04                     u4237:
  4243  002D04  F000               	nop	
  4244  002D06  2EE8               	decfsz	wreg,f,c
  4245  002D08  D7FD               	goto	u4237
  4246  002D0A  0101               	movlb	1	; () banked
  4247  002D0C  0101               	movlb	1	; () banked
  4248  002D0E  2F00               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4249  002D10  D7F8               	goto	l906
  4250  002D12  0012               	return	
  4251  002D14                     __end_of_Delay1KTCYx:
  4252                           	opt stack 0
  4253                           tblptru	equ	0xFF8
  4254                           tblptrh	equ	0xFF7
  4255                           tblptrl	equ	0xFF6
  4256                           tablat	equ	0xFF5
  4257                           prodh	equ	0xFF4
  4258                           prodl	equ	0xFF3
  4259                           intcon	equ	0xFF2
  4260                           intcon2	equ	0xFF1
  4261                           postinc0	equ	0xFEE
  4262                           wreg	equ	0xFE8
  4263                           indf1	equ	0xFE7
  4264                           postdec1	equ	0xFE5
  4265                           fsr1h	equ	0xFE2
  4266                           fsr1l	equ	0xFE1
  4267                           indf2	equ	0xFDF
  4268                           postinc2	equ	0xFDE
  4269                           postdec2	equ	0xFDD
  4270                           fsr2h	equ	0xFDA
  4271                           fsr2l	equ	0xFD9
  4272                           status	equ	0xFD8
  4273                           
  4274 ;; *************** function _ToMainLow_recvmsg *****************
  4275 ;; Defined at:
  4276 ;;		line 112 in file "../src/messages.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  maxlength       1    wreg     unsigned char 
  4279 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4280 ;;		 -> main@msgtype(1), 
  4281 ;;  data            2   26[BANK1 ] PTR void 
  4282 ;;		 -> main@msgbuffer(11), 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      char 
  4287 ;; Registers used:
  4288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4294 ;;      Params:         0       0       4       0       0
  4295 ;;      Locals:         0       0       1       0       0
  4296 ;;      Temps:          0       0       0       0       0
  4297 ;;      Totals:         0       0       5       0       0
  4298 ;;Total ram usage:        5 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:   13
  4301 ;; This function calls:
  4302 ;;		_recv_msg
  4303 ;; This function is called by:
  4304 ;;		_main
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text21
  4309  002A3E                     __ptext21:
  4310                           	opt stack 0
  4311  002A3E                     _ToMainLow_recvmsg:
  4312                           	opt stack 17
  4313                           
  4314                           ; BSR set to: 1
  4315                           ;incstack = 0
  4316                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4317  002A3E  CFE8 F11C          	movff	wreg,ToMainLow_recvmsg@maxlength
  4318                           
  4319                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4320  002A42  0101               	movlb	1	; () banked
  4321  002A44  0E01               	movlw	high _ToMainLow_MQ
  4322  002A46  0101               	movlb	1	; () banked
  4323  002A48  0101               	movlb	1	; () banked
  4324  002A4A  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  4325  002A4C  0101               	movlb	1	; () banked
  4326  002A4E  0E82               	movlw	low _ToMainLow_MQ
  4327  002A50  0101               	movlb	1	; () banked
  4328  002A52  0101               	movlb	1	; () banked
  4329  002A54  6F0A               	movwf	recv_msg@qptr& (0+255),b
  4330  002A56  C11C  F10C         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4331  002A5A  0101               	movlb	1	; () banked
  4332  002A5C  0101               	movlb	1	; () banked
  4333  002A5E  C119  F10E         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4334  002A62  0101               	movlb	1	; () banked
  4335  002A64  0101               	movlb	1	; () banked
  4336  002A66  C118  F10D         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4337  002A6A  0101               	movlb	1	; () banked
  4338  002A6C  0101               	movlb	1	; () banked
  4339  002A6E  C11B  F110         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4340  002A72  0101               	movlb	1	; () banked
  4341  002A74  0101               	movlb	1	; () banked
  4342  002A76  C11A  F10F         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4343  002A7A  ECC8  F007         	call	_recv_msg	;wreg free
  4344  002A7E  0012               	return	
  4345  002A80                     __end_of_ToMainLow_recvmsg:
  4346                           	opt stack 0
  4347                           tblptru	equ	0xFF8
  4348                           tblptrh	equ	0xFF7
  4349                           tblptrl	equ	0xFF6
  4350                           tablat	equ	0xFF5
  4351                           prodh	equ	0xFF4
  4352                           prodl	equ	0xFF3
  4353                           intcon	equ	0xFF2
  4354                           intcon2	equ	0xFF1
  4355                           postinc0	equ	0xFEE
  4356                           wreg	equ	0xFE8
  4357                           indf1	equ	0xFE7
  4358                           postdec1	equ	0xFE5
  4359                           fsr1h	equ	0xFE2
  4360                           fsr1l	equ	0xFE1
  4361                           indf2	equ	0xFDF
  4362                           postinc2	equ	0xFDE
  4363                           postdec2	equ	0xFDD
  4364                           fsr2h	equ	0xFDA
  4365                           fsr2l	equ	0xFD9
  4366                           status	equ	0xFD8
  4367                           
  4368 ;; *************** function _ToMainHigh_recvmsg *****************
  4369 ;; Defined at:
  4370 ;;		line 135 in file "../src/messages.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  maxlength       1    wreg     unsigned char 
  4373 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4374 ;;		 -> main@msgtype(1), 
  4375 ;;  data            2   26[BANK1 ] PTR void 
  4376 ;;		 -> main@msgbuffer(11), 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      char 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4388 ;;      Params:         0       0       4       0       0
  4389 ;;      Locals:         0       0       1       0       0
  4390 ;;      Temps:          0       0       0       0       0
  4391 ;;      Totals:         0       0       5       0       0
  4392 ;;Total ram usage:        5 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:   13
  4395 ;; This function calls:
  4396 ;;		_recv_msg
  4397 ;; This function is called by:
  4398 ;;		_main
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text22
  4403  002A80                     __ptext22:
  4404                           	opt stack 0
  4405  002A80                     _ToMainHigh_recvmsg:
  4406                           	opt stack 17
  4407                           
  4408                           ;incstack = 0
  4409                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4410  002A80  CFE8 F11C          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4411                           
  4412                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4413  002A84  0102               	movlb	2	; () banked
  4414  002A86  0E02               	movlw	high _ToMainHigh_MQ
  4415  002A88  0101               	movlb	1	; () banked
  4416  002A8A  0101               	movlb	1	; () banked
  4417  002A8C  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  4418  002A8E  0102               	movlb	2	; () banked
  4419  002A90  0E86               	movlw	low _ToMainHigh_MQ
  4420  002A92  0101               	movlb	1	; () banked
  4421  002A94  0101               	movlb	1	; () banked
  4422  002A96  6F0A               	movwf	recv_msg@qptr& (0+255),b
  4423  002A98  C11C  F10C         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4424  002A9C  0101               	movlb	1	; () banked
  4425  002A9E  0101               	movlb	1	; () banked
  4426  002AA0  C119  F10E         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4427  002AA4  0101               	movlb	1	; () banked
  4428  002AA6  0101               	movlb	1	; () banked
  4429  002AA8  C118  F10D         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4430  002AAC  0101               	movlb	1	; () banked
  4431  002AAE  0101               	movlb	1	; () banked
  4432  002AB0  C11B  F110         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4433  002AB4  0101               	movlb	1	; () banked
  4434  002AB6  0101               	movlb	1	; () banked
  4435  002AB8  C11A  F10F         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4436  002ABC  ECC8  F007         	call	_recv_msg	;wreg free
  4437  002AC0  0012               	return	
  4438  002AC2                     __end_of_ToMainHigh_recvmsg:
  4439                           	opt stack 0
  4440                           tblptru	equ	0xFF8
  4441                           tblptrh	equ	0xFF7
  4442                           tblptrl	equ	0xFF6
  4443                           tablat	equ	0xFF5
  4444                           prodh	equ	0xFF4
  4445                           prodl	equ	0xFF3
  4446                           intcon	equ	0xFF2
  4447                           intcon2	equ	0xFF1
  4448                           postinc0	equ	0xFEE
  4449                           wreg	equ	0xFE8
  4450                           indf1	equ	0xFE7
  4451                           postdec1	equ	0xFE5
  4452                           fsr1h	equ	0xFE2
  4453                           fsr1l	equ	0xFE1
  4454                           indf2	equ	0xFDF
  4455                           postinc2	equ	0xFDE
  4456                           postdec2	equ	0xFDD
  4457                           fsr2h	equ	0xFDA
  4458                           fsr2l	equ	0xFD9
  4459                           status	equ	0xFD8
  4460                           
  4461 ;; *************** function _recv_msg *****************
  4462 ;; Defined at:
  4463 ;;		line 63 in file "../src/messages.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4466 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4467 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4468 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4469 ;;		 -> main@msgtype(1), 
  4470 ;;  data            2   15[BANK1 ] PTR void 
  4471 ;;		 -> main@msgbuffer(11), 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4474 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4475 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4476 ;;  tlength         2   20[BANK1 ] unsigned int 
  4477 ;;  slot            1   19[BANK1 ] unsigned char 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      char 
  4480 ;; Registers used:
  4481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4487 ;;      Params:         0       0       7       0       0
  4488 ;;      Locals:         0       0       5       0       0
  4489 ;;      Temps:          0       0       2       0       0
  4490 ;;      Totals:         0       0      14       0       0
  4491 ;;Total ram usage:       14 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; Hardware stack levels required when called:   12
  4494 ;; This function calls:
  4495 ;;		___awmod
  4496 ;;		_memcpy
  4497 ;; This function is called by:
  4498 ;;		_ToMainLow_recvmsg
  4499 ;;		_ToMainHigh_recvmsg
  4500 ;;		_FromMainLow_recvmsg
  4501 ;;		_FromMainHigh_recvmsg
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text23
  4506  000F90                     __ptext23:
  4507                           	opt stack 0
  4508  000F90                     _recv_msg:
  4509                           	opt stack 17
  4510                           
  4511                           ;messages.c: 64: unsigned char slot;
  4512                           ;messages.c: 68: msg *qmsg;
  4513                           ;messages.c: 69: size_t tlength;
  4514                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4515                           
  4516                           ;incstack = 0
  4517  000F90  0101               	movlb	1	; () banked
  4518  000F92  EE20 F042          	lfsr	2,66
  4519  000F96  0101               	movlb	1	; () banked
  4520  000F98  510A               	movf	recv_msg@qptr& (0+255),w,b
  4521  000F9A  26D9               	addwf	fsr2l,f,c
  4522  000F9C  0101               	movlb	1	; () banked
  4523  000F9E  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4524  000FA0  22DA               	addwfc	fsr2h,f,c
  4525  000FA2  50DF               	movf	indf2,w,c
  4526  000FA4  0101               	movlb	1	; () banked
  4527  000FA6  0101               	movlb	1	; () banked
  4528  000FA8  6F13               	movwf	recv_msg@slot& (0+255),b
  4529                           
  4530                           ; BSR set to: 1
  4531                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4532  000FAA  0101               	movlb	1	; () banked
  4533  000FAC  0101               	movlb	1	; () banked
  4534  000FAE  5113               	movf	recv_msg@slot& (0+255),w,b
  4535  000FB0  0D0D               	mullw	13
  4536  000FB2  50F3               	movf	prodl,w,c
  4537  000FB4  0101               	movlb	1	; () banked
  4538  000FB6  0101               	movlb	1	; () banked
  4539  000FB8  250A               	addwf	recv_msg@qptr& (0+255),w,b
  4540  000FBA  0101               	movlb	1	; () banked
  4541  000FBC  0101               	movlb	1	; () banked
  4542  000FBE  6F16               	movwf	recv_msg@qmsg& (0+255),b
  4543  000FC0  50F4               	movf	prodh,w,c
  4544  000FC2  0101               	movlb	1	; () banked
  4545  000FC4  0101               	movlb	1	; () banked
  4546  000FC6  210B               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4547  000FC8  0101               	movlb	1	; () banked
  4548  000FCA  6F17               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4549                           
  4550                           ; BSR set to: 1
  4551                           ;messages.c: 74: if (qmsg->full == 1) {
  4552  000FCC  0E01               	movlw	1
  4553  000FCE  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  4554  000FD2  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4555  000FD6  62DF               	cpfseq	indf2,c
  4556  000FD8  D088               	goto	l3738
  4557                           
  4558                           ; BSR set to: 1
  4559                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4560  000FDA  0101               	movlb	1	; () banked
  4561  000FDC  EE20 F001          	lfsr	2,1
  4562  000FE0  0101               	movlb	1	; () banked
  4563  000FE2  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4564  000FE4  26D9               	addwf	fsr2l,f,c
  4565  000FE6  0101               	movlb	1	; () banked
  4566  000FE8  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4567  000FEA  22DA               	addwfc	fsr2h,f,c
  4568  000FEC  50DF               	movf	indf2,w,c
  4569  000FEE  0101               	movlb	1	; () banked
  4570  000FF0  0101               	movlb	1	; () banked
  4571  000FF2  5D0C               	subwf	recv_msg@maxlength& (0+255),w,b
  4572  000FF4  B0D8               	btfsc	status,0,c
  4573  000FF6  D002               	goto	l3722
  4574                           
  4575                           ; BSR set to: 1
  4576                           ;messages.c: 77: return (-3);
  4577  000FF8  0EFD               	movlw	253
  4578  000FFA  0012               	return	
  4579  000FFC                     l3722:
  4580                           
  4581                           ; BSR set to: 1
  4582                           ;messages.c: 78: }
  4583                           ;messages.c: 80: tlength = qmsg->length;
  4584  000FFC  0101               	movlb	1	; () banked
  4585  000FFE  EE20 F001          	lfsr	2,1
  4586  001002  0101               	movlb	1	; () banked
  4587  001004  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4588  001006  26D9               	addwf	fsr2l,f,c
  4589  001008  0101               	movlb	1	; () banked
  4590  00100A  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4591  00100C  22DA               	addwfc	fsr2h,f,c
  4592  00100E  50DF               	movf	indf2,w,c
  4593  001010  0101               	movlb	1	; () banked
  4594  001012  6F11               	movwf	??_recv_msg& (0+255),b
  4595  001014  0101               	movlb	1	; () banked
  4596  001016  5111               	movf	??_recv_msg& (0+255),w,b
  4597  001018  0101               	movlb	1	; () banked
  4598  00101A  0101               	movlb	1	; () banked
  4599  00101C  6F14               	movwf	recv_msg@tlength& (0+255),b
  4600  00101E  0101               	movlb	1	; () banked
  4601  001020  6B15               	clrf	(recv_msg@tlength+1)& (0+255),b
  4602                           
  4603                           ; BSR set to: 1
  4604                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4605  001022  0101               	movlb	1	; () banked
  4606  001024  0101               	movlb	1	; () banked
  4607  001026  C110  F101         	movff	recv_msg@data+1,memcpy@d1+1
  4608  00102A  0101               	movlb	1	; () banked
  4609  00102C  0101               	movlb	1	; () banked
  4610  00102E  C10F  F100         	movff	recv_msg@data,memcpy@d1
  4611  001032  0E03               	movlw	3
  4612  001034  0101               	movlb	1	; () banked
  4613  001036  0101               	movlb	1	; () banked
  4614  001038  2516               	addwf	recv_msg@qmsg& (0+255),w,b
  4615  00103A  0101               	movlb	1	; () banked
  4616  00103C  6F11               	movwf	??_recv_msg& (0+255),b
  4617  00103E  0E00               	movlw	0
  4618  001040  0101               	movlb	1	; () banked
  4619  001042  0101               	movlb	1	; () banked
  4620  001044  2117               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4621  001046  0101               	movlb	1	; () banked
  4622  001048  6F12               	movwf	(??_recv_msg+1)& (0+255),b
  4623  00104A  C111  F102         	movff	??_recv_msg,memcpy@s1
  4624  00104E  C112  F103         	movff	??_recv_msg+1,memcpy@s1+1
  4625  001052  C114  F104         	movff	recv_msg@tlength,memcpy@n
  4626  001056  C115  F105         	movff	recv_msg@tlength+1,memcpy@n+1
  4627  00105A  EC2F  F014         	call	_memcpy	;wreg free
  4628                           
  4629                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4630  00105E  0101               	movlb	1	; () banked
  4631  001060  EE20 F042          	lfsr	2,66
  4632  001064  0101               	movlb	1	; () banked
  4633  001066  510A               	movf	recv_msg@qptr& (0+255),w,b
  4634  001068  26D9               	addwf	fsr2l,f,c
  4635  00106A  0101               	movlb	1	; () banked
  4636  00106C  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4637  00106E  22DA               	addwfc	fsr2h,f,c
  4638  001070  0101               	movlb	1	; () banked
  4639  001072  EE10 F042          	lfsr	1,66
  4640  001076  0101               	movlb	1	; () banked
  4641  001078  510A               	movf	recv_msg@qptr& (0+255),w,b
  4642  00107A  26E1               	addwf	fsr1l,f,c
  4643  00107C  0101               	movlb	1	; () banked
  4644  00107E  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4645  001080  22E2               	addwfc	fsr1h,f,c
  4646  001082  50E7               	movf	indf1,w,c
  4647  001084  0101               	movlb	1	; () banked
  4648  001086  6F11               	movwf	??_recv_msg& (0+255),b
  4649  001088  0E01               	movlw	1
  4650  00108A  0101               	movlb	1	; () banked
  4651  00108C  2511               	addwf	??_recv_msg& (0+255),w,b
  4652  00108E  0101               	movlb	1	; () banked
  4653  001090  0101               	movlb	1	; () banked
  4654  001092  6F00               	movwf	___awmod@dividend& (0+255),b
  4655  001094  0101               	movlb	1	; () banked
  4656  001096  0101               	movlb	1	; () banked
  4657  001098  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
  4658  00109A  0E00               	movlw	0
  4659  00109C  2301               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4660  00109E  0E00               	movlw	0
  4661  0010A0  0101               	movlb	1	; () banked
  4662  0010A2  0101               	movlb	1	; () banked
  4663  0010A4  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
  4664  0010A6  0E05               	movlw	5
  4665  0010A8  0101               	movlb	1	; () banked
  4666  0010AA  6F02               	movwf	___awmod@divisor& (0+255),b
  4667  0010AC  EC42  F00A         	call	___awmod	;wreg free
  4668  0010B0  0101               	movlb	1	; () banked
  4669  0010B2  0101               	movlb	1	; () banked
  4670  0010B4  5100               	movf	?___awmod& (0+255),w,b
  4671  0010B6  6EDF               	movwf	indf2,c
  4672                           
  4673                           ; BSR set to: 1
  4674                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4675  0010B8  0101               	movlb	1	; () banked
  4676  0010BA  EE20 F002          	lfsr	2,2
  4677  0010BE  0101               	movlb	1	; () banked
  4678  0010C0  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4679  0010C2  26D9               	addwf	fsr2l,f,c
  4680  0010C4  0101               	movlb	1	; () banked
  4681  0010C6  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4682  0010C8  22DA               	addwfc	fsr2h,f,c
  4683  0010CA  C10D  FFE1         	movff	recv_msg@msgtype,fsr1l
  4684  0010CE  C10E  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4685  0010D2  CFDF FFE7          	movff	indf2,indf1
  4686                           
  4687                           ; BSR set to: 1
  4688                           ;messages.c: 91: qmsg->full = 0;
  4689  0010D6  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  4690  0010DA  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4691  0010DE  0E00               	movlw	0
  4692  0010E0  6EDF               	movwf	indf2,c
  4693                           
  4694                           ; BSR set to: 1
  4695                           ;messages.c: 92: return (tlength);
  4696  0010E2  0101               	movlb	1	; () banked
  4697  0010E4  0101               	movlb	1	; () banked
  4698  0010E6  5114               	movf	recv_msg@tlength& (0+255),w,b
  4699  0010E8  0012               	return	
  4700  0010EA                     l3738:
  4701                           
  4702                           ; BSR set to: 1
  4703                           ;messages.c: 94: return (-4);
  4704  0010EA  0EFC               	movlw	252
  4705  0010EC  0012               	return	
  4706  0010EE                     __end_of_recv_msg:
  4707                           	opt stack 0
  4708                           tblptru	equ	0xFF8
  4709                           tblptrh	equ	0xFF7
  4710                           tblptrl	equ	0xFF6
  4711                           tablat	equ	0xFF5
  4712                           prodh	equ	0xFF4
  4713                           prodl	equ	0xFF3
  4714                           intcon	equ	0xFF2
  4715                           intcon2	equ	0xFF1
  4716                           postinc0	equ	0xFEE
  4717                           wreg	equ	0xFE8
  4718                           indf1	equ	0xFE7
  4719                           postdec1	equ	0xFE5
  4720                           fsr1h	equ	0xFE2
  4721                           fsr1l	equ	0xFE1
  4722                           indf2	equ	0xFDF
  4723                           postinc2	equ	0xFDE
  4724                           postdec2	equ	0xFDD
  4725                           fsr2h	equ	0xFDA
  4726                           fsr2l	equ	0xFD9
  4727                           status	equ	0xFD8
  4728                           
  4729 ;; *************** function _memcpy *****************
  4730 ;; Defined at:
  4731 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  d1              2    0[BANK1 ] PTR void 
  4734 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4735 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4736 ;;		 -> main@msgbuffer(11), 
  4737 ;;  s1              2    2[BANK1 ] PTR const void 
  4738 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4739 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4740 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4741 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4742 ;;		 -> main@uc(15), 
  4743 ;;  n               2    4[BANK1 ] unsigned int 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4746 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4747 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4748 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4749 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4750 ;;		 -> main@uc(15), 
  4751 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4752 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4753 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4754 ;;		 -> main@msgbuffer(11), 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  2    0[BANK1 ] PTR void 
  4757 ;; Registers used:
  4758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4764 ;;      Params:         0       0       6       0       0
  4765 ;;      Locals:         0       0       4       0       0
  4766 ;;      Temps:          0       0       0       0       0
  4767 ;;      Totals:         0       0      10       0       0
  4768 ;;Total ram usage:       10 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:   11
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_send_msg
  4775 ;;		_recv_msg
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text24
  4780  00285E                     __ptext24:
  4781                           	opt stack 0
  4782  00285E                     _memcpy:
  4783                           	opt stack 16
  4784                           
  4785                           ; BSR set to: 1
  4786                           ;incstack = 0
  4787  00285E  0101               	movlb	1	; () banked
  4788  002860  0101               	movlb	1	; () banked
  4789  002862  C103  F109         	movff	memcpy@s1+1,memcpy@s+1
  4790  002866  0101               	movlb	1	; () banked
  4791  002868  0101               	movlb	1	; () banked
  4792  00286A  C102  F108         	movff	memcpy@s1,memcpy@s
  4793  00286E  0101               	movlb	1	; () banked
  4794  002870  0101               	movlb	1	; () banked
  4795  002872  C101  F107         	movff	memcpy@d1+1,memcpy@d+1
  4796  002876  0101               	movlb	1	; () banked
  4797  002878  0101               	movlb	1	; () banked
  4798  00287A  C100  F106         	movff	memcpy@d1,memcpy@d
  4799  00287E  D012               	goto	l3708
  4800  002880                     l3702:
  4801                           
  4802                           ; BSR set to: 1
  4803  002880  C108  FFD9         	movff	memcpy@s,fsr2l
  4804  002884  C109  FFDA         	movff	memcpy@s+1,fsr2h
  4805  002888  C106  FFE1         	movff	memcpy@d,fsr1l
  4806  00288C  C107  FFE2         	movff	memcpy@d+1,fsr1h
  4807  002890  CFDF FFE7          	movff	indf2,indf1
  4808                           
  4809                           ; BSR set to: 1
  4810  002894  0101               	movlb	1	; () banked
  4811  002896  0101               	movlb	1	; () banked
  4812  002898  4B08               	infsnz	memcpy@s& (0+255),f,b
  4813  00289A  2B09               	incf	(memcpy@s+1)& (0+255),f,b
  4814                           
  4815                           ; BSR set to: 1
  4816  00289C  0101               	movlb	1	; () banked
  4817  00289E  0101               	movlb	1	; () banked
  4818  0028A0  4B06               	infsnz	memcpy@d& (0+255),f,b
  4819  0028A2  2B07               	incf	(memcpy@d+1)& (0+255),f,b
  4820  0028A4                     l3708:
  4821                           
  4822                           ; BSR set to: 1
  4823  0028A4  0101               	movlb	1	; () banked
  4824  0028A6  0101               	movlb	1	; () banked
  4825  0028A8  0704               	decf	memcpy@n& (0+255),f,b
  4826  0028AA  A0D8               	btfss	status,0,c
  4827  0028AC  0705               	decf	(memcpy@n+1)& (0+255),f,b
  4828  0028AE  0101               	movlb	1	; () banked
  4829  0028B0  2904               	incf	memcpy@n& (0+255),w,b
  4830  0028B2  B4D8               	btfsc	status,2,c
  4831  0028B4  2905               	incf	(memcpy@n+1)& (0+255),w,b
  4832  0028B6  B4D8               	btfsc	status,2,c
  4833                           
  4834                           ; BSR set to: 1
  4835                           
  4836                           ; BSR set to: 1
  4837                           ;	Return value of _memcpy is never used
  4838  0028B8  0012               	return	
  4839  0028BA  D7E2               	goto	l3702
  4840  0028BC                     __end_of_memcpy:
  4841                           	opt stack 0
  4842                           tblptru	equ	0xFF8
  4843                           tblptrh	equ	0xFF7
  4844                           tblptrl	equ	0xFF6
  4845                           tablat	equ	0xFF5
  4846                           prodh	equ	0xFF4
  4847                           prodl	equ	0xFF3
  4848                           intcon	equ	0xFF2
  4849                           intcon2	equ	0xFF1
  4850                           postinc0	equ	0xFEE
  4851                           wreg	equ	0xFE8
  4852                           indf1	equ	0xFE7
  4853                           postdec1	equ	0xFE5
  4854                           fsr1h	equ	0xFE2
  4855                           fsr1l	equ	0xFE1
  4856                           indf2	equ	0xFDF
  4857                           postinc2	equ	0xFDE
  4858                           postdec2	equ	0xFDD
  4859                           fsr2h	equ	0xFDA
  4860                           fsr2l	equ	0xFD9
  4861                           status	equ	0xFD8
  4862                           
  4863 ;; *************** function ___awmod *****************
  4864 ;; Defined at:
  4865 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  dividend        2    0[BANK1 ] int 
  4868 ;;  divisor         2    2[BANK1 ] int 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  sign            1    6[BANK1 ] unsigned char 
  4871 ;;  counter         1    5[BANK1 ] unsigned char 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  2    0[BANK1 ] int 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0, prodl
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4881 ;;      Params:         0       0       4       0       0
  4882 ;;      Locals:         0       0       2       0       0
  4883 ;;      Temps:          0       0       1       0       0
  4884 ;;      Totals:         0       0       7       0       0
  4885 ;;Total ram usage:        7 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:   11
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_send_msg
  4892 ;;		_recv_msg
  4893 ;;		_adc_int_handler
  4894 ;;		i1_send_msg
  4895 ;;		i2_send_msg
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text25
  4900  001484                     __ptext25:
  4901                           	opt stack 0
  4902  001484                     ___awmod:
  4903                           	opt stack 16
  4904                           
  4905                           ; BSR set to: 1
  4906                           ;incstack = 0
  4907  001484  0101               	movlb	1	; () banked
  4908  001486  6F04               	movwf	??___awmod& (0+255),b
  4909  001488  0E00               	movlw	0
  4910  00148A  0101               	movlb	1	; () banked
  4911  00148C  0101               	movlb	1	; () banked
  4912  00148E  6F06               	movwf	___awmod@sign& (0+255),b
  4913  001490  0101               	movlb	1	; () banked
  4914  001492  5104               	movf	??___awmod& (0+255),w,b
  4915                           
  4916                           ; BSR set to: 1
  4917  001494  0101               	movlb	1	; () banked
  4918  001496  0101               	movlb	1	; () banked
  4919  001498  5101               	movf	(___awmod@dividend+1)& (0+255),w,b
  4920  00149A  0A80               	xorlw	128
  4921  00149C  6EF3               	movwf	prodl,c
  4922  00149E  0E80               	movlw	128
  4923  0014A0  5CF3               	subwf	prodl,w,c
  4924  0014A2  0E00               	movlw	0
  4925  0014A4  B4D8               	btfsc	status,2,c
  4926  0014A6  5D00               	subwf	___awmod@dividend& (0+255),w,b
  4927  0014A8  B0D8               	btfsc	status,0,c
  4928  0014AA  D00F               	goto	l4126
  4929                           
  4930                           ; BSR set to: 1
  4931  0014AC  0101               	movlb	1	; () banked
  4932  0014AE  0101               	movlb	1	; () banked
  4933  0014B0  6D00               	negf	___awmod@dividend& (0+255),b
  4934  0014B2  0101               	movlb	1	; () banked
  4935  0014B4  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  4936  0014B6  B0D8               	btfsc	status,0,c
  4937  0014B8  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  4938                           
  4939                           ; BSR set to: 1
  4940  0014BA  0101               	movlb	1	; () banked
  4941  0014BC  6F04               	movwf	??___awmod& (0+255),b
  4942  0014BE  0E01               	movlw	1
  4943  0014C0  0101               	movlb	1	; () banked
  4944  0014C2  0101               	movlb	1	; () banked
  4945  0014C4  6F06               	movwf	___awmod@sign& (0+255),b
  4946  0014C6  0101               	movlb	1	; () banked
  4947  0014C8  5104               	movf	??___awmod& (0+255),w,b
  4948  0014CA                     l4126:
  4949                           
  4950                           ; BSR set to: 1
  4951  0014CA  0101               	movlb	1	; () banked
  4952  0014CC  0101               	movlb	1	; () banked
  4953  0014CE  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  4954  0014D0  0A80               	xorlw	128
  4955  0014D2  6EF3               	movwf	prodl,c
  4956  0014D4  0E80               	movlw	128
  4957  0014D6  5CF3               	subwf	prodl,w,c
  4958  0014D8  0E00               	movlw	0
  4959  0014DA  B4D8               	btfsc	status,2,c
  4960  0014DC  5D02               	subwf	___awmod@divisor& (0+255),w,b
  4961  0014DE  B0D8               	btfsc	status,0,c
  4962  0014E0  D007               	goto	l4130
  4963                           
  4964                           ; BSR set to: 1
  4965  0014E2  0101               	movlb	1	; () banked
  4966  0014E4  0101               	movlb	1	; () banked
  4967  0014E6  6D02               	negf	___awmod@divisor& (0+255),b
  4968  0014E8  0101               	movlb	1	; () banked
  4969  0014EA  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
  4970  0014EC  B0D8               	btfsc	status,0,c
  4971  0014EE  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
  4972  0014F0                     l4130:
  4973                           
  4974                           ; BSR set to: 1
  4975  0014F0  0101               	movlb	1	; () banked
  4976  0014F2  0101               	movlb	1	; () banked
  4977  0014F4  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  4978  0014F6  1102               	iorwf	___awmod@divisor& (0+255),w,b
  4979  0014F8  B4D8               	btfsc	status,2,c
  4980  0014FA  D03A               	goto	l4146
  4981                           
  4982                           ; BSR set to: 1
  4983  0014FC  0101               	movlb	1	; () banked
  4984  0014FE  6F04               	movwf	??___awmod& (0+255),b
  4985  001500  0E01               	movlw	1
  4986  001502  0101               	movlb	1	; () banked
  4987  001504  0101               	movlb	1	; () banked
  4988  001506  6F05               	movwf	___awmod@counter& (0+255),b
  4989  001508  0101               	movlb	1	; () banked
  4990  00150A  5104               	movf	??___awmod& (0+255),w,b
  4991  00150C  D009               	goto	l4136
  4992  00150E                     l4134:
  4993                           
  4994                           ; BSR set to: 1
  4995  00150E  0101               	movlb	1	; () banked
  4996  001510  0101               	movlb	1	; () banked
  4997  001512  0101               	movlb	1	; () banked
  4998  001514  90D8               	bcf	status,0,c
  4999  001516  3702               	rlcf	___awmod@divisor& (0+255),f,b
  5000  001518  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5001  00151A  0101               	movlb	1	; () banked
  5002  00151C  0101               	movlb	1	; () banked
  5003  00151E  2B05               	incf	___awmod@counter& (0+255),f,b
  5004  001520                     l4136:
  5005                           
  5006                           ; BSR set to: 1
  5007  001520  0101               	movlb	1	; () banked
  5008  001522  0101               	movlb	1	; () banked
  5009  001524  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5010  001526  D7F3               	goto	l4134
  5011  001528                     l4138:
  5012                           
  5013                           ; BSR set to: 1
  5014  001528  0101               	movlb	1	; () banked
  5015  00152A  0101               	movlb	1	; () banked
  5016  00152C  5102               	movf	___awmod@divisor& (0+255),w,b
  5017  00152E  0101               	movlb	1	; () banked
  5018  001530  0101               	movlb	1	; () banked
  5019  001532  5D00               	subwf	___awmod@dividend& (0+255),w,b
  5020  001534  0101               	movlb	1	; () banked
  5021  001536  0101               	movlb	1	; () banked
  5022  001538  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  5023  00153A  0101               	movlb	1	; () banked
  5024  00153C  0101               	movlb	1	; () banked
  5025  00153E  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5026  001540  A0D8               	btfss	status,0,c
  5027  001542  D00C               	goto	l4142
  5028                           
  5029                           ; BSR set to: 1
  5030  001544  0101               	movlb	1	; () banked
  5031  001546  0101               	movlb	1	; () banked
  5032  001548  5102               	movf	___awmod@divisor& (0+255),w,b
  5033  00154A  0101               	movlb	1	; () banked
  5034  00154C  0101               	movlb	1	; () banked
  5035  00154E  5F00               	subwf	___awmod@dividend& (0+255),f,b
  5036  001550  0101               	movlb	1	; () banked
  5037  001552  0101               	movlb	1	; () banked
  5038  001554  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  5039  001556  0101               	movlb	1	; () banked
  5040  001558  0101               	movlb	1	; () banked
  5041  00155A  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5042  00155C                     l4142:
  5043                           
  5044                           ; BSR set to: 1
  5045  00155C  0101               	movlb	1	; () banked
  5046  00155E  0101               	movlb	1	; () banked
  5047  001560  0101               	movlb	1	; () banked
  5048  001562  90D8               	bcf	status,0,c
  5049  001564  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5050  001566  3302               	rrcf	___awmod@divisor& (0+255),f,b
  5051                           
  5052                           ; BSR set to: 1
  5053  001568  0101               	movlb	1	; () banked
  5054  00156A  0101               	movlb	1	; () banked
  5055  00156C  2F05               	decfsz	___awmod@counter& (0+255),f,b
  5056  00156E  D7DC               	goto	l4138
  5057  001570                     l4146:
  5058                           
  5059                           ; BSR set to: 1
  5060  001570  0101               	movlb	1	; () banked
  5061  001572  0101               	movlb	1	; () banked
  5062  001574  5106               	movf	___awmod@sign& (0+255),w,b
  5063  001576  B4D8               	btfsc	status,2,c
  5064  001578  D007               	goto	l4150
  5065                           
  5066                           ; BSR set to: 1
  5067  00157A  0101               	movlb	1	; () banked
  5068  00157C  0101               	movlb	1	; () banked
  5069  00157E  6D00               	negf	___awmod@dividend& (0+255),b
  5070  001580  0101               	movlb	1	; () banked
  5071  001582  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  5072  001584  B0D8               	btfsc	status,0,c
  5073  001586  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  5074  001588                     l4150:
  5075                           
  5076                           ; BSR set to: 1
  5077  001588  C100  F100         	movff	___awmod@dividend,?___awmod
  5078  00158C  C101  F101         	movff	___awmod@dividend+1,?___awmod+1
  5079  001590  0012               	return	
  5080  001592                     __end_of___awmod:
  5081                           	opt stack 0
  5082                           tblptru	equ	0xFF8
  5083                           tblptrh	equ	0xFF7
  5084                           tblptrl	equ	0xFF6
  5085                           tablat	equ	0xFF5
  5086                           prodh	equ	0xFF4
  5087                           prodl	equ	0xFF3
  5088                           intcon	equ	0xFF2
  5089                           intcon2	equ	0xFF1
  5090                           postinc0	equ	0xFEE
  5091                           wreg	equ	0xFE8
  5092                           indf1	equ	0xFE7
  5093                           postdec1	equ	0xFE5
  5094                           fsr1h	equ	0xFE2
  5095                           fsr1l	equ	0xFE1
  5096                           indf2	equ	0xFDF
  5097                           postinc2	equ	0xFDE
  5098                           postdec2	equ	0xFDD
  5099                           fsr2h	equ	0xFDA
  5100                           fsr2l	equ	0xFD9
  5101                           status	equ	0xFD8
  5102                           
  5103 ;; *************** function _SetChanADC *****************
  5104 ;; Defined at:
  5105 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;  channel         1    wreg     unsigned char 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  channel         1    1[BANK1 ] unsigned char 
  5110 ;; Return value:  Size  Location     Type
  5111 ;;		None               void
  5112 ;; Registers used:
  5113 ;;		wreg, status,2, status,0
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5119 ;;      Params:         0       0       0       0       0
  5120 ;;      Locals:         0       0       1       0       0
  5121 ;;      Temps:          0       0       1       0       0
  5122 ;;      Totals:         0       0       2       0       0
  5123 ;;Total ram usage:        2 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:   11
  5126 ;; This function calls:
  5127 ;;		Nothing
  5128 ;; This function is called by:
  5129 ;;		_main
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text26
  5134  002C8A                     __ptext26:
  5135                           	opt stack 0
  5136  002C8A                     _SetChanADC:
  5137                           	opt stack 19
  5138                           
  5139                           ; BSR set to: 1
  5140                           ;incstack = 0
  5141                           ;SetChanADC@channel stored from wreg
  5142  002C8A  CFE8 F101          	movff	wreg,SetChanADC@channel
  5143  002C8E  CFC2 F100          	movff	4034,??_SetChanADC	;volatile
  5144  002C92  0EC3               	movlw	195
  5145  002C94  0101               	movlb	1	; () banked
  5146  002C96  1700               	andwf	??_SetChanADC& (0+255),f,b
  5147  002C98  0101               	movlb	1	; () banked
  5148  002C9A  0101               	movlb	1	; () banked
  5149  002C9C  90D8               	bcf	status,0,c
  5150  002C9E  3101               	rrcf	SetChanADC@channel& (0+255),w,b
  5151  002CA0  0B3C               	andlw	60
  5152  002CA2  0101               	movlb	1	; () banked
  5153  002CA4  1100               	iorwf	??_SetChanADC& (0+255),w,b
  5154  002CA6  6EC2               	movwf	4034,c	;volatile
  5155                           
  5156                           ; BSR set to: 1
  5157  002CA8  0012               	return	
  5158  002CAA                     __end_of_SetChanADC:
  5159                           	opt stack 0
  5160                           tblptru	equ	0xFF8
  5161                           tblptrh	equ	0xFF7
  5162                           tblptrl	equ	0xFF6
  5163                           tablat	equ	0xFF5
  5164                           prodh	equ	0xFF4
  5165                           prodl	equ	0xFF3
  5166                           intcon	equ	0xFF2
  5167                           intcon2	equ	0xFF1
  5168                           postinc0	equ	0xFEE
  5169                           wreg	equ	0xFE8
  5170                           indf1	equ	0xFE7
  5171                           postdec1	equ	0xFE5
  5172                           fsr1h	equ	0xFE2
  5173                           fsr1l	equ	0xFE1
  5174                           indf2	equ	0xFDF
  5175                           postinc2	equ	0xFDE
  5176                           postdec2	equ	0xFDD
  5177                           fsr2h	equ	0xFDA
  5178                           fsr2l	equ	0xFD9
  5179                           status	equ	0xFD8
  5180                           
  5181 ;; *************** function _OpenUSART *****************
  5182 ;; Defined at:
  5183 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  config          1    wreg     unsigned char 
  5186 ;;  spbrg           2    0[BANK1 ] unsigned int 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  config          1    5[BANK1 ] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;		None               void
  5191 ;; Registers used:
  5192 ;;		wreg, status,2
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5198 ;;      Params:         0       0       2       0       0
  5199 ;;      Locals:         0       0       1       0       0
  5200 ;;      Temps:          0       0       3       0       0
  5201 ;;      Totals:         0       0       6       0       0
  5202 ;;Total ram usage:        6 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:   11
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_main
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text27
  5213  00213C                     __ptext27:
  5214                           	opt stack 0
  5215  00213C                     _OpenUSART:
  5216                           	opt stack 19
  5217                           
  5218                           ; BSR set to: 1
  5219                           ;incstack = 0
  5220                           ;OpenUSART@config stored from wreg
  5221  00213C  CFE8 F105          	movff	wreg,OpenUSART@config
  5222  002140  0E00               	movlw	0
  5223  002142  6EAC               	movwf	4012,c	;volatile
  5224  002144  0E00               	movlw	0
  5225  002146  6EAB               	movwf	4011,c	;volatile
  5226  002148  0101               	movlb	1	; () banked
  5227  00214A  0101               	movlb	1	; () banked
  5228  00214C  B105               	btfsc	OpenUSART@config& (0+255),0,b
  5229                           
  5230                           ; BSR set to: 1
  5231  00214E  88AC               	bsf	4012,4,c	;volatile
  5232                           
  5233                           ; BSR set to: 1
  5234                           
  5235                           ; BSR set to: 1
  5236  002150  0101               	movlb	1	; () banked
  5237  002152  0101               	movlb	1	; () banked
  5238  002154  A305               	btfss	OpenUSART@config& (0+255),1,b
  5239  002156  D002               	goto	l3544
  5240                           
  5241                           ; BSR set to: 1
  5242  002158  8CAC               	bsf	4012,6,c	;volatile
  5243  00215A  8CAB               	bsf	4011,6,c	;volatile
  5244  00215C                     l3544:
  5245                           
  5246                           ; BSR set to: 1
  5247  00215C  0101               	movlb	1	; () banked
  5248  00215E  0101               	movlb	1	; () banked
  5249  002160  B505               	btfsc	OpenUSART@config& (0+255),2,b
  5250                           
  5251                           ; BSR set to: 1
  5252  002162  8EAC               	bsf	4012,7,c	;volatile
  5253                           
  5254                           ; BSR set to: 1
  5255                           
  5256                           ; BSR set to: 1
  5257  002164  0101               	movlb	1	; () banked
  5258  002166  0101               	movlb	1	; () banked
  5259  002168  A705               	btfss	OpenUSART@config& (0+255),3,b
  5260  00216A  D002               	goto	l673
  5261                           
  5262                           ; BSR set to: 1
  5263  00216C  88AB               	bsf	4011,4,c	;volatile
  5264  00216E  D001               	goto	l3552
  5265  002170                     l673:
  5266                           
  5267                           ; BSR set to: 1
  5268  002170  8AAB               	bsf	4011,5,c	;volatile
  5269  002172                     l3552:
  5270                           
  5271                           ; BSR set to: 1
  5272  002172  0101               	movlb	1	; () banked
  5273  002174  0101               	movlb	1	; () banked
  5274  002176  B905               	btfsc	OpenUSART@config& (0+255),4,b
  5275                           
  5276                           ; BSR set to: 1
  5277  002178  84AC               	bsf	4012,2,c	;volatile
  5278                           
  5279                           ; BSR set to: 1
  5280  00217A  989E               	bcf	3998,4,c	;volatile
  5281                           
  5282                           ; BSR set to: 1
  5283  00217C  0101               	movlb	1	; () banked
  5284  00217E  0101               	movlb	1	; () banked
  5285  002180  BB05               	btfsc	OpenUSART@config& (0+255),5,b
  5286                           
  5287                           ; BSR set to: 1
  5288  002182  86AB               	bsf	4011,3,c	;volatile
  5289                           
  5290                           ; BSR set to: 1
  5291                           
  5292                           ; BSR set to: 1
  5293  002184  0101               	movlb	1	; () banked
  5294  002186  0101               	movlb	1	; () banked
  5295  002188  AD05               	btfss	OpenUSART@config& (0+255),6,b
  5296  00218A  D002               	goto	l677
  5297                           
  5298                           ; BSR set to: 1
  5299  00218C  8A9D               	bsf	3997,5,c	;volatile
  5300  00218E  D001               	goto	l678
  5301  002190                     l677:
  5302                           
  5303                           ; BSR set to: 1
  5304  002190  9A9D               	bcf	3997,5,c	;volatile
  5305  002192                     l678:
  5306                           
  5307                           ; BSR set to: 1
  5308  002192  9A9E               	bcf	3998,5,c	;volatile
  5309                           
  5310                           ; BSR set to: 1
  5311  002194  0101               	movlb	1	; () banked
  5312  002196  0101               	movlb	1	; () banked
  5313  002198  AF05               	btfss	OpenUSART@config& (0+255),7,b
  5314  00219A  D002               	goto	l679
  5315                           
  5316                           ; BSR set to: 1
  5317  00219C  889D               	bsf	3997,4,c	;volatile
  5318  00219E  D001               	goto	l680
  5319  0021A0                     l679:
  5320                           
  5321                           ; BSR set to: 1
  5322  0021A0  989D               	bcf	3997,4,c	;volatile
  5323  0021A2                     l680:
  5324                           
  5325                           ; BSR set to: 1
  5326  0021A2  C100  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5327                           
  5328                           ; BSR set to: 1
  5329  0021A6  0101               	movlb	1	; () banked
  5330  0021A8  C101  F102         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5331  0021AC  C102  F103         	movff	??_OpenUSART,??_OpenUSART+1
  5332  0021B0  0101               	movlb	1	; () banked
  5333  0021B2  6B04               	clrf	(??_OpenUSART+2)& (0+255),b
  5334  0021B4  0101               	movlb	1	; () banked
  5335  0021B6  5103               	movf	(??_OpenUSART+1)& (0+255),w,b
  5336  0021B8  6EB0               	movwf	4016,c	;volatile
  5337                           
  5338                           ; BSR set to: 1
  5339  0021BA  8AAC               	bsf	4012,5,c	;volatile
  5340                           
  5341                           ; BSR set to: 1
  5342  0021BC  8EAB               	bsf	4011,7,c	;volatile
  5343                           
  5344                           ; BSR set to: 1
  5345  0021BE  9C94               	bcf	3988,6,c	;volatile
  5346                           
  5347                           ; BSR set to: 1
  5348  0021C0  8E94               	bsf	3988,7,c	;volatile
  5349                           
  5350                           ; BSR set to: 1
  5351  0021C2  A8AC               	btfss	4012,4,c	;volatile
  5352  0021C4  0012               	return	
  5353                           
  5354                           ; BSR set to: 1
  5355  0021C6  BEAC               	btfsc	4012,7,c	;volatile
  5356  0021C8  0012               	return	
  5357                           
  5358                           ; BSR set to: 1
  5359  0021CA  8C94               	bsf	3988,6,c	;volatile
  5360  0021CC  0012               	return	
  5361  0021CE                     __end_of_OpenUSART:
  5362                           	opt stack 0
  5363                           tblptru	equ	0xFF8
  5364                           tblptrh	equ	0xFF7
  5365                           tblptrl	equ	0xFF6
  5366                           tablat	equ	0xFF5
  5367                           prodh	equ	0xFF4
  5368                           prodl	equ	0xFF3
  5369                           intcon	equ	0xFF2
  5370                           intcon2	equ	0xFF1
  5371                           postinc0	equ	0xFEE
  5372                           wreg	equ	0xFE8
  5373                           indf1	equ	0xFE7
  5374                           postdec1	equ	0xFE5
  5375                           fsr1h	equ	0xFE2
  5376                           fsr1l	equ	0xFE1
  5377                           indf2	equ	0xFDF
  5378                           postinc2	equ	0xFDE
  5379                           postdec2	equ	0xFDD
  5380                           fsr2h	equ	0xFDA
  5381                           fsr2l	equ	0xFD9
  5382                           status	equ	0xFD8
  5383                           
  5384 ;; *************** function _OpenTimer1 *****************
  5385 ;; Defined at:
  5386 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  config          1    wreg     unsigned char 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  config          1    0[BANK1 ] unsigned char 
  5391 ;; Return value:  Size  Location     Type
  5392 ;;		None               void
  5393 ;; Registers used:
  5394 ;;		wreg, status,2, status,0
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5400 ;;      Params:         0       0       0       0       0
  5401 ;;      Locals:         0       0       1       0       0
  5402 ;;      Temps:          0       0       0       0       0
  5403 ;;      Totals:         0       0       1       0       0
  5404 ;;Total ram usage:        1 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:   11
  5407 ;; This function calls:
  5408 ;;		Nothing
  5409 ;; This function is called by:
  5410 ;;		_main
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text28
  5415  002B02                     __ptext28:
  5416                           	opt stack 0
  5417  002B02                     _OpenTimer1:
  5418                           	opt stack 19
  5419                           
  5420                           ; BSR set to: 1
  5421                           ;incstack = 0
  5422                           ;OpenTimer1@config stored from wreg
  5423  002B02  CFE8 F100          	movff	wreg,OpenTimer1@config
  5424  002B06  0101               	movlb	1	; () banked
  5425  002B08  0101               	movlb	1	; () banked
  5426  002B0A  5100               	movf	OpenTimer1@config& (0+255),w,b
  5427  002B0C  0B7E               	andlw	126
  5428  002B0E  6ECD               	movwf	4045,c	;volatile
  5429                           
  5430                           ; BSR set to: 1
  5431  002B10  0101               	movlb	1	; () banked
  5432  002B12  0101               	movlb	1	; () banked
  5433  002B14  AD00               	btfss	OpenTimer1@config& (0+255),6,b
  5434  002B16  D002               	goto	l636
  5435                           
  5436                           ; BSR set to: 1
  5437  002B18  8ECD               	bsf	4045,7,c	;volatile
  5438  002B1A  D001               	goto	l3504
  5439  002B1C                     l636:
  5440                           
  5441                           ; BSR set to: 1
  5442  002B1C  9ECD               	bcf	4045,7,c	;volatile
  5443  002B1E                     l3504:
  5444                           
  5445                           ; BSR set to: 1
  5446  002B1E  0E00               	movlw	0
  5447  002B20  6ECF               	movwf	4047,c	;volatile
  5448  002B22  0E00               	movlw	0
  5449  002B24  6ECE               	movwf	4046,c	;volatile
  5450                           
  5451                           ; BSR set to: 1
  5452  002B26  909E               	bcf	3998,0,c	;volatile
  5453                           
  5454                           ; BSR set to: 1
  5455  002B28  0101               	movlb	1	; () banked
  5456  002B2A  0101               	movlb	1	; () banked
  5457  002B2C  AF00               	btfss	OpenTimer1@config& (0+255),7,b
  5458  002B2E  D002               	goto	l638
  5459                           
  5460                           ; BSR set to: 1
  5461  002B30  809D               	bsf	3997,0,c	;volatile
  5462  002B32  D001               	goto	l639
  5463  002B34                     l638:
  5464                           
  5465                           ; BSR set to: 1
  5466  002B34  909D               	bcf	3997,0,c	;volatile
  5467  002B36                     l639:
  5468                           
  5469                           ; BSR set to: 1
  5470  002B36  80CD               	bsf	4045,0,c	;volatile
  5471                           
  5472                           ; BSR set to: 1
  5473  002B38  0012               	return	
  5474  002B3A                     __end_of_OpenTimer1:
  5475                           	opt stack 0
  5476                           tblptru	equ	0xFF8
  5477                           tblptrh	equ	0xFF7
  5478                           tblptrl	equ	0xFF6
  5479                           tablat	equ	0xFF5
  5480                           prodh	equ	0xFF4
  5481                           prodl	equ	0xFF3
  5482                           intcon	equ	0xFF2
  5483                           intcon2	equ	0xFF1
  5484                           postinc0	equ	0xFEE
  5485                           wreg	equ	0xFE8
  5486                           indf1	equ	0xFE7
  5487                           postdec1	equ	0xFE5
  5488                           fsr1h	equ	0xFE2
  5489                           fsr1l	equ	0xFE1
  5490                           indf2	equ	0xFDF
  5491                           postinc2	equ	0xFDE
  5492                           postdec2	equ	0xFDD
  5493                           fsr2h	equ	0xFDA
  5494                           fsr2l	equ	0xFD9
  5495                           status	equ	0xFD8
  5496                           
  5497 ;; *************** function _OpenTimer0 *****************
  5498 ;; Defined at:
  5499 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  config          1    wreg     unsigned char 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  config          1    0[BANK1 ] unsigned char 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;		None               void
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5513 ;;      Params:         0       0       0       0       0
  5514 ;;      Locals:         0       0       1       0       0
  5515 ;;      Temps:          0       0       0       0       0
  5516 ;;      Totals:         0       0       1       0       0
  5517 ;;Total ram usage:        1 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:   11
  5520 ;; This function calls:
  5521 ;;		Nothing
  5522 ;; This function is called by:
  5523 ;;		_main
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           	psect	text29
  5528  002C12                     __ptext29:
  5529                           	opt stack 0
  5530  002C12                     _OpenTimer0:
  5531                           	opt stack 19
  5532                           
  5533                           ; BSR set to: 1
  5534                           ;incstack = 0
  5535                           ;OpenTimer0@config stored from wreg
  5536  002C12  CFE8 F100          	movff	wreg,OpenTimer0@config
  5537  002C16  0101               	movlb	1	; () banked
  5538  002C18  0101               	movlb	1	; () banked
  5539  002C1A  5100               	movf	OpenTimer0@config& (0+255),w,b
  5540  002C1C  0B7F               	andlw	127
  5541  002C1E  6ED5               	movwf	4053,c	;volatile
  5542                           
  5543                           ; BSR set to: 1
  5544  002C20  0E00               	movlw	0
  5545  002C22  6ED7               	movwf	4055,c	;volatile
  5546                           
  5547                           ; BSR set to: 1
  5548  002C24  0E00               	movlw	0
  5549  002C26  6ED6               	movwf	4054,c	;volatile
  5550                           
  5551                           ; BSR set to: 1
  5552  002C28  94F2               	bcf	intcon,2,c	;volatile
  5553                           
  5554                           ; BSR set to: 1
  5555  002C2A  0101               	movlb	1	; () banked
  5556  002C2C  0101               	movlb	1	; () banked
  5557  002C2E  AF00               	btfss	OpenTimer0@config& (0+255),7,b
  5558  002C30  D002               	goto	l612
  5559                           
  5560                           ; BSR set to: 1
  5561  002C32  8AF2               	bsf	intcon,5,c	;volatile
  5562  002C34  D001               	goto	l613
  5563  002C36                     l612:
  5564                           
  5565                           ; BSR set to: 1
  5566  002C36  9AF2               	bcf	intcon,5,c	;volatile
  5567  002C38                     l613:
  5568                           
  5569                           ; BSR set to: 1
  5570  002C38  8ED5               	bsf	4053,7,c	;volatile
  5571                           
  5572                           ; BSR set to: 1
  5573  002C3A  0012               	return	
  5574  002C3C                     __end_of_OpenTimer0:
  5575                           	opt stack 0
  5576                           tblptru	equ	0xFF8
  5577                           tblptrh	equ	0xFF7
  5578                           tblptrl	equ	0xFF6
  5579                           tablat	equ	0xFF5
  5580                           prodh	equ	0xFF4
  5581                           prodl	equ	0xFF3
  5582                           intcon	equ	0xFF2
  5583                           intcon2	equ	0xFF1
  5584                           postinc0	equ	0xFEE
  5585                           wreg	equ	0xFE8
  5586                           indf1	equ	0xFE7
  5587                           postdec1	equ	0xFE5
  5588                           fsr1h	equ	0xFE2
  5589                           fsr1l	equ	0xFE1
  5590                           indf2	equ	0xFDF
  5591                           postinc2	equ	0xFDE
  5592                           postdec2	equ	0xFDD
  5593                           fsr2h	equ	0xFDA
  5594                           fsr2l	equ	0xFD9
  5595                           status	equ	0xFD8
  5596                           
  5597 ;; *************** function _OpenADC *****************
  5598 ;; Defined at:
  5599 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  config          1    wreg     unsigned char 
  5602 ;;  config2         1    0[BANK1 ] unsigned char 
  5603 ;;  portconfig      1    1[BANK1 ] unsigned char 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  config          1    4[BANK1 ] unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;		None               void
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5615 ;;      Params:         0       0       2       0       0
  5616 ;;      Locals:         0       0       1       0       0
  5617 ;;      Temps:          0       0       2       0       0
  5618 ;;      Totals:         0       0       5       0       0
  5619 ;;Total ram usage:        5 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:   11
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_main
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text30
  5630  002372                     __ptext30:
  5631                           	opt stack 0
  5632  002372                     _OpenADC:
  5633                           	opt stack 19
  5634                           
  5635                           ; BSR set to: 1
  5636                           ;incstack = 0
  5637                           ;OpenADC@config stored from wreg
  5638  002372  CFE8 F104          	movff	wreg,OpenADC@config
  5639  002376  0E00               	movlw	0
  5640  002378  6EC2               	movwf	4034,c	;volatile
  5641  00237A  0E00               	movlw	0
  5642  00237C  6EC0               	movwf	4032,c	;volatile
  5643  00237E  0101               	movlb	1	; () banked
  5644  002380  0101               	movlb	1	; () banked
  5645  002382  90D8               	bcf	status,0,c
  5646  002384  3100               	rrcf	OpenADC@config2& (0+255),w,b
  5647  002386  0B3C               	andlw	60
  5648  002388  6EC2               	movwf	4034,c	;volatile
  5649                           
  5650                           ; BSR set to: 1
  5651  00238A  C100  F102         	movff	OpenADC@config2,??_OpenADC
  5652  00238E  0101               	movlb	1	; () banked
  5653  002390  3B02               	swapf	??_OpenADC& (0+255),f,b
  5654  002392  0EF0               	movlw	240
  5655  002394  1702               	andwf	??_OpenADC& (0+255),f,b
  5656  002396  0E30               	movlw	48
  5657  002398  0101               	movlb	1	; () banked
  5658  00239A  1702               	andwf	??_OpenADC& (0+255),f,b
  5659  00239C  0101               	movlb	1	; () banked
  5660  00239E  0101               	movlb	1	; () banked
  5661  0023A0  5101               	movf	OpenADC@portconfig& (0+255),w,b
  5662  0023A2  0B0F               	andlw	15
  5663  0023A4  0101               	movlb	1	; () banked
  5664  0023A6  1102               	iorwf	??_OpenADC& (0+255),w,b
  5665  0023A8  6EC1               	movwf	4033,c	;volatile
  5666                           
  5667                           ; BSR set to: 1
  5668  0023AA  C104  F102         	movff	OpenADC@config,??_OpenADC
  5669  0023AE  0101               	movlb	1	; () banked
  5670  0023B0  90D8               	bcf	status,0,c
  5671  0023B2  3702               	rlcf	??_OpenADC& (0+255),f,b
  5672  0023B4  0101               	movlb	1	; () banked
  5673  0023B6  90D8               	bcf	status,0,c
  5674  0023B8  3702               	rlcf	??_OpenADC& (0+255),f,b
  5675  0023BA  0E38               	movlw	56
  5676  0023BC  0101               	movlb	1	; () banked
  5677  0023BE  1702               	andwf	??_OpenADC& (0+255),f,b
  5678  0023C0  C104  F103         	movff	OpenADC@config,??_OpenADC+1
  5679  0023C4  0101               	movlb	1	; () banked
  5680  0023C6  3B03               	swapf	(??_OpenADC+1)& (0+255),f,b
  5681  0023C8  0E0F               	movlw	15
  5682  0023CA  1703               	andwf	(??_OpenADC+1)& (0+255),f,b
  5683  0023CC  0E07               	movlw	7
  5684  0023CE  0101               	movlb	1	; () banked
  5685  0023D0  1703               	andwf	(??_OpenADC+1)& (0+255),f,b
  5686  0023D2  0101               	movlb	1	; () banked
  5687  0023D4  0101               	movlb	1	; () banked
  5688  0023D6  5104               	movf	OpenADC@config& (0+255),w,b
  5689  0023D8  0B80               	andlw	128
  5690  0023DA  0101               	movlb	1	; () banked
  5691  0023DC  1103               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5692  0023DE  0101               	movlb	1	; () banked
  5693  0023E0  1102               	iorwf	??_OpenADC& (0+255),w,b
  5694  0023E2  6EC0               	movwf	4032,c	;volatile
  5695                           
  5696                           ; BSR set to: 1
  5697  0023E4  0101               	movlb	1	; () banked
  5698  0023E6  0101               	movlb	1	; () banked
  5699  0023E8  AF00               	btfss	OpenADC@config2& (0+255),7,b
  5700  0023EA  D003               	goto	l593
  5701                           
  5702                           ; BSR set to: 1
  5703  0023EC  9C9E               	bcf	3998,6,c	;volatile
  5704  0023EE  8C9D               	bsf	3997,6,c	;volatile
  5705  0023F0  8CF2               	bsf	intcon,6,c	;volatile
  5706  0023F2                     l593:
  5707                           
  5708                           ; BSR set to: 1
  5709  0023F2  80C2               	bsf	4034,0,c	;volatile
  5710                           
  5711                           ; BSR set to: 1
  5712  0023F4  0012               	return	
  5713  0023F6                     __end_of_OpenADC:
  5714                           	opt stack 0
  5715                           tblptru	equ	0xFF8
  5716                           tblptrh	equ	0xFF7
  5717                           tblptrl	equ	0xFF6
  5718                           tablat	equ	0xFF5
  5719                           prodh	equ	0xFF4
  5720                           prodl	equ	0xFF3
  5721                           intcon	equ	0xFF2
  5722                           intcon2	equ	0xFF1
  5723                           postinc0	equ	0xFEE
  5724                           wreg	equ	0xFE8
  5725                           indf1	equ	0xFE7
  5726                           postdec1	equ	0xFE5
  5727                           fsr1h	equ	0xFE2
  5728                           fsr1l	equ	0xFE1
  5729                           indf2	equ	0xFDF
  5730                           postinc2	equ	0xFDE
  5731                           postdec2	equ	0xFDD
  5732                           fsr2h	equ	0xFDA
  5733                           fsr2l	equ	0xFD9
  5734                           status	equ	0xFD8
  5735                           
  5736 ;; *************** function _InterruptHandlerLow *****************
  5737 ;; Defined at:
  5738 ;;		line 119 in file "../src/interrupts.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;		None
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;		None
  5743 ;; Return value:  Size  Location     Type
  5744 ;;		None               void
  5745 ;; Registers used:
  5746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5752 ;;      Params:         0       0       0       0       0
  5753 ;;      Locals:         0       0       0       0       0
  5754 ;;      Temps:         17       0       0       0       0
  5755 ;;      Totals:        17       0       0       0       0
  5756 ;;Total ram usage:       17 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:   10
  5759 ;; This function calls:
  5760 ;;		_adc_int_handler
  5761 ;;		_timer0_int_handler
  5762 ;;		_timer1_int_handler
  5763 ;;		_uart_recv_int_handler
  5764 ;;		_uart_trans_int_handler
  5765 ;; This function is called by:
  5766 ;;		Interrupt level 1
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	intcodelo
  5771  000018                     __pintcodelo:
  5772                           	opt stack 0
  5773  000018                     _InterruptHandlerLow:
  5774                           	opt stack 16
  5775                           
  5776                           ; BSR set to: 1
  5777                           ;incstack = 0
  5778  000018  CFD8 F043          	movff	status,??_InterruptHandlerLow
  5779  00001C  CFE8 F044          	movff	wreg,??_InterruptHandlerLow+1
  5780  000020  CFE0 F045          	movff	bsr,??_InterruptHandlerLow+2
  5781  000024  CFFA F046          	movff	pclath,??_InterruptHandlerLow+3
  5782  000028  CFFB F047          	movff	pclatu,??_InterruptHandlerLow+4
  5783  00002C  CFE9 F048          	movff	fsr0l,??_InterruptHandlerLow+5
  5784  000030  CFEA F049          	movff	fsr0h,??_InterruptHandlerLow+6
  5785  000034  CFE1 F04A          	movff	fsr1l,??_InterruptHandlerLow+7
  5786  000038  CFE2 F04B          	movff	fsr1h,??_InterruptHandlerLow+8
  5787  00003C  CFD9 F04C          	movff	fsr2l,??_InterruptHandlerLow+9
  5788  000040  CFDA F04D          	movff	fsr2h,??_InterruptHandlerLow+10
  5789  000044  CFF3 F04E          	movff	prodl,??_InterruptHandlerLow+11
  5790  000048  CFF4 F04F          	movff	prodh,??_InterruptHandlerLow+12
  5791  00004C  CFF6 F050          	movff	tblptrl,??_InterruptHandlerLow+13
  5792  000050  CFF7 F051          	movff	tblptrh,??_InterruptHandlerLow+14
  5793  000054  CFF8 F052          	movff	tblptru,??_InterruptHandlerLow+15
  5794  000058  CFF5 F053          	movff	tablat,??_InterruptHandlerLow+16
  5795                           
  5796                           ;interrupts.c: 121: if(PIR1bits.ADIF){
  5797  00005C  AC9E               	btfss	3998,6,c	;volatile
  5798  00005E  D003               	goto	i1l4760
  5799                           
  5800                           ;interrupts.c: 123: PIR1bits.ADIF = 0;
  5801  000060  9C9E               	bcf	3998,6,c	;volatile
  5802                           
  5803                           ;interrupts.c: 124: adc_int_handler();
  5804  000062  EC09  F007         	call	_adc_int_handler	;wreg free
  5805  000066                     i1l4760:
  5806                           
  5807                           ;interrupts.c: 125: }
  5808                           ;interrupts.c: 128: if (PIR1bits.TMR1IF) {
  5809  000066  A09E               	btfss	3998,0,c	;volatile
  5810  000068  D005               	goto	i1l4768
  5811                           
  5812                           ;interrupts.c: 129: PIR1bits.TMR1IF = 0;
  5813  00006A  909E               	bcf	3998,0,c	;volatile
  5814                           
  5815                           ;interrupts.c: 130: PORTAbits.RA1 = 1;
  5816  00006C  8280               	bsf	3968,1,c	;volatile
  5817                           
  5818                           ;interrupts.c: 131: timer1_int_handler();
  5819  00006E  EC74  F012         	call	_timer1_int_handler	;wreg free
  5820                           
  5821                           ;interrupts.c: 132: PORTAbits.RA1 = 0;
  5822  000072  9280               	bcf	3968,1,c	;volatile
  5823  000074                     i1l4768:
  5824                           
  5825                           ;interrupts.c: 134: }
  5826                           ;interrupts.c: 137: if (INTCONbits.TMR0IF) {
  5827  000074  A4F2               	btfss	intcon,2,c	;volatile
  5828  000076  D005               	goto	i1l4776
  5829                           
  5830                           ;interrupts.c: 138: INTCONbits.TMR0IF = 0;
  5831  000078  94F2               	bcf	intcon,2,c	;volatile
  5832                           
  5833                           ;interrupts.c: 140: PORTAbits.RA0 = 1;
  5834  00007A  8080               	bsf	3968,0,c	;volatile
  5835                           
  5836                           ;interrupts.c: 141: timer0_int_handler();
  5837  00007C  ECAF  F012         	call	_timer0_int_handler	;wreg free
  5838                           
  5839                           ;interrupts.c: 142: PORTAbits.RA0 = 0;
  5840  000080  9080               	bcf	3968,0,c	;volatile
  5841  000082                     i1l4776:
  5842                           
  5843                           ;interrupts.c: 143: }
  5844                           ;interrupts.c: 146: if (PIR1bits.TXIF) {
  5845  000082  B89E               	btfsc	3998,4,c	;volatile
  5846                           
  5847                           ;interrupts.c: 148: uart_trans_int_handler();
  5848  000084  ECC8  F013         	call	_uart_trans_int_handler	;wreg free
  5849                           
  5850                           ;interrupts.c: 149: }
  5851                           ;interrupts.c: 151: if (PIR1bits.RCIF) {
  5852  000088  AA9E               	btfss	3998,5,c	;volatile
  5853  00008A  D003               	goto	i1l71
  5854                           
  5855                           ;interrupts.c: 152: PIR1bits.RCIF = 0;
  5856  00008C  9A9E               	bcf	3998,5,c	;volatile
  5857                           
  5858                           ;interrupts.c: 154: uart_recv_int_handler();
  5859  00008E  ECA7  F00D         	call	_uart_recv_int_handler	;wreg free
  5860  000092                     i1l71:
  5861  000092  C053  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5862  000096  C052  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5863  00009A  C051  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5864  00009E  C050  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5865  0000A2  C04F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5866  0000A6  C04E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5867  0000AA  C04D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5868  0000AE  C04C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5869  0000B2  C04B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5870  0000B6  C04A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5871  0000BA  C049  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5872  0000BE  C048  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5873  0000C2  C047  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5874  0000C6  C046  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5875  0000CA  C045  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5876  0000CE  C044  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5877  0000D2  C043  FFD8         	movff	??_InterruptHandlerLow,status
  5878  0000D6  0010               	retfie	
  5879  0000D8                     __end_of_InterruptHandlerLow:
  5880                           	opt stack 0
  5881                           pclatu	equ	0xFFB
  5882                           pclath	equ	0xFFA
  5883                           tblptru	equ	0xFF8
  5884                           tblptrh	equ	0xFF7
  5885                           tblptrl	equ	0xFF6
  5886                           tablat	equ	0xFF5
  5887                           prodh	equ	0xFF4
  5888                           prodl	equ	0xFF3
  5889                           intcon	equ	0xFF2
  5890                           intcon2	equ	0xFF1
  5891                           postinc0	equ	0xFEE
  5892                           fsr0h	equ	0xFEA
  5893                           fsr0l	equ	0xFE9
  5894                           wreg	equ	0xFE8
  5895                           indf1	equ	0xFE7
  5896                           postdec1	equ	0xFE5
  5897                           fsr1h	equ	0xFE2
  5898                           fsr1l	equ	0xFE1
  5899                           bsr	equ	0xFE0
  5900                           indf2	equ	0xFDF
  5901                           postinc2	equ	0xFDE
  5902                           postdec2	equ	0xFDD
  5903                           fsr2h	equ	0xFDA
  5904                           fsr2l	equ	0xFD9
  5905                           status	equ	0xFD8
  5906                           
  5907 ;; *************** function _uart_trans_int_handler *****************
  5908 ;; Defined at:
  5909 ;;		line 73 in file "../src/my_uart.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;		None
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;		None               void
  5916 ;; Registers used:
  5917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5923 ;;      Params:         0       0       0       0       0
  5924 ;;      Locals:         0       0       0       0       0
  5925 ;;      Temps:          1       0       0       0       0
  5926 ;;      Totals:         1       0       0       0       0
  5927 ;;Total ram usage:        1 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    6
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_InterruptHandlerLow
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text32
  5938  002790                     __ptext32:
  5939                           	opt stack 0
  5940  002790                     _uart_trans_int_handler:
  5941                           	opt stack 19
  5942                           
  5943                           ;my_uart.c: 75: if(TXSTAbits.TRMT){
  5944                           
  5945                           ;incstack = 0
  5946  002790  A2AC               	btfss	4012,1,c	;volatile
  5947  002792  0012               	return	
  5948                           
  5949                           ;my_uart.c: 76: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5950  002794  EE20 F00E          	lfsr	2,14
  5951  002798  506A               	movf	_uc_ptr,w,c
  5952  00279A  26D9               	addwf	fsr2l,f,c
  5953  00279C  506B               	movf	_uc_ptr+1,w,c
  5954  00279E  22DA               	addwfc	fsr2h,f,c
  5955  0027A0  50DF               	movf	indf2,w,c
  5956  0027A2  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5957  0027A4  EE20 F00D          	lfsr	2,13
  5958  0027A8  506A               	movf	_uc_ptr,w,c
  5959  0027AA  26D9               	addwf	fsr2l,f,c
  5960  0027AC  506B               	movf	_uc_ptr+1,w,c
  5961  0027AE  22DA               	addwfc	fsr2h,f,c
  5962  0027B0  50DF               	movf	indf2,w,c
  5963  0027B2  5C01               	subwf	??_uart_trans_int_handler,w,c
  5964  0027B4  B0D8               	btfsc	status,0,c
  5965  0027B6  D01E               	goto	i1l472
  5966                           
  5967                           ;my_uart.c: 77: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5968  0027B8  EE20 F00E          	lfsr	2,14
  5969  0027BC  506A               	movf	_uc_ptr,w,c
  5970  0027BE  26D9               	addwf	fsr2l,f,c
  5971  0027C0  506B               	movf	_uc_ptr+1,w,c
  5972  0027C2  22DA               	addwfc	fsr2h,f,c
  5973  0027C4  50DF               	movf	indf2,w,c
  5974  0027C6  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5975  0027C8  5001               	movf	??_uart_trans_int_handler,w,c
  5976  0027CA  0D01               	mullw	1
  5977  0027CC  0E07               	movlw	7
  5978  0027CE  26F3               	addwf	prodl,f,c
  5979  0027D0  0E00               	movlw	0
  5980  0027D2  22F4               	addwfc	prodh,f,c
  5981  0027D4  50F3               	movf	prodl,w,c
  5982  0027D6  246A               	addwf	_uc_ptr,w,c
  5983  0027D8  6ED9               	movwf	fsr2l,c
  5984  0027DA  50F4               	movf	prodh,w,c
  5985  0027DC  206B               	addwfc	_uc_ptr+1,w,c
  5986  0027DE  6EDA               	movwf	fsr2h,c
  5987  0027E0  50DF               	movf	indf2,w,c
  5988  0027E2  6EAD               	movwf	4013,c	;volatile
  5989                           
  5990                           ;my_uart.c: 79: uc_ptr->txBufind++;
  5991  0027E4  EE20 F00E          	lfsr	2,14
  5992  0027E8  506A               	movf	_uc_ptr,w,c
  5993  0027EA  26D9               	addwf	fsr2l,f,c
  5994  0027EC  506B               	movf	_uc_ptr+1,w,c
  5995  0027EE  22DA               	addwfc	fsr2h,f,c
  5996  0027F0  2ADF               	incf	indf2,f,c
  5997                           
  5998                           ;my_uart.c: 80: } else
  5999  0027F2  0012               	return	
  6000  0027F4                     i1l472:
  6001                           
  6002                           ;my_uart.c: 81: PIE1bits.TX1IE = 0;
  6003  0027F4  989D               	bcf	3997,4,c	;volatile
  6004  0027F6  0012               	return	
  6005  0027F8                     __end_of_uart_trans_int_handler:
  6006                           	opt stack 0
  6007                           pclatu	equ	0xFFB
  6008                           pclath	equ	0xFFA
  6009                           tblptru	equ	0xFF8
  6010                           tblptrh	equ	0xFF7
  6011                           tblptrl	equ	0xFF6
  6012                           tablat	equ	0xFF5
  6013                           prodh	equ	0xFF4
  6014                           prodl	equ	0xFF3
  6015                           intcon	equ	0xFF2
  6016                           intcon2	equ	0xFF1
  6017                           postinc0	equ	0xFEE
  6018                           fsr0h	equ	0xFEA
  6019                           fsr0l	equ	0xFE9
  6020                           wreg	equ	0xFE8
  6021                           indf1	equ	0xFE7
  6022                           postdec1	equ	0xFE5
  6023                           fsr1h	equ	0xFE2
  6024                           fsr1l	equ	0xFE1
  6025                           bsr	equ	0xFE0
  6026                           indf2	equ	0xFDF
  6027                           postinc2	equ	0xFDE
  6028                           postdec2	equ	0xFDD
  6029                           fsr2h	equ	0xFDA
  6030                           fsr2l	equ	0xFD9
  6031                           status	equ	0xFD8
  6032                           
  6033 ;; *************** function _uart_recv_int_handler *****************
  6034 ;; Defined at:
  6035 ;;		line 11 in file "../src/my_uart.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;		None
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;		None
  6040 ;; Return value:  Size  Location     Type
  6041 ;;		None               void
  6042 ;; Registers used:
  6043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6049 ;;      Params:         0       0       0       0       0
  6050 ;;      Locals:         0       0       0       0       0
  6051 ;;      Temps:          1       0       0       0       0
  6052 ;;      Totals:         1       0       0       0       0
  6053 ;;Total ram usage:        1 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; Hardware stack levels required when called:    9
  6056 ;; This function calls:
  6057 ;;		_ReadUSART
  6058 ;;		_ToMainLow_sendmsg
  6059 ;; This function is called by:
  6060 ;;		_InterruptHandlerLow
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text33
  6065  001B4E                     __ptext33:
  6066                           	opt stack 0
  6067  001B4E                     _uart_recv_int_handler:
  6068                           	opt stack 16
  6069                           
  6070                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  6071                           
  6072                           ;incstack = 0
  6073  001B4E  AA9E               	btfss	3998,5,c	;volatile
  6074  001B50  D04E               	goto	i1l4748
  6075                           
  6076                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  6077  001B52  EE20 F006          	lfsr	2,6
  6078  001B56  506A               	movf	_uc_ptr,w,c
  6079  001B58  26D9               	addwf	fsr2l,f,c
  6080  001B5A  506B               	movf	_uc_ptr+1,w,c
  6081  001B5C  22DA               	addwfc	fsr2h,f,c
  6082  001B5E  50DF               	movf	indf2,w,c
  6083  001B60  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6084  001B62  501B               	movf	??_uart_recv_int_handler,w,c
  6085  001B64  0D01               	mullw	1
  6086  001B66  50F3               	movf	prodl,w,c
  6087  001B68  246A               	addwf	_uc_ptr,w,c
  6088  001B6A  6ED9               	movwf	fsr2l,c
  6089  001B6C  50F4               	movf	prodh,w,c
  6090  001B6E  206B               	addwfc	_uc_ptr+1,w,c
  6091  001B70  6EDA               	movwf	fsr2h,c
  6092  001B72  EC64  F016         	call	_ReadUSART	;wreg free
  6093  001B76  6EDF               	movwf	indf2,c
  6094                           
  6095                           ;my_uart.c: 25: uc_ptr->buflen++;
  6096  001B78  EE20 F006          	lfsr	2,6
  6097  001B7C  506A               	movf	_uc_ptr,w,c
  6098  001B7E  26D9               	addwf	fsr2l,f,c
  6099  001B80  506B               	movf	_uc_ptr+1,w,c
  6100  001B82  22DA               	addwfc	fsr2h,f,c
  6101  001B84  2ADF               	incf	indf2,f,c
  6102                           
  6103                           ;my_uart.c: 26: if(UART_timeout > 200){
  6104  001B86  0EC9               	movlw	201
  6105  001B88  5C64               	subwf	_UART_timeout,w,c
  6106  001B8A  0E00               	movlw	0
  6107  001B8C  5865               	subwfb	_UART_timeout+1,w,c
  6108  001B8E  A0D8               	btfss	status,0,c
  6109  001B90  D00C               	goto	i1l4742
  6110                           
  6111                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  6112  001B92  EE20 F006          	lfsr	2,6
  6113  001B96  506A               	movf	_uc_ptr,w,c
  6114  001B98  26D9               	addwf	fsr2l,f,c
  6115  001B9A  506B               	movf	_uc_ptr+1,w,c
  6116  001B9C  22DA               	addwfc	fsr2h,f,c
  6117  001B9E  0E01               	movlw	1
  6118  001BA0  6EDF               	movwf	indf2,c
  6119                           
  6120                           ;my_uart.c: 28: UART_timeout = 0;
  6121  001BA2  0E00               	movlw	0
  6122  001BA4  6E65               	movwf	_UART_timeout+1,c
  6123  001BA6  0E00               	movlw	0
  6124  001BA8  6E64               	movwf	_UART_timeout,c
  6125  001BAA                     i1l4742:
  6126                           
  6127                           ;my_uart.c: 29: }
  6128                           ;my_uart.c: 32: if (uc_ptr->buflen == 6) {
  6129  001BAA  EE20 F006          	lfsr	2,6
  6130  001BAE  506A               	movf	_uc_ptr,w,c
  6131  001BB0  26D9               	addwf	fsr2l,f,c
  6132  001BB2  506B               	movf	_uc_ptr+1,w,c
  6133  001BB4  22DA               	addwfc	fsr2h,f,c
  6134  001BB6  0E06               	movlw	6
  6135  001BB8  62DF               	cpfseq	indf2,c
  6136  001BBA  D019               	goto	i1l4748
  6137                           
  6138                           ;my_uart.c: 33: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  6139  001BBC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6140  001BBE  0E1F               	movlw	31
  6141  001BC0  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6142  001BC2  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6143  001BC4  C06B  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  6144  001BC8  C06A  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  6145  001BCC  EE20 F006          	lfsr	2,6
  6146  001BD0  506A               	movf	_uc_ptr,w,c
  6147  001BD2  26D9               	addwf	fsr2l,f,c
  6148  001BD4  506B               	movf	_uc_ptr+1,w,c
  6149  001BD6  22DA               	addwfc	fsr2h,f,c
  6150  001BD8  50DF               	movf	indf2,w,c
  6151  001BDA  EC32  F016         	call	_ToMainLow_sendmsg
  6152                           
  6153                           ;my_uart.c: 34: uc_ptr->buflen = 0;
  6154  001BDE  EE20 F006          	lfsr	2,6
  6155  001BE2  506A               	movf	_uc_ptr,w,c
  6156  001BE4  26D9               	addwf	fsr2l,f,c
  6157  001BE6  506B               	movf	_uc_ptr+1,w,c
  6158  001BE8  22DA               	addwfc	fsr2h,f,c
  6159  001BEA  0E00               	movlw	0
  6160  001BEC  6EDF               	movwf	indf2,c
  6161  001BEE                     i1l4748:
  6162                           
  6163                           ;my_uart.c: 35: }
  6164                           ;my_uart.c: 36: }
  6165                           ;my_uart.c: 43: if (USART_Status.OVERRUN_ERROR == 1) {
  6166  001BEE  A666               	btfss	_USART_Status,3,c
  6167  001BF0  0012               	return	
  6168                           
  6169                           ;my_uart.c: 48: RCSTAbits.CREN = 0;
  6170  001BF2  98AB               	bcf	4011,4,c	;volatile
  6171                           
  6172                           ;my_uart.c: 49: RCSTAbits.CREN = 1;
  6173  001BF4  88AB               	bsf	4011,4,c	;volatile
  6174                           
  6175                           ;my_uart.c: 50: ToMainLow_sendmsg(0, 30, (void *) 0);
  6176  001BF6  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6177  001BF8  0E1E               	movlw	30
  6178  001BFA  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6179  001BFC  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6180  001BFE  0E00               	movlw	0
  6181  001C00  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6182  001C02  0E00               	movlw	0
  6183  001C04  6E18               	movwf	ToMainLow_sendmsg@data,c
  6184  001C06  0E00               	movlw	0
  6185  001C08  EC32  F016         	call	_ToMainLow_sendmsg
  6186  001C0C  0012               	return	
  6187  001C0E                     __end_of_uart_recv_int_handler:
  6188                           	opt stack 0
  6189                           pclatu	equ	0xFFB
  6190                           pclath	equ	0xFFA
  6191                           tblptru	equ	0xFF8
  6192                           tblptrh	equ	0xFF7
  6193                           tblptrl	equ	0xFF6
  6194                           tablat	equ	0xFF5
  6195                           prodh	equ	0xFF4
  6196                           prodl	equ	0xFF3
  6197                           intcon	equ	0xFF2
  6198                           intcon2	equ	0xFF1
  6199                           postinc0	equ	0xFEE
  6200                           fsr0h	equ	0xFEA
  6201                           fsr0l	equ	0xFE9
  6202                           wreg	equ	0xFE8
  6203                           indf1	equ	0xFE7
  6204                           postdec1	equ	0xFE5
  6205                           fsr1h	equ	0xFE2
  6206                           fsr1l	equ	0xFE1
  6207                           bsr	equ	0xFE0
  6208                           indf2	equ	0xFDF
  6209                           postinc2	equ	0xFDE
  6210                           postdec2	equ	0xFDD
  6211                           fsr2h	equ	0xFDA
  6212                           fsr2l	equ	0xFD9
  6213                           status	equ	0xFD8
  6214                           
  6215 ;; *************** function _ToMainLow_sendmsg *****************
  6216 ;; Defined at:
  6217 ;;		line 103 in file "../src/messages.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;  length          1    wreg     unsigned char 
  6220 ;;  msgtype         1   22[COMRAM] unsigned char 
  6221 ;;  data            2   23[COMRAM] PTR void 
  6222 ;;		 -> NULL(0), main@uc(15), 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  length          1   25[COMRAM] unsigned char 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      char 
  6227 ;; Registers used:
  6228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6234 ;;      Params:         3       0       0       0       0
  6235 ;;      Locals:         1       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0
  6237 ;;      Totals:         4       0       0       0       0
  6238 ;;Total ram usage:        4 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    8
  6241 ;; This function calls:
  6242 ;;		i1_send_msg
  6243 ;; This function is called by:
  6244 ;;		_uart_recv_int_handler
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text34
  6249  002C64                     __ptext34:
  6250                           	opt stack 0
  6251  002C64                     _ToMainLow_sendmsg:
  6252                           	opt stack 16
  6253                           
  6254                           ;incstack = 0
  6255                           ;ToMainLow_sendmsg@length stored from wreg
  6256  002C64  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  6257                           
  6258                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6259                           ;	Return value of _ToMainLow_sendmsg is never used
  6260  002C68  0101               	movlb	1	; () banked
  6261  002C6A  0E01               	movlw	high _ToMainLow_MQ
  6262  002C6C  6E0C               	movwf	i1send_msg@qptr+1,c
  6263  002C6E  0101               	movlb	1	; () banked
  6264  002C70  0E82               	movlw	low _ToMainLow_MQ
  6265  002C72  6E0B               	movwf	i1send_msg@qptr,c
  6266  002C74  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6267  002C78  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6268  002C7C  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6269  002C80  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6270  002C84  EC07  F00E         	call	i1_send_msg	;wreg free
  6271  002C88  0012               	return	
  6272  002C8A                     __end_of_ToMainLow_sendmsg:
  6273                           	opt stack 0
  6274                           pclatu	equ	0xFFB
  6275                           pclath	equ	0xFFA
  6276                           tblptru	equ	0xFF8
  6277                           tblptrh	equ	0xFF7
  6278                           tblptrl	equ	0xFF6
  6279                           tablat	equ	0xFF5
  6280                           prodh	equ	0xFF4
  6281                           prodl	equ	0xFF3
  6282                           intcon	equ	0xFF2
  6283                           intcon2	equ	0xFF1
  6284                           postinc0	equ	0xFEE
  6285                           fsr0h	equ	0xFEA
  6286                           fsr0l	equ	0xFE9
  6287                           wreg	equ	0xFE8
  6288                           indf1	equ	0xFE7
  6289                           postdec1	equ	0xFE5
  6290                           fsr1h	equ	0xFE2
  6291                           fsr1l	equ	0xFE1
  6292                           bsr	equ	0xFE0
  6293                           indf2	equ	0xFDF
  6294                           postinc2	equ	0xFDE
  6295                           postdec2	equ	0xFDD
  6296                           fsr2h	equ	0xFDA
  6297                           fsr2l	equ	0xFD9
  6298                           status	equ	0xFD8
  6299                           
  6300 ;; *************** function i1_send_msg *****************
  6301 ;; Defined at:
  6302 ;;		line 24 in file "../src/messages.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6305 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6306 ;;  length          1   12[COMRAM] unsigned char 
  6307 ;;  msgtype         1   13[COMRAM] unsigned char 
  6308 ;;  data            2   14[COMRAM] PTR void 
  6309 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  6310 ;;		 -> main@uc(15), 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6313 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6314 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6315 ;;  send_msg        2   17[COMRAM] unsigned int 
  6316 ;;  send_msg        1   19[COMRAM] unsigned char 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      char 
  6319 ;; Registers used:
  6320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6326 ;;      Params:         6       0       0       0       0
  6327 ;;      Locals:         5       0       0       0       0
  6328 ;;      Temps:          1       0       0       0       0
  6329 ;;      Totals:        12       0       0       0       0
  6330 ;;Total ram usage:       12 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; Hardware stack levels required when called:    7
  6333 ;; This function calls:
  6334 ;;		i1___awmod
  6335 ;;		i1_memcpy
  6336 ;; This function is called by:
  6337 ;;		_ToMainLow_sendmsg
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           	psect	text35
  6342  001C0E                     __ptext35:
  6343                           	opt stack 0
  6344  001C0E                     i1_send_msg:
  6345                           	opt stack 16
  6346                           
  6347                           ;messages.c: 25: unsigned char slot;
  6348                           ;messages.c: 27: msg *qmsg;
  6349                           ;messages.c: 28: size_t tlength = length;
  6350                           
  6351                           ;incstack = 0
  6352  001C0E  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6353  001C12  6A13               	clrf	i1send_msg@tlength+1,c
  6354                           
  6355                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6356  001C14  EE20 F041          	lfsr	2,65
  6357  001C18  500B               	movf	i1send_msg@qptr,w,c
  6358  001C1A  26D9               	addwf	fsr2l,f,c
  6359  001C1C  500C               	movf	i1send_msg@qptr+1,w,c
  6360  001C1E  22DA               	addwfc	fsr2h,f,c
  6361  001C20  50DF               	movf	indf2,w,c
  6362  001C22  6E14               	movwf	i1send_msg@slot,c
  6363                           
  6364                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6365  001C24  5014               	movf	i1send_msg@slot,w,c
  6366  001C26  0D0D               	mullw	13
  6367  001C28  50F3               	movf	prodl,w,c
  6368  001C2A  240B               	addwf	i1send_msg@qptr,w,c
  6369  001C2C  6E15               	movwf	i1send_msg@qmsg,c
  6370  001C2E  50F4               	movf	prodh,w,c
  6371  001C30  200C               	addwfc	i1send_msg@qptr+1,w,c
  6372  001C32  6E16               	movwf	i1send_msg@qmsg+1,c
  6373                           
  6374                           ;messages.c: 41: if (qmsg->full != 0) {
  6375  001C34  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6376  001C38  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6377  001C3C  50DF               	movf	indf2,w,c
  6378  001C3E  B4D8               	btfsc	status,2,c
  6379  001C40  D002               	goto	i1l4550
  6380                           
  6381                           ;messages.c: 42: return (-1);
  6382  001C42  0EFF               	movlw	255
  6383  001C44  0012               	return	
  6384  001C46                     i1l4550:
  6385                           
  6386                           ;messages.c: 43: }
  6387                           ;messages.c: 46: qmsg->length = length;
  6388  001C46  EE20 F001          	lfsr	2,1
  6389  001C4A  5015               	movf	i1send_msg@qmsg,w,c
  6390  001C4C  26D9               	addwf	fsr2l,f,c
  6391  001C4E  5016               	movf	i1send_msg@qmsg+1,w,c
  6392  001C50  22DA               	addwfc	fsr2h,f,c
  6393  001C52  C00D  FFDF         	movff	i1send_msg@length,indf2
  6394                           
  6395                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6396  001C56  EE20 F002          	lfsr	2,2
  6397  001C5A  5015               	movf	i1send_msg@qmsg,w,c
  6398  001C5C  26D9               	addwf	fsr2l,f,c
  6399  001C5E  5016               	movf	i1send_msg@qmsg+1,w,c
  6400  001C60  22DA               	addwfc	fsr2h,f,c
  6401  001C62  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6402                           
  6403                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6404  001C66  0E03               	movlw	3
  6405  001C68  2415               	addwf	i1send_msg@qmsg,w,c
  6406  001C6A  6E01               	movwf	i1memcpy@d1,c
  6407  001C6C  0E00               	movlw	0
  6408  001C6E  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6409  001C70  6E02               	movwf	i1memcpy@d1+1,c
  6410  001C72  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6411  001C76  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6412  001C7A  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6413  001C7E  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6414  001C82  EC61  F015         	call	i1_memcpy	;wreg free
  6415                           
  6416                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6417  001C86  EE20 F041          	lfsr	2,65
  6418  001C8A  500B               	movf	i1send_msg@qptr,w,c
  6419  001C8C  26D9               	addwf	fsr2l,f,c
  6420  001C8E  500C               	movf	i1send_msg@qptr+1,w,c
  6421  001C90  22DA               	addwfc	fsr2h,f,c
  6422  001C92  EE10 F041          	lfsr	1,65
  6423  001C96  500B               	movf	i1send_msg@qptr,w,c
  6424  001C98  26E1               	addwf	fsr1l,f,c
  6425  001C9A  500C               	movf	i1send_msg@qptr+1,w,c
  6426  001C9C  22E2               	addwfc	fsr1h,f,c
  6427  001C9E  50E7               	movf	indf1,w,c
  6428  001CA0  6E11               	movwf	??i1_send_msg& (0+255),c
  6429  001CA2  0E01               	movlw	1
  6430  001CA4  2411               	addwf	??i1_send_msg,w,c
  6431  001CA6  6E01               	movwf	i1___awmod@dividend,c
  6432  001CA8  6A02               	clrf	i1___awmod@dividend+1,c
  6433  001CAA  0E00               	movlw	0
  6434  001CAC  2202               	addwfc	i1___awmod@dividend+1,f,c
  6435  001CAE  0E00               	movlw	0
  6436  001CB0  6E04               	movwf	i1___awmod@divisor+1,c
  6437  001CB2  0E05               	movlw	5
  6438  001CB4  6E03               	movwf	i1___awmod@divisor,c
  6439  001CB6  ECBD  F00F         	call	i1___awmod	;wreg free
  6440  001CBA  5001               	movf	?i1___awmod,w,c
  6441  001CBC  6EDF               	movwf	indf2,c
  6442                           
  6443                           ;messages.c: 59: qmsg->full = 1;
  6444  001CBE  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6445  001CC2  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6446  001CC6  0E01               	movlw	1
  6447  001CC8  6EDF               	movwf	indf2,c
  6448                           
  6449                           ;messages.c: 60: return (1);
  6450  001CCA  0E01               	movlw	1
  6451  001CCC  0012               	return	
  6452  001CCE                     __end_ofi1_send_msg:
  6453                           	opt stack 0
  6454                           pclatu	equ	0xFFB
  6455                           pclath	equ	0xFFA
  6456                           tblptru	equ	0xFF8
  6457                           tblptrh	equ	0xFF7
  6458                           tblptrl	equ	0xFF6
  6459                           tablat	equ	0xFF5
  6460                           prodh	equ	0xFF4
  6461                           prodl	equ	0xFF3
  6462                           intcon	equ	0xFF2
  6463                           intcon2	equ	0xFF1
  6464                           postinc0	equ	0xFEE
  6465                           fsr0h	equ	0xFEA
  6466                           fsr0l	equ	0xFE9
  6467                           wreg	equ	0xFE8
  6468                           indf1	equ	0xFE7
  6469                           postdec1	equ	0xFE5
  6470                           fsr1h	equ	0xFE2
  6471                           fsr1l	equ	0xFE1
  6472                           bsr	equ	0xFE0
  6473                           indf2	equ	0xFDF
  6474                           postinc2	equ	0xFDE
  6475                           postdec2	equ	0xFDD
  6476                           fsr2h	equ	0xFDA
  6477                           fsr2l	equ	0xFD9
  6478                           status	equ	0xFD8
  6479                           
  6480 ;; *************** function i1_memcpy *****************
  6481 ;; Defined at:
  6482 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  d1              2    0[COMRAM] PTR void 
  6485 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6486 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6487 ;;		 -> main@msgbuffer(11), 
  6488 ;;  s1              2    2[COMRAM] PTR const void 
  6489 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6490 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6491 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6492 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6493 ;;		 -> main@uc(15), 
  6494 ;;  n               2    4[COMRAM] unsigned int 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6497 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6498 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6499 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6500 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6501 ;;		 -> main@uc(15), 
  6502 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6503 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6504 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6505 ;;		 -> main@msgbuffer(11), 
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  2    0[COMRAM] PTR void 
  6508 ;; Registers used:
  6509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6515 ;;      Params:         6       0       0       0       0
  6516 ;;      Locals:         4       0       0       0       0
  6517 ;;      Temps:          0       0       0       0       0
  6518 ;;      Totals:        10       0       0       0       0
  6519 ;;Total ram usage:       10 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    6
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		i1_send_msg
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text36
  6530  002AC2                     __ptext36:
  6531                           	opt stack 0
  6532  002AC2                     i1_memcpy:
  6533                           	opt stack 16
  6534                           
  6535                           ;incstack = 0
  6536  002AC2  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6537  002AC6  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6538  002ACA  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6539  002ACE  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6540  002AD2  D00E               	goto	i1l4302
  6541  002AD4                     i1l4296:
  6542  002AD4  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6543  002AD8  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6544  002ADC  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6545  002AE0  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6546  002AE4  CFDF FFE7          	movff	indf2,indf1
  6547  002AE8  4A09               	infsnz	i1memcpy@s,f,c
  6548  002AEA  2A0A               	incf	i1memcpy@s+1,f,c
  6549  002AEC  4A07               	infsnz	i1memcpy@d,f,c
  6550  002AEE  2A08               	incf	i1memcpy@d+1,f,c
  6551  002AF0                     i1l4302:
  6552  002AF0  0605               	decf	i1memcpy@n,f,c
  6553  002AF2  A0D8               	btfss	status,0,c
  6554  002AF4  0606               	decf	i1memcpy@n+1,f,c
  6555  002AF6  2805               	incf	i1memcpy@n& (0+255),w,c
  6556  002AF8  B4D8               	btfsc	status,2,c
  6557  002AFA  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6558  002AFC  B4D8               	btfsc	status,2,c
  6559                           
  6560                           ;	Return value of i1_memcpy is never used
  6561  002AFE  0012               	return	
  6562  002B00  D7E9               	goto	i1l4296
  6563  002B02                     __end_ofi1_memcpy:
  6564                           	opt stack 0
  6565                           pclatu	equ	0xFFB
  6566                           pclath	equ	0xFFA
  6567                           tblptru	equ	0xFF8
  6568                           tblptrh	equ	0xFF7
  6569                           tblptrl	equ	0xFF6
  6570                           tablat	equ	0xFF5
  6571                           prodh	equ	0xFF4
  6572                           prodl	equ	0xFF3
  6573                           intcon	equ	0xFF2
  6574                           intcon2	equ	0xFF1
  6575                           postinc0	equ	0xFEE
  6576                           fsr0h	equ	0xFEA
  6577                           fsr0l	equ	0xFE9
  6578                           wreg	equ	0xFE8
  6579                           indf1	equ	0xFE7
  6580                           postdec1	equ	0xFE5
  6581                           fsr1h	equ	0xFE2
  6582                           fsr1l	equ	0xFE1
  6583                           bsr	equ	0xFE0
  6584                           indf2	equ	0xFDF
  6585                           postinc2	equ	0xFDE
  6586                           postdec2	equ	0xFDD
  6587                           fsr2h	equ	0xFDA
  6588                           fsr2l	equ	0xFD9
  6589                           status	equ	0xFD8
  6590                           
  6591 ;; *************** function _ReadUSART *****************
  6592 ;; Defined at:
  6593 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  data            1    0[COMRAM] unsigned char 
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      unsigned char 
  6600 ;; Registers used:
  6601 ;;		wreg, status,2, status,0
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6607 ;;      Params:         0       0       0       0       0
  6608 ;;      Locals:         1       0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0
  6610 ;;      Totals:         1       0       0       0       0
  6611 ;;Total ram usage:        1 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; Hardware stack levels required when called:    6
  6614 ;; This function calls:
  6615 ;;		Nothing
  6616 ;; This function is called by:
  6617 ;;		_uart_recv_int_handler
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           	psect	text37
  6622  002CC8                     __ptext37:
  6623                           	opt stack 0
  6624  002CC8                     _ReadUSART:
  6625                           	opt stack 18
  6626                           
  6627                           ;incstack = 0
  6628  002CC8  0EF2               	movlw	242
  6629  002CCA  1666               	andwf	_USART_Status,f,c
  6630  002CCC  ACAB               	btfss	4011,6,c	;volatile
  6631  002CCE  D003               	goto	i1l691
  6632  002CD0  9066               	bcf	_USART_Status,0,c
  6633  002CD2  B0AB               	btfsc	4011,0,c	;volatile
  6634  002CD4  8066               	bsf	_USART_Status,0,c
  6635  002CD6                     i1l691:
  6636  002CD6  B4AB               	btfsc	4011,2,c	;volatile
  6637  002CD8  8466               	bsf	_USART_Status,2,c
  6638  002CDA  B2AB               	btfsc	4011,1,c	;volatile
  6639  002CDC  8666               	bsf	_USART_Status,3,c
  6640  002CDE  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6641  002CE2  5001               	movf	ReadUSART@data,w,c
  6642  002CE4  0012               	return	
  6643  002CE6                     __end_of_ReadUSART:
  6644                           	opt stack 0
  6645                           pclatu	equ	0xFFB
  6646                           pclath	equ	0xFFA
  6647                           tblptru	equ	0xFF8
  6648                           tblptrh	equ	0xFF7
  6649                           tblptrl	equ	0xFF6
  6650                           tablat	equ	0xFF5
  6651                           prodh	equ	0xFF4
  6652                           prodl	equ	0xFF3
  6653                           intcon	equ	0xFF2
  6654                           intcon2	equ	0xFF1
  6655                           postinc0	equ	0xFEE
  6656                           fsr0h	equ	0xFEA
  6657                           fsr0l	equ	0xFE9
  6658                           wreg	equ	0xFE8
  6659                           indf1	equ	0xFE7
  6660                           postdec1	equ	0xFE5
  6661                           fsr1h	equ	0xFE2
  6662                           fsr1l	equ	0xFE1
  6663                           bsr	equ	0xFE0
  6664                           indf2	equ	0xFDF
  6665                           postinc2	equ	0xFDE
  6666                           postdec2	equ	0xFDD
  6667                           fsr2h	equ	0xFDA
  6668                           fsr2l	equ	0xFD9
  6669                           status	equ	0xFD8
  6670                           
  6671 ;; *************** function _timer1_int_handler *****************
  6672 ;; Defined at:
  6673 ;;		line 65 in file "../src/user_interrupts.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;		None
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;  motormsg        6   15[COMRAM] unsigned char [6]
  6678 ;;  motorcomm       2   13[COMRAM] unsigned char [2]
  6679 ;; Return value:  Size  Location     Type
  6680 ;;		None               void
  6681 ;; Registers used:
  6682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6688 ;;      Params:         0       0       0       0       0
  6689 ;;      Locals:         8       0       0       0       0
  6690 ;;      Temps:          1       0       0       0       0
  6691 ;;      Totals:         9       0       0       0       0
  6692 ;;Total ram usage:        9 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:    8
  6695 ;; This function calls:
  6696 ;;		_WriteTimer1
  6697 ;;		_motorMove
  6698 ;; This function is called by:
  6699 ;;		_InterruptHandlerLow
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text38
  6704  0024E8                     __ptext38:
  6705                           	opt stack 0
  6706  0024E8                     _timer1_int_handler:
  6707                           	opt stack 17
  6708                           
  6709                           ;user_interrupts.c: 78: WriteTimer1(0xFF7F);
  6710                           
  6711                           ;incstack = 0
  6712  0024E8  0EFF               	movlw	255
  6713  0024EA  6E02               	movwf	WriteTimer1@timer1+1,c
  6714  0024EC  0E7F               	movlw	127
  6715  0024EE  6E01               	movwf	WriteTimer1@timer1,c
  6716  0024F0  ECA5  F016         	call	_WriteTimer1	;wreg free
  6717                           
  6718                           ;user_interrupts.c: 80: leftEncoder++;
  6719  0024F4  0100               	movlb	0	; () banked
  6720  0024F6  0100               	movlb	0	; () banked
  6721  0024F8  2BDD               	incf	_leftEncoder& (0+255),f,b
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;user_interrupts.c: 81: if(leftEncoder >= leftDistDesired){
  6725  0024FA  5068               	movf	_leftDistDesired,w,c
  6726  0024FC  0100               	movlb	0	; () banked
  6727  0024FE  0100               	movlb	0	; () banked
  6728  002500  5DDD               	subwf	_leftEncoder& (0+255),w,b
  6729  002502  A0D8               	btfss	status,0,c
  6730  002504  0012               	return	
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;user_interrupts.c: 83: unsigned char motormsg[6] = {0x04, 0x00, 0x00, 0x00, 0x00, 0x00};
  6734  002506  EE20  F05A         	lfsr	2,timer1_int_handler@F5122
  6735  00250A  EE10  F010         	lfsr	1,timer1_int_handler@motormsg
  6736  00250E  0E06               	movlw	6
  6737  002510                     i1u394_21:
  6738  002510  CFDE FFE6          	movff	postinc2,postinc1
  6739  002514  2EE8               	decfsz	wreg,f,c
  6740  002516  D7FC               	goto	i1u394_21
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;user_interrupts.c: 84: motormsg[1] = leftEncoder;
  6744  002518  C0DD  F011         	movff	_leftEncoder,timer1_int_handler@motormsg+1
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;user_interrupts.c: 85: motormsg[2] = (leftEncoder & 0x17);
  6748  00251C  0100               	movlb	0	; () banked
  6749  00251E  0100               	movlb	0	; () banked
  6750  002520  51DD               	movf	_leftEncoder& (0+255),w,b
  6751  002522  0B17               	andlw	23
  6752  002524  6E12               	movwf	timer1_int_handler@motormsg+2,c
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;user_interrupts.c: 88: unsigned char motorcomm[2] = {0xC0, 0xC0};
  6756  002526  C062  F00E         	movff	timer1_int_handler@F5124,timer1_int_handler@motorcomm
  6757  00252A  C063  F00F         	movff	timer1_int_handler@F5124+1,timer1_int_handler@motorcomm+1
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;user_interrupts.c: 89: motorMove(0xC0, 0xC0, leftDistDesired, rightDistDesired);
  6761  00252E  6E0D               	movwf	??_timer1_int_handler& (0+255),c
  6762  002530  0EC0               	movlw	192
  6763  002532  6E06               	movwf	motorMove@right,c
  6764  002534  500D               	movf	??_timer1_int_handler& (0+255),w,c
  6765  002536  C068  F007         	movff	_leftDistDesired,motorMove@leftDistance
  6766  00253A  C069  F008         	movff	_rightDistDesired,motorMove@rightDistance
  6767  00253E  0EC0               	movlw	192
  6768  002540  ECFC  F013         	call	_motorMove
  6769                           
  6770                           ;user_interrupts.c: 91: if(rightEncoder >= rightDistDesired){
  6771  002544  5069               	movf	_rightDistDesired,w,c
  6772  002546  0100               	movlb	0	; () banked
  6773  002548  0100               	movlb	0	; () banked
  6774  00254A  5DDE               	subwf	_rightEncoder& (0+255),w,b
  6775  00254C  A0D8               	btfss	status,0,c
  6776  00254E  0012               	return	
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;user_interrupts.c: 92: stopCond = 0x01;
  6780  002550  6E0D               	movwf	??_timer1_int_handler& (0+255),c
  6781  002552  0E01               	movlw	1
  6782  002554  0100               	movlb	0	; () banked
  6783  002556  0100               	movlb	0	; () banked
  6784  002558  6FDF               	movwf	_stopCond& (0+255),b
  6785  00255A  500D               	movf	??_timer1_int_handler& (0+255),w,c
  6786  00255C  0012               	return	
  6787  00255E                     __end_of_timer1_int_handler:
  6788                           	opt stack 0
  6789                           pclatu	equ	0xFFB
  6790                           pclath	equ	0xFFA
  6791                           tblptru	equ	0xFF8
  6792                           tblptrh	equ	0xFF7
  6793                           tblptrl	equ	0xFF6
  6794                           tablat	equ	0xFF5
  6795                           prodh	equ	0xFF4
  6796                           prodl	equ	0xFF3
  6797                           intcon	equ	0xFF2
  6798                           intcon2	equ	0xFF1
  6799                           postinc0	equ	0xFEE
  6800                           fsr0h	equ	0xFEA
  6801                           fsr0l	equ	0xFE9
  6802                           wreg	equ	0xFE8
  6803                           indf1	equ	0xFE7
  6804                           postinc1	equ	0xFE6
  6805                           postdec1	equ	0xFE5
  6806                           fsr1h	equ	0xFE2
  6807                           fsr1l	equ	0xFE1
  6808                           bsr	equ	0xFE0
  6809                           indf2	equ	0xFDF
  6810                           postinc2	equ	0xFDE
  6811                           postdec2	equ	0xFDD
  6812                           fsr2h	equ	0xFDA
  6813                           fsr2l	equ	0xFD9
  6814                           status	equ	0xFD8
  6815                           
  6816 ;; *************** function _timer0_int_handler *****************
  6817 ;; Defined at:
  6818 ;;		line 17 in file "../src/user_interrupts.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;  motormsg        6   15[COMRAM] unsigned char [6]
  6823 ;;  motorcomm       2   13[COMRAM] unsigned char [2]
  6824 ;; Return value:  Size  Location     Type
  6825 ;;		None               void
  6826 ;; Registers used:
  6827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6833 ;;      Params:         0       0       0       0       0
  6834 ;;      Locals:         8       0       0       0       0
  6835 ;;      Temps:          1       0       0       0       0
  6836 ;;      Totals:         9       0       0       0       0
  6837 ;;Total ram usage:        9 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:    8
  6840 ;; This function calls:
  6841 ;;		_WriteTimer0
  6842 ;;		_motorMove
  6843 ;; This function is called by:
  6844 ;;		_InterruptHandlerLow
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           	psect	text39
  6849  00255E                     __ptext39:
  6850                           	opt stack 0
  6851  00255E                     _timer0_int_handler:
  6852                           	opt stack 17
  6853                           
  6854                           ;user_interrupts.c: 18: WriteTimer0(0x7F);
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;incstack = 0
  6858  00255E  0E00               	movlw	0
  6859  002560  6E02               	movwf	WriteTimer0@timer0+1,c
  6860  002562  0E7F               	movlw	127
  6861  002564  6E01               	movwf	WriteTimer0@timer0,c
  6862  002566  ECAE  F016         	call	_WriteTimer0	;wreg free
  6863                           
  6864                           ;user_interrupts.c: 36: rightEncoder++;
  6865  00256A  0100               	movlb	0	; () banked
  6866  00256C  0100               	movlb	0	; () banked
  6867  00256E  2BDE               	incf	_rightEncoder& (0+255),f,b
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;user_interrupts.c: 37: if(rightEncoder >= rightDistDesired){
  6871  002570  5069               	movf	_rightDistDesired,w,c
  6872  002572  0100               	movlb	0	; () banked
  6873  002574  0100               	movlb	0	; () banked
  6874  002576  5DDE               	subwf	_rightEncoder& (0+255),w,b
  6875  002578  A0D8               	btfss	status,0,c
  6876  00257A  0012               	return	
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;user_interrupts.c: 39: unsigned char motormsg[6] = {0x04, 0x00, 0x00, 0x00, 0x00, 0x00};
  6880  00257C  EE20  F054         	lfsr	2,timer0_int_handler@F5118
  6881  002580  EE10  F010         	lfsr	1,timer0_int_handler@motormsg
  6882  002584  0E06               	movlw	6
  6883  002586                     i1u397_21:
  6884  002586  CFDE FFE6          	movff	postinc2,postinc1
  6885  00258A  2EE8               	decfsz	wreg,f,c
  6886  00258C  D7FC               	goto	i1u397_21
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;user_interrupts.c: 40: motormsg[1] = rightEncoder;
  6890  00258E  C0DE  F011         	movff	_rightEncoder,timer0_int_handler@motormsg+1
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;user_interrupts.c: 41: motormsg[2] = (rightEncoder & 0x17);
  6894  002592  0100               	movlb	0	; () banked
  6895  002594  0100               	movlb	0	; () banked
  6896  002596  51DE               	movf	_rightEncoder& (0+255),w,b
  6897  002598  0B17               	andlw	23
  6898  00259A  6E12               	movwf	timer0_int_handler@motormsg+2,c
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;user_interrupts.c: 43: unsigned char motorcomm[2] = {0x40, 0x40};
  6902  00259C  C060  F00E         	movff	timer0_int_handler@F5120,timer0_int_handler@motorcomm
  6903  0025A0  C061  F00F         	movff	timer0_int_handler@F5120+1,timer0_int_handler@motorcomm+1
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;user_interrupts.c: 44: motorMove(0x40, 0x40, leftDistDesired, rightDistDesired);
  6907  0025A4  6E0D               	movwf	??_timer0_int_handler& (0+255),c
  6908  0025A6  0E40               	movlw	64
  6909  0025A8  6E06               	movwf	motorMove@right,c
  6910  0025AA  500D               	movf	??_timer0_int_handler& (0+255),w,c
  6911  0025AC  C068  F007         	movff	_leftDistDesired,motorMove@leftDistance
  6912  0025B0  C069  F008         	movff	_rightDistDesired,motorMove@rightDistance
  6913  0025B4  0E40               	movlw	64
  6914  0025B6  ECFC  F013         	call	_motorMove
  6915                           
  6916                           ;user_interrupts.c: 45: if(leftEncoder >= leftDistDesired){
  6917  0025BA  5068               	movf	_leftDistDesired,w,c
  6918  0025BC  0100               	movlb	0	; () banked
  6919  0025BE  0100               	movlb	0	; () banked
  6920  0025C0  5DDD               	subwf	_leftEncoder& (0+255),w,b
  6921  0025C2  A0D8               	btfss	status,0,c
  6922  0025C4  0012               	return	
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;user_interrupts.c: 46: stopCond = 0x01;
  6926  0025C6  6E0D               	movwf	??_timer0_int_handler& (0+255),c
  6927  0025C8  0E01               	movlw	1
  6928  0025CA  0100               	movlb	0	; () banked
  6929  0025CC  0100               	movlb	0	; () banked
  6930  0025CE  6FDF               	movwf	_stopCond& (0+255),b
  6931  0025D0  500D               	movf	??_timer0_int_handler& (0+255),w,c
  6932  0025D2  0012               	return	
  6933  0025D4                     __end_of_timer0_int_handler:
  6934                           	opt stack 0
  6935                           pclatu	equ	0xFFB
  6936                           pclath	equ	0xFFA
  6937                           tblptru	equ	0xFF8
  6938                           tblptrh	equ	0xFF7
  6939                           tblptrl	equ	0xFF6
  6940                           tablat	equ	0xFF5
  6941                           prodh	equ	0xFF4
  6942                           prodl	equ	0xFF3
  6943                           intcon	equ	0xFF2
  6944                           intcon2	equ	0xFF1
  6945                           postinc0	equ	0xFEE
  6946                           fsr0h	equ	0xFEA
  6947                           fsr0l	equ	0xFE9
  6948                           wreg	equ	0xFE8
  6949                           indf1	equ	0xFE7
  6950                           postinc1	equ	0xFE6
  6951                           postdec1	equ	0xFE5
  6952                           fsr1h	equ	0xFE2
  6953                           fsr1l	equ	0xFE1
  6954                           bsr	equ	0xFE0
  6955                           indf2	equ	0xFDF
  6956                           postinc2	equ	0xFDE
  6957                           postdec2	equ	0xFDD
  6958                           fsr2h	equ	0xFDA
  6959                           fsr2l	equ	0xFD9
  6960                           status	equ	0xFD8
  6961                           
  6962 ;; *************** function _motorMove *****************
  6963 ;; Defined at:
  6964 ;;		line 5 in file "../src/motor.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  left            1    wreg     unsigned char 
  6967 ;;  right           1    5[COMRAM] unsigned char 
  6968 ;;  leftDistance    1    6[COMRAM] unsigned char 
  6969 ;;  rightDistanc    1    7[COMRAM] unsigned char 
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;  left            1   11[COMRAM] unsigned char 
  6972 ;;  direction       2    9[COMRAM] unsigned char [2]
  6973 ;; Return value:  Size  Location     Type
  6974 ;;		None               void
  6975 ;; Registers used:
  6976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6982 ;;      Params:         3       0       0       0       0
  6983 ;;      Locals:         3       0       0       0       0
  6984 ;;      Temps:          1       0       0       0       0
  6985 ;;      Totals:         7       0       0       0       0
  6986 ;;Total ram usage:        7 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    7
  6989 ;; This function calls:
  6990 ;;		_WriteTimer0
  6991 ;;		_WriteTimer1
  6992 ;;		i1_uart_trans
  6993 ;; This function is called by:
  6994 ;;		_timer0_int_handler
  6995 ;;		_timer1_int_handler
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text40
  7000  0027F8                     __ptext40:
  7001                           	opt stack 0
  7002  0027F8                     _motorMove:
  7003                           	opt stack 17
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;incstack = 0
  7007                           ;motorMove@left stored from wreg
  7008  0027F8  CFE8 F00C          	movff	wreg,motorMove@left
  7009                           
  7010                           ;motor.c: 7: if(leftDistance != 0 && rightDistance != 0){
  7011  0027FC  5007               	movf	motorMove@leftDistance,w,c
  7012  0027FE  B4D8               	btfsc	status,2,c
  7013  002800  D007               	goto	i1l4392
  7014  002802  5008               	movf	motorMove@rightDistance,w,c
  7015  002804  B4D8               	btfsc	status,2,c
  7016  002806  D004               	goto	i1l4392
  7017                           
  7018                           ;motor.c: 8: leftDistDesired = leftDistance;
  7019  002808  C007  F068         	movff	motorMove@leftDistance,_leftDistDesired
  7020                           
  7021                           ;motor.c: 9: rightDistDesired = rightDistance;
  7022  00280C  C008  F069         	movff	motorMove@rightDistance,_rightDistDesired
  7023  002810                     i1l4392:
  7024                           
  7025                           ;motor.c: 10: }
  7026                           ;motor.c: 12: if(left != 0x00 && right != 0x00){
  7027  002810  500C               	movf	motorMove@left,w,c
  7028  002812  B4D8               	btfsc	status,2,c
  7029  002814  D006               	goto	i1l4398
  7030  002816  5006               	movf	motorMove@right,w,c
  7031  002818  B4D8               	btfsc	status,2,c
  7032  00281A  D003               	goto	i1l4398
  7033                           
  7034                           ;motor.c: 13: stopCond = 0x00;
  7035  00281C  6E09               	movwf	??_motorMove& (0+255),c
  7036  00281E  0E00               	movlw	0
  7037  002820  D002               	goto	L1
  7038  002822                     i1l4398:
  7039                           
  7040                           ;motor.c: 15: stopCond = 0x01;
  7041  002822  6E09               	movwf	??_motorMove& (0+255),c
  7042  002824  0E01               	movlw	1
  7043  002826                     L1:
  7044  002826  0100               	movlb	0	; () banked
  7045  002828  0100               	movlb	0	; () banked
  7046  00282A  6FDF               	movwf	_stopCond& (0+255),b
  7047  00282C  5009               	movf	??_motorMove& (0+255),w,c
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;motor.c: 16: }
  7051                           ;motor.c: 18: WriteTimer0(0x7F);
  7052                           
  7053                           ; BSR set to: 0
  7054  00282E  0E00               	movlw	0
  7055  002830  6E02               	movwf	WriteTimer0@timer0+1,c
  7056  002832  0E7F               	movlw	127
  7057  002834  6E01               	movwf	WriteTimer0@timer0,c
  7058  002836  ECAE  F016         	call	_WriteTimer0	;wreg free
  7059                           
  7060                           ;motor.c: 19: WriteTimer1(0xFF7F);
  7061  00283A  0EFF               	movlw	255
  7062  00283C  6E02               	movwf	WriteTimer1@timer1+1,c
  7063  00283E  0E7F               	movlw	127
  7064  002840  6E01               	movwf	WriteTimer1@timer1,c
  7065  002842  ECA5  F016         	call	_WriteTimer1	;wreg free
  7066                           
  7067                           ;motor.c: 20: unsigned char direction[2];
  7068                           ;motor.c: 21: direction[0] = left;
  7069  002846  C00C  F00A         	movff	motorMove@left,motorMove@direction
  7070                           
  7071                           ;motor.c: 22: direction[1] = right;
  7072  00284A  C006  F00B         	movff	motorMove@right,motorMove@direction+1
  7073                           
  7074                           ;motor.c: 23: uart_trans(2, direction);
  7075  00284E  0E00               	movlw	high motorMove@direction
  7076  002850  6E02               	movwf	i1uart_trans@data+1,c
  7077  002852  0E0A               	movlw	low motorMove@direction
  7078  002854  6E01               	movwf	i1uart_trans@data,c
  7079  002856  0E02               	movlw	2
  7080  002858  EC6F  F00F         	call	i1_uart_trans
  7081  00285C  0012               	return	
  7082  00285E                     __end_of_motorMove:
  7083                           	opt stack 0
  7084                           pclatu	equ	0xFFB
  7085                           pclath	equ	0xFFA
  7086                           tblptru	equ	0xFF8
  7087                           tblptrh	equ	0xFF7
  7088                           tblptrl	equ	0xFF6
  7089                           tablat	equ	0xFF5
  7090                           prodh	equ	0xFF4
  7091                           prodl	equ	0xFF3
  7092                           intcon	equ	0xFF2
  7093                           intcon2	equ	0xFF1
  7094                           postinc0	equ	0xFEE
  7095                           fsr0h	equ	0xFEA
  7096                           fsr0l	equ	0xFE9
  7097                           wreg	equ	0xFE8
  7098                           indf1	equ	0xFE7
  7099                           postinc1	equ	0xFE6
  7100                           postdec1	equ	0xFE5
  7101                           fsr1h	equ	0xFE2
  7102                           fsr1l	equ	0xFE1
  7103                           bsr	equ	0xFE0
  7104                           indf2	equ	0xFDF
  7105                           postinc2	equ	0xFDE
  7106                           postdec2	equ	0xFDD
  7107                           fsr2h	equ	0xFDA
  7108                           fsr2l	equ	0xFD9
  7109                           status	equ	0xFD8
  7110                           
  7111 ;; *************** function i1_uart_trans *****************
  7112 ;; Defined at:
  7113 ;;		line 61 in file "../src/my_uart.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;  length          1    wreg     unsigned char 
  7116 ;;  data            2    0[COMRAM] PTR unsigned char 
  7117 ;;		 -> motorMove@direction(2), main@msgbuffer(11), 
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;  length          1    4[COMRAM] unsigned char 
  7120 ;; Return value:  Size  Location     Type
  7121 ;;		None               void
  7122 ;; Registers used:
  7123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7129 ;;      Params:         2       0       0       0       0
  7130 ;;      Locals:         1       0       0       0       0
  7131 ;;      Temps:          2       0       0       0       0
  7132 ;;      Totals:         5       0       0       0       0
  7133 ;;Total ram usage:        5 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; Hardware stack levels required when called:    6
  7136 ;; This function calls:
  7137 ;;		Nothing
  7138 ;; This function is called by:
  7139 ;;		_motorMove
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text41
  7144  001EDE                     __ptext41:
  7145                           	opt stack 0
  7146  001EDE                     i1_uart_trans:
  7147                           	opt stack 17
  7148                           
  7149                           ;incstack = 0
  7150                           ;i1uart_trans@length stored from wreg
  7151  001EDE  CFE8 F005          	movff	wreg,i1uart_trans@length
  7152                           
  7153                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  7154  001EE2  EE20 F00D          	lfsr	2,13
  7155  001EE6  506A               	movf	_uc_ptr,w,c
  7156  001EE8  26D9               	addwf	fsr2l,f,c
  7157  001EEA  506B               	movf	_uc_ptr+1,w,c
  7158  001EEC  22DA               	addwfc	fsr2h,f,c
  7159  001EEE  0E00               	movlw	0
  7160  001EF0  6EDF               	movwf	indf2,c
  7161  001EF2  D02D               	goto	i1l4246
  7162  001EF4                     i1l4242:
  7163                           
  7164                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  7165  001EF4  EE20 F00D          	lfsr	2,13
  7166  001EF8  506A               	movf	_uc_ptr,w,c
  7167  001EFA  26D9               	addwf	fsr2l,f,c
  7168  001EFC  506B               	movf	_uc_ptr+1,w,c
  7169  001EFE  22DA               	addwfc	fsr2h,f,c
  7170  001F00  50DF               	movf	indf2,w,c
  7171  001F02  6E03               	movwf	??i1_uart_trans& (0+255),c
  7172  001F04  5003               	movf	??i1_uart_trans,w,c
  7173  001F06  0D01               	mullw	1
  7174  001F08  50F3               	movf	prodl,w,c
  7175  001F0A  2401               	addwf	i1uart_trans@data,w,c
  7176  001F0C  6ED9               	movwf	fsr2l,c
  7177  001F0E  50F4               	movf	prodh,w,c
  7178  001F10  2002               	addwfc	i1uart_trans@data+1,w,c
  7179  001F12  6EDA               	movwf	fsr2h,c
  7180  001F14  EE10 F00D          	lfsr	1,13
  7181  001F18  506A               	movf	_uc_ptr,w,c
  7182  001F1A  26E1               	addwf	fsr1l,f,c
  7183  001F1C  506B               	movf	_uc_ptr+1,w,c
  7184  001F1E  22E2               	addwfc	fsr1h,f,c
  7185  001F20  50E7               	movf	indf1,w,c
  7186  001F22  6E04               	movwf	(??i1_uart_trans+1)& (0+255),c
  7187  001F24  5004               	movf	??i1_uart_trans+1,w,c
  7188  001F26  0D01               	mullw	1
  7189  001F28  0E07               	movlw	7
  7190  001F2A  26F3               	addwf	prodl,f,c
  7191  001F2C  0E00               	movlw	0
  7192  001F2E  22F4               	addwfc	prodh,f,c
  7193  001F30  50F3               	movf	prodl,w,c
  7194  001F32  246A               	addwf	_uc_ptr,w,c
  7195  001F34  6EE1               	movwf	fsr1l,c
  7196  001F36  50F4               	movf	prodh,w,c
  7197  001F38  206B               	addwfc	_uc_ptr+1,w,c
  7198  001F3A  6EE2               	movwf	fsr1h,c
  7199  001F3C  CFDF FFE7          	movff	indf2,indf1
  7200  001F40  EE20 F00D          	lfsr	2,13
  7201  001F44  506A               	movf	_uc_ptr,w,c
  7202  001F46  26D9               	addwf	fsr2l,f,c
  7203  001F48  506B               	movf	_uc_ptr+1,w,c
  7204  001F4A  22DA               	addwfc	fsr2h,f,c
  7205  001F4C  2ADF               	incf	indf2,f,c
  7206  001F4E                     i1l4246:
  7207  001F4E  EE20 F00D          	lfsr	2,13
  7208  001F52  506A               	movf	_uc_ptr,w,c
  7209  001F54  26D9               	addwf	fsr2l,f,c
  7210  001F56  506B               	movf	_uc_ptr+1,w,c
  7211  001F58  22DA               	addwfc	fsr2h,f,c
  7212  001F5A  50DF               	movf	indf2,w,c
  7213  001F5C  6E03               	movwf	??i1_uart_trans& (0+255),c
  7214  001F5E  5005               	movf	i1uart_trans@length,w,c
  7215  001F60  5C03               	subwf	??i1_uart_trans,w,c
  7216  001F62  A0D8               	btfss	status,0,c
  7217  001F64  D7C7               	goto	i1l4242
  7218                           
  7219                           ;my_uart.c: 67: }
  7220                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  7221  001F66  EE20 F00E          	lfsr	2,14
  7222  001F6A  506A               	movf	_uc_ptr,w,c
  7223  001F6C  26D9               	addwf	fsr2l,f,c
  7224  001F6E  506B               	movf	_uc_ptr+1,w,c
  7225  001F70  22DA               	addwfc	fsr2h,f,c
  7226  001F72  0E00               	movlw	0
  7227  001F74  6EDF               	movwf	indf2,c
  7228                           
  7229                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  7230  001F76  889D               	bsf	3997,4,c	;volatile
  7231  001F78  0012               	return	
  7232  001F7A                     __end_ofi1_uart_trans:
  7233                           	opt stack 0
  7234                           pclatu	equ	0xFFB
  7235                           pclath	equ	0xFFA
  7236                           tblptru	equ	0xFF8
  7237                           tblptrh	equ	0xFF7
  7238                           tblptrl	equ	0xFF6
  7239                           tablat	equ	0xFF5
  7240                           prodh	equ	0xFF4
  7241                           prodl	equ	0xFF3
  7242                           intcon	equ	0xFF2
  7243                           intcon2	equ	0xFF1
  7244                           postinc0	equ	0xFEE
  7245                           fsr0h	equ	0xFEA
  7246                           fsr0l	equ	0xFE9
  7247                           wreg	equ	0xFE8
  7248                           indf1	equ	0xFE7
  7249                           postinc1	equ	0xFE6
  7250                           postdec1	equ	0xFE5
  7251                           fsr1h	equ	0xFE2
  7252                           fsr1l	equ	0xFE1
  7253                           bsr	equ	0xFE0
  7254                           indf2	equ	0xFDF
  7255                           postinc2	equ	0xFDE
  7256                           postdec2	equ	0xFDD
  7257                           fsr2h	equ	0xFDA
  7258                           fsr2l	equ	0xFD9
  7259                           status	equ	0xFD8
  7260                           
  7261 ;; *************** function _WriteTimer1 *****************
  7262 ;; Defined at:
  7263 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  7264 ;; Parameters:    Size  Location     Type
  7265 ;;  timer1          2    0[COMRAM] unsigned int 
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;  timer           2    2[COMRAM] struct Timers
  7268 ;; Return value:  Size  Location     Type
  7269 ;;		None               void
  7270 ;; Registers used:
  7271 ;;		None
  7272 ;; Tracked objects:
  7273 ;;		On entry : 0/0
  7274 ;;		On exit  : 0/0
  7275 ;;		Unchanged: 0/0
  7276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7277 ;;      Params:         2       0       0       0       0
  7278 ;;      Locals:         2       0       0       0       0
  7279 ;;      Temps:          0       0       0       0       0
  7280 ;;      Totals:         4       0       0       0       0
  7281 ;;Total ram usage:        4 bytes
  7282 ;; Hardware stack levels used:    1
  7283 ;; Hardware stack levels required when called:    6
  7284 ;; This function calls:
  7285 ;;		Nothing
  7286 ;; This function is called by:
  7287 ;;		_timer1_int_handler
  7288 ;;		_motorMove
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text42
  7293  002D4A                     __ptext42:
  7294                           	opt stack 0
  7295  002D4A                     _WriteTimer1:
  7296                           	opt stack 17
  7297                           
  7298                           ;incstack = 0
  7299  002D4A  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  7300  002D4E  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  7301  002D52  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  7302  002D56  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  7303  002D5A  0012               	return	
  7304  002D5C                     __end_of_WriteTimer1:
  7305                           	opt stack 0
  7306                           pclatu	equ	0xFFB
  7307                           pclath	equ	0xFFA
  7308                           tblptru	equ	0xFF8
  7309                           tblptrh	equ	0xFF7
  7310                           tblptrl	equ	0xFF6
  7311                           tablat	equ	0xFF5
  7312                           prodh	equ	0xFF4
  7313                           prodl	equ	0xFF3
  7314                           intcon	equ	0xFF2
  7315                           intcon2	equ	0xFF1
  7316                           postinc0	equ	0xFEE
  7317                           fsr0h	equ	0xFEA
  7318                           fsr0l	equ	0xFE9
  7319                           wreg	equ	0xFE8
  7320                           indf1	equ	0xFE7
  7321                           postinc1	equ	0xFE6
  7322                           postdec1	equ	0xFE5
  7323                           fsr1h	equ	0xFE2
  7324                           fsr1l	equ	0xFE1
  7325                           bsr	equ	0xFE0
  7326                           indf2	equ	0xFDF
  7327                           postinc2	equ	0xFDE
  7328                           postdec2	equ	0xFDD
  7329                           fsr2h	equ	0xFDA
  7330                           fsr2l	equ	0xFD9
  7331                           status	equ	0xFD8
  7332                           
  7333 ;; *************** function _WriteTimer0 *****************
  7334 ;; Defined at:
  7335 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;  timer0          2    0[COMRAM] unsigned int 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;  timer           2    2[COMRAM] struct Timers
  7340 ;; Return value:  Size  Location     Type
  7341 ;;		None               void
  7342 ;; Registers used:
  7343 ;;		None
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7349 ;;      Params:         2       0       0       0       0
  7350 ;;      Locals:         2       0       0       0       0
  7351 ;;      Temps:          0       0       0       0       0
  7352 ;;      Totals:         4       0       0       0       0
  7353 ;;Total ram usage:        4 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:    6
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_timer0_int_handler
  7360 ;;		_motorMove
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           	psect	text43
  7365  002D5C                     __ptext43:
  7366                           	opt stack 0
  7367  002D5C                     _WriteTimer0:
  7368                           	opt stack 17
  7369                           
  7370                           ;incstack = 0
  7371  002D5C  C001  F003         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7372  002D60  C002  F004         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7373  002D64  C004  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7374  002D68  C003  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7375  002D6C  0012               	return	
  7376  002D6E                     __end_of_WriteTimer0:
  7377                           	opt stack 0
  7378                           pclatu	equ	0xFFB
  7379                           pclath	equ	0xFFA
  7380                           tblptru	equ	0xFF8
  7381                           tblptrh	equ	0xFF7
  7382                           tblptrl	equ	0xFF6
  7383                           tablat	equ	0xFF5
  7384                           prodh	equ	0xFF4
  7385                           prodl	equ	0xFF3
  7386                           intcon	equ	0xFF2
  7387                           intcon2	equ	0xFF1
  7388                           postinc0	equ	0xFEE
  7389                           fsr0h	equ	0xFEA
  7390                           fsr0l	equ	0xFE9
  7391                           wreg	equ	0xFE8
  7392                           indf1	equ	0xFE7
  7393                           postinc1	equ	0xFE6
  7394                           postdec1	equ	0xFE5
  7395                           fsr1h	equ	0xFE2
  7396                           fsr1l	equ	0xFE1
  7397                           bsr	equ	0xFE0
  7398                           indf2	equ	0xFDF
  7399                           postinc2	equ	0xFDE
  7400                           postdec2	equ	0xFDD
  7401                           fsr2h	equ	0xFDA
  7402                           fsr2l	equ	0xFD9
  7403                           status	equ	0xFD8
  7404                           
  7405 ;; *************** function _adc_int_handler *****************
  7406 ;; Defined at:
  7407 ;;		line 99 in file "../src/user_interrupts.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;		None
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;  dist            3   54[COMRAM] float 
  7412 ;;  voltage         3   59[COMRAM] float 
  7413 ;;  roundDist       2   64[COMRAM] int 
  7414 ;;  channel         2   62[COMRAM] int 
  7415 ;;  k               2   57[COMRAM] int 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;		None               void
  7418 ;; Registers used:
  7419 ;;		wreg, status,2, status,0, prodl, cstack
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7425 ;;      Params:         0       0       0       0       0
  7426 ;;      Locals:        12       0       0       0       0
  7427 ;;      Temps:          4       0       0       0       0
  7428 ;;      Totals:        16       0       0       0       0
  7429 ;;Total ram usage:       16 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:    8
  7432 ;; This function calls:
  7433 ;;		___awtoft
  7434 ;;		___ftadd
  7435 ;;		___ftdiv
  7436 ;;		___ftge
  7437 ;;		___ftmul
  7438 ;;		___fttol
  7439 ;;		i1_SetChanADC
  7440 ;;		i1___awmod
  7441 ;; This function is called by:
  7442 ;;		_InterruptHandlerLow
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text44
  7447  000E12                     __ptext44:
  7448                           	opt stack 0
  7449  000E12                     _adc_int_handler:
  7450                           	opt stack 17
  7451                           
  7452                           ;user_interrupts.c: 102: if(adcbuffer[0] < 3)
  7453                           
  7454                           ;incstack = 0
  7455  000E12  0E03               	movlw	3
  7456  000E14  0101               	movlb	1	; () banked
  7457  000E16  0101               	movlb	1	; () banked
  7458  000E18  5D66               	subwf	_adcbuffer& (0+255),w,b
  7459  000E1A  B0D8               	btfsc	status,0,c
  7460  000E1C  D007               	goto	i1l4702
  7461                           
  7462                           ; BSR set to: 1
  7463                           ;user_interrupts.c: 103: adcbuffer[0] = adcbuffer[0] + 1;
  7464  000E1E  0101               	movlb	1	; () banked
  7465  000E20  0101               	movlb	1	; () banked
  7466  000E22  2966               	incf	_adcbuffer& (0+255),w,b
  7467  000E24  0101               	movlb	1	; () banked
  7468  000E26  0101               	movlb	1	; () banked
  7469  000E28  6F66               	movwf	_adcbuffer& (0+255),b
  7470  000E2A  D006               	goto	i1l4704
  7471  000E2C                     i1l4702:
  7472                           
  7473                           ; BSR set to: 1
  7474                           ;user_interrupts.c: 104: else
  7475                           ;user_interrupts.c: 105: adcbuffer[0] = 1;
  7476  000E2C  6E33               	movwf	??_adc_int_handler& (0+255),c
  7477  000E2E  0E01               	movlw	1
  7478  000E30  0101               	movlb	1	; () banked
  7479  000E32  0101               	movlb	1	; () banked
  7480  000E34  6F66               	movwf	_adcbuffer& (0+255),b
  7481  000E36  5033               	movf	??_adc_int_handler& (0+255),w,c
  7482  000E38                     i1l4704:
  7483                           
  7484                           ; BSR set to: 1
  7485                           ;user_interrupts.c: 108: int k = (int)ADRESH;
  7486  000E38  CFC4 F03A          	movff	4036,adc_int_handler@k	;volatile
  7487  000E3C  6A3B               	clrf	adc_int_handler@k+1,c
  7488                           
  7489                           ; BSR set to: 1
  7490                           ;user_interrupts.c: 109: float voltage = 3.4*k/256;
  7491  000E3E  0E9A               	movlw	154
  7492  000E40  6E11               	movwf	___ftmul@f2,c
  7493  000E42  0E59               	movlw	89
  7494  000E44  6E12               	movwf	___ftmul@f2+1,c
  7495  000E46  0E40               	movlw	64
  7496  000E48  6E13               	movwf	___ftmul@f2+2,c
  7497  000E4A  C03A  F009         	movff	adc_int_handler@k,___awtoft@c
  7498  000E4E  C03B  F00A         	movff	adc_int_handler@k+1,___awtoft@c+1
  7499  000E52  EC8D  F014         	call	___awtoft	;wreg free
  7500  000E56  C009  F00E         	movff	?___awtoft,___ftmul@f1
  7501  000E5A  C00A  F00F         	movff	?___awtoft+1,___ftmul@f1+1
  7502  000E5E  C00B  F010         	movff	?___awtoft+2,___ftmul@f1+2
  7503  000E62  ECD7  F00B         	call	___ftmul	;wreg free
  7504  000E66  C00E  F024         	movff	?___ftmul,___ftdiv@f1
  7505  000E6A  C00F  F025         	movff	?___ftmul+1,___ftdiv@f1+1
  7506  000E6E  C010  F026         	movff	?___ftmul+2,___ftdiv@f1+2
  7507  000E72  0E00               	movlw	0
  7508  000E74  6E27               	movwf	___ftdiv@f2,c
  7509  000E76  0E80               	movlw	128
  7510  000E78  6E28               	movwf	___ftdiv@f2+1,c
  7511  000E7A  0E43               	movlw	67
  7512  000E7C  6E29               	movwf	___ftdiv@f2+2,c
  7513  000E7E  ECCE  F00C         	call	___ftdiv	;wreg free
  7514  000E82  C024  F03C         	movff	?___ftdiv,adc_int_handler@voltage
  7515  000E86  C025  F03D         	movff	?___ftdiv+1,adc_int_handler@voltage+1
  7516  000E8A  C026  F03E         	movff	?___ftdiv+2,adc_int_handler@voltage+2
  7517                           
  7518                           ;user_interrupts.c: 110: int roundDist;
  7519                           ;user_interrupts.c: 114: if (voltage > .5) {
  7520  000E8E  0E00               	movlw	0
  7521  000E90  6E01               	movwf	___ftge@ff1,c
  7522  000E92  0E00               	movlw	0
  7523  000E94  6E02               	movwf	___ftge@ff1+1,c
  7524  000E96  0E3F               	movlw	63
  7525  000E98  6E03               	movwf	___ftge@ff1+2,c
  7526  000E9A  C03C  F004         	movff	adc_int_handler@voltage,___ftge@ff2
  7527  000E9E  C03D  F005         	movff	adc_int_handler@voltage+1,___ftge@ff2+1
  7528  000EA2  C03E  F006         	movff	adc_int_handler@voltage+2,___ftge@ff2+2
  7529  000EA6  ECE7  F010         	call	___ftge	;wreg free
  7530  000EAA  B0D8               	btfsc	status,0,c
  7531  000EAC  D045               	goto	i1l4712
  7532                           
  7533                           ;user_interrupts.c: 115: float dist = 24/(voltage - 0.1);
  7534  000EAE  0E00               	movlw	0
  7535  000EB0  6E24               	movwf	___ftdiv@f1,c
  7536  000EB2  0EC0               	movlw	192
  7537  000EB4  6E25               	movwf	___ftdiv@f1+1,c
  7538  000EB6  0E41               	movlw	65
  7539  000EB8  6E26               	movwf	___ftdiv@f1+2,c
  7540  000EBA  0ECD               	movlw	205
  7541  000EBC  6E1B               	movwf	___ftadd@f2,c
  7542  000EBE  0ECC               	movlw	204
  7543  000EC0  6E1C               	movwf	___ftadd@f2+1,c
  7544  000EC2  0EBD               	movlw	189
  7545  000EC4  6E1D               	movwf	___ftadd@f2+2,c
  7546  000EC6  C03C  F018         	movff	adc_int_handler@voltage,___ftadd@f1
  7547  000ECA  C03D  F019         	movff	adc_int_handler@voltage+1,___ftadd@f1+1
  7548  000ECE  C03E  F01A         	movff	adc_int_handler@voltage+2,___ftadd@f1+2
  7549  000ED2  EC2D  F006         	call	___ftadd	;wreg free
  7550  000ED6  C018  F027         	movff	?___ftadd,___ftdiv@f2
  7551  000EDA  C019  F028         	movff	?___ftadd+1,___ftdiv@f2+1
  7552  000EDE  C01A  F029         	movff	?___ftadd+2,___ftdiv@f2+2
  7553  000EE2  ECCE  F00C         	call	___ftdiv	;wreg free
  7554  000EE6  C024  F037         	movff	?___ftdiv,adc_int_handler@dist
  7555  000EEA  C025  F038         	movff	?___ftdiv+1,adc_int_handler@dist+1
  7556  000EEE  C026  F039         	movff	?___ftdiv+2,adc_int_handler@dist+2
  7557                           
  7558                           ;user_interrupts.c: 116: roundDist = (int)(dist + 0.5);
  7559  000EF2  0E00               	movlw	0
  7560  000EF4  6E1B               	movwf	___ftadd@f2,c
  7561  000EF6  0E00               	movlw	0
  7562  000EF8  6E1C               	movwf	___ftadd@f2+1,c
  7563  000EFA  0E3F               	movlw	63
  7564  000EFC  6E1D               	movwf	___ftadd@f2+2,c
  7565  000EFE  C037  F018         	movff	adc_int_handler@dist,___ftadd@f1
  7566  000F02  C038  F019         	movff	adc_int_handler@dist+1,___ftadd@f1+1
  7567  000F06  C039  F01A         	movff	adc_int_handler@dist+2,___ftadd@f1+2
  7568  000F0A  EC2D  F006         	call	___ftadd	;wreg free
  7569  000F0E  C018  F009         	movff	?___ftadd,___fttol@f1
  7570  000F12  C019  F00A         	movff	?___ftadd+1,___fttol@f1+1
  7571  000F16  C01A  F00B         	movff	?___ftadd+2,___fttol@f1+2
  7572  000F1A  EC53  F00C         	call	___fttol	;wreg free
  7573  000F1E  C009  F033         	movff	?___fttol,??_adc_int_handler
  7574  000F22  C00A  F034         	movff	?___fttol+1,??_adc_int_handler+1
  7575  000F26  C00B  F035         	movff	?___fttol+2,??_adc_int_handler+2
  7576  000F2A  C00C  F036         	movff	?___fttol+3,??_adc_int_handler+3
  7577  000F2E  C033  F041         	movff	??_adc_int_handler,adc_int_handler@roundDist
  7578  000F32  C034  F042         	movff	??_adc_int_handler+1,adc_int_handler@roundDist+1
  7579                           
  7580                           ;user_interrupts.c: 117: }
  7581  000F36  D004               	goto	i1l4714
  7582  000F38                     i1l4712:
  7583                           
  7584                           ;user_interrupts.c: 119: else
  7585                           ;user_interrupts.c: 120: roundDist = 0xFF;
  7586  000F38  0E00               	movlw	0
  7587  000F3A  6E42               	movwf	adc_int_handler@roundDist+1,c
  7588  000F3C  0EFF               	movlw	255
  7589  000F3E  6E41               	movwf	adc_int_handler@roundDist,c
  7590  000F40                     i1l4714:
  7591                           
  7592                           ;user_interrupts.c: 124: int channel = (int)adcbuffer[0] % 3;
  7593  000F40  0101               	movlb	1	; () banked
  7594  000F42  C166  F001         	movff	_adcbuffer,i1___awmod@dividend
  7595  000F46  6A02               	clrf	i1___awmod@dividend+1,c
  7596  000F48  0E00               	movlw	0
  7597  000F4A  6E04               	movwf	i1___awmod@divisor+1,c
  7598  000F4C  0E03               	movlw	3
  7599  000F4E  6E03               	movwf	i1___awmod@divisor,c
  7600  000F50  ECBD  F00F         	call	i1___awmod	;wreg free
  7601  000F54  C001  F03F         	movff	?i1___awmod,adc_int_handler@channel
  7602  000F58  C002  F040         	movff	?i1___awmod+1,adc_int_handler@channel+1
  7603                           
  7604                           ;user_interrupts.c: 125: if (channel == 0) {
  7605  000F5C  5040               	movf	adc_int_handler@channel+1,w,c
  7606  000F5E  103F               	iorwf	adc_int_handler@channel,w,c
  7607  000F60  A4D8               	btfss	status,2,c
  7608  000F62  D006               	goto	i1l4722
  7609                           
  7610                           ;user_interrupts.c: 126: adcbuffer[3] = roundDist;
  7611  000F64  C041  F169         	movff	adc_int_handler@roundDist,_adcbuffer+3
  7612                           
  7613                           ;user_interrupts.c: 127: SetChanADC(0b10001111);
  7614  000F68  0E8F               	movlw	143
  7615  000F6A  EC73  F016         	call	i1_SetChanADC
  7616                           
  7617                           ;user_interrupts.c: 128: }
  7618  000F6E  0012               	return	
  7619  000F70                     i1l4722:
  7620                           
  7621                           ;user_interrupts.c: 129: else if (channel == 1) {
  7622  000F70  043F               	decf	adc_int_handler@channel,w,c
  7623  000F72  1040               	iorwf	adc_int_handler@channel+1,w,c
  7624  000F74  A4D8               	btfss	status,2,c
  7625  000F76  D006               	goto	i1l548
  7626                           
  7627                           ;user_interrupts.c: 130: adcbuffer[1] = roundDist;
  7628  000F78  C041  F167         	movff	adc_int_handler@roundDist,_adcbuffer+1
  7629                           
  7630                           ;user_interrupts.c: 131: SetChanADC(0b10010111);
  7631  000F7C  0E97               	movlw	151
  7632  000F7E  EC73  F016         	call	i1_SetChanADC
  7633                           
  7634                           ;user_interrupts.c: 132: }
  7635  000F82  0012               	return	
  7636  000F84                     i1l548:
  7637                           
  7638                           ;user_interrupts.c: 133: else {
  7639                           ;user_interrupts.c: 134: adcbuffer[2] = roundDist;
  7640  000F84  C041  F168         	movff	adc_int_handler@roundDist,_adcbuffer+2
  7641                           
  7642                           ;user_interrupts.c: 135: SetChanADC(0b10011111);
  7643  000F88  0E9F               	movlw	159
  7644  000F8A  EC73  F016         	call	i1_SetChanADC
  7645  000F8E  0012               	return	
  7646  000F90                     __end_of_adc_int_handler:
  7647                           	opt stack 0
  7648                           pclatu	equ	0xFFB
  7649                           pclath	equ	0xFFA
  7650                           tblptru	equ	0xFF8
  7651                           tblptrh	equ	0xFF7
  7652                           tblptrl	equ	0xFF6
  7653                           tablat	equ	0xFF5
  7654                           prodh	equ	0xFF4
  7655                           prodl	equ	0xFF3
  7656                           intcon	equ	0xFF2
  7657                           intcon2	equ	0xFF1
  7658                           postinc0	equ	0xFEE
  7659                           fsr0h	equ	0xFEA
  7660                           fsr0l	equ	0xFE9
  7661                           wreg	equ	0xFE8
  7662                           indf1	equ	0xFE7
  7663                           postinc1	equ	0xFE6
  7664                           postdec1	equ	0xFE5
  7665                           fsr1h	equ	0xFE2
  7666                           fsr1l	equ	0xFE1
  7667                           bsr	equ	0xFE0
  7668                           indf2	equ	0xFDF
  7669                           postinc2	equ	0xFDE
  7670                           postdec2	equ	0xFDD
  7671                           fsr2h	equ	0xFDA
  7672                           fsr2l	equ	0xFD9
  7673                           status	equ	0xFD8
  7674                           
  7675 ;; *************** function i1___awmod *****************
  7676 ;; Defined at:
  7677 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;  dividend        2    0[COMRAM] int 
  7680 ;;  divisor         2    2[COMRAM] int 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;  __awmod         1    6[COMRAM] unsigned char 
  7683 ;;  __awmod         1    5[COMRAM] unsigned char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  2    0[COMRAM] int 
  7686 ;; Registers used:
  7687 ;;		wreg, status,2, status,0, prodl
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7693 ;;      Params:         4       0       0       0       0
  7694 ;;      Locals:         2       0       0       0       0
  7695 ;;      Temps:          1       0       0       0       0
  7696 ;;      Totals:         7       0       0       0       0
  7697 ;;Total ram usage:        7 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:    6
  7700 ;; This function calls:
  7701 ;;		Nothing
  7702 ;; This function is called by:
  7703 ;;		_adc_int_handler
  7704 ;;		i1_send_msg
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text45
  7709  001F7A                     __ptext45:
  7710                           	opt stack 0
  7711  001F7A                     i1___awmod:
  7712                           	opt stack 16
  7713                           
  7714                           ;incstack = 0
  7715  001F7A  6E05               	movwf	??i1___awmod& (0+255),c
  7716  001F7C  0E00               	movlw	0
  7717  001F7E  6E07               	movwf	i1___awmod@sign,c
  7718  001F80  5005               	movf	??i1___awmod& (0+255),w,c
  7719  001F82  5002               	movf	i1___awmod@dividend+1,w,c
  7720  001F84  0A80               	xorlw	128
  7721  001F86  6EF3               	movwf	prodl,c
  7722  001F88  0E80               	movlw	128
  7723  001F8A  5CF3               	subwf	prodl,w,c
  7724  001F8C  0E00               	movlw	0
  7725  001F8E  B4D8               	btfsc	status,2,c
  7726  001F90  5C01               	subwf	i1___awmod@dividend,w,c
  7727  001F92  B0D8               	btfsc	status,0,c
  7728  001F94  D008               	goto	i1l4322
  7729  001F96  6C01               	negf	i1___awmod@dividend,c
  7730  001F98  1E02               	comf	i1___awmod@dividend+1,f,c
  7731  001F9A  B0D8               	btfsc	status,0,c
  7732  001F9C  2A02               	incf	i1___awmod@dividend+1,f,c
  7733  001F9E  6E05               	movwf	??i1___awmod& (0+255),c
  7734  001FA0  0E01               	movlw	1
  7735  001FA2  6E07               	movwf	i1___awmod@sign,c
  7736  001FA4  5005               	movf	??i1___awmod& (0+255),w,c
  7737  001FA6                     i1l4322:
  7738  001FA6  5004               	movf	i1___awmod@divisor+1,w,c
  7739  001FA8  0A80               	xorlw	128
  7740  001FAA  6EF3               	movwf	prodl,c
  7741  001FAC  0E80               	movlw	128
  7742  001FAE  5CF3               	subwf	prodl,w,c
  7743  001FB0  0E00               	movlw	0
  7744  001FB2  B4D8               	btfsc	status,2,c
  7745  001FB4  5C03               	subwf	i1___awmod@divisor,w,c
  7746  001FB6  B0D8               	btfsc	status,0,c
  7747  001FB8  D004               	goto	i1l4326
  7748  001FBA  6C03               	negf	i1___awmod@divisor,c
  7749  001FBC  1E04               	comf	i1___awmod@divisor+1,f,c
  7750  001FBE  B0D8               	btfsc	status,0,c
  7751  001FC0  2A04               	incf	i1___awmod@divisor+1,f,c
  7752  001FC2                     i1l4326:
  7753  001FC2  5004               	movf	i1___awmod@divisor+1,w,c
  7754  001FC4  1003               	iorwf	i1___awmod@divisor,w,c
  7755  001FC6  B4D8               	btfsc	status,2,c
  7756  001FC8  D01A               	goto	i1l4342
  7757  001FCA  6E05               	movwf	??i1___awmod& (0+255),c
  7758  001FCC  0E01               	movlw	1
  7759  001FCE  6E06               	movwf	i1___awmod@counter,c
  7760  001FD0  5005               	movf	??i1___awmod& (0+255),w,c
  7761  001FD2  D004               	goto	i1l4332
  7762  001FD4                     i1l4330:
  7763  001FD4  90D8               	bcf	status,0,c
  7764  001FD6  3603               	rlcf	i1___awmod@divisor,f,c
  7765  001FD8  3604               	rlcf	i1___awmod@divisor+1,f,c
  7766  001FDA  2A06               	incf	i1___awmod@counter,f,c
  7767  001FDC                     i1l4332:
  7768  001FDC  AE04               	btfss	i1___awmod@divisor+1,7,c
  7769  001FDE  D7FA               	goto	i1l4330
  7770  001FE0                     i1l4334:
  7771  001FE0  5003               	movf	i1___awmod@divisor,w,c
  7772  001FE2  5C01               	subwf	i1___awmod@dividend,w,c
  7773  001FE4  5004               	movf	i1___awmod@divisor+1,w,c
  7774  001FE6  5802               	subwfb	i1___awmod@dividend+1,w,c
  7775  001FE8  A0D8               	btfss	status,0,c
  7776  001FEA  D004               	goto	i1l4338
  7777  001FEC  5003               	movf	i1___awmod@divisor,w,c
  7778  001FEE  5E01               	subwf	i1___awmod@dividend,f,c
  7779  001FF0  5004               	movf	i1___awmod@divisor+1,w,c
  7780  001FF2  5A02               	subwfb	i1___awmod@dividend+1,f,c
  7781  001FF4                     i1l4338:
  7782  001FF4  90D8               	bcf	status,0,c
  7783  001FF6  3204               	rrcf	i1___awmod@divisor+1,f,c
  7784  001FF8  3203               	rrcf	i1___awmod@divisor,f,c
  7785  001FFA  2E06               	decfsz	i1___awmod@counter,f,c
  7786  001FFC  D7F1               	goto	i1l4334
  7787  001FFE                     i1l4342:
  7788  001FFE  5007               	movf	i1___awmod@sign,w,c
  7789  002000  B4D8               	btfsc	status,2,c
  7790  002002  D004               	goto	i1l4346
  7791  002004  6C01               	negf	i1___awmod@dividend,c
  7792  002006  1E02               	comf	i1___awmod@dividend+1,f,c
  7793  002008  B0D8               	btfsc	status,0,c
  7794  00200A  2A02               	incf	i1___awmod@dividend+1,f,c
  7795  00200C                     i1l4346:
  7796  00200C  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  7797  002010  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  7798  002014  0012               	return	
  7799  002016                     __end_ofi1___awmod:
  7800                           	opt stack 0
  7801                           pclatu	equ	0xFFB
  7802                           pclath	equ	0xFFA
  7803                           tblptru	equ	0xFF8
  7804                           tblptrh	equ	0xFF7
  7805                           tblptrl	equ	0xFF6
  7806                           tablat	equ	0xFF5
  7807                           prodh	equ	0xFF4
  7808                           prodl	equ	0xFF3
  7809                           intcon	equ	0xFF2
  7810                           intcon2	equ	0xFF1
  7811                           postinc0	equ	0xFEE
  7812                           fsr0h	equ	0xFEA
  7813                           fsr0l	equ	0xFE9
  7814                           wreg	equ	0xFE8
  7815                           indf1	equ	0xFE7
  7816                           postinc1	equ	0xFE6
  7817                           postdec1	equ	0xFE5
  7818                           fsr1h	equ	0xFE2
  7819                           fsr1l	equ	0xFE1
  7820                           bsr	equ	0xFE0
  7821                           indf2	equ	0xFDF
  7822                           postinc2	equ	0xFDE
  7823                           postdec2	equ	0xFDD
  7824                           fsr2h	equ	0xFDA
  7825                           fsr2l	equ	0xFD9
  7826                           status	equ	0xFD8
  7827                           
  7828 ;; *************** function i1_SetChanADC *****************
  7829 ;; Defined at:
  7830 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;  channel         1    wreg     unsigned char 
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;  channel         1    1[COMRAM] unsigned char 
  7835 ;; Return value:  Size  Location     Type
  7836 ;;		None               void
  7837 ;; Registers used:
  7838 ;;		wreg, status,2, status,0
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7844 ;;      Params:         0       0       0       0       0
  7845 ;;      Locals:         1       0       0       0       0
  7846 ;;      Temps:          1       0       0       0       0
  7847 ;;      Totals:         2       0       0       0       0
  7848 ;;Total ram usage:        2 bytes
  7849 ;; Hardware stack levels used:    1
  7850 ;; Hardware stack levels required when called:    6
  7851 ;; This function calls:
  7852 ;;		Nothing
  7853 ;; This function is called by:
  7854 ;;		_adc_int_handler
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858                           	psect	text46
  7859  002CE6                     __ptext46:
  7860                           	opt stack 0
  7861  002CE6                     i1_SetChanADC:
  7862                           	opt stack 18
  7863                           
  7864                           ;incstack = 0
  7865                           ;i1SetChanADC@channel stored from wreg
  7866  002CE6  CFE8 F002          	movff	wreg,i1SetChanADC@channel
  7867  002CEA  CFC2 F001          	movff	4034,??i1_SetChanADC	;volatile
  7868  002CEE  0EC3               	movlw	195
  7869  002CF0  1601               	andwf	??i1_SetChanADC,f,c
  7870  002CF2  90D8               	bcf	status,0,c
  7871  002CF4  3002               	rrcf	i1SetChanADC@channel,w,c
  7872  002CF6  0B3C               	andlw	60
  7873  002CF8  1001               	iorwf	??i1_SetChanADC,w,c
  7874  002CFA  6EC2               	movwf	4034,c	;volatile
  7875  002CFC  0012               	return	
  7876  002CFE                     __end_ofi1_SetChanADC:
  7877                           	opt stack 0
  7878                           pclatu	equ	0xFFB
  7879                           pclath	equ	0xFFA
  7880                           tblptru	equ	0xFF8
  7881                           tblptrh	equ	0xFF7
  7882                           tblptrl	equ	0xFF6
  7883                           tablat	equ	0xFF5
  7884                           prodh	equ	0xFF4
  7885                           prodl	equ	0xFF3
  7886                           intcon	equ	0xFF2
  7887                           intcon2	equ	0xFF1
  7888                           postinc0	equ	0xFEE
  7889                           fsr0h	equ	0xFEA
  7890                           fsr0l	equ	0xFE9
  7891                           wreg	equ	0xFE8
  7892                           indf1	equ	0xFE7
  7893                           postinc1	equ	0xFE6
  7894                           postdec1	equ	0xFE5
  7895                           fsr1h	equ	0xFE2
  7896                           fsr1l	equ	0xFE1
  7897                           bsr	equ	0xFE0
  7898                           indf2	equ	0xFDF
  7899                           postinc2	equ	0xFDE
  7900                           postdec2	equ	0xFDD
  7901                           fsr2h	equ	0xFDA
  7902                           fsr2l	equ	0xFD9
  7903                           status	equ	0xFD8
  7904                           
  7905 ;; *************** function ___fttol *****************
  7906 ;; Defined at:
  7907 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;  f1              3    8[COMRAM] float 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  lval            4   18[COMRAM] unsigned long 
  7912 ;;  exp1            1   22[COMRAM] unsigned char 
  7913 ;;  sign1           1   17[COMRAM] unsigned char 
  7914 ;; Return value:  Size  Location     Type
  7915 ;;                  4    8[COMRAM] long 
  7916 ;; Registers used:
  7917 ;;		wreg, status,2, status,0
  7918 ;; Tracked objects:
  7919 ;;		On entry : 0/0
  7920 ;;		On exit  : 0/0
  7921 ;;		Unchanged: 0/0
  7922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7923 ;;      Params:         4       0       0       0       0
  7924 ;;      Locals:         6       0       0       0       0
  7925 ;;      Temps:          5       0       0       0       0
  7926 ;;      Totals:        15       0       0       0       0
  7927 ;;Total ram usage:       15 bytes
  7928 ;; Hardware stack levels used:    1
  7929 ;; Hardware stack levels required when called:    6
  7930 ;; This function calls:
  7931 ;;		Nothing
  7932 ;; This function is called by:
  7933 ;;		_adc_int_handler
  7934 ;; This function uses a non-reentrant model
  7935 ;;
  7936                           
  7937                           	psect	text47
  7938  0018A6                     __ptext47:
  7939                           	opt stack 0
  7940  0018A6                     ___fttol:
  7941                           	opt stack 18
  7942                           
  7943                           ;incstack = 0
  7944  0018A6  C00B  F00D         	movff	___fttol@f1+2,??___fttol
  7945  0018AA  6A0E               	clrf	(??___fttol+1)& (0+255),c
  7946  0018AC  6A0F               	clrf	(??___fttol+2)& (0+255),c
  7947  0018AE  340A               	rlcf	___fttol@f1+1,w,c
  7948  0018B0  360D               	rlcf	??___fttol& (0+255),f,c
  7949  0018B2  E301               	bnc	u384_21
  7950  0018B4  800E               	bsf	(??___fttol+1)& (0+255),0,c
  7951  0018B6                     u384_21:
  7952  0018B6  500D               	movf	??___fttol,w,c
  7953  0018B8  6E17               	movwf	___fttol@exp1,c
  7954  0018BA  6617               	tstfsz	___fttol@exp1& (0+255),c
  7955  0018BC  D009               	goto	i1l4498
  7956  0018BE  0E00               	movlw	0
  7957  0018C0  6E09               	movwf	?___fttol,c
  7958  0018C2  0E00               	movlw	0
  7959  0018C4  6E0A               	movwf	?___fttol+1,c
  7960  0018C6  0E00               	movlw	0
  7961  0018C8  6E0B               	movwf	?___fttol+2,c
  7962  0018CA  0E00               	movlw	0
  7963  0018CC  6E0C               	movwf	?___fttol+3,c
  7964  0018CE  0012               	return	
  7965  0018D0                     i1l4498:
  7966  0018D0  0E17               	movlw	23
  7967  0018D2  6E0D               	movwf	??___fttol& (0+255),c
  7968  0018D4  C009  F00E         	movff	___fttol@f1,??___fttol+1
  7969  0018D8  C00A  F00F         	movff	___fttol@f1+1,??___fttol+2
  7970  0018DC  C00B  F010         	movff	___fttol@f1+2,??___fttol+3
  7971  0018E0  280D               	incf	??___fttol,w,c
  7972  0018E2  6E11               	movwf	(??___fttol+4)& (0+255),c
  7973  0018E4  D004               	goto	i1u386_20
  7974  0018E6                     i1u386_25:
  7975  0018E6  90D8               	bcf	status,0,c
  7976  0018E8  3210               	rrcf	??___fttol+3,f,c
  7977  0018EA  320F               	rrcf	??___fttol+2,f,c
  7978  0018EC  320E               	rrcf	??___fttol+1,f,c
  7979  0018EE                     i1u386_20:
  7980  0018EE  2E11               	decfsz	(??___fttol+4)& (0+255),f,c
  7981  0018F0  D7FA               	goto	i1u386_25
  7982  0018F2  500E               	movf	??___fttol+1,w,c
  7983  0018F4  6E12               	movwf	___fttol@sign1,c
  7984  0018F6  8E0A               	bsf	___fttol@f1+1,7,c
  7985  0018F8  0EFF               	movlw	255
  7986  0018FA  1609               	andwf	___fttol@f1,f,c
  7987  0018FC  0EFF               	movlw	255
  7988  0018FE  160A               	andwf	___fttol@f1+1,f,c
  7989  001900  0E00               	movlw	0
  7990  001902  160B               	andwf	___fttol@f1+2,f,c
  7991  001904  5009               	movf	___fttol@f1,w,c
  7992  001906  6E13               	movwf	___fttol@lval,c
  7993  001908  500A               	movf	___fttol@f1+1,w,c
  7994  00190A  6E14               	movwf	___fttol@lval+1,c
  7995  00190C  500B               	movf	___fttol@f1+2,w,c
  7996  00190E  6E15               	movwf	___fttol@lval+2,c
  7997  001910  6A16               	clrf	___fttol@lval+3,c
  7998  001912  0E8E               	movlw	142
  7999  001914  5E17               	subwf	___fttol@exp1,f,c
  8000  001916  AE17               	btfss	___fttol@exp1,7,c
  8001  001918  D019               	goto	i1l4520
  8002  00191A  5017               	movf	___fttol@exp1,w,c
  8003  00191C  0A80               	xorlw	128
  8004  00191E  6E0D               	movwf	??___fttol& (0+255),c
  8005  001920  0EF1               	movlw	241
  8006  001922  0A80               	xorlw	128
  8007  001924  5C0D               	subwf	??___fttol,w,c
  8008  001926  B0D8               	btfsc	status,0,c
  8009  001928  D009               	goto	i1l4516
  8010  00192A  0E00               	movlw	0
  8011  00192C  6E09               	movwf	?___fttol,c
  8012  00192E  0E00               	movlw	0
  8013  001930  6E0A               	movwf	?___fttol+1,c
  8014  001932  0E00               	movlw	0
  8015  001934  6E0B               	movwf	?___fttol+2,c
  8016  001936  0E00               	movlw	0
  8017  001938  6E0C               	movwf	?___fttol+3,c
  8018  00193A  0012               	return	
  8019  00193C                     i1l4516:
  8020  00193C  90D8               	bcf	status,0,c
  8021  00193E  3216               	rrcf	___fttol@lval+3,f,c
  8022  001940  3215               	rrcf	___fttol@lval+2,f,c
  8023  001942  3214               	rrcf	___fttol@lval+1,f,c
  8024  001944  3213               	rrcf	___fttol@lval,f,c
  8025  001946  3E17               	incfsz	___fttol@exp1,f,c
  8026  001948  D7F9               	goto	i1l4516
  8027  00194A  D014               	goto	i1l4530
  8028  00194C                     i1l4520:
  8029  00194C  0E17               	movlw	23
  8030  00194E  6417               	cpfsgt	___fttol@exp1,c
  8031  001950  D00F               	goto	i1l4528
  8032  001952  0E00               	movlw	0
  8033  001954  6E09               	movwf	?___fttol,c
  8034  001956  0E00               	movlw	0
  8035  001958  6E0A               	movwf	?___fttol+1,c
  8036  00195A  0E00               	movlw	0
  8037  00195C  6E0B               	movwf	?___fttol+2,c
  8038  00195E  0E00               	movlw	0
  8039  001960  6E0C               	movwf	?___fttol+3,c
  8040  001962  0012               	return	
  8041  001964                     i1l4526:
  8042  001964  90D8               	bcf	status,0,c
  8043  001966  3613               	rlcf	___fttol@lval,f,c
  8044  001968  3614               	rlcf	___fttol@lval+1,f,c
  8045  00196A  3615               	rlcf	___fttol@lval+2,f,c
  8046  00196C  3616               	rlcf	___fttol@lval+3,f,c
  8047  00196E  0617               	decf	___fttol@exp1,f,c
  8048  001970                     i1l4528:
  8049  001970  6617               	tstfsz	___fttol@exp1,c
  8050  001972  D7F8               	goto	i1l4526
  8051  001974                     i1l4530:
  8052  001974  5012               	movf	___fttol@sign1,w,c
  8053  001976  B4D8               	btfsc	status,2,c
  8054  001978  D008               	goto	i1l4534
  8055  00197A  1E16               	comf	___fttol@lval+3,f,c
  8056  00197C  1E15               	comf	___fttol@lval+2,f,c
  8057  00197E  1E14               	comf	___fttol@lval+1,f,c
  8058  001980  6C13               	negf	___fttol@lval,c
  8059  001982  0E00               	movlw	0
  8060  001984  2214               	addwfc	___fttol@lval+1,f,c
  8061  001986  2215               	addwfc	___fttol@lval+2,f,c
  8062  001988  2216               	addwfc	___fttol@lval+3,f,c
  8063  00198A                     i1l4534:
  8064  00198A  C013  F009         	movff	___fttol@lval,?___fttol
  8065  00198E  C014  F00A         	movff	___fttol@lval+1,?___fttol+1
  8066  001992  C015  F00B         	movff	___fttol@lval+2,?___fttol+2
  8067  001996  C016  F00C         	movff	___fttol@lval+3,?___fttol+3
  8068  00199A  0012               	return	
  8069  00199C                     __end_of___fttol:
  8070                           	opt stack 0
  8071                           pclatu	equ	0xFFB
  8072                           pclath	equ	0xFFA
  8073                           tblptru	equ	0xFF8
  8074                           tblptrh	equ	0xFF7
  8075                           tblptrl	equ	0xFF6
  8076                           tablat	equ	0xFF5
  8077                           prodh	equ	0xFF4
  8078                           prodl	equ	0xFF3
  8079                           intcon	equ	0xFF2
  8080                           intcon2	equ	0xFF1
  8081                           postinc0	equ	0xFEE
  8082                           fsr0h	equ	0xFEA
  8083                           fsr0l	equ	0xFE9
  8084                           wreg	equ	0xFE8
  8085                           indf1	equ	0xFE7
  8086                           postinc1	equ	0xFE6
  8087                           postdec1	equ	0xFE5
  8088                           fsr1h	equ	0xFE2
  8089                           fsr1l	equ	0xFE1
  8090                           bsr	equ	0xFE0
  8091                           indf2	equ	0xFDF
  8092                           postinc2	equ	0xFDE
  8093                           postdec2	equ	0xFDD
  8094                           fsr2h	equ	0xFDA
  8095                           fsr2l	equ	0xFD9
  8096                           status	equ	0xFD8
  8097                           
  8098 ;; *************** function ___ftmul *****************
  8099 ;; Defined at:
  8100 ;;		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftmul.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;  f1              3   13[COMRAM] float 
  8103 ;;  f2              3   16[COMRAM] float 
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;  f3_as_produc    3   23[COMRAM] unsigned um
  8106 ;;  sign            1   27[COMRAM] unsigned char 
  8107 ;;  cntr            1   26[COMRAM] unsigned char 
  8108 ;;  exp             1   22[COMRAM] unsigned char 
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  3   13[COMRAM] float 
  8111 ;; Registers used:
  8112 ;;		wreg, status,2, status,0, cstack
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8118 ;;      Params:         6       0       0       0       0
  8119 ;;      Locals:         6       0       0       0       0
  8120 ;;      Temps:          3       0       0       0       0
  8121 ;;      Totals:        15       0       0       0       0
  8122 ;;Total ram usage:       15 bytes
  8123 ;; Hardware stack levels used:    1
  8124 ;; Hardware stack levels required when called:    7
  8125 ;; This function calls:
  8126 ;;		___ftpack
  8127 ;; This function is called by:
  8128 ;;		_adc_int_handler
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text48
  8133  0017AE                     __ptext48:
  8134                           	opt stack 0
  8135  0017AE                     ___ftmul:
  8136                           	opt stack 17
  8137                           
  8138                           ;incstack = 0
  8139  0017AE  C010  F014         	movff	___ftmul@f1+2,??___ftmul
  8140  0017B2  6A15               	clrf	(??___ftmul+1)& (0+255),c
  8141  0017B4  6A16               	clrf	(??___ftmul+2)& (0+255),c
  8142  0017B6  340F               	rlcf	___ftmul@f1+1,w,c
  8143  0017B8  3614               	rlcf	??___ftmul& (0+255),f,c
  8144  0017BA  E301               	bnc	u404_21
  8145  0017BC  8015               	bsf	(??___ftmul+1)& (0+255),0,c
  8146  0017BE                     u404_21:
  8147  0017BE  5014               	movf	??___ftmul,w,c
  8148  0017C0  6E17               	movwf	___ftmul@exp,c
  8149  0017C2  6617               	tstfsz	___ftmul@exp& (0+255),c
  8150  0017C4  D007               	goto	i1l4656
  8151  0017C6  0E00               	movlw	0
  8152  0017C8  6E0E               	movwf	?___ftmul,c
  8153  0017CA  0E00               	movlw	0
  8154  0017CC  6E0F               	movwf	?___ftmul+1,c
  8155  0017CE  0E00               	movlw	0
  8156  0017D0  6E10               	movwf	?___ftmul+2,c
  8157  0017D2  0012               	return	
  8158  0017D4                     i1l4656:
  8159  0017D4  C013  F014         	movff	___ftmul@f2+2,??___ftmul
  8160  0017D8  6A15               	clrf	(??___ftmul+1)& (0+255),c
  8161  0017DA  6A16               	clrf	(??___ftmul+2)& (0+255),c
  8162  0017DC  3412               	rlcf	___ftmul@f2+1,w,c
  8163  0017DE  3614               	rlcf	??___ftmul& (0+255),f,c
  8164  0017E0  E301               	bnc	u406_21
  8165  0017E2  8015               	bsf	(??___ftmul+1)& (0+255),0,c
  8166  0017E4                     u406_21:
  8167  0017E4  5014               	movf	??___ftmul,w,c
  8168  0017E6  6E1C               	movwf	___ftmul@sign,c
  8169  0017E8  661C               	tstfsz	___ftmul@sign& (0+255),c
  8170  0017EA  D007               	goto	i1l4662
  8171  0017EC  0E00               	movlw	0
  8172  0017EE  6E0E               	movwf	?___ftmul,c
  8173  0017F0  0E00               	movlw	0
  8174  0017F2  6E0F               	movwf	?___ftmul+1,c
  8175  0017F4  0E00               	movlw	0
  8176  0017F6  6E10               	movwf	?___ftmul+2,c
  8177  0017F8  0012               	return	
  8178  0017FA                     i1l4662:
  8179  0017FA  501C               	movf	___ftmul@sign,w,c
  8180  0017FC  0F7B               	addlw	123
  8181  0017FE  2617               	addwf	___ftmul@exp,f,c
  8182  001800  C010  F01C         	movff	___ftmul@f1+2,___ftmul@sign
  8183  001804  5013               	movf	___ftmul@f2+2,w,c
  8184  001806  1A1C               	xorwf	___ftmul@sign,f,c
  8185  001808  0E80               	movlw	128
  8186  00180A  161C               	andwf	___ftmul@sign,f,c
  8187  00180C  8E0F               	bsf	___ftmul@f1+1,7,c
  8188  00180E  8E12               	bsf	___ftmul@f2+1,7,c
  8189  001810  0EFF               	movlw	255
  8190  001812  1611               	andwf	___ftmul@f2,f,c
  8191  001814  0EFF               	movlw	255
  8192  001816  1612               	andwf	___ftmul@f2+1,f,c
  8193  001818  0E00               	movlw	0
  8194  00181A  1613               	andwf	___ftmul@f2+2,f,c
  8195  00181C  0E00               	movlw	0
  8196  00181E  6E18               	movwf	___ftmul@f3_as_product,c
  8197  001820  0E00               	movlw	0
  8198  001822  6E19               	movwf	___ftmul@f3_as_product+1,c
  8199  001824  0E00               	movlw	0
  8200  001826  6E1A               	movwf	___ftmul@f3_as_product+2,c
  8201  001828  6E14               	movwf	??___ftmul& (0+255),c
  8202  00182A  0E07               	movlw	7
  8203  00182C  6E1B               	movwf	___ftmul@cntr,c
  8204  00182E  5014               	movf	??___ftmul& (0+255),w,c
  8205  001830                     i1l4676:
  8206  001830  A00E               	btfss	___ftmul@f1,0,c
  8207  001832  D006               	goto	i1l4680
  8208  001834  5011               	movf	___ftmul@f2,w,c
  8209  001836  2618               	addwf	___ftmul@f3_as_product,f,c
  8210  001838  5012               	movf	___ftmul@f2+1,w,c
  8211  00183A  2219               	addwfc	___ftmul@f3_as_product+1,f,c
  8212  00183C  5013               	movf	___ftmul@f2+2,w,c
  8213  00183E  221A               	addwfc	___ftmul@f3_as_product+2,f,c
  8214  001840                     i1l4680:
  8215  001840  90D8               	bcf	status,0,c
  8216  001842  3210               	rrcf	___ftmul@f1+2,f,c
  8217  001844  320F               	rrcf	___ftmul@f1+1,f,c
  8218  001846  320E               	rrcf	___ftmul@f1,f,c
  8219  001848  90D8               	bcf	status,0,c
  8220  00184A  3611               	rlcf	___ftmul@f2,f,c
  8221  00184C  3612               	rlcf	___ftmul@f2+1,f,c
  8222  00184E  3613               	rlcf	___ftmul@f2+2,f,c
  8223  001850  2E1B               	decfsz	___ftmul@cntr,f,c
  8224  001852  D7EE               	goto	i1l4676
  8225  001854  6E14               	movwf	??___ftmul& (0+255),c
  8226  001856  0E09               	movlw	9
  8227  001858  6E1B               	movwf	___ftmul@cntr,c
  8228  00185A  5014               	movf	??___ftmul& (0+255),w,c
  8229  00185C                     i1l4686:
  8230  00185C  A00E               	btfss	___ftmul@f1,0,c
  8231  00185E  D006               	goto	i1l4690
  8232  001860  5011               	movf	___ftmul@f2,w,c
  8233  001862  2618               	addwf	___ftmul@f3_as_product,f,c
  8234  001864  5012               	movf	___ftmul@f2+1,w,c
  8235  001866  2219               	addwfc	___ftmul@f3_as_product+1,f,c
  8236  001868  5013               	movf	___ftmul@f2+2,w,c
  8237  00186A  221A               	addwfc	___ftmul@f3_as_product+2,f,c
  8238  00186C                     i1l4690:
  8239  00186C  90D8               	bcf	status,0,c
  8240  00186E  3210               	rrcf	___ftmul@f1+2,f,c
  8241  001870  320F               	rrcf	___ftmul@f1+1,f,c
  8242  001872  320E               	rrcf	___ftmul@f1,f,c
  8243  001874  90D8               	bcf	status,0,c
  8244  001876  321A               	rrcf	___ftmul@f3_as_product+2,f,c
  8245  001878  3219               	rrcf	___ftmul@f3_as_product+1,f,c
  8246  00187A  3218               	rrcf	___ftmul@f3_as_product,f,c
  8247  00187C  2E1B               	decfsz	___ftmul@cntr,f,c
  8248  00187E  D7EE               	goto	i1l4686
  8249  001880  C018  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  8250  001884  C019  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8251  001888  C01A  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8252  00188C  C017  F004         	movff	___ftmul@exp,___ftpack@exp
  8253  001890  C01C  F005         	movff	___ftmul@sign,___ftpack@sign
  8254  001894  EC1B  F00F         	call	___ftpack	;wreg free
  8255  001898  C001  F00E         	movff	?___ftpack,?___ftmul
  8256  00189C  C002  F00F         	movff	?___ftpack+1,?___ftmul+1
  8257  0018A0  C003  F010         	movff	?___ftpack+2,?___ftmul+2
  8258  0018A4  0012               	return	
  8259  0018A6                     __end_of___ftmul:
  8260                           	opt stack 0
  8261                           pclatu	equ	0xFFB
  8262                           pclath	equ	0xFFA
  8263                           tblptru	equ	0xFF8
  8264                           tblptrh	equ	0xFF7
  8265                           tblptrl	equ	0xFF6
  8266                           tablat	equ	0xFF5
  8267                           prodh	equ	0xFF4
  8268                           prodl	equ	0xFF3
  8269                           intcon	equ	0xFF2
  8270                           intcon2	equ	0xFF1
  8271                           postinc0	equ	0xFEE
  8272                           fsr0h	equ	0xFEA
  8273                           fsr0l	equ	0xFE9
  8274                           wreg	equ	0xFE8
  8275                           indf1	equ	0xFE7
  8276                           postinc1	equ	0xFE6
  8277                           postdec1	equ	0xFE5
  8278                           fsr1h	equ	0xFE2
  8279                           fsr1l	equ	0xFE1
  8280                           bsr	equ	0xFE0
  8281                           indf2	equ	0xFDF
  8282                           postinc2	equ	0xFDE
  8283                           postdec2	equ	0xFDD
  8284                           fsr2h	equ	0xFDA
  8285                           fsr2l	equ	0xFD9
  8286                           status	equ	0xFD8
  8287                           
  8288 ;; *************** function ___ftge *****************
  8289 ;; Defined at:
  8290 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftge.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;  ff1             3    0[COMRAM] float 
  8293 ;;  ff2             3    3[COMRAM] float 
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;		None
  8296 ;; Return value:  Size  Location     Type
  8297 ;;		None               void
  8298 ;; Registers used:
  8299 ;;		wreg, status,2, status,0
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8305 ;;      Params:         6       0       0       0       0
  8306 ;;      Locals:         0       0       0       0       0
  8307 ;;      Temps:          3       0       0       0       0
  8308 ;;      Totals:         9       0       0       0       0
  8309 ;;Total ram usage:        9 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:    6
  8312 ;; This function calls:
  8313 ;;		Nothing
  8314 ;; This function is called by:
  8315 ;;		_adc_int_handler
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           	psect	text49
  8320  0021CE                     __ptext49:
  8321                           	opt stack 0
  8322  0021CE                     ___ftge:
  8323                           	opt stack 18
  8324                           
  8325                           ;incstack = 0
  8326  0021CE  AE03               	btfss	___ftge@ff1+2,7,c
  8327  0021D0  D016               	goto	i1l4158
  8328  0021D2  C001  F007         	movff	___ftge@ff1,??___ftge
  8329  0021D6  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  8330  0021DA  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  8331  0021DE  1E07               	comf	??___ftge,f,c
  8332  0021E0  1E08               	comf	??___ftge+1,f,c
  8333  0021E2  1E09               	comf	??___ftge+2,f,c
  8334  0021E4  2A07               	incf	??___ftge,f,c
  8335  0021E6  0E00               	movlw	0
  8336  0021E8  2208               	addwfc	??___ftge+1,f,c
  8337  0021EA  2209               	addwfc	??___ftge+2,f,c
  8338  0021EC  0E00               	movlw	0
  8339  0021EE  2407               	addwf	??___ftge,w,c
  8340  0021F0  6E01               	movwf	___ftge@ff1,c
  8341  0021F2  0E00               	movlw	0
  8342  0021F4  2008               	addwfc	??___ftge+1,w,c
  8343  0021F6  6E02               	movwf	___ftge@ff1+1,c
  8344  0021F8  0E80               	movlw	128
  8345  0021FA  2009               	addwfc	??___ftge+2,w,c
  8346  0021FC  6E03               	movwf	___ftge@ff1+2,c
  8347  0021FE                     i1l4158:
  8348  0021FE  AE06               	btfss	___ftge@ff2+2,7,c
  8349  002200  D016               	goto	i1l4162
  8350  002202  C004  F007         	movff	___ftge@ff2,??___ftge
  8351  002206  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  8352  00220A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  8353  00220E  1E07               	comf	??___ftge,f,c
  8354  002210  1E08               	comf	??___ftge+1,f,c
  8355  002212  1E09               	comf	??___ftge+2,f,c
  8356  002214  2A07               	incf	??___ftge,f,c
  8357  002216  0E00               	movlw	0
  8358  002218  2208               	addwfc	??___ftge+1,f,c
  8359  00221A  2209               	addwfc	??___ftge+2,f,c
  8360  00221C  0E00               	movlw	0
  8361  00221E  2407               	addwf	??___ftge,w,c
  8362  002220  6E04               	movwf	___ftge@ff2,c
  8363  002222  0E00               	movlw	0
  8364  002224  2008               	addwfc	??___ftge+1,w,c
  8365  002226  6E05               	movwf	___ftge@ff2+1,c
  8366  002228  0E80               	movlw	128
  8367  00222A  2009               	addwfc	??___ftge+2,w,c
  8368  00222C  6E06               	movwf	___ftge@ff2+2,c
  8369  00222E                     i1l4162:
  8370  00222E  0E00               	movlw	0
  8371  002230  1A01               	xorwf	___ftge@ff1,f,c
  8372  002232  0E00               	movlw	0
  8373  002234  1A02               	xorwf	___ftge@ff1+1,f,c
  8374  002236  0E80               	movlw	128
  8375  002238  1A03               	xorwf	___ftge@ff1+2,f,c
  8376  00223A  0E00               	movlw	0
  8377  00223C  1A04               	xorwf	___ftge@ff2,f,c
  8378  00223E  0E00               	movlw	0
  8379  002240  1A05               	xorwf	___ftge@ff2+1,f,c
  8380  002242  0E80               	movlw	128
  8381  002244  1A06               	xorwf	___ftge@ff2+2,f,c
  8382  002246  5004               	movf	___ftge@ff2,w,c
  8383  002248  5C01               	subwf	___ftge@ff1,w,c
  8384  00224A  5005               	movf	___ftge@ff2+1,w,c
  8385  00224C  5802               	subwfb	___ftge@ff1+1,w,c
  8386  00224E  5006               	movf	___ftge@ff2+2,w,c
  8387  002250  5803               	subwfb	___ftge@ff1+2,w,c
  8388  002252  B0D8               	btfsc	status,0,c
  8389  002254  D002               	goto	i1l4168
  8390  002256  90D8               	bcf	status,0,c
  8391  002258  0012               	return	
  8392  00225A                     i1l4168:
  8393  00225A  80D8               	bsf	status,0,c
  8394  00225C  0012               	return	
  8395  00225E                     __end_of___ftge:
  8396                           	opt stack 0
  8397                           pclatu	equ	0xFFB
  8398                           pclath	equ	0xFFA
  8399                           tblptru	equ	0xFF8
  8400                           tblptrh	equ	0xFF7
  8401                           tblptrl	equ	0xFF6
  8402                           tablat	equ	0xFF5
  8403                           prodh	equ	0xFF4
  8404                           prodl	equ	0xFF3
  8405                           intcon	equ	0xFF2
  8406                           intcon2	equ	0xFF1
  8407                           postinc0	equ	0xFEE
  8408                           fsr0h	equ	0xFEA
  8409                           fsr0l	equ	0xFE9
  8410                           wreg	equ	0xFE8
  8411                           indf1	equ	0xFE7
  8412                           postinc1	equ	0xFE6
  8413                           postdec1	equ	0xFE5
  8414                           fsr1h	equ	0xFE2
  8415                           fsr1l	equ	0xFE1
  8416                           bsr	equ	0xFE0
  8417                           indf2	equ	0xFDF
  8418                           postinc2	equ	0xFDE
  8419                           postdec2	equ	0xFDD
  8420                           fsr2h	equ	0xFDA
  8421                           fsr2l	equ	0xFD9
  8422                           status	equ	0xFD8
  8423                           
  8424 ;; *************** function ___ftdiv *****************
  8425 ;; Defined at:
  8426 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftdiv.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;  f1              3   35[COMRAM] float 
  8429 ;;  f2              3   38[COMRAM] float 
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;  f3              3   45[COMRAM] float 
  8432 ;;  sign            1   49[COMRAM] unsigned char 
  8433 ;;  exp             1   48[COMRAM] unsigned char 
  8434 ;;  cntr            1   44[COMRAM] unsigned char 
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  3   35[COMRAM] float 
  8437 ;; Registers used:
  8438 ;;		wreg, status,2, status,0, cstack
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8444 ;;      Params:         6       0       0       0       0
  8445 ;;      Locals:         6       0       0       0       0
  8446 ;;      Temps:          3       0       0       0       0
  8447 ;;      Totals:        15       0       0       0       0
  8448 ;;Total ram usage:       15 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:    7
  8451 ;; This function calls:
  8452 ;;		___ftpack
  8453 ;; This function is called by:
  8454 ;;		_adc_int_handler
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text50
  8459  00199C                     __ptext50:
  8460                           	opt stack 0
  8461  00199C                     ___ftdiv:
  8462                           	opt stack 17
  8463                           
  8464                           ;incstack = 0
  8465  00199C  C026  F02A         	movff	___ftdiv@f1+2,??___ftdiv
  8466  0019A0  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  8467  0019A2  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  8468  0019A4  3425               	rlcf	___ftdiv@f1+1,w,c
  8469  0019A6  362A               	rlcf	??___ftdiv& (0+255),f,c
  8470  0019A8  E301               	bnc	u399_21
  8471  0019AA  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  8472  0019AC                     u399_21:
  8473  0019AC  502A               	movf	??___ftdiv,w,c
  8474  0019AE  6E31               	movwf	___ftdiv@exp,c
  8475  0019B0  6631               	tstfsz	___ftdiv@exp& (0+255),c
  8476  0019B2  D007               	goto	i1l4612
  8477  0019B4  0E00               	movlw	0
  8478  0019B6  6E24               	movwf	?___ftdiv,c
  8479  0019B8  0E00               	movlw	0
  8480  0019BA  6E25               	movwf	?___ftdiv+1,c
  8481  0019BC  0E00               	movlw	0
  8482  0019BE  6E26               	movwf	?___ftdiv+2,c
  8483  0019C0  0012               	return	
  8484  0019C2                     i1l4612:
  8485  0019C2  C029  F02A         	movff	___ftdiv@f2+2,??___ftdiv
  8486  0019C6  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  8487  0019C8  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  8488  0019CA  3428               	rlcf	___ftdiv@f2+1,w,c
  8489  0019CC  362A               	rlcf	??___ftdiv& (0+255),f,c
  8490  0019CE  E301               	bnc	u401_21
  8491  0019D0  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  8492  0019D2                     u401_21:
  8493  0019D2  502A               	movf	??___ftdiv,w,c
  8494  0019D4  6E32               	movwf	___ftdiv@sign,c
  8495  0019D6  6632               	tstfsz	___ftdiv@sign& (0+255),c
  8496  0019D8  D007               	goto	i1l4618
  8497  0019DA  0E00               	movlw	0
  8498  0019DC  6E24               	movwf	?___ftdiv,c
  8499  0019DE  0E00               	movlw	0
  8500  0019E0  6E25               	movwf	?___ftdiv+1,c
  8501  0019E2  0E00               	movlw	0
  8502  0019E4  6E26               	movwf	?___ftdiv+2,c
  8503  0019E6  0012               	return	
  8504  0019E8                     i1l4618:
  8505  0019E8  0E00               	movlw	0
  8506  0019EA  6E2E               	movwf	___ftdiv@f3,c
  8507  0019EC  0E00               	movlw	0
  8508  0019EE  6E2F               	movwf	___ftdiv@f3+1,c
  8509  0019F0  0E00               	movlw	0
  8510  0019F2  6E30               	movwf	___ftdiv@f3+2,c
  8511  0019F4  5032               	movf	___ftdiv@sign,w,c
  8512  0019F6  0F89               	addlw	137
  8513  0019F8  5E31               	subwf	___ftdiv@exp,f,c
  8514  0019FA  C026  F032         	movff	___ftdiv@f1+2,___ftdiv@sign
  8515  0019FE  5029               	movf	___ftdiv@f2+2,w,c
  8516  001A00  1A32               	xorwf	___ftdiv@sign,f,c
  8517  001A02  0E80               	movlw	128
  8518  001A04  1632               	andwf	___ftdiv@sign,f,c
  8519  001A06  8E25               	bsf	___ftdiv@f1+1,7,c
  8520  001A08  0EFF               	movlw	255
  8521  001A0A  1624               	andwf	___ftdiv@f1,f,c
  8522  001A0C  0EFF               	movlw	255
  8523  001A0E  1625               	andwf	___ftdiv@f1+1,f,c
  8524  001A10  0E00               	movlw	0
  8525  001A12  1626               	andwf	___ftdiv@f1+2,f,c
  8526  001A14  8E28               	bsf	___ftdiv@f2+1,7,c
  8527  001A16  0EFF               	movlw	255
  8528  001A18  1627               	andwf	___ftdiv@f2,f,c
  8529  001A1A  0EFF               	movlw	255
  8530  001A1C  1628               	andwf	___ftdiv@f2+1,f,c
  8531  001A1E  0E00               	movlw	0
  8532  001A20  1629               	andwf	___ftdiv@f2+2,f,c
  8533  001A22  6E2A               	movwf	??___ftdiv& (0+255),c
  8534  001A24  0E18               	movlw	24
  8535  001A26  6E2D               	movwf	___ftdiv@cntr,c
  8536  001A28  502A               	movf	??___ftdiv& (0+255),w,c
  8537  001A2A                     i1l1067:
  8538  001A2A  90D8               	bcf	status,0,c
  8539  001A2C  362E               	rlcf	___ftdiv@f3,f,c
  8540  001A2E  362F               	rlcf	___ftdiv@f3+1,f,c
  8541  001A30  3630               	rlcf	___ftdiv@f3+2,f,c
  8542  001A32  5027               	movf	___ftdiv@f2,w,c
  8543  001A34  5C24               	subwf	___ftdiv@f1,w,c
  8544  001A36  5028               	movf	___ftdiv@f2+1,w,c
  8545  001A38  5825               	subwfb	___ftdiv@f1+1,w,c
  8546  001A3A  5029               	movf	___ftdiv@f2+2,w,c
  8547  001A3C  5826               	subwfb	___ftdiv@f1+2,w,c
  8548  001A3E  A0D8               	btfss	status,0,c
  8549  001A40  D007               	goto	i1l1068
  8550  001A42  5027               	movf	___ftdiv@f2,w,c
  8551  001A44  5E24               	subwf	___ftdiv@f1,f,c
  8552  001A46  5028               	movf	___ftdiv@f2+1,w,c
  8553  001A48  5A25               	subwfb	___ftdiv@f1+1,f,c
  8554  001A4A  5029               	movf	___ftdiv@f2+2,w,c
  8555  001A4C  5A26               	subwfb	___ftdiv@f1+2,f,c
  8556  001A4E  802E               	bsf	___ftdiv@f3,0,c
  8557  001A50                     i1l1068:
  8558  001A50  90D8               	bcf	status,0,c
  8559  001A52  3624               	rlcf	___ftdiv@f1,f,c
  8560  001A54  3625               	rlcf	___ftdiv@f1+1,f,c
  8561  001A56  3626               	rlcf	___ftdiv@f1+2,f,c
  8562  001A58  2E2D               	decfsz	___ftdiv@cntr,f,c
  8563  001A5A  D7E7               	goto	i1l1067
  8564  001A5C  C02E  F001         	movff	___ftdiv@f3,___ftpack@arg
  8565  001A60  C02F  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8566  001A64  C030  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8567  001A68  C031  F004         	movff	___ftdiv@exp,___ftpack@exp
  8568  001A6C  C032  F005         	movff	___ftdiv@sign,___ftpack@sign
  8569  001A70  EC1B  F00F         	call	___ftpack	;wreg free
  8570  001A74  C001  F024         	movff	?___ftpack,?___ftdiv
  8571  001A78  C002  F025         	movff	?___ftpack+1,?___ftdiv+1
  8572  001A7C  C003  F026         	movff	?___ftpack+2,?___ftdiv+2
  8573  001A80  0012               	return	
  8574  001A82                     __end_of___ftdiv:
  8575                           	opt stack 0
  8576                           pclatu	equ	0xFFB
  8577                           pclath	equ	0xFFA
  8578                           tblptru	equ	0xFF8
  8579                           tblptrh	equ	0xFF7
  8580                           tblptrl	equ	0xFF6
  8581                           tablat	equ	0xFF5
  8582                           prodh	equ	0xFF4
  8583                           prodl	equ	0xFF3
  8584                           intcon	equ	0xFF2
  8585                           intcon2	equ	0xFF1
  8586                           postinc0	equ	0xFEE
  8587                           fsr0h	equ	0xFEA
  8588                           fsr0l	equ	0xFE9
  8589                           wreg	equ	0xFE8
  8590                           indf1	equ	0xFE7
  8591                           postinc1	equ	0xFE6
  8592                           postdec1	equ	0xFE5
  8593                           fsr1h	equ	0xFE2
  8594                           fsr1l	equ	0xFE1
  8595                           bsr	equ	0xFE0
  8596                           indf2	equ	0xFDF
  8597                           postinc2	equ	0xFDE
  8598                           postdec2	equ	0xFDD
  8599                           fsr2h	equ	0xFDA
  8600                           fsr2l	equ	0xFD9
  8601                           status	equ	0xFD8
  8602                           
  8603 ;; *************** function ___ftadd *****************
  8604 ;; Defined at:
  8605 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftadd.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;  f1              3   23[COMRAM] float 
  8608 ;;  f2              3   26[COMRAM] float 
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;  exp1            1   34[COMRAM] unsigned char 
  8611 ;;  exp2            1   33[COMRAM] unsigned char 
  8612 ;;  sign            1   32[COMRAM] unsigned char 
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  3   23[COMRAM] float 
  8615 ;; Registers used:
  8616 ;;		wreg, status,2, status,0, cstack
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8622 ;;      Params:         6       0       0       0       0
  8623 ;;      Locals:         3       0       0       0       0
  8624 ;;      Temps:          3       0       0       0       0
  8625 ;;      Totals:        12       0       0       0       0
  8626 ;;Total ram usage:       12 bytes
  8627 ;; Hardware stack levels used:    1
  8628 ;; Hardware stack levels required when called:    7
  8629 ;; This function calls:
  8630 ;;		___ftpack
  8631 ;; This function is called by:
  8632 ;;		_adc_int_handler
  8633 ;; This function uses a non-reentrant model
  8634 ;;
  8635                           
  8636                           	psect	text51
  8637  000C5A                     __ptext51:
  8638                           	opt stack 0
  8639  000C5A                     ___ftadd:
  8640                           	opt stack 17
  8641                           
  8642                           ;incstack = 0
  8643  000C5A  C01A  F01E         	movff	___ftadd@f1+2,??___ftadd
  8644  000C5E  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  8645  000C60  6A20               	clrf	(??___ftadd+2)& (0+255),c
  8646  000C62  3419               	rlcf	___ftadd@f1+1,w,c
  8647  000C64  361E               	rlcf	??___ftadd& (0+255),f,c
  8648  000C66  E301               	bnc	u362_21
  8649  000C68  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  8650  000C6A                     u362_21:
  8651  000C6A  501E               	movf	??___ftadd,w,c
  8652  000C6C  6E23               	movwf	___ftadd@exp1,c
  8653  000C6E  C01D  F01E         	movff	___ftadd@f2+2,??___ftadd
  8654  000C72  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  8655  000C74  6A20               	clrf	(??___ftadd+2)& (0+255),c
  8656  000C76  341C               	rlcf	___ftadd@f2+1,w,c
  8657  000C78  361E               	rlcf	??___ftadd& (0+255),f,c
  8658  000C7A  E301               	bnc	u363_21
  8659  000C7C  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  8660  000C7E                     u363_21:
  8661  000C7E  501E               	movf	??___ftadd,w,c
  8662  000C80  6E22               	movwf	___ftadd@exp2,c
  8663  000C82  5023               	movf	___ftadd@exp1,w,c
  8664  000C84  B4D8               	btfsc	status,2,c
  8665  000C86  D00C               	goto	i1l1033
  8666  000C88  5022               	movf	___ftadd@exp2,w,c
  8667  000C8A  5C23               	subwf	___ftadd@exp1,w,c
  8668  000C8C  B0D8               	btfsc	status,0,c
  8669  000C8E  D00F               	goto	i1l4418
  8670  000C90  5023               	movf	___ftadd@exp1,w,c
  8671  000C92  0800               	sublw	0
  8672  000C94  2422               	addwf	___ftadd@exp2,w,c
  8673  000C96  6E1E               	movwf	??___ftadd& (0+255),c
  8674  000C98  0E19               	movlw	25
  8675  000C9A  5C1E               	subwf	??___ftadd,w,c
  8676  000C9C  A0D8               	btfss	status,0,c
  8677  000C9E  D007               	goto	i1l4418
  8678  000CA0                     i1l1033:
  8679  000CA0  C01B  F018         	movff	___ftadd@f2,?___ftadd
  8680  000CA4  C01C  F019         	movff	___ftadd@f2+1,?___ftadd+1
  8681  000CA8  C01D  F01A         	movff	___ftadd@f2+2,?___ftadd+2
  8682  000CAC  0012               	return	
  8683  000CAE                     i1l4418:
  8684  000CAE  5022               	movf	___ftadd@exp2,w,c
  8685  000CB0  B4D8               	btfsc	status,2,c
  8686  000CB2  D00C               	goto	i1l1037
  8687  000CB4  5023               	movf	___ftadd@exp1,w,c
  8688  000CB6  5C22               	subwf	___ftadd@exp2,w,c
  8689  000CB8  B0D8               	btfsc	status,0,c
  8690  000CBA  D00F               	goto	i1l4424
  8691  000CBC  5022               	movf	___ftadd@exp2,w,c
  8692  000CBE  0800               	sublw	0
  8693  000CC0  2423               	addwf	___ftadd@exp1,w,c
  8694  000CC2  6E1E               	movwf	??___ftadd& (0+255),c
  8695  000CC4  0E19               	movlw	25
  8696  000CC6  5C1E               	subwf	??___ftadd,w,c
  8697  000CC8  A0D8               	btfss	status,0,c
  8698  000CCA  D007               	goto	i1l4424
  8699  000CCC                     i1l1037:
  8700  000CCC  C018  F018         	movff	___ftadd@f1,?___ftadd
  8701  000CD0  C019  F019         	movff	___ftadd@f1+1,?___ftadd+1
  8702  000CD4  C01A  F01A         	movff	___ftadd@f1+2,?___ftadd+2
  8703  000CD8  0012               	return	
  8704  000CDA                     i1l4424:
  8705  000CDA  6E1E               	movwf	??___ftadd& (0+255),c
  8706  000CDC  0E06               	movlw	6
  8707  000CDE  6E21               	movwf	___ftadd@sign,c
  8708  000CE0  501E               	movf	??___ftadd& (0+255),w,c
  8709  000CE2  BE1A               	btfsc	___ftadd@f1+2,7,c
  8710  000CE4  8E21               	bsf	___ftadd@sign,7,c
  8711  000CE6  BE1D               	btfsc	___ftadd@f2+2,7,c
  8712  000CE8  8C21               	bsf	___ftadd@sign,6,c
  8713  000CEA  8E19               	bsf	___ftadd@f1+1,7,c
  8714  000CEC  0EFF               	movlw	255
  8715  000CEE  1618               	andwf	___ftadd@f1,f,c
  8716  000CF0  0EFF               	movlw	255
  8717  000CF2  1619               	andwf	___ftadd@f1+1,f,c
  8718  000CF4  0E00               	movlw	0
  8719  000CF6  161A               	andwf	___ftadd@f1+2,f,c
  8720  000CF8  8E1C               	bsf	___ftadd@f2+1,7,c
  8721  000CFA  0EFF               	movlw	255
  8722  000CFC  161B               	andwf	___ftadd@f2,f,c
  8723  000CFE  0EFF               	movlw	255
  8724  000D00  161C               	andwf	___ftadd@f2+1,f,c
  8725  000D02  0E00               	movlw	0
  8726  000D04  161D               	andwf	___ftadd@f2+2,f,c
  8727  000D06  5022               	movf	___ftadd@exp2,w,c
  8728  000D08  5C23               	subwf	___ftadd@exp1,w,c
  8729  000D0A  B0D8               	btfsc	status,0,c
  8730  000D0C  D01A               	goto	i1l4450
  8731  000D0E                     i1l4440:
  8732  000D0E  90D8               	bcf	status,0,c
  8733  000D10  361B               	rlcf	___ftadd@f2,f,c
  8734  000D12  361C               	rlcf	___ftadd@f2+1,f,c
  8735  000D14  361D               	rlcf	___ftadd@f2+2,f,c
  8736  000D16  0622               	decf	___ftadd@exp2,f,c
  8737  000D18  5022               	movf	___ftadd@exp2,w,c
  8738  000D1A  1823               	xorwf	___ftadd@exp1,w,c
  8739  000D1C  B4D8               	btfsc	status,2,c
  8740  000D1E  D00D               	goto	i1l4448
  8741  000D20  0621               	decf	___ftadd@sign,f,c
  8742  000D22  C021  F01E         	movff	___ftadd@sign,??___ftadd
  8743  000D26  0E07               	movlw	7
  8744  000D28  161E               	andwf	??___ftadd,f,c
  8745  000D2A  B4D8               	btfsc	status,2,c
  8746  000D2C  D006               	goto	i1l4448
  8747  000D2E  D7EF               	goto	i1l4440
  8748  000D30                     i1l4446:
  8749  000D30  90D8               	bcf	status,0,c
  8750  000D32  321A               	rrcf	___ftadd@f1+2,f,c
  8751  000D34  3219               	rrcf	___ftadd@f1+1,f,c
  8752  000D36  3218               	rrcf	___ftadd@f1,f,c
  8753  000D38  2A23               	incf	___ftadd@exp1,f,c
  8754  000D3A                     i1l4448:
  8755  000D3A  5022               	movf	___ftadd@exp2,w,c
  8756  000D3C  6223               	cpfseq	___ftadd@exp1,c
  8757  000D3E  D7F8               	goto	i1l4446
  8758  000D40  D01D               	goto	i1l1048
  8759  000D42                     i1l4450:
  8760  000D42  5023               	movf	___ftadd@exp1,w,c
  8761  000D44  5C22               	subwf	___ftadd@exp2,w,c
  8762  000D46  B0D8               	btfsc	status,0,c
  8763  000D48  D019               	goto	i1l1048
  8764  000D4A                     i1l4452:
  8765  000D4A  90D8               	bcf	status,0,c
  8766  000D4C  3618               	rlcf	___ftadd@f1,f,c
  8767  000D4E  3619               	rlcf	___ftadd@f1+1,f,c
  8768  000D50  361A               	rlcf	___ftadd@f1+2,f,c
  8769  000D52  0623               	decf	___ftadd@exp1,f,c
  8770  000D54  5022               	movf	___ftadd@exp2,w,c
  8771  000D56  1823               	xorwf	___ftadd@exp1,w,c
  8772  000D58  B4D8               	btfsc	status,2,c
  8773  000D5A  D00D               	goto	i1l4460
  8774  000D5C  0621               	decf	___ftadd@sign,f,c
  8775  000D5E  C021  F01E         	movff	___ftadd@sign,??___ftadd
  8776  000D62  0E07               	movlw	7
  8777  000D64  161E               	andwf	??___ftadd,f,c
  8778  000D66  B4D8               	btfsc	status,2,c
  8779  000D68  D006               	goto	i1l4460
  8780  000D6A  D7EF               	goto	i1l4452
  8781  000D6C                     i1l4458:
  8782  000D6C  90D8               	bcf	status,0,c
  8783  000D6E  321D               	rrcf	___ftadd@f2+2,f,c
  8784  000D70  321C               	rrcf	___ftadd@f2+1,f,c
  8785  000D72  321B               	rrcf	___ftadd@f2,f,c
  8786  000D74  2A22               	incf	___ftadd@exp2,f,c
  8787  000D76                     i1l4460:
  8788  000D76  5022               	movf	___ftadd@exp2,w,c
  8789  000D78  6223               	cpfseq	___ftadd@exp1,c
  8790  000D7A  D7F8               	goto	i1l4458
  8791  000D7C                     i1l1048:
  8792  000D7C  AE21               	btfss	___ftadd@sign,7,c
  8793  000D7E  D00C               	goto	i1l1057
  8794  000D80  0EFF               	movlw	255
  8795  000D82  1A18               	xorwf	___ftadd@f1,f,c
  8796  000D84  0EFF               	movlw	255
  8797  000D86  1A19               	xorwf	___ftadd@f1+1,f,c
  8798  000D88  0EFF               	movlw	255
  8799  000D8A  1A1A               	xorwf	___ftadd@f1+2,f,c
  8800  000D8C  0E01               	movlw	1
  8801  000D8E  2618               	addwf	___ftadd@f1,f,c
  8802  000D90  0E00               	movlw	0
  8803  000D92  2219               	addwfc	___ftadd@f1+1,f,c
  8804  000D94  0E00               	movlw	0
  8805  000D96  221A               	addwfc	___ftadd@f1+2,f,c
  8806  000D98                     i1l1057:
  8807  000D98  AC21               	btfss	___ftadd@sign,6,c
  8808  000D9A  D00C               	goto	i1l4466
  8809  000D9C  0EFF               	movlw	255
  8810  000D9E  1A1B               	xorwf	___ftadd@f2,f,c
  8811  000DA0  0EFF               	movlw	255
  8812  000DA2  1A1C               	xorwf	___ftadd@f2+1,f,c
  8813  000DA4  0EFF               	movlw	255
  8814  000DA6  1A1D               	xorwf	___ftadd@f2+2,f,c
  8815  000DA8  0E01               	movlw	1
  8816  000DAA  261B               	addwf	___ftadd@f2,f,c
  8817  000DAC  0E00               	movlw	0
  8818  000DAE  221C               	addwfc	___ftadd@f2+1,f,c
  8819  000DB0  0E00               	movlw	0
  8820  000DB2  221D               	addwfc	___ftadd@f2+2,f,c
  8821  000DB4                     i1l4466:
  8822  000DB4  6E1E               	movwf	??___ftadd& (0+255),c
  8823  000DB6  0E00               	movlw	0
  8824  000DB8  6E21               	movwf	___ftadd@sign,c
  8825  000DBA  501E               	movf	??___ftadd& (0+255),w,c
  8826  000DBC  5018               	movf	___ftadd@f1,w,c
  8827  000DBE  261B               	addwf	___ftadd@f2,f,c
  8828  000DC0  5019               	movf	___ftadd@f1+1,w,c
  8829  000DC2  221C               	addwfc	___ftadd@f2+1,f,c
  8830  000DC4  501A               	movf	___ftadd@f1+2,w,c
  8831  000DC6  221D               	addwfc	___ftadd@f2+2,f,c
  8832  000DC8  AE1D               	btfss	___ftadd@f2+2,7,c
  8833  000DCA  D010               	goto	i1l4476
  8834  000DCC  0EFF               	movlw	255
  8835  000DCE  1A1B               	xorwf	___ftadd@f2,f,c
  8836  000DD0  0EFF               	movlw	255
  8837  000DD2  1A1C               	xorwf	___ftadd@f2+1,f,c
  8838  000DD4  0EFF               	movlw	255
  8839  000DD6  1A1D               	xorwf	___ftadd@f2+2,f,c
  8840  000DD8  0E01               	movlw	1
  8841  000DDA  261B               	addwf	___ftadd@f2,f,c
  8842  000DDC  0E00               	movlw	0
  8843  000DDE  221C               	addwfc	___ftadd@f2+1,f,c
  8844  000DE0  0E00               	movlw	0
  8845  000DE2  221D               	addwfc	___ftadd@f2+2,f,c
  8846  000DE4  6E1E               	movwf	??___ftadd& (0+255),c
  8847  000DE6  0E01               	movlw	1
  8848  000DE8  6E21               	movwf	___ftadd@sign,c
  8849  000DEA  501E               	movf	??___ftadd& (0+255),w,c
  8850  000DEC                     i1l4476:
  8851  000DEC  C01B  F001         	movff	___ftadd@f2,___ftpack@arg
  8852  000DF0  C01C  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  8853  000DF4  C01D  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  8854  000DF8  C023  F004         	movff	___ftadd@exp1,___ftpack@exp
  8855  000DFC  C021  F005         	movff	___ftadd@sign,___ftpack@sign
  8856  000E00  EC1B  F00F         	call	___ftpack	;wreg free
  8857  000E04  C001  F018         	movff	?___ftpack,?___ftadd
  8858  000E08  C002  F019         	movff	?___ftpack+1,?___ftadd+1
  8859  000E0C  C003  F01A         	movff	?___ftpack+2,?___ftadd+2
  8860  000E10  0012               	return	
  8861  000E12                     __end_of___ftadd:
  8862                           	opt stack 0
  8863                           pclatu	equ	0xFFB
  8864                           pclath	equ	0xFFA
  8865                           tblptru	equ	0xFF8
  8866                           tblptrh	equ	0xFF7
  8867                           tblptrl	equ	0xFF6
  8868                           tablat	equ	0xFF5
  8869                           prodh	equ	0xFF4
  8870                           prodl	equ	0xFF3
  8871                           intcon	equ	0xFF2
  8872                           intcon2	equ	0xFF1
  8873                           postinc0	equ	0xFEE
  8874                           fsr0h	equ	0xFEA
  8875                           fsr0l	equ	0xFE9
  8876                           wreg	equ	0xFE8
  8877                           indf1	equ	0xFE7
  8878                           postinc1	equ	0xFE6
  8879                           postdec1	equ	0xFE5
  8880                           fsr1h	equ	0xFE2
  8881                           fsr1l	equ	0xFE1
  8882                           bsr	equ	0xFE0
  8883                           indf2	equ	0xFDF
  8884                           postinc2	equ	0xFDE
  8885                           postdec2	equ	0xFDD
  8886                           fsr2h	equ	0xFDA
  8887                           fsr2l	equ	0xFD9
  8888                           status	equ	0xFD8
  8889                           
  8890 ;; *************** function ___ftpack *****************
  8891 ;; Defined at:
  8892 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;  arg             3    0[COMRAM] unsigned um
  8895 ;;  exp             1    3[COMRAM] unsigned char 
  8896 ;;  sign            1    4[COMRAM] unsigned char 
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;		None
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  3    0[COMRAM] float 
  8901 ;; Registers used:
  8902 ;;		wreg, status,2, status,0
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/0
  8905 ;;		On exit  : 0/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8908 ;;      Params:         5       0       0       0       0
  8909 ;;      Locals:         0       0       0       0       0
  8910 ;;      Temps:          3       0       0       0       0
  8911 ;;      Totals:         8       0       0       0       0
  8912 ;;Total ram usage:        8 bytes
  8913 ;; Hardware stack levels used:    1
  8914 ;; Hardware stack levels required when called:    6
  8915 ;; This function calls:
  8916 ;;		Nothing
  8917 ;; This function is called by:
  8918 ;;		___awtoft
  8919 ;;		___ftadd
  8920 ;;		___ftdiv
  8921 ;;		___ftmul
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           	psect	text52
  8926  001E36                     __ptext52:
  8927                           	opt stack 0
  8928  001E36                     ___ftpack:
  8929                           	opt stack 17
  8930                           
  8931                           ;incstack = 0
  8932  001E36  5004               	movf	___ftpack@exp,w,c
  8933  001E38  B4D8               	btfsc	status,2,c
  8934  001E3A  D005               	goto	i1l4088
  8935  001E3C  5001               	movf	___ftpack@arg,w,c
  8936  001E3E  1002               	iorwf	___ftpack@arg+1,w,c
  8937  001E40  1003               	iorwf	___ftpack@arg+2,w,c
  8938  001E42  A4D8               	btfss	status,2,c
  8939  001E44  D00C               	goto	i1l4094
  8940  001E46                     i1l4088:
  8941  001E46  0E00               	movlw	0
  8942  001E48  6E01               	movwf	?___ftpack,c
  8943  001E4A  0E00               	movlw	0
  8944  001E4C  6E02               	movwf	?___ftpack+1,c
  8945  001E4E  0E00               	movlw	0
  8946  001E50  6E03               	movwf	?___ftpack+2,c
  8947  001E52  0012               	return	
  8948  001E54                     i1l4092:
  8949  001E54  2A04               	incf	___ftpack@exp,f,c
  8950  001E56  90D8               	bcf	status,0,c
  8951  001E58  3203               	rrcf	___ftpack@arg+2,f,c
  8952  001E5A  3202               	rrcf	___ftpack@arg+1,f,c
  8953  001E5C  3201               	rrcf	___ftpack@arg,f,c
  8954  001E5E                     i1l4094:
  8955  001E5E  0E00               	movlw	0
  8956  001E60  1401               	andwf	___ftpack@arg,w,c
  8957  001E62  6E06               	movwf	??___ftpack& (0+255),c
  8958  001E64  0E00               	movlw	0
  8959  001E66  1402               	andwf	___ftpack@arg+1,w,c
  8960  001E68  6E07               	movwf	(??___ftpack+1)& (0+255),c
  8961  001E6A  0EFE               	movlw	254
  8962  001E6C  1403               	andwf	___ftpack@arg+2,w,c
  8963  001E6E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  8964  001E70  5006               	movf	??___ftpack,w,c
  8965  001E72  1007               	iorwf	??___ftpack+1,w,c
  8966  001E74  1008               	iorwf	??___ftpack+2,w,c
  8967  001E76  B4D8               	btfsc	status,2,c
  8968  001E78  D00C               	goto	i1l4100
  8969  001E7A  D7EC               	goto	i1l4092
  8970  001E7C                     i1l4096:
  8971  001E7C  2A04               	incf	___ftpack@exp,f,c
  8972  001E7E  0E01               	movlw	1
  8973  001E80  2601               	addwf	___ftpack@arg,f,c
  8974  001E82  0E00               	movlw	0
  8975  001E84  2202               	addwfc	___ftpack@arg+1,f,c
  8976  001E86  0E00               	movlw	0
  8977  001E88  2203               	addwfc	___ftpack@arg+2,f,c
  8978  001E8A  90D8               	bcf	status,0,c
  8979  001E8C  3203               	rrcf	___ftpack@arg+2,f,c
  8980  001E8E  3202               	rrcf	___ftpack@arg+1,f,c
  8981  001E90  3201               	rrcf	___ftpack@arg,f,c
  8982  001E92                     i1l4100:
  8983  001E92  0E00               	movlw	0
  8984  001E94  1401               	andwf	___ftpack@arg,w,c
  8985  001E96  6E06               	movwf	??___ftpack& (0+255),c
  8986  001E98  0E00               	movlw	0
  8987  001E9A  1402               	andwf	___ftpack@arg+1,w,c
  8988  001E9C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  8989  001E9E  0EFF               	movlw	255
  8990  001EA0  1403               	andwf	___ftpack@arg+2,w,c
  8991  001EA2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  8992  001EA4  5006               	movf	??___ftpack,w,c
  8993  001EA6  1007               	iorwf	??___ftpack+1,w,c
  8994  001EA8  1008               	iorwf	??___ftpack+2,w,c
  8995  001EAA  B4D8               	btfsc	status,2,c
  8996  001EAC  D006               	goto	i1l4104
  8997  001EAE  D7E6               	goto	i1l4096
  8998  001EB0                     i1l4102:
  8999  001EB0  0604               	decf	___ftpack@exp,f,c
  9000  001EB2  90D8               	bcf	status,0,c
  9001  001EB4  3601               	rlcf	___ftpack@arg,f,c
  9002  001EB6  3602               	rlcf	___ftpack@arg+1,f,c
  9003  001EB8  3603               	rlcf	___ftpack@arg+2,f,c
  9004  001EBA                     i1l4104:
  9005  001EBA  AE02               	btfss	___ftpack@arg+1,7,c
  9006  001EBC  D7F9               	goto	i1l4102
  9007  001EBE  A004               	btfss	___ftpack@exp,0,c
  9008  001EC0  9E02               	bcf	___ftpack@arg+1,7,c
  9009  001EC2  90D8               	bcf	status,0,c
  9010  001EC4  3204               	rrcf	___ftpack@exp,f,c
  9011  001EC6  5004               	movf	___ftpack@exp,w,c
  9012  001EC8  1203               	iorwf	___ftpack@arg+2,f,c
  9013  001ECA  5005               	movf	___ftpack@sign,w,c
  9014  001ECC  A4D8               	btfss	status,2,c
  9015  001ECE  8E03               	bsf	___ftpack@arg+2,7,c
  9016  001ED0  C001  F001         	movff	___ftpack@arg,?___ftpack
  9017  001ED4  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  9018  001ED8  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  9019  001EDC  0012               	return	
  9020  001EDE                     __end_of___ftpack:
  9021                           	opt stack 0
  9022                           pclatu	equ	0xFFB
  9023                           pclath	equ	0xFFA
  9024                           tblptru	equ	0xFF8
  9025                           tblptrh	equ	0xFF7
  9026                           tblptrl	equ	0xFF6
  9027                           tablat	equ	0xFF5
  9028                           prodh	equ	0xFF4
  9029                           prodl	equ	0xFF3
  9030                           intcon	equ	0xFF2
  9031                           intcon2	equ	0xFF1
  9032                           postinc0	equ	0xFEE
  9033                           fsr0h	equ	0xFEA
  9034                           fsr0l	equ	0xFE9
  9035                           wreg	equ	0xFE8
  9036                           indf1	equ	0xFE7
  9037                           postinc1	equ	0xFE6
  9038                           postdec1	equ	0xFE5
  9039                           fsr1h	equ	0xFE2
  9040                           fsr1l	equ	0xFE1
  9041                           bsr	equ	0xFE0
  9042                           indf2	equ	0xFDF
  9043                           postinc2	equ	0xFDE
  9044                           postdec2	equ	0xFDD
  9045                           fsr2h	equ	0xFDA
  9046                           fsr2l	equ	0xFD9
  9047                           status	equ	0xFD8
  9048                           
  9049 ;; *************** function ___awtoft *****************
  9050 ;; Defined at:
  9051 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awtoft.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;  c               2    8[COMRAM] int 
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;  sign            1   12[COMRAM] unsigned char 
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  3    8[COMRAM] float 
  9058 ;; Registers used:
  9059 ;;		wreg, status,2, status,0, prodl, cstack
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9065 ;;      Params:         3       0       0       0       0
  9066 ;;      Locals:         1       0       0       0       0
  9067 ;;      Temps:          1       0       0       0       0
  9068 ;;      Totals:         5       0       0       0       0
  9069 ;;Total ram usage:        5 bytes
  9070 ;; Hardware stack levels used:    1
  9071 ;; Hardware stack levels required when called:    7
  9072 ;; This function calls:
  9073 ;;		___ftpack
  9074 ;; This function is called by:
  9075 ;;		_adc_int_handler
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079                           	psect	text53
  9080  00291A                     __ptext53:
  9081                           	opt stack 0
  9082  00291A                     ___awtoft:
  9083                           	opt stack 17
  9084                           
  9085                           ;incstack = 0
  9086  00291A  6E0C               	movwf	??___awtoft& (0+255),c
  9087  00291C  0E00               	movlw	0
  9088  00291E  6E0D               	movwf	___awtoft@sign,c
  9089  002920  500C               	movf	??___awtoft& (0+255),w,c
  9090  002922  500A               	movf	___awtoft@c+1,w,c
  9091  002924  0A80               	xorlw	128
  9092  002926  6EF3               	movwf	prodl,c
  9093  002928  0E80               	movlw	128
  9094  00292A  5CF3               	subwf	prodl,w,c
  9095  00292C  0E00               	movlw	0
  9096  00292E  B4D8               	btfsc	status,2,c
  9097  002930  5C09               	subwf	___awtoft@c,w,c
  9098  002932  B0D8               	btfsc	status,0,c
  9099  002934  D008               	goto	i1l4488
  9100  002936  6C09               	negf	___awtoft@c,c
  9101  002938  1E0A               	comf	___awtoft@c+1,f,c
  9102  00293A  B0D8               	btfsc	status,0,c
  9103  00293C  2A0A               	incf	___awtoft@c+1,f,c
  9104  00293E  6E0C               	movwf	??___awtoft& (0+255),c
  9105  002940  0E01               	movlw	1
  9106  002942  6E0D               	movwf	___awtoft@sign,c
  9107  002944  500C               	movf	??___awtoft& (0+255),w,c
  9108  002946                     i1l4488:
  9109  002946  C009  F001         	movff	___awtoft@c,___ftpack@arg
  9110  00294A  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  9111  00294E  6A03               	clrf	___ftpack@arg+2,c
  9112  002950  6E0C               	movwf	??___awtoft& (0+255),c
  9113  002952  0E8E               	movlw	142
  9114  002954  6E04               	movwf	___ftpack@exp,c
  9115  002956  500C               	movf	??___awtoft& (0+255),w,c
  9116  002958  C00D  F005         	movff	___awtoft@sign,___ftpack@sign
  9117  00295C  EC1B  F00F         	call	___ftpack	;wreg free
  9118  002960  C001  F009         	movff	?___ftpack,?___awtoft
  9119  002964  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  9120  002968  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  9121  00296C  0012               	return	
  9122  00296E                     __end_of___awtoft:
  9123                           	opt stack 0
  9124                           pclatu	equ	0xFFB
  9125                           pclath	equ	0xFFA
  9126                           tblptru	equ	0xFF8
  9127                           tblptrh	equ	0xFF7
  9128                           tblptrl	equ	0xFF6
  9129                           tablat	equ	0xFF5
  9130                           prodh	equ	0xFF4
  9131                           prodl	equ	0xFF3
  9132                           intcon	equ	0xFF2
  9133                           intcon2	equ	0xFF1
  9134                           postinc0	equ	0xFEE
  9135                           fsr0h	equ	0xFEA
  9136                           fsr0l	equ	0xFE9
  9137                           wreg	equ	0xFE8
  9138                           indf1	equ	0xFE7
  9139                           postinc1	equ	0xFE6
  9140                           postdec1	equ	0xFE5
  9141                           fsr1h	equ	0xFE2
  9142                           fsr1l	equ	0xFE1
  9143                           bsr	equ	0xFE0
  9144                           indf2	equ	0xFDF
  9145                           postinc2	equ	0xFDE
  9146                           postdec2	equ	0xFDD
  9147                           fsr2h	equ	0xFDA
  9148                           fsr2l	equ	0xFD9
  9149                           status	equ	0xFD8
  9150                           
  9151 ;; *************** function _InterruptHandlerHigh *****************
  9152 ;; Defined at:
  9153 ;;		line 84 in file "../src/interrupts.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;		None
  9156 ;; Auto vars:     Size  Location     Type
  9157 ;;		None
  9158 ;; Return value:  Size  Location     Type
  9159 ;;		None               void
  9160 ;; Registers used:
  9161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  9162 ;; Tracked objects:
  9163 ;;		On entry : 0/0
  9164 ;;		On exit  : 0/0
  9165 ;;		Unchanged: 0/0
  9166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9167 ;;      Params:         0       0       0       0       0
  9168 ;;      Locals:         0       0       0       0       0
  9169 ;;      Temps:          0      14       0       0       0
  9170 ;;      Totals:         0      14       0       0       0
  9171 ;;Total ram usage:       14 bytes
  9172 ;; Hardware stack levels used:    1
  9173 ;; Hardware stack levels required when called:    5
  9174 ;; This function calls:
  9175 ;;		_SleepIfOkay
  9176 ;;		_i2c_int_handler
  9177 ;; This function is called by:
  9178 ;;		Interrupt level 2
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           	psect	intcode
  9183  000008                     __pintcode:
  9184                           	opt stack 0
  9185  000008                     _InterruptHandlerHigh:
  9186                           	opt stack 16
  9187                           
  9188                           ;incstack = 0
  9189  000008  CFFA F0C2          	movff	pclath,??_InterruptHandlerHigh
  9190  00000C  CFFB F0C3          	movff	pclatu,??_InterruptHandlerHigh+1
  9191  000010  EF38  F012         	goto	int_func
  9192                           pclatu	equ	0xFFB
  9193                           pclath	equ	0xFFA
  9194                           tblptru	equ	0xFF8
  9195                           tblptrh	equ	0xFF7
  9196                           tblptrl	equ	0xFF6
  9197                           tablat	equ	0xFF5
  9198                           prodh	equ	0xFF4
  9199                           prodl	equ	0xFF3
  9200                           intcon	equ	0xFF2
  9201                           intcon2	equ	0xFF1
  9202                           postinc0	equ	0xFEE
  9203                           fsr0h	equ	0xFEA
  9204                           fsr0l	equ	0xFE9
  9205                           wreg	equ	0xFE8
  9206                           indf1	equ	0xFE7
  9207                           postinc1	equ	0xFE6
  9208                           postdec1	equ	0xFE5
  9209                           fsr1h	equ	0xFE2
  9210                           fsr1l	equ	0xFE1
  9211                           bsr	equ	0xFE0
  9212                           indf2	equ	0xFDF
  9213                           postinc2	equ	0xFDE
  9214                           postdec2	equ	0xFDD
  9215                           fsr2h	equ	0xFDA
  9216                           fsr2l	equ	0xFD9
  9217                           status	equ	0xFD8
  9218                           
  9219                           	psect	intcode_body
  9220  002470                     __pintcode_body:
  9221                           	opt stack 16
  9222  002470                     int_func:
  9223                           	opt stack 16
  9224  002470  CFE9 F0C4          	movff	fsr0l,??_InterruptHandlerHigh+2
  9225  002474  CFEA F0C5          	movff	fsr0h,??_InterruptHandlerHigh+3
  9226  002478  CFE1 F0C6          	movff	fsr1l,??_InterruptHandlerHigh+4
  9227  00247C  CFE2 F0C7          	movff	fsr1h,??_InterruptHandlerHigh+5
  9228  002480  CFD9 F0C8          	movff	fsr2l,??_InterruptHandlerHigh+6
  9229  002484  CFDA F0C9          	movff	fsr2h,??_InterruptHandlerHigh+7
  9230  002488  CFF3 F0CA          	movff	prodl,??_InterruptHandlerHigh+8
  9231  00248C  CFF4 F0CB          	movff	prodh,??_InterruptHandlerHigh+9
  9232  002490  CFF6 F0CC          	movff	tblptrl,??_InterruptHandlerHigh+10
  9233  002494  CFF7 F0CD          	movff	tblptrh,??_InterruptHandlerHigh+11
  9234  002498  CFF8 F0CE          	movff	tblptru,??_InterruptHandlerHigh+12
  9235  00249C  CFF5 F0CF          	movff	tablat,??_InterruptHandlerHigh+13
  9236                           
  9237                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  9238  0024A0  A69E               	btfss	3998,3,c	;volatile
  9239  0024A2  D003               	goto	i2l62
  9240                           
  9241                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  9242  0024A4  969E               	bcf	3998,3,c	;volatile
  9243                           
  9244                           ;interrupts.c: 94: i2c_int_handler();
  9245  0024A6  ECE1  F016         	call	_i2c_int_handler	;wreg free
  9246  0024AA                     i2l62:
  9247                           
  9248                           ;interrupts.c: 96: }
  9249                           ;interrupts.c: 106: SleepIfOkay();
  9250  0024AA  EC5C  F013         	call	_SleepIfOkay	;wreg free
  9251  0024AE  C0CF  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  9252  0024B2  C0CE  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  9253  0024B6  C0CD  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  9254  0024BA  C0CC  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  9255  0024BE  C0CB  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  9256  0024C2  C0CA  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  9257  0024C6  C0C9  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  9258  0024CA  C0C8  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  9259  0024CE  C0C7  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  9260  0024D2  C0C6  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  9261  0024D6  C0C5  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  9262  0024DA  C0C4  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  9263  0024DE  C0C3  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  9264  0024E2  C0C2  FFFA         	movff	??_InterruptHandlerHigh,pclath
  9265  0024E6  0011               	retfie		f
  9266  0024E8                     __end_of_InterruptHandlerHigh:
  9267                           	opt stack 0
  9268                           pclatu	equ	0xFFB
  9269                           pclath	equ	0xFFA
  9270                           tblptru	equ	0xFF8
  9271                           tblptrh	equ	0xFF7
  9272                           tblptrl	equ	0xFF6
  9273                           tablat	equ	0xFF5
  9274                           prodh	equ	0xFF4
  9275                           prodl	equ	0xFF3
  9276                           intcon	equ	0xFF2
  9277                           intcon2	equ	0xFF1
  9278                           postinc0	equ	0xFEE
  9279                           fsr0h	equ	0xFEA
  9280                           fsr0l	equ	0xFE9
  9281                           wreg	equ	0xFE8
  9282                           indf1	equ	0xFE7
  9283                           postinc1	equ	0xFE6
  9284                           postdec1	equ	0xFE5
  9285                           fsr1h	equ	0xFE2
  9286                           fsr1l	equ	0xFE1
  9287                           bsr	equ	0xFE0
  9288                           indf2	equ	0xFDF
  9289                           postinc2	equ	0xFDE
  9290                           postdec2	equ	0xFDD
  9291                           fsr2h	equ	0xFDA
  9292                           fsr2l	equ	0xFD9
  9293                           status	equ	0xFD8
  9294                           
  9295 ;; *************** function _i2c_int_handler *****************
  9296 ;; Defined at:
  9297 ;;		line 139 in file "../src/my_i2c.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;		None
  9300 ;; Auto vars:     Size  Location     Type
  9301 ;;		None
  9302 ;; Return value:  Size  Location     Type
  9303 ;;		None               void
  9304 ;; Registers used:
  9305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9306 ;; Tracked objects:
  9307 ;;		On entry : 0/0
  9308 ;;		On exit  : 0/0
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9311 ;;      Params:         0       0       0       0       0
  9312 ;;      Locals:         0       0       0       0       0
  9313 ;;      Temps:          0       0       0       0       0
  9314 ;;      Totals:         0       0       0       0       0
  9315 ;;Total ram usage:        0 bytes
  9316 ;; Hardware stack levels used:    1
  9317 ;; Hardware stack levels required when called:    4
  9318 ;; This function calls:
  9319 ;;		_i2c_slave_int_handler
  9320 ;; This function is called by:
  9321 ;;		_InterruptHandlerHigh
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           
  9325                           	psect	text55
  9326  002DC2                     __ptext55:
  9327                           	opt stack 0
  9328  002DC2                     _i2c_int_handler:
  9329                           	opt stack 16
  9330                           
  9331                           ;my_i2c.c: 143: i2c_slave_int_handler();
  9332                           
  9333                           ;incstack = 0
  9334  002DC2  EC6E  F000         	call	_i2c_slave_int_handler	;wreg free
  9335  002DC6  0012               	return	
  9336  002DC8                     __end_of_i2c_int_handler:
  9337                           	opt stack 0
  9338                           pclatu	equ	0xFFB
  9339                           pclath	equ	0xFFA
  9340                           tblptru	equ	0xFF8
  9341                           tblptrh	equ	0xFF7
  9342                           tblptrl	equ	0xFF6
  9343                           tablat	equ	0xFF5
  9344                           prodh	equ	0xFF4
  9345                           prodl	equ	0xFF3
  9346                           intcon	equ	0xFF2
  9347                           intcon2	equ	0xFF1
  9348                           postinc0	equ	0xFEE
  9349                           fsr0h	equ	0xFEA
  9350                           fsr0l	equ	0xFE9
  9351                           wreg	equ	0xFE8
  9352                           indf1	equ	0xFE7
  9353                           postinc1	equ	0xFE6
  9354                           postdec1	equ	0xFE5
  9355                           fsr1h	equ	0xFE2
  9356                           fsr1l	equ	0xFE1
  9357                           bsr	equ	0xFE0
  9358                           indf2	equ	0xFDF
  9359                           postinc2	equ	0xFDE
  9360                           postdec2	equ	0xFDD
  9361                           fsr2h	equ	0xFDA
  9362                           fsr2l	equ	0xFD9
  9363                           status	equ	0xFD8
  9364                           
  9365 ;; *************** function _i2c_slave_int_handler *****************
  9366 ;; Defined at:
  9367 ;;		line 248 in file "../src/my_i2c.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;		None
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;  ack             6   34[BANK0 ] unsigned char [6]
  9372 ;;  dist            6   40[BANK0 ] unsigned char [6]
  9373 ;;  ack             6   28[BANK0 ] unsigned char [6]
  9374 ;;  message         6   54[BANK0 ] unsigned char [6]
  9375 ;;  checksum        1   48[BANK0 ] unsigned char 
  9376 ;;  bitmask         1   47[BANK0 ] unsigned char 
  9377 ;;  messageType     1   46[BANK0 ] unsigned char 
  9378 ;;  length          2   63[BANK0 ] int 
  9379 ;;  error_buf       3   49[BANK0 ] unsigned char [3]
  9380 ;;  data_read       1   65[BANK0 ] unsigned char 
  9381 ;;  msg_ready       1   62[BANK0 ] unsigned char 
  9382 ;;  msg_to_send     1   61[BANK0 ] unsigned char 
  9383 ;;  i2c_data        1   60[BANK0 ] unsigned char 
  9384 ;;  overrun_erro    1   53[BANK0 ] unsigned char 
  9385 ;;  data_written    1   52[BANK0 ] unsigned char 
  9386 ;; Return value:  Size  Location     Type
  9387 ;;		None               void
  9388 ;; Registers used:
  9389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9395 ;;      Params:         0       0       0       0       0
  9396 ;;      Locals:         0      38       0       0       0
  9397 ;;      Temps:          0       2       0       0       0
  9398 ;;      Totals:         0      40       0       0       0
  9399 ;;Total ram usage:       40 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:    3
  9402 ;; This function calls:
  9403 ;;		_ToMainHigh_sendmsg
  9404 ;;		_handle_start
  9405 ;;		_start_i2c_slave_reply
  9406 ;;		i2_motorMove
  9407 ;; This function is called by:
  9408 ;;		_i2c_int_handler
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text56
  9413  0000DC                     __ptext56:
  9414                           	opt stack 0
  9415  0000DC                     _i2c_slave_int_handler:
  9416                           	opt stack 16
  9417                           
  9418                           ;my_i2c.c: 249: unsigned char i2c_data;
  9419                           ;my_i2c.c: 250: unsigned char data_read = 0;
  9420                           
  9421                           ;incstack = 0
  9422  0000DC  0100               	movlb	0	; () banked
  9423  0000DE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9424  0000E0  0E00               	movlw	0
  9425  0000E2  0100               	movlb	0	; () banked
  9426  0000E4  0100               	movlb	0	; () banked
  9427  0000E6  6FC1               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  9428  0000E8  0100               	movlb	0	; () banked
  9429  0000EA  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9430                           
  9431                           ;my_i2c.c: 251: unsigned char data_written = 0;
  9432  0000EC  0100               	movlb	0	; () banked
  9433  0000EE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9434  0000F0  0E00               	movlw	0
  9435  0000F2  0100               	movlb	0	; () banked
  9436  0000F4  0100               	movlb	0	; () banked
  9437  0000F6  6FB4               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  9438  0000F8  0100               	movlb	0	; () banked
  9439  0000FA  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9440                           
  9441                           ;my_i2c.c: 252: unsigned char msg_ready = 0;
  9442  0000FC  0100               	movlb	0	; () banked
  9443  0000FE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9444  000100  0E00               	movlw	0
  9445  000102  0100               	movlb	0	; () banked
  9446  000104  0100               	movlb	0	; () banked
  9447  000106  6FBE               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  9448  000108  0100               	movlb	0	; () banked
  9449  00010A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9450                           
  9451                           ;my_i2c.c: 253: unsigned char msg_to_send = 0;
  9452  00010C  0100               	movlb	0	; () banked
  9453  00010E  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9454  000110  0E00               	movlw	0
  9455  000112  0100               	movlb	0	; () banked
  9456  000114  0100               	movlb	0	; () banked
  9457  000116  6FBD               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  9458  000118  0100               	movlb	0	; () banked
  9459  00011A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9460                           
  9461                           ;my_i2c.c: 254: unsigned char overrun_error = 0;
  9462  00011C  0100               	movlb	0	; () banked
  9463  00011E  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9464  000120  0E00               	movlw	0
  9465  000122  0100               	movlb	0	; () banked
  9466  000124  0100               	movlb	0	; () banked
  9467  000126  6FB5               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  9468  000128  0100               	movlb	0	; () banked
  9469  00012A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9470                           
  9471                           ; BSR set to: 0
  9472                           ;my_i2c.c: 255: unsigned char error_buf[3];
  9473                           ;my_i2c.c: 258: if (SSPCON1bits.SSPOV == 1) {
  9474  00012C  ACC6               	btfss	4038,6,c	;volatile
  9475  00012E  D029               	goto	i2l3822
  9476                           
  9477                           ; BSR set to: 0
  9478                           ;my_i2c.c: 259: SSPCON1bits.SSPOV = 0;
  9479  000130  9CC6               	bcf	4038,6,c	;volatile
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;my_i2c.c: 263: ic_ptr->status = 0x5;
  9483  000132  0101               	movlb	1	; () banked
  9484  000134  EE20 F00D          	lfsr	2,13
  9485  000138  0101               	movlb	1	; () banked
  9486  00013A  51C5               	movf	_ic_ptr& (0+255),w,b
  9487  00013C  26D9               	addwf	fsr2l,f,c
  9488  00013E  0101               	movlb	1	; () banked
  9489  000140  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9490  000142  22DA               	addwfc	fsr2h,f,c
  9491  000144  0E05               	movlw	5
  9492  000146  6EDF               	movwf	indf2,c
  9493                           
  9494                           ; BSR set to: 1
  9495                           ;my_i2c.c: 264: overrun_error = 1;
  9496  000148  0100               	movlb	0	; () banked
  9497  00014A  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9498  00014C  0E01               	movlw	1
  9499  00014E  0100               	movlb	0	; () banked
  9500  000150  0100               	movlb	0	; () banked
  9501  000152  6FB5               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  9502  000154  0100               	movlb	0	; () banked
  9503  000156  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;my_i2c.c: 265: ic_ptr->error_count++;
  9507  000158  0101               	movlb	1	; () banked
  9508  00015A  EE20 F00F          	lfsr	2,15
  9509  00015E  0101               	movlb	1	; () banked
  9510  000160  51C5               	movf	_ic_ptr& (0+255),w,b
  9511  000162  26D9               	addwf	fsr2l,f,c
  9512  000164  0101               	movlb	1	; () banked
  9513  000166  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9514  000168  22DA               	addwfc	fsr2h,f,c
  9515  00016A  2ADF               	incf	indf2,f,c
  9516                           
  9517                           ; BSR set to: 1
  9518                           ;my_i2c.c: 266: ic_ptr->error_code = 0x4;
  9519  00016C  0101               	movlb	1	; () banked
  9520  00016E  EE20 F00E          	lfsr	2,14
  9521  000172  0101               	movlb	1	; () banked
  9522  000174  51C5               	movf	_ic_ptr& (0+255),w,b
  9523  000176  26D9               	addwf	fsr2l,f,c
  9524  000178  0101               	movlb	1	; () banked
  9525  00017A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9526  00017C  22DA               	addwfc	fsr2h,f,c
  9527  00017E  0E04               	movlw	4
  9528  000180  6EDF               	movwf	indf2,c
  9529  000182                     i2l3822:
  9530                           
  9531                           ;my_i2c.c: 267: }
  9532                           ;my_i2c.c: 269: if (SSPSTATbits.BF == 1) {
  9533  000182  A0C7               	btfss	4039,0,c	;volatile
  9534  000184  D00A               	goto	i2l3828
  9535                           
  9536                           ;my_i2c.c: 270: i2c_data = SSPBUF;
  9537  000186  CFC9 F0BC          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  9538                           
  9539                           ;my_i2c.c: 271: data_read = 1;
  9540  00018A  0100               	movlb	0	; () banked
  9541  00018C  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9542  00018E  0E01               	movlw	1
  9543  000190  0100               	movlb	0	; () banked
  9544  000192  0100               	movlb	0	; () banked
  9545  000194  6FC1               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  9546  000196  0100               	movlb	0	; () banked
  9547  000198  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9548  00019A                     i2l3828:
  9549                           
  9550                           ;my_i2c.c: 272: }
  9551                           ;my_i2c.c: 274: if (!overrun_error) {
  9552  00019A  0100               	movlb	0	; () banked
  9553  00019C  0100               	movlb	0	; () banked
  9554  00019E  67B5               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  9555  0001A0  D1CE               	goto	i2l372
  9556  0001A2  D1B7               	goto	i2l3916
  9557  0001A4                     i2l374:
  9558                           
  9559                           ; BSR set to: 1
  9560                           ;my_i2c.c: 277: {
  9561                           ;my_i2c.c: 279: if (SSPSTATbits.S == 1) {
  9562  0001A4  A6C7               	btfss	4039,3,c	;volatile
  9563  0001A6  D1CB               	goto	i2l372
  9564                           
  9565                           ; BSR set to: 1
  9566                           ;my_i2c.c: 280: handle_start(data_read);
  9567  0001A8  0100               	movlb	0	; () banked
  9568  0001AA  0100               	movlb	0	; () banked
  9569  0001AC  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9570  0001AE  EC41  F00D         	call	_handle_start
  9571                           
  9572                           ;my_i2c.c: 282: if (ic_ptr->status == 0x8) {
  9573  0001B2  0101               	movlb	1	; () banked
  9574  0001B4  EE20 F00D          	lfsr	2,13
  9575  0001B8  0101               	movlb	1	; () banked
  9576  0001BA  51C5               	movf	_ic_ptr& (0+255),w,b
  9577  0001BC  26D9               	addwf	fsr2l,f,c
  9578  0001BE  0101               	movlb	1	; () banked
  9579  0001C0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9580  0001C2  22DA               	addwfc	fsr2h,f,c
  9581  0001C4  0E08               	movlw	8
  9582  0001C6  62DF               	cpfseq	indf2,c
  9583  0001C8  D1BA               	goto	i2l372
  9584                           
  9585                           ; BSR set to: 1
  9586                           ;my_i2c.c: 283: data_read = 0;
  9587  0001CA  0100               	movlb	0	; () banked
  9588  0001CC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9589  0001CE  0E00               	movlw	0
  9590  0001D0  0100               	movlb	0	; () banked
  9591  0001D2  0100               	movlb	0	; () banked
  9592  0001D4  6FC1               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  9593  0001D6  0100               	movlb	0	; () banked
  9594  0001D8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9595                           
  9596                           ;my_i2c.c: 284: msg_to_send = 1;
  9597  0001DA  0100               	movlb	0	; () banked
  9598  0001DC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9599  0001DE  0E01               	movlw	1
  9600  0001E0  0100               	movlb	0	; () banked
  9601  0001E2  0100               	movlb	0	; () banked
  9602  0001E4  6FBD               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  9603  0001E6  D187               	goto	L8
  9604  0001E8                     i2l378:
  9605                           
  9606                           ; BSR set to: 1
  9607                           ;my_i2c.c: 290: {
  9608                           ;my_i2c.c: 292: if (SSPSTATbits.P == 1) {
  9609  0001E8  A8C7               	btfss	4039,4,c	;volatile
  9610  0001EA  D030               	goto	i2l3848
  9611                           
  9612                           ; BSR set to: 1
  9613                           ;my_i2c.c: 295: ic_ptr->event_count++;
  9614  0001EC  0101               	movlb	1	; () banked
  9615  0001EE  EE20 F00C          	lfsr	2,12
  9616  0001F2  0101               	movlb	1	; () banked
  9617  0001F4  51C5               	movf	_ic_ptr& (0+255),w,b
  9618  0001F6  26D9               	addwf	fsr2l,f,c
  9619  0001F8  0101               	movlb	1	; () banked
  9620  0001FA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9621  0001FC  22DA               	addwfc	fsr2h,f,c
  9622  0001FE  2ADF               	incf	indf2,f,c
  9623                           
  9624                           ; BSR set to: 1
  9625                           ;my_i2c.c: 296: if (data_read) {
  9626  000200  0100               	movlb	0	; () banked
  9627  000202  0100               	movlb	0	; () banked
  9628  000204  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9629  000206  B4D8               	btfsc	status,2,c
  9630  000208  D179               	goto	L10
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;my_i2c.c: 297: if (SSPSTATbits.D_A == 0) {
  9634  00020A  BAC7               	btfsc	4039,5,c	;volatile
  9635  00020C  D009               	goto	i2l3846
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;my_i2c.c: 298: msg_ready = 1;
  9639  00020E  0100               	movlb	0	; () banked
  9640  000210  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9641  000212  0E01               	movlw	1
  9642  000214  0100               	movlb	0	; () banked
  9643  000216  0100               	movlb	0	; () banked
  9644  000218  6FBE               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  9645  00021A  0100               	movlb	0	; () banked
  9646  00021C  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9647                           
  9648                           ;my_i2c.c: 299: } else {
  9649  00021E  D16E               	goto	L10
  9650  000220                     i2l3846:
  9651                           
  9652                           ; BSR set to: 0
  9653                           ;my_i2c.c: 300: ic_ptr->error_count++;
  9654  000220  0101               	movlb	1	; () banked
  9655  000222  EE20 F00F          	lfsr	2,15
  9656  000226  0101               	movlb	1	; () banked
  9657  000228  51C5               	movf	_ic_ptr& (0+255),w,b
  9658  00022A  26D9               	addwf	fsr2l,f,c
  9659  00022C  0101               	movlb	1	; () banked
  9660  00022E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9661  000230  22DA               	addwfc	fsr2h,f,c
  9662  000232  2ADF               	incf	indf2,f,c
  9663                           
  9664                           ;my_i2c.c: 301: ic_ptr->error_code = 0x6;
  9665  000234  0101               	movlb	1	; () banked
  9666  000236  EE20 F00E          	lfsr	2,14
  9667  00023A  0101               	movlb	1	; () banked
  9668  00023C  51C5               	movf	_ic_ptr& (0+255),w,b
  9669  00023E  26D9               	addwf	fsr2l,f,c
  9670  000240  0101               	movlb	1	; () banked
  9671  000242  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9672  000244  22DA               	addwfc	fsr2h,f,c
  9673  000246  0E06               	movlw	6
  9674  000248  6EDF               	movwf	indf2,c
  9675                           
  9676                           ; BSR set to: 1
  9677  00024A  D158               	goto	L10
  9678  00024C                     i2l3848:
  9679                           
  9680                           ; BSR set to: 1
  9681  00024C  0100               	movlb	0	; () banked
  9682  00024E  0100               	movlb	0	; () banked
  9683  000250  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9684  000252  B4D8               	btfsc	status,2,c
  9685  000254  D174               	goto	i2l372
  9686                           
  9687                           ; BSR set to: 0
  9688                           ;my_i2c.c: 306: ic_ptr->event_count++;
  9689  000256  0101               	movlb	1	; () banked
  9690  000258  EE20 F00C          	lfsr	2,12
  9691  00025C  0101               	movlb	1	; () banked
  9692  00025E  51C5               	movf	_ic_ptr& (0+255),w,b
  9693  000260  26D9               	addwf	fsr2l,f,c
  9694  000262  0101               	movlb	1	; () banked
  9695  000264  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9696  000266  22DA               	addwfc	fsr2h,f,c
  9697  000268  2ADF               	incf	indf2,f,c
  9698                           
  9699                           ; BSR set to: 1
  9700                           ;my_i2c.c: 307: if (SSPSTATbits.D_A == 0) {
  9701  00026A  BAC7               	btfsc	4039,5,c	;volatile
  9702  00026C  D019               	goto	i2l3864
  9703                           
  9704                           ; BSR set to: 1
  9705                           ;my_i2c.c: 308: if (SSPSTATbits.R_W == 0) {
  9706  00026E  B4C7               	btfsc	4039,2,c	;volatile
  9707  000270  D00B               	goto	i2l3858
  9708                           
  9709                           ; BSR set to: 1
  9710                           ;my_i2c.c: 309: ic_ptr->status = 0x7;
  9711  000272  0101               	movlb	1	; () banked
  9712  000274  EE20 F00D          	lfsr	2,13
  9713  000278  0101               	movlb	1	; () banked
  9714  00027A  51C5               	movf	_ic_ptr& (0+255),w,b
  9715  00027C  26D9               	addwf	fsr2l,f,c
  9716  00027E  0101               	movlb	1	; () banked
  9717  000280  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9718  000282  22DA               	addwfc	fsr2h,f,c
  9719  000284  0E07               	movlw	7
  9720  000286  D076               	goto	L7
  9721  000288                     i2l3858:
  9722                           
  9723                           ; BSR set to: 1
  9724                           ;my_i2c.c: 311: ic_ptr->status = 0x8;
  9725  000288  0101               	movlb	1	; () banked
  9726  00028A  EE20 F00D          	lfsr	2,13
  9727  00028E  0101               	movlb	1	; () banked
  9728  000290  51C5               	movf	_ic_ptr& (0+255),w,b
  9729  000292  26D9               	addwf	fsr2l,f,c
  9730  000294  0101               	movlb	1	; () banked
  9731  000296  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9732  000298  22DA               	addwfc	fsr2h,f,c
  9733  00029A  0E08               	movlw	8
  9734  00029C  6EDF               	movwf	indf2,c
  9735  00029E  D11D               	goto	L11
  9736  0002A0                     i2l3864:
  9737                           
  9738                           ;my_i2c.c: 317: ic_ptr->error_count++;
  9739  0002A0  0101               	movlb	1	; () banked
  9740  0002A2  EE20 F00F          	lfsr	2,15
  9741  0002A6  0101               	movlb	1	; () banked
  9742  0002A8  51C5               	movf	_ic_ptr& (0+255),w,b
  9743  0002AA  26D9               	addwf	fsr2l,f,c
  9744  0002AC  0101               	movlb	1	; () banked
  9745  0002AE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9746  0002B0  22DA               	addwfc	fsr2h,f,c
  9747  0002B2  2ADF               	incf	indf2,f,c
  9748                           
  9749                           ;my_i2c.c: 318: ic_ptr->status = 0x5;
  9750  0002B4  0101               	movlb	1	; () banked
  9751  0002B6  EE20 F00D          	lfsr	2,13
  9752  0002BA  0101               	movlb	1	; () banked
  9753  0002BC  51C5               	movf	_ic_ptr& (0+255),w,b
  9754  0002BE  26D9               	addwf	fsr2l,f,c
  9755  0002C0  0101               	movlb	1	; () banked
  9756  0002C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9757  0002C4  22DA               	addwfc	fsr2h,f,c
  9758  0002C6  0E05               	movlw	5
  9759  0002C8  6EDF               	movwf	indf2,c
  9760                           
  9761                           ;my_i2c.c: 319: ic_ptr->error_code = 0x6;
  9762  0002CA  0101               	movlb	1	; () banked
  9763  0002CC  EE20 F00E          	lfsr	2,14
  9764  0002D0  0101               	movlb	1	; () banked
  9765  0002D2  51C5               	movf	_ic_ptr& (0+255),w,b
  9766  0002D4  26D9               	addwf	fsr2l,f,c
  9767  0002D6  0101               	movlb	1	; () banked
  9768  0002D8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9769  0002DA  22DA               	addwfc	fsr2h,f,c
  9770  0002DC  0E06               	movlw	6
  9771  0002DE  D04A               	goto	L7
  9772  0002E0                     i2l3866:
  9773                           
  9774                           ; BSR set to: 1
  9775                           ;my_i2c.c: 325: {
  9776                           ;my_i2c.c: 326: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  9777  0002E0  0101               	movlb	1	; () banked
  9778  0002E2  EE20 F01B          	lfsr	2,27
  9779  0002E6  0101               	movlb	1	; () banked
  9780  0002E8  51C5               	movf	_ic_ptr& (0+255),w,b
  9781  0002EA  26D9               	addwf	fsr2l,f,c
  9782  0002EC  0101               	movlb	1	; () banked
  9783  0002EE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9784  0002F0  22DA               	addwfc	fsr2h,f,c
  9785  0002F2  50DF               	movf	indf2,w,c
  9786  0002F4  0100               	movlb	0	; () banked
  9787  0002F6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9788  0002F8  0101               	movlb	1	; () banked
  9789  0002FA  EE20 F01A          	lfsr	2,26
  9790  0002FE  0101               	movlb	1	; () banked
  9791  000300  51C5               	movf	_ic_ptr& (0+255),w,b
  9792  000302  26D9               	addwf	fsr2l,f,c
  9793  000304  0101               	movlb	1	; () banked
  9794  000306  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9795  000308  22DA               	addwfc	fsr2h,f,c
  9796  00030A  50DF               	movf	indf2,w,c
  9797  00030C  0100               	movlb	0	; () banked
  9798  00030E  5D9A               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  9799  000310  B0D8               	btfsc	status,0,c
  9800  000312  D0F4               	goto	L10
  9801                           
  9802                           ; BSR set to: 0
  9803                           ;my_i2c.c: 327: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  9804  000314  0101               	movlb	1	; () banked
  9805  000316  EE20 F01B          	lfsr	2,27
  9806  00031A  0101               	movlb	1	; () banked
  9807  00031C  51C5               	movf	_ic_ptr& (0+255),w,b
  9808  00031E  26D9               	addwf	fsr2l,f,c
  9809  000320  0101               	movlb	1	; () banked
  9810  000322  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9811  000324  22DA               	addwfc	fsr2h,f,c
  9812  000326  50DF               	movf	indf2,w,c
  9813  000328  0100               	movlb	0	; () banked
  9814  00032A  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9815  00032C  0100               	movlb	0	; () banked
  9816  00032E  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9817  000330  0D01               	mullw	1
  9818  000332  0E10               	movlw	16
  9819  000334  26F3               	addwf	prodl,f,c
  9820  000336  0E00               	movlw	0
  9821  000338  22F4               	addwfc	prodh,f,c
  9822  00033A  50F3               	movf	prodl,w,c
  9823  00033C  0101               	movlb	1	; () banked
  9824  00033E  0101               	movlb	1	; () banked
  9825  000340  25C5               	addwf	_ic_ptr& (0+255),w,b
  9826  000342  6ED9               	movwf	fsr2l,c
  9827  000344  50F4               	movf	prodh,w,c
  9828  000346  0101               	movlb	1	; () banked
  9829  000348  0101               	movlb	1	; () banked
  9830  00034A  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9831  00034C  6EDA               	movwf	fsr2h,c
  9832  00034E  50DF               	movf	indf2,w,c
  9833  000350  6EC9               	movwf	4041,c	;volatile
  9834                           
  9835                           ; BSR set to: 1
  9836                           ;my_i2c.c: 328: ic_ptr->outbufind++;
  9837  000352  0101               	movlb	1	; () banked
  9838  000354  EE20 F01B          	lfsr	2,27
  9839  000358  0101               	movlb	1	; () banked
  9840  00035A  51C5               	movf	_ic_ptr& (0+255),w,b
  9841  00035C  26D9               	addwf	fsr2l,f,c
  9842  00035E  0101               	movlb	1	; () banked
  9843  000360  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9844  000362  22DA               	addwfc	fsr2h,f,c
  9845  000364  2ADF               	incf	indf2,f,c
  9846                           
  9847                           ; BSR set to: 1
  9848                           ;my_i2c.c: 329: data_written = 1;
  9849  000366  0100               	movlb	0	; () banked
  9850  000368  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9851  00036A  0E01               	movlw	1
  9852  00036C  0100               	movlb	0	; () banked
  9853  00036E  0100               	movlb	0	; () banked
  9854  000370  6FB4               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  9855  000372  D0C1               	goto	L8
  9856  000374                     L7:
  9857  000374  6EDF               	movwf	indf2,c
  9858  000376  D0E3               	goto	i2l372
  9859  000378                     i2l392:
  9860                           
  9861                           ; BSR set to: 1
  9862                           ;my_i2c.c: 337: {
  9863                           ;my_i2c.c: 339: if (SSPSTATbits.P == 1) {
  9864  000378  A8C7               	btfss	4039,4,c	;volatile
  9865  00037A  D062               	goto	i2l3894
  9866                           
  9867                           ; BSR set to: 1
  9868                           ;my_i2c.c: 341: ic_ptr->event_count++;
  9869  00037C  0101               	movlb	1	; () banked
  9870  00037E  EE20 F00C          	lfsr	2,12
  9871  000382  0101               	movlb	1	; () banked
  9872  000384  51C5               	movf	_ic_ptr& (0+255),w,b
  9873  000386  26D9               	addwf	fsr2l,f,c
  9874  000388  0101               	movlb	1	; () banked
  9875  00038A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9876  00038C  22DA               	addwfc	fsr2h,f,c
  9877  00038E  2ADF               	incf	indf2,f,c
  9878                           
  9879                           ; BSR set to: 1
  9880                           ;my_i2c.c: 342: if (data_read) {
  9881  000390  0100               	movlb	0	; () banked
  9882  000392  0100               	movlb	0	; () banked
  9883  000394  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9884  000396  B4D8               	btfsc	status,2,c
  9885  000398  D04A               	goto	i2l3890
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;my_i2c.c: 343: if (SSPSTATbits.D_A == 1) {
  9889  00039A  AAC7               	btfss	4039,5,c	;volatile
  9890  00039C  D027               	goto	i2l3888
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;my_i2c.c: 344: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  9894  00039E  0101               	movlb	1	; () banked
  9895  0003A0  EE20 F00A          	lfsr	2,10
  9896  0003A4  0101               	movlb	1	; () banked
  9897  0003A6  51C5               	movf	_ic_ptr& (0+255),w,b
  9898  0003A8  26D9               	addwf	fsr2l,f,c
  9899  0003AA  0101               	movlb	1	; () banked
  9900  0003AC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9901  0003AE  22DA               	addwfc	fsr2h,f,c
  9902  0003B0  50DF               	movf	indf2,w,c
  9903  0003B2  0100               	movlb	0	; () banked
  9904  0003B4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9905  0003B6  0100               	movlb	0	; () banked
  9906  0003B8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9907  0003BA  0D01               	mullw	1
  9908  0003BC  50F3               	movf	prodl,w,c
  9909  0003BE  0101               	movlb	1	; () banked
  9910  0003C0  0101               	movlb	1	; () banked
  9911  0003C2  25C5               	addwf	_ic_ptr& (0+255),w,b
  9912  0003C4  6ED9               	movwf	fsr2l,c
  9913  0003C6  50F4               	movf	prodh,w,c
  9914  0003C8  0101               	movlb	1	; () banked
  9915  0003CA  0101               	movlb	1	; () banked
  9916  0003CC  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9917  0003CE  6EDA               	movwf	fsr2h,c
  9918  0003D0  0100               	movlb	0	; () banked
  9919  0003D2  C0BC  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  9920                           
  9921                           ; BSR set to: 0
  9922                           ;my_i2c.c: 345: ic_ptr->buflen++;
  9923  0003D6  0101               	movlb	1	; () banked
  9924  0003D8  EE20 F00A          	lfsr	2,10
  9925  0003DC  0101               	movlb	1	; () banked
  9926  0003DE  51C5               	movf	_ic_ptr& (0+255),w,b
  9927  0003E0  26D9               	addwf	fsr2l,f,c
  9928  0003E2  0101               	movlb	1	; () banked
  9929  0003E4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9930  0003E6  22DA               	addwfc	fsr2h,f,c
  9931  0003E8  2ADF               	incf	indf2,f,c
  9932  0003EA  D021               	goto	i2l3890
  9933  0003EC                     i2l3888:
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;my_i2c.c: 348: ic_ptr->error_count++;
  9937  0003EC  0101               	movlb	1	; () banked
  9938  0003EE  EE20 F00F          	lfsr	2,15
  9939  0003F2  0101               	movlb	1	; () banked
  9940  0003F4  51C5               	movf	_ic_ptr& (0+255),w,b
  9941  0003F6  26D9               	addwf	fsr2l,f,c
  9942  0003F8  0101               	movlb	1	; () banked
  9943  0003FA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9944  0003FC  22DA               	addwfc	fsr2h,f,c
  9945  0003FE  2ADF               	incf	indf2,f,c
  9946                           
  9947                           ;my_i2c.c: 349: ic_ptr->error_code = 0x6;
  9948  000400  0101               	movlb	1	; () banked
  9949  000402  EE20 F00E          	lfsr	2,14
  9950  000406  0101               	movlb	1	; () banked
  9951  000408  51C5               	movf	_ic_ptr& (0+255),w,b
  9952  00040A  26D9               	addwf	fsr2l,f,c
  9953  00040C  0101               	movlb	1	; () banked
  9954  00040E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9955  000410  22DA               	addwfc	fsr2h,f,c
  9956  000412  0E06               	movlw	6
  9957  000414  6EDF               	movwf	indf2,c
  9958                           
  9959                           ;my_i2c.c: 350: ic_ptr->status = 0x5;
  9960  000416  0101               	movlb	1	; () banked
  9961  000418  EE20 F00D          	lfsr	2,13
  9962  00041C  0101               	movlb	1	; () banked
  9963  00041E  51C5               	movf	_ic_ptr& (0+255),w,b
  9964  000420  26D9               	addwf	fsr2l,f,c
  9965  000422  0101               	movlb	1	; () banked
  9966  000424  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9967  000426  22DA               	addwfc	fsr2h,f,c
  9968  000428  0E05               	movlw	5
  9969  00042A  6EDF               	movwf	indf2,c
  9970  00042C  D067               	goto	L10
  9971  00042E                     i2l3890:
  9972                           
  9973                           ;my_i2c.c: 353: msg_ready = 1;
  9974  00042E  0100               	movlb	0	; () banked
  9975  000430  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9976  000432  0E01               	movlw	1
  9977  000434  0100               	movlb	0	; () banked
  9978  000436  0100               	movlb	0	; () banked
  9979  000438  6FBE               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  9980  00043A  0100               	movlb	0	; () banked
  9981  00043C  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9982                           
  9983                           ; BSR set to: 0
  9984  00043E  D05E               	goto	L10
  9985  000440                     i2l3894:
  9986                           
  9987                           ; BSR set to: 1
  9988  000440  0100               	movlb	0	; () banked
  9989  000442  0100               	movlb	0	; () banked
  9990  000444  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9991  000446  B4D8               	btfsc	status,2,c
  9992  000448  D07A               	goto	i2l372
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;my_i2c.c: 357: ic_ptr->event_count++;
  9996  00044A  0101               	movlb	1	; () banked
  9997  00044C  EE20 F00C          	lfsr	2,12
  9998  000450  0101               	movlb	1	; () banked
  9999  000452  51C5               	movf	_ic_ptr& (0+255),w,b
 10000  000454  26D9               	addwf	fsr2l,f,c
 10001  000456  0101               	movlb	1	; () banked
 10002  000458  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10003  00045A  22DA               	addwfc	fsr2h,f,c
 10004  00045C  2ADF               	incf	indf2,f,c
 10005                           
 10006                           ; BSR set to: 1
 10007                           ;my_i2c.c: 358: if (SSPSTATbits.D_A == 1) {
 10008  00045E  AAC7               	btfss	4039,5,c	;volatile
 10009  000460  D027               	goto	i2l400
 10010                           
 10011                           ; BSR set to: 1
 10012                           ;my_i2c.c: 359: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 10013  000462  0101               	movlb	1	; () banked
 10014  000464  EE20 F00A          	lfsr	2,10
 10015  000468  0101               	movlb	1	; () banked
 10016  00046A  51C5               	movf	_ic_ptr& (0+255),w,b
 10017  00046C  26D9               	addwf	fsr2l,f,c
 10018  00046E  0101               	movlb	1	; () banked
 10019  000470  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10020  000472  22DA               	addwfc	fsr2h,f,c
 10021  000474  50DF               	movf	indf2,w,c
 10022  000476  0100               	movlb	0	; () banked
 10023  000478  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10024  00047A  0100               	movlb	0	; () banked
 10025  00047C  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10026  00047E  0D01               	mullw	1
 10027  000480  50F3               	movf	prodl,w,c
 10028  000482  0101               	movlb	1	; () banked
 10029  000484  0101               	movlb	1	; () banked
 10030  000486  25C5               	addwf	_ic_ptr& (0+255),w,b
 10031  000488  6ED9               	movwf	fsr2l,c
 10032  00048A  50F4               	movf	prodh,w,c
 10033  00048C  0101               	movlb	1	; () banked
 10034  00048E  0101               	movlb	1	; () banked
 10035  000490  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
 10036  000492  6EDA               	movwf	fsr2h,c
 10037  000494  0100               	movlb	0	; () banked
 10038  000496  C0BC  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
 10039                           
 10040                           ; BSR set to: 0
 10041                           ;my_i2c.c: 360: ic_ptr->buflen++;
 10042  00049A  0101               	movlb	1	; () banked
 10043  00049C  EE20 F00A          	lfsr	2,10
 10044  0004A0  0101               	movlb	1	; () banked
 10045  0004A2  51C5               	movf	_ic_ptr& (0+255),w,b
 10046  0004A4  26D9               	addwf	fsr2l,f,c
 10047  0004A6  0101               	movlb	1	; () banked
 10048  0004A8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10049  0004AA  22DA               	addwfc	fsr2h,f,c
 10050  0004AC  2ADF               	incf	indf2,f,c
 10051                           
 10052                           ;my_i2c.c: 361: } else {
 10053  0004AE  D047               	goto	i2l372
 10054  0004B0                     i2l400:
 10055                           
 10056                           ; BSR set to: 1
 10057                           ;my_i2c.c: 362: if (SSPSTATbits.R_W == 1) {
 10058  0004B0  A4C7               	btfss	4039,2,c	;volatile
 10059  0004B2  D6B6               	goto	i2l3846
 10060                           
 10061                           ; BSR set to: 1
 10062                           ;my_i2c.c: 363: ic_ptr->status = 0x8;
 10063  0004B4  0101               	movlb	1	; () banked
 10064  0004B6  EE20 F00D          	lfsr	2,13
 10065  0004BA  0101               	movlb	1	; () banked
 10066  0004BC  51C5               	movf	_ic_ptr& (0+255),w,b
 10067  0004BE  26D9               	addwf	fsr2l,f,c
 10068  0004C0  0101               	movlb	1	; () banked
 10069  0004C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10070  0004C4  22DA               	addwfc	fsr2h,f,c
 10071  0004C6  0E08               	movlw	8
 10072  0004C8  6EDF               	movwf	indf2,c
 10073                           
 10074                           ; BSR set to: 1
 10075                           ;my_i2c.c: 364: msg_ready = 1;
 10076  0004CA  0100               	movlb	0	; () banked
 10077  0004CC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10078  0004CE  0E01               	movlw	1
 10079  0004D0  0100               	movlb	0	; () banked
 10080  0004D2  0100               	movlb	0	; () banked
 10081  0004D4  6FBE               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
 10082  0004D6  0100               	movlb	0	; () banked
 10083  0004D8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10084  0004DA                     L11:
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;my_i2c.c: 365: msg_to_send = 1;
 10088  0004DA  0100               	movlb	0	; () banked
 10089  0004DC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10090  0004DE  0E01               	movlw	1
 10091  0004E0  0100               	movlb	0	; () banked
 10092  0004E2  0100               	movlb	0	; () banked
 10093  0004E4  6FBD               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
 10094  0004E6  0100               	movlb	0	; () banked
 10095  0004E8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;my_i2c.c: 367: data_read = 0;
 10099  0004EA  0100               	movlb	0	; () banked
 10100  0004EC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10101  0004EE  0E00               	movlw	0
 10102  0004F0  0100               	movlb	0	; () banked
 10103  0004F2  0100               	movlb	0	; () banked
 10104  0004F4  6FC1               	movwf	i2c_slave_int_handler@data_read& (0+255),b
 10105  0004F6                     L8:
 10106  0004F6  0100               	movlb	0	; () banked
 10107  0004F8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10108                           
 10109                           ;my_i2c.c: 368: } else {
 10110  0004FA  D021               	goto	i2l372
 10111  0004FC                     L10:
 10112                           
 10113                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
 10114  0004FC  0101               	movlb	1	; () banked
 10115  0004FE  EE20 F00D          	lfsr	2,13
 10116  000502  0101               	movlb	1	; () banked
 10117  000504  51C5               	movf	_ic_ptr& (0+255),w,b
 10118  000506  26D9               	addwf	fsr2l,f,c
 10119  000508  0101               	movlb	1	; () banked
 10120  00050A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10121  00050C  22DA               	addwfc	fsr2h,f,c
 10122  00050E  0E05               	movlw	5
 10123  000510  D731               	goto	L7
 10124  000512                     i2l3916:
 10125  000512  0101               	movlb	1	; () banked
 10126  000514  EE20 F00D          	lfsr	2,13
 10127  000518  0101               	movlb	1	; () banked
 10128  00051A  51C5               	movf	_ic_ptr& (0+255),w,b
 10129  00051C  26D9               	addwf	fsr2l,f,c
 10130  00051E  0101               	movlb	1	; () banked
 10131  000520  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10132  000522  22DA               	addwfc	fsr2h,f,c
 10133  000524  50DF               	movf	indf2,w,c
 10134                           
 10135                           ; Switch size 1, requested type "space"
 10136                           ; Number of cases is 4, Range of values is 5 to 8
 10137                           ; switch strategies available:
 10138                           ; Name         Instructions Cycles
 10139                           ; simple_byte           13     7 (average)
 10140                           ;	Chosen strategy is simple_byte
 10141  000526  0A05               	xorlw	5	; case 5
 10142  000528  B4D8               	btfsc	status,2,c
 10143  00052A  D63C               	goto	i2l374
 10144  00052C  0A03               	xorlw	3	; case 6
 10145  00052E  B4D8               	btfsc	status,2,c
 10146  000530  D65B               	goto	i2l378
 10147  000532  0A01               	xorlw	1	; case 7
 10148  000534  B4D8               	btfsc	status,2,c
 10149  000536  D720               	goto	i2l392
 10150  000538  0A0F               	xorlw	15	; case 8
 10151  00053A  B4D8               	btfsc	status,2,c
 10152  00053C  D6D1               	goto	i2l3866
 10153  00053E                     i2l372:
 10154                           
 10155                           ;my_i2c.c: 378: }
 10156                           ;my_i2c.c: 381: if (data_read || data_written) {
 10157  00053E  0100               	movlb	0	; () banked
 10158  000540  0100               	movlb	0	; () banked
 10159  000542  67C1               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
 10160  000544  D005               	goto	i2l406
 10161                           
 10162                           ; BSR set to: 0
 10163  000546  0100               	movlb	0	; () banked
 10164  000548  0100               	movlb	0	; () banked
 10165  00054A  51B4               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
 10166  00054C  B4D8               	btfsc	status,2,c
 10167  00054E  D002               	goto	i2l3922
 10168  000550                     i2l406:
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;my_i2c.c: 383: if (SSPCON1bits.CKP == 0) {
 10172  000550  A8C6               	btfss	4038,4,c	;volatile
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;my_i2c.c: 384: SSPCON1bits.CKP = 1;
 10176  000552  88C6               	bsf	4038,4,c	;volatile
 10177  000554                     i2l3922:
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;my_i2c.c: 385: }
 10181                           ;my_i2c.c: 386: }
 10182                           ;my_i2c.c: 389: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
 10183  000554  0101               	movlb	1	; () banked
 10184  000556  EE20 F00A          	lfsr	2,10
 10185  00055A  0101               	movlb	1	; () banked
 10186  00055C  51C5               	movf	_ic_ptr& (0+255),w,b
 10187  00055E  26D9               	addwf	fsr2l,f,c
 10188  000560  0101               	movlb	1	; () banked
 10189  000562  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10190  000564  22DA               	addwfc	fsr2h,f,c
 10191  000566  0E08               	movlw	8
 10192  000568  64DF               	cpfsgt	indf2,c
 10193  00056A  D024               	goto	i2l3928
 10194                           
 10195                           ; BSR set to: 1
 10196  00056C  0100               	movlb	0	; () banked
 10197  00056E  0100               	movlb	0	; () banked
 10198  000570  67BE               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
 10199  000572  D020               	goto	i2l3928
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;my_i2c.c: 390: ic_ptr->status = 0x5;
 10203  000574  0101               	movlb	1	; () banked
 10204  000576  EE20 F00D          	lfsr	2,13
 10205  00057A  0101               	movlb	1	; () banked
 10206  00057C  51C5               	movf	_ic_ptr& (0+255),w,b
 10207  00057E  26D9               	addwf	fsr2l,f,c
 10208  000580  0101               	movlb	1	; () banked
 10209  000582  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10210  000584  22DA               	addwfc	fsr2h,f,c
 10211  000586  0E05               	movlw	5
 10212  000588  6EDF               	movwf	indf2,c
 10213                           
 10214                           ;my_i2c.c: 391: ic_ptr->error_count++;
 10215  00058A  0101               	movlb	1	; () banked
 10216  00058C  EE20 F00F          	lfsr	2,15
 10217  000590  0101               	movlb	1	; () banked
 10218  000592  51C5               	movf	_ic_ptr& (0+255),w,b
 10219  000594  26D9               	addwf	fsr2l,f,c
 10220  000596  0101               	movlb	1	; () banked
 10221  000598  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10222  00059A  22DA               	addwfc	fsr2h,f,c
 10223  00059C  2ADF               	incf	indf2,f,c
 10224                           
 10225                           ;my_i2c.c: 392: ic_ptr->error_code = 0x7;
 10226  00059E  0101               	movlb	1	; () banked
 10227  0005A0  EE20 F00E          	lfsr	2,14
 10228  0005A4  0101               	movlb	1	; () banked
 10229  0005A6  51C5               	movf	_ic_ptr& (0+255),w,b
 10230  0005A8  26D9               	addwf	fsr2l,f,c
 10231  0005AA  0101               	movlb	1	; () banked
 10232  0005AC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10233  0005AE  22DA               	addwfc	fsr2h,f,c
 10234  0005B0  0E07               	movlw	7
 10235  0005B2  6EDF               	movwf	indf2,c
 10236  0005B4                     i2l3928:
 10237                           
 10238                           ;my_i2c.c: 393: }
 10239                           ;my_i2c.c: 395: if (msg_ready) {
 10240  0005B4  0100               	movlb	0	; () banked
 10241  0005B6  0100               	movlb	0	; () banked
 10242  0005B8  51BE               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
 10243  0005BA  B4D8               	btfsc	status,2,c
 10244  0005BC  D048               	goto	i2l3936
 10245                           
 10246                           ; BSR set to: 0
 10247                           ;my_i2c.c: 396: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
 10248  0005BE  0101               	movlb	1	; () banked
 10249  0005C0  EE20 F00C          	lfsr	2,12
 10250  0005C4  0101               	movlb	1	; () banked
 10251  0005C6  51C5               	movf	_ic_ptr& (0+255),w,b
 10252  0005C8  26D9               	addwf	fsr2l,f,c
 10253  0005CA  0101               	movlb	1	; () banked
 10254  0005CC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10255  0005CE  22DA               	addwfc	fsr2h,f,c
 10256  0005D0  0101               	movlb	1	; () banked
 10257  0005D2  EE10 F00A          	lfsr	1,10
 10258  0005D6  0101               	movlb	1	; () banked
 10259  0005D8  51C5               	movf	_ic_ptr& (0+255),w,b
 10260  0005DA  26E1               	addwf	fsr1l,f,c
 10261  0005DC  0101               	movlb	1	; () banked
 10262  0005DE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10263  0005E0  22E2               	addwfc	fsr1h,f,c
 10264  0005E2  50E7               	movf	indf1,w,c
 10265  0005E4  0100               	movlb	0	; () banked
 10266  0005E6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10267  0005E8  0100               	movlb	0	; () banked
 10268  0005EA  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10269  0005EC  0D01               	mullw	1
 10270  0005EE  50F3               	movf	prodl,w,c
 10271  0005F0  0101               	movlb	1	; () banked
 10272  0005F2  0101               	movlb	1	; () banked
 10273  0005F4  25C5               	addwf	_ic_ptr& (0+255),w,b
 10274  0005F6  6EE1               	movwf	fsr1l,c
 10275  0005F8  50F4               	movf	prodh,w,c
 10276  0005FA  0101               	movlb	1	; () banked
 10277  0005FC  0101               	movlb	1	; () banked
 10278  0005FE  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
 10279  000600  6EE2               	movwf	fsr1h,c
 10280  000602  CFDF FFE7          	movff	indf2,indf1
 10281                           
 10282                           ; BSR set to: 1
 10283                           ;my_i2c.c: 397: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
 10284  000606  0100               	movlb	0	; () banked
 10285  000608  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10286  00060A  0E28               	movlw	40
 10287  00060C  0100               	movlb	0	; () banked
 10288  00060E  0100               	movlb	0	; () banked
 10289  000610  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
 10290  000612  0100               	movlb	0	; () banked
 10291  000614  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10292  000616  0101               	movlb	1	; () banked
 10293  000618  0100               	movlb	0	; () banked
 10294  00061A  C1C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
 10295  00061E  0101               	movlb	1	; () banked
 10296  000620  0100               	movlb	0	; () banked
 10297  000622  C1C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
 10298  000626  0101               	movlb	1	; () banked
 10299  000628  EE20 F00A          	lfsr	2,10
 10300  00062C  0101               	movlb	1	; () banked
 10301  00062E  51C5               	movf	_ic_ptr& (0+255),w,b
 10302  000630  26D9               	addwf	fsr2l,f,c
 10303  000632  0101               	movlb	1	; () banked
 10304  000634  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10305  000636  22DA               	addwfc	fsr2h,f,c
 10306  000638  50DF               	movf	indf2,w,c
 10307  00063A  0100               	movlb	0	; () banked
 10308  00063C  6F9B               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
 10309  00063E  0100               	movlb	0	; () banked
 10310  000640  299B               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
 10311  000642  ECD3  F015         	call	_ToMainHigh_sendmsg
 10312                           
 10313                           ;my_i2c.c: 398: ic_ptr->buflen = 0;
 10314  000646  0101               	movlb	1	; () banked
 10315  000648  EE20 F00A          	lfsr	2,10
 10316  00064C  D04B               	goto	L9
 10317  00064E                     i2l3936:
 10318  00064E  0101               	movlb	1	; () banked
 10319  000650  EE20 F00F          	lfsr	2,15
 10320  000654  0101               	movlb	1	; () banked
 10321  000656  51C5               	movf	_ic_ptr& (0+255),w,b
 10322  000658  26D9               	addwf	fsr2l,f,c
 10323  00065A  0101               	movlb	1	; () banked
 10324  00065C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10325  00065E  22DA               	addwfc	fsr2h,f,c
 10326  000660  50DF               	movf	indf2,w,c
 10327  000662  B4D8               	btfsc	status,2,c
 10328  000664  D047               	goto	i2l3944
 10329                           
 10330                           ; BSR set to: 1
 10331                           ;my_i2c.c: 400: error_buf[0] = ic_ptr->error_count;
 10332  000666  0101               	movlb	1	; () banked
 10333  000668  EE20 F00F          	lfsr	2,15
 10334  00066C  0101               	movlb	1	; () banked
 10335  00066E  51C5               	movf	_ic_ptr& (0+255),w,b
 10336  000670  26D9               	addwf	fsr2l,f,c
 10337  000672  0101               	movlb	1	; () banked
 10338  000674  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10339  000676  22DA               	addwfc	fsr2h,f,c
 10340  000678  50DF               	movf	indf2,w,c
 10341  00067A  0100               	movlb	0	; () banked
 10342  00067C  0100               	movlb	0	; () banked
 10343  00067E  6FB1               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
 10344                           
 10345                           ;my_i2c.c: 401: error_buf[1] = ic_ptr->error_code;
 10346  000680  0101               	movlb	1	; () banked
 10347  000682  EE20 F00E          	lfsr	2,14
 10348  000686  0101               	movlb	1	; () banked
 10349  000688  51C5               	movf	_ic_ptr& (0+255),w,b
 10350  00068A  26D9               	addwf	fsr2l,f,c
 10351  00068C  0101               	movlb	1	; () banked
 10352  00068E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10353  000690  22DA               	addwfc	fsr2h,f,c
 10354  000692  50DF               	movf	indf2,w,c
 10355  000694  0100               	movlb	0	; () banked
 10356  000696  0100               	movlb	0	; () banked
 10357  000698  6FB2               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
 10358                           
 10359                           ;my_i2c.c: 402: error_buf[2] = ic_ptr->event_count;
 10360  00069A  0101               	movlb	1	; () banked
 10361  00069C  EE20 F00C          	lfsr	2,12
 10362  0006A0  0101               	movlb	1	; () banked
 10363  0006A2  51C5               	movf	_ic_ptr& (0+255),w,b
 10364  0006A4  26D9               	addwf	fsr2l,f,c
 10365  0006A6  0101               	movlb	1	; () banked
 10366  0006A8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10367  0006AA  22DA               	addwfc	fsr2h,f,c
 10368  0006AC  50DF               	movf	indf2,w,c
 10369  0006AE  0100               	movlb	0	; () banked
 10370  0006B0  0100               	movlb	0	; () banked
 10371  0006B2  6FB3               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;my_i2c.c: 403: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
 10375  0006B4  0100               	movlb	0	; () banked
 10376  0006B6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10377  0006B8  0E29               	movlw	41
 10378  0006BA  0100               	movlb	0	; () banked
 10379  0006BC  0100               	movlb	0	; () banked
 10380  0006BE  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
 10381  0006C0  0100               	movlb	0	; () banked
 10382  0006C2  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10383  0006C4  0100               	movlb	0	; () banked
 10384  0006C6  0E00               	movlw	high i2c_slave_int_handler@error_buf
 10385  0006C8  0100               	movlb	0	; () banked
 10386  0006CA  0100               	movlb	0	; () banked
 10387  0006CC  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
 10388  0006CE  0100               	movlb	0	; () banked
 10389  0006D0  0EB1               	movlw	low i2c_slave_int_handler@error_buf
 10390  0006D2  0100               	movlb	0	; () banked
 10391  0006D4  0100               	movlb	0	; () banked
 10392  0006D6  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
 10393  0006D8  0E03               	movlw	3
 10394  0006DA  ECD3  F015         	call	_ToMainHigh_sendmsg
 10395                           
 10396                           ;my_i2c.c: 404: ic_ptr->error_count = 0;
 10397  0006DE  0101               	movlb	1	; () banked
 10398  0006E0  EE20 F00F          	lfsr	2,15
 10399  0006E4                     L9:
 10400  0006E4  0101               	movlb	1	; () banked
 10401  0006E6  51C5               	movf	_ic_ptr& (0+255),w,b
 10402  0006E8  26D9               	addwf	fsr2l,f,c
 10403  0006EA  0101               	movlb	1	; () banked
 10404  0006EC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10405  0006EE  22DA               	addwfc	fsr2h,f,c
 10406  0006F0  0E00               	movlw	0
 10407  0006F2  6EDF               	movwf	indf2,c
 10408  0006F4                     i2l3944:
 10409                           
 10410                           ; BSR set to: 1
 10411                           ;my_i2c.c: 405: }
 10412                           ;my_i2c.c: 406: if (msg_to_send) {
 10413  0006F4  0100               	movlb	0	; () banked
 10414  0006F6  0100               	movlb	0	; () banked
 10415  0006F8  51BD               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
 10416  0006FA  B4D8               	btfsc	status,2,c
 10417  0006FC  0012               	return	
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;my_i2c.c: 407: int length = 6;
 10421  0006FE  0E00               	movlw	0
 10422  000700  0100               	movlb	0	; () banked
 10423  000702  0100               	movlb	0	; () banked
 10424  000704  6FC0               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
 10425  000706  0E06               	movlw	6
 10426  000708  0100               	movlb	0	; () banked
 10427  00070A  6FBF               	movwf	i2c_slave_int_handler@length& (0+255),b
 10428                           
 10429                           ; BSR set to: 0
 10430                           ;my_i2c.c: 411: if(ic_ptr->buffer[0] == 0xAA){
 10431  00070C  0EAA               	movlw	170
 10432  00070E  C1C5  FFD9         	movff	_ic_ptr,fsr2l
 10433  000712  C1C6  FFDA         	movff	_ic_ptr+1,fsr2h
 10434  000716  62DF               	cpfseq	indf2,c
 10435  000718  D045               	goto	i2l3966
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;my_i2c.c: 414: unsigned char messageType = 0x01, bitmask = 0x17, checksum;
 10439  00071A  0100               	movlb	0	; () banked
 10440  00071C  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10441  00071E  0E01               	movlw	1
 10442  000720  0100               	movlb	0	; () banked
 10443  000722  0100               	movlb	0	; () banked
 10444  000724  6FAE               	movwf	i2c_slave_int_handler@messageType& (0+255),b
 10445  000726  0100               	movlb	0	; () banked
 10446  000728  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10447  00072A  0100               	movlb	0	; () banked
 10448  00072C  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10449  00072E  0E17               	movlw	23
 10450  000730  0100               	movlb	0	; () banked
 10451  000732  0100               	movlb	0	; () banked
 10452  000734  6FAF               	movwf	i2c_slave_int_handler@bitmask& (0+255),b
 10453  000736  0100               	movlb	0	; () banked
 10454  000738  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;my_i2c.c: 417: unsigned char message[6];
 10458                           ;my_i2c.c: 420: message[0] = messageType;
 10459  00073A  C0AE  F0B6         	movff	i2c_slave_int_handler@messageType,i2c_slave_int_handler@message
 10460                           
 10461                           ; BSR set to: 0
 10462                           ;my_i2c.c: 421: message[1] = adcbuffer[1];
 10463  00073E  C167  F0B7         	movff	_adcbuffer+1,i2c_slave_int_handler@message+1
 10464                           
 10465                           ; BSR set to: 0
 10466                           ;my_i2c.c: 422: message[2] = adcbuffer[2];
 10467  000742  C168  F0B8         	movff	_adcbuffer+2,i2c_slave_int_handler@message+2
 10468                           
 10469                           ; BSR set to: 0
 10470                           ;my_i2c.c: 423: message[3] = adcbuffer[3];
 10471  000746  C169  F0B9         	movff	_adcbuffer+3,i2c_slave_int_handler@message+3
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;my_i2c.c: 426: checksum = message[1] + message[2] + message[3];
 10475  00074A  0100               	movlb	0	; () banked
 10476  00074C  0100               	movlb	0	; () banked
 10477  00074E  51B7               	movf	(i2c_slave_int_handler@message+1)& (0+255),w,b
 10478  000750  0100               	movlb	0	; () banked
 10479  000752  0100               	movlb	0	; () banked
 10480  000754  25B8               	addwf	(i2c_slave_int_handler@message+2)& (0+255),w,b
 10481  000756  0100               	movlb	0	; () banked
 10482  000758  0100               	movlb	0	; () banked
 10483  00075A  25B9               	addwf	(i2c_slave_int_handler@message+3)& (0+255),w,b
 10484  00075C  0100               	movlb	0	; () banked
 10485  00075E  0100               	movlb	0	; () banked
 10486  000760  6FB0               	movwf	i2c_slave_int_handler@checksum& (0+255),b
 10487                           
 10488                           ; BSR set to: 0
 10489                           ;my_i2c.c: 427: message[4] = checksum & bitmask;
 10490  000762  0100               	movlb	0	; () banked
 10491  000764  0100               	movlb	0	; () banked
 10492  000766  51B0               	movf	i2c_slave_int_handler@checksum& (0+255),w,b
 10493  000768  0100               	movlb	0	; () banked
 10494  00076A  0100               	movlb	0	; () banked
 10495  00076C  15AF               	andwf	i2c_slave_int_handler@bitmask& (0+255),w,b
 10496  00076E  0100               	movlb	0	; () banked
 10497  000770  0100               	movlb	0	; () banked
 10498  000772  6FBA               	movwf	(i2c_slave_int_handler@message+4)& (0+255),b
 10499                           
 10500                           ;my_i2c.c: 428: message[5] = 0x00;
 10501  000774  0100               	movlb	0	; () banked
 10502  000776  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10503  000778  0E00               	movlw	0
 10504  00077A  0100               	movlb	0	; () banked
 10505  00077C  0100               	movlb	0	; () banked
 10506  00077E  6FBB               	movwf	(i2c_slave_int_handler@message+5)& (0+255),b
 10507  000780  0100               	movlb	0	; () banked
 10508  000782  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10509                           
 10510                           ; BSR set to: 0
 10511                           ;my_i2c.c: 430: start_i2c_slave_reply(length, message);
 10512  000784  0100               	movlb	0	; () banked
 10513  000786  0E00               	movlw	high i2c_slave_int_handler@message
 10514  000788  0100               	movlb	0	; () banked
 10515  00078A  0100               	movlb	0	; () banked
 10516  00078C  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
 10517  00078E  0100               	movlb	0	; () banked
 10518  000790  0EB6               	movlw	low i2c_slave_int_handler@message
 10519  000792  0100               	movlb	0	; () banked
 10520  000794  0100               	movlb	0	; () banked
 10521  000796  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
 10522  000798  0100               	movlb	0	; () banked
 10523  00079A  0100               	movlb	0	; () banked
 10524  00079C  51BF               	movf	i2c_slave_int_handler@length& (0+255),w,b
 10525  00079E  ECC9  F00A         	call	_start_i2c_slave_reply
 10526                           
 10527                           ;my_i2c.c: 432: } else if(ic_ptr->buffer[0] == 0xBA){
 10528  0007A2  D0DB               	goto	i2l3998
 10529  0007A4                     i2l3966:
 10530  0007A4  0EBA               	movlw	186
 10531  0007A6  C1C5  FFD9         	movff	_ic_ptr,fsr2l
 10532  0007AA  C1C6  FFDA         	movff	_ic_ptr+1,fsr2h
 10533  0007AE  62DF               	cpfseq	indf2,c
 10534  0007B0  D05C               	goto	i2l3978
 10535                           
 10536                           ;my_i2c.c: 434: unsigned char ack[6] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 10537  0007B2  EE20  F0D0         	lfsr	2,i2c_slave_int_handler@F5143
 10538  0007B6  EE10  F09C         	lfsr	1,i2c_slave_int_handler@ack
 10539  0007BA  0E06               	movlw	6
 10540  0007BC                     i2u299_41:
 10541  0007BC  CFDE FFE6          	movff	postinc2,postinc1
 10542  0007C0  2EE8               	decfsz	wreg,f,c
 10543  0007C2  D7FC               	goto	i2u299_41
 10544                           
 10545                           ;my_i2c.c: 435: start_i2c_slave_reply(length, ack);
 10546  0007C4  0100               	movlb	0	; () banked
 10547  0007C6  0E00               	movlw	high i2c_slave_int_handler@ack
 10548  0007C8  0100               	movlb	0	; () banked
 10549  0007CA  0100               	movlb	0	; () banked
 10550  0007CC  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
 10551  0007CE  0100               	movlb	0	; () banked
 10552  0007D0  0E9C               	movlw	low i2c_slave_int_handler@ack
 10553  0007D2  0100               	movlb	0	; () banked
 10554  0007D4  0100               	movlb	0	; () banked
 10555  0007D6  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
 10556  0007D8  0100               	movlb	0	; () banked
 10557  0007DA  0100               	movlb	0	; () banked
 10558  0007DC  51BF               	movf	i2c_slave_int_handler@length& (0+255),w,b
 10559  0007DE  ECC9  F00A         	call	_start_i2c_slave_reply
 10560                           
 10561                           ;my_i2c.c: 436: rightEncoder = 0;
 10562  0007E2  0100               	movlb	0	; () banked
 10563  0007E4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10564  0007E6  0E00               	movlw	0
 10565  0007E8  0100               	movlb	0	; () banked
 10566  0007EA  0100               	movlb	0	; () banked
 10567  0007EC  6FDE               	movwf	_rightEncoder& (0+255),b
 10568  0007EE  0100               	movlb	0	; () banked
 10569  0007F0  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;my_i2c.c: 437: leftEncoder = 0;
 10573  0007F2  0100               	movlb	0	; () banked
 10574  0007F4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10575  0007F6  0E00               	movlw	0
 10576  0007F8  0100               	movlb	0	; () banked
 10577  0007FA  0100               	movlb	0	; () banked
 10578  0007FC  6FDD               	movwf	_leftEncoder& (0+255),b
 10579  0007FE  0100               	movlb	0	; () banked
 10580  000800  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;my_i2c.c: 438: motorMove(ic_ptr->buffer[1], ic_ptr->buffer[2], ic_ptr->buffer[3], ic_pt
      +                          r->buffer[4]);
 10584  000802  0101               	movlb	1	; () banked
 10585  000804  EE20 F002          	lfsr	2,2
 10586  000808  0101               	movlb	1	; () banked
 10587  00080A  51C5               	movf	_ic_ptr& (0+255),w,b
 10588  00080C  26D9               	addwf	fsr2l,f,c
 10589  00080E  0101               	movlb	1	; () banked
 10590  000810  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10591  000812  22DA               	addwfc	fsr2h,f,c
 10592  000814  50DF               	movf	indf2,w,c
 10593  000816  0100               	movlb	0	; () banked
 10594  000818  0100               	movlb	0	; () banked
 10595  00081A  6F85               	movwf	i2motorMove@right& (0+255),b
 10596  00081C  0101               	movlb	1	; () banked
 10597  00081E  EE20 F003          	lfsr	2,3
 10598  000822  0101               	movlb	1	; () banked
 10599  000824  51C5               	movf	_ic_ptr& (0+255),w,b
 10600  000826  26D9               	addwf	fsr2l,f,c
 10601  000828  0101               	movlb	1	; () banked
 10602  00082A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10603  00082C  22DA               	addwfc	fsr2h,f,c
 10604  00082E  50DF               	movf	indf2,w,c
 10605  000830  0100               	movlb	0	; () banked
 10606  000832  0100               	movlb	0	; () banked
 10607  000834  6F86               	movwf	i2motorMove@leftDistance& (0+255),b
 10608  000836  0101               	movlb	1	; () banked
 10609  000838  EE20 F004          	lfsr	2,4
 10610  00083C  0101               	movlb	1	; () banked
 10611  00083E  51C5               	movf	_ic_ptr& (0+255),w,b
 10612  000840  26D9               	addwf	fsr2l,f,c
 10613  000842  0101               	movlb	1	; () banked
 10614  000844  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10615  000846  22DA               	addwfc	fsr2h,f,c
 10616  000848  50DF               	movf	indf2,w,c
 10617  00084A  0100               	movlb	0	; () banked
 10618  00084C  0100               	movlb	0	; () banked
 10619  00084E  6F87               	movwf	i2motorMove@rightDistance& (0+255),b
 10620  000850  0101               	movlb	1	; () banked
 10621  000852  EE20 F001          	lfsr	2,1
 10622  000856  0101               	movlb	1	; () banked
 10623  000858  51C5               	movf	_ic_ptr& (0+255),w,b
 10624  00085A  26D9               	addwf	fsr2l,f,c
 10625  00085C  0101               	movlb	1	; () banked
 10626  00085E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10627  000860  22DA               	addwfc	fsr2h,f,c
 10628  000862  50DF               	movf	indf2,w,c
 10629  000864  EC0B  F010         	call	i2_motorMove
 10630                           
 10631                           ;my_i2c.c: 439: }
 10632  000868  D078               	goto	i2l3998
 10633  00086A                     i2l3978:
 10634                           
 10635                           ;my_i2c.c: 440: else if(ic_ptr->buffer[0] == 0xCA) {
 10636  00086A  0ECA               	movlw	202
 10637  00086C  C1C5  FFD9         	movff	_ic_ptr,fsr2l
 10638  000870  C1C6  FFDA         	movff	_ic_ptr+1,fsr2h
 10639  000874  62DF               	cpfseq	indf2,c
 10640  000876  D01F               	goto	i2l3990
 10641                           
 10642                           ;my_i2c.c: 441: unsigned char dist[6] = {0x04, 0x00, 0x00, 0x00, 0x00, 0x00};
 10643  000878  EE20  F0E0         	lfsr	2,i2c_slave_int_handler@F5145
 10644  00087C  EE10  F0A8         	lfsr	1,i2c_slave_int_handler@dist
 10645  000880  0E06               	movlw	6
 10646  000882                     i2u301_41:
 10647  000882  CFDE FFE6          	movff	postinc2,postinc1
 10648  000886  2EE8               	decfsz	wreg,f,c
 10649  000888  D7FC               	goto	i2u301_41
 10650                           
 10651                           ;my_i2c.c: 442: dist[1] = stopCond;
 10652  00088A  C0DF  F0A9         	movff	_stopCond,i2c_slave_int_handler@dist+1
 10653                           
 10654                           ;my_i2c.c: 443: dist[2] = leftEncoder;
 10655  00088E  C0DD  F0AA         	movff	_leftEncoder,i2c_slave_int_handler@dist+2
 10656                           
 10657                           ;my_i2c.c: 444: dist[3] = rightEncoder;
 10658  000892  C0DE  F0AB         	movff	_rightEncoder,i2c_slave_int_handler@dist+3
 10659                           
 10660                           ;my_i2c.c: 445: start_i2c_slave_reply(length, dist);
 10661  000896  0100               	movlb	0	; () banked
 10662  000898  0E00               	movlw	high i2c_slave_int_handler@dist
 10663  00089A  0100               	movlb	0	; () banked
 10664  00089C  0100               	movlb	0	; () banked
 10665  00089E  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
 10666  0008A0  0100               	movlb	0	; () banked
 10667  0008A2  0EA8               	movlw	low i2c_slave_int_handler@dist
 10668  0008A4  0100               	movlb	0	; () banked
 10669  0008A6  0100               	movlb	0	; () banked
 10670  0008A8  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
 10671  0008AA  0100               	movlb	0	; () banked
 10672  0008AC  0100               	movlb	0	; () banked
 10673  0008AE  51BF               	movf	i2c_slave_int_handler@length& (0+255),w,b
 10674  0008B0  ECC9  F00A         	call	_start_i2c_slave_reply
 10675                           
 10676                           ;my_i2c.c: 446: }
 10677  0008B4  D052               	goto	i2l3998
 10678  0008B6                     i2l3990:
 10679                           
 10680                           ;my_i2c.c: 447: else if(ic_ptr->buffer[0] == 0xBC) {
 10681  0008B6  0EBC               	movlw	188
 10682  0008B8  C1C5  FFD9         	movff	_ic_ptr,fsr2l
 10683  0008BC  C1C6  FFDA         	movff	_ic_ptr+1,fsr2h
 10684  0008C0  62DF               	cpfseq	indf2,c
 10685  0008C2  D04B               	goto	i2l3998
 10686                           
 10687                           ;my_i2c.c: 448: unsigned char ack[6] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 10688  0008C4  EE20  F0D6         	lfsr	2,i2c_slave_int_handler@F5147
 10689  0008C8  EE10  F0A2         	lfsr	1,i2c_slave_int_handler@ack_1696
 10690  0008CC  0E06               	movlw	6
 10691  0008CE                     i2u303_41:
 10692  0008CE  CFDE FFE6          	movff	postinc2,postinc1
 10693  0008D2  2EE8               	decfsz	wreg,f,c
 10694  0008D4  D7FC               	goto	i2u303_41
 10695                           
 10696                           ;my_i2c.c: 449: start_i2c_slave_reply(length, ack);
 10697  0008D6  0100               	movlb	0	; () banked
 10698  0008D8  0E00               	movlw	high i2c_slave_int_handler@ack_1696
 10699  0008DA  0100               	movlb	0	; () banked
 10700  0008DC  0100               	movlb	0	; () banked
 10701  0008DE  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
 10702  0008E0  0100               	movlb	0	; () banked
 10703  0008E2  0EA2               	movlw	low i2c_slave_int_handler@ack_1696
 10704  0008E4  0100               	movlb	0	; () banked
 10705  0008E6  0100               	movlb	0	; () banked
 10706  0008E8  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
 10707  0008EA  0100               	movlb	0	; () banked
 10708  0008EC  0100               	movlb	0	; () banked
 10709  0008EE  51BF               	movf	i2c_slave_int_handler@length& (0+255),w,b
 10710  0008F0  ECC9  F00A         	call	_start_i2c_slave_reply
 10711                           
 10712                           ;my_i2c.c: 450: motorMove(ic_ptr->buffer[1], ic_ptr->buffer[2], ic_ptr->buffer[3], ic_pt
      +                          r->buffer[4]);
 10713  0008F4  0101               	movlb	1	; () banked
 10714  0008F6  EE20 F002          	lfsr	2,2
 10715  0008FA  0101               	movlb	1	; () banked
 10716  0008FC  51C5               	movf	_ic_ptr& (0+255),w,b
 10717  0008FE  26D9               	addwf	fsr2l,f,c
 10718  000900  0101               	movlb	1	; () banked
 10719  000902  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10720  000904  22DA               	addwfc	fsr2h,f,c
 10721  000906  50DF               	movf	indf2,w,c
 10722  000908  0100               	movlb	0	; () banked
 10723  00090A  0100               	movlb	0	; () banked
 10724  00090C  6F85               	movwf	i2motorMove@right& (0+255),b
 10725  00090E  0101               	movlb	1	; () banked
 10726  000910  EE20 F003          	lfsr	2,3
 10727  000914  0101               	movlb	1	; () banked
 10728  000916  51C5               	movf	_ic_ptr& (0+255),w,b
 10729  000918  26D9               	addwf	fsr2l,f,c
 10730  00091A  0101               	movlb	1	; () banked
 10731  00091C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10732  00091E  22DA               	addwfc	fsr2h,f,c
 10733  000920  50DF               	movf	indf2,w,c
 10734  000922  0100               	movlb	0	; () banked
 10735  000924  0100               	movlb	0	; () banked
 10736  000926  6F86               	movwf	i2motorMove@leftDistance& (0+255),b
 10737  000928  0101               	movlb	1	; () banked
 10738  00092A  EE20 F004          	lfsr	2,4
 10739  00092E  0101               	movlb	1	; () banked
 10740  000930  51C5               	movf	_ic_ptr& (0+255),w,b
 10741  000932  26D9               	addwf	fsr2l,f,c
 10742  000934  0101               	movlb	1	; () banked
 10743  000936  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10744  000938  22DA               	addwfc	fsr2h,f,c
 10745  00093A  50DF               	movf	indf2,w,c
 10746  00093C  0100               	movlb	0	; () banked
 10747  00093E  0100               	movlb	0	; () banked
 10748  000940  6F87               	movwf	i2motorMove@rightDistance& (0+255),b
 10749  000942  0101               	movlb	1	; () banked
 10750  000944  EE20 F001          	lfsr	2,1
 10751  000948  0101               	movlb	1	; () banked
 10752  00094A  51C5               	movf	_ic_ptr& (0+255),w,b
 10753  00094C  26D9               	addwf	fsr2l,f,c
 10754  00094E  0101               	movlb	1	; () banked
 10755  000950  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10756  000952  22DA               	addwfc	fsr2h,f,c
 10757  000954  50DF               	movf	indf2,w,c
 10758  000956  EC0B  F010         	call	i2_motorMove
 10759  00095A                     i2l3998:
 10760                           
 10761                           ;my_i2c.c: 451: }
 10762                           ;my_i2c.c: 452: msg_to_send = 0;
 10763  00095A  0100               	movlb	0	; () banked
 10764  00095C  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10765  00095E  0E00               	movlw	0
 10766  000960  0100               	movlb	0	; () banked
 10767  000962  0100               	movlb	0	; () banked
 10768  000964  6FBD               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
 10769  000966  0100               	movlb	0	; () banked
 10770  000968  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10771  00096A  0012               	return	
 10772  00096C                     __end_of_i2c_slave_int_handler:
 10773                           	opt stack 0
 10774                           pclatu	equ	0xFFB
 10775                           pclath	equ	0xFFA
 10776                           tblptru	equ	0xFF8
 10777                           tblptrh	equ	0xFF7
 10778                           tblptrl	equ	0xFF6
 10779                           tablat	equ	0xFF5
 10780                           prodh	equ	0xFF4
 10781                           prodl	equ	0xFF3
 10782                           intcon	equ	0xFF2
 10783                           intcon2	equ	0xFF1
 10784                           postinc0	equ	0xFEE
 10785                           fsr0h	equ	0xFEA
 10786                           fsr0l	equ	0xFE9
 10787                           wreg	equ	0xFE8
 10788                           indf1	equ	0xFE7
 10789                           postinc1	equ	0xFE6
 10790                           postdec1	equ	0xFE5
 10791                           fsr1h	equ	0xFE2
 10792                           fsr1l	equ	0xFE1
 10793                           bsr	equ	0xFE0
 10794                           indf2	equ	0xFDF
 10795                           postinc2	equ	0xFDE
 10796                           postdec2	equ	0xFDD
 10797                           fsr2h	equ	0xFDA
 10798                           fsr2l	equ	0xFD9
 10799                           status	equ	0xFD8
 10800                           
 10801 ;; *************** function i2_motorMove *****************
 10802 ;; Defined at:
 10803 ;;		line 5 in file "../src/motor.c"
 10804 ;; Parameters:    Size  Location     Type
 10805 ;;  left            1    wreg     unsigned char 
 10806 ;;  right           1    5[BANK0 ] unsigned char 
 10807 ;;  leftDistance    1    6[BANK0 ] unsigned char 
 10808 ;;  rightDistanc    1    7[BANK0 ] unsigned char 
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;  left            1   11[BANK0 ] unsigned char 
 10811 ;;  motorMove       2    9[BANK0 ] unsigned char [2]
 10812 ;; Return value:  Size  Location     Type
 10813 ;;		None               void
 10814 ;; Registers used:
 10815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10816 ;; Tracked objects:
 10817 ;;		On entry : 0/0
 10818 ;;		On exit  : 0/0
 10819 ;;		Unchanged: 0/0
 10820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10821 ;;      Params:         0       3       0       0       0
 10822 ;;      Locals:         0       3       0       0       0
 10823 ;;      Temps:          0       1       0       0       0
 10824 ;;      Totals:         0       7       0       0       0
 10825 ;;Total ram usage:        7 bytes
 10826 ;; Hardware stack levels used:    1
 10827 ;; Hardware stack levels required when called:    1
 10828 ;; This function calls:
 10829 ;;		i2_WriteTimer0
 10830 ;;		i2_WriteTimer1
 10831 ;;		i2_uart_trans
 10832 ;; This function is called by:
 10833 ;;		_i2c_slave_int_handler
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837                           	psect	text57
 10838  002016                     __ptext57:
 10839                           	opt stack 0
 10840  002016                     i2_motorMove:
 10841                           	opt stack 17
 10842                           
 10843                           ; BSR set to: 0
 10844                           ;incstack = 0
 10845                           ;i2motorMove@left stored from wreg
 10846  002016  CFE8 F08B          	movff	wreg,i2motorMove@left
 10847                           
 10848                           ;motor.c: 7: if(leftDistance != 0 && rightDistance != 0){
 10849  00201A  0100               	movlb	0	; () banked
 10850  00201C  0100               	movlb	0	; () banked
 10851  00201E  5186               	movf	i2motorMove@leftDistance& (0+255),w,b
 10852  002020  B4D8               	btfsc	status,2,c
 10853  002022  D009               	goto	i2l4270
 10854                           
 10855                           ; BSR set to: 0
 10856  002024  0100               	movlb	0	; () banked
 10857  002026  0100               	movlb	0	; () banked
 10858  002028  5187               	movf	i2motorMove@rightDistance& (0+255),w,b
 10859  00202A  B4D8               	btfsc	status,2,c
 10860  00202C  D004               	goto	i2l4270
 10861                           
 10862                           ; BSR set to: 0
 10863                           ;motor.c: 8: leftDistDesired = leftDistance;
 10864  00202E  C086  F068         	movff	i2motorMove@leftDistance,_leftDistDesired
 10865                           
 10866                           ;motor.c: 9: rightDistDesired = rightDistance;
 10867  002032  C087  F069         	movff	i2motorMove@rightDistance,_rightDistDesired
 10868  002036                     i2l4270:
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;motor.c: 10: }
 10872                           ;motor.c: 12: if(left != 0x00 && right != 0x00){
 10873  002036  0100               	movlb	0	; () banked
 10874  002038  0100               	movlb	0	; () banked
 10875  00203A  518B               	movf	i2motorMove@left& (0+255),w,b
 10876  00203C  B4D8               	btfsc	status,2,c
 10877  00203E  D009               	goto	i2l4276
 10878                           
 10879                           ; BSR set to: 0
 10880  002040  0100               	movlb	0	; () banked
 10881  002042  0100               	movlb	0	; () banked
 10882  002044  5185               	movf	i2motorMove@right& (0+255),w,b
 10883  002046  B4D8               	btfsc	status,2,c
 10884  002048  D004               	goto	i2l4276
 10885                           
 10886                           ; BSR set to: 0
 10887                           ;motor.c: 13: stopCond = 0x00;
 10888  00204A  0100               	movlb	0	; () banked
 10889  00204C  6F88               	movwf	??i2_motorMove& (0+255),b
 10890  00204E  0E00               	movlw	0
 10891  002050  D003               	goto	L12
 10892  002052                     i2l4276:
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;motor.c: 15: stopCond = 0x01;
 10896  002052  0100               	movlb	0	; () banked
 10897  002054  6F88               	movwf	??i2_motorMove& (0+255),b
 10898  002056  0E01               	movlw	1
 10899  002058                     L12:
 10900  002058  0100               	movlb	0	; () banked
 10901  00205A  0100               	movlb	0	; () banked
 10902  00205C  6FDF               	movwf	_stopCond& (0+255),b
 10903  00205E  0100               	movlb	0	; () banked
 10904  002060  5188               	movf	??i2_motorMove& (0+255),w,b
 10905                           
 10906                           ; BSR set to: 0
 10907                           ;motor.c: 16: }
 10908                           ;motor.c: 18: WriteTimer0(0x7F);
 10909                           
 10910                           ; BSR set to: 0
 10911  002062  0E00               	movlw	0
 10912  002064  0100               	movlb	0	; () banked
 10913  002066  0100               	movlb	0	; () banked
 10914  002068  6F81               	movwf	(i2WriteTimer0@timer0+1)& (0+255),b
 10915  00206A  0E7F               	movlw	127
 10916  00206C  0100               	movlb	0	; () banked
 10917  00206E  6F80               	movwf	i2WriteTimer0@timer0& (0+255),b
 10918  002070  ECC0  F016         	call	i2_WriteTimer0	;wreg free
 10919                           
 10920                           ;motor.c: 19: WriteTimer1(0xFF7F);
 10921  002074  0EFF               	movlw	255
 10922  002076  0100               	movlb	0	; () banked
 10923  002078  0100               	movlb	0	; () banked
 10924  00207A  6F81               	movwf	(i2WriteTimer1@timer1+1)& (0+255),b
 10925  00207C  0E7F               	movlw	127
 10926  00207E  0100               	movlb	0	; () banked
 10927  002080  6F80               	movwf	i2WriteTimer1@timer1& (0+255),b
 10928  002082  ECB7  F016         	call	i2_WriteTimer1	;wreg free
 10929                           
 10930                           ;motor.c: 20: unsigned char direction[2];
 10931                           ;motor.c: 21: direction[0] = left;
 10932  002086  C08B  F089         	movff	i2motorMove@left,i2motorMove@direction
 10933                           
 10934                           ;motor.c: 22: direction[1] = right;
 10935  00208A  C085  F08A         	movff	i2motorMove@right,i2motorMove@direction+1
 10936                           
 10937                           ;motor.c: 23: uart_trans(2, direction);
 10938  00208E  0100               	movlb	0	; () banked
 10939  002090  0E00               	movlw	high i2motorMove@direction
 10940  002092  0100               	movlb	0	; () banked
 10941  002094  0100               	movlb	0	; () banked
 10942  002096  6F81               	movwf	(i2uart_trans@data+1)& (0+255),b
 10943  002098  0100               	movlb	0	; () banked
 10944  00209A  0E89               	movlw	low i2motorMove@direction
 10945  00209C  0100               	movlb	0	; () banked
 10946  00209E  0100               	movlb	0	; () banked
 10947  0020A0  6F80               	movwf	i2uart_trans@data& (0+255),b
 10948  0020A2  0E02               	movlw	2
 10949  0020A4  ECC1  F00E         	call	i2_uart_trans
 10950  0020A8  0012               	return	
 10951  0020AA                     __end_ofi2_motorMove:
 10952                           	opt stack 0
 10953                           pclatu	equ	0xFFB
 10954                           pclath	equ	0xFFA
 10955                           tblptru	equ	0xFF8
 10956                           tblptrh	equ	0xFF7
 10957                           tblptrl	equ	0xFF6
 10958                           tablat	equ	0xFF5
 10959                           prodh	equ	0xFF4
 10960                           prodl	equ	0xFF3
 10961                           intcon	equ	0xFF2
 10962                           intcon2	equ	0xFF1
 10963                           postinc0	equ	0xFEE
 10964                           fsr0h	equ	0xFEA
 10965                           fsr0l	equ	0xFE9
 10966                           wreg	equ	0xFE8
 10967                           indf1	equ	0xFE7
 10968                           postinc1	equ	0xFE6
 10969                           postdec1	equ	0xFE5
 10970                           fsr1h	equ	0xFE2
 10971                           fsr1l	equ	0xFE1
 10972                           bsr	equ	0xFE0
 10973                           indf2	equ	0xFDF
 10974                           postinc2	equ	0xFDE
 10975                           postdec2	equ	0xFDD
 10976                           fsr2h	equ	0xFDA
 10977                           fsr2l	equ	0xFD9
 10978                           status	equ	0xFD8
 10979                           
 10980 ;; *************** function i2_uart_trans *****************
 10981 ;; Defined at:
 10982 ;;		line 61 in file "../src/my_uart.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  length          1    wreg     unsigned char 
 10985 ;;  data            2    0[BANK0 ] PTR unsigned char 
 10986 ;;		 -> motorMove@direction(2), main@msgbuffer(11), 
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;  length          1    4[BANK0 ] unsigned char 
 10989 ;; Return value:  Size  Location     Type
 10990 ;;		None               void
 10991 ;; Registers used:
 10992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10998 ;;      Params:         0       2       0       0       0
 10999 ;;      Locals:         0       1       0       0       0
 11000 ;;      Temps:          0       2       0       0       0
 11001 ;;      Totals:         0       5       0       0       0
 11002 ;;Total ram usage:        5 bytes
 11003 ;; Hardware stack levels used:    1
 11004 ;; This function calls:
 11005 ;;		Nothing
 11006 ;; This function is called by:
 11007 ;;		i2_motorMove
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011                           	psect	text58
 11012  001D82                     __ptext58:
 11013                           	opt stack 0
 11014  001D82                     i2_uart_trans:
 11015                           	opt stack 17
 11016                           
 11017                           ;incstack = 0
 11018                           ;i2uart_trans@length stored from wreg
 11019  001D82  CFE8 F084          	movff	wreg,i2uart_trans@length
 11020                           
 11021                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
 11022  001D86  EE20 F00D          	lfsr	2,13
 11023  001D8A  506A               	movf	_uc_ptr,w,c
 11024  001D8C  26D9               	addwf	fsr2l,f,c
 11025  001D8E  506B               	movf	_uc_ptr+1,w,c
 11026  001D90  22DA               	addwfc	fsr2h,f,c
 11027  001D92  0E00               	movlw	0
 11028  001D94  6EDF               	movwf	indf2,c
 11029  001D96  D035               	goto	i2l4258
 11030  001D98                     i2l4254:
 11031                           
 11032                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
 11033  001D98  EE20 F00D          	lfsr	2,13
 11034  001D9C  506A               	movf	_uc_ptr,w,c
 11035  001D9E  26D9               	addwf	fsr2l,f,c
 11036  001DA0  506B               	movf	_uc_ptr+1,w,c
 11037  001DA2  22DA               	addwfc	fsr2h,f,c
 11038  001DA4  50DF               	movf	indf2,w,c
 11039  001DA6  0100               	movlb	0	; () banked
 11040  001DA8  6F82               	movwf	??i2_uart_trans& (0+255),b
 11041  001DAA  0100               	movlb	0	; () banked
 11042  001DAC  5182               	movf	??i2_uart_trans& (0+255),w,b
 11043  001DAE  0D01               	mullw	1
 11044  001DB0  50F3               	movf	prodl,w,c
 11045  001DB2  0100               	movlb	0	; () banked
 11046  001DB4  0100               	movlb	0	; () banked
 11047  001DB6  2580               	addwf	i2uart_trans@data& (0+255),w,b
 11048  001DB8  6ED9               	movwf	fsr2l,c
 11049  001DBA  50F4               	movf	prodh,w,c
 11050  001DBC  0100               	movlb	0	; () banked
 11051  001DBE  0100               	movlb	0	; () banked
 11052  001DC0  2181               	addwfc	(i2uart_trans@data+1)& (0+255),w,b
 11053  001DC2  6EDA               	movwf	fsr2h,c
 11054  001DC4  EE10 F00D          	lfsr	1,13
 11055  001DC8  506A               	movf	_uc_ptr,w,c
 11056  001DCA  26E1               	addwf	fsr1l,f,c
 11057  001DCC  506B               	movf	_uc_ptr+1,w,c
 11058  001DCE  22E2               	addwfc	fsr1h,f,c
 11059  001DD0  50E7               	movf	indf1,w,c
 11060  001DD2  0100               	movlb	0	; () banked
 11061  001DD4  6F83               	movwf	(??i2_uart_trans+1)& (0+255),b
 11062  001DD6  0100               	movlb	0	; () banked
 11063  001DD8  5183               	movf	(??i2_uart_trans+1)& (0+255),w,b
 11064  001DDA  0D01               	mullw	1
 11065  001DDC  0E07               	movlw	7
 11066  001DDE  26F3               	addwf	prodl,f,c
 11067  001DE0  0E00               	movlw	0
 11068  001DE2  22F4               	addwfc	prodh,f,c
 11069  001DE4  50F3               	movf	prodl,w,c
 11070  001DE6  246A               	addwf	_uc_ptr,w,c
 11071  001DE8  6EE1               	movwf	fsr1l,c
 11072  001DEA  50F4               	movf	prodh,w,c
 11073  001DEC  206B               	addwfc	_uc_ptr+1,w,c
 11074  001DEE  6EE2               	movwf	fsr1h,c
 11075  001DF0  CFDF FFE7          	movff	indf2,indf1
 11076                           
 11077                           ; BSR set to: 0
 11078  001DF4  EE20 F00D          	lfsr	2,13
 11079  001DF8  506A               	movf	_uc_ptr,w,c
 11080  001DFA  26D9               	addwf	fsr2l,f,c
 11081  001DFC  506B               	movf	_uc_ptr+1,w,c
 11082  001DFE  22DA               	addwfc	fsr2h,f,c
 11083  001E00  2ADF               	incf	indf2,f,c
 11084  001E02                     i2l4258:
 11085  001E02  EE20 F00D          	lfsr	2,13
 11086  001E06  506A               	movf	_uc_ptr,w,c
 11087  001E08  26D9               	addwf	fsr2l,f,c
 11088  001E0A  506B               	movf	_uc_ptr+1,w,c
 11089  001E0C  22DA               	addwfc	fsr2h,f,c
 11090  001E0E  50DF               	movf	indf2,w,c
 11091  001E10  0100               	movlb	0	; () banked
 11092  001E12  6F82               	movwf	??i2_uart_trans& (0+255),b
 11093  001E14  0100               	movlb	0	; () banked
 11094  001E16  0100               	movlb	0	; () banked
 11095  001E18  5184               	movf	i2uart_trans@length& (0+255),w,b
 11096  001E1A  0100               	movlb	0	; () banked
 11097  001E1C  5D82               	subwf	??i2_uart_trans& (0+255),w,b
 11098  001E1E  A0D8               	btfss	status,0,c
 11099  001E20  D7BB               	goto	i2l4254
 11100                           
 11101                           ; BSR set to: 0
 11102                           ;my_uart.c: 67: }
 11103                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
 11104                           
 11105                           ; BSR set to: 0
 11106  001E22  EE20 F00E          	lfsr	2,14
 11107  001E26  506A               	movf	_uc_ptr,w,c
 11108  001E28  26D9               	addwf	fsr2l,f,c
 11109  001E2A  506B               	movf	_uc_ptr+1,w,c
 11110  001E2C  22DA               	addwfc	fsr2h,f,c
 11111  001E2E  0E00               	movlw	0
 11112  001E30  6EDF               	movwf	indf2,c
 11113                           
 11114                           ; BSR set to: 0
 11115                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
 11116  001E32  889D               	bsf	3997,4,c	;volatile
 11117                           
 11118                           ; BSR set to: 0
 11119  001E34  0012               	return	
 11120  001E36                     __end_ofi2_uart_trans:
 11121                           	opt stack 0
 11122                           pclatu	equ	0xFFB
 11123                           pclath	equ	0xFFA
 11124                           tblptru	equ	0xFF8
 11125                           tblptrh	equ	0xFF7
 11126                           tblptrl	equ	0xFF6
 11127                           tablat	equ	0xFF5
 11128                           prodh	equ	0xFF4
 11129                           prodl	equ	0xFF3
 11130                           intcon	equ	0xFF2
 11131                           intcon2	equ	0xFF1
 11132                           postinc0	equ	0xFEE
 11133                           fsr0h	equ	0xFEA
 11134                           fsr0l	equ	0xFE9
 11135                           wreg	equ	0xFE8
 11136                           indf1	equ	0xFE7
 11137                           postinc1	equ	0xFE6
 11138                           postdec1	equ	0xFE5
 11139                           fsr1h	equ	0xFE2
 11140                           fsr1l	equ	0xFE1
 11141                           bsr	equ	0xFE0
 11142                           indf2	equ	0xFDF
 11143                           postinc2	equ	0xFDE
 11144                           postdec2	equ	0xFDD
 11145                           fsr2h	equ	0xFDA
 11146                           fsr2l	equ	0xFD9
 11147                           status	equ	0xFD8
 11148                           
 11149 ;; *************** function i2_WriteTimer1 *****************
 11150 ;; Defined at:
 11151 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
 11152 ;; Parameters:    Size  Location     Type
 11153 ;;  timer1          2    0[BANK0 ] unsigned int 
 11154 ;; Auto vars:     Size  Location     Type
 11155 ;;  WriteTimer1     2    2[BANK0 ] struct Timers
 11156 ;; Return value:  Size  Location     Type
 11157 ;;		None               void
 11158 ;; Registers used:
 11159 ;;		None
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/0
 11162 ;;		On exit  : 0/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11165 ;;      Params:         0       2       0       0       0
 11166 ;;      Locals:         0       2       0       0       0
 11167 ;;      Temps:          0       0       0       0       0
 11168 ;;      Totals:         0       4       0       0       0
 11169 ;;Total ram usage:        4 bytes
 11170 ;; Hardware stack levels used:    1
 11171 ;; This function calls:
 11172 ;;		Nothing
 11173 ;; This function is called by:
 11174 ;;		i2_motorMove
 11175 ;; This function uses a non-reentrant model
 11176 ;;
 11177                           
 11178                           	psect	text59
 11179  002D6E                     __ptext59:
 11180                           	opt stack 0
 11181  002D6E                     i2_WriteTimer1:
 11182                           	opt stack 17
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;incstack = 0
 11186  002D6E  C080  F082         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
 11187  002D72  C081  F083         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
 11188  002D76  C083  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
 11189  002D7A  C082  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
 11190  002D7E  0012               	return	
 11191  002D80                     __end_ofi2_WriteTimer1:
 11192                           	opt stack 0
 11193                           pclatu	equ	0xFFB
 11194                           pclath	equ	0xFFA
 11195                           tblptru	equ	0xFF8
 11196                           tblptrh	equ	0xFF7
 11197                           tblptrl	equ	0xFF6
 11198                           tablat	equ	0xFF5
 11199                           prodh	equ	0xFF4
 11200                           prodl	equ	0xFF3
 11201                           intcon	equ	0xFF2
 11202                           intcon2	equ	0xFF1
 11203                           postinc0	equ	0xFEE
 11204                           fsr0h	equ	0xFEA
 11205                           fsr0l	equ	0xFE9
 11206                           wreg	equ	0xFE8
 11207                           indf1	equ	0xFE7
 11208                           postinc1	equ	0xFE6
 11209                           postdec1	equ	0xFE5
 11210                           fsr1h	equ	0xFE2
 11211                           fsr1l	equ	0xFE1
 11212                           bsr	equ	0xFE0
 11213                           indf2	equ	0xFDF
 11214                           postinc2	equ	0xFDE
 11215                           postdec2	equ	0xFDD
 11216                           fsr2h	equ	0xFDA
 11217                           fsr2l	equ	0xFD9
 11218                           status	equ	0xFD8
 11219                           
 11220 ;; *************** function i2_WriteTimer0 *****************
 11221 ;; Defined at:
 11222 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
 11223 ;; Parameters:    Size  Location     Type
 11224 ;;  timer0          2    0[BANK0 ] unsigned int 
 11225 ;; Auto vars:     Size  Location     Type
 11226 ;;  WriteTimer0     2    2[BANK0 ] struct Timers
 11227 ;; Return value:  Size  Location     Type
 11228 ;;		None               void
 11229 ;; Registers used:
 11230 ;;		None
 11231 ;; Tracked objects:
 11232 ;;		On entry : 0/0
 11233 ;;		On exit  : 0/0
 11234 ;;		Unchanged: 0/0
 11235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11236 ;;      Params:         0       2       0       0       0
 11237 ;;      Locals:         0       2       0       0       0
 11238 ;;      Temps:          0       0       0       0       0
 11239 ;;      Totals:         0       4       0       0       0
 11240 ;;Total ram usage:        4 bytes
 11241 ;; Hardware stack levels used:    1
 11242 ;; This function calls:
 11243 ;;		Nothing
 11244 ;; This function is called by:
 11245 ;;		i2_motorMove
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           	psect	text60
 11250  002D80                     __ptext60:
 11251                           	opt stack 0
 11252  002D80                     i2_WriteTimer0:
 11253                           	opt stack 17
 11254                           
 11255                           ;incstack = 0
 11256  002D80  C080  F082         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 11257  002D84  C081  F083         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 11258  002D88  C083  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 11259  002D8C  C082  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 11260  002D90  0012               	return	
 11261  002D92                     __end_ofi2_WriteTimer0:
 11262                           	opt stack 0
 11263                           pclatu	equ	0xFFB
 11264                           pclath	equ	0xFFA
 11265                           tblptru	equ	0xFF8
 11266                           tblptrh	equ	0xFF7
 11267                           tblptrl	equ	0xFF6
 11268                           tablat	equ	0xFF5
 11269                           prodh	equ	0xFF4
 11270                           prodl	equ	0xFF3
 11271                           intcon	equ	0xFF2
 11272                           intcon2	equ	0xFF1
 11273                           postinc0	equ	0xFEE
 11274                           fsr0h	equ	0xFEA
 11275                           fsr0l	equ	0xFE9
 11276                           wreg	equ	0xFE8
 11277                           indf1	equ	0xFE7
 11278                           postinc1	equ	0xFE6
 11279                           postdec1	equ	0xFE5
 11280                           fsr1h	equ	0xFE2
 11281                           fsr1l	equ	0xFE1
 11282                           bsr	equ	0xFE0
 11283                           indf2	equ	0xFDF
 11284                           postinc2	equ	0xFDE
 11285                           postdec2	equ	0xFDD
 11286                           fsr2h	equ	0xFDA
 11287                           fsr2l	equ	0xFD9
 11288                           status	equ	0xFD8
 11289                           
 11290 ;; *************** function _start_i2c_slave_reply *****************
 11291 ;; Defined at:
 11292 ;;		line 92 in file "../src/my_i2c.c"
 11293 ;; Parameters:    Size  Location     Type
 11294 ;;  length          1    wreg     unsigned char 
 11295 ;;  msg             2    0[BANK0 ] PTR unsigned char 
 11296 ;;		 -> i2c_slave_int_handler@ack_1696(6), i2c_slave_int_handler@dist(6), i2c_slave_int_handler@ack(6), i2c_slave_int_ha
      +ndler@message(6), 
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;  length          1    4[BANK0 ] unsigned char 
 11299 ;; Return value:  Size  Location     Type
 11300 ;;		None               void
 11301 ;; Registers used:
 11302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11303 ;; Tracked objects:
 11304 ;;		On entry : 0/0
 11305 ;;		On exit  : 0/0
 11306 ;;		Unchanged: 0/0
 11307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11308 ;;      Params:         0       2       0       0       0
 11309 ;;      Locals:         0       1       0       0       0
 11310 ;;      Temps:          0       2       0       0       0
 11311 ;;      Totals:         0       5       0       0       0
 11312 ;;Total ram usage:        5 bytes
 11313 ;; Hardware stack levels used:    1
 11314 ;; This function calls:
 11315 ;;		Nothing
 11316 ;; This function is called by:
 11317 ;;		_i2c_slave_int_handler
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text61
 11322  001592                     __ptext61:
 11323                           	opt stack 0
 11324  001592                     _start_i2c_slave_reply:
 11325                           	opt stack 18
 11326                           
 11327                           ;incstack = 0
 11328                           ;start_i2c_slave_reply@length stored from wreg
 11329  001592  CFE8 F084          	movff	wreg,start_i2c_slave_reply@length
 11330                           
 11331                           ;my_i2c.c: 94: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
 11332  001596  0101               	movlb	1	; () banked
 11333  001598  EE20 F01A          	lfsr	2,26
 11334  00159C  0101               	movlb	1	; () banked
 11335  00159E  51C5               	movf	_ic_ptr& (0+255),w,b
 11336  0015A0  26D9               	addwf	fsr2l,f,c
 11337  0015A2  0101               	movlb	1	; () banked
 11338  0015A4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11339  0015A6  22DA               	addwfc	fsr2h,f,c
 11340  0015A8  0E00               	movlw	0
 11341  0015AA  6EDF               	movwf	indf2,c
 11342  0015AC  D042               	goto	i2l3788
 11343  0015AE                     i2l3784:
 11344                           
 11345                           ;my_i2c.c: 95: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
 11346  0015AE  0101               	movlb	1	; () banked
 11347  0015B0  EE20 F01A          	lfsr	2,26
 11348  0015B4  0101               	movlb	1	; () banked
 11349  0015B6  51C5               	movf	_ic_ptr& (0+255),w,b
 11350  0015B8  26D9               	addwf	fsr2l,f,c
 11351  0015BA  0101               	movlb	1	; () banked
 11352  0015BC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11353  0015BE  22DA               	addwfc	fsr2h,f,c
 11354  0015C0  50DF               	movf	indf2,w,c
 11355  0015C2  0100               	movlb	0	; () banked
 11356  0015C4  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
 11357  0015C6  0100               	movlb	0	; () banked
 11358  0015C8  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
 11359  0015CA  0D01               	mullw	1
 11360  0015CC  50F3               	movf	prodl,w,c
 11361  0015CE  0100               	movlb	0	; () banked
 11362  0015D0  0100               	movlb	0	; () banked
 11363  0015D2  2580               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
 11364  0015D4  6ED9               	movwf	fsr2l,c
 11365  0015D6  50F4               	movf	prodh,w,c
 11366  0015D8  0100               	movlb	0	; () banked
 11367  0015DA  0100               	movlb	0	; () banked
 11368  0015DC  2181               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
 11369  0015DE  6EDA               	movwf	fsr2h,c
 11370  0015E0  0101               	movlb	1	; () banked
 11371  0015E2  EE10 F01A          	lfsr	1,26
 11372  0015E6  0101               	movlb	1	; () banked
 11373  0015E8  51C5               	movf	_ic_ptr& (0+255),w,b
 11374  0015EA  26E1               	addwf	fsr1l,f,c
 11375  0015EC  0101               	movlb	1	; () banked
 11376  0015EE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11377  0015F0  22E2               	addwfc	fsr1h,f,c
 11378  0015F2  50E7               	movf	indf1,w,c
 11379  0015F4  0100               	movlb	0	; () banked
 11380  0015F6  6F83               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
 11381  0015F8  0100               	movlb	0	; () banked
 11382  0015FA  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
 11383  0015FC  0D01               	mullw	1
 11384  0015FE  0E10               	movlw	16
 11385  001600  26F3               	addwf	prodl,f,c
 11386  001602  0E00               	movlw	0
 11387  001604  22F4               	addwfc	prodh,f,c
 11388  001606  50F3               	movf	prodl,w,c
 11389  001608  0101               	movlb	1	; () banked
 11390  00160A  0101               	movlb	1	; () banked
 11391  00160C  25C5               	addwf	_ic_ptr& (0+255),w,b
 11392  00160E  6EE1               	movwf	fsr1l,c
 11393  001610  50F4               	movf	prodh,w,c
 11394  001612  0101               	movlb	1	; () banked
 11395  001614  0101               	movlb	1	; () banked
 11396  001616  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
 11397  001618  6EE2               	movwf	fsr1h,c
 11398  00161A  CFDF FFE7          	movff	indf2,indf1
 11399                           
 11400                           ; BSR set to: 1
 11401  00161E  0101               	movlb	1	; () banked
 11402  001620  EE20 F01A          	lfsr	2,26
 11403  001624  0101               	movlb	1	; () banked
 11404  001626  51C5               	movf	_ic_ptr& (0+255),w,b
 11405  001628  26D9               	addwf	fsr2l,f,c
 11406  00162A  0101               	movlb	1	; () banked
 11407  00162C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11408  00162E  22DA               	addwfc	fsr2h,f,c
 11409  001630  2ADF               	incf	indf2,f,c
 11410  001632                     i2l3788:
 11411                           
 11412                           ; BSR set to: 1
 11413  001632  0101               	movlb	1	; () banked
 11414  001634  EE20 F01A          	lfsr	2,26
 11415  001638  0101               	movlb	1	; () banked
 11416  00163A  51C5               	movf	_ic_ptr& (0+255),w,b
 11417  00163C  26D9               	addwf	fsr2l,f,c
 11418  00163E  0101               	movlb	1	; () banked
 11419  001640  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11420  001642  22DA               	addwfc	fsr2h,f,c
 11421  001644  50DF               	movf	indf2,w,c
 11422  001646  0100               	movlb	0	; () banked
 11423  001648  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
 11424  00164A  0100               	movlb	0	; () banked
 11425  00164C  0100               	movlb	0	; () banked
 11426  00164E  5184               	movf	start_i2c_slave_reply@length& (0+255),w,b
 11427  001650  0100               	movlb	0	; () banked
 11428  001652  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
 11429  001654  A0D8               	btfss	status,0,c
 11430  001656  D7AB               	goto	i2l3784
 11431                           
 11432                           ; BSR set to: 0
 11433                           ;my_i2c.c: 96: }
 11434                           ;my_i2c.c: 97: ic_ptr->outbuflen = length;
 11435                           
 11436                           ; BSR set to: 0
 11437  001658  0101               	movlb	1	; () banked
 11438  00165A  EE20 F01A          	lfsr	2,26
 11439  00165E  0101               	movlb	1	; () banked
 11440  001660  51C5               	movf	_ic_ptr& (0+255),w,b
 11441  001662  26D9               	addwf	fsr2l,f,c
 11442  001664  0101               	movlb	1	; () banked
 11443  001666  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11444  001668  22DA               	addwfc	fsr2h,f,c
 11445  00166A  0100               	movlb	0	; () banked
 11446  00166C  C084  FFDF         	movff	start_i2c_slave_reply@length,indf2
 11447                           
 11448                           ;my_i2c.c: 98: ic_ptr->outbufind = 1;
 11449  001670  0101               	movlb	1	; () banked
 11450  001672  EE20 F01B          	lfsr	2,27
 11451  001676  0101               	movlb	1	; () banked
 11452  001678  51C5               	movf	_ic_ptr& (0+255),w,b
 11453  00167A  26D9               	addwf	fsr2l,f,c
 11454  00167C  0101               	movlb	1	; () banked
 11455  00167E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11456  001680  22DA               	addwfc	fsr2h,f,c
 11457  001682  0E01               	movlw	1
 11458  001684  6EDF               	movwf	indf2,c
 11459                           
 11460                           ;my_i2c.c: 101: SSPBUF = ic_ptr->outbuffer[0];
 11461  001686  0101               	movlb	1	; () banked
 11462  001688  EE20 F010          	lfsr	2,16
 11463  00168C  0101               	movlb	1	; () banked
 11464  00168E  51C5               	movf	_ic_ptr& (0+255),w,b
 11465  001690  26D9               	addwf	fsr2l,f,c
 11466  001692  0101               	movlb	1	; () banked
 11467  001694  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11468  001696  22DA               	addwfc	fsr2h,f,c
 11469  001698  50DF               	movf	indf2,w,c
 11470  00169A  6EC9               	movwf	4041,c	;volatile
 11471                           
 11472                           ; BSR set to: 1
 11473                           ;my_i2c.c: 104: SSPCON1bits.CKP = 1;
 11474  00169C  88C6               	bsf	4038,4,c	;volatile
 11475                           
 11476                           ; BSR set to: 1
 11477  00169E  0012               	return	
 11478  0016A0                     __end_of_start_i2c_slave_reply:
 11479                           	opt stack 0
 11480                           pclatu	equ	0xFFB
 11481                           pclath	equ	0xFFA
 11482                           tblptru	equ	0xFF8
 11483                           tblptrh	equ	0xFF7
 11484                           tblptrl	equ	0xFF6
 11485                           tablat	equ	0xFF5
 11486                           prodh	equ	0xFF4
 11487                           prodl	equ	0xFF3
 11488                           intcon	equ	0xFF2
 11489                           intcon2	equ	0xFF1
 11490                           postinc0	equ	0xFEE
 11491                           fsr0h	equ	0xFEA
 11492                           fsr0l	equ	0xFE9
 11493                           wreg	equ	0xFE8
 11494                           indf1	equ	0xFE7
 11495                           postinc1	equ	0xFE6
 11496                           postdec1	equ	0xFE5
 11497                           fsr1h	equ	0xFE2
 11498                           fsr1l	equ	0xFE1
 11499                           bsr	equ	0xFE0
 11500                           indf2	equ	0xFDF
 11501                           postinc2	equ	0xFDE
 11502                           postdec2	equ	0xFDD
 11503                           fsr2h	equ	0xFDA
 11504                           fsr2l	equ	0xFD9
 11505                           status	equ	0xFD8
 11506                           
 11507 ;; *************** function _handle_start *****************
 11508 ;; Defined at:
 11509 ;;		line 110 in file "../src/my_i2c.c"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;  data_read       1    wreg     unsigned char 
 11512 ;; Auto vars:     Size  Location     Type
 11513 ;;  data_read       1    0[BANK0 ] unsigned char 
 11514 ;; Return value:  Size  Location     Type
 11515 ;;		None               void
 11516 ;; Registers used:
 11517 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11518 ;; Tracked objects:
 11519 ;;		On entry : 0/0
 11520 ;;		On exit  : 0/0
 11521 ;;		Unchanged: 0/0
 11522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11523 ;;      Params:         0       0       0       0       0
 11524 ;;      Locals:         0       1       0       0       0
 11525 ;;      Temps:          0       0       0       0       0
 11526 ;;      Totals:         0       1       0       0       0
 11527 ;;Total ram usage:        1 bytes
 11528 ;; Hardware stack levels used:    1
 11529 ;; This function calls:
 11530 ;;		Nothing
 11531 ;; This function is called by:
 11532 ;;		_i2c_slave_int_handler
 11533 ;; This function uses a non-reentrant model
 11534 ;;
 11535                           
 11536                           	psect	text62
 11537  001A82                     __ptext62:
 11538                           	opt stack 0
 11539  001A82                     _handle_start:
 11540                           	opt stack 18
 11541                           
 11542                           ; BSR set to: 1
 11543                           ;incstack = 0
 11544                           ;handle_start@data_read stored from wreg
 11545  001A82  CFE8 F080          	movff	wreg,handle_start@data_read
 11546                           
 11547                           ;my_i2c.c: 111: ic_ptr->event_count = 1;
 11548  001A86  0101               	movlb	1	; () banked
 11549  001A88  EE20 F00C          	lfsr	2,12
 11550  001A8C  0101               	movlb	1	; () banked
 11551  001A8E  51C5               	movf	_ic_ptr& (0+255),w,b
 11552  001A90  26D9               	addwf	fsr2l,f,c
 11553  001A92  0101               	movlb	1	; () banked
 11554  001A94  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11555  001A96  22DA               	addwfc	fsr2h,f,c
 11556  001A98  0E01               	movlw	1
 11557  001A9A  6EDF               	movwf	indf2,c
 11558                           
 11559                           ;my_i2c.c: 112: ic_ptr->buflen = 0;
 11560  001A9C  0101               	movlb	1	; () banked
 11561  001A9E  EE20 F00A          	lfsr	2,10
 11562  001AA2  0101               	movlb	1	; () banked
 11563  001AA4  51C5               	movf	_ic_ptr& (0+255),w,b
 11564  001AA6  26D9               	addwf	fsr2l,f,c
 11565  001AA8  0101               	movlb	1	; () banked
 11566  001AAA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11567  001AAC  22DA               	addwfc	fsr2h,f,c
 11568  001AAE  0E00               	movlw	0
 11569  001AB0  6EDF               	movwf	indf2,c
 11570                           
 11571                           ; BSR set to: 1
 11572                           ;my_i2c.c: 114: if (data_read) {
 11573  001AB2  0100               	movlb	0	; () banked
 11574  001AB4  0100               	movlb	0	; () banked
 11575  001AB6  5180               	movf	handle_start@data_read& (0+255),w,b
 11576  001AB8  B4D8               	btfsc	status,2,c
 11577  001ABA  D03D               	goto	i2l3806
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;my_i2c.c: 115: if (SSPSTATbits.D_A == 1) {
 11581  001ABC  AAC7               	btfss	4039,5,c	;volatile
 11582  001ABE  D021               	goto	i2l335
 11583                           
 11584                           ; BSR set to: 0
 11585                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
 11586  001AC0  0101               	movlb	1	; () banked
 11587  001AC2  EE20 F00D          	lfsr	2,13
 11588  001AC6  0101               	movlb	1	; () banked
 11589  001AC8  51C5               	movf	_ic_ptr& (0+255),w,b
 11590  001ACA  26D9               	addwf	fsr2l,f,c
 11591  001ACC  0101               	movlb	1	; () banked
 11592  001ACE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11593  001AD0  22DA               	addwfc	fsr2h,f,c
 11594  001AD2  0E05               	movlw	5
 11595  001AD4  6EDF               	movwf	indf2,c
 11596                           
 11597                           ;my_i2c.c: 119: ic_ptr->error_count++;
 11598  001AD6  0101               	movlb	1	; () banked
 11599  001AD8  EE20 F00F          	lfsr	2,15
 11600  001ADC  0101               	movlb	1	; () banked
 11601  001ADE  51C5               	movf	_ic_ptr& (0+255),w,b
 11602  001AE0  26D9               	addwf	fsr2l,f,c
 11603  001AE2  0101               	movlb	1	; () banked
 11604  001AE4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11605  001AE6  22DA               	addwfc	fsr2h,f,c
 11606  001AE8  2ADF               	incf	indf2,f,c
 11607                           
 11608                           ;my_i2c.c: 120: ic_ptr->error_code = 0x5;
 11609  001AEA  0101               	movlb	1	; () banked
 11610  001AEC  EE20 F00E          	lfsr	2,14
 11611  001AF0  0101               	movlb	1	; () banked
 11612  001AF2  51C5               	movf	_ic_ptr& (0+255),w,b
 11613  001AF4  26D9               	addwf	fsr2l,f,c
 11614  001AF6  0101               	movlb	1	; () banked
 11615  001AF8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11616  001AFA  22DA               	addwfc	fsr2h,f,c
 11617  001AFC  0E05               	movlw	5
 11618  001AFE  6EDF               	movwf	indf2,c
 11619                           
 11620                           ;my_i2c.c: 121: } else {
 11621  001B00  0012               	return	
 11622  001B02                     i2l335:
 11623                           
 11624                           ; BSR set to: 0
 11625                           ;my_i2c.c: 122: if (SSPSTATbits.R_W == 1) {
 11626  001B02  A4C7               	btfss	4039,2,c	;volatile
 11627  001B04  D00C               	goto	i2l3804
 11628                           
 11629                           ; BSR set to: 0
 11630                           ;my_i2c.c: 123: ic_ptr->status = 0x8;
 11631  001B06  0101               	movlb	1	; () banked
 11632  001B08  EE20 F00D          	lfsr	2,13
 11633  001B0C  0101               	movlb	1	; () banked
 11634  001B0E  51C5               	movf	_ic_ptr& (0+255),w,b
 11635  001B10  26D9               	addwf	fsr2l,f,c
 11636  001B12  0101               	movlb	1	; () banked
 11637  001B14  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11638  001B16  22DA               	addwfc	fsr2h,f,c
 11639  001B18  0E08               	movlw	8
 11640  001B1A  6EDF               	movwf	indf2,c
 11641                           
 11642                           ;my_i2c.c: 124: } else {
 11643  001B1C  0012               	return	
 11644  001B1E                     i2l3804:
 11645                           
 11646                           ;my_i2c.c: 125: ic_ptr->status = 0x7;
 11647  001B1E  0101               	movlb	1	; () banked
 11648  001B20  EE20 F00D          	lfsr	2,13
 11649  001B24  0101               	movlb	1	; () banked
 11650  001B26  51C5               	movf	_ic_ptr& (0+255),w,b
 11651  001B28  26D9               	addwf	fsr2l,f,c
 11652  001B2A  0101               	movlb	1	; () banked
 11653  001B2C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11654  001B2E  22DA               	addwfc	fsr2h,f,c
 11655  001B30  0E07               	movlw	7
 11656  001B32  6EDF               	movwf	indf2,c
 11657  001B34  0012               	return	
 11658  001B36                     i2l3806:
 11659                           
 11660                           ;my_i2c.c: 129: ic_ptr->status = 0x6;
 11661  001B36  0101               	movlb	1	; () banked
 11662  001B38  EE20 F00D          	lfsr	2,13
 11663  001B3C  0101               	movlb	1	; () banked
 11664  001B3E  51C5               	movf	_ic_ptr& (0+255),w,b
 11665  001B40  26D9               	addwf	fsr2l,f,c
 11666  001B42  0101               	movlb	1	; () banked
 11667  001B44  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11668  001B46  22DA               	addwfc	fsr2h,f,c
 11669  001B48  0E06               	movlw	6
 11670  001B4A  6EDF               	movwf	indf2,c
 11671  001B4C  0012               	return	
 11672  001B4E                     __end_of_handle_start:
 11673                           	opt stack 0
 11674                           pclatu	equ	0xFFB
 11675                           pclath	equ	0xFFA
 11676                           tblptru	equ	0xFF8
 11677                           tblptrh	equ	0xFF7
 11678                           tblptrl	equ	0xFF6
 11679                           tablat	equ	0xFF5
 11680                           prodh	equ	0xFF4
 11681                           prodl	equ	0xFF3
 11682                           intcon	equ	0xFF2
 11683                           intcon2	equ	0xFF1
 11684                           postinc0	equ	0xFEE
 11685                           fsr0h	equ	0xFEA
 11686                           fsr0l	equ	0xFE9
 11687                           wreg	equ	0xFE8
 11688                           indf1	equ	0xFE7
 11689                           postinc1	equ	0xFE6
 11690                           postdec1	equ	0xFE5
 11691                           fsr1h	equ	0xFE2
 11692                           fsr1l	equ	0xFE1
 11693                           bsr	equ	0xFE0
 11694                           indf2	equ	0xFDF
 11695                           postinc2	equ	0xFDE
 11696                           postdec2	equ	0xFDD
 11697                           fsr2h	equ	0xFDA
 11698                           fsr2l	equ	0xFD9
 11699                           status	equ	0xFD8
 11700                           
 11701 ;; *************** function _ToMainHigh_sendmsg *****************
 11702 ;; Defined at:
 11703 ;;		line 126 in file "../src/messages.c"
 11704 ;; Parameters:    Size  Location     Type
 11705 ;;  length          1    wreg     unsigned char 
 11706 ;;  msgtype         1   22[BANK0 ] unsigned char 
 11707 ;;  data            2   23[BANK0 ] PTR void 
 11708 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), 
 11709 ;; Auto vars:     Size  Location     Type
 11710 ;;  length          1   25[BANK0 ] unsigned char 
 11711 ;; Return value:  Size  Location     Type
 11712 ;;                  1    wreg      char 
 11713 ;; Registers used:
 11714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11715 ;; Tracked objects:
 11716 ;;		On entry : 0/0
 11717 ;;		On exit  : 0/0
 11718 ;;		Unchanged: 0/0
 11719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11720 ;;      Params:         0       3       0       0       0
 11721 ;;      Locals:         0       1       0       0       0
 11722 ;;      Temps:          0       0       0       0       0
 11723 ;;      Totals:         0       4       0       0       0
 11724 ;;Total ram usage:        4 bytes
 11725 ;; Hardware stack levels used:    1
 11726 ;; Hardware stack levels required when called:    2
 11727 ;; This function calls:
 11728 ;;		i2_send_msg
 11729 ;; This function is called by:
 11730 ;;		_i2c_slave_int_handler
 11731 ;;		_i2c_master_int_handler
 11732 ;; This function uses a non-reentrant model
 11733 ;;
 11734                           
 11735                           	psect	text63
 11736  002BA6                     __ptext63:
 11737                           	opt stack 0
 11738  002BA6                     _ToMainHigh_sendmsg:
 11739                           	opt stack 16
 11740                           
 11741                           ; BSR set to: 1
 11742                           ;incstack = 0
 11743                           ;ToMainHigh_sendmsg@length stored from wreg
 11744  002BA6  CFE8 F099          	movff	wreg,ToMainHigh_sendmsg@length
 11745                           
 11746                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
 11747                           ;	Return value of _ToMainHigh_sendmsg is never used
 11748  002BAA  0102               	movlb	2	; () banked
 11749  002BAC  0E02               	movlw	high _ToMainHigh_MQ
 11750  002BAE  0100               	movlb	0	; () banked
 11751  002BB0  0100               	movlb	0	; () banked
 11752  002BB2  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
 11753  002BB4  0102               	movlb	2	; () banked
 11754  002BB6  0E86               	movlw	low _ToMainHigh_MQ
 11755  002BB8  0100               	movlb	0	; () banked
 11756  002BBA  0100               	movlb	0	; () banked
 11757  002BBC  6F8A               	movwf	i2send_msg@qptr& (0+255),b
 11758  002BBE  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
 11759  002BC2  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
 11760  002BC6  0100               	movlb	0	; () banked
 11761  002BC8  0100               	movlb	0	; () banked
 11762  002BCA  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
 11763  002BCE  0100               	movlb	0	; () banked
 11764  002BD0  0100               	movlb	0	; () banked
 11765  002BD2  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
 11766  002BD6  ECAC  F009         	call	i2_send_msg	;wreg free
 11767  002BDA  0012               	return	
 11768  002BDC                     __end_of_ToMainHigh_sendmsg:
 11769                           	opt stack 0
 11770                           pclatu	equ	0xFFB
 11771                           pclath	equ	0xFFA
 11772                           tblptru	equ	0xFF8
 11773                           tblptrh	equ	0xFF7
 11774                           tblptrl	equ	0xFF6
 11775                           tablat	equ	0xFF5
 11776                           prodh	equ	0xFF4
 11777                           prodl	equ	0xFF3
 11778                           intcon	equ	0xFF2
 11779                           intcon2	equ	0xFF1
 11780                           postinc0	equ	0xFEE
 11781                           fsr0h	equ	0xFEA
 11782                           fsr0l	equ	0xFE9
 11783                           wreg	equ	0xFE8
 11784                           indf1	equ	0xFE7
 11785                           postinc1	equ	0xFE6
 11786                           postdec1	equ	0xFE5
 11787                           fsr1h	equ	0xFE2
 11788                           fsr1l	equ	0xFE1
 11789                           bsr	equ	0xFE0
 11790                           indf2	equ	0xFDF
 11791                           postinc2	equ	0xFDE
 11792                           postdec2	equ	0xFDD
 11793                           fsr2h	equ	0xFDA
 11794                           fsr2l	equ	0xFD9
 11795                           status	equ	0xFD8
 11796                           
 11797 ;; *************** function i2_send_msg *****************
 11798 ;; Defined at:
 11799 ;;		line 24 in file "../src/messages.c"
 11800 ;; Parameters:    Size  Location     Type
 11801 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
 11802 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 11803 ;;  length          1   12[BANK0 ] unsigned char 
 11804 ;;  msgtype         1   13[BANK0 ] unsigned char 
 11805 ;;  data            2   14[BANK0 ] PTR void 
 11806 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
 11807 ;;		 -> main@uc(15), 
 11808 ;; Auto vars:     Size  Location     Type
 11809 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
 11810 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
 11811 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 11812 ;;  send_msg        2   17[BANK0 ] unsigned int 
 11813 ;;  send_msg        1   19[BANK0 ] unsigned char 
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  1    wreg      char 
 11816 ;; Registers used:
 11817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11823 ;;      Params:         0       6       0       0       0
 11824 ;;      Locals:         0       5       0       0       0
 11825 ;;      Temps:          0       1       0       0       0
 11826 ;;      Totals:         0      12       0       0       0
 11827 ;;Total ram usage:       12 bytes
 11828 ;; Hardware stack levels used:    1
 11829 ;; Hardware stack levels required when called:    1
 11830 ;; This function calls:
 11831 ;;		i2___awmod
 11832 ;;		i2_memcpy
 11833 ;; This function is called by:
 11834 ;;		_ToMainHigh_sendmsg
 11835 ;; This function uses a non-reentrant model
 11836 ;;
 11837                           
 11838                           	psect	text64
 11839  001358                     __ptext64:
 11840                           	opt stack 0
 11841  001358                     i2_send_msg:
 11842                           	opt stack 16
 11843                           
 11844                           ;messages.c: 25: unsigned char slot;
 11845                           ;messages.c: 27: msg *qmsg;
 11846                           ;messages.c: 28: size_t tlength = length;
 11847                           
 11848                           ;incstack = 0
 11849  001358  0100               	movlb	0	; () banked
 11850  00135A  0100               	movlb	0	; () banked
 11851  00135C  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
 11852  001360  0100               	movlb	0	; () banked
 11853  001362  0100               	movlb	0	; () banked
 11854  001364  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
 11855                           
 11856                           ; BSR set to: 0
 11857                           ;messages.c: 38: slot = qptr->cur_write_ind;
 11858  001366  0100               	movlb	0	; () banked
 11859  001368  EE20 F041          	lfsr	2,65
 11860  00136C  0100               	movlb	0	; () banked
 11861  00136E  518A               	movf	i2send_msg@qptr& (0+255),w,b
 11862  001370  26D9               	addwf	fsr2l,f,c
 11863  001372  0100               	movlb	0	; () banked
 11864  001374  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 11865  001376  22DA               	addwfc	fsr2h,f,c
 11866  001378  50DF               	movf	indf2,w,c
 11867  00137A  0100               	movlb	0	; () banked
 11868  00137C  0100               	movlb	0	; () banked
 11869  00137E  6F93               	movwf	i2send_msg@slot& (0+255),b
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 11873  001380  0100               	movlb	0	; () banked
 11874  001382  0100               	movlb	0	; () banked
 11875  001384  5193               	movf	i2send_msg@slot& (0+255),w,b
 11876  001386  0D0D               	mullw	13
 11877  001388  50F3               	movf	prodl,w,c
 11878  00138A  0100               	movlb	0	; () banked
 11879  00138C  0100               	movlb	0	; () banked
 11880  00138E  258A               	addwf	i2send_msg@qptr& (0+255),w,b
 11881  001390  0100               	movlb	0	; () banked
 11882  001392  0100               	movlb	0	; () banked
 11883  001394  6F94               	movwf	i2send_msg@qmsg& (0+255),b
 11884  001396  50F4               	movf	prodh,w,c
 11885  001398  0100               	movlb	0	; () banked
 11886  00139A  0100               	movlb	0	; () banked
 11887  00139C  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
 11888  00139E  0100               	movlb	0	; () banked
 11889  0013A0  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
 11890                           
 11891                           ; BSR set to: 0
 11892                           ;messages.c: 41: if (qmsg->full != 0) {
 11893  0013A2  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
 11894  0013A6  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
 11895  0013AA  50DF               	movf	indf2,w,c
 11896  0013AC  B4D8               	btfsc	status,2,c
 11897  0013AE  D002               	goto	i2l4224
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;messages.c: 42: return (-1);
 11901  0013B0  0EFF               	movlw	255
 11902  0013B2  0012               	return	
 11903  0013B4                     i2l4224:
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;messages.c: 43: }
 11907                           ;messages.c: 46: qmsg->length = length;
 11908  0013B4  0100               	movlb	0	; () banked
 11909  0013B6  EE20 F001          	lfsr	2,1
 11910  0013BA  0100               	movlb	0	; () banked
 11911  0013BC  5194               	movf	i2send_msg@qmsg& (0+255),w,b
 11912  0013BE  26D9               	addwf	fsr2l,f,c
 11913  0013C0  0100               	movlb	0	; () banked
 11914  0013C2  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
 11915  0013C4  22DA               	addwfc	fsr2h,f,c
 11916  0013C6  0100               	movlb	0	; () banked
 11917  0013C8  C08C  FFDF         	movff	i2send_msg@length,indf2
 11918                           
 11919                           ;messages.c: 47: qmsg->msgtype = msgtype;
 11920  0013CC  0100               	movlb	0	; () banked
 11921  0013CE  EE20 F002          	lfsr	2,2
 11922  0013D2  0100               	movlb	0	; () banked
 11923  0013D4  5194               	movf	i2send_msg@qmsg& (0+255),w,b
 11924  0013D6  26D9               	addwf	fsr2l,f,c
 11925  0013D8  0100               	movlb	0	; () banked
 11926  0013DA  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
 11927  0013DC  22DA               	addwfc	fsr2h,f,c
 11928  0013DE  0100               	movlb	0	; () banked
 11929  0013E0  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 11933  0013E4  0E03               	movlw	3
 11934  0013E6  0100               	movlb	0	; () banked
 11935  0013E8  0100               	movlb	0	; () banked
 11936  0013EA  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
 11937  0013EC  0100               	movlb	0	; () banked
 11938  0013EE  0100               	movlb	0	; () banked
 11939  0013F0  6F80               	movwf	i2memcpy@d1& (0+255),b
 11940  0013F2  0E00               	movlw	0
 11941  0013F4  0100               	movlb	0	; () banked
 11942  0013F6  0100               	movlb	0	; () banked
 11943  0013F8  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
 11944  0013FA  0100               	movlb	0	; () banked
 11945  0013FC  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
 11946  0013FE  0100               	movlb	0	; () banked
 11947  001400  0100               	movlb	0	; () banked
 11948  001402  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
 11949  001406  0100               	movlb	0	; () banked
 11950  001408  0100               	movlb	0	; () banked
 11951  00140A  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
 11952  00140E  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
 11953  001412  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
 11954  001416  EC5E  F014         	call	i2_memcpy	;wreg free
 11955                           
 11956                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
 11957  00141A  0100               	movlb	0	; () banked
 11958  00141C  EE20 F041          	lfsr	2,65
 11959  001420  0100               	movlb	0	; () banked
 11960  001422  518A               	movf	i2send_msg@qptr& (0+255),w,b
 11961  001424  26D9               	addwf	fsr2l,f,c
 11962  001426  0100               	movlb	0	; () banked
 11963  001428  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 11964  00142A  22DA               	addwfc	fsr2h,f,c
 11965  00142C  0100               	movlb	0	; () banked
 11966  00142E  EE10 F041          	lfsr	1,65
 11967  001432  0100               	movlb	0	; () banked
 11968  001434  518A               	movf	i2send_msg@qptr& (0+255),w,b
 11969  001436  26E1               	addwf	fsr1l,f,c
 11970  001438  0100               	movlb	0	; () banked
 11971  00143A  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 11972  00143C  22E2               	addwfc	fsr1h,f,c
 11973  00143E  50E7               	movf	indf1,w,c
 11974  001440  0100               	movlb	0	; () banked
 11975  001442  6F90               	movwf	??i2_send_msg& (0+255),b
 11976  001444  0E01               	movlw	1
 11977  001446  0100               	movlb	0	; () banked
 11978  001448  2590               	addwf	??i2_send_msg& (0+255),w,b
 11979  00144A  0100               	movlb	0	; () banked
 11980  00144C  0100               	movlb	0	; () banked
 11981  00144E  6F80               	movwf	i2___awmod@dividend& (0+255),b
 11982  001450  0100               	movlb	0	; () banked
 11983  001452  0100               	movlb	0	; () banked
 11984  001454  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
 11985  001456  0E00               	movlw	0
 11986  001458  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
 11987  00145A  0E00               	movlw	0
 11988  00145C  0100               	movlb	0	; () banked
 11989  00145E  0100               	movlb	0	; () banked
 11990  001460  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
 11991  001462  0E05               	movlw	5
 11992  001464  0100               	movlb	0	; () banked
 11993  001466  6F82               	movwf	i2___awmod@divisor& (0+255),b
 11994  001468  EC50  F00B         	call	i2___awmod	;wreg free
 11995  00146C  0100               	movlb	0	; () banked
 11996  00146E  0100               	movlb	0	; () banked
 11997  001470  5180               	movf	?i2___awmod& (0+255),w,b
 11998  001472  6EDF               	movwf	indf2,c
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;messages.c: 59: qmsg->full = 1;
 12002  001474  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
 12003  001478  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
 12004  00147C  0E01               	movlw	1
 12005  00147E  6EDF               	movwf	indf2,c
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;messages.c: 60: return (1);
 12009  001480  0E01               	movlw	1
 12010  001482  0012               	return	
 12011  001484                     __end_ofi2_send_msg:
 12012                           	opt stack 0
 12013                           pclatu	equ	0xFFB
 12014                           pclath	equ	0xFFA
 12015                           tblptru	equ	0xFF8
 12016                           tblptrh	equ	0xFF7
 12017                           tblptrl	equ	0xFF6
 12018                           tablat	equ	0xFF5
 12019                           prodh	equ	0xFF4
 12020                           prodl	equ	0xFF3
 12021                           intcon	equ	0xFF2
 12022                           intcon2	equ	0xFF1
 12023                           postinc0	equ	0xFEE
 12024                           fsr0h	equ	0xFEA
 12025                           fsr0l	equ	0xFE9
 12026                           wreg	equ	0xFE8
 12027                           indf1	equ	0xFE7
 12028                           postinc1	equ	0xFE6
 12029                           postdec1	equ	0xFE5
 12030                           fsr1h	equ	0xFE2
 12031                           fsr1l	equ	0xFE1
 12032                           bsr	equ	0xFE0
 12033                           indf2	equ	0xFDF
 12034                           postinc2	equ	0xFDE
 12035                           postdec2	equ	0xFDD
 12036                           fsr2h	equ	0xFDA
 12037                           fsr2l	equ	0xFD9
 12038                           status	equ	0xFD8
 12039                           
 12040 ;; *************** function i2_memcpy *****************
 12041 ;; Defined at:
 12042 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
 12043 ;; Parameters:    Size  Location     Type
 12044 ;;  d1              2    0[BANK0 ] PTR void 
 12045 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
 12046 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 12047 ;;		 -> main@msgbuffer(11), 
 12048 ;;  s1              2    2[BANK0 ] PTR const void 
 12049 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
 12050 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
 12051 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
 12052 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
 12053 ;;		 -> main@uc(15), 
 12054 ;;  n               2    4[BANK0 ] unsigned int 
 12055 ;; Auto vars:     Size  Location     Type
 12056 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
 12057 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
 12058 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
 12059 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
 12060 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
 12061 ;;		 -> main@uc(15), 
 12062 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
 12063 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
 12064 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 12065 ;;		 -> main@msgbuffer(11), 
 12066 ;; Return value:  Size  Location     Type
 12067 ;;                  2    0[BANK0 ] PTR void 
 12068 ;; Registers used:
 12069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12070 ;; Tracked objects:
 12071 ;;		On entry : 0/0
 12072 ;;		On exit  : 0/0
 12073 ;;		Unchanged: 0/0
 12074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12075 ;;      Params:         0       6       0       0       0
 12076 ;;      Locals:         0       4       0       0       0
 12077 ;;      Temps:          0       0       0       0       0
 12078 ;;      Totals:         0      10       0       0       0
 12079 ;;Total ram usage:       10 bytes
 12080 ;; Hardware stack levels used:    1
 12081 ;; This function calls:
 12082 ;;		Nothing
 12083 ;; This function is called by:
 12084 ;;		i2_send_msg
 12085 ;; This function uses a non-reentrant model
 12086 ;;
 12087                           
 12088                           	psect	text65
 12089  0028BC                     __ptext65:
 12090                           	opt stack 0
 12091  0028BC                     i2_memcpy:
 12092                           	opt stack 16
 12093                           
 12094                           ; BSR set to: 0
 12095                           ;incstack = 0
 12096  0028BC  0100               	movlb	0	; () banked
 12097  0028BE  0100               	movlb	0	; () banked
 12098  0028C0  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
 12099  0028C4  0100               	movlb	0	; () banked
 12100  0028C6  0100               	movlb	0	; () banked
 12101  0028C8  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
 12102  0028CC  0100               	movlb	0	; () banked
 12103  0028CE  0100               	movlb	0	; () banked
 12104  0028D0  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
 12105  0028D4  0100               	movlb	0	; () banked
 12106  0028D6  0100               	movlb	0	; () banked
 12107  0028D8  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
 12108  0028DC  D012               	goto	i2l4312
 12109  0028DE                     i2l4306:
 12110                           
 12111                           ; BSR set to: 0
 12112  0028DE  C088  FFD9         	movff	i2memcpy@s,fsr2l
 12113  0028E2  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
 12114  0028E6  C086  FFE1         	movff	i2memcpy@d,fsr1l
 12115  0028EA  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
 12116  0028EE  CFDF FFE7          	movff	indf2,indf1
 12117                           
 12118                           ; BSR set to: 0
 12119  0028F2  0100               	movlb	0	; () banked
 12120  0028F4  0100               	movlb	0	; () banked
 12121  0028F6  4B88               	infsnz	i2memcpy@s& (0+255),f,b
 12122  0028F8  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
 12123                           
 12124                           ; BSR set to: 0
 12125  0028FA  0100               	movlb	0	; () banked
 12126  0028FC  0100               	movlb	0	; () banked
 12127  0028FE  4B86               	infsnz	i2memcpy@d& (0+255),f,b
 12128  002900  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
 12129  002902                     i2l4312:
 12130                           
 12131                           ; BSR set to: 0
 12132  002902  0100               	movlb	0	; () banked
 12133  002904  0100               	movlb	0	; () banked
 12134  002906  0784               	decf	i2memcpy@n& (0+255),f,b
 12135  002908  A0D8               	btfss	status,0,c
 12136  00290A  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
 12137  00290C  0100               	movlb	0	; () banked
 12138  00290E  2984               	incf	i2memcpy@n& (0+255),w,b
 12139  002910  B4D8               	btfsc	status,2,c
 12140  002912  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
 12141  002914  B4D8               	btfsc	status,2,c
 12142                           
 12143                           ; BSR set to: 0
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;	Return value of i2_memcpy is never used
 12147  002916  0012               	return	
 12148  002918  D7E2               	goto	i2l4306
 12149  00291A                     __end_ofi2_memcpy:
 12150                           	opt stack 0
 12151                           pclatu	equ	0xFFB
 12152                           pclath	equ	0xFFA
 12153                           tblptru	equ	0xFF8
 12154                           tblptrh	equ	0xFF7
 12155                           tblptrl	equ	0xFF6
 12156                           tablat	equ	0xFF5
 12157                           prodh	equ	0xFF4
 12158                           prodl	equ	0xFF3
 12159                           intcon	equ	0xFF2
 12160                           intcon2	equ	0xFF1
 12161                           postinc0	equ	0xFEE
 12162                           fsr0h	equ	0xFEA
 12163                           fsr0l	equ	0xFE9
 12164                           wreg	equ	0xFE8
 12165                           indf1	equ	0xFE7
 12166                           postinc1	equ	0xFE6
 12167                           postdec1	equ	0xFE5
 12168                           fsr1h	equ	0xFE2
 12169                           fsr1l	equ	0xFE1
 12170                           bsr	equ	0xFE0
 12171                           indf2	equ	0xFDF
 12172                           postinc2	equ	0xFDE
 12173                           postdec2	equ	0xFDD
 12174                           fsr2h	equ	0xFDA
 12175                           fsr2l	equ	0xFD9
 12176                           status	equ	0xFD8
 12177                           
 12178 ;; *************** function i2___awmod *****************
 12179 ;; Defined at:
 12180 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
 12181 ;; Parameters:    Size  Location     Type
 12182 ;;  dividend        2    0[BANK0 ] int 
 12183 ;;  divisor         2    2[BANK0 ] int 
 12184 ;; Auto vars:     Size  Location     Type
 12185 ;;  __awmod         1    6[BANK0 ] unsigned char 
 12186 ;;  __awmod         1    5[BANK0 ] unsigned char 
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  2    0[BANK0 ] int 
 12189 ;; Registers used:
 12190 ;;		wreg, status,2, status,0, prodl
 12191 ;; Tracked objects:
 12192 ;;		On entry : 0/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12196 ;;      Params:         0       4       0       0       0
 12197 ;;      Locals:         0       2       0       0       0
 12198 ;;      Temps:          0       1       0       0       0
 12199 ;;      Totals:         0       7       0       0       0
 12200 ;;Total ram usage:        7 bytes
 12201 ;; Hardware stack levels used:    1
 12202 ;; This function calls:
 12203 ;;		Nothing
 12204 ;; This function is called by:
 12205 ;;		i2_send_msg
 12206 ;; This function uses a non-reentrant model
 12207 ;;
 12208                           
 12209                           	psect	text66
 12210  0016A0                     __ptext66:
 12211                           	opt stack 0
 12212  0016A0                     i2___awmod:
 12213                           	opt stack 16
 12214                           
 12215                           ; BSR set to: 0
 12216                           ;incstack = 0
 12217  0016A0  0100               	movlb	0	; () banked
 12218  0016A2  6F84               	movwf	??i2___awmod& (0+255),b
 12219  0016A4  0E00               	movlw	0
 12220  0016A6  0100               	movlb	0	; () banked
 12221  0016A8  0100               	movlb	0	; () banked
 12222  0016AA  6F86               	movwf	i2___awmod@sign& (0+255),b
 12223  0016AC  0100               	movlb	0	; () banked
 12224  0016AE  5184               	movf	??i2___awmod& (0+255),w,b
 12225                           
 12226                           ; BSR set to: 0
 12227  0016B0  0100               	movlb	0	; () banked
 12228  0016B2  0100               	movlb	0	; () banked
 12229  0016B4  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
 12230  0016B6  0A80               	xorlw	128
 12231  0016B8  6EF3               	movwf	prodl,c
 12232  0016BA  0E80               	movlw	128
 12233  0016BC  5CF3               	subwf	prodl,w,c
 12234  0016BE  0E00               	movlw	0
 12235  0016C0  B4D8               	btfsc	status,2,c
 12236  0016C2  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
 12237  0016C4  B0D8               	btfsc	status,0,c
 12238  0016C6  D00F               	goto	i2l4358
 12239                           
 12240                           ; BSR set to: 0
 12241  0016C8  0100               	movlb	0	; () banked
 12242  0016CA  0100               	movlb	0	; () banked
 12243  0016CC  6D80               	negf	i2___awmod@dividend& (0+255),b
 12244  0016CE  0100               	movlb	0	; () banked
 12245  0016D0  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
 12246  0016D2  B0D8               	btfsc	status,0,c
 12247  0016D4  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
 12248                           
 12249                           ; BSR set to: 0
 12250  0016D6  0100               	movlb	0	; () banked
 12251  0016D8  6F84               	movwf	??i2___awmod& (0+255),b
 12252  0016DA  0E01               	movlw	1
 12253  0016DC  0100               	movlb	0	; () banked
 12254  0016DE  0100               	movlb	0	; () banked
 12255  0016E0  6F86               	movwf	i2___awmod@sign& (0+255),b
 12256  0016E2  0100               	movlb	0	; () banked
 12257  0016E4  5184               	movf	??i2___awmod& (0+255),w,b
 12258  0016E6                     i2l4358:
 12259                           
 12260                           ; BSR set to: 0
 12261  0016E6  0100               	movlb	0	; () banked
 12262  0016E8  0100               	movlb	0	; () banked
 12263  0016EA  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 12264  0016EC  0A80               	xorlw	128
 12265  0016EE  6EF3               	movwf	prodl,c
 12266  0016F0  0E80               	movlw	128
 12267  0016F2  5CF3               	subwf	prodl,w,c
 12268  0016F4  0E00               	movlw	0
 12269  0016F6  B4D8               	btfsc	status,2,c
 12270  0016F8  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
 12271  0016FA  B0D8               	btfsc	status,0,c
 12272  0016FC  D007               	goto	i2l4362
 12273                           
 12274                           ; BSR set to: 0
 12275  0016FE  0100               	movlb	0	; () banked
 12276  001700  0100               	movlb	0	; () banked
 12277  001702  6D82               	negf	i2___awmod@divisor& (0+255),b
 12278  001704  0100               	movlb	0	; () banked
 12279  001706  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
 12280  001708  B0D8               	btfsc	status,0,c
 12281  00170A  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
 12282  00170C                     i2l4362:
 12283                           
 12284                           ; BSR set to: 0
 12285  00170C  0100               	movlb	0	; () banked
 12286  00170E  0100               	movlb	0	; () banked
 12287  001710  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 12288  001712  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
 12289  001714  B4D8               	btfsc	status,2,c
 12290  001716  D03A               	goto	i2l4378
 12291                           
 12292                           ; BSR set to: 0
 12293  001718  0100               	movlb	0	; () banked
 12294  00171A  6F84               	movwf	??i2___awmod& (0+255),b
 12295  00171C  0E01               	movlw	1
 12296  00171E  0100               	movlb	0	; () banked
 12297  001720  0100               	movlb	0	; () banked
 12298  001722  6F85               	movwf	i2___awmod@counter& (0+255),b
 12299  001724  0100               	movlb	0	; () banked
 12300  001726  5184               	movf	??i2___awmod& (0+255),w,b
 12301  001728  D009               	goto	i2l4368
 12302  00172A                     i2l4366:
 12303                           
 12304                           ; BSR set to: 0
 12305  00172A  0100               	movlb	0	; () banked
 12306  00172C  0100               	movlb	0	; () banked
 12307  00172E  0100               	movlb	0	; () banked
 12308  001730  90D8               	bcf	status,0,c
 12309  001732  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
 12310  001734  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
 12311  001736  0100               	movlb	0	; () banked
 12312  001738  0100               	movlb	0	; () banked
 12313  00173A  2B85               	incf	i2___awmod@counter& (0+255),f,b
 12314  00173C                     i2l4368:
 12315                           
 12316                           ; BSR set to: 0
 12317  00173C  0100               	movlb	0	; () banked
 12318  00173E  0100               	movlb	0	; () banked
 12319  001740  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
 12320  001742  D7F3               	goto	i2l4366
 12321  001744                     i2l4370:
 12322                           
 12323                           ; BSR set to: 0
 12324  001744  0100               	movlb	0	; () banked
 12325  001746  0100               	movlb	0	; () banked
 12326  001748  5182               	movf	i2___awmod@divisor& (0+255),w,b
 12327  00174A  0100               	movlb	0	; () banked
 12328  00174C  0100               	movlb	0	; () banked
 12329  00174E  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
 12330  001750  0100               	movlb	0	; () banked
 12331  001752  0100               	movlb	0	; () banked
 12332  001754  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 12333  001756  0100               	movlb	0	; () banked
 12334  001758  0100               	movlb	0	; () banked
 12335  00175A  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
 12336  00175C  A0D8               	btfss	status,0,c
 12337  00175E  D00C               	goto	i2l4374
 12338                           
 12339                           ; BSR set to: 0
 12340  001760  0100               	movlb	0	; () banked
 12341  001762  0100               	movlb	0	; () banked
 12342  001764  5182               	movf	i2___awmod@divisor& (0+255),w,b
 12343  001766  0100               	movlb	0	; () banked
 12344  001768  0100               	movlb	0	; () banked
 12345  00176A  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
 12346  00176C  0100               	movlb	0	; () banked
 12347  00176E  0100               	movlb	0	; () banked
 12348  001770  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 12349  001772  0100               	movlb	0	; () banked
 12350  001774  0100               	movlb	0	; () banked
 12351  001776  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
 12352  001778                     i2l4374:
 12353                           
 12354                           ; BSR set to: 0
 12355  001778  0100               	movlb	0	; () banked
 12356  00177A  0100               	movlb	0	; () banked
 12357  00177C  0100               	movlb	0	; () banked
 12358  00177E  90D8               	bcf	status,0,c
 12359  001780  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
 12360  001782  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
 12361                           
 12362                           ; BSR set to: 0
 12363  001784  0100               	movlb	0	; () banked
 12364  001786  0100               	movlb	0	; () banked
 12365  001788  2F85               	decfsz	i2___awmod@counter& (0+255),f,b
 12366  00178A  D7DC               	goto	i2l4370
 12367  00178C                     i2l4378:
 12368                           
 12369                           ; BSR set to: 0
 12370  00178C  0100               	movlb	0	; () banked
 12371  00178E  0100               	movlb	0	; () banked
 12372  001790  5186               	movf	i2___awmod@sign& (0+255),w,b
 12373  001792  B4D8               	btfsc	status,2,c
 12374  001794  D007               	goto	i2l4382
 12375                           
 12376                           ; BSR set to: 0
 12377  001796  0100               	movlb	0	; () banked
 12378  001798  0100               	movlb	0	; () banked
 12379  00179A  6D80               	negf	i2___awmod@dividend& (0+255),b
 12380  00179C  0100               	movlb	0	; () banked
 12381  00179E  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
 12382  0017A0  B0D8               	btfsc	status,0,c
 12383  0017A2  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
 12384  0017A4                     i2l4382:
 12385                           
 12386                           ; BSR set to: 0
 12387  0017A4  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
 12388  0017A8  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
 12389  0017AC  0012               	return	
 12390  0017AE                     __end_ofi2___awmod:
 12391                           	opt stack 0
 12392                           pclatu	equ	0xFFB
 12393                           pclath	equ	0xFFA
 12394                           tblptru	equ	0xFF8
 12395                           tblptrh	equ	0xFF7
 12396                           tblptrl	equ	0xFF6
 12397                           tablat	equ	0xFF5
 12398                           prodh	equ	0xFF4
 12399                           prodl	equ	0xFF3
 12400                           intcon	equ	0xFF2
 12401                           intcon2	equ	0xFF1
 12402                           postinc0	equ	0xFEE
 12403                           fsr0h	equ	0xFEA
 12404                           fsr0l	equ	0xFE9
 12405                           wreg	equ	0xFE8
 12406                           indf1	equ	0xFE7
 12407                           postinc1	equ	0xFE6
 12408                           postdec1	equ	0xFE5
 12409                           fsr1h	equ	0xFE2
 12410                           fsr1l	equ	0xFE1
 12411                           bsr	equ	0xFE0
 12412                           indf2	equ	0xFDF
 12413                           postinc2	equ	0xFDE
 12414                           postdec2	equ	0xFDD
 12415                           fsr2h	equ	0xFDA
 12416                           fsr2l	equ	0xFD9
 12417                           status	equ	0xFD8
 12418                           
 12419 ;; *************** function _SleepIfOkay *****************
 12420 ;; Defined at:
 12421 ;;		line 228 in file "../src/messages.c"
 12422 ;; Parameters:    Size  Location     Type
 12423 ;;		None
 12424 ;; Auto vars:     Size  Location     Type
 12425 ;;		None
 12426 ;; Return value:  Size  Location     Type
 12427 ;;		None               void
 12428 ;; Registers used:
 12429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12430 ;; Tracked objects:
 12431 ;;		On entry : 0/0
 12432 ;;		On exit  : 0/0
 12433 ;;		Unchanged: 0/0
 12434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12435 ;;      Params:         0       0       0       0       0
 12436 ;;      Locals:         0       0       0       0       0
 12437 ;;      Temps:          0       0       0       0       0
 12438 ;;      Totals:         0       0       0       0       0
 12439 ;;Total ram usage:        0 bytes
 12440 ;; Hardware stack levels used:    1
 12441 ;; Hardware stack levels required when called:    2
 12442 ;; This function calls:
 12443 ;;		_enter_sleep_mode
 12444 ;;		i2_check_msg
 12445 ;;		i2_in_high_int
 12446 ;;		i2_in_low_int
 12447 ;; This function is called by:
 12448 ;;		_InterruptHandlerHigh
 12449 ;; This function uses a non-reentrant model
 12450 ;;
 12451                           
 12452                           	psect	text67
 12453  0026B8                     __ptext67:
 12454                           	opt stack 0
 12455  0026B8                     _SleepIfOkay:
 12456                           	opt stack 18
 12457                           
 12458                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 12459                           
 12460                           ; BSR set to: 0
 12461                           ;incstack = 0
 12462  0026B8  0100               	movlb	0	; () banked
 12463  0026BA  0100               	movlb	0	; () banked
 12464  0026BC  67DC               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
 12465  0026BE  D001               	goto	i2l3336
 12466  0026C0  0012               	return	
 12467  0026C2                     i2l3336:
 12468                           
 12469                           ; BSR set to: 0
 12470                           ;messages.c: 232: }
 12471                           ;messages.c: 235: if (in_low_int()) {
 12472  0026C2  ECDA  F014         	call	i2_in_low_int	;wreg free
 12473  0026C6  0100               	movlb	0	; () banked
 12474  0026C8  0100               	movlb	0	; () banked
 12475  0026CA  5183               	movf	(?i2_in_low_int+1)& (0+255),w,b
 12476  0026CC  0100               	movlb	0	; () banked
 12477  0026CE  1182               	iorwf	?i2_in_low_int& (0+255),w,b
 12478  0026D0  A4D8               	btfss	status,2,c
 12479  0026D2  0012               	return	
 12480                           
 12481                           ; BSR set to: 0
 12482                           ;messages.c: 237: }
 12483                           ;messages.c: 240: if (!in_high_int()) {
 12484                           
 12485                           ; BSR set to: 0
 12486                           
 12487                           ; BSR set to: 0
 12488                           ;messages.c: 236: return;
 12489  0026D4  ECC9  F016         	call	i2_in_high_int	;wreg free
 12490  0026D8  0100               	movlb	0	; () banked
 12491  0026DA  0100               	movlb	0	; () banked
 12492  0026DC  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
 12493  0026DE  0100               	movlb	0	; () banked
 12494  0026E0  1180               	iorwf	?i2_in_high_int& (0+255),w,b
 12495  0026E2  B4D8               	btfsc	status,2,c
 12496  0026E4  0012               	return	
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;messages.c: 242: }
 12500                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 12501                           
 12502                           ; BSR set to: 0
 12503                           
 12504                           ; BSR set to: 0
 12505                           ;messages.c: 241: return;
 12506  0026E6  0102               	movlb	2	; () banked
 12507  0026E8  0E02               	movlw	high _ToMainHigh_MQ
 12508  0026EA  0100               	movlb	0	; () banked
 12509  0026EC  0100               	movlb	0	; () banked
 12510  0026EE  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
 12511  0026F0  0102               	movlb	2	; () banked
 12512  0026F2  0E86               	movlw	low _ToMainHigh_MQ
 12513  0026F4  0100               	movlb	0	; () banked
 12514  0026F6  0100               	movlb	0	; () banked
 12515  0026F8  6F80               	movwf	i2check_msg@qptr& (0+255),b
 12516  0026FA  ECEE  F015         	call	i2_check_msg	;wreg free
 12517  0026FE  0900               	iorlw	0
 12518  002700  A4D8               	btfss	status,2,c
 12519  002702  0012               	return	
 12520                           
 12521                           ;messages.c: 249: }
 12522                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 12523                           
 12524                           ;messages.c: 248: return;
 12525  002704  0101               	movlb	1	; () banked
 12526  002706  0E01               	movlw	high _ToMainLow_MQ
 12527  002708  0100               	movlb	0	; () banked
 12528  00270A  0100               	movlb	0	; () banked
 12529  00270C  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
 12530  00270E  0101               	movlb	1	; () banked
 12531  002710  0E82               	movlw	low _ToMainLow_MQ
 12532  002712  0100               	movlb	0	; () banked
 12533  002714  0100               	movlb	0	; () banked
 12534  002716  6F80               	movwf	i2check_msg@qptr& (0+255),b
 12535  002718  ECEE  F015         	call	i2_check_msg	;wreg free
 12536  00271C  0900               	iorlw	0
 12537  00271E  B4D8               	btfsc	status,2,c
 12538                           
 12539                           ;messages.c: 252: }
 12540                           ;messages.c: 253: enter_sleep_mode();
 12541                           
 12542                           ;messages.c: 251: return;
 12543  002720  ECE4  F016         	call	_enter_sleep_mode	;wreg free
 12544  002724  0012               	return	
 12545  002726                     __end_of_SleepIfOkay:
 12546                           	opt stack 0
 12547                           pclatu	equ	0xFFB
 12548                           pclath	equ	0xFFA
 12549                           tblptru	equ	0xFF8
 12550                           tblptrh	equ	0xFF7
 12551                           tblptrl	equ	0xFF6
 12552                           tablat	equ	0xFF5
 12553                           prodh	equ	0xFF4
 12554                           prodl	equ	0xFF3
 12555                           intcon	equ	0xFF2
 12556                           intcon2	equ	0xFF1
 12557                           postinc0	equ	0xFEE
 12558                           fsr0h	equ	0xFEA
 12559                           fsr0l	equ	0xFE9
 12560                           wreg	equ	0xFE8
 12561                           indf1	equ	0xFE7
 12562                           postinc1	equ	0xFE6
 12563                           postdec1	equ	0xFE5
 12564                           fsr1h	equ	0xFE2
 12565                           fsr1l	equ	0xFE1
 12566                           bsr	equ	0xFE0
 12567                           indf2	equ	0xFDF
 12568                           postinc2	equ	0xFDE
 12569                           postdec2	equ	0xFDD
 12570                           fsr2h	equ	0xFDA
 12571                           fsr2l	equ	0xFD9
 12572                           status	equ	0xFD8
 12573                           
 12574 ;; *************** function i2_in_low_int *****************
 12575 ;; Defined at:
 12576 ;;		line 31 in file "../src/interrupts.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;		None
 12579 ;; Auto vars:     Size  Location     Type
 12580 ;;		None
 12581 ;; Return value:  Size  Location     Type
 12582 ;;                  2    2[BANK0 ] int 
 12583 ;; Registers used:
 12584 ;;		wreg, status,2, status,0, cstack
 12585 ;; Tracked objects:
 12586 ;;		On entry : 0/0
 12587 ;;		On exit  : 0/0
 12588 ;;		Unchanged: 0/0
 12589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12590 ;;      Params:         0       2       0       0       0
 12591 ;;      Locals:         0       0       0       0       0
 12592 ;;      Temps:          0       0       0       0       0
 12593 ;;      Totals:         0       2       0       0       0
 12594 ;;Total ram usage:        2 bytes
 12595 ;; Hardware stack levels used:    1
 12596 ;; Hardware stack levels required when called:    1
 12597 ;; This function calls:
 12598 ;;		i2_in_high_int
 12599 ;; This function is called by:
 12600 ;;		_SleepIfOkay
 12601 ;; This function uses a non-reentrant model
 12602 ;;
 12603                           
 12604                           	psect	text68
 12605  0029B4                     __ptext68:
 12606                           	opt stack 0
 12607  0029B4                     i2_in_low_int:
 12608                           	opt stack 18
 12609                           
 12610                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
 12611                           
 12612                           ;incstack = 0
 12613  0029B4  ACF2               	btfss	intcon,6,c	;volatile
 12614  0029B6  D008               	goto	i2l4200
 12615                           
 12616                           ;interrupts.c: 33: return (0);
 12617  0029B8  0E00               	movlw	0
 12618  0029BA  0100               	movlb	0	; () banked
 12619  0029BC  0100               	movlb	0	; () banked
 12620  0029BE  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 12621  0029C0  0E00               	movlw	0
 12622  0029C2  0100               	movlb	0	; () banked
 12623  0029C4  6F82               	movwf	?i2_in_low_int& (0+255),b
 12624  0029C6  0012               	return	
 12625  0029C8                     i2l4200:
 12626  0029C8  ECC9  F016         	call	i2_in_high_int	;wreg free
 12627  0029CC  0100               	movlb	0	; () banked
 12628  0029CE  0100               	movlb	0	; () banked
 12629  0029D0  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
 12630  0029D2  0100               	movlb	0	; () banked
 12631  0029D4  1180               	iorwf	?i2_in_high_int& (0+255),w,b
 12632  0029D6  B4D8               	btfsc	status,2,c
 12633  0029D8  D008               	goto	i2l4208
 12634                           
 12635                           ; BSR set to: 0
 12636                           ;interrupts.c: 35: return (0);
 12637  0029DA  0E00               	movlw	0
 12638  0029DC  0100               	movlb	0	; () banked
 12639  0029DE  0100               	movlb	0	; () banked
 12640  0029E0  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 12641  0029E2  0E00               	movlw	0
 12642  0029E4  0100               	movlb	0	; () banked
 12643  0029E6  6F82               	movwf	?i2_in_low_int& (0+255),b
 12644  0029E8  0012               	return	
 12645  0029EA                     i2l4208:
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;interrupts.c: 37: return (1);
 12649  0029EA  0E00               	movlw	0
 12650  0029EC  0100               	movlb	0	; () banked
 12651  0029EE  0100               	movlb	0	; () banked
 12652  0029F0  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 12653  0029F2  0E01               	movlw	1
 12654  0029F4  0100               	movlb	0	; () banked
 12655  0029F6  6F82               	movwf	?i2_in_low_int& (0+255),b
 12656  0029F8  0012               	return	
 12657  0029FA                     __end_ofi2_in_low_int:
 12658                           	opt stack 0
 12659                           pclatu	equ	0xFFB
 12660                           pclath	equ	0xFFA
 12661                           tblptru	equ	0xFF8
 12662                           tblptrh	equ	0xFF7
 12663                           tblptrl	equ	0xFF6
 12664                           tablat	equ	0xFF5
 12665                           prodh	equ	0xFF4
 12666                           prodl	equ	0xFF3
 12667                           intcon	equ	0xFF2
 12668                           intcon2	equ	0xFF1
 12669                           postinc0	equ	0xFEE
 12670                           fsr0h	equ	0xFEA
 12671                           fsr0l	equ	0xFE9
 12672                           wreg	equ	0xFE8
 12673                           indf1	equ	0xFE7
 12674                           postinc1	equ	0xFE6
 12675                           postdec1	equ	0xFE5
 12676                           fsr1h	equ	0xFE2
 12677                           fsr1l	equ	0xFE1
 12678                           bsr	equ	0xFE0
 12679                           indf2	equ	0xFDF
 12680                           postinc2	equ	0xFDE
 12681                           postdec2	equ	0xFDD
 12682                           fsr2h	equ	0xFDA
 12683                           fsr2l	equ	0xFD9
 12684                           status	equ	0xFD8
 12685                           
 12686 ;; *************** function i2_in_high_int *****************
 12687 ;; Defined at:
 12688 ;;		line 23 in file "../src/interrupts.c"
 12689 ;; Parameters:    Size  Location     Type
 12690 ;;		None
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;		None
 12693 ;; Return value:  Size  Location     Type
 12694 ;;                  2    0[BANK0 ] int 
 12695 ;; Registers used:
 12696 ;;		wreg, status,2
 12697 ;; Tracked objects:
 12698 ;;		On entry : 0/0
 12699 ;;		On exit  : 0/0
 12700 ;;		Unchanged: 0/0
 12701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12702 ;;      Params:         0       2       0       0       0
 12703 ;;      Locals:         0       0       0       0       0
 12704 ;;      Temps:          0       0       0       0       0
 12705 ;;      Totals:         0       2       0       0       0
 12706 ;;Total ram usage:        2 bytes
 12707 ;; Hardware stack levels used:    1
 12708 ;; This function calls:
 12709 ;;		Nothing
 12710 ;; This function is called by:
 12711 ;;		_SleepIfOkay
 12712 ;;		i2_in_low_int
 12713 ;; This function uses a non-reentrant model
 12714 ;;
 12715                           
 12716                           	psect	text69
 12717  002D92                     __ptext69:
 12718                           	opt stack 0
 12719  002D92                     i2_in_high_int:
 12720                           	opt stack 18
 12721                           
 12722                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
 12723                           
 12724                           ; BSR set to: 0
 12725                           ;incstack = 0
 12726  002D92  0E00               	movlw	0
 12727  002D94  AEF2               	btfss	intcon,7,c	;volatile
 12728  002D96  0E01               	movlw	1
 12729  002D98  0100               	movlb	0	; () banked
 12730  002D9A  0100               	movlb	0	; () banked
 12731  002D9C  6F80               	movwf	?i2_in_high_int& (0+255),b
 12732  002D9E  0100               	movlb	0	; () banked
 12733  002DA0  6B81               	clrf	(?i2_in_high_int+1)& (0+255),b
 12734  002DA2  0012               	return	
 12735  002DA4                     __end_ofi2_in_high_int:
 12736                           	opt stack 0
 12737                           pclatu	equ	0xFFB
 12738                           pclath	equ	0xFFA
 12739                           tblptru	equ	0xFF8
 12740                           tblptrh	equ	0xFF7
 12741                           tblptrl	equ	0xFF6
 12742                           tablat	equ	0xFF5
 12743                           prodh	equ	0xFF4
 12744                           prodl	equ	0xFF3
 12745                           intcon	equ	0xFF2
 12746                           intcon2	equ	0xFF1
 12747                           postinc0	equ	0xFEE
 12748                           fsr0h	equ	0xFEA
 12749                           fsr0l	equ	0xFE9
 12750                           wreg	equ	0xFE8
 12751                           indf1	equ	0xFE7
 12752                           postinc1	equ	0xFE6
 12753                           postdec1	equ	0xFE5
 12754                           fsr1h	equ	0xFE2
 12755                           fsr1l	equ	0xFE1
 12756                           bsr	equ	0xFE0
 12757                           indf2	equ	0xFDF
 12758                           postinc2	equ	0xFDE
 12759                           postdec2	equ	0xFDD
 12760                           fsr2h	equ	0xFDA
 12761                           fsr2l	equ	0xFD9
 12762                           status	equ	0xFD8
 12763                           
 12764 ;; *************** function i2_check_msg *****************
 12765 ;; Defined at:
 12766 ;;		line 222 in file "../src/messages.c"
 12767 ;; Parameters:    Size  Location     Type
 12768 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
 12769 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 12770 ;; Auto vars:     Size  Location     Type
 12771 ;;		None
 12772 ;; Return value:  Size  Location     Type
 12773 ;;                  1    wreg      unsigned char 
 12774 ;; Registers used:
 12775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12776 ;; Tracked objects:
 12777 ;;		On entry : 0/0
 12778 ;;		On exit  : 0/0
 12779 ;;		Unchanged: 0/0
 12780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12781 ;;      Params:         0       2       0       0       0
 12782 ;;      Locals:         0       0       0       0       0
 12783 ;;      Temps:          0       1       0       0       0
 12784 ;;      Totals:         0       3       0       0       0
 12785 ;;Total ram usage:        3 bytes
 12786 ;; Hardware stack levels used:    1
 12787 ;; This function calls:
 12788 ;;		Nothing
 12789 ;; This function is called by:
 12790 ;;		_SleepIfOkay
 12791 ;; This function uses a non-reentrant model
 12792 ;;
 12793                           
 12794                           	psect	text70
 12795  002BDC                     __ptext70:
 12796                           	opt stack 0
 12797  002BDC                     i2_check_msg:
 12798                           	opt stack 19
 12799                           
 12800                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 12801                           
 12802                           ; BSR set to: 0
 12803                           ;incstack = 0
 12804  002BDC  0100               	movlb	0	; () banked
 12805  002BDE  EE20 F042          	lfsr	2,66
 12806  002BE2  0100               	movlb	0	; () banked
 12807  002BE4  5180               	movf	i2check_msg@qptr& (0+255),w,b
 12808  002BE6  26D9               	addwf	fsr2l,f,c
 12809  002BE8  0100               	movlb	0	; () banked
 12810  002BEA  5181               	movf	(i2check_msg@qptr+1)& (0+255),w,b
 12811  002BEC  22DA               	addwfc	fsr2h,f,c
 12812  002BEE  50DF               	movf	indf2,w,c
 12813  002BF0  0100               	movlb	0	; () banked
 12814  002BF2  6F82               	movwf	??i2_check_msg& (0+255),b
 12815  002BF4  0100               	movlb	0	; () banked
 12816  002BF6  5182               	movf	??i2_check_msg& (0+255),w,b
 12817  002BF8  0D0D               	mullw	13
 12818  002BFA  50F3               	movf	prodl,w,c
 12819  002BFC  0100               	movlb	0	; () banked
 12820  002BFE  0100               	movlb	0	; () banked
 12821  002C00  2580               	addwf	i2check_msg@qptr& (0+255),w,b
 12822  002C02  6ED9               	movwf	fsr2l,c
 12823  002C04  50F4               	movf	prodh,w,c
 12824  002C06  0100               	movlb	0	; () banked
 12825  002C08  0100               	movlb	0	; () banked
 12826  002C0A  2181               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
 12827  002C0C  6EDA               	movwf	fsr2h,c
 12828  002C0E  50DF               	movf	indf2,w,c
 12829  002C10  0012               	return	
 12830  002C12                     __end_ofi2_check_msg:
 12831                           	opt stack 0
 12832                           pclatu	equ	0xFFB
 12833                           pclath	equ	0xFFA
 12834                           tblptru	equ	0xFF8
 12835                           tblptrh	equ	0xFF7
 12836                           tblptrl	equ	0xFF6
 12837                           tablat	equ	0xFF5
 12838                           prodh	equ	0xFF4
 12839                           prodl	equ	0xFF3
 12840                           intcon	equ	0xFF2
 12841                           intcon2	equ	0xFF1
 12842                           postinc0	equ	0xFEE
 12843                           fsr0h	equ	0xFEA
 12844                           fsr0l	equ	0xFE9
 12845                           wreg	equ	0xFE8
 12846                           indf1	equ	0xFE7
 12847                           postinc1	equ	0xFE6
 12848                           postdec1	equ	0xFE5
 12849                           fsr1h	equ	0xFE2
 12850                           fsr1l	equ	0xFE1
 12851                           bsr	equ	0xFE0
 12852                           indf2	equ	0xFDF
 12853                           postinc2	equ	0xFDE
 12854                           postdec2	equ	0xFDD
 12855                           fsr2h	equ	0xFDA
 12856                           fsr2l	equ	0xFD9
 12857                           status	equ	0xFD8
 12858                           
 12859 ;; *************** function _enter_sleep_mode *****************
 12860 ;; Defined at:
 12861 ;;		line 202 in file "../src/messages.c"
 12862 ;; Parameters:    Size  Location     Type
 12863 ;;		None
 12864 ;; Auto vars:     Size  Location     Type
 12865 ;;		None
 12866 ;; Return value:  Size  Location     Type
 12867 ;;		None               void
 12868 ;; Registers used:
 12869 ;;		None
 12870 ;; Tracked objects:
 12871 ;;		On entry : 0/0
 12872 ;;		On exit  : 0/0
 12873 ;;		Unchanged: 0/0
 12874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12875 ;;      Params:         0       0       0       0       0
 12876 ;;      Locals:         0       0       0       0       0
 12877 ;;      Temps:          0       0       0       0       0
 12878 ;;      Totals:         0       0       0       0       0
 12879 ;;Total ram usage:        0 bytes
 12880 ;; Hardware stack levels used:    1
 12881 ;; This function calls:
 12882 ;;		Nothing
 12883 ;; This function is called by:
 12884 ;;		_SleepIfOkay
 12885 ;; This function uses a non-reentrant model
 12886 ;;
 12887                           
 12888                           	psect	text71
 12889  002DC8                     __ptext71:
 12890                           	opt stack 0
 12891  002DC8                     _enter_sleep_mode:
 12892                           	opt stack 19
 12893                           
 12894                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 12895                           
 12896                           ; BSR set to: 0
 12897                           ;incstack = 0
 12898  002DC8  8ED3               	bsf	4051,7,c	;volatile
 12899  002DCA  0003               	sleep		;# 
 12900  002DCC  0012               	return	
 12901  002DCE                     __end_of_enter_sleep_mode:
 12902                           	opt stack 0
 12903  0000                     pclatu	equ	0xFFB
 12904                           pclath	equ	0xFFA
 12905                           tblptru	equ	0xFF8
 12906                           tblptrh	equ	0xFF7
 12907                           tblptrl	equ	0xFF6
 12908                           tablat	equ	0xFF5
 12909                           prodh	equ	0xFF4
 12910                           prodl	equ	0xFF3
 12911                           intcon	equ	0xFF2
 12912                           intcon2	equ	0xFF1
 12913                           postinc0	equ	0xFEE
 12914                           fsr0h	equ	0xFEA
 12915                           fsr0l	equ	0xFE9
 12916                           wreg	equ	0xFE8
 12917                           indf1	equ	0xFE7
 12918                           postinc1	equ	0xFE6
 12919                           postdec1	equ	0xFE5
 12920                           fsr1h	equ	0xFE2
 12921                           fsr1l	equ	0xFE1
 12922                           bsr	equ	0xFE0
 12923                           indf2	equ	0xFDF
 12924                           postinc2	equ	0xFDE
 12925                           postdec2	equ	0xFDD
 12926                           fsr2h	equ	0xFDA
 12927                           fsr2l	equ	0xFD9
 12928                           status	equ	0xFD8
 12929                           pclatu	equ	0xFFB
 12930                           pclath	equ	0xFFA
 12931                           tblptru	equ	0xFF8
 12932                           tblptrh	equ	0xFF7
 12933                           tblptrl	equ	0xFF6
 12934                           tablat	equ	0xFF5
 12935                           prodh	equ	0xFF4
 12936                           prodl	equ	0xFF3
 12937                           intcon	equ	0xFF2
 12938                           intcon2	equ	0xFF1
 12939                           postinc0	equ	0xFEE
 12940                           fsr0h	equ	0xFEA
 12941                           fsr0l	equ	0xFE9
 12942                           wreg	equ	0xFE8
 12943                           indf1	equ	0xFE7
 12944                           postinc1	equ	0xFE6
 12945                           postdec1	equ	0xFE5
 12946                           fsr1h	equ	0xFE2
 12947                           fsr1l	equ	0xFE1
 12948                           bsr	equ	0xFE0
 12949                           indf2	equ	0xFDF
 12950                           postinc2	equ	0xFDE
 12951                           postdec2	equ	0xFDD
 12952                           fsr2h	equ	0xFDA
 12953                           fsr2l	equ	0xFD9
 12954                           status	equ	0xFD8
 12955                           
 12956                           	psect	param0
 12957  0000                     pclatu	equ	0xFFB
 12958                           pclath	equ	0xFFA
 12959                           tblptru	equ	0xFF8
 12960                           tblptrh	equ	0xFF7
 12961                           tblptrl	equ	0xFF6
 12962                           tablat	equ	0xFF5
 12963                           prodh	equ	0xFF4
 12964                           prodl	equ	0xFF3
 12965                           intcon	equ	0xFF2
 12966                           intcon2	equ	0xFF1
 12967                           postinc0	equ	0xFEE
 12968                           fsr0h	equ	0xFEA
 12969                           fsr0l	equ	0xFE9
 12970                           wreg	equ	0xFE8
 12971                           indf1	equ	0xFE7
 12972                           postinc1	equ	0xFE6
 12973                           postdec1	equ	0xFE5
 12974                           fsr1h	equ	0xFE2
 12975                           fsr1l	equ	0xFE1
 12976                           bsr	equ	0xFE0
 12977                           indf2	equ	0xFDF
 12978                           postinc2	equ	0xFDE
 12979                           postdec2	equ	0xFDD
 12980                           fsr2h	equ	0xFDA
 12981                           fsr2l	equ	0xFD9
 12982                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         318
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     83     107
    BANK0           128     80     102
    BANK1           256    102     201
    BANK2           256      0     201
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK2[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK2[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[15]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK2[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK2[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[15]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> motorMove@direction(COMRAM[2]), main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 15
		 -> main@uc(BANK1[15]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 15
		 -> NULL(NULL[0]), main@uc(BANK1[15]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 6
		 -> i2c_slave_int_handler@ack_1696(BANK0[6]), i2c_slave_int_handler@dist(BANK0[6]), i2c_slave_int_handler@ack(BANK0[6]), i2c_slave_int_handler@message(BANK0[6]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 15
		 -> NULL(NULL[0]), main@uc(BANK1[15]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[15]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_adc_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_motorMove
    _timer0_int_handler->_motorMove
    _motorMove->i1_uart_trans
    _adc_int_handler->___ftdiv
    ___fttol->___ftpack
    ___ftmul->___awtoft
    ___ftdiv->___ftadd
    ___ftadd->___fttol
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    i2_motorMove->i2_uart_trans
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                70    70      0   10503
                                             36 BANK1     66    66      0
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     124
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2619
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     211
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2107
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1935
                                             10 BANK1     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4     428
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2337
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2337
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2165
                                             10 BANK1     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     438
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     524
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     260
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0   16956
                                             66 COMRAM    17    17      0
                    _adc_int_handler
                 _timer0_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3117
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3094
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2816
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   9     9      0    1481
                                             12 COMRAM     9     9      0
                        _WriteTimer1
                          _motorMove
 ---------------------------------------------------------------------------------
 (6) _timer0_int_handler                                   9     9      0    1481
                                             12 COMRAM     9     9      0
                        _WriteTimer0
                          _motorMove
 ---------------------------------------------------------------------------------
 (7) _motorMove                                            7     4      3    1255
                                              5 COMRAM     7     4      3
                        _WriteTimer0
                        _WriteTimer1
                       i1_uart_trans
 ---------------------------------------------------------------------------------
 (8) i1_uart_trans                                         5     3      2     191
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2     176
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _WriteTimer0                                          4     2      2     176
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                     16    16      0   10877
                                             50 COMRAM    16    16      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                       i1_SetChanADC
                          i1___awmod
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     873
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) i1_SetChanADC                                         2     2      0      73
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             15    11      4     305
                                              8 COMRAM    15    11      4
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             15     9      6    2197
                                             13 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftge                                               9     3      6     242
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (7) ___ftdiv                                             15     9      6    2257
                                             35 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             12     6      6    2897
                                             23 COMRAM    12     6      6
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    1685
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             5     2      3    1829
                                              8 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    6532
                                             66 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    6296
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              40    40      0    6296
                                             26 BANK0     40    40      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
                        i2_motorMove
 ---------------------------------------------------------------------------------
 (13) i2_motorMove                                         7     4      3    1857
                                              5 BANK0      7     4      3
                      i2_WriteTimer0
                      i2_WriteTimer1
                       i2_uart_trans
 ---------------------------------------------------------------------------------
 (14) i2_uart_trans                                        5     3      2     235
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (14) i2_WriteTimer1                                       4     2      2     310
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (14) i2_WriteTimer0                                       4     2      2     310
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     278
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3242
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2752
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     662
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4     809
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftpack
       ___fttol (ARG)
         ___ftpack (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftpack
         ___fttol (ARG)
           ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___ftpack (ARG)
     i1_SetChanADC
     i1___awmod
   _timer0_int_handler
     _WriteTimer0
     _motorMove
       _WriteTimer0
       _WriteTimer1
       i1_uart_trans
   _timer1_int_handler
     _WriteTimer1
     _motorMove
       _WriteTimer0
       _WriteTimer1
       i1_uart_trans
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
       i2_motorMove
         i2_WriteTimer0
         i2_WriteTimer1
         i2_uart_trans

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C9       8       78.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     66      C9       6       78.5%
BITBANK0            80      0       0       3        0.0%
BANK0               80     50      66       4       79.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     53      6B       1       84.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     263      11        0.0%
DATA                 0      0     263      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Apr 09 18:03:53 2014

     i2c_slave_int_handler@ack_1696 00A2            _MQ_Main_Willing_to_block 00DC  
                       _SSPSTATbits 000FC7           __end_of_ToMainLow_recvmsg 2A80  
                                bsr 000FE0           __end_of_ToMainLow_sendmsg 2C8A  
              __end_ofi1_uart_trans 1F7A                        __CFG_CP0$OFF 000000  
      i2c_slave_int_handler@bitmask 00AF                        ___ftadd@exp1 0023  
                      ___ftadd@exp2 0022                 __end_ofi2_motorMove 20AA  
           i2motorMove@leftDistance 0086                        ___ftadd@sign 0021  
                               l160 0AD8                                 l612 2C36  
                               l613 2C38                                 l636 2B1C  
                               l638 2B34                                 l639 2B36  
                               l680 21A2                                 l593 23F2  
                               l673 2170                                 l906 2D02  
                               l677 2190                                 l678 2192  
                               l679 21A0     __size_of_uart_trans_int_handler 0068  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
      i2c_slave_int_handler@message 00B6                        ___awmod@sign 0106  
                    _FromMainLow_MQ 0243       i2c_slave_int_handler@checksum 00B0  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
         i2c_slave_int_handler@dist 00A8                        ?_in_high_int 0100  
                  ??_init_uart_recv 0102          i2c_slave_int_handler@F5143 00D0  
        i2c_slave_int_handler@F5145 00E0          i2c_slave_int_handler@F5147 00D6  
                      ___ftdiv@cntr 002D                        ___ftdiv@sign 0032  
                              l1218 22DE                                l3320 2A2E  
                              l4130 14F0                                l3306 29A4  
                              l4150 1588                                l4142 155C  
                              l4134 150E                                l4126 14CA  
                              l3430 0A86                                l3422 0A44  
                              l3504 2B1E                                l4136 1520  
                              l3432 0ADE                                l4138 1528  
                              l4146 1570                                l3610 233A  
                              l3450 0BF6                                l3604 230A  
                              l4180 2296                                l3444 0B5C  
                              l3436 0AFE                                l3702 2880  
                              l3630 1D4E                                l3454 0C3C  
                              l3446 0BAE                                l3438 0B1E  
                              l3552 2172                                l3544 215C  
                              l3616 236A                                l4184 22CA  
                              l4176 227C                                l3722 0FFC  
                              l3298 2982                                l3650 110A  
                              l4178 228E                                l3626 1CE4  
                              l3458 0C40                                l3708 28A4  
                              l3654 118E                                l3670 243E  
                              l3738 10EA                                l3688 1288  
                              _LATA 000F89                                _LATB 000F8A  
                              u4237 2D04                                i1l71 0092  
                              i2l62 24AA                     _FromMainHigh_MQ 0200  
              __end_ofi2_uart_trans 1E36                       __CFG_FCMEN$ON 000000  
            ?_block_on_To_msgqueues 0001                                _main 096C  
                      ___ftpack@arg 0001                        ___ftpack@exp 0004  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 0138                          i1_send_msg 1C0E  
            __size_ofi2_WriteTimer0 0012              __size_ofi2_WriteTimer1 0012  
                              pclat 000FFA                         i2_check_msg 2BDC  
                              prodh 000FF4                                prodl 000FF3  
             handle_start@data_read 0080                                start 00D8  
                     __CFG_FOSC2$ON 000000                    ?_adc_int_handler 0001  
                i1uart_trans@length 0005                          i2_send_msg 1358  
                      ___ftmul@cntr 001B           ToMainHigh_recvmsg@msgtype 0118  
                      ___ftmul@sign 001C                      send_msg@length 010C  
                   __end_of_OpenADC 23F6                        ___fttol@exp1 0017  
       __size_of_timer0_int_handler 0076                        ___fttol@lval 0013  
           ??_i2c_slave_int_handler 009A                         _Delay1KTCYx 2CFE  
                             ?_main 0001                     __end_of___ftadd 0E12  
                   __end_of___awmod 1592                     __end_of___ftdiv 1A82  
                   __end_of___ftmul 18A6                               _T0CON 000FD5  
                             _T1CON 000FCD                     __end_of___fttol 199C  
                   __end_of___lwmod 22E8                          i1memcpy@d1 0001  
                             i2l400 04B0                               i1l472 27F4  
                             i1l548 0F84                               i2l406 0550  
                             i2l335 1B02                               i1l691 2CD6  
                             i2l372 053E                               i2l374 01A4  
                             i2l392 0378                               i2l378 01E8  
                        i1memcpy@s1 0003                               _RCREG 000FAE  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR1H 000FCF                               _TMR0L 000FD6  
                             _TMR1L 000FCE                               _SPBRG 000FAF  
                             _PORTA 000F80                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 0080                          i2memcpy@s1 0082  
                      ?_init_queues 0001           __size_of_enter_sleep_mode 0006  
                    i1___awmod@sign 0007                     __end_of_in_main 2A3E  
                     ___awtoft@sign 000D          ToMainLow_recvmsg@maxlength 011C  
                     ___ftpack@sign 0005             timer0_lthread@msgbuffer 0106  
           i2c_configure_slave@addr 0100                               tablat 000FF5  
                             status 000FD8              _uart_trans_int_handler 2790  
                  __end_ofi1_memcpy 2B02                  __size_ofi1___awmod 009C  
                  __end_ofi2_memcpy 291A                  __size_ofi2___awmod 010E  
                   __initialization 20AA                         i2_motorMove 2016  
                      __end_of_main 0C5A         __size_of_timer1_int_handler 0076  
        __size_of_ToMainLow_recvmsg 0042          __size_of_ToMainLow_sendmsg 0026  
             __size_ofi2_in_low_int 0046       __size_of_FromMainHigh_sendmsg 0036  
                            ??_main 0124                       ___fttol@sign1 0012  
                     i2_WriteTimer0 2D80                       i2_WriteTimer1 2D6E  
                   send_msg@msgtype 010D                       __activetblptr 000002  
                   send_msg@tlength 0111                          _SetChanADC 2C8A  
              __end_of_handle_start 1B4E          timer0_int_handler@motormsg 0010  
                            _ADCON0 000FC2                              _ADCON1 000FC1  
                            _ADCON2 000FC0                              _ADRESH 000FC4  
           ??_uart_recv_int_handler 001B                    __end_of___awtoft 296E  
                  __end_of___ftpack 1EDE                     _leftDistDesired 0068  
                            i1l1033 0CA0                              i1l1037 0CCC  
                            i1l1048 0D7C                              i1l1057 0D98  
                            i1l1067 1A2A                              i1l1068 1A50  
                            i1l4100 1E92                              i1l4102 1EB0  
                            i1l4104 1EBA                              i1l4302 2AF0  
                            i1l4162 222E                              i1l4330 1FD4  
                            i1l4322 1FA6                              i1l4242 1EF4  
                            i1l4092 1E54                              i1l4332 1FDC  
                            i1l4094 1E5E                              i1l4158 21FE  
                            i1l4334 1FE0                              i1l4342 1FFE  
                            i1l4326 1FC2                              i1l4246 1F4E  
                            i1l4096 1E7C                              i1l4088 1E46  
                            i1l4440 0D0E                              i1l4424 0CDA  
                            i1l4168 225A                              i1l4520 194C  
                            i1l4450 0D42                              i1l4418 0CAE  
                            i1l4530 1974                              i1l4346 200C  
                            i1l4338 1FF4                              i1l4460 0D76  
                            i1l4452 0D4A                              i1l4612 19C2  
                            i1l4516 193C                              i1l4446 0D30  
                            i1l4534 198A                              i1l4526 1964  
                            i1l4702 0E2C                              i1l4550 1C46  
                            i1l4448 0D3A                              i1l4528 1970  
                            i1l4712 0F38                              i1l4704 0E38  
                            i1l4392 2810                              i1l4296 2AD4  
                            i1l4466 0DB4                              i1l4458 0D6C  
                            i1l4618 19E8                              i1l4722 0F70  
                            i1l4714 0F40                              i1l4476 0DEC  
                            i1l4662 17FA                              i1l4398 2822  
                            i1l4742 1BAA                              i2l4200 29C8  
                            i1l4488 2946                              i1l4680 1840  
                            i1l4656 17D4                              i1l4760 0066  
                        _OpenTimer0 2C12                              i1l4690 186C  
                            i1l4498 18D0                          _OpenTimer1 2B02  
                            i1l4676 1830                              i1l4748 1BEE  
                            i1l4686 185C                      __CFG_WDTEN$OFF 000000  
                            i2l4208 29EA                              i2l3336 26C2  
                            i2l4312 2902                              i2l4224 13B4  
                            i1l4776 0082                              i1l4768 0074  
                            i2l4306 28DE                              i2l4254 1D98  
                            i2l4270 2036                              i2l4370 1744  
                            i2l4362 170C                              i2l4258 1E02  
                            i2l3804 1B1E                              i2l4276 2052  
                            i2l4382 17A4                              i2l4374 1778  
                            i2l4366 172A                              i2l4358 16E6  
                            i2l3806 1B36                              i2l3822 0182  
                            i2l4368 173C                              i2l4378 178C  
                            i2l3922 0554                              i2l3916 0512  
                            i2l3828 019A                              i2l3846 0220  
                            i2l3784 15AE                              i2l3944 06F4  
                            i2l3936 064E                              i2l3928 05B4  
                            i2l3864 02A0                              i2l3848 024C  
                            u401_21 19D2                              i2l3890 042E  
                            i2l3866 02E0                              i2l3858 0288  
                            i2l3788 1632                              i2l3990 08B6  
                            i2l3966 07A4                              i2l3894 0440  
                            i2l3888 03EC                              i2l3978 086A  
                            i2l3998 095A                              u404_21 17BE  
                            u406_21 17E4         __end_of_i2c_configure_slave 2C64  
                            u362_21 0C6A                       ??_SleepIfOkay 0084  
                            u363_21 0C7E                  __size_of_ReadUSART 001E  
                            u384_21 18B6                              _OSCCON 000FD3  
                            u399_21 19AC                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
    __size_of_start_i2c_slave_reply 010E                         ?i1_send_msg 000B  
     __end_of_start_i2c_slave_reply 16A0                  timer0_lthread@tptr 0100  
                         ??_OpenADC 0102                        i2_in_low_int 29B4  
                       ?i2_send_msg 008A                      __CFG_XINST$OFF 000000  
             __size_ofi1_uart_trans 009C                  __size_of_OpenUSART 0092  
                            ___ftge 21CE                     _i2c_int_handler 2DC2  
                         ??___ftadd 001E                           ??___awmod 0104  
                         ??___ftdiv 002A   i2c_slave_int_handler@data_written 00B4  
                   _i2c_master_send 10EE                           ??___ftmul 0014  
                         ??___fttol 000D                    OpenTimer0@config 0100  
                            _ic_ptr 01C5                           ??___lwmod 0104  
                     main@msgbuffer 0129                    __end_of_init_i2c 2790  
                  OpenTimer1@config 0100                              _memcpy 285E  
                            clear_0 20B0                              clear_1 20BC  
                            clear_2 20C8                     ___awmod@divisor 0102  
                            _uc_ptr 006A                      ?i2_WriteTimer0 0080  
                    ?i2_WriteTimer1 0080                     ___awmod@counter 0105  
          i2c_slave_int_handler@ack 009C                              main@ic 0149  
                            main@uc 013A                    __end_of_recv_msg 10EE  
       start_i2c_slave_reply@length 0084               ___ftmul@f3_as_product 0018  
                         ??_in_main 0106                   __end_ofi1___awmod 2016  
                  __end_of_send_msg 1358                        __pdataCOMRAM 0054  
                 __end_ofi2___awmod 17AE              motorMove@rightDistance 0008  
                i2uart_trans@length 0084                 adc_int_handler@dist 0037  
                            tblptrh 000FF7                              tblptrl 000FF6  
           timer1_int_handler@F5122 005A             timer1_int_handler@F5124 0062  
                            tblptru 000FF8                         init_queue@i 0103  
             __size_ofi2_uart_trans 00B4                      i2___awmod@sign 0086  
          ToMainLow_recvmsg@msgtype 0118                __size_of_in_high_int 0012  
                   __CFG_FOSC$HSPLL 000000                     i2motorMove@left 008B  
                        __accesstop 0080                        i1_uart_trans 1EDE  
           __end_of__initialization 2132          __end_of_ToMainHigh_recvmsg 2AC2  
        __end_of_ToMainHigh_sendmsg 2BDC                          ___ftadd@f1 0018  
                        ___ftadd@f2 001B                          ___ftge@ff1 0001  
                        ___ftge@ff2 0004                          ___ftdiv@f1 0024  
                        ___ftdiv@f2 0027                          ___ftdiv@f3 002E  
                        ___awtoft@c 0009                    i1uart_trans@data 0001  
                        ___ftmul@f1 000E                          ___ftmul@f2 0011  
       __end_of_init_timer1_lthread 2D38                 __end_of_SleepIfOkay 2726  
                        ___fttol@f1 0009                      __pcstackCOMRAM 0001  
                      __pidataBANK0 2DBC                        __pidataBANK1 2DCE  
            __size_ofi2_in_high_int 0012                  __size_of_check_msg 0036  
                 __end_of_ReadUSART 2CE6                        i2_uart_trans 1D82  
               i1SetChanADC@channel 0002                         ?_SetChanADC 0001  
               __size_ofi1_send_msg 00C0                           ?i1_memcpy 0001  
     __size_of_InterruptHandlerHigh 24E0         __end_of_InterruptHandlerLow 00D8  
                         ?i2_memcpy 0080                       _ToMainHigh_MQ 0286  
                  _enter_sleep_mode 2DC8                 __size_ofi2_send_msg 012C  
              timer1_lthread@length 011E                       ReadUSART@data 0001  
                 __end_of_OpenUSART 21CE                       check_msg@qptr 0100  
              timer1_lthread@retval 0123             ??_block_on_To_msgqueues 0106  
              __size_of_init_queues 0072                          __pbssBANK0 00D0  
                        __pbssBANK1 0166                          __pbssBANK2 0200  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 006A             __end_of_i2c_int_handler 2DC8  
                      ?i2_check_msg 0080             __end_of_i2c_master_send 122C  
                timer1_lthread@tptr 011A                             ?___ftge 0001  
       timer0_int_handler@motorcomm 000E                   recv_msg@maxlength 010C  
                   recv_msg@msgtype 010D                     ??i2_WriteTimer0 0082  
                   ??i2_WriteTimer1 0082                     recv_msg@tlength 0114  
             __size_of_handle_start 00CC                        ?_Delay1KTCYx 0001  
                  WriteTimer0@timer 0003                             ?_memcpy 0100  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 0003  
                     ??_WriteTimer1 0003                           ?___awtoft 0009  
                         ?___ftpack 0001      __size_of_i2c_slave_int_handler 0890  
           __size_of_timer0_lthread 0012       __end_of_i2c_slave_int_handler 096C  
                __size_of_motorMove 0066             __size_of_timer1_lthread 0072  
                        ??i1_memcpy 0007                          ??i2_memcpy 0086  
                  i1send_msg@length 000D                       i2_in_high_int 2D92  
                           _SSPCON1 000FC6                             _SSPCON2 000FC5  
                           _SSPSTAT 000FC7             ?_uart_trans_int_handler 0001  
                 __end_of_check_msg 2BA6                           ?_init_i2c 0100  
                       _SleepIfOkay 26B8                 i2WriteTimer0@timer0 0080  
               i2WriteTimer1@timer1 0080                           ?_recv_msg 010A  
                           _OpenADC 2372                          _in_low_int 296E  
                      _handle_start 1A82                             __Hparam 0000  
               __size_of_SetChanADC 0020                           ?_send_msg 010A  
                           __Lparam 0000          __end_of_timer0_int_handler 25D4  
                      ?i2_motorMove 0085                    adc_int_handler@k 003A  
                  init_uart_recv@uc 0100                     __size_of___ftge 0090  
                           ___ftadd 0C5A                             ___awmod 1484  
                           ___ftdiv 199C                             ___ftmul 17AE  
                           ___fttol 18A6                             ___lwmod 225E  
                   __CFG_STVREN$OFF 000000  i2c_slave_int_handler@overrun_error 00B5  
                           __pcinit 20AA                     __size_of_memcpy 005E  
                        ??___awtoft 000C                          ??___ftpack 0006  
          __size_of_adc_int_handler 017E                          _init_queue 23F6  
                           __ramtop 0400                 __size_of_OpenTimer0 002A  
               __size_of_OpenTimer1 0038                             __ptext0 096C  
                           __ptext1 1CCE                             __ptext2 25D4  
                           __ptext3 225E                             __ptext4 2B3A  
                           __ptext5 122C                             __ptext6 2D14  
                           __ptext7 2CAA                             __ptext8 2D26  
                           __ptext9 2646                           _T0CONbits 000FD5  
                           _in_main 29FA                           _T1CONbits 000FCD  
                  ___awmod@dividend 0100                 __end_of_WriteTimer0 2D6E  
               __end_of_WriteTimer1 2D5C                      ?i2_in_high_int 0080  
    __end_of_uart_trans_int_handler 27F8                      OpenADC@config2 0100  
                           main@msg 0126                      __pintcode_body 2470  
              end_of_initialization 2132             timer1_lthread@msgbuffer 0120  
      __end_of_FromMainHigh_sendmsg 2B70      __size_of_uart_recv_int_handler 00C0  
        FromMainHigh_sendmsg@length 0119                             memcpy@d 0106  
                           memcpy@n 0104                             memcpy@s 0108  
     __end_of_uart_recv_int_handler 1C0E                          ??_init_i2c 0102  
                     __Lmediumconst 0000                             int_func 2470  
                      ??i1_send_msg 0011                   __end_of_motorMove 285E  
          adc_int_handler@roundDist 0041             __size_of_init_uart_recv 001E  
                  ?_i2c_int_handler 0001                       ?i1_SetChanADC 0001  
                  ?_i2c_master_send 0100                          ??_recv_msg 0111  
                      ??i2_send_msg 0090                          ??_send_msg 0110  
        __end_of_timer1_int_handler 255E                           _RCSTAbits 000FAB  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0096  
                        _uart_trans 1CCE                           _PORTAbits 000F80  
                __end_ofi1_send_msg 1CCE         FromMainHigh_sendmsg@msgtype 0116  
                         _TRISCbits 000F94                    i2motorMove@right 0085  
                         i1___awmod 1F7A                  __end_ofi2_send_msg 1484  
                         i2___awmod 16A0                         ___ftdiv@exp 0031  
                    ??i1_SetChanADC 0001                           _TXSTAbits 000FAC  
                        main@length 0139                         ?_in_low_int 0102  
             timer0_lthread@msgtype 0102               _start_i2c_slave_reply 1592  
                       ___ftmul@exp 0017        __size_of_i2c_configure_slave 0028  
              __size_ofi2_check_msg 0036            __end_of_enter_sleep_mode 2DCE  
                    __end_of___ftge 225E                  _ToMainHigh_recvmsg 2A80  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 2BA6  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
         i2c_master_send@recvlength 0100                       __pidataCOMRAM 2DA4  
                    _timer0_lthread 2D14                         ?_init_queue 0100  
                         i2memcpy@d 0086                         _WriteTimer0 2D5C  
                       _WriteTimer1 2D4A                           i2memcpy@n 0084  
                         i2memcpy@s 0088                      _timer1_lthread 25D4  
                    __end_of_memcpy 28BC                   _enable_interrupts 2DB4  
              __size_of_Delay1KTCYx 0016                        ??_SetChanADC 0100  
         i2c_master_send@sendlength 0106                 ?_ToMainHigh_recvmsg 0118  
                   ??i2_in_high_int 0082                 ?_ToMainHigh_sendmsg 0096  
                ?_enable_interrupts 0001                 start_initialization 20AA  
                     ??_in_high_int 0102                           _ReadUSART 2CC8  
                 ??_adc_int_handler 0033                          ?i1___awmod 0001  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 005E  
         i2c_master_send@slave_addr 0103                          ?i2___awmod 0080  
               ??_enable_interrupts 0100                        ??_OpenTimer0 0100  
                      ??_OpenTimer1 0100      __size_of_block_on_To_msgqueues 008A  
     __end_of_block_on_To_msgqueues 2372                           _OpenUSART 213C  
      __end_of_InterruptHandlerHigh 24E8                          init_i2c@ic 0100  
                motorMove@direction 000A                ??_ToMainHigh_recvmsg 011C  
              ??_ToMainHigh_sendmsg 0099                  __end_of_SetChanADC 2CAA  
                          ??___ftge 0007              __end_of_timer0_lthread 2D26  
                       __pdataBANK0 00E0                         __pdataBANK1 01C7  
            __end_of_timer1_lthread 2646                  i1___awmod@dividend 0001  
              __size_ofi2_motorMove 0094           __end_of_enable_interrupts 2DBC  
                          ??_memcpy 0106               timer1_lthread@msgtype 011C  
                       ?_uart_trans 0100                _FromMainHigh_sendmsg 2B3A  
          i2motorMove@rightDistance 0087        __size_of_init_timer1_lthread 0012  
                __end_of_OpenTimer0 2C3C                  __end_of_OpenTimer1 2B3A  
                 __size_of___awtoft 0054                   __size_of___ftpack 00A8  
                       __pbssCOMRAM 0064                          ?_ReadUSART 0001  
                     ??_init_queues 0104                       __pcstackBANK0 0080  
                     __pcstackBANK1 0100                 __size_of_in_low_int 0046  
          start_i2c_slave_reply@msg 0080                           _adcbuffer 0166  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 0100  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 00C0  
    i2c_slave_int_handler@data_read 00C1                 __end_of_in_high_int 2D4A  
                        ?_OpenUSART 0100                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 011A                        _ToMainLow_MQ 0182  
               __size_of_init_queue 007A                      _init_uart_recv 2CAA  
                         _check_msg 2B70                           __pnvBANK1 01C5  
            ?_start_i2c_slave_reply 0080                   __size_of_init_i2c 006A  
                 OpenADC@portconfig 0101                            ?_OpenADC 0100  
                    motorMove@right 0006                        recv_msg@data 010F  
                      recv_msg@qmsg 0116                        recv_msg@slot 0113  
                      recv_msg@qptr 010A                   __size_of_recv_msg 015E  
                         __pintcode 0008                   __size_of_send_msg 012C  
                          ?___ftadd 0018                            ?___awmod 0100  
                          ?___ftdiv 0024                     ?_timer0_lthread 0100  
                          ?___ftmul 000E                            ?___fttol 0009  
       timer1_int_handler@motorcomm 000E                            ?___lwmod 0100  
                   ?_timer1_lthread 011A               ?_FromMainHigh_sendmsg 0116  
                       __pintcodelo 0018                           _distMoved 0067  
            ToMainHigh_recvmsg@data 011A               __end_ofi2_WriteTimer0 2D92  
             __end_ofi2_WriteTimer1 2D80                            ?_in_main 0104  
                 WriteTimer0@timer0 0001                __end_ofi1_SetChanADC 2CFE  
                _timer0_int_handler 255E                   WriteTimer1@timer1 0001  
             _i2c_slave_int_handler 00DC                  i2WriteTimer0@timer 0082  
                i2WriteTimer1@timer 0082      i2c_slave_int_handler@error_buf 00B1  
                       ??i1___awmod 0005               ToMainLow_sendmsg@data 0018  
                       ??i2___awmod 0084                 ?_timer0_int_handler 0001  
    i2c_slave_int_handler@msg_ready 00BE              __end_of_init_uart_recv 2CC8  
               __end_of_init_queues 26B8         i2c_slave_int_handler@length 00BF  
               __size_of_uart_trans 00B4                       OpenADC@config 0104  
                          _LATBbits 000F8A                     i2check_msg@qptr 0080  
                        ?_check_msg 0100                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D                       ?i2_in_low_int 0082  
                          i2u301_41 0882                            i2u303_41 08CE  
                          i1u386_20 18EE                            i1u394_21 2510  
                          i1u386_25 18E6                            i1u397_21 2586  
                          _PIR1bits 000F9E              ToMainHigh_sendmsg@data 0097  
                          i2u299_41 07BC                            _RCONbits 000FD0  
                         _motorMove 27F8                    __CFG_WDTPS$32768 000000  
                         main@F5223 01C7                ??_timer0_int_handler 000D  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012                          _ADCON0bits 000FC2  
              timer0_lthread@length 0104                  _timer1_int_handler 24E8  
                          i1_memcpy 2AC2                _InterruptHandlerHigh 0008  
                       _leftEncoder 00DD                         ??_ReadUSART 0001  
                          i2_memcpy 28BC                timer0_lthread@msgval 0108  
                       _in_high_int 2D38                        send_msg@data 010E  
               _i2c_configure_slave 2C3C                        send_msg@qmsg 0114  
                      send_msg@slot 0113                        send_msg@qptr 010A  
                       _INTCON2bits 000FF1                           copy_data0 2106  
                         copy_data1 2126                 ?_timer1_int_handler 0001  
                i2___awmod@dividend 0080                     ?_init_uart_recv 0100  
                     ?i1_uart_trans 0001                         ??_OpenUSART 0102  
                   OpenUSART@config 0105                      ??i2_in_low_int 0084  
                          __Hparam0 0000               _uart_recv_int_handler 1B4E  
                      ??_in_low_int 0104                            __Lparam0 0000  
                  __size_of_OpenADC 0084                ?_i2c_configure_slave 0001  
                        ?_motorMove 0006                   ?_enter_sleep_mode 0001  
                  i2uart_trans@data 0080              ??_FromMainHigh_sendmsg 0119  
                 i1___awmod@divisor 0003                ??_timer1_int_handler 000D  
                 i1___awmod@counter 0006                     _adc_int_handler 0E12  
  i2c_slave_int_handler@messageType 00AE                    __size_of___ftadd 01B8  
          __size_of_i2c_int_handler 0006                    __size_of___awmod 010E  
                      _rightEncoder 00DE                    __size_of___ftdiv 00E6  
                ??_enter_sleep_mode 0080                    __size_of___ftmul 00F8  
          __size_of_i2c_master_send 013E                    __size_of___fttol 00F6  
                  __size_of___lwmod 008A                        ??_init_queue 0102  
                      ?_WriteTimer0 0001                        ?_WriteTimer1 0001  
          FromMainHigh_sendmsg@data 0117                            ___awtoft 291A  
                          ___ftpack 1E36                       ?i2_uart_trans 0080  
           ToMainLow_sendmsg@length 001A              ?_i2c_slave_int_handler 0001  
                 main@t0thread_data 0134               ?_InterruptHandlerHigh 0001  
             motorMove@leftDistance 0007                    __size_of_in_main 0044  
                 i2send_msg@msgtype 008D         ToMainHigh_recvmsg@maxlength 011C  
                     motorMove@left 000C                   i2send_msg@tlength 0091  
           init_timer1_lthread@tptr 0100                         _init_queues 2646  
                __end_of_in_low_int 29B4                            __ptext10 23F6  
                          __ptext11 2726                            __ptext20 2CFE  
                          __ptext12 10EE                            __ptext21 2A3E  
                          __ptext13 2C3C                            __ptext30 2372  
                          __ptext22 2A80                            __ptext14 2DB4  
                          __ptext23 0F90                            __ptext15 22E8  
                          __ptext40 27F8                            __ptext32 2790  
                          __ptext24 285E                            __ptext16 29FA  
                          __ptext41 1EDE                            __ptext33 1B4E  
                          __ptext25 1484                            __ptext17 296E  
                          __ptext50 199C                            __ptext42 2D4A  
                          __ptext34 2C64                            __ptext26 2C8A  
                          __ptext18 2D38                            __ptext51 0C5A  
                          __ptext43 2D5C                            __ptext35 1C0E  
                          __ptext27 213C                            __ptext19 2B70  
                          __ptext60 2D80                            __ptext52 1E36  
                          __ptext44 0E12                            __ptext36 2AC2  
                          __ptext28 2B02                            __ptext61 1592  
                          __ptext53 291A                            __ptext45 1F7A  
                          __ptext37 2CC8                            __ptext29 2C12  
                          __ptext70 2BDC                            __ptext62 1A82  
                          __ptext46 2CE6                            __ptext38 24E8  
                          __ptext71 2DC8                            __ptext63 2BA6  
                          __ptext55 2DC2                            __ptext47 18A6  
                          __ptext39 255E                            __ptext64 1358  
                          __ptext56 00DC                            __ptext48 17AE  
                          __ptext65 28BC                            __ptext57 2016  
                          __ptext49 21CE                            __ptext66 16A0  
                          __ptext58 1D82                            __ptext67 26B8  
                          __ptext59 2D6E                            __ptext68 29B4  
                          __ptext69 2D92          timer1_int_handler@motormsg 0010  
                    i1send_msg@data 000F              adc_int_handler@channel 003F  
                    i1send_msg@qmsg 0015                      i1send_msg@slot 0014  
                    i1send_msg@qptr 000B                      ??i1_uart_trans 0003  
                          _init_i2c 2726                 _init_timer1_lthread 2D26  
                     __size_of_main 02EE                       ??i2_check_msg 0082  
                 main@t1thread_data 0136                         ??_check_msg 0102  
                __end_of_init_queue 2470                __size_of_SleepIfOkay 006E  
                          _recv_msg 0F90    i2c_slave_int_handler@msg_to_send 00BD  
             ??_i2c_configure_slave 0100                            _send_msg 122C  
            adc_int_handler@voltage 003C                      init_queue@qptr 0100  
                     ??_Delay1KTCYx 0100               __size_ofi1_SetChanADC 0018  
                    ??i2_uart_trans 0082                            _stopCond 00DF  
                  uart_trans@length 0104                        ??_uart_trans 0102  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 0100  
          ??_uart_trans_int_handler 0001                   i2___awmod@divisor 0082  
                 i2___awmod@counter 0085                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2                        _UART_timeout 0064  
                    OpenUSART@spbrg 0100                            memcpy@d1 0100  
                          memcpy@s1 0102             timer0_int_handler@F5120 0060  
           timer0_int_handler@F5118 0054               __end_ofi2_in_high_int 2DA4  
                  i2send_msg@length 008C                            intlevel1 0000  
                          intlevel2 0000                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 0082                    ___lwmod@dividend 0100  
            ?_uart_recv_int_handler 0001                  __end_of_uart_trans 1D82  
                 SetChanADC@channel 0101               _block_on_To_msgqueues 22E8  
                     ?_handle_start 0001                    ??_timer0_lthread 0108  
       __size_of_ToMainHigh_recvmsg 0042                        i1_SetChanADC 2CE6  
           __end_of_adc_int_handler 0F90         __size_of_ToMainHigh_sendmsg 0036  
                        _OSCCONbits 000FD3                    ??_timer1_lthread 0122  
                     ??i2_motorMove 0088                         ??_motorMove 0009  
          ToMainHigh_sendmsg@length 0099                 __end_ofi2_check_msg 2C12  
             ??_init_timer1_lthread 0102              ??_InterruptHandlerHigh 00C2  
                 _ToMainLow_recvmsg 2A3E                   _ToMainLow_sendmsg 2C64  
                main@last_reg_recvd 0128                     ___lwmod@divisor 0102  
              __end_ofi2_in_low_int 29FA                  ?_ToMainLow_recvmsg 0118  
               __end_of_Delay1KTCYx 2D14                   ??_i2c_int_handler 00C2  
                   ___lwmod@counter 0105                  ?_ToMainLow_sendmsg 0017  
                 ??_i2c_master_send 0104                  i2c_master_send@msg 0101  
                    uart_trans@data 0100                         _SSPCON1bits 000FC6  
                       _SSPCON2bits 000FC5                      i2send_msg@data 008E  
             ??_InterruptHandlerLow 0043                 ??_ToMainLow_recvmsg 011C  
                    i2send_msg@qmsg 0094                      i2send_msg@slot 0093  
                    i2send_msg@qptr 008A                 ??_ToMainLow_sendmsg 001A  
     i2c_slave_int_handler@i2c_data 00BC                    _rightDistDesired 0069  
                    ??_handle_start 0080                i2motorMove@direction 0089  
                      _USART_Status 0066  
