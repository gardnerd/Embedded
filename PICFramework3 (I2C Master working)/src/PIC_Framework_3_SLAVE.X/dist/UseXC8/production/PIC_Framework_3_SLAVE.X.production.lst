

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Apr 07 17:32:38 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    95                           	psect	param0,global,class=BANK0,space=1,delta=1
    96  0000                     
    97                           	psect	idataCOMRAM
    98  002DDA                     __pidataCOMRAM:
    99                           	opt stack 0
   100                           
   101                           ;initializer for timer1_int_handler@F5122
   102  002DDA  04                 	db	4
   103  002DDB  00                 	db	0
   104  002DDC  00                 	db	0
   105  002DDD  00                 	db	0
   106  002DDE  00                 	db	0
   107  002DDF  00                 	db	0
   108                           
   109                           ;initializer for timer1_int_handler@F5124
   110  002DE0  C0                 	db	192
   111  002DE1  C0                 	db	192
   112                           
   113                           	psect	idataBANK0
   114  002D36                     __pidataBANK0:
   115                           	opt stack 0
   116                           
   117                           ;initializer for i2c_slave_int_handler@F5143
   118  002D36  03                 	db	3
   119  002D37  00                 	db	0
   120  002D38  00                 	db	0
   121  002D39  00                 	db	0
   122  002D3A  00                 	db	0
   123  002D3B  00                 	db	0
   124                           
   125                           ;initializer for i2c_slave_int_handler@F5145
   126  002D3C  04                 	db	4
   127  002D3D  00                 	db	0
   128  002D3E  00                 	db	0
   129  002D3F  00                 	db	0
   130  002D40  00                 	db	0
   131  002D41  00                 	db	0
   132                           
   133                           ;initializer for timer0_int_handler@F5118
   134  002D42  04                 	db	4
   135  002D43  00                 	db	0
   136  002D44  00                 	db	0
   137  002D45  00                 	db	0
   138  002D46  00                 	db	0
   139  002D47  00                 	db	0
   140                           
   141                           ;initializer for timer0_int_handler@F5120
   142  002D48  40                 	db	64
   143  002D49  40                 	db	64
   144                           
   145                           	psect	idataBANK1
   146  002DF6                     __pidataBANK1:
   147                           	opt stack 0
   148                           
   149                           ;initializer for main@F5223
   150  002DF6  01                 	db	1
   151  002DF7  02                 	db	2
   152  0000                     _ADCON0	set	4034
   153  0000                     _ADCON0bits	set	4034
   154  0000                     _ADCON1	set	4033
   155  0000                     _ADCON2	set	4032
   156  0000                     _ADRESH	set	4036
   157  0000                     _INTCON2bits	set	4081
   158  0000                     _INTCONbits	set	4082
   159  0000                     _IPR1bits	set	3999
   160  0000                     _LATA	set	3977
   161  0000                     _LATB	set	3978
   162  0000                     _LATBbits	set	3978
   163  0000                     _OSCCON	set	4051
   164  0000                     _OSCCONbits	set	4051
   165  0000                     _OSCTUNEbits	set	3995
   166  0000                     _PIE1bits	set	3997
   167  0000                     _PIR1bits	set	3998
   168  0000                     _PORTA	set	3968
   169  0000                     _PORTAbits	set	3968
   170  0000                     _RCONbits	set	4048
   171  0000                     _RCREG	set	4014
   172  0000                     _RCSTA	set	4011
   173  0000                     _RCSTAbits	set	4011
   174  0000                     _SPBRG	set	4015
   175  0000                     _SPBRGH	set	4016
   176  0000                     _SSPADD	set	4040
   177  0000                     _SSPBUF	set	4041
   178  0000                     _SSPCON1	set	4038
   179  0000                     _SSPCON1bits	set	4038
   180  0000                     _SSPCON2	set	4037
   181  0000                     _SSPCON2bits	set	4037
   182  0000                     _SSPSTAT	set	4039
   183  0000                     _SSPSTATbits	set	4039
   184  0000                     _T0CON	set	4053
   185  0000                     _T0CONbits	set	4053
   186  0000                     _T1CON	set	4045
   187  0000                     _T1CONbits	set	4045
   188  0000                     _TMR0H	set	4055
   189  0000                     _TMR0L	set	4054
   190  0000                     _TMR1H	set	4047
   191  0000                     _TMR1L	set	4046
   192  0000                     _TRISA	set	3986
   193  0000                     _TRISB	set	3987
   194  0000                     _TRISC	set	3988
   195  0000                     _TRISCbits	set	3988
   196  0000                     _TXREG	set	4013
   197  0000                     _TXSTA	set	4012
   198  0000                     _TXSTAbits	set	4012
   199                           
   200                           	psect	nvCOMRAM
   201  000060                     __pnvCOMRAM:
   202                           	opt stack 0
   203  000060                     _uc_ptr:
   204                           	opt stack 0
   205  000060                     	ds	2
   206                           
   207                           	psect	nvBANK1
   208  0001C5                     __pnvBANK1:
   209                           	opt stack 0
   210  0001C5                     _ic_ptr:
   211                           	opt stack 0
   212  0001C5                     	ds	2
   213                           
   214                           ; #config settings
   215  0000                     
   216                           	psect	cinit
   217  002252                     __pcinit:
   218                           	opt stack 0
   219  002252                     start_initialization:
   220                           	opt stack 0
   221  002252                     __initialization:
   222                           	opt stack 0
   223                           
   224                           ; Clear objects allocated to BANK2 (201 bytes)
   225  002252  EE02  F000         	lfsr	0,__pbssBANK2
   226  002256  0EC9               	movlw	201
   227  002258                     clear_0:
   228  002258  6AEE               	clrf	postinc0,c
   229  00225A  06E8               	decf	wreg,f,c
   230  00225C  E1FD               	bnz	clear_0
   231                           
   232                           ; Clear objects allocated to BANK1 (95 bytes)
   233  00225E  EE01  F066         	lfsr	0,__pbssBANK1
   234  002262  0E5F               	movlw	95
   235  002264                     clear_1:
   236  002264  6AEE               	clrf	postinc0,c
   237  002266  06E8               	decf	wreg,f,c
   238  002268  E1FD               	bnz	clear_1
   239                           
   240                           ; Clear objects allocated to BANK0 (12 bytes)
   241  00226A  EE00  F0E4         	lfsr	0,__pbssBANK0
   242  00226E  0E0C               	movlw	12
   243  002270                     clear_2:
   244  002270  6AEE               	clrf	postinc0,c
   245  002272  06E8               	decf	wreg,f,c
   246  002274  E1FD               	bnz	clear_2
   247                           
   248                           ; Clear objects allocated to COMRAM (4 bytes)
   249  002276  6A5F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   250  002278  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   251  00227A  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   252  00227C  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   253                           
   254                           ; Initialize objects allocated to BANK1 (2 bytes)
   255                           ; load TBLPTR registers with __pidataBANK1
   256  00227E  0EF6               	movlw	low __pidataBANK1
   257  002280  6EF6               	movwf	tblptrl,c
   258  002282  0E2D               	movlw	high __pidataBANK1
   259  002284  6EF7               	movwf	tblptrh,c
   260  002286  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   261  002288  6EF8               	movwf	tblptru,c
   262  00228A  0009               	tblrd		*+	;fetch initializer
   263  00228C  CFF5 F1C7          	movff	tablat,__pdataBANK1
   264  002290  0009               	tblrd		*+	;fetch initializer
   265  002292  CFF5 F1C8          	movff	tablat,__pdataBANK1+1
   266                           
   267                           ; Initialize objects allocated to BANK0 (20 bytes)
   268                           ; load TBLPTR registers with __pidataBANK0
   269  002296  0E36               	movlw	low __pidataBANK0
   270  002298  6EF6               	movwf	tblptrl,c
   271  00229A  0E2D               	movlw	high __pidataBANK0
   272  00229C  6EF7               	movwf	tblptrh,c
   273  00229E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   274  0022A0  6EF8               	movwf	tblptru,c
   275  0022A2  EE00  F0D0         	lfsr	0,__pdataBANK0
   276  0022A6  EE10 F014          	lfsr	1,20
   277  0022AA                     copy_data0:
   278  0022AA  0009               	tblrd		*+
   279  0022AC  CFF5 FFEE          	movff	tablat,postinc0
   280  0022B0  50E5               	movf	postdec1,w,c
   281  0022B2  50E1               	movf	fsr1l,w,c
   282  0022B4  E1FA               	bnz	copy_data0
   283                           
   284                           ; Initialize objects allocated to COMRAM (8 bytes)
   285                           ; load TBLPTR registers with __pidataCOMRAM
   286  0022B6  0EDA               	movlw	low __pidataCOMRAM
   287  0022B8  6EF6               	movwf	tblptrl,c
   288  0022BA  0E2D               	movlw	high __pidataCOMRAM
   289  0022BC  6EF7               	movwf	tblptrh,c
   290  0022BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   291  0022C0  6EF8               	movwf	tblptru,c
   292  0022C2  EE00  F054         	lfsr	0,__pdataCOMRAM
   293  0022C6  EE10 F008          	lfsr	1,8
   294  0022CA                     copy_data1:
   295  0022CA  0009               	tblrd		*+
   296  0022CC  CFF5 FFEE          	movff	tablat,postinc0
   297  0022D0  50E5               	movf	postdec1,w,c
   298  0022D2  50E1               	movf	fsr1l,w,c
   299  0022D4  E1FA               	bnz	copy_data1
   300  0022D6                     end_of_initialization:
   301                           	opt stack 0
   302  0022D6                     __end_of__initialization:
   303                           	opt stack 0
   304  0022D6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   305  0022D8  6EF8               	movwf	tblptru,c
   306  0022DA  0100               	movlb	0
   307  0022DC  EFAF  F004         	goto	_main	;jump to C main() function
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           postinc0	equ	0xFEE
   313                           wreg	equ	0xFE8
   314                           postdec1	equ	0xFE5
   315                           fsr1l	equ	0xFE1
   316                           
   317                           	psect	bssCOMRAM
   318  00005C                     __pbssCOMRAM:
   319                           	opt stack 0
   320  00005C                     _UART_timeout:
   321                           	opt stack 0
   322  00005C                     	ds	2
   323  00005E                     _USART_Status:
   324                           	opt stack 0
   325  00005E                     	ds	1
   326  00005F                     _distMoved:
   327                           	opt stack 0
   328  00005F                     	ds	1
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           postdec1	equ	0xFE5
   336                           fsr1l	equ	0xFE1
   337                           
   338                           	psect	dataCOMRAM
   339  000054                     __pdataCOMRAM:
   340                           	opt stack 0
   341  000054                     timer1_int_handler@F5122:
   342                           	opt stack 0
   343  000054                     	ds	6
   344  00005A                     timer1_int_handler@F5124:
   345                           	opt stack 0
   346  00005A                     	ds	2
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           postdec1	equ	0xFE5
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	bssBANK0
   357  0000E4                     __pbssBANK0:
   358                           	opt stack 0
   359  0000E4                     i2c_slave_int_handler@F5147:
   360                           	opt stack 0
   361  0000E4                     	ds	6
   362  0000EA                     _MQ_Main_Willing_to_block:
   363                           	opt stack 0
   364  0000EA                     	ds	1
   365  0000EB                     _leftDistDesired:
   366                           	opt stack 0
   367  0000EB                     	ds	1
   368  0000EC                     _leftEncoder:
   369                           	opt stack 0
   370  0000EC                     	ds	1
   371  0000ED                     _rightDistDesired:
   372                           	opt stack 0
   373  0000ED                     	ds	1
   374  0000EE                     _rightEncoder:
   375                           	opt stack 0
   376  0000EE                     	ds	1
   377  0000EF                     _stopCond:
   378                           	opt stack 0
   379  0000EF                     	ds	1
   380                           tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           tblptrl	equ	0xFF6
   383                           tablat	equ	0xFF5
   384                           postinc0	equ	0xFEE
   385                           wreg	equ	0xFE8
   386                           postdec1	equ	0xFE5
   387                           fsr1l	equ	0xFE1
   388                           
   389                           	psect	dataBANK0
   390  0000D0                     __pdataBANK0:
   391                           	opt stack 0
   392  0000D0                     i2c_slave_int_handler@F5143:
   393                           	opt stack 0
   394  0000D0                     	ds	6
   395  0000D6                     i2c_slave_int_handler@F5145:
   396                           	opt stack 0
   397  0000D6                     	ds	6
   398  0000DC                     timer0_int_handler@F5118:
   399                           	opt stack 0
   400  0000DC                     	ds	6
   401  0000E2                     timer0_int_handler@F5120:
   402                           	opt stack 0
   403  0000E2                     	ds	2
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           postdec1	equ	0xFE5
   411                           fsr1l	equ	0xFE1
   412                           
   413                           	psect	bssBANK1
   414  000166                     __pbssBANK1:
   415                           	opt stack 0
   416  000166                     _adcbuffer:
   417                           	opt stack 0
   418  000166                     	ds	28
   419  000182                     _ToMainLow_MQ:
   420                           	opt stack 0
   421  000182                     	ds	67
   422                           tblptru	equ	0xFF8
   423                           tblptrh	equ	0xFF7
   424                           tblptrl	equ	0xFF6
   425                           tablat	equ	0xFF5
   426                           postinc0	equ	0xFEE
   427                           wreg	equ	0xFE8
   428                           postdec1	equ	0xFE5
   429                           fsr1l	equ	0xFE1
   430                           
   431                           	psect	dataBANK1
   432  0001C7                     __pdataBANK1:
   433                           	opt stack 0
   434  0001C7                     main@F5223:
   435                           	opt stack 0
   436  0001C7                     	ds	2
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           postdec1	equ	0xFE5
   444                           fsr1l	equ	0xFE1
   445                           
   446                           	psect	bssBANK2
   447  000200                     __pbssBANK2:
   448                           	opt stack 0
   449  000200                     _FromMainHigh_MQ:
   450                           	opt stack 0
   451  000200                     	ds	67
   452  000243                     _FromMainLow_MQ:
   453                           	opt stack 0
   454  000243                     	ds	67
   455  000286                     _ToMainHigh_MQ:
   456                           	opt stack 0
   457  000286                     	ds	67
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           wreg	equ	0xFE8
   464                           postdec1	equ	0xFE5
   465                           fsr1l	equ	0xFE1
   466                           
   467                           	psect	cstackBANK1
   468  000100                     __pcstackBANK1:
   469                           	opt stack 0
   470  000100                     ??_SetChanADC:
   471  000100                     ?_in_high_int:
   472                           	opt stack 0
   473  000100                     ?___awmod:
   474                           	opt stack 0
   475  000100                     ?___lwmod:
   476                           	opt stack 0
   477  000100                     i2c_master_send@recvlength:
   478                           	opt stack 0
   479  000100                     i2c_configure_slave@addr:
   480                           	opt stack 0
   481  000100                     OpenADC@config2:
   482                           	opt stack 0
   483  000100                     OpenTimer0@config:
   484                           	opt stack 0
   485  000100                     OpenTimer1@config:
   486                           	opt stack 0
   487  000100                     Delay1KTCYx@unit:
   488                           	opt stack 0
   489  000100                     init_queue@qptr:
   490                           	opt stack 0
   491  000100                     check_msg@qptr:
   492                           	opt stack 0
   493  000100                     init_i2c@ic:
   494                           	opt stack 0
   495  000100                     init_uart_recv@uc:
   496                           	opt stack 0
   497  000100                     uart_trans@data:
   498                           	opt stack 0
   499  000100                     timer0_lthread@tptr:
   500                           	opt stack 0
   501  000100                     init_timer1_lthread@tptr:
   502                           	opt stack 0
   503  000100                     OpenUSART@spbrg:
   504                           	opt stack 0
   505  000100                     ___awmod@dividend:
   506                           	opt stack 0
   507  000100                     ___lwmod@dividend:
   508                           	opt stack 0
   509  000100                     memcpy@d1:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x0
   513  000100                     	ds	1
   514  000101                     OpenADC@portconfig:
   515                           	opt stack 0
   516  000101                     SetChanADC@channel:
   517                           	opt stack 0
   518  000101                     i2c_master_send@msg:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x1
   522  000101                     	ds	1
   523  000102                     ??_OpenUSART:
   524  000102                     ??_OpenADC:
   525  000102                     ??_uart_trans:
   526  000102                     ??_init_queue:
   527  000102                     ??_check_msg:
   528  000102                     ?_in_low_int:
   529                           	opt stack 0
   530  000102                     timer0_lthread@msgtype:
   531                           	opt stack 0
   532  000102                     ___awmod@divisor:
   533                           	opt stack 0
   534  000102                     ___lwmod@divisor:
   535                           	opt stack 0
   536  000102                     memcpy@s1:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x2
   540  000102                     	ds	1
   541  000103                     init_queue@i:
   542                           	opt stack 0
   543  000103                     i2c_master_send@slave_addr:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x3
   547  000103                     	ds	1
   548  000104                     ??_init_queues:
   549  000104                     ??_i2c_master_send:
   550  000104                     ??___awmod:
   551  000104                     ??___lwmod:
   552  000104                     ?_in_main:
   553                           	opt stack 0
   554  000104                     uart_trans@length:
   555                           	opt stack 0
   556  000104                     OpenADC@config:
   557                           	opt stack 0
   558  000104                     timer0_lthread@length:
   559                           	opt stack 0
   560  000104                     memcpy@n:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x4
   564  000104                     	ds	1
   565  000105                     OpenUSART@config:
   566                           	opt stack 0
   567  000105                     ___awmod@counter:
   568                           	opt stack 0
   569  000105                     ___lwmod@counter:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x5
   573  000105                     	ds	1
   574  000106                     ??_block_on_To_msgqueues:
   575  000106                     i2c_master_send@sendlength:
   576                           	opt stack 0
   577  000106                     ___awmod@sign:
   578                           	opt stack 0
   579  000106                     timer0_lthread@msgbuffer:
   580                           	opt stack 0
   581  000106                     memcpy@d:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x6
   585  000106                     	ds	2
   586  000108                     timer0_lthread@msgval:
   587                           	opt stack 0
   588  000108                     memcpy@s:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x8
   592  000108                     	ds	2
   593  00010A                     send_msg@qptr:
   594                           	opt stack 0
   595  00010A                     recv_msg@qptr:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0xA
   599  00010A                     	ds	2
   600  00010C                     send_msg@length:
   601                           	opt stack 0
   602  00010C                     recv_msg@maxlength:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0xC
   606  00010C                     	ds	1
   607  00010D                     send_msg@msgtype:
   608                           	opt stack 0
   609  00010D                     recv_msg@msgtype:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0xD
   613  00010D                     	ds	1
   614  00010E                     send_msg@data:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0xE
   618  00010E                     	ds	1
   619  00010F                     recv_msg@data:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0xF
   623  00010F                     	ds	1
   624  000110                     ??_send_msg:
   625                           
   626                           ; 0 bytes @ 0x10
   627  000110                     	ds	1
   628  000111                     ??_recv_msg:
   629  000111                     send_msg@tlength:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x11
   633  000111                     	ds	2
   634  000113                     send_msg@slot:
   635                           	opt stack 0
   636  000113                     recv_msg@slot:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x13
   640  000113                     	ds	1
   641  000114                     send_msg@qmsg:
   642                           	opt stack 0
   643  000114                     recv_msg@tlength:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x14
   647  000114                     	ds	2
   648  000116                     FromMainHigh_sendmsg@msgtype:
   649                           	opt stack 0
   650  000116                     recv_msg@qmsg:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x16
   654  000116                     	ds	1
   655  000117                     FromMainHigh_sendmsg@data:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x17
   659  000117                     	ds	1
   660  000118                     ToMainLow_recvmsg@msgtype:
   661                           	opt stack 0
   662  000118                     ToMainHigh_recvmsg@msgtype:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x18
   666  000118                     	ds	1
   667  000119                     FromMainHigh_sendmsg@length:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x19
   671  000119                     	ds	1
   672  00011A                     ToMainLow_recvmsg@data:
   673                           	opt stack 0
   674  00011A                     ToMainHigh_recvmsg@data:
   675                           	opt stack 0
   676  00011A                     timer1_lthread@tptr:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x1A
   680  00011A                     	ds	2
   681  00011C                     ToMainLow_recvmsg@maxlength:
   682                           	opt stack 0
   683  00011C                     ToMainHigh_recvmsg@maxlength:
   684                           	opt stack 0
   685  00011C                     timer1_lthread@msgtype:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x1C
   689  00011C                     	ds	2
   690  00011E                     timer1_lthread@length:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x1E
   694  00011E                     	ds	2
   695  000120                     timer1_lthread@msgbuffer:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x20
   699  000120                     	ds	2
   700  000122                     ??_timer1_lthread:
   701                           
   702                           ; 0 bytes @ 0x22
   703  000122                     	ds	1
   704  000123                     timer1_lthread@retval:
   705                           	opt stack 0
   706                           
   707                           ; 1 bytes @ 0x23
   708  000123                     	ds	1
   709  000124                     ??_main:
   710                           
   711                           ; 0 bytes @ 0x24
   712  000124                     	ds	2
   713  000126                     main@msg:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x26
   717  000126                     	ds	2
   718  000128                     main@last_reg_recvd:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x28
   722  000128                     	ds	1
   723  000129                     main@msgbuffer:
   724                           	opt stack 0
   725                           
   726                           ; 11 bytes @ 0x29
   727  000129                     	ds	11
   728  000134                     main@t0thread_data:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x34
   732  000134                     	ds	2
   733  000136                     main@t1thread_data:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x36
   737  000136                     	ds	2
   738  000138                     main@msgtype:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x38
   742  000138                     	ds	1
   743  000139                     main@length:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0x39
   747  000139                     	ds	1
   748  00013A                     main@uc:
   749                           	opt stack 0
   750                           
   751                           ; 15 bytes @ 0x3A
   752  00013A                     	ds	15
   753  000149                     main@ic:
   754                           	opt stack 0
   755                           
   756                           ; 29 bytes @ 0x49
   757  000149                     	ds	29
   758                           tblptru	equ	0xFF8
   759                           tblptrh	equ	0xFF7
   760                           tblptrl	equ	0xFF6
   761                           tablat	equ	0xFF5
   762                           postinc0	equ	0xFEE
   763                           wreg	equ	0xFE8
   764                           postdec1	equ	0xFE5
   765                           fsr1l	equ	0xFE1
   766                           
   767                           	psect	cstackBANK0
   768  000080                     __pcstackBANK0:
   769                           	opt stack 0
   770  000080                     ?i2_in_high_int:
   771                           	opt stack 0
   772  000080                     ?i2___awmod:
   773                           	opt stack 0
   774  000080                     handle_start@data_read:
   775                           	opt stack 0
   776  000080                     start_i2c_slave_reply@msg:
   777                           	opt stack 0
   778  000080                     i2check_msg@qptr:
   779                           	opt stack 0
   780  000080                     i2uart_trans@data:
   781                           	opt stack 0
   782  000080                     i2WriteTimer0@timer0:
   783                           	opt stack 0
   784  000080                     i2WriteTimer1@timer1:
   785                           	opt stack 0
   786  000080                     i2memcpy@d1:
   787                           	opt stack 0
   788  000080                     i2___awmod@dividend:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x0
   792  000080                     	ds	2
   793  000082                     ??_start_i2c_slave_reply:
   794  000082                     ??i2_check_msg:
   795  000082                     ??i2_uart_trans:
   796  000082                     ?i2_in_low_int:
   797                           	opt stack 0
   798  000082                     i2WriteTimer0@timer:
   799                           	opt stack 0
   800  000082                     i2WriteTimer1@timer:
   801                           	opt stack 0
   802  000082                     i2memcpy@s1:
   803                           	opt stack 0
   804  000082                     i2___awmod@divisor:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x2
   808  000082                     	ds	2
   809  000084                     ??i2___awmod:
   810  000084                     start_i2c_slave_reply@length:
   811                           	opt stack 0
   812  000084                     i2uart_trans@length:
   813                           	opt stack 0
   814  000084                     i2memcpy@n:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x4
   818  000084                     	ds	1
   819  000085                     i2motorMove@right:
   820                           	opt stack 0
   821  000085                     i2___awmod@counter:
   822                           	opt stack 0
   823                           
   824                           ; 1 bytes @ 0x5
   825  000085                     	ds	1
   826  000086                     i2motorMove@leftDistance:
   827                           	opt stack 0
   828  000086                     i2___awmod@sign:
   829                           	opt stack 0
   830  000086                     i2memcpy@d:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x6
   834  000086                     	ds	1
   835  000087                     i2motorMove@rightDistance:
   836                           	opt stack 0
   837                           
   838                           ; 1 bytes @ 0x7
   839  000087                     	ds	1
   840  000088                     ??i2_motorMove:
   841  000088                     i2memcpy@s:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x8
   845  000088                     	ds	1
   846  000089                     i2motorMove@direction:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x9
   850  000089                     	ds	1
   851  00008A                     i2send_msg@qptr:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0xA
   855  00008A                     	ds	1
   856  00008B                     i2motorMove@left:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0xB
   860  00008B                     	ds	1
   861  00008C                     ??_timer0_int_handler:
   862  00008C                     i2send_msg@length:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0xC
   866  00008C                     	ds	1
   867  00008D                     i2send_msg@msgtype:
   868                           	opt stack 0
   869  00008D                     timer0_int_handler@motorcomm:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0xD
   873  00008D                     	ds	1
   874  00008E                     i2send_msg@data:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0xE
   878  00008E                     	ds	1
   879  00008F                     timer0_int_handler@motormsg:
   880                           	opt stack 0
   881                           
   882                           ; 6 bytes @ 0xF
   883  00008F                     	ds	1
   884  000090                     ??i2_send_msg:
   885                           
   886                           ; 0 bytes @ 0x10
   887  000090                     	ds	1
   888  000091                     i2send_msg@tlength:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x11
   892  000091                     	ds	2
   893  000093                     i2send_msg@slot:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0x13
   897  000093                     	ds	1
   898  000094                     i2send_msg@qmsg:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x14
   902  000094                     	ds	2
   903  000096                     ToMainHigh_sendmsg@msgtype:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x16
   907  000096                     	ds	1
   908  000097                     ToMainHigh_sendmsg@data:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x17
   912  000097                     	ds	2
   913  000099                     ToMainHigh_sendmsg@length:
   914                           	opt stack 0
   915                           
   916                           ; 1 bytes @ 0x19
   917  000099                     	ds	1
   918  00009A                     ??_i2c_slave_int_handler:
   919                           
   920                           ; 0 bytes @ 0x1A
   921  00009A                     	ds	2
   922  00009C                     i2c_slave_int_handler@ack:
   923                           	opt stack 0
   924                           
   925                           ; 6 bytes @ 0x1C
   926  00009C                     	ds	6
   927  0000A2                     i2c_slave_int_handler@ack_1696:
   928                           	opt stack 0
   929                           
   930                           ; 6 bytes @ 0x22
   931  0000A2                     	ds	6
   932  0000A8                     i2c_slave_int_handler@dist:
   933                           	opt stack 0
   934                           
   935                           ; 6 bytes @ 0x28
   936  0000A8                     	ds	6
   937  0000AE                     i2c_slave_int_handler@messageType:
   938                           	opt stack 0
   939                           
   940                           ; 1 bytes @ 0x2E
   941  0000AE                     	ds	1
   942  0000AF                     i2c_slave_int_handler@bitmask:
   943                           	opt stack 0
   944                           
   945                           ; 1 bytes @ 0x2F
   946  0000AF                     	ds	1
   947  0000B0                     i2c_slave_int_handler@checksum:
   948                           	opt stack 0
   949                           
   950                           ; 1 bytes @ 0x30
   951  0000B0                     	ds	1
   952  0000B1                     i2c_slave_int_handler@error_buf:
   953                           	opt stack 0
   954                           
   955                           ; 3 bytes @ 0x31
   956  0000B1                     	ds	3
   957  0000B4                     i2c_slave_int_handler@data_written:
   958                           	opt stack 0
   959                           
   960                           ; 1 bytes @ 0x34
   961  0000B4                     	ds	1
   962  0000B5                     i2c_slave_int_handler@overrun_error:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x35
   966  0000B5                     	ds	1
   967  0000B6                     i2c_slave_int_handler@message:
   968                           	opt stack 0
   969                           
   970                           ; 6 bytes @ 0x36
   971  0000B6                     	ds	6
   972  0000BC                     i2c_slave_int_handler@i2c_data:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0x3C
   976  0000BC                     	ds	1
   977  0000BD                     i2c_slave_int_handler@msg_to_send:
   978                           	opt stack 0
   979                           
   980                           ; 1 bytes @ 0x3D
   981  0000BD                     	ds	1
   982  0000BE                     i2c_slave_int_handler@msg_ready:
   983                           	opt stack 0
   984                           
   985                           ; 1 bytes @ 0x3E
   986  0000BE                     	ds	1
   987  0000BF                     i2c_slave_int_handler@length:
   988                           	opt stack 0
   989                           
   990                           ; 2 bytes @ 0x3F
   991  0000BF                     	ds	2
   992  0000C1                     i2c_slave_int_handler@data_read:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x41
   996  0000C1                     	ds	1
   997  0000C2                     ??_InterruptHandlerHigh:
   998                           
   999                           ; 0 bytes @ 0x42
  1000  0000C2                     	ds	14
  1001                           tblptru	equ	0xFF8
  1002                           tblptrh	equ	0xFF7
  1003                           tblptrl	equ	0xFF6
  1004                           tablat	equ	0xFF5
  1005                           postinc0	equ	0xFEE
  1006                           wreg	equ	0xFE8
  1007                           postdec1	equ	0xFE5
  1008                           fsr1l	equ	0xFE1
  1009                           
  1010                           	psect	cstackCOMRAM
  1011  000001                     __pcstackCOMRAM:
  1012                           	opt stack 0
  1013  000001                     ??_uart_trans_int_handler:
  1014  000001                     ??i1_SetChanADC:
  1015  000001                     ?i1___awmod:
  1016                           	opt stack 0
  1017  000001                     ?___ftpack:
  1018                           	opt stack 0
  1019  000001                     ReadUSART@data:
  1020                           	opt stack 0
  1021  000001                     WriteTimer0@timer0:
  1022                           	opt stack 0
  1023  000001                     WriteTimer1@timer1:
  1024                           	opt stack 0
  1025  000001                     i1uart_trans@data:
  1026                           	opt stack 0
  1027  000001                     i1memcpy@d1:
  1028                           	opt stack 0
  1029  000001                     i1___awmod@dividend:
  1030                           	opt stack 0
  1031  000001                     ___ftpack@arg:
  1032                           	opt stack 0
  1033  000001                     ___ftge@ff1:
  1034                           	opt stack 0
  1035                           
  1036                           ; 3 bytes @ 0x0
  1037  000001                     	ds	1
  1038  000002                     i1SetChanADC@channel:
  1039                           	opt stack 0
  1040                           
  1041                           ; 1 bytes @ 0x1
  1042  000002                     	ds	1
  1043  000003                     ??i1_uart_trans:
  1044  000003                     WriteTimer0@timer:
  1045                           	opt stack 0
  1046  000003                     WriteTimer1@timer:
  1047                           	opt stack 0
  1048  000003                     i1memcpy@s1:
  1049                           	opt stack 0
  1050  000003                     i1___awmod@divisor:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x2
  1054  000003                     	ds	1
  1055  000004                     ___ftpack@exp:
  1056                           	opt stack 0
  1057  000004                     ___ftge@ff2:
  1058                           	opt stack 0
  1059                           
  1060                           ; 3 bytes @ 0x3
  1061  000004                     	ds	1
  1062  000005                     ??i1___awmod:
  1063  000005                     ___ftpack@sign:
  1064                           	opt stack 0
  1065  000005                     i1uart_trans@length:
  1066                           	opt stack 0
  1067  000005                     i1memcpy@n:
  1068                           	opt stack 0
  1069                           
  1070                           ; 2 bytes @ 0x4
  1071  000005                     	ds	1
  1072  000006                     ??___ftpack:
  1073  000006                     motorMove@right:
  1074                           	opt stack 0
  1075  000006                     i1___awmod@counter:
  1076                           	opt stack 0
  1077                           
  1078                           ; 1 bytes @ 0x5
  1079  000006                     	ds	1
  1080  000007                     ??___ftge:
  1081  000007                     motorMove@leftDistance:
  1082                           	opt stack 0
  1083  000007                     i1___awmod@sign:
  1084                           	opt stack 0
  1085  000007                     i1memcpy@d:
  1086                           	opt stack 0
  1087                           
  1088                           ; 2 bytes @ 0x6
  1089  000007                     	ds	1
  1090  000008                     motorMove@rightDistance:
  1091                           	opt stack 0
  1092                           
  1093                           ; 1 bytes @ 0x7
  1094  000008                     	ds	1
  1095  000009                     ??_motorMove:
  1096  000009                     ?___awtoft:
  1097                           	opt stack 0
  1098  000009                     ?___fttol:
  1099                           	opt stack 0
  1100  000009                     ___awtoft@c:
  1101                           	opt stack 0
  1102  000009                     i1memcpy@s:
  1103                           	opt stack 0
  1104  000009                     ___fttol@f1:
  1105                           	opt stack 0
  1106                           
  1107                           ; 3 bytes @ 0x8
  1108  000009                     	ds	1
  1109  00000A                     motorMove@direction:
  1110                           	opt stack 0
  1111                           
  1112                           ; 2 bytes @ 0x9
  1113  00000A                     	ds	1
  1114  00000B                     i1send_msg@qptr:
  1115                           	opt stack 0
  1116                           
  1117                           ; 2 bytes @ 0xA
  1118  00000B                     	ds	1
  1119  00000C                     ??___awtoft:
  1120  00000C                     motorMove@left:
  1121                           	opt stack 0
  1122                           
  1123                           ; 1 bytes @ 0xB
  1124  00000C                     	ds	1
  1125  00000D                     ??_timer1_int_handler:
  1126  00000D                     ??___fttol:
  1127  00000D                     ___awtoft@sign:
  1128                           	opt stack 0
  1129  00000D                     i1send_msg@length:
  1130                           	opt stack 0
  1131                           
  1132                           ; 1 bytes @ 0xC
  1133  00000D                     	ds	1
  1134  00000E                     ?___ftmul:
  1135                           	opt stack 0
  1136  00000E                     i1send_msg@msgtype:
  1137                           	opt stack 0
  1138  00000E                     timer1_int_handler@motorcomm:
  1139                           	opt stack 0
  1140  00000E                     ___ftmul@f1:
  1141                           	opt stack 0
  1142                           
  1143                           ; 3 bytes @ 0xD
  1144  00000E                     	ds	1
  1145  00000F                     i1send_msg@data:
  1146                           	opt stack 0
  1147                           
  1148                           ; 2 bytes @ 0xE
  1149  00000F                     	ds	1
  1150  000010                     timer1_int_handler@motormsg:
  1151                           	opt stack 0
  1152                           
  1153                           ; 6 bytes @ 0xF
  1154  000010                     	ds	1
  1155  000011                     ??i1_send_msg:
  1156  000011                     ___ftmul@f2:
  1157                           	opt stack 0
  1158                           
  1159                           ; 3 bytes @ 0x10
  1160  000011                     	ds	1
  1161  000012                     ___fttol@sign1:
  1162                           	opt stack 0
  1163  000012                     i1send_msg@tlength:
  1164                           	opt stack 0
  1165                           
  1166                           ; 2 bytes @ 0x11
  1167  000012                     	ds	1
  1168  000013                     ___fttol@lval:
  1169                           	opt stack 0
  1170                           
  1171                           ; 4 bytes @ 0x12
  1172  000013                     	ds	1
  1173  000014                     ??___ftmul:
  1174  000014                     i1send_msg@slot:
  1175                           	opt stack 0
  1176                           
  1177                           ; 1 bytes @ 0x13
  1178  000014                     	ds	1
  1179  000015                     i1send_msg@qmsg:
  1180                           	opt stack 0
  1181                           
  1182                           ; 2 bytes @ 0x14
  1183  000015                     	ds	2
  1184  000017                     ToMainLow_sendmsg@msgtype:
  1185                           	opt stack 0
  1186  000017                     ___ftmul@exp:
  1187                           	opt stack 0
  1188  000017                     ___fttol@exp1:
  1189                           	opt stack 0
  1190                           
  1191                           ; 1 bytes @ 0x16
  1192  000017                     	ds	1
  1193  000018                     ?___ftadd:
  1194                           	opt stack 0
  1195  000018                     ToMainLow_sendmsg@data:
  1196                           	opt stack 0
  1197  000018                     ___ftadd@f1:
  1198                           	opt stack 0
  1199  000018                     ___ftmul@f3_as_product:
  1200                           	opt stack 0
  1201                           
  1202                           ; 3 bytes @ 0x17
  1203  000018                     	ds	2
  1204  00001A                     ToMainLow_sendmsg@length:
  1205                           	opt stack 0
  1206                           
  1207                           ; 1 bytes @ 0x19
  1208  00001A                     	ds	1
  1209  00001B                     ??_uart_recv_int_handler:
  1210  00001B                     ___ftmul@cntr:
  1211                           	opt stack 0
  1212  00001B                     ___ftadd@f2:
  1213                           	opt stack 0
  1214                           
  1215                           ; 3 bytes @ 0x1A
  1216  00001B                     	ds	1
  1217  00001C                     ___ftmul@sign:
  1218                           	opt stack 0
  1219                           
  1220                           ; 1 bytes @ 0x1B
  1221  00001C                     	ds	2
  1222  00001E                     ??___ftadd:
  1223                           
  1224                           ; 0 bytes @ 0x1D
  1225  00001E                     	ds	3
  1226  000021                     ___ftadd@sign:
  1227                           	opt stack 0
  1228                           
  1229                           ; 1 bytes @ 0x20
  1230  000021                     	ds	1
  1231  000022                     ___ftadd@exp2:
  1232                           	opt stack 0
  1233                           
  1234                           ; 1 bytes @ 0x21
  1235  000022                     	ds	1
  1236  000023                     ___ftadd@exp1:
  1237                           	opt stack 0
  1238                           
  1239                           ; 1 bytes @ 0x22
  1240  000023                     	ds	1
  1241  000024                     ?___ftdiv:
  1242                           	opt stack 0
  1243  000024                     ___ftdiv@f1:
  1244                           	opt stack 0
  1245                           
  1246                           ; 3 bytes @ 0x23
  1247  000024                     	ds	3
  1248  000027                     ___ftdiv@f2:
  1249                           	opt stack 0
  1250                           
  1251                           ; 3 bytes @ 0x26
  1252  000027                     	ds	3
  1253  00002A                     ??___ftdiv:
  1254                           
  1255                           ; 0 bytes @ 0x29
  1256  00002A                     	ds	3
  1257  00002D                     ___ftdiv@cntr:
  1258                           	opt stack 0
  1259                           
  1260                           ; 1 bytes @ 0x2C
  1261  00002D                     	ds	1
  1262  00002E                     ___ftdiv@f3:
  1263                           	opt stack 0
  1264                           
  1265                           ; 3 bytes @ 0x2D
  1266  00002E                     	ds	3
  1267  000031                     ___ftdiv@exp:
  1268                           	opt stack 0
  1269                           
  1270                           ; 1 bytes @ 0x30
  1271  000031                     	ds	1
  1272  000032                     ___ftdiv@sign:
  1273                           	opt stack 0
  1274                           
  1275                           ; 1 bytes @ 0x31
  1276  000032                     	ds	1
  1277  000033                     ??_adc_int_handler:
  1278                           
  1279                           ; 0 bytes @ 0x32
  1280  000033                     	ds	4
  1281  000037                     adc_int_handler@dist:
  1282                           	opt stack 0
  1283                           
  1284                           ; 3 bytes @ 0x36
  1285  000037                     	ds	3
  1286  00003A                     adc_int_handler@k:
  1287                           	opt stack 0
  1288                           
  1289                           ; 2 bytes @ 0x39
  1290  00003A                     	ds	2
  1291  00003C                     adc_int_handler@voltage:
  1292                           	opt stack 0
  1293                           
  1294                           ; 3 bytes @ 0x3B
  1295  00003C                     	ds	3
  1296  00003F                     adc_int_handler@channel:
  1297                           	opt stack 0
  1298                           
  1299                           ; 2 bytes @ 0x3E
  1300  00003F                     	ds	2
  1301  000041                     adc_int_handler@roundDist:
  1302                           	opt stack 0
  1303                           
  1304                           ; 2 bytes @ 0x40
  1305  000041                     	ds	2
  1306  000043                     ??_InterruptHandlerLow:
  1307                           
  1308                           ; 0 bytes @ 0x42
  1309  000043                     	ds	17
  1310                           tblptru	equ	0xFF8
  1311                           tblptrh	equ	0xFF7
  1312                           tblptrl	equ	0xFF6
  1313                           tablat	equ	0xFF5
  1314                           postinc0	equ	0xFEE
  1315                           wreg	equ	0xFE8
  1316                           postdec1	equ	0xFE5
  1317                           fsr1l	equ	0xFE1
  1318                           
  1319 ;;
  1320 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1321 ;;
  1322 ;; *************** function _main *****************
  1323 ;; Defined at:
  1324 ;;		line 186 in file "../src/main.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  ic             29   73[BANK1 ] struct __i2c_comm
  1329 ;;  uc             15   58[BANK1 ] struct __uart_comm
  1330 ;;  msgbuffer      11   41[BANK1 ] unsigned char [11]
  1331 ;;  t1thread_dat    2   54[BANK1 ] struct __timer1_thread_s
  1332 ;;  t0thread_dat    2   52[BANK1 ] struct __timer0_thread_s
  1333 ;;  msg             2   38[BANK1 ] unsigned char [2]
  1334 ;;  uthread_data    2    0        struct __uart_thread_str
  1335 ;;  length          1   57[BANK1 ] char 
  1336 ;;  msgtype         1   56[BANK1 ] unsigned char 
  1337 ;;  last_reg_rec    1   40[BANK1 ] unsigned char 
  1338 ;;  i               1    0        unsigned char 
  1339 ;;  c               1    0        unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;		None               void
  1342 ;; Registers used:
  1343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1349 ;;      Params:         0       0       0       0       0
  1350 ;;      Locals:         0       0      64       0       0
  1351 ;;      Temps:          0       0       2       0       0
  1352 ;;      Totals:         0       0      66       0       0
  1353 ;;Total ram usage:       66 bytes
  1354 ;; Hardware stack levels required when called:   15
  1355 ;; This function calls:
  1356 ;;		_OpenADC
  1357 ;;		_OpenTimer0
  1358 ;;		_OpenTimer1
  1359 ;;		_OpenUSART
  1360 ;;		_SetChanADC
  1361 ;;		_ToMainHigh_recvmsg
  1362 ;;		_ToMainLow_recvmsg
  1363 ;;		_block_on_To_msgqueues
  1364 ;;		_enable_interrupts
  1365 ;;		_i2c_configure_slave
  1366 ;;		_i2c_master_send
  1367 ;;		_init_i2c
  1368 ;;		_init_queues
  1369 ;;		_init_timer1_lthread
  1370 ;;		_init_uart_recv
  1371 ;;		_timer0_lthread
  1372 ;;		_timer1_lthread
  1373 ;;		_uart_trans
  1374 ;; This function is called by:
  1375 ;;		Startup code after reset
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text0
  1380  00095E                     __ptext0:
  1381                           	opt stack 0
  1382  00095E                     _main:
  1383                           	opt stack 16
  1384                           
  1385                           ;main.c: 187: char c;
  1386                           ;main.c: 188: signed char length;
  1387                           ;main.c: 189: unsigned char msgtype;
  1388                           ;main.c: 190: unsigned char last_reg_recvd;
  1389                           ;main.c: 191: uart_comm uc;
  1390                           ;main.c: 192: i2c_comm ic;
  1391                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1392                           ;main.c: 194: unsigned char i;
  1393                           ;main.c: 195: uart_thread_struct uthread_data;
  1394                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1395                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1396                           ;main.c: 205: OSCCON = 0x82;
  1397                           
  1398                           ;incstack = 0
  1399  00095E  0E82               	movlw	130
  1400  000960  6ED3               	movwf	4051,c	;volatile
  1401                           
  1402                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
  1403  000962  9C9B               	bcf	3995,6,c	;volatile
  1404                           
  1405                           ;main.c: 224: init_uart_recv(&uc);
  1406  000964  0101               	movlb	1	; () banked
  1407  000966  0E01               	movlw	high main@uc
  1408  000968  0101               	movlb	1	; () banked
  1409  00096A  0101               	movlb	1	; () banked
  1410  00096C  6F01               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1411  00096E  0101               	movlb	1	; () banked
  1412  000970  0E3A               	movlw	low main@uc
  1413  000972  0101               	movlb	1	; () banked
  1414  000974  0101               	movlb	1	; () banked
  1415  000976  6F00               	movwf	init_uart_recv@uc& (0+255),b
  1416  000978  EC66  F016         	call	_init_uart_recv	;wreg free
  1417                           
  1418                           ;main.c: 227: init_i2c(&ic);
  1419  00097C  0101               	movlb	1	; () banked
  1420  00097E  0E01               	movlw	high main@ic
  1421  000980  0101               	movlb	1	; () banked
  1422  000982  0101               	movlb	1	; () banked
  1423  000984  6F01               	movwf	(init_i2c@ic+1)& (0+255),b
  1424  000986  0101               	movlb	1	; () banked
  1425  000988  0E49               	movlw	low main@ic
  1426  00098A  0101               	movlb	1	; () banked
  1427  00098C  0101               	movlb	1	; () banked
  1428  00098E  6F00               	movwf	init_i2c@ic& (0+255),b
  1429  000990  ECA4  F013         	call	_init_i2c	;wreg free
  1430                           
  1431                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1432  000994  0101               	movlb	1	; () banked
  1433  000996  0E01               	movlw	high main@t1thread_data
  1434  000998  0101               	movlb	1	; () banked
  1435  00099A  0101               	movlb	1	; () banked
  1436  00099C  6F01               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1437  00099E  0101               	movlb	1	; () banked
  1438  0009A0  0E36               	movlw	low main@t1thread_data
  1439  0009A2  0101               	movlb	1	; () banked
  1440  0009A4  0101               	movlb	1	; () banked
  1441  0009A6  6F00               	movwf	init_timer1_lthread@tptr& (0+255),b
  1442  0009A8  ECAE  F016         	call	_init_timer1_lthread	;wreg free
  1443                           
  1444                           ;main.c: 233: init_queues();
  1445  0009AC  EC34  F013         	call	_init_queues	;wreg free
  1446                           
  1447                           ;main.c: 237: TRISB = 0xFF;
  1448  0009B0  6893               	setf	3987,c	;volatile
  1449                           
  1450                           ;main.c: 238: LATB = 0x0;
  1451  0009B2  0E00               	movlw	0
  1452  0009B4  6E8A               	movwf	3978,c	;volatile
  1453                           
  1454                           ;main.c: 240: PORTA = 0x0;
  1455  0009B6  0E00               	movlw	0
  1456  0009B8  6E80               	movwf	3968,c	;volatile
  1457                           
  1458                           ;main.c: 241: LATA = 0x0;
  1459  0009BA  0E00               	movlw	0
  1460  0009BC  6E89               	movwf	3977,c	;volatile
  1461                           
  1462                           ;main.c: 242: TRISA = 0x00;
  1463  0009BE  0E00               	movlw	0
  1464  0009C0  6E92               	movwf	3986,c	;volatile
  1465                           
  1466                           ;main.c: 257: OpenTimer0(0b11111111 & 0b11111111 & 0b11111111 & 0b11101111 & 0b11111111);
  1467  0009C2  0EEF               	movlw	239
  1468  0009C4  EC1A  F016         	call	_OpenTimer0
  1469                           
  1470                           ;main.c: 269: OpenTimer1(0b11111111 & 0b11111111 & 0b11001111 & 0b11111111 & 0b11110111 
      +                          & 0b11111111);
  1471  0009C8  0EC7               	movlw	199
  1472  0009CA  EC92  F015         	call	_OpenTimer1
  1473                           
  1474                           ;main.c: 270: TRISC = 0xFF;
  1475  0009CE  6894               	setf	3988,c	;volatile
  1476                           
  1477                           ;main.c: 278: IPR1bits.ADIP = 0;
  1478  0009D0  9C9F               	bcf	3999,6,c	;volatile
  1479                           
  1480                           ;main.c: 279: PIE1bits.ADIE = 1;
  1481  0009D2  8C9D               	bsf	3997,6,c	;volatile
  1482                           
  1483                           ;main.c: 281: IPR1bits.TMR1IP = 0;
  1484  0009D4  909F               	bcf	3999,0,c	;volatile
  1485                           
  1486                           ;main.c: 283: INTCON2bits.TMR0IP = 1;
  1487  0009D6  84F1               	bsf	intcon2,2,c	;volatile
  1488                           
  1489                           ;main.c: 285: IPR1bits.RCIP = 0;
  1490  0009D8  9A9F               	bcf	3999,5,c	;volatile
  1491                           
  1492                           ;main.c: 287: IPR1bits.TXIP = 0;
  1493  0009DA  989F               	bcf	3999,4,c	;volatile
  1494                           
  1495                           ;main.c: 289: IPR1bits.SSPIP = 1;
  1496  0009DC  869F               	bsf	3999,3,c	;volatile
  1497                           
  1498                           ;main.c: 306: i2c_configure_slave(0xBE);
  1499  0009DE  0EBE               	movlw	190
  1500  0009E0  EC2F  F016         	call	_i2c_configure_slave
  1501                           
  1502                           ;main.c: 325: PIE1bits.SSPIE = 1;
  1503  0009E4  869D               	bsf	3997,3,c	;volatile
  1504                           
  1505                           ;main.c: 336: OpenUSART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1506                           ;main.c: 337: 0b11111111 & 0b11111111, 38);
  1507  0009E6  0E00               	movlw	0
  1508  0009E8  0101               	movlb	1	; () banked
  1509  0009EA  0101               	movlb	1	; () banked
  1510  0009EC  6F01               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1511  0009EE  0E26               	movlw	38
  1512  0009F0  0101               	movlb	1	; () banked
  1513  0009F2  6F00               	movwf	OpenUSART@spbrg& (0+255),b
  1514  0009F4  0EFC               	movlw	252
  1515  0009F6  EC98  F010         	call	_OpenUSART
  1516                           
  1517                           ;main.c: 338: RCSTAbits.SPEN = 1;
  1518  0009FA  8EAB               	bsf	4011,7,c	;volatile
  1519                           
  1520                           ;main.c: 339: TRISC = 0xFF;
  1521  0009FC  6894               	setf	3988,c	;volatile
  1522                           
  1523                           ;main.c: 346: enable_interrupts();
  1524  0009FE  ECF1  F016         	call	_enable_interrupts	;wreg free
  1525                           
  1526                           ;main.c: 360: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1527                           ;main.c: 361: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1528                           ;main.c: 362: 0b1011);
  1529  000A02  0101               	movlb	1	; () banked
  1530  000A04  6F24               	movwf	??_main& (0+255),b
  1531  000A06  0E0C               	movlw	12
  1532  000A08  0101               	movlb	1	; () banked
  1533  000A0A  0101               	movlb	1	; () banked
  1534  000A0C  6F00               	movwf	OpenADC@config2& (0+255),b
  1535  000A0E  0101               	movlb	1	; () banked
  1536  000A10  5124               	movf	??_main& (0+255),w,b
  1537  000A12  0101               	movlb	1	; () banked
  1538  000A14  6F25               	movwf	(??_main+1)& (0+255),b
  1539  000A16  0E0B               	movlw	11
  1540  000A18  0101               	movlb	1	; () banked
  1541  000A1A  0101               	movlb	1	; () banked
  1542  000A1C  6F01               	movwf	OpenADC@portconfig& (0+255),b
  1543  000A1E  0101               	movlb	1	; () banked
  1544  000A20  5125               	movf	(??_main+1)& (0+255),w,b
  1545  000A22  0E53               	movlw	83
  1546  000A24  EC3D  F012         	call	_OpenADC
  1547                           
  1548                           ;main.c: 363: SetChanADC(0b10001111);
  1549  000A28  0E8F               	movlw	143
  1550  000A2A  EC56  F016         	call	_SetChanADC
  1551                           
  1552                           ;main.c: 374: unsigned char msg[2] = {0x01, 0x02};
  1553  000A2E  C1C7  F126         	movff	main@F5223,main@msg
  1554  000A32  C1C8  F127         	movff	main@F5223+1,main@msg+1
  1555  000A36                     l3452:
  1556                           
  1557                           ;main.c: 386: block_on_To_msgqueues();
  1558  000A36  ECB5  F011         	call	_block_on_To_msgqueues	;wreg free
  1559                           
  1560                           ;main.c: 393: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1561  000A3A  0101               	movlb	1	; () banked
  1562  000A3C  0E01               	movlw	high main@msgtype
  1563  000A3E  0101               	movlb	1	; () banked
  1564  000A40  0101               	movlb	1	; () banked
  1565  000A42  6F19               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1566  000A44  0101               	movlb	1	; () banked
  1567  000A46  0E38               	movlw	low main@msgtype
  1568  000A48  0101               	movlb	1	; () banked
  1569  000A4A  0101               	movlb	1	; () banked
  1570  000A4C  6F18               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1571  000A4E  0101               	movlb	1	; () banked
  1572  000A50  0E01               	movlw	high main@msgbuffer
  1573  000A52  0101               	movlb	1	; () banked
  1574  000A54  0101               	movlb	1	; () banked
  1575  000A56  6F1B               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1576  000A58  0101               	movlb	1	; () banked
  1577  000A5A  0E29               	movlw	low main@msgbuffer
  1578  000A5C  0101               	movlb	1	; () banked
  1579  000A5E  0101               	movlb	1	; () banked
  1580  000A60  6F1A               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1581  000A62  0E0A               	movlw	10
  1582  000A64  EC51  F015         	call	_ToMainHigh_recvmsg
  1583  000A68  0101               	movlb	1	; () banked
  1584  000A6A  0101               	movlb	1	; () banked
  1585  000A6C  6F39               	movwf	main@length& (0+255),b
  1586                           
  1587                           ; BSR set to: 1
  1588                           ;main.c: 394: if (length < 0) {
  1589  000A6E  0101               	movlb	1	; () banked
  1590  000A70  0101               	movlb	1	; () banked
  1591  000A72  BF39               	btfsc	main@length& (0+255),7,b
  1592  000A74  D04D               	goto	l3468
  1593  000A76  D03C               	goto	l3466
  1594  000A78                     l3460:
  1595                           
  1596                           ; BSR set to: 1
  1597                           ;main.c: 402: {
  1598                           ;main.c: 403: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1599  000A78  0101               	movlb	1	; () banked
  1600  000A7A  0E01               	movlw	high main@t0thread_data
  1601  000A7C  0101               	movlb	1	; () banked
  1602  000A7E  0101               	movlb	1	; () banked
  1603  000A80  6F01               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1604  000A82  0101               	movlb	1	; () banked
  1605  000A84  0E34               	movlw	low main@t0thread_data
  1606  000A86  0101               	movlb	1	; () banked
  1607  000A88  0101               	movlb	1	; () banked
  1608  000A8A  6F00               	movwf	timer0_lthread@tptr& (0+255),b
  1609  000A8C  0101               	movlb	1	; () banked
  1610  000A8E  0101               	movlb	1	; () banked
  1611  000A90  C138  F102         	movff	main@msgtype,timer0_lthread@msgtype
  1612  000A94  0101               	movlb	1	; () banked
  1613  000A96  0101               	movlb	1	; () banked
  1614  000A98  6B03               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1615  000A9A  0101               	movlb	1	; () banked
  1616  000A9C  0101               	movlb	1	; () banked
  1617  000A9E  5139               	movf	main@length& (0+255),w,b
  1618  000AA0  0101               	movlb	1	; () banked
  1619  000AA2  0101               	movlb	1	; () banked
  1620  000AA4  6F04               	movwf	timer0_lthread@length& (0+255),b
  1621  000AA6  0101               	movlb	1	; () banked
  1622  000AA8  6B05               	clrf	(timer0_lthread@length+1)& (0+255),b
  1623  000AAA  0101               	movlb	1	; () banked
  1624  000AAC  BF04               	btfsc	timer0_lthread@length& (0+255),7,b
  1625  000AAE  0705               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1626  000AB0  0101               	movlb	1	; () banked
  1627  000AB2  0E01               	movlw	high main@msgbuffer
  1628  000AB4  0101               	movlb	1	; () banked
  1629  000AB6  0101               	movlb	1	; () banked
  1630  000AB8  6F07               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1631  000ABA  0101               	movlb	1	; () banked
  1632  000ABC  0E29               	movlw	low main@msgbuffer
  1633  000ABE  0101               	movlb	1	; () banked
  1634  000AC0  0101               	movlb	1	; () banked
  1635  000AC2  6F06               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1636  000AC4  ECA5  F016         	call	_timer0_lthread	;wreg free
  1637                           
  1638                           ;main.c: 404: break;
  1639  000AC8  D023               	goto	l3468
  1640  000ACA                     l160:
  1641                           
  1642                           ;main.c: 407: case 41:
  1643                           ;main.c: 408: {
  1644                           ;main.c: 411: last_reg_recvd = msgbuffer[0];
  1645  000ACA  C129  F128         	movff	main@msgbuffer,main@last_reg_recvd
  1646                           
  1647                           ;main.c: 412: break;
  1648  000ACE  D020               	goto	l3468
  1649  000AD0                     l3462:
  1650                           
  1651                           ;main.c: 415: {
  1652                           ;main.c: 418: uart_trans(length, msgbuffer);
  1653  000AD0  0101               	movlb	1	; () banked
  1654  000AD2  0E01               	movlw	high main@msgbuffer
  1655  000AD4  0101               	movlb	1	; () banked
  1656  000AD6  0101               	movlb	1	; () banked
  1657  000AD8  6F01               	movwf	(uart_trans@data+1)& (0+255),b
  1658  000ADA  0101               	movlb	1	; () banked
  1659  000ADC  0E29               	movlw	low main@msgbuffer
  1660  000ADE  0101               	movlb	1	; () banked
  1661  000AE0  0101               	movlb	1	; () banked
  1662  000AE2  6F00               	movwf	uart_trans@data& (0+255),b
  1663  000AE4  0101               	movlb	1	; () banked
  1664  000AE6  0101               	movlb	1	; () banked
  1665  000AE8  5139               	movf	main@length& (0+255),w,b
  1666  000AEA  EC60  F00E         	call	_uart_trans
  1667                           
  1668                           ;main.c: 421: break;
  1669  000AEE  D010               	goto	l3468
  1670  000AF0                     l3466:
  1671  000AF0  0101               	movlb	1	; () banked
  1672  000AF2  0101               	movlb	1	; () banked
  1673  000AF4  5138               	movf	main@msgtype& (0+255),w,b
  1674                           
  1675                           ; Switch size 1, requested type "space"
  1676                           ; Number of cases is 5, Range of values is 10 to 46
  1677                           ; switch strategies available:
  1678                           ; Name         Instructions Cycles
  1679                           ; simple_byte           16     9 (average)
  1680                           ;	Chosen strategy is simple_byte
  1681  000AF6  0A0A               	xorlw	10	; case 10
  1682  000AF8  B4D8               	btfsc	status,2,c
  1683  000AFA  D7BE               	goto	l3460
  1684  000AFC  0A22               	xorlw	34	; case 40
  1685  000AFE  B4D8               	btfsc	status,2,c
  1686  000B00  D7E4               	goto	l160
  1687  000B02  0A01               	xorlw	1	; case 41
  1688  000B04  B4D8               	btfsc	status,2,c
  1689  000B06  D7E1               	goto	l160
  1690  000B08  0A04               	xorlw	4	; case 45
  1691  000B0A  B4D8               	btfsc	status,2,c
  1692  000B0C  D7E1               	goto	l3462
  1693  000B0E  0A03               	xorlw	3	; case 46
  1694  000B10                     l3468:
  1695                           
  1696                           ;main.c: 436: }
  1697                           ;main.c: 439: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1698  000B10  0101               	movlb	1	; () banked
  1699  000B12  0E01               	movlw	high main@msgtype
  1700  000B14  0101               	movlb	1	; () banked
  1701  000B16  0101               	movlb	1	; () banked
  1702  000B18  6F19               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1703  000B1A  0101               	movlb	1	; () banked
  1704  000B1C  0E38               	movlw	low main@msgtype
  1705  000B1E  0101               	movlb	1	; () banked
  1706  000B20  0101               	movlb	1	; () banked
  1707  000B22  6F18               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1708  000B24  0101               	movlb	1	; () banked
  1709  000B26  0E01               	movlw	high main@msgbuffer
  1710  000B28  0101               	movlb	1	; () banked
  1711  000B2A  0101               	movlb	1	; () banked
  1712  000B2C  6F1B               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1713  000B2E  0101               	movlb	1	; () banked
  1714  000B30  0E29               	movlw	low main@msgbuffer
  1715  000B32  0101               	movlb	1	; () banked
  1716  000B34  0101               	movlb	1	; () banked
  1717  000B36  6F1A               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1718  000B38  0E0A               	movlw	10
  1719  000B3A  EC30  F015         	call	_ToMainLow_recvmsg
  1720  000B3E  0101               	movlb	1	; () banked
  1721  000B40  0101               	movlb	1	; () banked
  1722  000B42  6F39               	movwf	main@length& (0+255),b
  1723                           
  1724                           ; BSR set to: 1
  1725                           ;main.c: 440: if (length < 0) {
  1726  000B44  0101               	movlb	1	; () banked
  1727  000B46  0101               	movlb	1	; () banked
  1728  000B48  BF39               	btfsc	main@length& (0+255),7,b
  1729  000B4A  D775               	goto	l3452
  1730  000B4C  D072               	goto	l3488
  1731  000B4E                     l3474:
  1732                           
  1733                           ; BSR set to: 1
  1734                           ;main.c: 448: {
  1735                           ;main.c: 449: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1736  000B4E  0101               	movlb	1	; () banked
  1737  000B50  0E01               	movlw	high main@t1thread_data
  1738  000B52  0101               	movlb	1	; () banked
  1739  000B54  0101               	movlb	1	; () banked
  1740  000B56  6F1B               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1741  000B58  0101               	movlb	1	; () banked
  1742  000B5A  0E36               	movlw	low main@t1thread_data
  1743  000B5C  0101               	movlb	1	; () banked
  1744  000B5E  0101               	movlb	1	; () banked
  1745  000B60  6F1A               	movwf	timer1_lthread@tptr& (0+255),b
  1746  000B62  0101               	movlb	1	; () banked
  1747  000B64  0101               	movlb	1	; () banked
  1748  000B66  C138  F11C         	movff	main@msgtype,timer1_lthread@msgtype
  1749  000B6A  0101               	movlb	1	; () banked
  1750  000B6C  0101               	movlb	1	; () banked
  1751  000B6E  6B1D               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1752  000B70  0101               	movlb	1	; () banked
  1753  000B72  0101               	movlb	1	; () banked
  1754  000B74  5139               	movf	main@length& (0+255),w,b
  1755  000B76  0101               	movlb	1	; () banked
  1756  000B78  0101               	movlb	1	; () banked
  1757  000B7A  6F1E               	movwf	timer1_lthread@length& (0+255),b
  1758  000B7C  0101               	movlb	1	; () banked
  1759  000B7E  6B1F               	clrf	(timer1_lthread@length+1)& (0+255),b
  1760  000B80  0101               	movlb	1	; () banked
  1761  000B82  BF1E               	btfsc	timer1_lthread@length& (0+255),7,b
  1762  000B84  071F               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1763  000B86  0101               	movlb	1	; () banked
  1764  000B88  0E01               	movlw	high main@msgbuffer
  1765  000B8A  0101               	movlb	1	; () banked
  1766  000B8C  0101               	movlb	1	; () banked
  1767  000B8E  6F21               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1768  000B90  0101               	movlb	1	; () banked
  1769  000B92  0E29               	movlw	low main@msgbuffer
  1770  000B94  0101               	movlb	1	; () banked
  1771  000B96  0101               	movlb	1	; () banked
  1772  000B98  6F20               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1773  000B9A  ECFB  F012         	call	_timer1_lthread	;wreg free
  1774                           
  1775                           ;main.c: 450: break;
  1776  000B9E  D74B               	goto	l3452
  1777  000BA0                     l3476:
  1778                           
  1779                           ;main.c: 453: case 31:
  1780                           ;main.c: 454: {
  1781                           ;main.c: 457: if(msgbuffer[0] == 0xBA){
  1782  000BA0  0101               	movlb	1	; () banked
  1783  000BA2  0101               	movlb	1	; () banked
  1784  000BA4  5129               	movf	main@msgbuffer& (0+255),w,b
  1785  000BA6  0ABA               	xorlw	186
  1786  000BA8  A4D8               	btfss	status,2,c
  1787  000BAA  D01E               	goto	l3480
  1788                           
  1789                           ; BSR set to: 1
  1790                           ;main.c: 459: i2c_master_send(5, 5, msgbuffer, 0xBE);
  1791  000BAC  0101               	movlb	1	; () banked
  1792  000BAE  6F24               	movwf	??_main& (0+255),b
  1793  000BB0  0E05               	movlw	5
  1794  000BB2  0101               	movlb	1	; () banked
  1795  000BB4  0101               	movlb	1	; () banked
  1796  000BB6  6F00               	movwf	i2c_master_send@recvlength& (0+255),b
  1797  000BB8  0101               	movlb	1	; () banked
  1798  000BBA  5124               	movf	??_main& (0+255),w,b
  1799  000BBC  0101               	movlb	1	; () banked
  1800  000BBE  0E01               	movlw	high main@msgbuffer
  1801  000BC0  0101               	movlb	1	; () banked
  1802  000BC2  0101               	movlb	1	; () banked
  1803  000BC4  6F02               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1804  000BC6  0101               	movlb	1	; () banked
  1805  000BC8  0E29               	movlw	low main@msgbuffer
  1806  000BCA  0101               	movlb	1	; () banked
  1807  000BCC  0101               	movlb	1	; () banked
  1808  000BCE  6F01               	movwf	i2c_master_send@msg& (0+255),b
  1809  000BD0  0101               	movlb	1	; () banked
  1810  000BD2  6F25               	movwf	(??_main+1)& (0+255),b
  1811  000BD4  0EBE               	movlw	190
  1812  000BD6  0101               	movlb	1	; () banked
  1813  000BD8  0101               	movlb	1	; () banked
  1814  000BDA  6F03               	movwf	i2c_master_send@slave_addr& (0+255),b
  1815  000BDC  0101               	movlb	1	; () banked
  1816  000BDE  5125               	movf	(??_main+1)& (0+255),w,b
  1817  000BE0  0E05               	movlw	5
  1818  000BE2  EC70  F008         	call	_i2c_master_send
  1819                           
  1820                           ;main.c: 460: } else if(msgbuffer[0] == 0xAA){
  1821  000BE6  D023               	goto	l3484
  1822  000BE8                     l3480:
  1823  000BE8  0101               	movlb	1	; () banked
  1824  000BEA  0101               	movlb	1	; () banked
  1825  000BEC  5129               	movf	main@msgbuffer& (0+255),w,b
  1826  000BEE  0AAA               	xorlw	170
  1827  000BF0  A4D8               	btfss	status,2,c
  1828  000BF2  D01D               	goto	l3484
  1829                           
  1830                           ; BSR set to: 1
  1831                           ;main.c: 462: i2c_master_send(1, 5, msgbuffer, 0x9E);
  1832  000BF4  0101               	movlb	1	; () banked
  1833  000BF6  6F24               	movwf	??_main& (0+255),b
  1834  000BF8  0E05               	movlw	5
  1835  000BFA  0101               	movlb	1	; () banked
  1836  000BFC  0101               	movlb	1	; () banked
  1837  000BFE  6F00               	movwf	i2c_master_send@recvlength& (0+255),b
  1838  000C00  0101               	movlb	1	; () banked
  1839  000C02  5124               	movf	??_main& (0+255),w,b
  1840  000C04  0101               	movlb	1	; () banked
  1841  000C06  0E01               	movlw	high main@msgbuffer
  1842  000C08  0101               	movlb	1	; () banked
  1843  000C0A  0101               	movlb	1	; () banked
  1844  000C0C  6F02               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1845  000C0E  0101               	movlb	1	; () banked
  1846  000C10  0E29               	movlw	low main@msgbuffer
  1847  000C12  0101               	movlb	1	; () banked
  1848  000C14  0101               	movlb	1	; () banked
  1849  000C16  6F01               	movwf	i2c_master_send@msg& (0+255),b
  1850  000C18  0101               	movlb	1	; () banked
  1851  000C1A  6F25               	movwf	(??_main+1)& (0+255),b
  1852  000C1C  0E9E               	movlw	158
  1853  000C1E  0101               	movlb	1	; () banked
  1854  000C20  0101               	movlb	1	; () banked
  1855  000C22  6F03               	movwf	i2c_master_send@slave_addr& (0+255),b
  1856  000C24  0101               	movlb	1	; () banked
  1857  000C26  5125               	movf	(??_main+1)& (0+255),w,b
  1858  000C28  0E01               	movlw	1
  1859  000C2A  EC70  F008         	call	_i2c_master_send
  1860  000C2E                     l3484:
  1861                           
  1862                           ;main.c: 463: }
  1863                           ;main.c: 465: LATBbits.LATB2 = 0;
  1864  000C2E  948A               	bcf	3978,2,c	;volatile
  1865                           
  1866                           ;main.c: 467: break;
  1867  000C30  D702               	goto	l3452
  1868  000C32                     l3488:
  1869  000C32  0101               	movlb	1	; () banked
  1870  000C34  0101               	movlb	1	; () banked
  1871  000C36  5138               	movf	main@msgtype& (0+255),w,b
  1872                           
  1873                           ; Switch size 1, requested type "space"
  1874                           ; Number of cases is 3, Range of values is 11 to 31
  1875                           ; switch strategies available:
  1876                           ; Name         Instructions Cycles
  1877                           ; simple_byte           10     6 (average)
  1878                           ;	Chosen strategy is simple_byte
  1879  000C38  0A0B               	xorlw	11	; case 11
  1880  000C3A  B4D8               	btfsc	status,2,c
  1881  000C3C  D788               	goto	l3474
  1882  000C3E  0A15               	xorlw	21	; case 30
  1883  000C40  B4D8               	btfsc	status,2,c
  1884  000C42  D7AE               	goto	l3476
  1885  000C44  0A01               	xorlw	1	; case 31
  1886  000C46  B4D8               	btfsc	status,2,c
  1887  000C48  D7AB               	goto	l3476
  1888  000C4A  D6F5               	goto	l3452
  1889  000C4C                     __end_of_main:
  1890                           	opt stack 0
  1891                           tblptru	equ	0xFF8
  1892                           tblptrh	equ	0xFF7
  1893                           tblptrl	equ	0xFF6
  1894                           tablat	equ	0xFF5
  1895                           intcon2	equ	0xFF1
  1896                           postinc0	equ	0xFEE
  1897                           wreg	equ	0xFE8
  1898                           postdec1	equ	0xFE5
  1899                           fsr1l	equ	0xFE1
  1900                           status	equ	0xFD8
  1901                           
  1902 ;; *************** function _uart_trans *****************
  1903 ;; Defined at:
  1904 ;;		line 61 in file "../src/my_uart.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  length          1    wreg     unsigned char 
  1907 ;;  data            2    0[BANK1 ] PTR unsigned char 
  1908 ;;		 -> motorMove@direction(2), main@msgbuffer(11), 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  length          1    4[BANK1 ] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;		None               void
  1913 ;; Registers used:
  1914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1920 ;;      Params:         0       0       2       0       0
  1921 ;;      Locals:         0       0       1       0       0
  1922 ;;      Temps:          0       0       2       0       0
  1923 ;;      Totals:         0       0       5       0       0
  1924 ;;Total ram usage:        5 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:   11
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text1
  1935  001CC0                     __ptext1:
  1936                           	opt stack 0
  1937  001CC0                     _uart_trans:
  1938                           	opt stack 19
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;incstack = 0
  1942                           ;uart_trans@length stored from wreg
  1943  001CC0  CFE8 F104          	movff	wreg,uart_trans@length
  1944                           
  1945                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1946  001CC4  EE20 F00D          	lfsr	2,13
  1947  001CC8  5060               	movf	_uc_ptr,w,c
  1948  001CCA  26D9               	addwf	fsr2l,f,c
  1949  001CCC  5061               	movf	_uc_ptr+1,w,c
  1950  001CCE  22DA               	addwfc	fsr2h,f,c
  1951  001CD0  0E00               	movlw	0
  1952  001CD2  6EDF               	movwf	indf2,c
  1953  001CD4  D035               	goto	l3660
  1954  001CD6                     l3656:
  1955                           
  1956                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1957  001CD6  EE20 F00D          	lfsr	2,13
  1958  001CDA  5060               	movf	_uc_ptr,w,c
  1959  001CDC  26D9               	addwf	fsr2l,f,c
  1960  001CDE  5061               	movf	_uc_ptr+1,w,c
  1961  001CE0  22DA               	addwfc	fsr2h,f,c
  1962  001CE2  50DF               	movf	indf2,w,c
  1963  001CE4  0101               	movlb	1	; () banked
  1964  001CE6  6F02               	movwf	??_uart_trans& (0+255),b
  1965  001CE8  0101               	movlb	1	; () banked
  1966  001CEA  5102               	movf	??_uart_trans& (0+255),w,b
  1967  001CEC  0D01               	mullw	1
  1968  001CEE  50F3               	movf	prodl,w,c
  1969  001CF0  0101               	movlb	1	; () banked
  1970  001CF2  0101               	movlb	1	; () banked
  1971  001CF4  2500               	addwf	uart_trans@data& (0+255),w,b
  1972  001CF6  6ED9               	movwf	fsr2l,c
  1973  001CF8  50F4               	movf	prodh,w,c
  1974  001CFA  0101               	movlb	1	; () banked
  1975  001CFC  0101               	movlb	1	; () banked
  1976  001CFE  2101               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1977  001D00  6EDA               	movwf	fsr2h,c
  1978  001D02  EE10 F00D          	lfsr	1,13
  1979  001D06  5060               	movf	_uc_ptr,w,c
  1980  001D08  26E1               	addwf	fsr1l,f,c
  1981  001D0A  5061               	movf	_uc_ptr+1,w,c
  1982  001D0C  22E2               	addwfc	fsr1h,f,c
  1983  001D0E  50E7               	movf	indf1,w,c
  1984  001D10  0101               	movlb	1	; () banked
  1985  001D12  6F03               	movwf	(??_uart_trans+1)& (0+255),b
  1986  001D14  0101               	movlb	1	; () banked
  1987  001D16  5103               	movf	(??_uart_trans+1)& (0+255),w,b
  1988  001D18  0D01               	mullw	1
  1989  001D1A  0E07               	movlw	7
  1990  001D1C  26F3               	addwf	prodl,f,c
  1991  001D1E  0E00               	movlw	0
  1992  001D20  22F4               	addwfc	prodh,f,c
  1993  001D22  50F3               	movf	prodl,w,c
  1994  001D24  2460               	addwf	_uc_ptr,w,c
  1995  001D26  6EE1               	movwf	fsr1l,c
  1996  001D28  50F4               	movf	prodh,w,c
  1997  001D2A  2061               	addwfc	_uc_ptr+1,w,c
  1998  001D2C  6EE2               	movwf	fsr1h,c
  1999  001D2E  CFDF FFE7          	movff	indf2,indf1
  2000                           
  2001                           ; BSR set to: 1
  2002  001D32  EE20 F00D          	lfsr	2,13
  2003  001D36  5060               	movf	_uc_ptr,w,c
  2004  001D38  26D9               	addwf	fsr2l,f,c
  2005  001D3A  5061               	movf	_uc_ptr+1,w,c
  2006  001D3C  22DA               	addwfc	fsr2h,f,c
  2007  001D3E  2ADF               	incf	indf2,f,c
  2008  001D40                     l3660:
  2009  001D40  EE20 F00D          	lfsr	2,13
  2010  001D44  5060               	movf	_uc_ptr,w,c
  2011  001D46  26D9               	addwf	fsr2l,f,c
  2012  001D48  5061               	movf	_uc_ptr+1,w,c
  2013  001D4A  22DA               	addwfc	fsr2h,f,c
  2014  001D4C  50DF               	movf	indf2,w,c
  2015  001D4E  0101               	movlb	1	; () banked
  2016  001D50  6F02               	movwf	??_uart_trans& (0+255),b
  2017  001D52  0101               	movlb	1	; () banked
  2018  001D54  0101               	movlb	1	; () banked
  2019  001D56  5104               	movf	uart_trans@length& (0+255),w,b
  2020  001D58  0101               	movlb	1	; () banked
  2021  001D5A  5D02               	subwf	??_uart_trans& (0+255),w,b
  2022  001D5C  A0D8               	btfss	status,0,c
  2023  001D5E  D7BB               	goto	l3656
  2024                           
  2025                           ; BSR set to: 1
  2026                           ;my_uart.c: 67: }
  2027                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  2028                           
  2029                           ; BSR set to: 1
  2030  001D60  EE20 F00E          	lfsr	2,14
  2031  001D64  5060               	movf	_uc_ptr,w,c
  2032  001D66  26D9               	addwf	fsr2l,f,c
  2033  001D68  5061               	movf	_uc_ptr+1,w,c
  2034  001D6A  22DA               	addwfc	fsr2h,f,c
  2035  001D6C  0E00               	movlw	0
  2036  001D6E  6EDF               	movwf	indf2,c
  2037                           
  2038                           ; BSR set to: 1
  2039                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  2040  001D70  889D               	bsf	3997,4,c	;volatile
  2041                           
  2042                           ; BSR set to: 1
  2043  001D72  0012               	return	
  2044  001D74                     __end_of_uart_trans:
  2045                           	opt stack 0
  2046                           tblptru	equ	0xFF8
  2047                           tblptrh	equ	0xFF7
  2048                           tblptrl	equ	0xFF6
  2049                           tablat	equ	0xFF5
  2050                           prodh	equ	0xFF4
  2051                           prodl	equ	0xFF3
  2052                           intcon2	equ	0xFF1
  2053                           postinc0	equ	0xFEE
  2054                           wreg	equ	0xFE8
  2055                           indf1	equ	0xFE7
  2056                           postdec1	equ	0xFE5
  2057                           fsr1h	equ	0xFE2
  2058                           fsr1l	equ	0xFE1
  2059                           indf2	equ	0xFDF
  2060                           fsr2h	equ	0xFDA
  2061                           fsr2l	equ	0xFD9
  2062                           status	equ	0xFD8
  2063                           
  2064 ;; *************** function _timer1_lthread *****************
  2065 ;; Defined at:
  2066 ;;		line 14 in file "../src/timer1_thread.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  2069 ;;		 -> main@t1thread_data(2), 
  2070 ;;  msgtype         2   28[BANK1 ] int 
  2071 ;;  length          2   30[BANK1 ] int 
  2072 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  2073 ;;		 -> main@msgbuffer(11), 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  retval          1   35[BANK1 ] char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  2   26[BANK1 ] int 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2085 ;;      Params:         0       0       8       0       0
  2086 ;;      Locals:         0       0       1       0       0
  2087 ;;      Temps:          0       0       1       0       0
  2088 ;;      Totals:         0       0      10       0       0
  2089 ;;Total ram usage:       10 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:   14
  2092 ;; This function calls:
  2093 ;;		_FromMainHigh_sendmsg
  2094 ;;		___lwmod
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text2
  2101  0025F6                     __ptext2:
  2102                           	opt stack 0
  2103  0025F6                     _timer1_lthread:
  2104                           	opt stack 16
  2105                           
  2106                           ;timer1_thread.c: 15: signed char retval;
  2107                           ;timer1_thread.c: 17: tptr->msgcount++;
  2108                           
  2109                           ; BSR set to: 1
  2110                           ;incstack = 0
  2111  0025F6  C11A  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2112  0025FA  C11B  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2113  0025FE  2ADE               	incf	postinc2,f,c
  2114  002600  0E00               	movlw	0
  2115  002602  22DD               	addwfc	postdec2,f,c
  2116                           
  2117                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  2118  002604  C11A  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2119  002608  C11B  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2120  00260C  0101               	movlb	1	; () banked
  2121  00260E  CFDE F100          	movff	postinc2,___lwmod@dividend
  2122  002612  0101               	movlb	1	; () banked
  2123  002614  CFDD F101          	movff	postdec2,___lwmod@dividend+1
  2124  002618  0E00               	movlw	0
  2125  00261A  0101               	movlb	1	; () banked
  2126  00261C  0101               	movlb	1	; () banked
  2127  00261E  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
  2128  002620  0E0A               	movlw	10
  2129  002622  0101               	movlb	1	; () banked
  2130  002624  6F02               	movwf	___lwmod@divisor& (0+255),b
  2131  002626  EC70  F011         	call	___lwmod	;wreg free
  2132  00262A  0101               	movlb	1	; () banked
  2133  00262C  0101               	movlb	1	; () banked
  2134  00262E  5100               	movf	?___lwmod& (0+255),w,b
  2135  002630  0A09               	xorlw	9
  2136  002632  0101               	movlb	1	; () banked
  2137  002634  1101               	iorwf	(?___lwmod+1)& (0+255),w,b
  2138  002636  A4D8               	btfss	status,2,c
  2139  002638  0012               	return	
  2140                           
  2141                           ; BSR set to: 1
  2142                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  2143  00263A  0101               	movlb	1	; () banked
  2144  00263C  6F22               	movwf	??_timer1_lthread& (0+255),b
  2145  00263E  0E14               	movlw	20
  2146  002640  0101               	movlb	1	; () banked
  2147  002642  0101               	movlb	1	; () banked
  2148  002644  6F16               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2149  002646  0101               	movlb	1	; () banked
  2150  002648  5122               	movf	??_timer1_lthread& (0+255),w,b
  2151  00264A  0101               	movlb	1	; () banked
  2152  00264C  0101               	movlb	1	; () banked
  2153  00264E  C11B  F118         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2154  002652  0101               	movlb	1	; () banked
  2155  002654  0101               	movlb	1	; () banked
  2156  002656  C11A  F117         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  2157  00265A  0E02               	movlw	2
  2158  00265C  ECAE  F015         	call	_FromMainHigh_sendmsg
  2159  002660  0101               	movlb	1	; () banked
  2160  002662  0101               	movlb	1	; () banked
  2161  002664  6F23               	movwf	timer1_lthread@retval& (0+255),b
  2162  002666  0012               	return	
  2163  002668                     __end_of_timer1_lthread:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           prodh	equ	0xFF4
  2170                           prodl	equ	0xFF3
  2171                           intcon2	equ	0xFF1
  2172                           postinc0	equ	0xFEE
  2173                           wreg	equ	0xFE8
  2174                           indf1	equ	0xFE7
  2175                           postdec1	equ	0xFE5
  2176                           fsr1h	equ	0xFE2
  2177                           fsr1l	equ	0xFE1
  2178                           indf2	equ	0xFDF
  2179                           postinc2	equ	0xFDE
  2180                           postdec2	equ	0xFDD
  2181                           fsr2h	equ	0xFDA
  2182                           fsr2l	equ	0xFD9
  2183                           status	equ	0xFD8
  2184                           
  2185 ;; *************** function ___lwmod *****************
  2186 ;; Defined at:
  2187 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  dividend        2    0[BANK1 ] unsigned int 
  2190 ;;  divisor         2    2[BANK1 ] unsigned int 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  counter         1    5[BANK1 ] unsigned char 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  2    0[BANK1 ] unsigned int 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2202 ;;      Params:         0       0       4       0       0
  2203 ;;      Locals:         0       0       1       0       0
  2204 ;;      Temps:          0       0       1       0       0
  2205 ;;      Totals:         0       0       6       0       0
  2206 ;;Total ram usage:        6 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:   11
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_timer1_lthread
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text3
  2217  0022E0                     __ptext3:
  2218                           	opt stack 0
  2219  0022E0                     ___lwmod:
  2220                           	opt stack 18
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;incstack = 0
  2224  0022E0  0101               	movlb	1	; () banked
  2225  0022E2  0101               	movlb	1	; () banked
  2226  0022E4  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2227  0022E6  1102               	iorwf	___lwmod@divisor& (0+255),w,b
  2228  0022E8  B4D8               	btfsc	status,2,c
  2229  0022EA  D03A               	goto	l1218
  2230                           
  2231                           ; BSR set to: 1
  2232  0022EC  0101               	movlb	1	; () banked
  2233  0022EE  6F04               	movwf	??___lwmod& (0+255),b
  2234  0022F0  0E01               	movlw	1
  2235  0022F2  0101               	movlb	1	; () banked
  2236  0022F4  0101               	movlb	1	; () banked
  2237  0022F6  6F05               	movwf	___lwmod@counter& (0+255),b
  2238  0022F8  0101               	movlb	1	; () banked
  2239  0022FA  5104               	movf	??___lwmod& (0+255),w,b
  2240  0022FC  D009               	goto	l4208
  2241  0022FE                     l4206:
  2242                           
  2243                           ; BSR set to: 1
  2244  0022FE  0101               	movlb	1	; () banked
  2245  002300  0101               	movlb	1	; () banked
  2246  002302  0101               	movlb	1	; () banked
  2247  002304  90D8               	bcf	status,0,c
  2248  002306  3702               	rlcf	___lwmod@divisor& (0+255),f,b
  2249  002308  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2250  00230A  0101               	movlb	1	; () banked
  2251  00230C  0101               	movlb	1	; () banked
  2252  00230E  2B05               	incf	___lwmod@counter& (0+255),f,b
  2253  002310                     l4208:
  2254                           
  2255                           ; BSR set to: 1
  2256  002310  0101               	movlb	1	; () banked
  2257  002312  0101               	movlb	1	; () banked
  2258  002314  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2259  002316  D7F3               	goto	l4206
  2260  002318                     l4210:
  2261                           
  2262                           ; BSR set to: 1
  2263  002318  0101               	movlb	1	; () banked
  2264  00231A  0101               	movlb	1	; () banked
  2265  00231C  5102               	movf	___lwmod@divisor& (0+255),w,b
  2266  00231E  0101               	movlb	1	; () banked
  2267  002320  0101               	movlb	1	; () banked
  2268  002322  5D00               	subwf	___lwmod@dividend& (0+255),w,b
  2269  002324  0101               	movlb	1	; () banked
  2270  002326  0101               	movlb	1	; () banked
  2271  002328  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2272  00232A  0101               	movlb	1	; () banked
  2273  00232C  0101               	movlb	1	; () banked
  2274  00232E  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2275  002330  A0D8               	btfss	status,0,c
  2276  002332  D00C               	goto	l4214
  2277                           
  2278                           ; BSR set to: 1
  2279  002334  0101               	movlb	1	; () banked
  2280  002336  0101               	movlb	1	; () banked
  2281  002338  5102               	movf	___lwmod@divisor& (0+255),w,b
  2282  00233A  0101               	movlb	1	; () banked
  2283  00233C  0101               	movlb	1	; () banked
  2284  00233E  5F00               	subwf	___lwmod@dividend& (0+255),f,b
  2285  002340  0101               	movlb	1	; () banked
  2286  002342  0101               	movlb	1	; () banked
  2287  002344  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2288  002346  0101               	movlb	1	; () banked
  2289  002348  0101               	movlb	1	; () banked
  2290  00234A  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2291  00234C                     l4214:
  2292                           
  2293                           ; BSR set to: 1
  2294  00234C  0101               	movlb	1	; () banked
  2295  00234E  0101               	movlb	1	; () banked
  2296  002350  0101               	movlb	1	; () banked
  2297  002352  90D8               	bcf	status,0,c
  2298  002354  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2299  002356  3302               	rrcf	___lwmod@divisor& (0+255),f,b
  2300                           
  2301                           ; BSR set to: 1
  2302  002358  0101               	movlb	1	; () banked
  2303  00235A  0101               	movlb	1	; () banked
  2304  00235C  2F05               	decfsz	___lwmod@counter& (0+255),f,b
  2305  00235E  D7DC               	goto	l4210
  2306  002360                     l1218:
  2307                           
  2308                           ; BSR set to: 1
  2309  002360  C100  F100         	movff	___lwmod@dividend,?___lwmod
  2310  002364  C101  F101         	movff	___lwmod@dividend+1,?___lwmod+1
  2311                           
  2312                           ; BSR set to: 1
  2313  002368  0012               	return	
  2314  00236A                     __end_of___lwmod:
  2315                           	opt stack 0
  2316                           tblptru	equ	0xFF8
  2317                           tblptrh	equ	0xFF7
  2318                           tblptrl	equ	0xFF6
  2319                           tablat	equ	0xFF5
  2320                           prodh	equ	0xFF4
  2321                           prodl	equ	0xFF3
  2322                           intcon2	equ	0xFF1
  2323                           postinc0	equ	0xFEE
  2324                           wreg	equ	0xFE8
  2325                           indf1	equ	0xFE7
  2326                           postdec1	equ	0xFE5
  2327                           fsr1h	equ	0xFE2
  2328                           fsr1l	equ	0xFE1
  2329                           indf2	equ	0xFDF
  2330                           postinc2	equ	0xFDE
  2331                           postdec2	equ	0xFDD
  2332                           fsr2h	equ	0xFDA
  2333                           fsr2l	equ	0xFD9
  2334                           status	equ	0xFD8
  2335                           
  2336 ;; *************** function _FromMainHigh_sendmsg *****************
  2337 ;; Defined at:
  2338 ;;		line 174 in file "../src/messages.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  length          1    wreg     unsigned char 
  2341 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2342 ;;  data            2   23[BANK1 ] PTR void 
  2343 ;;		 -> main@t1thread_data(2), 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  length          1   25[BANK1 ] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      char 
  2348 ;; Registers used:
  2349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2355 ;;      Params:         0       0       3       0       0
  2356 ;;      Locals:         0       0       1       0       0
  2357 ;;      Temps:          0       0       0       0       0
  2358 ;;      Totals:         0       0       4       0       0
  2359 ;;Total ram usage:        4 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:   13
  2362 ;; This function calls:
  2363 ;;		_send_msg
  2364 ;; This function is called by:
  2365 ;;		_timer1_lthread
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text4
  2370  002B5C                     __ptext4:
  2371                           	opt stack 0
  2372  002B5C                     _FromMainHigh_sendmsg:
  2373                           	opt stack 16
  2374                           
  2375                           ; BSR set to: 1
  2376                           ;incstack = 0
  2377                           ;FromMainHigh_sendmsg@length stored from wreg
  2378  002B5C  CFE8 F119          	movff	wreg,FromMainHigh_sendmsg@length
  2379                           
  2380                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2381  002B60  0102               	movlb	2	; () banked
  2382  002B62  0E02               	movlw	high _FromMainHigh_MQ
  2383  002B64  0101               	movlb	1	; () banked
  2384  002B66  0101               	movlb	1	; () banked
  2385  002B68  6F0B               	movwf	(send_msg@qptr+1)& (0+255),b
  2386  002B6A  0102               	movlb	2	; () banked
  2387  002B6C  0E00               	movlw	low _FromMainHigh_MQ
  2388  002B6E  0101               	movlb	1	; () banked
  2389  002B70  0101               	movlb	1	; () banked
  2390  002B72  6F0A               	movwf	send_msg@qptr& (0+255),b
  2391  002B74  C119  F10C         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2392  002B78  C116  F10D         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2393  002B7C  0101               	movlb	1	; () banked
  2394  002B7E  0101               	movlb	1	; () banked
  2395  002B80  C118  F10F         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2396  002B84  0101               	movlb	1	; () banked
  2397  002B86  0101               	movlb	1	; () banked
  2398  002B88  C117  F10E         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2399  002B8C  EC0F  F009         	call	_send_msg	;wreg free
  2400  002B90  0012               	return	
  2401  002B92                     __end_of_FromMainHigh_sendmsg:
  2402                           	opt stack 0
  2403                           tblptru	equ	0xFF8
  2404                           tblptrh	equ	0xFF7
  2405                           tblptrl	equ	0xFF6
  2406                           tablat	equ	0xFF5
  2407                           prodh	equ	0xFF4
  2408                           prodl	equ	0xFF3
  2409                           intcon2	equ	0xFF1
  2410                           postinc0	equ	0xFEE
  2411                           wreg	equ	0xFE8
  2412                           indf1	equ	0xFE7
  2413                           postdec1	equ	0xFE5
  2414                           fsr1h	equ	0xFE2
  2415                           fsr1l	equ	0xFE1
  2416                           indf2	equ	0xFDF
  2417                           postinc2	equ	0xFDE
  2418                           postdec2	equ	0xFDD
  2419                           fsr2h	equ	0xFDA
  2420                           fsr2l	equ	0xFD9
  2421                           status	equ	0xFD8
  2422                           
  2423 ;; *************** function _send_msg *****************
  2424 ;; Defined at:
  2425 ;;		line 24 in file "../src/messages.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2428 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2429 ;;  length          1   12[BANK1 ] unsigned char 
  2430 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2431 ;;  data            2   14[BANK1 ] PTR void 
  2432 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  2433 ;;		 -> main@uc(15), 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2436 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  2437 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2438 ;;  tlength         2   17[BANK1 ] unsigned int 
  2439 ;;  slot            1   19[BANK1 ] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      char 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2449 ;;      Params:         0       0       6       0       0
  2450 ;;      Locals:         0       0       5       0       0
  2451 ;;      Temps:          0       0       1       0       0
  2452 ;;      Totals:         0       0      12       0       0
  2453 ;;Total ram usage:       12 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:   12
  2456 ;; This function calls:
  2457 ;;		___awmod
  2458 ;;		_memcpy
  2459 ;; This function is called by:
  2460 ;;		_FromMainHigh_sendmsg
  2461 ;;		_FromMainLow_sendmsg
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text5
  2466  00121E                     __ptext5:
  2467                           	opt stack 0
  2468  00121E                     _send_msg:
  2469                           	opt stack 16
  2470                           
  2471                           ;messages.c: 25: unsigned char slot;
  2472                           ;messages.c: 27: msg *qmsg;
  2473                           ;messages.c: 28: size_t tlength = length;
  2474                           
  2475                           ;incstack = 0
  2476  00121E  0101               	movlb	1	; () banked
  2477  001220  0101               	movlb	1	; () banked
  2478  001222  C10C  F111         	movff	send_msg@length,send_msg@tlength
  2479  001226  0101               	movlb	1	; () banked
  2480  001228  0101               	movlb	1	; () banked
  2481  00122A  6B12               	clrf	(send_msg@tlength+1)& (0+255),b
  2482                           
  2483                           ; BSR set to: 1
  2484                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2485  00122C  0101               	movlb	1	; () banked
  2486  00122E  EE20 F041          	lfsr	2,65
  2487  001232  0101               	movlb	1	; () banked
  2488  001234  510A               	movf	send_msg@qptr& (0+255),w,b
  2489  001236  26D9               	addwf	fsr2l,f,c
  2490  001238  0101               	movlb	1	; () banked
  2491  00123A  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2492  00123C  22DA               	addwfc	fsr2h,f,c
  2493  00123E  50DF               	movf	indf2,w,c
  2494  001240  0101               	movlb	1	; () banked
  2495  001242  0101               	movlb	1	; () banked
  2496  001244  6F13               	movwf	send_msg@slot& (0+255),b
  2497                           
  2498                           ; BSR set to: 1
  2499                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2500  001246  0101               	movlb	1	; () banked
  2501  001248  0101               	movlb	1	; () banked
  2502  00124A  5113               	movf	send_msg@slot& (0+255),w,b
  2503  00124C  0D0D               	mullw	13
  2504  00124E  50F3               	movf	prodl,w,c
  2505  001250  0101               	movlb	1	; () banked
  2506  001252  0101               	movlb	1	; () banked
  2507  001254  250A               	addwf	send_msg@qptr& (0+255),w,b
  2508  001256  0101               	movlb	1	; () banked
  2509  001258  0101               	movlb	1	; () banked
  2510  00125A  6F14               	movwf	send_msg@qmsg& (0+255),b
  2511  00125C  50F4               	movf	prodh,w,c
  2512  00125E  0101               	movlb	1	; () banked
  2513  001260  0101               	movlb	1	; () banked
  2514  001262  210B               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2515  001264  0101               	movlb	1	; () banked
  2516  001266  6F15               	movwf	(send_msg@qmsg+1)& (0+255),b
  2517                           
  2518                           ; BSR set to: 1
  2519                           ;messages.c: 41: if (qmsg->full != 0) {
  2520  001268  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2521  00126C  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2522  001270  50DF               	movf	indf2,w,c
  2523  001272  B4D8               	btfsc	status,2,c
  2524  001274  D002               	goto	l3718
  2525                           
  2526                           ; BSR set to: 1
  2527                           ;messages.c: 42: return (-1);
  2528  001276  0EFF               	movlw	255
  2529  001278  0012               	return	
  2530  00127A                     l3718:
  2531                           
  2532                           ; BSR set to: 1
  2533                           ;messages.c: 43: }
  2534                           ;messages.c: 46: qmsg->length = length;
  2535  00127A  0101               	movlb	1	; () banked
  2536  00127C  EE20 F001          	lfsr	2,1
  2537  001280  0101               	movlb	1	; () banked
  2538  001282  5114               	movf	send_msg@qmsg& (0+255),w,b
  2539  001284  26D9               	addwf	fsr2l,f,c
  2540  001286  0101               	movlb	1	; () banked
  2541  001288  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2542  00128A  22DA               	addwfc	fsr2h,f,c
  2543  00128C  0101               	movlb	1	; () banked
  2544  00128E  C10C  FFDF         	movff	send_msg@length,indf2
  2545                           
  2546                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2547  001292  0101               	movlb	1	; () banked
  2548  001294  EE20 F002          	lfsr	2,2
  2549  001298  0101               	movlb	1	; () banked
  2550  00129A  5114               	movf	send_msg@qmsg& (0+255),w,b
  2551  00129C  26D9               	addwf	fsr2l,f,c
  2552  00129E  0101               	movlb	1	; () banked
  2553  0012A0  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2554  0012A2  22DA               	addwfc	fsr2h,f,c
  2555  0012A4  0101               	movlb	1	; () banked
  2556  0012A6  C10D  FFDF         	movff	send_msg@msgtype,indf2
  2557                           
  2558                           ; BSR set to: 1
  2559                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2560  0012AA  0E03               	movlw	3
  2561  0012AC  0101               	movlb	1	; () banked
  2562  0012AE  0101               	movlb	1	; () banked
  2563  0012B0  2514               	addwf	send_msg@qmsg& (0+255),w,b
  2564  0012B2  0101               	movlb	1	; () banked
  2565  0012B4  0101               	movlb	1	; () banked
  2566  0012B6  6F00               	movwf	memcpy@d1& (0+255),b
  2567  0012B8  0E00               	movlw	0
  2568  0012BA  0101               	movlb	1	; () banked
  2569  0012BC  0101               	movlb	1	; () banked
  2570  0012BE  2115               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2571  0012C0  0101               	movlb	1	; () banked
  2572  0012C2  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  2573  0012C4  0101               	movlb	1	; () banked
  2574  0012C6  0101               	movlb	1	; () banked
  2575  0012C8  C10F  F103         	movff	send_msg@data+1,memcpy@s1+1
  2576  0012CC  0101               	movlb	1	; () banked
  2577  0012CE  0101               	movlb	1	; () banked
  2578  0012D0  C10E  F102         	movff	send_msg@data,memcpy@s1
  2579  0012D4  C111  F104         	movff	send_msg@tlength,memcpy@n
  2580  0012D8  C112  F105         	movff	send_msg@tlength+1,memcpy@n+1
  2581  0012DC  EC40  F014         	call	_memcpy	;wreg free
  2582                           
  2583                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  2584  0012E0  0101               	movlb	1	; () banked
  2585  0012E2  EE20 F041          	lfsr	2,65
  2586  0012E6  0101               	movlb	1	; () banked
  2587  0012E8  510A               	movf	send_msg@qptr& (0+255),w,b
  2588  0012EA  26D9               	addwf	fsr2l,f,c
  2589  0012EC  0101               	movlb	1	; () banked
  2590  0012EE  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2591  0012F0  22DA               	addwfc	fsr2h,f,c
  2592  0012F2  0101               	movlb	1	; () banked
  2593  0012F4  EE10 F041          	lfsr	1,65
  2594  0012F8  0101               	movlb	1	; () banked
  2595  0012FA  510A               	movf	send_msg@qptr& (0+255),w,b
  2596  0012FC  26E1               	addwf	fsr1l,f,c
  2597  0012FE  0101               	movlb	1	; () banked
  2598  001300  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2599  001302  22E2               	addwfc	fsr1h,f,c
  2600  001304  50E7               	movf	indf1,w,c
  2601  001306  0101               	movlb	1	; () banked
  2602  001308  6F10               	movwf	??_send_msg& (0+255),b
  2603  00130A  0E01               	movlw	1
  2604  00130C  0101               	movlb	1	; () banked
  2605  00130E  2510               	addwf	??_send_msg& (0+255),w,b
  2606  001310  0101               	movlb	1	; () banked
  2607  001312  0101               	movlb	1	; () banked
  2608  001314  6F00               	movwf	___awmod@dividend& (0+255),b
  2609  001316  0101               	movlb	1	; () banked
  2610  001318  0101               	movlb	1	; () banked
  2611  00131A  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
  2612  00131C  0E00               	movlw	0
  2613  00131E  2301               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2614  001320  0E00               	movlw	0
  2615  001322  0101               	movlb	1	; () banked
  2616  001324  0101               	movlb	1	; () banked
  2617  001326  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
  2618  001328  0E05               	movlw	5
  2619  00132A  0101               	movlb	1	; () banked
  2620  00132C  6F02               	movwf	___awmod@divisor& (0+255),b
  2621  00132E  EC3B  F00A         	call	___awmod	;wreg free
  2622  001332  0101               	movlb	1	; () banked
  2623  001334  0101               	movlb	1	; () banked
  2624  001336  5100               	movf	?___awmod& (0+255),w,b
  2625  001338  6EDF               	movwf	indf2,c
  2626                           
  2627                           ; BSR set to: 1
  2628                           ;messages.c: 59: qmsg->full = 1;
  2629  00133A  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2630  00133E  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2631  001342  0E01               	movlw	1
  2632  001344  6EDF               	movwf	indf2,c
  2633                           
  2634                           ; BSR set to: 1
  2635                           ;messages.c: 60: return (1);
  2636  001346  0E01               	movlw	1
  2637  001348  0012               	return	
  2638  00134A                     __end_of_send_msg:
  2639                           	opt stack 0
  2640                           tblptru	equ	0xFF8
  2641                           tblptrh	equ	0xFF7
  2642                           tblptrl	equ	0xFF6
  2643                           tablat	equ	0xFF5
  2644                           prodh	equ	0xFF4
  2645                           prodl	equ	0xFF3
  2646                           intcon2	equ	0xFF1
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           indf1	equ	0xFE7
  2650                           postdec1	equ	0xFE5
  2651                           fsr1h	equ	0xFE2
  2652                           fsr1l	equ	0xFE1
  2653                           indf2	equ	0xFDF
  2654                           postinc2	equ	0xFDE
  2655                           postdec2	equ	0xFDD
  2656                           fsr2h	equ	0xFDA
  2657                           fsr2l	equ	0xFD9
  2658                           status	equ	0xFD8
  2659                           
  2660 ;; *************** function _timer0_lthread *****************
  2661 ;; Defined at:
  2662 ;;		line 9 in file "../src/timer0_thread.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2665 ;;		 -> main@t0thread_data(2), 
  2666 ;;  msgtype         2    2[BANK1 ] int 
  2667 ;;  length          2    4[BANK1 ] int 
  2668 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2669 ;;		 -> main@msgbuffer(11), 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2672 ;;		 -> main@msgbuffer(11), 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  2    0[BANK1 ] int 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2682 ;;      Params:         0       0       8       0       0
  2683 ;;      Locals:         0       0       2       0       0
  2684 ;;      Temps:          0       0       0       0       0
  2685 ;;      Totals:         0       0      10       0       0
  2686 ;;Total ram usage:       10 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:   11
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_main
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text6
  2697  002D4A                     __ptext6:
  2698                           	opt stack 0
  2699  002D4A                     _timer0_lthread:
  2700                           	opt stack 19
  2701                           
  2702                           ;timer0_thread.c: 10: unsigned int *msgval;
  2703                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2704                           
  2705                           ; BSR set to: 1
  2706                           ;incstack = 0
  2707  002D4A  0101               	movlb	1	; () banked
  2708  002D4C  0101               	movlb	1	; () banked
  2709  002D4E  C107  F109         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2710  002D52  0101               	movlb	1	; () banked
  2711  002D54  0101               	movlb	1	; () banked
  2712  002D56  C106  F108         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2713                           
  2714                           ; BSR set to: 1
  2715  002D5A  0012               	return	
  2716  002D5C                     __end_of_timer0_lthread:
  2717                           	opt stack 0
  2718                           tblptru	equ	0xFF8
  2719                           tblptrh	equ	0xFF7
  2720                           tblptrl	equ	0xFF6
  2721                           tablat	equ	0xFF5
  2722                           prodh	equ	0xFF4
  2723                           prodl	equ	0xFF3
  2724                           intcon2	equ	0xFF1
  2725                           postinc0	equ	0xFEE
  2726                           wreg	equ	0xFE8
  2727                           indf1	equ	0xFE7
  2728                           postdec1	equ	0xFE5
  2729                           fsr1h	equ	0xFE2
  2730                           fsr1l	equ	0xFE1
  2731                           indf2	equ	0xFDF
  2732                           postinc2	equ	0xFDE
  2733                           postdec2	equ	0xFDD
  2734                           fsr2h	equ	0xFDA
  2735                           fsr2l	equ	0xFD9
  2736                           status	equ	0xFD8
  2737                           
  2738 ;; *************** function _init_uart_recv *****************
  2739 ;; Defined at:
  2740 ;;		line 54 in file "../src/my_uart.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2743 ;;		 -> main@uc(15), 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;		None               void
  2748 ;; Registers used:
  2749 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2755 ;;      Params:         0       0       2       0       0
  2756 ;;      Locals:         0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0
  2758 ;;      Totals:         0       0       2       0       0
  2759 ;;Total ram usage:        2 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:   11
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_main
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text7
  2770  002CCC                     __ptext7:
  2771                           	opt stack 0
  2772  002CCC                     _init_uart_recv:
  2773                           	opt stack 19
  2774                           
  2775                           ;my_uart.c: 57: uc_ptr = uc;
  2776                           
  2777                           ; BSR set to: 1
  2778                           ;incstack = 0
  2779  002CCC  0101               	movlb	1	; () banked
  2780  002CCE  C101  F061         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2781  002CD2  0101               	movlb	1	; () banked
  2782  002CD4  C100  F060         	movff	init_uart_recv@uc,_uc_ptr
  2783                           
  2784                           ; BSR set to: 1
  2785                           ;my_uart.c: 58: uc_ptr->buflen = 0;
  2786  002CD8  EE20 F006          	lfsr	2,6
  2787  002CDC  5060               	movf	_uc_ptr,w,c
  2788  002CDE  26D9               	addwf	fsr2l,f,c
  2789  002CE0  5061               	movf	_uc_ptr+1,w,c
  2790  002CE2  22DA               	addwfc	fsr2h,f,c
  2791  002CE4  0E00               	movlw	0
  2792  002CE6  6EDF               	movwf	indf2,c
  2793                           
  2794                           ; BSR set to: 1
  2795  002CE8  0012               	return	
  2796  002CEA                     __end_of_init_uart_recv:
  2797                           	opt stack 0
  2798                           tblptru	equ	0xFF8
  2799                           tblptrh	equ	0xFF7
  2800                           tblptrl	equ	0xFF6
  2801                           tablat	equ	0xFF5
  2802                           prodh	equ	0xFF4
  2803                           prodl	equ	0xFF3
  2804                           intcon2	equ	0xFF1
  2805                           postinc0	equ	0xFEE
  2806                           wreg	equ	0xFE8
  2807                           indf1	equ	0xFE7
  2808                           postdec1	equ	0xFE5
  2809                           fsr1h	equ	0xFE2
  2810                           fsr1l	equ	0xFE1
  2811                           indf2	equ	0xFDF
  2812                           postinc2	equ	0xFDE
  2813                           postdec2	equ	0xFDD
  2814                           fsr2h	equ	0xFDA
  2815                           fsr2l	equ	0xFD9
  2816                           status	equ	0xFD8
  2817                           
  2818 ;; *************** function _init_timer1_lthread *****************
  2819 ;; Defined at:
  2820 ;;		line 6 in file "../src/timer1_thread.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2823 ;;		 -> main@t1thread_data(2), 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;		None               void
  2828 ;; Registers used:
  2829 ;;		wreg, fsr2l, fsr2h
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2835 ;;      Params:         0       0       2       0       0
  2836 ;;      Locals:         0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0
  2838 ;;      Totals:         0       0       2       0       0
  2839 ;;Total ram usage:        2 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:   11
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_main
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text8
  2850  002D5C                     __ptext8:
  2851                           	opt stack 0
  2852  002D5C                     _init_timer1_lthread:
  2853                           	opt stack 19
  2854                           
  2855                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2856                           
  2857                           ; BSR set to: 1
  2858                           ;incstack = 0
  2859  002D5C  C100  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2860  002D60  C101  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2861  002D64  0E00               	movlw	0
  2862  002D66  6EDE               	movwf	postinc2,c
  2863  002D68  0E00               	movlw	0
  2864  002D6A  6EDD               	movwf	postdec2,c
  2865  002D6C  0012               	return	
  2866  002D6E                     __end_of_init_timer1_lthread:
  2867                           	opt stack 0
  2868                           tblptru	equ	0xFF8
  2869                           tblptrh	equ	0xFF7
  2870                           tblptrl	equ	0xFF6
  2871                           tablat	equ	0xFF5
  2872                           prodh	equ	0xFF4
  2873                           prodl	equ	0xFF3
  2874                           intcon2	equ	0xFF1
  2875                           postinc0	equ	0xFEE
  2876                           wreg	equ	0xFE8
  2877                           indf1	equ	0xFE7
  2878                           postdec1	equ	0xFE5
  2879                           fsr1h	equ	0xFE2
  2880                           fsr1l	equ	0xFE1
  2881                           indf2	equ	0xFDF
  2882                           postinc2	equ	0xFDE
  2883                           postdec2	equ	0xFDD
  2884                           fsr2h	equ	0xFDA
  2885                           fsr2l	equ	0xFD9
  2886                           status	equ	0xFD8
  2887                           
  2888 ;; *************** function _init_queues *****************
  2889 ;; Defined at:
  2890 ;;		line 194 in file "../src/messages.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;		None               void
  2897 ;; Registers used:
  2898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2904 ;;      Params:         0       0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0
  2906 ;;      Temps:          0       0       1       0       0
  2907 ;;      Totals:         0       0       1       0       0
  2908 ;;Total ram usage:        1 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:   12
  2911 ;; This function calls:
  2912 ;;		_init_queue
  2913 ;; This function is called by:
  2914 ;;		_main
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text9
  2919  002668                     __ptext9:
  2920                           	opt stack 0
  2921  002668                     _init_queues:
  2922                           	opt stack 18
  2923                           
  2924                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2925                           
  2926                           ;incstack = 0
  2927  002668  0101               	movlb	1	; () banked
  2928  00266A  6F04               	movwf	??_init_queues& (0+255),b
  2929  00266C  0E00               	movlw	0
  2930  00266E  0100               	movlb	0	; () banked
  2931  002670  0100               	movlb	0	; () banked
  2932  002672  6FEA               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2933  002674  0101               	movlb	1	; () banked
  2934  002676  5104               	movf	??_init_queues& (0+255),w,b
  2935                           
  2936                           ; BSR set to: 1
  2937                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2938  002678  0101               	movlb	1	; () banked
  2939  00267A  0E01               	movlw	high _ToMainLow_MQ
  2940  00267C  0101               	movlb	1	; () banked
  2941  00267E  0101               	movlb	1	; () banked
  2942  002680  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2943  002682  0101               	movlb	1	; () banked
  2944  002684  0E82               	movlw	low _ToMainLow_MQ
  2945  002686  0101               	movlb	1	; () banked
  2946  002688  0101               	movlb	1	; () banked
  2947  00268A  6F00               	movwf	init_queue@qptr& (0+255),b
  2948  00268C  ECBE  F012         	call	_init_queue	;wreg free
  2949                           
  2950                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2951  002690  0102               	movlb	2	; () banked
  2952  002692  0E02               	movlw	high _ToMainHigh_MQ
  2953  002694  0101               	movlb	1	; () banked
  2954  002696  0101               	movlb	1	; () banked
  2955  002698  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2956  00269A  0102               	movlb	2	; () banked
  2957  00269C  0E86               	movlw	low _ToMainHigh_MQ
  2958  00269E  0101               	movlb	1	; () banked
  2959  0026A0  0101               	movlb	1	; () banked
  2960  0026A2  6F00               	movwf	init_queue@qptr& (0+255),b
  2961  0026A4  ECBE  F012         	call	_init_queue	;wreg free
  2962                           
  2963                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2964  0026A8  0102               	movlb	2	; () banked
  2965  0026AA  0E02               	movlw	high _FromMainLow_MQ
  2966  0026AC  0101               	movlb	1	; () banked
  2967  0026AE  0101               	movlb	1	; () banked
  2968  0026B0  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2969  0026B2  0102               	movlb	2	; () banked
  2970  0026B4  0E43               	movlw	low _FromMainLow_MQ
  2971  0026B6  0101               	movlb	1	; () banked
  2972  0026B8  0101               	movlb	1	; () banked
  2973  0026BA  6F00               	movwf	init_queue@qptr& (0+255),b
  2974  0026BC  ECBE  F012         	call	_init_queue	;wreg free
  2975                           
  2976                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2977  0026C0  0102               	movlb	2	; () banked
  2978  0026C2  0E02               	movlw	high _FromMainHigh_MQ
  2979  0026C4  0101               	movlb	1	; () banked
  2980  0026C6  0101               	movlb	1	; () banked
  2981  0026C8  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2982  0026CA  0102               	movlb	2	; () banked
  2983  0026CC  0E00               	movlw	low _FromMainHigh_MQ
  2984  0026CE  0101               	movlb	1	; () banked
  2985  0026D0  0101               	movlb	1	; () banked
  2986  0026D2  6F00               	movwf	init_queue@qptr& (0+255),b
  2987  0026D4  ECBE  F012         	call	_init_queue	;wreg free
  2988  0026D8  0012               	return	
  2989  0026DA                     __end_of_init_queues:
  2990                           	opt stack 0
  2991                           tblptru	equ	0xFF8
  2992                           tblptrh	equ	0xFF7
  2993                           tblptrl	equ	0xFF6
  2994                           tablat	equ	0xFF5
  2995                           prodh	equ	0xFF4
  2996                           prodl	equ	0xFF3
  2997                           intcon2	equ	0xFF1
  2998                           postinc0	equ	0xFEE
  2999                           wreg	equ	0xFE8
  3000                           indf1	equ	0xFE7
  3001                           postdec1	equ	0xFE5
  3002                           fsr1h	equ	0xFE2
  3003                           fsr1l	equ	0xFE1
  3004                           indf2	equ	0xFDF
  3005                           postinc2	equ	0xFDE
  3006                           postdec2	equ	0xFDD
  3007                           fsr2h	equ	0xFDA
  3008                           fsr2l	equ	0xFD9
  3009                           status	equ	0xFD8
  3010                           
  3011 ;; *************** function _init_queue *****************
  3012 ;; Defined at:
  3013 ;;		line 14 in file "../src/messages.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3016 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  i               1    3[BANK1 ] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;		None               void
  3021 ;; Registers used:
  3022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3028 ;;      Params:         0       0       2       0       0
  3029 ;;      Locals:         0       0       1       0       0
  3030 ;;      Temps:          0       0       1       0       0
  3031 ;;      Totals:         0       0       4       0       0
  3032 ;;Total ram usage:        4 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:   11
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_init_queues
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text10
  3043  00257C                     __ptext10:
  3044                           	opt stack 0
  3045  00257C                     _init_queue:
  3046                           	opt stack 18
  3047                           
  3048                           ;messages.c: 15: unsigned char i;
  3049                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3050                           
  3051                           ;incstack = 0
  3052  00257C  0101               	movlb	1	; () banked
  3053  00257E  EE20 F041          	lfsr	2,65
  3054  002582  0101               	movlb	1	; () banked
  3055  002584  5100               	movf	init_queue@qptr& (0+255),w,b
  3056  002586  26D9               	addwf	fsr2l,f,c
  3057  002588  0101               	movlb	1	; () banked
  3058  00258A  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  3059  00258C  22DA               	addwfc	fsr2h,f,c
  3060  00258E  0E00               	movlw	0
  3061  002590  6EDF               	movwf	indf2,c
  3062                           
  3063                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3064  002592  0101               	movlb	1	; () banked
  3065  002594  EE20 F042          	lfsr	2,66
  3066  002598  0101               	movlb	1	; () banked
  3067  00259A  5100               	movf	init_queue@qptr& (0+255),w,b
  3068  00259C  26D9               	addwf	fsr2l,f,c
  3069  00259E  0101               	movlb	1	; () banked
  3070  0025A0  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  3071  0025A2  22DA               	addwfc	fsr2h,f,c
  3072  0025A4  0E00               	movlw	0
  3073  0025A6  6EDF               	movwf	indf2,c
  3074                           
  3075                           ; BSR set to: 1
  3076                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  3077  0025A8  0101               	movlb	1	; () banked
  3078  0025AA  6F02               	movwf	??_init_queue& (0+255),b
  3079  0025AC  0E00               	movlw	0
  3080  0025AE  0101               	movlb	1	; () banked
  3081  0025B0  0101               	movlb	1	; () banked
  3082  0025B2  6F03               	movwf	init_queue@i& (0+255),b
  3083  0025B4  0101               	movlb	1	; () banked
  3084  0025B6  5102               	movf	??_init_queue& (0+255),w,b
  3085                           
  3086                           ; BSR set to: 1
  3087  0025B8  0E04               	movlw	4
  3088  0025BA  0101               	movlb	1	; () banked
  3089  0025BC  0101               	movlb	1	; () banked
  3090  0025BE  6503               	cpfsgt	init_queue@i& (0+255),b
  3091  0025C0  D001               	goto	l3700
  3092  0025C2  0012               	return	
  3093  0025C4                     l3700:
  3094                           
  3095                           ; BSR set to: 1
  3096                           ;messages.c: 20: qptr->queue[i].full = 0;
  3097  0025C4  0101               	movlb	1	; () banked
  3098  0025C6  0101               	movlb	1	; () banked
  3099  0025C8  5103               	movf	init_queue@i& (0+255),w,b
  3100  0025CA  0D0D               	mullw	13
  3101  0025CC  50F3               	movf	prodl,w,c
  3102  0025CE  0101               	movlb	1	; () banked
  3103  0025D0  0101               	movlb	1	; () banked
  3104  0025D2  2500               	addwf	init_queue@qptr& (0+255),w,b
  3105  0025D4  6ED9               	movwf	fsr2l,c
  3106  0025D6  50F4               	movf	prodh,w,c
  3107  0025D8  0101               	movlb	1	; () banked
  3108  0025DA  0101               	movlb	1	; () banked
  3109  0025DC  2101               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3110  0025DE  6EDA               	movwf	fsr2h,c
  3111  0025E0  0E00               	movlw	0
  3112  0025E2  6EDF               	movwf	indf2,c
  3113                           
  3114                           ; BSR set to: 1
  3115  0025E4  0101               	movlb	1	; () banked
  3116  0025E6  0101               	movlb	1	; () banked
  3117  0025E8  2B03               	incf	init_queue@i& (0+255),f,b
  3118                           
  3119                           ; BSR set to: 1
  3120  0025EA  0E04               	movlw	4
  3121  0025EC  0101               	movlb	1	; () banked
  3122  0025EE  0101               	movlb	1	; () banked
  3123  0025F0  6503               	cpfsgt	init_queue@i& (0+255),b
  3124  0025F2  D7E8               	goto	l3700
  3125  0025F4  0012               	return	
  3126  0025F6                     __end_of_init_queue:
  3127                           	opt stack 0
  3128                           tblptru	equ	0xFF8
  3129                           tblptrh	equ	0xFF7
  3130                           tblptrl	equ	0xFF6
  3131                           tablat	equ	0xFF5
  3132                           prodh	equ	0xFF4
  3133                           prodl	equ	0xFF3
  3134                           intcon2	equ	0xFF1
  3135                           postinc0	equ	0xFEE
  3136                           wreg	equ	0xFE8
  3137                           indf1	equ	0xFE7
  3138                           postdec1	equ	0xFE5
  3139                           fsr1h	equ	0xFE2
  3140                           fsr1l	equ	0xFE1
  3141                           indf2	equ	0xFDF
  3142                           postinc2	equ	0xFDE
  3143                           postdec2	equ	0xFDD
  3144                           fsr2h	equ	0xFDA
  3145                           fsr2l	equ	0xFD9
  3146                           status	equ	0xFD8
  3147                           
  3148 ;; *************** function _init_i2c *****************
  3149 ;; Defined at:
  3150 ;;		line 459 in file "../src/my_i2c.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  3153 ;;		 -> main@ic(29), 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;		None               void
  3158 ;; Registers used:
  3159 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3165 ;;      Params:         0       0       2       0       0
  3166 ;;      Locals:         0       0       0       0       0
  3167 ;;      Temps:          0       0       0       0       0
  3168 ;;      Totals:         0       0       2       0       0
  3169 ;;Total ram usage:        2 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:   11
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_main
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text11
  3180  002748                     __ptext11:
  3181                           	opt stack 0
  3182  002748                     _init_i2c:
  3183                           	opt stack 19
  3184                           
  3185                           ;my_i2c.c: 460: ic_ptr = ic;
  3186                           
  3187                           ; BSR set to: 1
  3188                           ;incstack = 0
  3189  002748  0101               	movlb	1	; () banked
  3190  00274A  0101               	movlb	1	; () banked
  3191  00274C  C101  F1C6         	movff	init_i2c@ic+1,_ic_ptr+1
  3192  002750  0101               	movlb	1	; () banked
  3193  002752  0101               	movlb	1	; () banked
  3194  002754  C100  F1C5         	movff	init_i2c@ic,_ic_ptr
  3195                           
  3196                           ; BSR set to: 1
  3197                           ;my_i2c.c: 461: ic_ptr->buflen = 0;
  3198  002758  0101               	movlb	1	; () banked
  3199  00275A  EE20 F00A          	lfsr	2,10
  3200  00275E  0101               	movlb	1	; () banked
  3201  002760  51C5               	movf	_ic_ptr& (0+255),w,b
  3202  002762  26D9               	addwf	fsr2l,f,c
  3203  002764  0101               	movlb	1	; () banked
  3204  002766  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3205  002768  22DA               	addwfc	fsr2h,f,c
  3206  00276A  0E00               	movlw	0
  3207  00276C  6EDF               	movwf	indf2,c
  3208                           
  3209                           ; BSR set to: 1
  3210                           ;my_i2c.c: 462: ic_ptr->event_count = 0;
  3211  00276E  0101               	movlb	1	; () banked
  3212  002770  EE20 F00C          	lfsr	2,12
  3213  002774  0101               	movlb	1	; () banked
  3214  002776  51C5               	movf	_ic_ptr& (0+255),w,b
  3215  002778  26D9               	addwf	fsr2l,f,c
  3216  00277A  0101               	movlb	1	; () banked
  3217  00277C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3218  00277E  22DA               	addwfc	fsr2h,f,c
  3219  002780  0E00               	movlw	0
  3220  002782  6EDF               	movwf	indf2,c
  3221                           
  3222                           ; BSR set to: 1
  3223                           ;my_i2c.c: 463: ic_ptr->status = 0x5;
  3224  002784  0101               	movlb	1	; () banked
  3225  002786  EE20 F00D          	lfsr	2,13
  3226  00278A  0101               	movlb	1	; () banked
  3227  00278C  51C5               	movf	_ic_ptr& (0+255),w,b
  3228  00278E  26D9               	addwf	fsr2l,f,c
  3229  002790  0101               	movlb	1	; () banked
  3230  002792  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3231  002794  22DA               	addwfc	fsr2h,f,c
  3232  002796  0E05               	movlw	5
  3233  002798  6EDF               	movwf	indf2,c
  3234                           
  3235                           ; BSR set to: 1
  3236                           ;my_i2c.c: 464: ic_ptr->error_count = 0;
  3237  00279A  0101               	movlb	1	; () banked
  3238  00279C  EE20 F00F          	lfsr	2,15
  3239  0027A0  0101               	movlb	1	; () banked
  3240  0027A2  51C5               	movf	_ic_ptr& (0+255),w,b
  3241  0027A4  26D9               	addwf	fsr2l,f,c
  3242  0027A6  0101               	movlb	1	; () banked
  3243  0027A8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3244  0027AA  22DA               	addwfc	fsr2h,f,c
  3245  0027AC  0E00               	movlw	0
  3246  0027AE  6EDF               	movwf	indf2,c
  3247                           
  3248                           ; BSR set to: 1
  3249  0027B0  0012               	return	
  3250  0027B2                     __end_of_init_i2c:
  3251                           	opt stack 0
  3252                           tblptru	equ	0xFF8
  3253                           tblptrh	equ	0xFF7
  3254                           tblptrl	equ	0xFF6
  3255                           tablat	equ	0xFF5
  3256                           prodh	equ	0xFF4
  3257                           prodl	equ	0xFF3
  3258                           intcon2	equ	0xFF1
  3259                           postinc0	equ	0xFEE
  3260                           wreg	equ	0xFE8
  3261                           indf1	equ	0xFE7
  3262                           postdec1	equ	0xFE5
  3263                           fsr1h	equ	0xFE2
  3264                           fsr1l	equ	0xFE1
  3265                           indf2	equ	0xFDF
  3266                           postinc2	equ	0xFDE
  3267                           postdec2	equ	0xFDD
  3268                           fsr2h	equ	0xFDA
  3269                           fsr2l	equ	0xFD9
  3270                           status	equ	0xFD8
  3271                           
  3272 ;; *************** function _i2c_master_send *****************
  3273 ;; Defined at:
  3274 ;;		line 44 in file "../src/my_i2c.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  sendlength      1    wreg     unsigned char 
  3277 ;;  recvlength      1    0[BANK1 ] unsigned char 
  3278 ;;  msg             2    1[BANK1 ] PTR unsigned char 
  3279 ;;		 -> main@msgbuffer(11), 
  3280 ;;  slave_addr      1    3[BANK1 ] unsigned char 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  sendlength      1    6[BANK1 ] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      unsigned char 
  3285 ;; Registers used:
  3286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3292 ;;      Params:         0       0       4       0       0
  3293 ;;      Locals:         0       0       1       0       0
  3294 ;;      Temps:          0       0       2       0       0
  3295 ;;      Totals:         0       0       7       0       0
  3296 ;;Total ram usage:        7 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:   11
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_main
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text12
  3307  0010E0                     __ptext12:
  3308                           	opt stack 0
  3309  0010E0                     _i2c_master_send:
  3310                           	opt stack 19
  3311                           
  3312                           ; BSR set to: 1
  3313                           ;incstack = 0
  3314                           ;i2c_master_send@sendlength stored from wreg
  3315  0010E0  CFE8 F106          	movff	wreg,i2c_master_send@sendlength
  3316                           
  3317                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  3318  0010E4  0101               	movlb	1	; () banked
  3319  0010E6  EE20 F01A          	lfsr	2,26
  3320  0010EA  0101               	movlb	1	; () banked
  3321  0010EC  51C5               	movf	_ic_ptr& (0+255),w,b
  3322  0010EE  26D9               	addwf	fsr2l,f,c
  3323  0010F0  0101               	movlb	1	; () banked
  3324  0010F2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3325  0010F4  22DA               	addwfc	fsr2h,f,c
  3326  0010F6  0E00               	movlw	0
  3327  0010F8  6EDF               	movwf	indf2,c
  3328  0010FA  D042               	goto	l3684
  3329  0010FC                     l3680:
  3330                           
  3331                           ; BSR set to: 1
  3332                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  3333  0010FC  0101               	movlb	1	; () banked
  3334  0010FE  EE20 F01A          	lfsr	2,26
  3335  001102  0101               	movlb	1	; () banked
  3336  001104  51C5               	movf	_ic_ptr& (0+255),w,b
  3337  001106  26D9               	addwf	fsr2l,f,c
  3338  001108  0101               	movlb	1	; () banked
  3339  00110A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3340  00110C  22DA               	addwfc	fsr2h,f,c
  3341  00110E  50DF               	movf	indf2,w,c
  3342  001110  0101               	movlb	1	; () banked
  3343  001112  6F04               	movwf	??_i2c_master_send& (0+255),b
  3344  001114  0101               	movlb	1	; () banked
  3345  001116  5104               	movf	??_i2c_master_send& (0+255),w,b
  3346  001118  0D01               	mullw	1
  3347  00111A  50F3               	movf	prodl,w,c
  3348  00111C  0101               	movlb	1	; () banked
  3349  00111E  0101               	movlb	1	; () banked
  3350  001120  2501               	addwf	i2c_master_send@msg& (0+255),w,b
  3351  001122  6ED9               	movwf	fsr2l,c
  3352  001124  50F4               	movf	prodh,w,c
  3353  001126  0101               	movlb	1	; () banked
  3354  001128  0101               	movlb	1	; () banked
  3355  00112A  2102               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  3356  00112C  6EDA               	movwf	fsr2h,c
  3357  00112E  0101               	movlb	1	; () banked
  3358  001130  EE10 F01A          	lfsr	1,26
  3359  001134  0101               	movlb	1	; () banked
  3360  001136  51C5               	movf	_ic_ptr& (0+255),w,b
  3361  001138  26E1               	addwf	fsr1l,f,c
  3362  00113A  0101               	movlb	1	; () banked
  3363  00113C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3364  00113E  22E2               	addwfc	fsr1h,f,c
  3365  001140  50E7               	movf	indf1,w,c
  3366  001142  0101               	movlb	1	; () banked
  3367  001144  6F05               	movwf	(??_i2c_master_send+1)& (0+255),b
  3368  001146  0101               	movlb	1	; () banked
  3369  001148  5105               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3370  00114A  0D01               	mullw	1
  3371  00114C  0E10               	movlw	16
  3372  00114E  26F3               	addwf	prodl,f,c
  3373  001150  0E00               	movlw	0
  3374  001152  22F4               	addwfc	prodh,f,c
  3375  001154  50F3               	movf	prodl,w,c
  3376  001156  0101               	movlb	1	; () banked
  3377  001158  0101               	movlb	1	; () banked
  3378  00115A  25C5               	addwf	_ic_ptr& (0+255),w,b
  3379  00115C  6EE1               	movwf	fsr1l,c
  3380  00115E  50F4               	movf	prodh,w,c
  3381  001160  0101               	movlb	1	; () banked
  3382  001162  0101               	movlb	1	; () banked
  3383  001164  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3384  001166  6EE2               	movwf	fsr1h,c
  3385  001168  CFDF FFE7          	movff	indf2,indf1
  3386                           
  3387                           ; BSR set to: 1
  3388  00116C  0101               	movlb	1	; () banked
  3389  00116E  EE20 F01A          	lfsr	2,26
  3390  001172  0101               	movlb	1	; () banked
  3391  001174  51C5               	movf	_ic_ptr& (0+255),w,b
  3392  001176  26D9               	addwf	fsr2l,f,c
  3393  001178  0101               	movlb	1	; () banked
  3394  00117A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3395  00117C  22DA               	addwfc	fsr2h,f,c
  3396  00117E  2ADF               	incf	indf2,f,c
  3397  001180                     l3684:
  3398                           
  3399                           ; BSR set to: 1
  3400  001180  0101               	movlb	1	; () banked
  3401  001182  EE20 F01A          	lfsr	2,26
  3402  001186  0101               	movlb	1	; () banked
  3403  001188  51C5               	movf	_ic_ptr& (0+255),w,b
  3404  00118A  26D9               	addwf	fsr2l,f,c
  3405  00118C  0101               	movlb	1	; () banked
  3406  00118E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3407  001190  22DA               	addwfc	fsr2h,f,c
  3408  001192  50DF               	movf	indf2,w,c
  3409  001194  0101               	movlb	1	; () banked
  3410  001196  6F04               	movwf	??_i2c_master_send& (0+255),b
  3411  001198  0101               	movlb	1	; () banked
  3412  00119A  0101               	movlb	1	; () banked
  3413  00119C  5106               	movf	i2c_master_send@sendlength& (0+255),w,b
  3414  00119E  0101               	movlb	1	; () banked
  3415  0011A0  5D04               	subwf	??_i2c_master_send& (0+255),w,b
  3416  0011A2  A0D8               	btfss	status,0,c
  3417  0011A4  D7AB               	goto	l3680
  3418                           
  3419                           ; BSR set to: 1
  3420                           ;my_i2c.c: 48: }
  3421                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  3422                           
  3423                           ; BSR set to: 1
  3424  0011A6  0101               	movlb	1	; () banked
  3425  0011A8  EE20 F01C          	lfsr	2,28
  3426  0011AC  0101               	movlb	1	; () banked
  3427  0011AE  51C5               	movf	_ic_ptr& (0+255),w,b
  3428  0011B0  26D9               	addwf	fsr2l,f,c
  3429  0011B2  0101               	movlb	1	; () banked
  3430  0011B4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3431  0011B6  22DA               	addwfc	fsr2h,f,c
  3432  0011B8  0101               	movlb	1	; () banked
  3433  0011BA  C103  FFDF         	movff	i2c_master_send@slave_addr,indf2
  3434                           
  3435                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  3436  0011BE  0101               	movlb	1	; () banked
  3437  0011C0  EE20 F01A          	lfsr	2,26
  3438  0011C4  0101               	movlb	1	; () banked
  3439  0011C6  51C5               	movf	_ic_ptr& (0+255),w,b
  3440  0011C8  26D9               	addwf	fsr2l,f,c
  3441  0011CA  0101               	movlb	1	; () banked
  3442  0011CC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3443  0011CE  22DA               	addwfc	fsr2h,f,c
  3444  0011D0  0101               	movlb	1	; () banked
  3445  0011D2  C106  FFDF         	movff	i2c_master_send@sendlength,indf2
  3446                           
  3447                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  3448  0011D6  0101               	movlb	1	; () banked
  3449  0011D8  EE20 F00A          	lfsr	2,10
  3450  0011DC  0101               	movlb	1	; () banked
  3451  0011DE  51C5               	movf	_ic_ptr& (0+255),w,b
  3452  0011E0  26D9               	addwf	fsr2l,f,c
  3453  0011E2  0101               	movlb	1	; () banked
  3454  0011E4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3455  0011E6  22DA               	addwfc	fsr2h,f,c
  3456  0011E8  0101               	movlb	1	; () banked
  3457  0011EA  C100  FFDF         	movff	i2c_master_send@recvlength,indf2
  3458                           
  3459                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  3460  0011EE  0101               	movlb	1	; () banked
  3461  0011F0  EE20 F00D          	lfsr	2,13
  3462  0011F4  0101               	movlb	1	; () banked
  3463  0011F6  51C5               	movf	_ic_ptr& (0+255),w,b
  3464  0011F8  26D9               	addwf	fsr2l,f,c
  3465  0011FA  0101               	movlb	1	; () banked
  3466  0011FC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3467  0011FE  22DA               	addwfc	fsr2h,f,c
  3468  001200  0E0A               	movlw	10
  3469  001202  6EDF               	movwf	indf2,c
  3470                           
  3471                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  3472  001204  0101               	movlb	1	; () banked
  3473  001206  EE20 F01B          	lfsr	2,27
  3474  00120A  0101               	movlb	1	; () banked
  3475  00120C  51C5               	movf	_ic_ptr& (0+255),w,b
  3476  00120E  26D9               	addwf	fsr2l,f,c
  3477  001210  0101               	movlb	1	; () banked
  3478  001212  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3479  001214  22DA               	addwfc	fsr2h,f,c
  3480  001216  0E00               	movlw	0
  3481  001218  6EDF               	movwf	indf2,c
  3482                           
  3483                           ; BSR set to: 1
  3484                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  3485  00121A  80C5               	bsf	4037,0,c	;volatile
  3486  00121C  0012               	return	
  3487  00121E                     __end_of_i2c_master_send:
  3488                           	opt stack 0
  3489                           tblptru	equ	0xFF8
  3490                           tblptrh	equ	0xFF7
  3491                           tblptrl	equ	0xFF6
  3492                           tablat	equ	0xFF5
  3493                           prodh	equ	0xFF4
  3494                           prodl	equ	0xFF3
  3495                           intcon2	equ	0xFF1
  3496                           postinc0	equ	0xFEE
  3497                           wreg	equ	0xFE8
  3498                           indf1	equ	0xFE7
  3499                           postdec1	equ	0xFE5
  3500                           fsr1h	equ	0xFE2
  3501                           fsr1l	equ	0xFE1
  3502                           indf2	equ	0xFDF
  3503                           postinc2	equ	0xFDE
  3504                           postdec2	equ	0xFDD
  3505                           fsr2h	equ	0xFDA
  3506                           fsr2l	equ	0xFD9
  3507                           status	equ	0xFD8
  3508                           
  3509 ;; *************** function _i2c_configure_slave *****************
  3510 ;; Defined at:
  3511 ;;		line 470 in file "../src/my_i2c.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  addr            1    wreg     unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  addr            1    0[BANK1 ] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;		None               void
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3525 ;;      Params:         0       0       0       0       0
  3526 ;;      Locals:         0       0       1       0       0
  3527 ;;      Temps:          0       0       0       0       0
  3528 ;;      Totals:         0       0       1       0       0
  3529 ;;Total ram usage:        1 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:   11
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_main
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text13
  3540  002C5E                     __ptext13:
  3541                           	opt stack 0
  3542  002C5E                     _i2c_configure_slave:
  3543                           	opt stack 19
  3544                           
  3545                           ; BSR set to: 1
  3546                           ;incstack = 0
  3547                           ;i2c_configure_slave@addr stored from wreg
  3548  002C5E  CFE8 F100          	movff	wreg,i2c_configure_slave@addr
  3549                           
  3550                           ;my_i2c.c: 482: TRISCbits.TRISC3 = 1;
  3551  002C62  8694               	bsf	3988,3,c	;volatile
  3552                           
  3553                           ;my_i2c.c: 483: TRISCbits.TRISC4 = 1;
  3554  002C64  8894               	bsf	3988,4,c	;volatile
  3555                           
  3556                           ;my_i2c.c: 488: SSPADD = addr;
  3557  002C66  C100  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3558                           
  3559                           ;my_i2c.c: 490: SSPSTAT = 0x0;
  3560  002C6A  0E00               	movlw	0
  3561  002C6C  6EC7               	movwf	4039,c	;volatile
  3562                           
  3563                           ;my_i2c.c: 491: SSPCON1 = 0x0;
  3564  002C6E  0E00               	movlw	0
  3565  002C70  6EC6               	movwf	4038,c	;volatile
  3566                           
  3567                           ;my_i2c.c: 492: SSPCON2 = 0x0;
  3568  002C72  0E00               	movlw	0
  3569  002C74  6EC5               	movwf	4037,c	;volatile
  3570                           
  3571                           ;my_i2c.c: 493: SSPCON1 |= 0x0E;
  3572  002C76  0E0E               	movlw	14
  3573  002C78  12C6               	iorwf	4038,f,c	;volatile
  3574                           
  3575                           ;my_i2c.c: 494: SSPSTAT |= 0b10000000;
  3576  002C7A  8EC7               	bsf	4039,7,c	;volatile
  3577                           
  3578                           ;my_i2c.c: 497: TRISCbits.TRISC3 = 1;
  3579  002C7C  8694               	bsf	3988,3,c	;volatile
  3580                           
  3581                           ;my_i2c.c: 498: TRISCbits.TRISC4 = 1;
  3582  002C7E  8894               	bsf	3988,4,c	;volatile
  3583                           
  3584                           ;my_i2c.c: 519: SSPCON2bits.SEN = 1;
  3585  002C80  80C5               	bsf	4037,0,c	;volatile
  3586                           
  3587                           ;my_i2c.c: 520: SSPCON1 |= 0b00100000;
  3588  002C82  8AC6               	bsf	4038,5,c	;volatile
  3589  002C84  0012               	return	
  3590  002C86                     __end_of_i2c_configure_slave:
  3591                           	opt stack 0
  3592                           tblptru	equ	0xFF8
  3593                           tblptrh	equ	0xFF7
  3594                           tblptrl	equ	0xFF6
  3595                           tablat	equ	0xFF5
  3596                           prodh	equ	0xFF4
  3597                           prodl	equ	0xFF3
  3598                           intcon2	equ	0xFF1
  3599                           postinc0	equ	0xFEE
  3600                           wreg	equ	0xFE8
  3601                           indf1	equ	0xFE7
  3602                           postdec1	equ	0xFE5
  3603                           fsr1h	equ	0xFE2
  3604                           fsr1l	equ	0xFE1
  3605                           indf2	equ	0xFDF
  3606                           postinc2	equ	0xFDE
  3607                           postdec2	equ	0xFDD
  3608                           fsr2h	equ	0xFDA
  3609                           fsr2l	equ	0xFD9
  3610                           status	equ	0xFD8
  3611                           
  3612 ;; *************** function _enable_interrupts *****************
  3613 ;; Defined at:
  3614 ;;		line 15 in file "../src/interrupts.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;		None
  3619 ;; Return value:  Size  Location     Type
  3620 ;;		None               void
  3621 ;; Registers used:
  3622 ;;		None
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3628 ;;      Params:         0       0       0       0       0
  3629 ;;      Locals:         0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0
  3631 ;;      Totals:         0       0       0       0       0
  3632 ;;Total ram usage:        0 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; Hardware stack levels required when called:   11
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_main
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text14
  3643  002DE2                     __ptext14:
  3644                           	opt stack 0
  3645  002DE2                     _enable_interrupts:
  3646                           	opt stack 19
  3647                           
  3648                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3649                           
  3650                           ;incstack = 0
  3651  002DE2  8ED0               	bsf	4048,7,c	;volatile
  3652                           
  3653                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3654  002DE4  8EF2               	bsf	intcon,7,c	;volatile
  3655                           
  3656                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3657  002DE6  8CF2               	bsf	intcon,6,c	;volatile
  3658  002DE8  0012               	return	
  3659  002DEA                     __end_of_enable_interrupts:
  3660                           	opt stack 0
  3661                           tblptru	equ	0xFF8
  3662                           tblptrh	equ	0xFF7
  3663                           tblptrl	equ	0xFF6
  3664                           tablat	equ	0xFF5
  3665                           prodh	equ	0xFF4
  3666                           prodl	equ	0xFF3
  3667                           intcon	equ	0xFF2
  3668                           intcon2	equ	0xFF1
  3669                           postinc0	equ	0xFEE
  3670                           wreg	equ	0xFE8
  3671                           indf1	equ	0xFE7
  3672                           postdec1	equ	0xFE5
  3673                           fsr1h	equ	0xFE2
  3674                           fsr1l	equ	0xFE1
  3675                           indf2	equ	0xFDF
  3676                           postinc2	equ	0xFDE
  3677                           postdec2	equ	0xFDD
  3678                           fsr2h	equ	0xFDA
  3679                           fsr2l	equ	0xFD9
  3680                           status	equ	0xFD8
  3681                           
  3682 ;; *************** function _block_on_To_msgqueues *****************
  3683 ;; Defined at:
  3684 ;;		line 258 in file "../src/messages.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;		None
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;		None               void
  3691 ;; Registers used:
  3692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3698 ;;      Params:         0       0       0       0       0
  3699 ;;      Locals:         0       0       0       0       0
  3700 ;;      Temps:          0       0       1       0       0
  3701 ;;      Totals:         0       0       1       0       0
  3702 ;;Total ram usage:        1 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:   14
  3705 ;; This function calls:
  3706 ;;		_Delay1KTCYx
  3707 ;;		_check_msg
  3708 ;;		_in_main
  3709 ;; This function is called by:
  3710 ;;		_main
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text15
  3715  00236A                     __ptext15:
  3716                           	opt stack 0
  3717  00236A                     _block_on_To_msgqueues:
  3718                           	opt stack 16
  3719                           
  3720                           ;messages.c: 259: if (!in_main()) {
  3721                           
  3722                           ;incstack = 0
  3723  00236A  EC0E  F015         	call	_in_main	;wreg free
  3724  00236E  0101               	movlb	1	; () banked
  3725  002370  0101               	movlb	1	; () banked
  3726  002372  5105               	movf	(?_in_main+1)& (0+255),w,b
  3727  002374  0101               	movlb	1	; () banked
  3728  002376  1104               	iorwf	?_in_main& (0+255),w,b
  3729  002378  B4D8               	btfsc	status,2,c
  3730  00237A  0012               	return	
  3731                           
  3732                           ; BSR set to: 1
  3733                           ;messages.c: 261: }
  3734                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3735                           
  3736                           ; BSR set to: 1
  3737                           
  3738                           ; BSR set to: 1
  3739                           ;messages.c: 260: return;
  3740  00237C  0101               	movlb	1	; () banked
  3741  00237E  6F06               	movwf	??_block_on_To_msgqueues& (0+255),b
  3742  002380  0E01               	movlw	1
  3743  002382  0100               	movlb	0	; () banked
  3744  002384  0100               	movlb	0	; () banked
  3745  002386  6FEA               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3746  002388  0101               	movlb	1	; () banked
  3747  00238A  5106               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3748  00238C                     l3634:
  3749                           
  3750                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3751  00238C  0102               	movlb	2	; () banked
  3752  00238E  0E02               	movlw	high _ToMainHigh_MQ
  3753  002390  0101               	movlb	1	; () banked
  3754  002392  0101               	movlb	1	; () banked
  3755  002394  6F01               	movwf	(check_msg@qptr+1)& (0+255),b
  3756  002396  0102               	movlb	2	; () banked
  3757  002398  0E86               	movlw	low _ToMainHigh_MQ
  3758  00239A  0101               	movlb	1	; () banked
  3759  00239C  0101               	movlb	1	; () banked
  3760  00239E  6F00               	movwf	check_msg@qptr& (0+255),b
  3761  0023A0  ECC9  F015         	call	_check_msg	;wreg free
  3762  0023A4  0900               	iorlw	0
  3763  0023A6  B4D8               	btfsc	status,2,c
  3764  0023A8  D009               	goto	l3640
  3765                           
  3766                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3767  0023AA  0101               	movlb	1	; () banked
  3768  0023AC  6F06               	movwf	??_block_on_To_msgqueues& (0+255),b
  3769  0023AE  0E00               	movlw	0
  3770  0023B0  0100               	movlb	0	; () banked
  3771  0023B2  0100               	movlb	0	; () banked
  3772  0023B4  6FEA               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3773  0023B6  0101               	movlb	1	; () banked
  3774  0023B8  5106               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3775  0023BA  0012               	return	
  3776  0023BC                     l3640:
  3777                           
  3778                           ;messages.c: 271: }
  3779                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3780  0023BC  0101               	movlb	1	; () banked
  3781  0023BE  0E01               	movlw	high _ToMainLow_MQ
  3782  0023C0  0101               	movlb	1	; () banked
  3783  0023C2  0101               	movlb	1	; () banked
  3784  0023C4  6F01               	movwf	(check_msg@qptr+1)& (0+255),b
  3785  0023C6  0101               	movlb	1	; () banked
  3786  0023C8  0E82               	movlw	low _ToMainLow_MQ
  3787  0023CA  0101               	movlb	1	; () banked
  3788  0023CC  0101               	movlb	1	; () banked
  3789  0023CE  6F00               	movwf	check_msg@qptr& (0+255),b
  3790  0023D0  ECC9  F015         	call	_check_msg	;wreg free
  3791  0023D4  0900               	iorlw	0
  3792  0023D6  B4D8               	btfsc	status,2,c
  3793  0023D8  D009               	goto	l3646
  3794                           
  3795                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3796  0023DA  0101               	movlb	1	; () banked
  3797  0023DC  6F06               	movwf	??_block_on_To_msgqueues& (0+255),b
  3798  0023DE  0E00               	movlw	0
  3799  0023E0  0100               	movlb	0	; () banked
  3800  0023E2  0100               	movlb	0	; () banked
  3801  0023E4  6FEA               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3802  0023E6  0101               	movlb	1	; () banked
  3803  0023E8  5106               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3804  0023EA  0012               	return	
  3805  0023EC                     l3646:
  3806                           
  3807                           ;messages.c: 278: }
  3808                           ;messages.c: 279: Delay1KTCYx(10);
  3809  0023EC  0E0A               	movlw	10
  3810  0023EE  EC90  F016         	call	_Delay1KTCYx
  3811  0023F2  D7CC               	goto	l3634
  3812  0023F4                     __end_of_block_on_To_msgqueues:
  3813                           	opt stack 0
  3814                           tblptru	equ	0xFF8
  3815                           tblptrh	equ	0xFF7
  3816                           tblptrl	equ	0xFF6
  3817                           tablat	equ	0xFF5
  3818                           prodh	equ	0xFF4
  3819                           prodl	equ	0xFF3
  3820                           intcon	equ	0xFF2
  3821                           intcon2	equ	0xFF1
  3822                           postinc0	equ	0xFEE
  3823                           wreg	equ	0xFE8
  3824                           indf1	equ	0xFE7
  3825                           postdec1	equ	0xFE5
  3826                           fsr1h	equ	0xFE2
  3827                           fsr1l	equ	0xFE1
  3828                           indf2	equ	0xFDF
  3829                           postinc2	equ	0xFDE
  3830                           postdec2	equ	0xFDD
  3831                           fsr2h	equ	0xFDA
  3832                           fsr2l	equ	0xFD9
  3833                           status	equ	0xFD8
  3834                           
  3835 ;; *************** function _in_main *****************
  3836 ;; Defined at:
  3837 ;;		line 41 in file "../src/interrupts.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  2    4[BANK1 ] int 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3851 ;;      Params:         0       0       2       0       0
  3852 ;;      Locals:         0       0       0       0       0
  3853 ;;      Temps:          0       0       0       0       0
  3854 ;;      Totals:         0       0       2       0       0
  3855 ;;Total ram usage:        2 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:   13
  3858 ;; This function calls:
  3859 ;;		_in_high_int
  3860 ;;		_in_low_int
  3861 ;; This function is called by:
  3862 ;;		_block_on_To_msgqueues
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text16
  3867  002A1C                     __ptext16:
  3868                           	opt stack 0
  3869  002A1C                     _in_main:
  3870                           	opt stack 16
  3871                           
  3872                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3873                           
  3874                           ;incstack = 0
  3875  002A1C  ECC8  F014         	call	_in_low_int	;wreg free
  3876  002A20  0101               	movlb	1	; () banked
  3877  002A22  0101               	movlb	1	; () banked
  3878  002A24  5103               	movf	(?_in_low_int+1)& (0+255),w,b
  3879  002A26  0101               	movlb	1	; () banked
  3880  002A28  1102               	iorwf	?_in_low_int& (0+255),w,b
  3881  002A2A  A4D8               	btfss	status,2,c
  3882  002A2C  D011               	goto	l3320
  3883                           
  3884                           ; BSR set to: 1
  3885  002A2E  ECB7  F016         	call	_in_high_int	;wreg free
  3886  002A32  0101               	movlb	1	; () banked
  3887  002A34  0101               	movlb	1	; () banked
  3888  002A36  5101               	movf	(?_in_high_int+1)& (0+255),w,b
  3889  002A38  0101               	movlb	1	; () banked
  3890  002A3A  1100               	iorwf	?_in_high_int& (0+255),w,b
  3891  002A3C  A4D8               	btfss	status,2,c
  3892  002A3E  D008               	goto	l3320
  3893                           
  3894                           ; BSR set to: 1
  3895                           ;interrupts.c: 43: return (1);
  3896  002A40  0E00               	movlw	0
  3897  002A42  0101               	movlb	1	; () banked
  3898  002A44  0101               	movlb	1	; () banked
  3899  002A46  6F05               	movwf	(?_in_main+1)& (0+255),b
  3900  002A48  0E01               	movlw	1
  3901  002A4A  0101               	movlb	1	; () banked
  3902  002A4C  6F04               	movwf	?_in_main& (0+255),b
  3903  002A4E  0012               	return	
  3904  002A50                     l3320:
  3905                           
  3906                           ; BSR set to: 1
  3907                           ;interrupts.c: 45: return (0);
  3908  002A50  0E00               	movlw	0
  3909  002A52  0101               	movlb	1	; () banked
  3910  002A54  0101               	movlb	1	; () banked
  3911  002A56  6F05               	movwf	(?_in_main+1)& (0+255),b
  3912  002A58  0E00               	movlw	0
  3913  002A5A  0101               	movlb	1	; () banked
  3914  002A5C  6F04               	movwf	?_in_main& (0+255),b
  3915  002A5E  0012               	return	
  3916  002A60                     __end_of_in_main:
  3917                           	opt stack 0
  3918                           tblptru	equ	0xFF8
  3919                           tblptrh	equ	0xFF7
  3920                           tblptrl	equ	0xFF6
  3921                           tablat	equ	0xFF5
  3922                           prodh	equ	0xFF4
  3923                           prodl	equ	0xFF3
  3924                           intcon	equ	0xFF2
  3925                           intcon2	equ	0xFF1
  3926                           postinc0	equ	0xFEE
  3927                           wreg	equ	0xFE8
  3928                           indf1	equ	0xFE7
  3929                           postdec1	equ	0xFE5
  3930                           fsr1h	equ	0xFE2
  3931                           fsr1l	equ	0xFE1
  3932                           indf2	equ	0xFDF
  3933                           postinc2	equ	0xFDE
  3934                           postdec2	equ	0xFDD
  3935                           fsr2h	equ	0xFDA
  3936                           fsr2l	equ	0xFD9
  3937                           status	equ	0xFD8
  3938                           
  3939 ;; *************** function _in_low_int *****************
  3940 ;; Defined at:
  3941 ;;		line 31 in file "../src/interrupts.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  2    2[BANK1 ] int 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3955 ;;      Params:         0       0       2       0       0
  3956 ;;      Locals:         0       0       0       0       0
  3957 ;;      Temps:          0       0       0       0       0
  3958 ;;      Totals:         0       0       2       0       0
  3959 ;;Total ram usage:        2 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:   12
  3962 ;; This function calls:
  3963 ;;		_in_high_int
  3964 ;; This function is called by:
  3965 ;;		_in_main
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text17
  3970  002990                     __ptext17:
  3971                           	opt stack 0
  3972  002990                     _in_low_int:
  3973                           	opt stack 16
  3974                           
  3975                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3976                           
  3977                           ; BSR set to: 1
  3978                           ;incstack = 0
  3979  002990  ACF2               	btfss	intcon,6,c	;volatile
  3980  002992  D008               	goto	l3298
  3981                           
  3982                           ;interrupts.c: 33: return (0);
  3983  002994  0E00               	movlw	0
  3984  002996  0101               	movlb	1	; () banked
  3985  002998  0101               	movlb	1	; () banked
  3986  00299A  6F03               	movwf	(?_in_low_int+1)& (0+255),b
  3987  00299C  0E00               	movlw	0
  3988  00299E  0101               	movlb	1	; () banked
  3989  0029A0  6F02               	movwf	?_in_low_int& (0+255),b
  3990  0029A2  0012               	return	
  3991  0029A4                     l3298:
  3992  0029A4  ECB7  F016         	call	_in_high_int	;wreg free
  3993  0029A8  0101               	movlb	1	; () banked
  3994  0029AA  0101               	movlb	1	; () banked
  3995  0029AC  5101               	movf	(?_in_high_int+1)& (0+255),w,b
  3996  0029AE  0101               	movlb	1	; () banked
  3997  0029B0  1100               	iorwf	?_in_high_int& (0+255),w,b
  3998  0029B2  B4D8               	btfsc	status,2,c
  3999  0029B4  D008               	goto	l3306
  4000                           
  4001                           ; BSR set to: 1
  4002                           ;interrupts.c: 35: return (0);
  4003  0029B6  0E00               	movlw	0
  4004  0029B8  0101               	movlb	1	; () banked
  4005  0029BA  0101               	movlb	1	; () banked
  4006  0029BC  6F03               	movwf	(?_in_low_int+1)& (0+255),b
  4007  0029BE  0E00               	movlw	0
  4008  0029C0  0101               	movlb	1	; () banked
  4009  0029C2  6F02               	movwf	?_in_low_int& (0+255),b
  4010  0029C4  0012               	return	
  4011  0029C6                     l3306:
  4012                           
  4013                           ; BSR set to: 1
  4014                           ;interrupts.c: 37: return (1);
  4015  0029C6  0E00               	movlw	0
  4016  0029C8  0101               	movlb	1	; () banked
  4017  0029CA  0101               	movlb	1	; () banked
  4018  0029CC  6F03               	movwf	(?_in_low_int+1)& (0+255),b
  4019  0029CE  0E01               	movlw	1
  4020  0029D0  0101               	movlb	1	; () banked
  4021  0029D2  6F02               	movwf	?_in_low_int& (0+255),b
  4022  0029D4  0012               	return	
  4023  0029D6                     __end_of_in_low_int:
  4024                           	opt stack 0
  4025                           tblptru	equ	0xFF8
  4026                           tblptrh	equ	0xFF7
  4027                           tblptrl	equ	0xFF6
  4028                           tablat	equ	0xFF5
  4029                           prodh	equ	0xFF4
  4030                           prodl	equ	0xFF3
  4031                           intcon	equ	0xFF2
  4032                           intcon2	equ	0xFF1
  4033                           postinc0	equ	0xFEE
  4034                           wreg	equ	0xFE8
  4035                           indf1	equ	0xFE7
  4036                           postdec1	equ	0xFE5
  4037                           fsr1h	equ	0xFE2
  4038                           fsr1l	equ	0xFE1
  4039                           indf2	equ	0xFDF
  4040                           postinc2	equ	0xFDE
  4041                           postdec2	equ	0xFDD
  4042                           fsr2h	equ	0xFDA
  4043                           fsr2l	equ	0xFD9
  4044                           status	equ	0xFD8
  4045                           
  4046 ;; *************** function _in_high_int *****************
  4047 ;; Defined at:
  4048 ;;		line 23 in file "../src/interrupts.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;		None
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;		None
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  2    0[BANK1 ] int 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4062 ;;      Params:         0       0       2       0       0
  4063 ;;      Locals:         0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0
  4065 ;;      Totals:         0       0       2       0       0
  4066 ;;Total ram usage:        2 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:   11
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_in_low_int
  4073 ;;		_in_main
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text18
  4078  002D6E                     __ptext18:
  4079                           	opt stack 0
  4080  002D6E                     _in_high_int:
  4081                           	opt stack 16
  4082                           
  4083                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  4084                           
  4085                           ; BSR set to: 1
  4086                           ;incstack = 0
  4087  002D6E  0E00               	movlw	0
  4088  002D70  AEF2               	btfss	intcon,7,c	;volatile
  4089  002D72  0E01               	movlw	1
  4090  002D74  0101               	movlb	1	; () banked
  4091  002D76  0101               	movlb	1	; () banked
  4092  002D78  6F00               	movwf	?_in_high_int& (0+255),b
  4093  002D7A  0101               	movlb	1	; () banked
  4094  002D7C  6B01               	clrf	(?_in_high_int+1)& (0+255),b
  4095  002D7E  0012               	return	
  4096  002D80                     __end_of_in_high_int:
  4097                           	opt stack 0
  4098                           tblptru	equ	0xFF8
  4099                           tblptrh	equ	0xFF7
  4100                           tblptrl	equ	0xFF6
  4101                           tablat	equ	0xFF5
  4102                           prodh	equ	0xFF4
  4103                           prodl	equ	0xFF3
  4104                           intcon	equ	0xFF2
  4105                           intcon2	equ	0xFF1
  4106                           postinc0	equ	0xFEE
  4107                           wreg	equ	0xFE8
  4108                           indf1	equ	0xFE7
  4109                           postdec1	equ	0xFE5
  4110                           fsr1h	equ	0xFE2
  4111                           fsr1l	equ	0xFE1
  4112                           indf2	equ	0xFDF
  4113                           postinc2	equ	0xFDE
  4114                           postdec2	equ	0xFDD
  4115                           fsr2h	equ	0xFDA
  4116                           fsr2l	equ	0xFD9
  4117                           status	equ	0xFD8
  4118                           
  4119 ;; *************** function _check_msg *****************
  4120 ;; Defined at:
  4121 ;;		line 222 in file "../src/messages.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4124 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      unsigned char 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4136 ;;      Params:         0       0       2       0       0
  4137 ;;      Locals:         0       0       0       0       0
  4138 ;;      Temps:          0       0       1       0       0
  4139 ;;      Totals:         0       0       3       0       0
  4140 ;;Total ram usage:        3 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:   11
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_block_on_To_msgqueues
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text19
  4151  002B92                     __ptext19:
  4152                           	opt stack 0
  4153  002B92                     _check_msg:
  4154                           	opt stack 18
  4155                           
  4156                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4157                           
  4158                           ; BSR set to: 1
  4159                           ;incstack = 0
  4160  002B92  0101               	movlb	1	; () banked
  4161  002B94  EE20 F042          	lfsr	2,66
  4162  002B98  0101               	movlb	1	; () banked
  4163  002B9A  5100               	movf	check_msg@qptr& (0+255),w,b
  4164  002B9C  26D9               	addwf	fsr2l,f,c
  4165  002B9E  0101               	movlb	1	; () banked
  4166  002BA0  5101               	movf	(check_msg@qptr+1)& (0+255),w,b
  4167  002BA2  22DA               	addwfc	fsr2h,f,c
  4168  002BA4  50DF               	movf	indf2,w,c
  4169  002BA6  0101               	movlb	1	; () banked
  4170  002BA8  6F02               	movwf	??_check_msg& (0+255),b
  4171  002BAA  0101               	movlb	1	; () banked
  4172  002BAC  5102               	movf	??_check_msg& (0+255),w,b
  4173  002BAE  0D0D               	mullw	13
  4174  002BB0  50F3               	movf	prodl,w,c
  4175  002BB2  0101               	movlb	1	; () banked
  4176  002BB4  0101               	movlb	1	; () banked
  4177  002BB6  2500               	addwf	check_msg@qptr& (0+255),w,b
  4178  002BB8  6ED9               	movwf	fsr2l,c
  4179  002BBA  50F4               	movf	prodh,w,c
  4180  002BBC  0101               	movlb	1	; () banked
  4181  002BBE  0101               	movlb	1	; () banked
  4182  002BC0  2101               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4183  002BC2  6EDA               	movwf	fsr2h,c
  4184  002BC4  50DF               	movf	indf2,w,c
  4185  002BC6  0012               	return	
  4186  002BC8                     __end_of_check_msg:
  4187                           	opt stack 0
  4188                           tblptru	equ	0xFF8
  4189                           tblptrh	equ	0xFF7
  4190                           tblptrl	equ	0xFF6
  4191                           tablat	equ	0xFF5
  4192                           prodh	equ	0xFF4
  4193                           prodl	equ	0xFF3
  4194                           intcon	equ	0xFF2
  4195                           intcon2	equ	0xFF1
  4196                           postinc0	equ	0xFEE
  4197                           wreg	equ	0xFE8
  4198                           indf1	equ	0xFE7
  4199                           postdec1	equ	0xFE5
  4200                           fsr1h	equ	0xFE2
  4201                           fsr1l	equ	0xFE1
  4202                           indf2	equ	0xFDF
  4203                           postinc2	equ	0xFDE
  4204                           postdec2	equ	0xFDD
  4205                           fsr2h	equ	0xFDA
  4206                           fsr2l	equ	0xFD9
  4207                           status	equ	0xFD8
  4208                           
  4209 ;; *************** function _Delay1KTCYx *****************
  4210 ;; Defined at:
  4211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  unit            1    wreg     unsigned char 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  unit            1    0[BANK1 ] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;		None               void
  4218 ;; Registers used:
  4219 ;;		wreg
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4225 ;;      Params:         0       0       0       0       0
  4226 ;;      Locals:         0       0       1       0       0
  4227 ;;      Temps:          0       0       0       0       0
  4228 ;;      Totals:         0       0       1       0       0
  4229 ;;Total ram usage:        1 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:   11
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_block_on_To_msgqueues
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text20
  4240  002D20                     __ptext20:
  4241                           	opt stack 0
  4242  002D20                     _Delay1KTCYx:
  4243                           	opt stack 18
  4244                           
  4245                           ; BSR set to: 1
  4246                           ;incstack = 0
  4247                           ;Delay1KTCYx@unit stored from wreg
  4248  002D20  CFE8 F100          	movff	wreg,Delay1KTCYx@unit
  4249  002D24                     l906:
  4250  002D24  0EFA               	movlw	250
  4251  002D26                     u4237:
  4252  002D26  F000               	nop	
  4253  002D28  2EE8               	decfsz	wreg,f,c
  4254  002D2A  D7FD               	goto	u4237
  4255  002D2C  0101               	movlb	1	; () banked
  4256  002D2E  0101               	movlb	1	; () banked
  4257  002D30  2F00               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4258  002D32  D7F8               	goto	l906
  4259  002D34  0012               	return	
  4260  002D36                     __end_of_Delay1KTCYx:
  4261                           	opt stack 0
  4262                           tblptru	equ	0xFF8
  4263                           tblptrh	equ	0xFF7
  4264                           tblptrl	equ	0xFF6
  4265                           tablat	equ	0xFF5
  4266                           prodh	equ	0xFF4
  4267                           prodl	equ	0xFF3
  4268                           intcon	equ	0xFF2
  4269                           intcon2	equ	0xFF1
  4270                           postinc0	equ	0xFEE
  4271                           wreg	equ	0xFE8
  4272                           indf1	equ	0xFE7
  4273                           postdec1	equ	0xFE5
  4274                           fsr1h	equ	0xFE2
  4275                           fsr1l	equ	0xFE1
  4276                           indf2	equ	0xFDF
  4277                           postinc2	equ	0xFDE
  4278                           postdec2	equ	0xFDD
  4279                           fsr2h	equ	0xFDA
  4280                           fsr2l	equ	0xFD9
  4281                           status	equ	0xFD8
  4282                           
  4283 ;; *************** function _ToMainLow_recvmsg *****************
  4284 ;; Defined at:
  4285 ;;		line 112 in file "../src/messages.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  maxlength       1    wreg     unsigned char 
  4288 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4289 ;;		 -> main@msgtype(1), 
  4290 ;;  data            2   26[BANK1 ] PTR void 
  4291 ;;		 -> main@msgbuffer(11), 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      char 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4303 ;;      Params:         0       0       4       0       0
  4304 ;;      Locals:         0       0       1       0       0
  4305 ;;      Temps:          0       0       0       0       0
  4306 ;;      Totals:         0       0       5       0       0
  4307 ;;Total ram usage:        5 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:   13
  4310 ;; This function calls:
  4311 ;;		_recv_msg
  4312 ;; This function is called by:
  4313 ;;		_main
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text21
  4318  002A60                     __ptext21:
  4319                           	opt stack 0
  4320  002A60                     _ToMainLow_recvmsg:
  4321                           	opt stack 17
  4322                           
  4323                           ; BSR set to: 1
  4324                           ;incstack = 0
  4325                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4326  002A60  CFE8 F11C          	movff	wreg,ToMainLow_recvmsg@maxlength
  4327                           
  4328                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4329  002A64  0101               	movlb	1	; () banked
  4330  002A66  0E01               	movlw	high _ToMainLow_MQ
  4331  002A68  0101               	movlb	1	; () banked
  4332  002A6A  0101               	movlb	1	; () banked
  4333  002A6C  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  4334  002A6E  0101               	movlb	1	; () banked
  4335  002A70  0E82               	movlw	low _ToMainLow_MQ
  4336  002A72  0101               	movlb	1	; () banked
  4337  002A74  0101               	movlb	1	; () banked
  4338  002A76  6F0A               	movwf	recv_msg@qptr& (0+255),b
  4339  002A78  C11C  F10C         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4340  002A7C  0101               	movlb	1	; () banked
  4341  002A7E  0101               	movlb	1	; () banked
  4342  002A80  C119  F10E         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4343  002A84  0101               	movlb	1	; () banked
  4344  002A86  0101               	movlb	1	; () banked
  4345  002A88  C118  F10D         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4346  002A8C  0101               	movlb	1	; () banked
  4347  002A8E  0101               	movlb	1	; () banked
  4348  002A90  C11B  F110         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4349  002A94  0101               	movlb	1	; () banked
  4350  002A96  0101               	movlb	1	; () banked
  4351  002A98  C11A  F10F         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4352  002A9C  ECC1  F007         	call	_recv_msg	;wreg free
  4353  002AA0  0012               	return	
  4354  002AA2                     __end_of_ToMainLow_recvmsg:
  4355                           	opt stack 0
  4356                           tblptru	equ	0xFF8
  4357                           tblptrh	equ	0xFF7
  4358                           tblptrl	equ	0xFF6
  4359                           tablat	equ	0xFF5
  4360                           prodh	equ	0xFF4
  4361                           prodl	equ	0xFF3
  4362                           intcon	equ	0xFF2
  4363                           intcon2	equ	0xFF1
  4364                           postinc0	equ	0xFEE
  4365                           wreg	equ	0xFE8
  4366                           indf1	equ	0xFE7
  4367                           postdec1	equ	0xFE5
  4368                           fsr1h	equ	0xFE2
  4369                           fsr1l	equ	0xFE1
  4370                           indf2	equ	0xFDF
  4371                           postinc2	equ	0xFDE
  4372                           postdec2	equ	0xFDD
  4373                           fsr2h	equ	0xFDA
  4374                           fsr2l	equ	0xFD9
  4375                           status	equ	0xFD8
  4376                           
  4377 ;; *************** function _ToMainHigh_recvmsg *****************
  4378 ;; Defined at:
  4379 ;;		line 135 in file "../src/messages.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  maxlength       1    wreg     unsigned char 
  4382 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4383 ;;		 -> main@msgtype(1), 
  4384 ;;  data            2   26[BANK1 ] PTR void 
  4385 ;;		 -> main@msgbuffer(11), 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      char 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4397 ;;      Params:         0       0       4       0       0
  4398 ;;      Locals:         0       0       1       0       0
  4399 ;;      Temps:          0       0       0       0       0
  4400 ;;      Totals:         0       0       5       0       0
  4401 ;;Total ram usage:        5 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:   13
  4404 ;; This function calls:
  4405 ;;		_recv_msg
  4406 ;; This function is called by:
  4407 ;;		_main
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text22
  4412  002AA2                     __ptext22:
  4413                           	opt stack 0
  4414  002AA2                     _ToMainHigh_recvmsg:
  4415                           	opt stack 17
  4416                           
  4417                           ;incstack = 0
  4418                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4419  002AA2  CFE8 F11C          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4420                           
  4421                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4422  002AA6  0102               	movlb	2	; () banked
  4423  002AA8  0E02               	movlw	high _ToMainHigh_MQ
  4424  002AAA  0101               	movlb	1	; () banked
  4425  002AAC  0101               	movlb	1	; () banked
  4426  002AAE  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  4427  002AB0  0102               	movlb	2	; () banked
  4428  002AB2  0E86               	movlw	low _ToMainHigh_MQ
  4429  002AB4  0101               	movlb	1	; () banked
  4430  002AB6  0101               	movlb	1	; () banked
  4431  002AB8  6F0A               	movwf	recv_msg@qptr& (0+255),b
  4432  002ABA  C11C  F10C         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4433  002ABE  0101               	movlb	1	; () banked
  4434  002AC0  0101               	movlb	1	; () banked
  4435  002AC2  C119  F10E         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4436  002AC6  0101               	movlb	1	; () banked
  4437  002AC8  0101               	movlb	1	; () banked
  4438  002ACA  C118  F10D         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4439  002ACE  0101               	movlb	1	; () banked
  4440  002AD0  0101               	movlb	1	; () banked
  4441  002AD2  C11B  F110         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4442  002AD6  0101               	movlb	1	; () banked
  4443  002AD8  0101               	movlb	1	; () banked
  4444  002ADA  C11A  F10F         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4445  002ADE  ECC1  F007         	call	_recv_msg	;wreg free
  4446  002AE2  0012               	return	
  4447  002AE4                     __end_of_ToMainHigh_recvmsg:
  4448                           	opt stack 0
  4449                           tblptru	equ	0xFF8
  4450                           tblptrh	equ	0xFF7
  4451                           tblptrl	equ	0xFF6
  4452                           tablat	equ	0xFF5
  4453                           prodh	equ	0xFF4
  4454                           prodl	equ	0xFF3
  4455                           intcon	equ	0xFF2
  4456                           intcon2	equ	0xFF1
  4457                           postinc0	equ	0xFEE
  4458                           wreg	equ	0xFE8
  4459                           indf1	equ	0xFE7
  4460                           postdec1	equ	0xFE5
  4461                           fsr1h	equ	0xFE2
  4462                           fsr1l	equ	0xFE1
  4463                           indf2	equ	0xFDF
  4464                           postinc2	equ	0xFDE
  4465                           postdec2	equ	0xFDD
  4466                           fsr2h	equ	0xFDA
  4467                           fsr2l	equ	0xFD9
  4468                           status	equ	0xFD8
  4469                           
  4470 ;; *************** function _recv_msg *****************
  4471 ;; Defined at:
  4472 ;;		line 63 in file "../src/messages.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4475 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4476 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4477 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4478 ;;		 -> main@msgtype(1), 
  4479 ;;  data            2   15[BANK1 ] PTR void 
  4480 ;;		 -> main@msgbuffer(11), 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4483 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4484 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4485 ;;  tlength         2   20[BANK1 ] unsigned int 
  4486 ;;  slot            1   19[BANK1 ] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      char 
  4489 ;; Registers used:
  4490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4496 ;;      Params:         0       0       7       0       0
  4497 ;;      Locals:         0       0       5       0       0
  4498 ;;      Temps:          0       0       2       0       0
  4499 ;;      Totals:         0       0      14       0       0
  4500 ;;Total ram usage:       14 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:   12
  4503 ;; This function calls:
  4504 ;;		___awmod
  4505 ;;		_memcpy
  4506 ;; This function is called by:
  4507 ;;		_ToMainLow_recvmsg
  4508 ;;		_ToMainHigh_recvmsg
  4509 ;;		_FromMainLow_recvmsg
  4510 ;;		_FromMainHigh_recvmsg
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text23
  4515  000F82                     __ptext23:
  4516                           	opt stack 0
  4517  000F82                     _recv_msg:
  4518                           	opt stack 17
  4519                           
  4520                           ;messages.c: 64: unsigned char slot;
  4521                           ;messages.c: 68: msg *qmsg;
  4522                           ;messages.c: 69: size_t tlength;
  4523                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4524                           
  4525                           ;incstack = 0
  4526  000F82  0101               	movlb	1	; () banked
  4527  000F84  EE20 F042          	lfsr	2,66
  4528  000F88  0101               	movlb	1	; () banked
  4529  000F8A  510A               	movf	recv_msg@qptr& (0+255),w,b
  4530  000F8C  26D9               	addwf	fsr2l,f,c
  4531  000F8E  0101               	movlb	1	; () banked
  4532  000F90  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4533  000F92  22DA               	addwfc	fsr2h,f,c
  4534  000F94  50DF               	movf	indf2,w,c
  4535  000F96  0101               	movlb	1	; () banked
  4536  000F98  0101               	movlb	1	; () banked
  4537  000F9A  6F13               	movwf	recv_msg@slot& (0+255),b
  4538                           
  4539                           ; BSR set to: 1
  4540                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4541  000F9C  0101               	movlb	1	; () banked
  4542  000F9E  0101               	movlb	1	; () banked
  4543  000FA0  5113               	movf	recv_msg@slot& (0+255),w,b
  4544  000FA2  0D0D               	mullw	13
  4545  000FA4  50F3               	movf	prodl,w,c
  4546  000FA6  0101               	movlb	1	; () banked
  4547  000FA8  0101               	movlb	1	; () banked
  4548  000FAA  250A               	addwf	recv_msg@qptr& (0+255),w,b
  4549  000FAC  0101               	movlb	1	; () banked
  4550  000FAE  0101               	movlb	1	; () banked
  4551  000FB0  6F16               	movwf	recv_msg@qmsg& (0+255),b
  4552  000FB2  50F4               	movf	prodh,w,c
  4553  000FB4  0101               	movlb	1	; () banked
  4554  000FB6  0101               	movlb	1	; () banked
  4555  000FB8  210B               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4556  000FBA  0101               	movlb	1	; () banked
  4557  000FBC  6F17               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4558                           
  4559                           ; BSR set to: 1
  4560                           ;messages.c: 74: if (qmsg->full == 1) {
  4561  000FBE  0E01               	movlw	1
  4562  000FC0  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  4563  000FC4  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4564  000FC8  62DF               	cpfseq	indf2,c
  4565  000FCA  D088               	goto	l3768
  4566                           
  4567                           ; BSR set to: 1
  4568                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4569  000FCC  0101               	movlb	1	; () banked
  4570  000FCE  EE20 F001          	lfsr	2,1
  4571  000FD2  0101               	movlb	1	; () banked
  4572  000FD4  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4573  000FD6  26D9               	addwf	fsr2l,f,c
  4574  000FD8  0101               	movlb	1	; () banked
  4575  000FDA  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4576  000FDC  22DA               	addwfc	fsr2h,f,c
  4577  000FDE  50DF               	movf	indf2,w,c
  4578  000FE0  0101               	movlb	1	; () banked
  4579  000FE2  0101               	movlb	1	; () banked
  4580  000FE4  5D0C               	subwf	recv_msg@maxlength& (0+255),w,b
  4581  000FE6  B0D8               	btfsc	status,0,c
  4582  000FE8  D002               	goto	l3752
  4583                           
  4584                           ; BSR set to: 1
  4585                           ;messages.c: 77: return (-3);
  4586  000FEA  0EFD               	movlw	253
  4587  000FEC  0012               	return	
  4588  000FEE                     l3752:
  4589                           
  4590                           ; BSR set to: 1
  4591                           ;messages.c: 78: }
  4592                           ;messages.c: 80: tlength = qmsg->length;
  4593  000FEE  0101               	movlb	1	; () banked
  4594  000FF0  EE20 F001          	lfsr	2,1
  4595  000FF4  0101               	movlb	1	; () banked
  4596  000FF6  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4597  000FF8  26D9               	addwf	fsr2l,f,c
  4598  000FFA  0101               	movlb	1	; () banked
  4599  000FFC  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4600  000FFE  22DA               	addwfc	fsr2h,f,c
  4601  001000  50DF               	movf	indf2,w,c
  4602  001002  0101               	movlb	1	; () banked
  4603  001004  6F11               	movwf	??_recv_msg& (0+255),b
  4604  001006  0101               	movlb	1	; () banked
  4605  001008  5111               	movf	??_recv_msg& (0+255),w,b
  4606  00100A  0101               	movlb	1	; () banked
  4607  00100C  0101               	movlb	1	; () banked
  4608  00100E  6F14               	movwf	recv_msg@tlength& (0+255),b
  4609  001010  0101               	movlb	1	; () banked
  4610  001012  6B15               	clrf	(recv_msg@tlength+1)& (0+255),b
  4611                           
  4612                           ; BSR set to: 1
  4613                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4614  001014  0101               	movlb	1	; () banked
  4615  001016  0101               	movlb	1	; () banked
  4616  001018  C110  F101         	movff	recv_msg@data+1,memcpy@d1+1
  4617  00101C  0101               	movlb	1	; () banked
  4618  00101E  0101               	movlb	1	; () banked
  4619  001020  C10F  F100         	movff	recv_msg@data,memcpy@d1
  4620  001024  0E03               	movlw	3
  4621  001026  0101               	movlb	1	; () banked
  4622  001028  0101               	movlb	1	; () banked
  4623  00102A  2516               	addwf	recv_msg@qmsg& (0+255),w,b
  4624  00102C  0101               	movlb	1	; () banked
  4625  00102E  6F11               	movwf	??_recv_msg& (0+255),b
  4626  001030  0E00               	movlw	0
  4627  001032  0101               	movlb	1	; () banked
  4628  001034  0101               	movlb	1	; () banked
  4629  001036  2117               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4630  001038  0101               	movlb	1	; () banked
  4631  00103A  6F12               	movwf	(??_recv_msg+1)& (0+255),b
  4632  00103C  C111  F102         	movff	??_recv_msg,memcpy@s1
  4633  001040  C112  F103         	movff	??_recv_msg+1,memcpy@s1+1
  4634  001044  C114  F104         	movff	recv_msg@tlength,memcpy@n
  4635  001048  C115  F105         	movff	recv_msg@tlength+1,memcpy@n+1
  4636  00104C  EC40  F014         	call	_memcpy	;wreg free
  4637                           
  4638                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4639  001050  0101               	movlb	1	; () banked
  4640  001052  EE20 F042          	lfsr	2,66
  4641  001056  0101               	movlb	1	; () banked
  4642  001058  510A               	movf	recv_msg@qptr& (0+255),w,b
  4643  00105A  26D9               	addwf	fsr2l,f,c
  4644  00105C  0101               	movlb	1	; () banked
  4645  00105E  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4646  001060  22DA               	addwfc	fsr2h,f,c
  4647  001062  0101               	movlb	1	; () banked
  4648  001064  EE10 F042          	lfsr	1,66
  4649  001068  0101               	movlb	1	; () banked
  4650  00106A  510A               	movf	recv_msg@qptr& (0+255),w,b
  4651  00106C  26E1               	addwf	fsr1l,f,c
  4652  00106E  0101               	movlb	1	; () banked
  4653  001070  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4654  001072  22E2               	addwfc	fsr1h,f,c
  4655  001074  50E7               	movf	indf1,w,c
  4656  001076  0101               	movlb	1	; () banked
  4657  001078  6F11               	movwf	??_recv_msg& (0+255),b
  4658  00107A  0E01               	movlw	1
  4659  00107C  0101               	movlb	1	; () banked
  4660  00107E  2511               	addwf	??_recv_msg& (0+255),w,b
  4661  001080  0101               	movlb	1	; () banked
  4662  001082  0101               	movlb	1	; () banked
  4663  001084  6F00               	movwf	___awmod@dividend& (0+255),b
  4664  001086  0101               	movlb	1	; () banked
  4665  001088  0101               	movlb	1	; () banked
  4666  00108A  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
  4667  00108C  0E00               	movlw	0
  4668  00108E  2301               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4669  001090  0E00               	movlw	0
  4670  001092  0101               	movlb	1	; () banked
  4671  001094  0101               	movlb	1	; () banked
  4672  001096  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
  4673  001098  0E05               	movlw	5
  4674  00109A  0101               	movlb	1	; () banked
  4675  00109C  6F02               	movwf	___awmod@divisor& (0+255),b
  4676  00109E  EC3B  F00A         	call	___awmod	;wreg free
  4677  0010A2  0101               	movlb	1	; () banked
  4678  0010A4  0101               	movlb	1	; () banked
  4679  0010A6  5100               	movf	?___awmod& (0+255),w,b
  4680  0010A8  6EDF               	movwf	indf2,c
  4681                           
  4682                           ; BSR set to: 1
  4683                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4684  0010AA  0101               	movlb	1	; () banked
  4685  0010AC  EE20 F002          	lfsr	2,2
  4686  0010B0  0101               	movlb	1	; () banked
  4687  0010B2  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4688  0010B4  26D9               	addwf	fsr2l,f,c
  4689  0010B6  0101               	movlb	1	; () banked
  4690  0010B8  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4691  0010BA  22DA               	addwfc	fsr2h,f,c
  4692  0010BC  C10D  FFE1         	movff	recv_msg@msgtype,fsr1l
  4693  0010C0  C10E  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4694  0010C4  CFDF FFE7          	movff	indf2,indf1
  4695                           
  4696                           ; BSR set to: 1
  4697                           ;messages.c: 91: qmsg->full = 0;
  4698  0010C8  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  4699  0010CC  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4700  0010D0  0E00               	movlw	0
  4701  0010D2  6EDF               	movwf	indf2,c
  4702                           
  4703                           ; BSR set to: 1
  4704                           ;messages.c: 92: return (tlength);
  4705  0010D4  0101               	movlb	1	; () banked
  4706  0010D6  0101               	movlb	1	; () banked
  4707  0010D8  5114               	movf	recv_msg@tlength& (0+255),w,b
  4708  0010DA  0012               	return	
  4709  0010DC                     l3768:
  4710                           
  4711                           ; BSR set to: 1
  4712                           ;messages.c: 94: return (-4);
  4713  0010DC  0EFC               	movlw	252
  4714  0010DE  0012               	return	
  4715  0010E0                     __end_of_recv_msg:
  4716                           	opt stack 0
  4717                           tblptru	equ	0xFF8
  4718                           tblptrh	equ	0xFF7
  4719                           tblptrl	equ	0xFF6
  4720                           tablat	equ	0xFF5
  4721                           prodh	equ	0xFF4
  4722                           prodl	equ	0xFF3
  4723                           intcon	equ	0xFF2
  4724                           intcon2	equ	0xFF1
  4725                           postinc0	equ	0xFEE
  4726                           wreg	equ	0xFE8
  4727                           indf1	equ	0xFE7
  4728                           postdec1	equ	0xFE5
  4729                           fsr1h	equ	0xFE2
  4730                           fsr1l	equ	0xFE1
  4731                           indf2	equ	0xFDF
  4732                           postinc2	equ	0xFDE
  4733                           postdec2	equ	0xFDD
  4734                           fsr2h	equ	0xFDA
  4735                           fsr2l	equ	0xFD9
  4736                           status	equ	0xFD8
  4737                           
  4738 ;; *************** function _memcpy *****************
  4739 ;; Defined at:
  4740 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  d1              2    0[BANK1 ] PTR void 
  4743 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4744 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4745 ;;		 -> main@msgbuffer(11), 
  4746 ;;  s1              2    2[BANK1 ] PTR const void 
  4747 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4748 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4749 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4750 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4751 ;;		 -> main@uc(15), 
  4752 ;;  n               2    4[BANK1 ] unsigned int 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4755 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4756 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4757 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4758 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4759 ;;		 -> main@uc(15), 
  4760 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4761 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4762 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4763 ;;		 -> main@msgbuffer(11), 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  2    0[BANK1 ] PTR void 
  4766 ;; Registers used:
  4767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4773 ;;      Params:         0       0       6       0       0
  4774 ;;      Locals:         0       0       4       0       0
  4775 ;;      Temps:          0       0       0       0       0
  4776 ;;      Totals:         0       0      10       0       0
  4777 ;;Total ram usage:       10 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:   11
  4780 ;; This function calls:
  4781 ;;		Nothing
  4782 ;; This function is called by:
  4783 ;;		_send_msg
  4784 ;;		_recv_msg
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text24
  4789  002880                     __ptext24:
  4790                           	opt stack 0
  4791  002880                     _memcpy:
  4792                           	opt stack 16
  4793                           
  4794                           ; BSR set to: 1
  4795                           ;incstack = 0
  4796  002880  0101               	movlb	1	; () banked
  4797  002882  0101               	movlb	1	; () banked
  4798  002884  C103  F109         	movff	memcpy@s1+1,memcpy@s+1
  4799  002888  0101               	movlb	1	; () banked
  4800  00288A  0101               	movlb	1	; () banked
  4801  00288C  C102  F108         	movff	memcpy@s1,memcpy@s
  4802  002890  0101               	movlb	1	; () banked
  4803  002892  0101               	movlb	1	; () banked
  4804  002894  C101  F107         	movff	memcpy@d1+1,memcpy@d+1
  4805  002898  0101               	movlb	1	; () banked
  4806  00289A  0101               	movlb	1	; () banked
  4807  00289C  C100  F106         	movff	memcpy@d1,memcpy@d
  4808  0028A0  D012               	goto	l3738
  4809  0028A2                     l3732:
  4810                           
  4811                           ; BSR set to: 1
  4812  0028A2  C108  FFD9         	movff	memcpy@s,fsr2l
  4813  0028A6  C109  FFDA         	movff	memcpy@s+1,fsr2h
  4814  0028AA  C106  FFE1         	movff	memcpy@d,fsr1l
  4815  0028AE  C107  FFE2         	movff	memcpy@d+1,fsr1h
  4816  0028B2  CFDF FFE7          	movff	indf2,indf1
  4817                           
  4818                           ; BSR set to: 1
  4819  0028B6  0101               	movlb	1	; () banked
  4820  0028B8  0101               	movlb	1	; () banked
  4821  0028BA  4B08               	infsnz	memcpy@s& (0+255),f,b
  4822  0028BC  2B09               	incf	(memcpy@s+1)& (0+255),f,b
  4823                           
  4824                           ; BSR set to: 1
  4825  0028BE  0101               	movlb	1	; () banked
  4826  0028C0  0101               	movlb	1	; () banked
  4827  0028C2  4B06               	infsnz	memcpy@d& (0+255),f,b
  4828  0028C4  2B07               	incf	(memcpy@d+1)& (0+255),f,b
  4829  0028C6                     l3738:
  4830                           
  4831                           ; BSR set to: 1
  4832  0028C6  0101               	movlb	1	; () banked
  4833  0028C8  0101               	movlb	1	; () banked
  4834  0028CA  0704               	decf	memcpy@n& (0+255),f,b
  4835  0028CC  A0D8               	btfss	status,0,c
  4836  0028CE  0705               	decf	(memcpy@n+1)& (0+255),f,b
  4837  0028D0  0101               	movlb	1	; () banked
  4838  0028D2  2904               	incf	memcpy@n& (0+255),w,b
  4839  0028D4  B4D8               	btfsc	status,2,c
  4840  0028D6  2905               	incf	(memcpy@n+1)& (0+255),w,b
  4841  0028D8  B4D8               	btfsc	status,2,c
  4842                           
  4843                           ; BSR set to: 1
  4844                           
  4845                           ; BSR set to: 1
  4846                           ;	Return value of _memcpy is never used
  4847  0028DA  0012               	return	
  4848  0028DC  D7E2               	goto	l3732
  4849  0028DE                     __end_of_memcpy:
  4850                           	opt stack 0
  4851                           tblptru	equ	0xFF8
  4852                           tblptrh	equ	0xFF7
  4853                           tblptrl	equ	0xFF6
  4854                           tablat	equ	0xFF5
  4855                           prodh	equ	0xFF4
  4856                           prodl	equ	0xFF3
  4857                           intcon	equ	0xFF2
  4858                           intcon2	equ	0xFF1
  4859                           postinc0	equ	0xFEE
  4860                           wreg	equ	0xFE8
  4861                           indf1	equ	0xFE7
  4862                           postdec1	equ	0xFE5
  4863                           fsr1h	equ	0xFE2
  4864                           fsr1l	equ	0xFE1
  4865                           indf2	equ	0xFDF
  4866                           postinc2	equ	0xFDE
  4867                           postdec2	equ	0xFDD
  4868                           fsr2h	equ	0xFDA
  4869                           fsr2l	equ	0xFD9
  4870                           status	equ	0xFD8
  4871                           
  4872 ;; *************** function ___awmod *****************
  4873 ;; Defined at:
  4874 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;  dividend        2    0[BANK1 ] int 
  4877 ;;  divisor         2    2[BANK1 ] int 
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;  sign            1    6[BANK1 ] unsigned char 
  4880 ;;  counter         1    5[BANK1 ] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  2    0[BANK1 ] int 
  4883 ;; Registers used:
  4884 ;;		wreg, status,2, status,0, prodl
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4890 ;;      Params:         0       0       4       0       0
  4891 ;;      Locals:         0       0       2       0       0
  4892 ;;      Temps:          0       0       1       0       0
  4893 ;;      Totals:         0       0       7       0       0
  4894 ;;Total ram usage:        7 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:   11
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_send_msg
  4901 ;;		_recv_msg
  4902 ;;		_adc_int_handler
  4903 ;;		i1_send_msg
  4904 ;;		i2_send_msg
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           	psect	text25
  4909  001476                     __ptext25:
  4910                           	opt stack 0
  4911  001476                     ___awmod:
  4912                           	opt stack 16
  4913                           
  4914                           ; BSR set to: 1
  4915                           ;incstack = 0
  4916  001476  0101               	movlb	1	; () banked
  4917  001478  6F04               	movwf	??___awmod& (0+255),b
  4918  00147A  0E00               	movlw	0
  4919  00147C  0101               	movlb	1	; () banked
  4920  00147E  0101               	movlb	1	; () banked
  4921  001480  6F06               	movwf	___awmod@sign& (0+255),b
  4922  001482  0101               	movlb	1	; () banked
  4923  001484  5104               	movf	??___awmod& (0+255),w,b
  4924                           
  4925                           ; BSR set to: 1
  4926  001486  0101               	movlb	1	; () banked
  4927  001488  0101               	movlb	1	; () banked
  4928  00148A  5101               	movf	(___awmod@dividend+1)& (0+255),w,b
  4929  00148C  0A80               	xorlw	128
  4930  00148E  6EF3               	movwf	prodl,c
  4931  001490  0E80               	movlw	128
  4932  001492  5CF3               	subwf	prodl,w,c
  4933  001494  0E00               	movlw	0
  4934  001496  B4D8               	btfsc	status,2,c
  4935  001498  5D00               	subwf	___awmod@dividend& (0+255),w,b
  4936  00149A  B0D8               	btfsc	status,0,c
  4937  00149C  D00F               	goto	l4156
  4938                           
  4939                           ; BSR set to: 1
  4940  00149E  0101               	movlb	1	; () banked
  4941  0014A0  0101               	movlb	1	; () banked
  4942  0014A2  6D00               	negf	___awmod@dividend& (0+255),b
  4943  0014A4  0101               	movlb	1	; () banked
  4944  0014A6  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  4945  0014A8  B0D8               	btfsc	status,0,c
  4946  0014AA  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  4947                           
  4948                           ; BSR set to: 1
  4949  0014AC  0101               	movlb	1	; () banked
  4950  0014AE  6F04               	movwf	??___awmod& (0+255),b
  4951  0014B0  0E01               	movlw	1
  4952  0014B2  0101               	movlb	1	; () banked
  4953  0014B4  0101               	movlb	1	; () banked
  4954  0014B6  6F06               	movwf	___awmod@sign& (0+255),b
  4955  0014B8  0101               	movlb	1	; () banked
  4956  0014BA  5104               	movf	??___awmod& (0+255),w,b
  4957  0014BC                     l4156:
  4958                           
  4959                           ; BSR set to: 1
  4960  0014BC  0101               	movlb	1	; () banked
  4961  0014BE  0101               	movlb	1	; () banked
  4962  0014C0  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  4963  0014C2  0A80               	xorlw	128
  4964  0014C4  6EF3               	movwf	prodl,c
  4965  0014C6  0E80               	movlw	128
  4966  0014C8  5CF3               	subwf	prodl,w,c
  4967  0014CA  0E00               	movlw	0
  4968  0014CC  B4D8               	btfsc	status,2,c
  4969  0014CE  5D02               	subwf	___awmod@divisor& (0+255),w,b
  4970  0014D0  B0D8               	btfsc	status,0,c
  4971  0014D2  D007               	goto	l4160
  4972                           
  4973                           ; BSR set to: 1
  4974  0014D4  0101               	movlb	1	; () banked
  4975  0014D6  0101               	movlb	1	; () banked
  4976  0014D8  6D02               	negf	___awmod@divisor& (0+255),b
  4977  0014DA  0101               	movlb	1	; () banked
  4978  0014DC  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
  4979  0014DE  B0D8               	btfsc	status,0,c
  4980  0014E0  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
  4981  0014E2                     l4160:
  4982                           
  4983                           ; BSR set to: 1
  4984  0014E2  0101               	movlb	1	; () banked
  4985  0014E4  0101               	movlb	1	; () banked
  4986  0014E6  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  4987  0014E8  1102               	iorwf	___awmod@divisor& (0+255),w,b
  4988  0014EA  B4D8               	btfsc	status,2,c
  4989  0014EC  D03A               	goto	l4176
  4990                           
  4991                           ; BSR set to: 1
  4992  0014EE  0101               	movlb	1	; () banked
  4993  0014F0  6F04               	movwf	??___awmod& (0+255),b
  4994  0014F2  0E01               	movlw	1
  4995  0014F4  0101               	movlb	1	; () banked
  4996  0014F6  0101               	movlb	1	; () banked
  4997  0014F8  6F05               	movwf	___awmod@counter& (0+255),b
  4998  0014FA  0101               	movlb	1	; () banked
  4999  0014FC  5104               	movf	??___awmod& (0+255),w,b
  5000  0014FE  D009               	goto	l4166
  5001  001500                     l4164:
  5002                           
  5003                           ; BSR set to: 1
  5004  001500  0101               	movlb	1	; () banked
  5005  001502  0101               	movlb	1	; () banked
  5006  001504  0101               	movlb	1	; () banked
  5007  001506  90D8               	bcf	status,0,c
  5008  001508  3702               	rlcf	___awmod@divisor& (0+255),f,b
  5009  00150A  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5010  00150C  0101               	movlb	1	; () banked
  5011  00150E  0101               	movlb	1	; () banked
  5012  001510  2B05               	incf	___awmod@counter& (0+255),f,b
  5013  001512                     l4166:
  5014                           
  5015                           ; BSR set to: 1
  5016  001512  0101               	movlb	1	; () banked
  5017  001514  0101               	movlb	1	; () banked
  5018  001516  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5019  001518  D7F3               	goto	l4164
  5020  00151A                     l4168:
  5021                           
  5022                           ; BSR set to: 1
  5023  00151A  0101               	movlb	1	; () banked
  5024  00151C  0101               	movlb	1	; () banked
  5025  00151E  5102               	movf	___awmod@divisor& (0+255),w,b
  5026  001520  0101               	movlb	1	; () banked
  5027  001522  0101               	movlb	1	; () banked
  5028  001524  5D00               	subwf	___awmod@dividend& (0+255),w,b
  5029  001526  0101               	movlb	1	; () banked
  5030  001528  0101               	movlb	1	; () banked
  5031  00152A  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  5032  00152C  0101               	movlb	1	; () banked
  5033  00152E  0101               	movlb	1	; () banked
  5034  001530  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5035  001532  A0D8               	btfss	status,0,c
  5036  001534  D00C               	goto	l4172
  5037                           
  5038                           ; BSR set to: 1
  5039  001536  0101               	movlb	1	; () banked
  5040  001538  0101               	movlb	1	; () banked
  5041  00153A  5102               	movf	___awmod@divisor& (0+255),w,b
  5042  00153C  0101               	movlb	1	; () banked
  5043  00153E  0101               	movlb	1	; () banked
  5044  001540  5F00               	subwf	___awmod@dividend& (0+255),f,b
  5045  001542  0101               	movlb	1	; () banked
  5046  001544  0101               	movlb	1	; () banked
  5047  001546  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  5048  001548  0101               	movlb	1	; () banked
  5049  00154A  0101               	movlb	1	; () banked
  5050  00154C  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5051  00154E                     l4172:
  5052                           
  5053                           ; BSR set to: 1
  5054  00154E  0101               	movlb	1	; () banked
  5055  001550  0101               	movlb	1	; () banked
  5056  001552  0101               	movlb	1	; () banked
  5057  001554  90D8               	bcf	status,0,c
  5058  001556  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5059  001558  3302               	rrcf	___awmod@divisor& (0+255),f,b
  5060                           
  5061                           ; BSR set to: 1
  5062  00155A  0101               	movlb	1	; () banked
  5063  00155C  0101               	movlb	1	; () banked
  5064  00155E  2F05               	decfsz	___awmod@counter& (0+255),f,b
  5065  001560  D7DC               	goto	l4168
  5066  001562                     l4176:
  5067                           
  5068                           ; BSR set to: 1
  5069  001562  0101               	movlb	1	; () banked
  5070  001564  0101               	movlb	1	; () banked
  5071  001566  5106               	movf	___awmod@sign& (0+255),w,b
  5072  001568  B4D8               	btfsc	status,2,c
  5073  00156A  D007               	goto	l4180
  5074                           
  5075                           ; BSR set to: 1
  5076  00156C  0101               	movlb	1	; () banked
  5077  00156E  0101               	movlb	1	; () banked
  5078  001570  6D00               	negf	___awmod@dividend& (0+255),b
  5079  001572  0101               	movlb	1	; () banked
  5080  001574  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  5081  001576  B0D8               	btfsc	status,0,c
  5082  001578  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  5083  00157A                     l4180:
  5084                           
  5085                           ; BSR set to: 1
  5086  00157A  C100  F100         	movff	___awmod@dividend,?___awmod
  5087  00157E  C101  F101         	movff	___awmod@dividend+1,?___awmod+1
  5088  001582  0012               	return	
  5089  001584                     __end_of___awmod:
  5090                           	opt stack 0
  5091                           tblptru	equ	0xFF8
  5092                           tblptrh	equ	0xFF7
  5093                           tblptrl	equ	0xFF6
  5094                           tablat	equ	0xFF5
  5095                           prodh	equ	0xFF4
  5096                           prodl	equ	0xFF3
  5097                           intcon	equ	0xFF2
  5098                           intcon2	equ	0xFF1
  5099                           postinc0	equ	0xFEE
  5100                           wreg	equ	0xFE8
  5101                           indf1	equ	0xFE7
  5102                           postdec1	equ	0xFE5
  5103                           fsr1h	equ	0xFE2
  5104                           fsr1l	equ	0xFE1
  5105                           indf2	equ	0xFDF
  5106                           postinc2	equ	0xFDE
  5107                           postdec2	equ	0xFDD
  5108                           fsr2h	equ	0xFDA
  5109                           fsr2l	equ	0xFD9
  5110                           status	equ	0xFD8
  5111                           
  5112 ;; *************** function _SetChanADC *****************
  5113 ;; Defined at:
  5114 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;  channel         1    wreg     unsigned char 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  channel         1    1[BANK1 ] unsigned char 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;		None               void
  5121 ;; Registers used:
  5122 ;;		wreg, status,2, status,0
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5128 ;;      Params:         0       0       0       0       0
  5129 ;;      Locals:         0       0       1       0       0
  5130 ;;      Temps:          0       0       1       0       0
  5131 ;;      Totals:         0       0       2       0       0
  5132 ;;Total ram usage:        2 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:   11
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_main
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text26
  5143  002CAC                     __ptext26:
  5144                           	opt stack 0
  5145  002CAC                     _SetChanADC:
  5146                           	opt stack 19
  5147                           
  5148                           ; BSR set to: 1
  5149                           ;incstack = 0
  5150                           ;SetChanADC@channel stored from wreg
  5151  002CAC  CFE8 F101          	movff	wreg,SetChanADC@channel
  5152  002CB0  CFC2 F100          	movff	4034,??_SetChanADC	;volatile
  5153  002CB4  0EC3               	movlw	195
  5154  002CB6  0101               	movlb	1	; () banked
  5155  002CB8  1700               	andwf	??_SetChanADC& (0+255),f,b
  5156  002CBA  0101               	movlb	1	; () banked
  5157  002CBC  0101               	movlb	1	; () banked
  5158  002CBE  90D8               	bcf	status,0,c
  5159  002CC0  3101               	rrcf	SetChanADC@channel& (0+255),w,b
  5160  002CC2  0B3C               	andlw	60
  5161  002CC4  0101               	movlb	1	; () banked
  5162  002CC6  1100               	iorwf	??_SetChanADC& (0+255),w,b
  5163  002CC8  6EC2               	movwf	4034,c	;volatile
  5164                           
  5165                           ; BSR set to: 1
  5166  002CCA  0012               	return	
  5167  002CCC                     __end_of_SetChanADC:
  5168                           	opt stack 0
  5169                           tblptru	equ	0xFF8
  5170                           tblptrh	equ	0xFF7
  5171                           tblptrl	equ	0xFF6
  5172                           tablat	equ	0xFF5
  5173                           prodh	equ	0xFF4
  5174                           prodl	equ	0xFF3
  5175                           intcon	equ	0xFF2
  5176                           intcon2	equ	0xFF1
  5177                           postinc0	equ	0xFEE
  5178                           wreg	equ	0xFE8
  5179                           indf1	equ	0xFE7
  5180                           postdec1	equ	0xFE5
  5181                           fsr1h	equ	0xFE2
  5182                           fsr1l	equ	0xFE1
  5183                           indf2	equ	0xFDF
  5184                           postinc2	equ	0xFDE
  5185                           postdec2	equ	0xFDD
  5186                           fsr2h	equ	0xFDA
  5187                           fsr2l	equ	0xFD9
  5188                           status	equ	0xFD8
  5189                           
  5190 ;; *************** function _OpenUSART *****************
  5191 ;; Defined at:
  5192 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  config          1    wreg     unsigned char 
  5195 ;;  spbrg           2    0[BANK1 ] unsigned int 
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;  config          1    5[BANK1 ] unsigned char 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;		None               void
  5200 ;; Registers used:
  5201 ;;		wreg, status,2
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5207 ;;      Params:         0       0       2       0       0
  5208 ;;      Locals:         0       0       1       0       0
  5209 ;;      Temps:          0       0       3       0       0
  5210 ;;      Totals:         0       0       6       0       0
  5211 ;;Total ram usage:        6 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; Hardware stack levels required when called:   11
  5214 ;; This function calls:
  5215 ;;		Nothing
  5216 ;; This function is called by:
  5217 ;;		_main
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text27
  5222  002130                     __ptext27:
  5223                           	opt stack 0
  5224  002130                     _OpenUSART:
  5225                           	opt stack 19
  5226                           
  5227                           ; BSR set to: 1
  5228                           ;incstack = 0
  5229                           ;OpenUSART@config stored from wreg
  5230  002130  CFE8 F105          	movff	wreg,OpenUSART@config
  5231  002134  0E00               	movlw	0
  5232  002136  6EAC               	movwf	4012,c	;volatile
  5233  002138  0E00               	movlw	0
  5234  00213A  6EAB               	movwf	4011,c	;volatile
  5235  00213C  0101               	movlb	1	; () banked
  5236  00213E  0101               	movlb	1	; () banked
  5237  002140  B105               	btfsc	OpenUSART@config& (0+255),0,b
  5238                           
  5239                           ; BSR set to: 1
  5240  002142  88AC               	bsf	4012,4,c	;volatile
  5241                           
  5242                           ; BSR set to: 1
  5243                           
  5244                           ; BSR set to: 1
  5245  002144  0101               	movlb	1	; () banked
  5246  002146  0101               	movlb	1	; () banked
  5247  002148  A305               	btfss	OpenUSART@config& (0+255),1,b
  5248  00214A  D002               	goto	l3574
  5249                           
  5250                           ; BSR set to: 1
  5251  00214C  8CAC               	bsf	4012,6,c	;volatile
  5252  00214E  8CAB               	bsf	4011,6,c	;volatile
  5253  002150                     l3574:
  5254                           
  5255                           ; BSR set to: 1
  5256  002150  0101               	movlb	1	; () banked
  5257  002152  0101               	movlb	1	; () banked
  5258  002154  B505               	btfsc	OpenUSART@config& (0+255),2,b
  5259                           
  5260                           ; BSR set to: 1
  5261  002156  8EAC               	bsf	4012,7,c	;volatile
  5262                           
  5263                           ; BSR set to: 1
  5264                           
  5265                           ; BSR set to: 1
  5266  002158  0101               	movlb	1	; () banked
  5267  00215A  0101               	movlb	1	; () banked
  5268  00215C  A705               	btfss	OpenUSART@config& (0+255),3,b
  5269  00215E  D002               	goto	l673
  5270                           
  5271                           ; BSR set to: 1
  5272  002160  88AB               	bsf	4011,4,c	;volatile
  5273  002162  D001               	goto	l3582
  5274  002164                     l673:
  5275                           
  5276                           ; BSR set to: 1
  5277  002164  8AAB               	bsf	4011,5,c	;volatile
  5278  002166                     l3582:
  5279                           
  5280                           ; BSR set to: 1
  5281  002166  0101               	movlb	1	; () banked
  5282  002168  0101               	movlb	1	; () banked
  5283  00216A  B905               	btfsc	OpenUSART@config& (0+255),4,b
  5284                           
  5285                           ; BSR set to: 1
  5286  00216C  84AC               	bsf	4012,2,c	;volatile
  5287                           
  5288                           ; BSR set to: 1
  5289  00216E  989E               	bcf	3998,4,c	;volatile
  5290                           
  5291                           ; BSR set to: 1
  5292  002170  0101               	movlb	1	; () banked
  5293  002172  0101               	movlb	1	; () banked
  5294  002174  BB05               	btfsc	OpenUSART@config& (0+255),5,b
  5295                           
  5296                           ; BSR set to: 1
  5297  002176  86AB               	bsf	4011,3,c	;volatile
  5298                           
  5299                           ; BSR set to: 1
  5300                           
  5301                           ; BSR set to: 1
  5302  002178  0101               	movlb	1	; () banked
  5303  00217A  0101               	movlb	1	; () banked
  5304  00217C  AD05               	btfss	OpenUSART@config& (0+255),6,b
  5305  00217E  D002               	goto	l677
  5306                           
  5307                           ; BSR set to: 1
  5308  002180  8A9D               	bsf	3997,5,c	;volatile
  5309  002182  D001               	goto	l678
  5310  002184                     l677:
  5311                           
  5312                           ; BSR set to: 1
  5313  002184  9A9D               	bcf	3997,5,c	;volatile
  5314  002186                     l678:
  5315                           
  5316                           ; BSR set to: 1
  5317  002186  9A9E               	bcf	3998,5,c	;volatile
  5318                           
  5319                           ; BSR set to: 1
  5320  002188  0101               	movlb	1	; () banked
  5321  00218A  0101               	movlb	1	; () banked
  5322  00218C  AF05               	btfss	OpenUSART@config& (0+255),7,b
  5323  00218E  D002               	goto	l679
  5324                           
  5325                           ; BSR set to: 1
  5326  002190  889D               	bsf	3997,4,c	;volatile
  5327  002192  D001               	goto	l680
  5328  002194                     l679:
  5329                           
  5330                           ; BSR set to: 1
  5331  002194  989D               	bcf	3997,4,c	;volatile
  5332  002196                     l680:
  5333                           
  5334                           ; BSR set to: 1
  5335  002196  C100  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5336                           
  5337                           ; BSR set to: 1
  5338  00219A  0101               	movlb	1	; () banked
  5339  00219C  C101  F102         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5340  0021A0  C102  F103         	movff	??_OpenUSART,??_OpenUSART+1
  5341  0021A4  0101               	movlb	1	; () banked
  5342  0021A6  6B04               	clrf	(??_OpenUSART+2)& (0+255),b
  5343  0021A8  0101               	movlb	1	; () banked
  5344  0021AA  5103               	movf	(??_OpenUSART+1)& (0+255),w,b
  5345  0021AC  6EB0               	movwf	4016,c	;volatile
  5346                           
  5347                           ; BSR set to: 1
  5348  0021AE  8AAC               	bsf	4012,5,c	;volatile
  5349                           
  5350                           ; BSR set to: 1
  5351  0021B0  8EAB               	bsf	4011,7,c	;volatile
  5352                           
  5353                           ; BSR set to: 1
  5354  0021B2  9C94               	bcf	3988,6,c	;volatile
  5355                           
  5356                           ; BSR set to: 1
  5357  0021B4  8E94               	bsf	3988,7,c	;volatile
  5358                           
  5359                           ; BSR set to: 1
  5360  0021B6  A8AC               	btfss	4012,4,c	;volatile
  5361  0021B8  0012               	return	
  5362                           
  5363                           ; BSR set to: 1
  5364  0021BA  BEAC               	btfsc	4012,7,c	;volatile
  5365  0021BC  0012               	return	
  5366                           
  5367                           ; BSR set to: 1
  5368  0021BE  8C94               	bsf	3988,6,c	;volatile
  5369  0021C0  0012               	return	
  5370  0021C2                     __end_of_OpenUSART:
  5371                           	opt stack 0
  5372                           tblptru	equ	0xFF8
  5373                           tblptrh	equ	0xFF7
  5374                           tblptrl	equ	0xFF6
  5375                           tablat	equ	0xFF5
  5376                           prodh	equ	0xFF4
  5377                           prodl	equ	0xFF3
  5378                           intcon	equ	0xFF2
  5379                           intcon2	equ	0xFF1
  5380                           postinc0	equ	0xFEE
  5381                           wreg	equ	0xFE8
  5382                           indf1	equ	0xFE7
  5383                           postdec1	equ	0xFE5
  5384                           fsr1h	equ	0xFE2
  5385                           fsr1l	equ	0xFE1
  5386                           indf2	equ	0xFDF
  5387                           postinc2	equ	0xFDE
  5388                           postdec2	equ	0xFDD
  5389                           fsr2h	equ	0xFDA
  5390                           fsr2l	equ	0xFD9
  5391                           status	equ	0xFD8
  5392                           
  5393 ;; *************** function _OpenTimer1 *****************
  5394 ;; Defined at:
  5395 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;  config          1    wreg     unsigned char 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  config          1    0[BANK1 ] unsigned char 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;		None               void
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5409 ;;      Params:         0       0       0       0       0
  5410 ;;      Locals:         0       0       1       0       0
  5411 ;;      Temps:          0       0       0       0       0
  5412 ;;      Totals:         0       0       1       0       0
  5413 ;;Total ram usage:        1 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:   11
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_main
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text28
  5424  002B24                     __ptext28:
  5425                           	opt stack 0
  5426  002B24                     _OpenTimer1:
  5427                           	opt stack 19
  5428                           
  5429                           ; BSR set to: 1
  5430                           ;incstack = 0
  5431                           ;OpenTimer1@config stored from wreg
  5432  002B24  CFE8 F100          	movff	wreg,OpenTimer1@config
  5433  002B28  0101               	movlb	1	; () banked
  5434  002B2A  0101               	movlb	1	; () banked
  5435  002B2C  5100               	movf	OpenTimer1@config& (0+255),w,b
  5436  002B2E  0B7E               	andlw	126
  5437  002B30  6ECD               	movwf	4045,c	;volatile
  5438                           
  5439                           ; BSR set to: 1
  5440  002B32  0101               	movlb	1	; () banked
  5441  002B34  0101               	movlb	1	; () banked
  5442  002B36  AD00               	btfss	OpenTimer1@config& (0+255),6,b
  5443  002B38  D002               	goto	l636
  5444                           
  5445                           ; BSR set to: 1
  5446  002B3A  8ECD               	bsf	4045,7,c	;volatile
  5447  002B3C  D001               	goto	l3534
  5448  002B3E                     l636:
  5449                           
  5450                           ; BSR set to: 1
  5451  002B3E  9ECD               	bcf	4045,7,c	;volatile
  5452  002B40                     l3534:
  5453                           
  5454                           ; BSR set to: 1
  5455  002B40  0E00               	movlw	0
  5456  002B42  6ECF               	movwf	4047,c	;volatile
  5457  002B44  0E00               	movlw	0
  5458  002B46  6ECE               	movwf	4046,c	;volatile
  5459                           
  5460                           ; BSR set to: 1
  5461  002B48  909E               	bcf	3998,0,c	;volatile
  5462                           
  5463                           ; BSR set to: 1
  5464  002B4A  0101               	movlb	1	; () banked
  5465  002B4C  0101               	movlb	1	; () banked
  5466  002B4E  AF00               	btfss	OpenTimer1@config& (0+255),7,b
  5467  002B50  D002               	goto	l638
  5468                           
  5469                           ; BSR set to: 1
  5470  002B52  809D               	bsf	3997,0,c	;volatile
  5471  002B54  D001               	goto	l639
  5472  002B56                     l638:
  5473                           
  5474                           ; BSR set to: 1
  5475  002B56  909D               	bcf	3997,0,c	;volatile
  5476  002B58                     l639:
  5477                           
  5478                           ; BSR set to: 1
  5479  002B58  80CD               	bsf	4045,0,c	;volatile
  5480                           
  5481                           ; BSR set to: 1
  5482  002B5A  0012               	return	
  5483  002B5C                     __end_of_OpenTimer1:
  5484                           	opt stack 0
  5485                           tblptru	equ	0xFF8
  5486                           tblptrh	equ	0xFF7
  5487                           tblptrl	equ	0xFF6
  5488                           tablat	equ	0xFF5
  5489                           prodh	equ	0xFF4
  5490                           prodl	equ	0xFF3
  5491                           intcon	equ	0xFF2
  5492                           intcon2	equ	0xFF1
  5493                           postinc0	equ	0xFEE
  5494                           wreg	equ	0xFE8
  5495                           indf1	equ	0xFE7
  5496                           postdec1	equ	0xFE5
  5497                           fsr1h	equ	0xFE2
  5498                           fsr1l	equ	0xFE1
  5499                           indf2	equ	0xFDF
  5500                           postinc2	equ	0xFDE
  5501                           postdec2	equ	0xFDD
  5502                           fsr2h	equ	0xFDA
  5503                           fsr2l	equ	0xFD9
  5504                           status	equ	0xFD8
  5505                           
  5506 ;; *************** function _OpenTimer0 *****************
  5507 ;; Defined at:
  5508 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;  config          1    wreg     unsigned char 
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;  config          1    0[BANK1 ] unsigned char 
  5513 ;; Return value:  Size  Location     Type
  5514 ;;		None               void
  5515 ;; Registers used:
  5516 ;;		wreg, status,2, status,0
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5522 ;;      Params:         0       0       0       0       0
  5523 ;;      Locals:         0       0       1       0       0
  5524 ;;      Temps:          0       0       0       0       0
  5525 ;;      Totals:         0       0       1       0       0
  5526 ;;Total ram usage:        1 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:   11
  5529 ;; This function calls:
  5530 ;;		Nothing
  5531 ;; This function is called by:
  5532 ;;		_main
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text29
  5537  002C34                     __ptext29:
  5538                           	opt stack 0
  5539  002C34                     _OpenTimer0:
  5540                           	opt stack 19
  5541                           
  5542                           ; BSR set to: 1
  5543                           ;incstack = 0
  5544                           ;OpenTimer0@config stored from wreg
  5545  002C34  CFE8 F100          	movff	wreg,OpenTimer0@config
  5546  002C38  0101               	movlb	1	; () banked
  5547  002C3A  0101               	movlb	1	; () banked
  5548  002C3C  5100               	movf	OpenTimer0@config& (0+255),w,b
  5549  002C3E  0B7F               	andlw	127
  5550  002C40  6ED5               	movwf	4053,c	;volatile
  5551                           
  5552                           ; BSR set to: 1
  5553  002C42  0E00               	movlw	0
  5554  002C44  6ED7               	movwf	4055,c	;volatile
  5555                           
  5556                           ; BSR set to: 1
  5557  002C46  0E00               	movlw	0
  5558  002C48  6ED6               	movwf	4054,c	;volatile
  5559                           
  5560                           ; BSR set to: 1
  5561  002C4A  94F2               	bcf	intcon,2,c	;volatile
  5562                           
  5563                           ; BSR set to: 1
  5564  002C4C  0101               	movlb	1	; () banked
  5565  002C4E  0101               	movlb	1	; () banked
  5566  002C50  AF00               	btfss	OpenTimer0@config& (0+255),7,b
  5567  002C52  D002               	goto	l612
  5568                           
  5569                           ; BSR set to: 1
  5570  002C54  8AF2               	bsf	intcon,5,c	;volatile
  5571  002C56  D001               	goto	l613
  5572  002C58                     l612:
  5573                           
  5574                           ; BSR set to: 1
  5575  002C58  9AF2               	bcf	intcon,5,c	;volatile
  5576  002C5A                     l613:
  5577                           
  5578                           ; BSR set to: 1
  5579  002C5A  8ED5               	bsf	4053,7,c	;volatile
  5580                           
  5581                           ; BSR set to: 1
  5582  002C5C  0012               	return	
  5583  002C5E                     __end_of_OpenTimer0:
  5584                           	opt stack 0
  5585                           tblptru	equ	0xFF8
  5586                           tblptrh	equ	0xFF7
  5587                           tblptrl	equ	0xFF6
  5588                           tablat	equ	0xFF5
  5589                           prodh	equ	0xFF4
  5590                           prodl	equ	0xFF3
  5591                           intcon	equ	0xFF2
  5592                           intcon2	equ	0xFF1
  5593                           postinc0	equ	0xFEE
  5594                           wreg	equ	0xFE8
  5595                           indf1	equ	0xFE7
  5596                           postdec1	equ	0xFE5
  5597                           fsr1h	equ	0xFE2
  5598                           fsr1l	equ	0xFE1
  5599                           indf2	equ	0xFDF
  5600                           postinc2	equ	0xFDE
  5601                           postdec2	equ	0xFDD
  5602                           fsr2h	equ	0xFDA
  5603                           fsr2l	equ	0xFD9
  5604                           status	equ	0xFD8
  5605                           
  5606 ;; *************** function _OpenADC *****************
  5607 ;; Defined at:
  5608 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  config          1    wreg     unsigned char 
  5611 ;;  config2         1    0[BANK1 ] unsigned char 
  5612 ;;  portconfig      1    1[BANK1 ] unsigned char 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  config          1    4[BANK1 ] unsigned char 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;		None               void
  5617 ;; Registers used:
  5618 ;;		wreg, status,2, status,0
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5624 ;;      Params:         0       0       2       0       0
  5625 ;;      Locals:         0       0       1       0       0
  5626 ;;      Temps:          0       0       2       0       0
  5627 ;;      Totals:         0       0       5       0       0
  5628 ;;Total ram usage:        5 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:   11
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_main
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text30
  5639  00247A                     __ptext30:
  5640                           	opt stack 0
  5641  00247A                     _OpenADC:
  5642                           	opt stack 19
  5643                           
  5644                           ; BSR set to: 1
  5645                           ;incstack = 0
  5646                           ;OpenADC@config stored from wreg
  5647  00247A  CFE8 F104          	movff	wreg,OpenADC@config
  5648  00247E  0E00               	movlw	0
  5649  002480  6EC2               	movwf	4034,c	;volatile
  5650  002482  0E00               	movlw	0
  5651  002484  6EC0               	movwf	4032,c	;volatile
  5652  002486  0101               	movlb	1	; () banked
  5653  002488  0101               	movlb	1	; () banked
  5654  00248A  90D8               	bcf	status,0,c
  5655  00248C  3100               	rrcf	OpenADC@config2& (0+255),w,b
  5656  00248E  0B3C               	andlw	60
  5657  002490  6EC2               	movwf	4034,c	;volatile
  5658                           
  5659                           ; BSR set to: 1
  5660  002492  C100  F102         	movff	OpenADC@config2,??_OpenADC
  5661  002496  0101               	movlb	1	; () banked
  5662  002498  3B02               	swapf	??_OpenADC& (0+255),f,b
  5663  00249A  0EF0               	movlw	240
  5664  00249C  1702               	andwf	??_OpenADC& (0+255),f,b
  5665  00249E  0E30               	movlw	48
  5666  0024A0  0101               	movlb	1	; () banked
  5667  0024A2  1702               	andwf	??_OpenADC& (0+255),f,b
  5668  0024A4  0101               	movlb	1	; () banked
  5669  0024A6  0101               	movlb	1	; () banked
  5670  0024A8  5101               	movf	OpenADC@portconfig& (0+255),w,b
  5671  0024AA  0B0F               	andlw	15
  5672  0024AC  0101               	movlb	1	; () banked
  5673  0024AE  1102               	iorwf	??_OpenADC& (0+255),w,b
  5674  0024B0  6EC1               	movwf	4033,c	;volatile
  5675                           
  5676                           ; BSR set to: 1
  5677  0024B2  C104  F102         	movff	OpenADC@config,??_OpenADC
  5678  0024B6  0101               	movlb	1	; () banked
  5679  0024B8  90D8               	bcf	status,0,c
  5680  0024BA  3702               	rlcf	??_OpenADC& (0+255),f,b
  5681  0024BC  0101               	movlb	1	; () banked
  5682  0024BE  90D8               	bcf	status,0,c
  5683  0024C0  3702               	rlcf	??_OpenADC& (0+255),f,b
  5684  0024C2  0E38               	movlw	56
  5685  0024C4  0101               	movlb	1	; () banked
  5686  0024C6  1702               	andwf	??_OpenADC& (0+255),f,b
  5687  0024C8  C104  F103         	movff	OpenADC@config,??_OpenADC+1
  5688  0024CC  0101               	movlb	1	; () banked
  5689  0024CE  3B03               	swapf	(??_OpenADC+1)& (0+255),f,b
  5690  0024D0  0E0F               	movlw	15
  5691  0024D2  1703               	andwf	(??_OpenADC+1)& (0+255),f,b
  5692  0024D4  0E07               	movlw	7
  5693  0024D6  0101               	movlb	1	; () banked
  5694  0024D8  1703               	andwf	(??_OpenADC+1)& (0+255),f,b
  5695  0024DA  0101               	movlb	1	; () banked
  5696  0024DC  0101               	movlb	1	; () banked
  5697  0024DE  5104               	movf	OpenADC@config& (0+255),w,b
  5698  0024E0  0B80               	andlw	128
  5699  0024E2  0101               	movlb	1	; () banked
  5700  0024E4  1103               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5701  0024E6  0101               	movlb	1	; () banked
  5702  0024E8  1102               	iorwf	??_OpenADC& (0+255),w,b
  5703  0024EA  6EC0               	movwf	4032,c	;volatile
  5704                           
  5705                           ; BSR set to: 1
  5706  0024EC  0101               	movlb	1	; () banked
  5707  0024EE  0101               	movlb	1	; () banked
  5708  0024F0  AF00               	btfss	OpenADC@config2& (0+255),7,b
  5709  0024F2  D003               	goto	l593
  5710                           
  5711                           ; BSR set to: 1
  5712  0024F4  9C9E               	bcf	3998,6,c	;volatile
  5713  0024F6  8C9D               	bsf	3997,6,c	;volatile
  5714  0024F8  8CF2               	bsf	intcon,6,c	;volatile
  5715  0024FA                     l593:
  5716                           
  5717                           ; BSR set to: 1
  5718  0024FA  80C2               	bsf	4034,0,c	;volatile
  5719                           
  5720                           ; BSR set to: 1
  5721  0024FC  0012               	return	
  5722  0024FE                     __end_of_OpenADC:
  5723                           	opt stack 0
  5724                           tblptru	equ	0xFF8
  5725                           tblptrh	equ	0xFF7
  5726                           tblptrl	equ	0xFF6
  5727                           tablat	equ	0xFF5
  5728                           prodh	equ	0xFF4
  5729                           prodl	equ	0xFF3
  5730                           intcon	equ	0xFF2
  5731                           intcon2	equ	0xFF1
  5732                           postinc0	equ	0xFEE
  5733                           wreg	equ	0xFE8
  5734                           indf1	equ	0xFE7
  5735                           postdec1	equ	0xFE5
  5736                           fsr1h	equ	0xFE2
  5737                           fsr1l	equ	0xFE1
  5738                           indf2	equ	0xFDF
  5739                           postinc2	equ	0xFDE
  5740                           postdec2	equ	0xFDD
  5741                           fsr2h	equ	0xFDA
  5742                           fsr2l	equ	0xFD9
  5743                           status	equ	0xFD8
  5744                           
  5745 ;; *************** function _InterruptHandlerLow *****************
  5746 ;; Defined at:
  5747 ;;		line 128 in file "../src/interrupts.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;		None
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;		None
  5752 ;; Return value:  Size  Location     Type
  5753 ;;		None               void
  5754 ;; Registers used:
  5755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5761 ;;      Params:         0       0       0       0       0
  5762 ;;      Locals:         0       0       0       0       0
  5763 ;;      Temps:         17       0       0       0       0
  5764 ;;      Totals:        17       0       0       0       0
  5765 ;;Total ram usage:       17 bytes
  5766 ;; Hardware stack levels used:    1
  5767 ;; Hardware stack levels required when called:   10
  5768 ;; This function calls:
  5769 ;;		_adc_int_handler
  5770 ;;		_timer1_int_handler
  5771 ;;		_uart_recv_int_handler
  5772 ;;		_uart_trans_int_handler
  5773 ;; This function is called by:
  5774 ;;		Interrupt level 1
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	intcodelo
  5779  000018                     __pintcodelo:
  5780                           	opt stack 0
  5781  000018                     _InterruptHandlerLow:
  5782                           	opt stack 16
  5783                           
  5784                           ; BSR set to: 1
  5785                           ;incstack = 0
  5786  000018  CFD8 F043          	movff	status,??_InterruptHandlerLow
  5787  00001C  CFE8 F044          	movff	wreg,??_InterruptHandlerLow+1
  5788  000020  CFE0 F045          	movff	bsr,??_InterruptHandlerLow+2
  5789  000024  CFFA F046          	movff	pclath,??_InterruptHandlerLow+3
  5790  000028  CFFB F047          	movff	pclatu,??_InterruptHandlerLow+4
  5791  00002C  CFE9 F048          	movff	fsr0l,??_InterruptHandlerLow+5
  5792  000030  CFEA F049          	movff	fsr0h,??_InterruptHandlerLow+6
  5793  000034  CFE1 F04A          	movff	fsr1l,??_InterruptHandlerLow+7
  5794  000038  CFE2 F04B          	movff	fsr1h,??_InterruptHandlerLow+8
  5795  00003C  CFD9 F04C          	movff	fsr2l,??_InterruptHandlerLow+9
  5796  000040  CFDA F04D          	movff	fsr2h,??_InterruptHandlerLow+10
  5797  000044  CFF3 F04E          	movff	prodl,??_InterruptHandlerLow+11
  5798  000048  CFF4 F04F          	movff	prodh,??_InterruptHandlerLow+12
  5799  00004C  CFF6 F050          	movff	tblptrl,??_InterruptHandlerLow+13
  5800  000050  CFF7 F051          	movff	tblptrh,??_InterruptHandlerLow+14
  5801  000054  CFF8 F052          	movff	tblptru,??_InterruptHandlerLow+15
  5802  000058  CFF5 F053          	movff	tablat,??_InterruptHandlerLow+16
  5803                           
  5804                           ;interrupts.c: 130: if(PIR1bits.ADIF){
  5805  00005C  AC9E               	btfss	3998,6,c	;volatile
  5806  00005E  D003               	goto	i1l4770
  5807                           
  5808                           ;interrupts.c: 132: PIR1bits.ADIF = 0;
  5809  000060  9C9E               	bcf	3998,6,c	;volatile
  5810                           
  5811                           ;interrupts.c: 133: adc_int_handler();
  5812  000062  EC02  F007         	call	_adc_int_handler	;wreg free
  5813  000066                     i1l4770:
  5814                           
  5815                           ;interrupts.c: 134: }
  5816                           ;interrupts.c: 137: if (PIR1bits.TMR1IF) {
  5817  000066  A09E               	btfss	3998,0,c	;volatile
  5818  000068  D005               	goto	i1l4778
  5819                           
  5820                           ;interrupts.c: 138: PIR1bits.TMR1IF = 0;
  5821  00006A  909E               	bcf	3998,0,c	;volatile
  5822                           
  5823                           ;interrupts.c: 140: PORTAbits.RA1 = 1;
  5824  00006C  8280               	bsf	3968,1,c	;volatile
  5825                           
  5826                           ;interrupts.c: 141: timer1_int_handler();
  5827  00006E  EC7F  F012         	call	_timer1_int_handler	;wreg free
  5828                           
  5829                           ;interrupts.c: 142: PORTAbits.RA1 = 0;
  5830  000072  9280               	bcf	3968,1,c	;volatile
  5831  000074                     i1l4778:
  5832                           
  5833                           ;interrupts.c: 144: }
  5834                           ;interrupts.c: 146: if (PIR1bits.TXIF) {
  5835  000074  B89E               	btfsc	3998,4,c	;volatile
  5836                           
  5837                           ;interrupts.c: 148: uart_trans_int_handler();
  5838  000076  ECD9  F013         	call	_uart_trans_int_handler	;wreg free
  5839                           
  5840                           ;interrupts.c: 149: }
  5841                           ;interrupts.c: 151: if (PIR1bits.RCIF) {
  5842  00007A  AA9E               	btfss	3998,5,c	;volatile
  5843  00007C  D003               	goto	i1l71
  5844                           
  5845                           ;interrupts.c: 152: PIR1bits.RCIF = 0;
  5846  00007E  9A9E               	bcf	3998,5,c	;volatile
  5847                           
  5848                           ;interrupts.c: 154: uart_recv_int_handler();
  5849  000080  ECA0  F00D         	call	_uart_recv_int_handler	;wreg free
  5850  000084                     i1l71:
  5851  000084  C053  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5852  000088  C052  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5853  00008C  C051  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5854  000090  C050  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5855  000094  C04F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5856  000098  C04E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5857  00009C  C04D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5858  0000A0  C04C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5859  0000A4  C04B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5860  0000A8  C04A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5861  0000AC  C049  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5862  0000B0  C048  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5863  0000B4  C047  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5864  0000B8  C046  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5865  0000BC  C045  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5866  0000C0  C044  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5867  0000C4  C043  FFD8         	movff	??_InterruptHandlerLow,status
  5868  0000C8  0010               	retfie	
  5869  0000CA                     __end_of_InterruptHandlerLow:
  5870                           	opt stack 0
  5871                           pclatu	equ	0xFFB
  5872                           pclath	equ	0xFFA
  5873                           tblptru	equ	0xFF8
  5874                           tblptrh	equ	0xFF7
  5875                           tblptrl	equ	0xFF6
  5876                           tablat	equ	0xFF5
  5877                           prodh	equ	0xFF4
  5878                           prodl	equ	0xFF3
  5879                           intcon	equ	0xFF2
  5880                           intcon2	equ	0xFF1
  5881                           postinc0	equ	0xFEE
  5882                           fsr0h	equ	0xFEA
  5883                           fsr0l	equ	0xFE9
  5884                           wreg	equ	0xFE8
  5885                           indf1	equ	0xFE7
  5886                           postdec1	equ	0xFE5
  5887                           fsr1h	equ	0xFE2
  5888                           fsr1l	equ	0xFE1
  5889                           bsr	equ	0xFE0
  5890                           indf2	equ	0xFDF
  5891                           postinc2	equ	0xFDE
  5892                           postdec2	equ	0xFDD
  5893                           fsr2h	equ	0xFDA
  5894                           fsr2l	equ	0xFD9
  5895                           status	equ	0xFD8
  5896                           
  5897 ;; *************** function _uart_trans_int_handler *****************
  5898 ;; Defined at:
  5899 ;;		line 73 in file "../src/my_uart.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;		None
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;		None
  5904 ;; Return value:  Size  Location     Type
  5905 ;;		None               void
  5906 ;; Registers used:
  5907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5913 ;;      Params:         0       0       0       0       0
  5914 ;;      Locals:         0       0       0       0       0
  5915 ;;      Temps:          1       0       0       0       0
  5916 ;;      Totals:         1       0       0       0       0
  5917 ;;Total ram usage:        1 bytes
  5918 ;; Hardware stack levels used:    1
  5919 ;; Hardware stack levels required when called:    6
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_InterruptHandlerLow
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text32
  5928  0027B2                     __ptext32:
  5929                           	opt stack 0
  5930  0027B2                     _uart_trans_int_handler:
  5931                           	opt stack 19
  5932                           
  5933                           ;my_uart.c: 75: if(TXSTAbits.TRMT){
  5934                           
  5935                           ;incstack = 0
  5936  0027B2  A2AC               	btfss	4012,1,c	;volatile
  5937  0027B4  0012               	return	
  5938                           
  5939                           ;my_uart.c: 76: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5940  0027B6  EE20 F00E          	lfsr	2,14
  5941  0027BA  5060               	movf	_uc_ptr,w,c
  5942  0027BC  26D9               	addwf	fsr2l,f,c
  5943  0027BE  5061               	movf	_uc_ptr+1,w,c
  5944  0027C0  22DA               	addwfc	fsr2h,f,c
  5945  0027C2  50DF               	movf	indf2,w,c
  5946  0027C4  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5947  0027C6  EE20 F00D          	lfsr	2,13
  5948  0027CA  5060               	movf	_uc_ptr,w,c
  5949  0027CC  26D9               	addwf	fsr2l,f,c
  5950  0027CE  5061               	movf	_uc_ptr+1,w,c
  5951  0027D0  22DA               	addwfc	fsr2h,f,c
  5952  0027D2  50DF               	movf	indf2,w,c
  5953  0027D4  5C01               	subwf	??_uart_trans_int_handler,w,c
  5954  0027D6  B0D8               	btfsc	status,0,c
  5955  0027D8  D01E               	goto	i1l472
  5956                           
  5957                           ;my_uart.c: 77: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5958  0027DA  EE20 F00E          	lfsr	2,14
  5959  0027DE  5060               	movf	_uc_ptr,w,c
  5960  0027E0  26D9               	addwf	fsr2l,f,c
  5961  0027E2  5061               	movf	_uc_ptr+1,w,c
  5962  0027E4  22DA               	addwfc	fsr2h,f,c
  5963  0027E6  50DF               	movf	indf2,w,c
  5964  0027E8  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5965  0027EA  5001               	movf	??_uart_trans_int_handler,w,c
  5966  0027EC  0D01               	mullw	1
  5967  0027EE  0E07               	movlw	7
  5968  0027F0  26F3               	addwf	prodl,f,c
  5969  0027F2  0E00               	movlw	0
  5970  0027F4  22F4               	addwfc	prodh,f,c
  5971  0027F6  50F3               	movf	prodl,w,c
  5972  0027F8  2460               	addwf	_uc_ptr,w,c
  5973  0027FA  6ED9               	movwf	fsr2l,c
  5974  0027FC  50F4               	movf	prodh,w,c
  5975  0027FE  2061               	addwfc	_uc_ptr+1,w,c
  5976  002800  6EDA               	movwf	fsr2h,c
  5977  002802  50DF               	movf	indf2,w,c
  5978  002804  6EAD               	movwf	4013,c	;volatile
  5979                           
  5980                           ;my_uart.c: 79: uc_ptr->txBufind++;
  5981  002806  EE20 F00E          	lfsr	2,14
  5982  00280A  5060               	movf	_uc_ptr,w,c
  5983  00280C  26D9               	addwf	fsr2l,f,c
  5984  00280E  5061               	movf	_uc_ptr+1,w,c
  5985  002810  22DA               	addwfc	fsr2h,f,c
  5986  002812  2ADF               	incf	indf2,f,c
  5987                           
  5988                           ;my_uart.c: 80: } else
  5989  002814  0012               	return	
  5990  002816                     i1l472:
  5991                           
  5992                           ;my_uart.c: 81: PIE1bits.TX1IE = 0;
  5993  002816  989D               	bcf	3997,4,c	;volatile
  5994  002818  0012               	return	
  5995  00281A                     __end_of_uart_trans_int_handler:
  5996                           	opt stack 0
  5997                           pclatu	equ	0xFFB
  5998                           pclath	equ	0xFFA
  5999                           tblptru	equ	0xFF8
  6000                           tblptrh	equ	0xFF7
  6001                           tblptrl	equ	0xFF6
  6002                           tablat	equ	0xFF5
  6003                           prodh	equ	0xFF4
  6004                           prodl	equ	0xFF3
  6005                           intcon	equ	0xFF2
  6006                           intcon2	equ	0xFF1
  6007                           postinc0	equ	0xFEE
  6008                           fsr0h	equ	0xFEA
  6009                           fsr0l	equ	0xFE9
  6010                           wreg	equ	0xFE8
  6011                           indf1	equ	0xFE7
  6012                           postdec1	equ	0xFE5
  6013                           fsr1h	equ	0xFE2
  6014                           fsr1l	equ	0xFE1
  6015                           bsr	equ	0xFE0
  6016                           indf2	equ	0xFDF
  6017                           postinc2	equ	0xFDE
  6018                           postdec2	equ	0xFDD
  6019                           fsr2h	equ	0xFDA
  6020                           fsr2l	equ	0xFD9
  6021                           status	equ	0xFD8
  6022                           
  6023 ;; *************** function _uart_recv_int_handler *****************
  6024 ;; Defined at:
  6025 ;;		line 11 in file "../src/my_uart.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;		None
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;		None
  6030 ;; Return value:  Size  Location     Type
  6031 ;;		None               void
  6032 ;; Registers used:
  6033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6039 ;;      Params:         0       0       0       0       0
  6040 ;;      Locals:         0       0       0       0       0
  6041 ;;      Temps:          1       0       0       0       0
  6042 ;;      Totals:         1       0       0       0       0
  6043 ;;Total ram usage:        1 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; Hardware stack levels required when called:    9
  6046 ;; This function calls:
  6047 ;;		_ReadUSART
  6048 ;;		_ToMainLow_sendmsg
  6049 ;; This function is called by:
  6050 ;;		_InterruptHandlerLow
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           	psect	text33
  6055  001B40                     __ptext33:
  6056                           	opt stack 0
  6057  001B40                     _uart_recv_int_handler:
  6058                           	opt stack 16
  6059                           
  6060                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  6061                           
  6062                           ;incstack = 0
  6063  001B40  AA9E               	btfss	3998,5,c	;volatile
  6064  001B42  D04E               	goto	i1l4758
  6065                           
  6066                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  6067  001B44  EE20 F006          	lfsr	2,6
  6068  001B48  5060               	movf	_uc_ptr,w,c
  6069  001B4A  26D9               	addwf	fsr2l,f,c
  6070  001B4C  5061               	movf	_uc_ptr+1,w,c
  6071  001B4E  22DA               	addwfc	fsr2h,f,c
  6072  001B50  50DF               	movf	indf2,w,c
  6073  001B52  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6074  001B54  501B               	movf	??_uart_recv_int_handler,w,c
  6075  001B56  0D01               	mullw	1
  6076  001B58  50F3               	movf	prodl,w,c
  6077  001B5A  2460               	addwf	_uc_ptr,w,c
  6078  001B5C  6ED9               	movwf	fsr2l,c
  6079  001B5E  50F4               	movf	prodh,w,c
  6080  001B60  2061               	addwfc	_uc_ptr+1,w,c
  6081  001B62  6EDA               	movwf	fsr2h,c
  6082  001B64  EC75  F016         	call	_ReadUSART	;wreg free
  6083  001B68  6EDF               	movwf	indf2,c
  6084                           
  6085                           ;my_uart.c: 25: uc_ptr->buflen++;
  6086  001B6A  EE20 F006          	lfsr	2,6
  6087  001B6E  5060               	movf	_uc_ptr,w,c
  6088  001B70  26D9               	addwf	fsr2l,f,c
  6089  001B72  5061               	movf	_uc_ptr+1,w,c
  6090  001B74  22DA               	addwfc	fsr2h,f,c
  6091  001B76  2ADF               	incf	indf2,f,c
  6092                           
  6093                           ;my_uart.c: 26: if(UART_timeout > 200){
  6094  001B78  0EC9               	movlw	201
  6095  001B7A  5C5C               	subwf	_UART_timeout,w,c
  6096  001B7C  0E00               	movlw	0
  6097  001B7E  585D               	subwfb	_UART_timeout+1,w,c
  6098  001B80  A0D8               	btfss	status,0,c
  6099  001B82  D00C               	goto	i1l4752
  6100                           
  6101                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  6102  001B84  EE20 F006          	lfsr	2,6
  6103  001B88  5060               	movf	_uc_ptr,w,c
  6104  001B8A  26D9               	addwf	fsr2l,f,c
  6105  001B8C  5061               	movf	_uc_ptr+1,w,c
  6106  001B8E  22DA               	addwfc	fsr2h,f,c
  6107  001B90  0E01               	movlw	1
  6108  001B92  6EDF               	movwf	indf2,c
  6109                           
  6110                           ;my_uart.c: 28: UART_timeout = 0;
  6111  001B94  0E00               	movlw	0
  6112  001B96  6E5D               	movwf	_UART_timeout+1,c
  6113  001B98  0E00               	movlw	0
  6114  001B9A  6E5C               	movwf	_UART_timeout,c
  6115  001B9C                     i1l4752:
  6116                           
  6117                           ;my_uart.c: 29: }
  6118                           ;my_uart.c: 32: if (uc_ptr->buflen == 6) {
  6119  001B9C  EE20 F006          	lfsr	2,6
  6120  001BA0  5060               	movf	_uc_ptr,w,c
  6121  001BA2  26D9               	addwf	fsr2l,f,c
  6122  001BA4  5061               	movf	_uc_ptr+1,w,c
  6123  001BA6  22DA               	addwfc	fsr2h,f,c
  6124  001BA8  0E06               	movlw	6
  6125  001BAA  62DF               	cpfseq	indf2,c
  6126  001BAC  D019               	goto	i1l4758
  6127                           
  6128                           ;my_uart.c: 33: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  6129  001BAE  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6130  001BB0  0E1F               	movlw	31
  6131  001BB2  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6132  001BB4  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6133  001BB6  C061  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  6134  001BBA  C060  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  6135  001BBE  EE20 F006          	lfsr	2,6
  6136  001BC2  5060               	movf	_uc_ptr,w,c
  6137  001BC4  26D9               	addwf	fsr2l,f,c
  6138  001BC6  5061               	movf	_uc_ptr+1,w,c
  6139  001BC8  22DA               	addwfc	fsr2h,f,c
  6140  001BCA  50DF               	movf	indf2,w,c
  6141  001BCC  EC43  F016         	call	_ToMainLow_sendmsg
  6142                           
  6143                           ;my_uart.c: 34: uc_ptr->buflen = 0;
  6144  001BD0  EE20 F006          	lfsr	2,6
  6145  001BD4  5060               	movf	_uc_ptr,w,c
  6146  001BD6  26D9               	addwf	fsr2l,f,c
  6147  001BD8  5061               	movf	_uc_ptr+1,w,c
  6148  001BDA  22DA               	addwfc	fsr2h,f,c
  6149  001BDC  0E00               	movlw	0
  6150  001BDE  6EDF               	movwf	indf2,c
  6151  001BE0                     i1l4758:
  6152                           
  6153                           ;my_uart.c: 35: }
  6154                           ;my_uart.c: 36: }
  6155                           ;my_uart.c: 43: if (USART_Status.OVERRUN_ERROR == 1) {
  6156  001BE0  A65E               	btfss	_USART_Status,3,c
  6157  001BE2  0012               	return	
  6158                           
  6159                           ;my_uart.c: 48: RCSTAbits.CREN = 0;
  6160  001BE4  98AB               	bcf	4011,4,c	;volatile
  6161                           
  6162                           ;my_uart.c: 49: RCSTAbits.CREN = 1;
  6163  001BE6  88AB               	bsf	4011,4,c	;volatile
  6164                           
  6165                           ;my_uart.c: 50: ToMainLow_sendmsg(0, 30, (void *) 0);
  6166  001BE8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6167  001BEA  0E1E               	movlw	30
  6168  001BEC  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6169  001BEE  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6170  001BF0  0E00               	movlw	0
  6171  001BF2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6172  001BF4  0E00               	movlw	0
  6173  001BF6  6E18               	movwf	ToMainLow_sendmsg@data,c
  6174  001BF8  0E00               	movlw	0
  6175  001BFA  EC43  F016         	call	_ToMainLow_sendmsg
  6176  001BFE  0012               	return	
  6177  001C00                     __end_of_uart_recv_int_handler:
  6178                           	opt stack 0
  6179                           pclatu	equ	0xFFB
  6180                           pclath	equ	0xFFA
  6181                           tblptru	equ	0xFF8
  6182                           tblptrh	equ	0xFF7
  6183                           tblptrl	equ	0xFF6
  6184                           tablat	equ	0xFF5
  6185                           prodh	equ	0xFF4
  6186                           prodl	equ	0xFF3
  6187                           intcon	equ	0xFF2
  6188                           intcon2	equ	0xFF1
  6189                           postinc0	equ	0xFEE
  6190                           fsr0h	equ	0xFEA
  6191                           fsr0l	equ	0xFE9
  6192                           wreg	equ	0xFE8
  6193                           indf1	equ	0xFE7
  6194                           postdec1	equ	0xFE5
  6195                           fsr1h	equ	0xFE2
  6196                           fsr1l	equ	0xFE1
  6197                           bsr	equ	0xFE0
  6198                           indf2	equ	0xFDF
  6199                           postinc2	equ	0xFDE
  6200                           postdec2	equ	0xFDD
  6201                           fsr2h	equ	0xFDA
  6202                           fsr2l	equ	0xFD9
  6203                           status	equ	0xFD8
  6204                           
  6205 ;; *************** function _ToMainLow_sendmsg *****************
  6206 ;; Defined at:
  6207 ;;		line 103 in file "../src/messages.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;  length          1    wreg     unsigned char 
  6210 ;;  msgtype         1   22[COMRAM] unsigned char 
  6211 ;;  data            2   23[COMRAM] PTR void 
  6212 ;;		 -> NULL(0), main@uc(15), 
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;  length          1   25[COMRAM] unsigned char 
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  1    wreg      char 
  6217 ;; Registers used:
  6218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6224 ;;      Params:         3       0       0       0       0
  6225 ;;      Locals:         1       0       0       0       0
  6226 ;;      Temps:          0       0       0       0       0
  6227 ;;      Totals:         4       0       0       0       0
  6228 ;;Total ram usage:        4 bytes
  6229 ;; Hardware stack levels used:    1
  6230 ;; Hardware stack levels required when called:    8
  6231 ;; This function calls:
  6232 ;;		i1_send_msg
  6233 ;; This function is called by:
  6234 ;;		_uart_recv_int_handler
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text34
  6239  002C86                     __ptext34:
  6240                           	opt stack 0
  6241  002C86                     _ToMainLow_sendmsg:
  6242                           	opt stack 16
  6243                           
  6244                           ;incstack = 0
  6245                           ;ToMainLow_sendmsg@length stored from wreg
  6246  002C86  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  6247                           
  6248                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6249                           ;	Return value of _ToMainLow_sendmsg is never used
  6250  002C8A  0101               	movlb	1	; () banked
  6251  002C8C  0E01               	movlw	high _ToMainLow_MQ
  6252  002C8E  6E0C               	movwf	i1send_msg@qptr+1,c
  6253  002C90  0101               	movlb	1	; () banked
  6254  002C92  0E82               	movlw	low _ToMainLow_MQ
  6255  002C94  6E0B               	movwf	i1send_msg@qptr,c
  6256  002C96  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6257  002C9A  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6258  002C9E  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6259  002CA2  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6260  002CA6  EC00  F00E         	call	i1_send_msg	;wreg free
  6261  002CAA  0012               	return	
  6262  002CAC                     __end_of_ToMainLow_sendmsg:
  6263                           	opt stack 0
  6264                           pclatu	equ	0xFFB
  6265                           pclath	equ	0xFFA
  6266                           tblptru	equ	0xFF8
  6267                           tblptrh	equ	0xFF7
  6268                           tblptrl	equ	0xFF6
  6269                           tablat	equ	0xFF5
  6270                           prodh	equ	0xFF4
  6271                           prodl	equ	0xFF3
  6272                           intcon	equ	0xFF2
  6273                           intcon2	equ	0xFF1
  6274                           postinc0	equ	0xFEE
  6275                           fsr0h	equ	0xFEA
  6276                           fsr0l	equ	0xFE9
  6277                           wreg	equ	0xFE8
  6278                           indf1	equ	0xFE7
  6279                           postdec1	equ	0xFE5
  6280                           fsr1h	equ	0xFE2
  6281                           fsr1l	equ	0xFE1
  6282                           bsr	equ	0xFE0
  6283                           indf2	equ	0xFDF
  6284                           postinc2	equ	0xFDE
  6285                           postdec2	equ	0xFDD
  6286                           fsr2h	equ	0xFDA
  6287                           fsr2l	equ	0xFD9
  6288                           status	equ	0xFD8
  6289                           
  6290 ;; *************** function i1_send_msg *****************
  6291 ;; Defined at:
  6292 ;;		line 24 in file "../src/messages.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6295 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6296 ;;  length          1   12[COMRAM] unsigned char 
  6297 ;;  msgtype         1   13[COMRAM] unsigned char 
  6298 ;;  data            2   14[COMRAM] PTR void 
  6299 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  6300 ;;		 -> main@uc(15), 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6303 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6304 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6305 ;;  send_msg        2   17[COMRAM] unsigned int 
  6306 ;;  send_msg        1   19[COMRAM] unsigned char 
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      char 
  6309 ;; Registers used:
  6310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6316 ;;      Params:         6       0       0       0       0
  6317 ;;      Locals:         5       0       0       0       0
  6318 ;;      Temps:          1       0       0       0       0
  6319 ;;      Totals:        12       0       0       0       0
  6320 ;;Total ram usage:       12 bytes
  6321 ;; Hardware stack levels used:    1
  6322 ;; Hardware stack levels required when called:    7
  6323 ;; This function calls:
  6324 ;;		i1___awmod
  6325 ;;		i1_memcpy
  6326 ;; This function is called by:
  6327 ;;		_ToMainLow_sendmsg
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text35
  6332  001C00                     __ptext35:
  6333                           	opt stack 0
  6334  001C00                     i1_send_msg:
  6335                           	opt stack 16
  6336                           
  6337                           ;messages.c: 25: unsigned char slot;
  6338                           ;messages.c: 27: msg *qmsg;
  6339                           ;messages.c: 28: size_t tlength = length;
  6340                           
  6341                           ;incstack = 0
  6342  001C00  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6343  001C04  6A13               	clrf	i1send_msg@tlength+1,c
  6344                           
  6345                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6346  001C06  EE20 F041          	lfsr	2,65
  6347  001C0A  500B               	movf	i1send_msg@qptr,w,c
  6348  001C0C  26D9               	addwf	fsr2l,f,c
  6349  001C0E  500C               	movf	i1send_msg@qptr+1,w,c
  6350  001C10  22DA               	addwfc	fsr2h,f,c
  6351  001C12  50DF               	movf	indf2,w,c
  6352  001C14  6E14               	movwf	i1send_msg@slot,c
  6353                           
  6354                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6355  001C16  5014               	movf	i1send_msg@slot,w,c
  6356  001C18  0D0D               	mullw	13
  6357  001C1A  50F3               	movf	prodl,w,c
  6358  001C1C  240B               	addwf	i1send_msg@qptr,w,c
  6359  001C1E  6E15               	movwf	i1send_msg@qmsg,c
  6360  001C20  50F4               	movf	prodh,w,c
  6361  001C22  200C               	addwfc	i1send_msg@qptr+1,w,c
  6362  001C24  6E16               	movwf	i1send_msg@qmsg+1,c
  6363                           
  6364                           ;messages.c: 41: if (qmsg->full != 0) {
  6365  001C26  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6366  001C2A  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6367  001C2E  50DF               	movf	indf2,w,c
  6368  001C30  B4D8               	btfsc	status,2,c
  6369  001C32  D002               	goto	i1l4580
  6370                           
  6371                           ;messages.c: 42: return (-1);
  6372  001C34  0EFF               	movlw	255
  6373  001C36  0012               	return	
  6374  001C38                     i1l4580:
  6375                           
  6376                           ;messages.c: 43: }
  6377                           ;messages.c: 46: qmsg->length = length;
  6378  001C38  EE20 F001          	lfsr	2,1
  6379  001C3C  5015               	movf	i1send_msg@qmsg,w,c
  6380  001C3E  26D9               	addwf	fsr2l,f,c
  6381  001C40  5016               	movf	i1send_msg@qmsg+1,w,c
  6382  001C42  22DA               	addwfc	fsr2h,f,c
  6383  001C44  C00D  FFDF         	movff	i1send_msg@length,indf2
  6384                           
  6385                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6386  001C48  EE20 F002          	lfsr	2,2
  6387  001C4C  5015               	movf	i1send_msg@qmsg,w,c
  6388  001C4E  26D9               	addwf	fsr2l,f,c
  6389  001C50  5016               	movf	i1send_msg@qmsg+1,w,c
  6390  001C52  22DA               	addwfc	fsr2h,f,c
  6391  001C54  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6392                           
  6393                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6394  001C58  0E03               	movlw	3
  6395  001C5A  2415               	addwf	i1send_msg@qmsg,w,c
  6396  001C5C  6E01               	movwf	i1memcpy@d1,c
  6397  001C5E  0E00               	movlw	0
  6398  001C60  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6399  001C62  6E02               	movwf	i1memcpy@d1+1,c
  6400  001C64  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6401  001C68  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6402  001C6C  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6403  001C70  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6404  001C74  EC72  F015         	call	i1_memcpy	;wreg free
  6405                           
  6406                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6407  001C78  EE20 F041          	lfsr	2,65
  6408  001C7C  500B               	movf	i1send_msg@qptr,w,c
  6409  001C7E  26D9               	addwf	fsr2l,f,c
  6410  001C80  500C               	movf	i1send_msg@qptr+1,w,c
  6411  001C82  22DA               	addwfc	fsr2h,f,c
  6412  001C84  EE10 F041          	lfsr	1,65
  6413  001C88  500B               	movf	i1send_msg@qptr,w,c
  6414  001C8A  26E1               	addwf	fsr1l,f,c
  6415  001C8C  500C               	movf	i1send_msg@qptr+1,w,c
  6416  001C8E  22E2               	addwfc	fsr1h,f,c
  6417  001C90  50E7               	movf	indf1,w,c
  6418  001C92  6E11               	movwf	??i1_send_msg& (0+255),c
  6419  001C94  0E01               	movlw	1
  6420  001C96  2411               	addwf	??i1_send_msg,w,c
  6421  001C98  6E01               	movwf	i1___awmod@dividend,c
  6422  001C9A  6A02               	clrf	i1___awmod@dividend+1,c
  6423  001C9C  0E00               	movlw	0
  6424  001C9E  2202               	addwfc	i1___awmod@dividend+1,f,c
  6425  001CA0  0E00               	movlw	0
  6426  001CA2  6E04               	movwf	i1___awmod@divisor+1,c
  6427  001CA4  0E05               	movlw	5
  6428  001CA6  6E03               	movwf	i1___awmod@divisor,c
  6429  001CA8  ECB6  F00F         	call	i1___awmod	;wreg free
  6430  001CAC  5001               	movf	?i1___awmod,w,c
  6431  001CAE  6EDF               	movwf	indf2,c
  6432                           
  6433                           ;messages.c: 59: qmsg->full = 1;
  6434  001CB0  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6435  001CB4  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6436  001CB8  0E01               	movlw	1
  6437  001CBA  6EDF               	movwf	indf2,c
  6438                           
  6439                           ;messages.c: 60: return (1);
  6440  001CBC  0E01               	movlw	1
  6441  001CBE  0012               	return	
  6442  001CC0                     __end_ofi1_send_msg:
  6443                           	opt stack 0
  6444                           pclatu	equ	0xFFB
  6445                           pclath	equ	0xFFA
  6446                           tblptru	equ	0xFF8
  6447                           tblptrh	equ	0xFF7
  6448                           tblptrl	equ	0xFF6
  6449                           tablat	equ	0xFF5
  6450                           prodh	equ	0xFF4
  6451                           prodl	equ	0xFF3
  6452                           intcon	equ	0xFF2
  6453                           intcon2	equ	0xFF1
  6454                           postinc0	equ	0xFEE
  6455                           fsr0h	equ	0xFEA
  6456                           fsr0l	equ	0xFE9
  6457                           wreg	equ	0xFE8
  6458                           indf1	equ	0xFE7
  6459                           postdec1	equ	0xFE5
  6460                           fsr1h	equ	0xFE2
  6461                           fsr1l	equ	0xFE1
  6462                           bsr	equ	0xFE0
  6463                           indf2	equ	0xFDF
  6464                           postinc2	equ	0xFDE
  6465                           postdec2	equ	0xFDD
  6466                           fsr2h	equ	0xFDA
  6467                           fsr2l	equ	0xFD9
  6468                           status	equ	0xFD8
  6469                           
  6470 ;; *************** function i1_memcpy *****************
  6471 ;; Defined at:
  6472 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  d1              2    0[COMRAM] PTR void 
  6475 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6476 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6477 ;;		 -> main@msgbuffer(11), 
  6478 ;;  s1              2    2[COMRAM] PTR const void 
  6479 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6480 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6481 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6482 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6483 ;;		 -> main@uc(15), 
  6484 ;;  n               2    4[COMRAM] unsigned int 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6487 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6488 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6489 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6490 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6491 ;;		 -> main@uc(15), 
  6492 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6493 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6494 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6495 ;;		 -> main@msgbuffer(11), 
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  2    0[COMRAM] PTR void 
  6498 ;; Registers used:
  6499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6505 ;;      Params:         6       0       0       0       0
  6506 ;;      Locals:         4       0       0       0       0
  6507 ;;      Temps:          0       0       0       0       0
  6508 ;;      Totals:        10       0       0       0       0
  6509 ;;Total ram usage:       10 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; Hardware stack levels required when called:    6
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		i1_send_msg
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           	psect	text36
  6520  002AE4                     __ptext36:
  6521                           	opt stack 0
  6522  002AE4                     i1_memcpy:
  6523                           	opt stack 16
  6524                           
  6525                           ;incstack = 0
  6526  002AE4  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6527  002AE8  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6528  002AEC  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6529  002AF0  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6530  002AF4  D00E               	goto	i1l4332
  6531  002AF6                     i1l4326:
  6532  002AF6  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6533  002AFA  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6534  002AFE  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6535  002B02  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6536  002B06  CFDF FFE7          	movff	indf2,indf1
  6537  002B0A  4A09               	infsnz	i1memcpy@s,f,c
  6538  002B0C  2A0A               	incf	i1memcpy@s+1,f,c
  6539  002B0E  4A07               	infsnz	i1memcpy@d,f,c
  6540  002B10  2A08               	incf	i1memcpy@d+1,f,c
  6541  002B12                     i1l4332:
  6542  002B12  0605               	decf	i1memcpy@n,f,c
  6543  002B14  A0D8               	btfss	status,0,c
  6544  002B16  0606               	decf	i1memcpy@n+1,f,c
  6545  002B18  2805               	incf	i1memcpy@n& (0+255),w,c
  6546  002B1A  B4D8               	btfsc	status,2,c
  6547  002B1C  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6548  002B1E  B4D8               	btfsc	status,2,c
  6549                           
  6550                           ;	Return value of i1_memcpy is never used
  6551  002B20  0012               	return	
  6552  002B22  D7E9               	goto	i1l4326
  6553  002B24                     __end_ofi1_memcpy:
  6554                           	opt stack 0
  6555                           pclatu	equ	0xFFB
  6556                           pclath	equ	0xFFA
  6557                           tblptru	equ	0xFF8
  6558                           tblptrh	equ	0xFF7
  6559                           tblptrl	equ	0xFF6
  6560                           tablat	equ	0xFF5
  6561                           prodh	equ	0xFF4
  6562                           prodl	equ	0xFF3
  6563                           intcon	equ	0xFF2
  6564                           intcon2	equ	0xFF1
  6565                           postinc0	equ	0xFEE
  6566                           fsr0h	equ	0xFEA
  6567                           fsr0l	equ	0xFE9
  6568                           wreg	equ	0xFE8
  6569                           indf1	equ	0xFE7
  6570                           postdec1	equ	0xFE5
  6571                           fsr1h	equ	0xFE2
  6572                           fsr1l	equ	0xFE1
  6573                           bsr	equ	0xFE0
  6574                           indf2	equ	0xFDF
  6575                           postinc2	equ	0xFDE
  6576                           postdec2	equ	0xFDD
  6577                           fsr2h	equ	0xFDA
  6578                           fsr2l	equ	0xFD9
  6579                           status	equ	0xFD8
  6580                           
  6581 ;; *************** function _ReadUSART *****************
  6582 ;; Defined at:
  6583 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  data            1    0[COMRAM] unsigned char 
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      unsigned char 
  6590 ;; Registers used:
  6591 ;;		wreg, status,2, status,0
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6597 ;;      Params:         0       0       0       0       0
  6598 ;;      Locals:         1       0       0       0       0
  6599 ;;      Temps:          0       0       0       0       0
  6600 ;;      Totals:         1       0       0       0       0
  6601 ;;Total ram usage:        1 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:    6
  6604 ;; This function calls:
  6605 ;;		Nothing
  6606 ;; This function is called by:
  6607 ;;		_uart_recv_int_handler
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           	psect	text37
  6612  002CEA                     __ptext37:
  6613                           	opt stack 0
  6614  002CEA                     _ReadUSART:
  6615                           	opt stack 18
  6616                           
  6617                           ;incstack = 0
  6618  002CEA  0EF2               	movlw	242
  6619  002CEC  165E               	andwf	_USART_Status,f,c
  6620  002CEE  ACAB               	btfss	4011,6,c	;volatile
  6621  002CF0  D003               	goto	i1l691
  6622  002CF2  905E               	bcf	_USART_Status,0,c
  6623  002CF4  B0AB               	btfsc	4011,0,c	;volatile
  6624  002CF6  805E               	bsf	_USART_Status,0,c
  6625  002CF8                     i1l691:
  6626  002CF8  B4AB               	btfsc	4011,2,c	;volatile
  6627  002CFA  845E               	bsf	_USART_Status,2,c
  6628  002CFC  B2AB               	btfsc	4011,1,c	;volatile
  6629  002CFE  865E               	bsf	_USART_Status,3,c
  6630  002D00  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6631  002D04  5001               	movf	ReadUSART@data,w,c
  6632  002D06  0012               	return	
  6633  002D08                     __end_of_ReadUSART:
  6634                           	opt stack 0
  6635                           pclatu	equ	0xFFB
  6636                           pclath	equ	0xFFA
  6637                           tblptru	equ	0xFF8
  6638                           tblptrh	equ	0xFF7
  6639                           tblptrl	equ	0xFF6
  6640                           tablat	equ	0xFF5
  6641                           prodh	equ	0xFF4
  6642                           prodl	equ	0xFF3
  6643                           intcon	equ	0xFF2
  6644                           intcon2	equ	0xFF1
  6645                           postinc0	equ	0xFEE
  6646                           fsr0h	equ	0xFEA
  6647                           fsr0l	equ	0xFE9
  6648                           wreg	equ	0xFE8
  6649                           indf1	equ	0xFE7
  6650                           postdec1	equ	0xFE5
  6651                           fsr1h	equ	0xFE2
  6652                           fsr1l	equ	0xFE1
  6653                           bsr	equ	0xFE0
  6654                           indf2	equ	0xFDF
  6655                           postinc2	equ	0xFDE
  6656                           postdec2	equ	0xFDD
  6657                           fsr2h	equ	0xFDA
  6658                           fsr2l	equ	0xFD9
  6659                           status	equ	0xFD8
  6660                           
  6661 ;; *************** function _timer1_int_handler *****************
  6662 ;; Defined at:
  6663 ;;		line 65 in file "../src/user_interrupts.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;		None
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;  motormsg        6   15[COMRAM] unsigned char [6]
  6668 ;;  motorcomm       2   13[COMRAM] unsigned char [2]
  6669 ;; Return value:  Size  Location     Type
  6670 ;;		None               void
  6671 ;; Registers used:
  6672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6678 ;;      Params:         0       0       0       0       0
  6679 ;;      Locals:         8       0       0       0       0
  6680 ;;      Temps:          1       0       0       0       0
  6681 ;;      Totals:         9       0       0       0       0
  6682 ;;Total ram usage:        9 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; Hardware stack levels required when called:    8
  6685 ;; This function calls:
  6686 ;;		_WriteTimer1
  6687 ;;		_motorMove
  6688 ;; This function is called by:
  6689 ;;		_InterruptHandlerLow
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           	psect	text38
  6694  0024FE                     __ptext38:
  6695                           	opt stack 0
  6696  0024FE                     _timer1_int_handler:
  6697                           	opt stack 17
  6698                           
  6699                           ;user_interrupts.c: 77: WriteTimer1(0xFF7F);
  6700                           
  6701                           ;incstack = 0
  6702  0024FE  0EFF               	movlw	255
  6703  002500  6E02               	movwf	WriteTimer1@timer1+1,c
  6704  002502  0E7F               	movlw	127
  6705  002504  6E01               	movwf	WriteTimer1@timer1,c
  6706  002506  ECC0  F016         	call	_WriteTimer1	;wreg free
  6707                           
  6708                           ;user_interrupts.c: 79: leftEncoder++;
  6709  00250A  0100               	movlb	0	; () banked
  6710  00250C  0100               	movlb	0	; () banked
  6711  00250E  2BEC               	incf	_leftEncoder& (0+255),f,b
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;user_interrupts.c: 80: if(leftEncoder >= leftDistDesired){
  6715  002510  0100               	movlb	0	; () banked
  6716  002512  0100               	movlb	0	; () banked
  6717  002514  51EB               	movf	_leftDistDesired& (0+255),w,b
  6718  002516  0100               	movlb	0	; () banked
  6719  002518  0100               	movlb	0	; () banked
  6720  00251A  5DEC               	subwf	_leftEncoder& (0+255),w,b
  6721  00251C  A0D8               	btfss	status,0,c
  6722  00251E  0012               	return	
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;user_interrupts.c: 82: unsigned char motormsg[6] = {0x04, 0x00, 0x00, 0x00, 0x00, 0x00};
  6726  002520  EE20  F054         	lfsr	2,timer1_int_handler@F5122
  6727  002524  EE10  F010         	lfsr	1,timer1_int_handler@motormsg
  6728  002528  0E06               	movlw	6
  6729  00252A                     i1u398_21:
  6730  00252A  CFDE FFE6          	movff	postinc2,postinc1
  6731  00252E  2EE8               	decfsz	wreg,f,c
  6732  002530  D7FC               	goto	i1u398_21
  6733                           
  6734                           ; BSR set to: 0
  6735                           ;user_interrupts.c: 83: motormsg[1] = leftEncoder;
  6736  002532  C0EC  F011         	movff	_leftEncoder,timer1_int_handler@motormsg+1
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;user_interrupts.c: 84: motormsg[2] = (leftEncoder & 0x17);
  6740  002536  0100               	movlb	0	; () banked
  6741  002538  0100               	movlb	0	; () banked
  6742  00253A  51EC               	movf	_leftEncoder& (0+255),w,b
  6743  00253C  0B17               	andlw	23
  6744  00253E  6E12               	movwf	timer1_int_handler@motormsg+2,c
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;user_interrupts.c: 87: unsigned char motorcomm[2] = {0xC0, 0xC0};
  6748  002540  C05A  F00E         	movff	timer1_int_handler@F5124,timer1_int_handler@motorcomm
  6749  002544  C05B  F00F         	movff	timer1_int_handler@F5124+1,timer1_int_handler@motorcomm+1
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;user_interrupts.c: 88: motorMove(0xC0, 0xC0, leftDistDesired, rightDistDesired);
  6753  002548  6E0D               	movwf	??_timer1_int_handler& (0+255),c
  6754  00254A  0EC0               	movlw	192
  6755  00254C  6E06               	movwf	motorMove@right,c
  6756  00254E  500D               	movf	??_timer1_int_handler& (0+255),w,c
  6757  002550  C0EB  F007         	movff	_leftDistDesired,motorMove@leftDistance
  6758  002554  C0ED  F008         	movff	_rightDistDesired,motorMove@rightDistance
  6759  002558  0EC0               	movlw	192
  6760  00255A  EC0D  F014         	call	_motorMove
  6761                           
  6762                           ;user_interrupts.c: 90: if(rightEncoder >= rightDistDesired){
  6763  00255E  0100               	movlb	0	; () banked
  6764  002560  0100               	movlb	0	; () banked
  6765  002562  51ED               	movf	_rightDistDesired& (0+255),w,b
  6766  002564  0100               	movlb	0	; () banked
  6767  002566  0100               	movlb	0	; () banked
  6768  002568  5DEE               	subwf	_rightEncoder& (0+255),w,b
  6769  00256A  A0D8               	btfss	status,0,c
  6770  00256C  0012               	return	
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;user_interrupts.c: 91: stopCond = 0x01;
  6774  00256E  6E0D               	movwf	??_timer1_int_handler& (0+255),c
  6775  002570  0E01               	movlw	1
  6776  002572  0100               	movlb	0	; () banked
  6777  002574  0100               	movlb	0	; () banked
  6778  002576  6FEF               	movwf	_stopCond& (0+255),b
  6779  002578  500D               	movf	??_timer1_int_handler& (0+255),w,c
  6780  00257A  0012               	return	
  6781  00257C                     __end_of_timer1_int_handler:
  6782                           	opt stack 0
  6783                           pclatu	equ	0xFFB
  6784                           pclath	equ	0xFFA
  6785                           tblptru	equ	0xFF8
  6786                           tblptrh	equ	0xFF7
  6787                           tblptrl	equ	0xFF6
  6788                           tablat	equ	0xFF5
  6789                           prodh	equ	0xFF4
  6790                           prodl	equ	0xFF3
  6791                           intcon	equ	0xFF2
  6792                           intcon2	equ	0xFF1
  6793                           postinc0	equ	0xFEE
  6794                           fsr0h	equ	0xFEA
  6795                           fsr0l	equ	0xFE9
  6796                           wreg	equ	0xFE8
  6797                           indf1	equ	0xFE7
  6798                           postinc1	equ	0xFE6
  6799                           postdec1	equ	0xFE5
  6800                           fsr1h	equ	0xFE2
  6801                           fsr1l	equ	0xFE1
  6802                           bsr	equ	0xFE0
  6803                           indf2	equ	0xFDF
  6804                           postinc2	equ	0xFDE
  6805                           postdec2	equ	0xFDD
  6806                           fsr2h	equ	0xFDA
  6807                           fsr2l	equ	0xFD9
  6808                           status	equ	0xFD8
  6809                           
  6810 ;; *************** function _motorMove *****************
  6811 ;; Defined at:
  6812 ;;		line 5 in file "../src/motor.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  left            1    wreg     unsigned char 
  6815 ;;  right           1    5[COMRAM] unsigned char 
  6816 ;;  leftDistance    1    6[COMRAM] unsigned char 
  6817 ;;  rightDistanc    1    7[COMRAM] unsigned char 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;  left            1   11[COMRAM] unsigned char 
  6820 ;;  direction       2    9[COMRAM] unsigned char [2]
  6821 ;; Return value:  Size  Location     Type
  6822 ;;		None               void
  6823 ;; Registers used:
  6824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6830 ;;      Params:         3       0       0       0       0
  6831 ;;      Locals:         3       0       0       0       0
  6832 ;;      Temps:          1       0       0       0       0
  6833 ;;      Totals:         7       0       0       0       0
  6834 ;;Total ram usage:        7 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    7
  6837 ;; This function calls:
  6838 ;;		_WriteTimer0
  6839 ;;		_WriteTimer1
  6840 ;;		i1_uart_trans
  6841 ;; This function is called by:
  6842 ;;		_timer1_int_handler
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           	psect	text39
  6847  00281A                     __ptext39:
  6848                           	opt stack 0
  6849  00281A                     _motorMove:
  6850                           	opt stack 17
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;incstack = 0
  6854                           ;motorMove@left stored from wreg
  6855  00281A  CFE8 F00C          	movff	wreg,motorMove@left
  6856                           
  6857                           ;motor.c: 7: if(leftDistance != 0 && rightDistance != 0){
  6858  00281E  5007               	movf	motorMove@leftDistance,w,c
  6859  002820  B4D8               	btfsc	status,2,c
  6860  002822  D007               	goto	i1l4422
  6861  002824  5008               	movf	motorMove@rightDistance,w,c
  6862  002826  B4D8               	btfsc	status,2,c
  6863  002828  D004               	goto	i1l4422
  6864                           
  6865                           ;motor.c: 8: leftDistDesired = leftDistance;
  6866  00282A  C007  F0EB         	movff	motorMove@leftDistance,_leftDistDesired
  6867                           
  6868                           ;motor.c: 9: rightDistDesired = rightDistance;
  6869  00282E  C008  F0ED         	movff	motorMove@rightDistance,_rightDistDesired
  6870  002832                     i1l4422:
  6871                           
  6872                           ;motor.c: 10: }
  6873                           ;motor.c: 12: if(left != 0x00 && right != 0x00){
  6874  002832  500C               	movf	motorMove@left,w,c
  6875  002834  B4D8               	btfsc	status,2,c
  6876  002836  D006               	goto	i1l4428
  6877  002838  5006               	movf	motorMove@right,w,c
  6878  00283A  B4D8               	btfsc	status,2,c
  6879  00283C  D003               	goto	i1l4428
  6880                           
  6881                           ;motor.c: 13: stopCond = 0x00;
  6882  00283E  6E09               	movwf	??_motorMove& (0+255),c
  6883  002840  0E00               	movlw	0
  6884  002842  D002               	goto	L1
  6885  002844                     i1l4428:
  6886                           
  6887                           ;motor.c: 15: stopCond = 0x01;
  6888  002844  6E09               	movwf	??_motorMove& (0+255),c
  6889  002846  0E01               	movlw	1
  6890  002848                     L1:
  6891  002848  0100               	movlb	0	; () banked
  6892  00284A  0100               	movlb	0	; () banked
  6893  00284C  6FEF               	movwf	_stopCond& (0+255),b
  6894  00284E  5009               	movf	??_motorMove& (0+255),w,c
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;motor.c: 16: }
  6898                           ;motor.c: 18: WriteTimer0(0x7F);
  6899                           
  6900                           ; BSR set to: 0
  6901  002850  0E00               	movlw	0
  6902  002852  6E02               	movwf	WriteTimer0@timer0+1,c
  6903  002854  0E7F               	movlw	127
  6904  002856  6E01               	movwf	WriteTimer0@timer0,c
  6905  002858  ECC9  F016         	call	_WriteTimer0	;wreg free
  6906                           
  6907                           ;motor.c: 19: WriteTimer1(0xFF7F);
  6908  00285C  0EFF               	movlw	255
  6909  00285E  6E02               	movwf	WriteTimer1@timer1+1,c
  6910  002860  0E7F               	movlw	127
  6911  002862  6E01               	movwf	WriteTimer1@timer1,c
  6912  002864  ECC0  F016         	call	_WriteTimer1	;wreg free
  6913                           
  6914                           ;motor.c: 20: unsigned char direction[2];
  6915                           ;motor.c: 21: direction[0] = left;
  6916  002868  C00C  F00A         	movff	motorMove@left,motorMove@direction
  6917                           
  6918                           ;motor.c: 22: direction[1] = right;
  6919  00286C  C006  F00B         	movff	motorMove@right,motorMove@direction+1
  6920                           
  6921                           ;motor.c: 23: uart_trans(2, direction);
  6922  002870  0E00               	movlw	high motorMove@direction
  6923  002872  6E02               	movwf	i1uart_trans@data+1,c
  6924  002874  0E0A               	movlw	low motorMove@direction
  6925  002876  6E01               	movwf	i1uart_trans@data,c
  6926  002878  0E02               	movlw	2
  6927  00287A  EC68  F00F         	call	i1_uart_trans
  6928  00287E  0012               	return	
  6929  002880                     __end_of_motorMove:
  6930                           	opt stack 0
  6931                           pclatu	equ	0xFFB
  6932                           pclath	equ	0xFFA
  6933                           tblptru	equ	0xFF8
  6934                           tblptrh	equ	0xFF7
  6935                           tblptrl	equ	0xFF6
  6936                           tablat	equ	0xFF5
  6937                           prodh	equ	0xFF4
  6938                           prodl	equ	0xFF3
  6939                           intcon	equ	0xFF2
  6940                           intcon2	equ	0xFF1
  6941                           postinc0	equ	0xFEE
  6942                           fsr0h	equ	0xFEA
  6943                           fsr0l	equ	0xFE9
  6944                           wreg	equ	0xFE8
  6945                           indf1	equ	0xFE7
  6946                           postinc1	equ	0xFE6
  6947                           postdec1	equ	0xFE5
  6948                           fsr1h	equ	0xFE2
  6949                           fsr1l	equ	0xFE1
  6950                           bsr	equ	0xFE0
  6951                           indf2	equ	0xFDF
  6952                           postinc2	equ	0xFDE
  6953                           postdec2	equ	0xFDD
  6954                           fsr2h	equ	0xFDA
  6955                           fsr2l	equ	0xFD9
  6956                           status	equ	0xFD8
  6957                           
  6958 ;; *************** function i1_uart_trans *****************
  6959 ;; Defined at:
  6960 ;;		line 61 in file "../src/my_uart.c"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;  length          1    wreg     unsigned char 
  6963 ;;  data            2    0[COMRAM] PTR unsigned char 
  6964 ;;		 -> motorMove@direction(2), main@msgbuffer(11), 
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  length          1    4[COMRAM] unsigned char 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;		None               void
  6969 ;; Registers used:
  6970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6976 ;;      Params:         2       0       0       0       0
  6977 ;;      Locals:         1       0       0       0       0
  6978 ;;      Temps:          2       0       0       0       0
  6979 ;;      Totals:         5       0       0       0       0
  6980 ;;Total ram usage:        5 bytes
  6981 ;; Hardware stack levels used:    1
  6982 ;; Hardware stack levels required when called:    6
  6983 ;; This function calls:
  6984 ;;		Nothing
  6985 ;; This function is called by:
  6986 ;;		_motorMove
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990                           	psect	text40
  6991  001ED0                     __ptext40:
  6992                           	opt stack 0
  6993  001ED0                     i1_uart_trans:
  6994                           	opt stack 17
  6995                           
  6996                           ;incstack = 0
  6997                           ;i1uart_trans@length stored from wreg
  6998  001ED0  CFE8 F005          	movff	wreg,i1uart_trans@length
  6999                           
  7000                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  7001  001ED4  EE20 F00D          	lfsr	2,13
  7002  001ED8  5060               	movf	_uc_ptr,w,c
  7003  001EDA  26D9               	addwf	fsr2l,f,c
  7004  001EDC  5061               	movf	_uc_ptr+1,w,c
  7005  001EDE  22DA               	addwfc	fsr2h,f,c
  7006  001EE0  0E00               	movlw	0
  7007  001EE2  6EDF               	movwf	indf2,c
  7008  001EE4  D02D               	goto	i1l4276
  7009  001EE6                     i1l4272:
  7010                           
  7011                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  7012  001EE6  EE20 F00D          	lfsr	2,13
  7013  001EEA  5060               	movf	_uc_ptr,w,c
  7014  001EEC  26D9               	addwf	fsr2l,f,c
  7015  001EEE  5061               	movf	_uc_ptr+1,w,c
  7016  001EF0  22DA               	addwfc	fsr2h,f,c
  7017  001EF2  50DF               	movf	indf2,w,c
  7018  001EF4  6E03               	movwf	??i1_uart_trans& (0+255),c
  7019  001EF6  5003               	movf	??i1_uart_trans,w,c
  7020  001EF8  0D01               	mullw	1
  7021  001EFA  50F3               	movf	prodl,w,c
  7022  001EFC  2401               	addwf	i1uart_trans@data,w,c
  7023  001EFE  6ED9               	movwf	fsr2l,c
  7024  001F00  50F4               	movf	prodh,w,c
  7025  001F02  2002               	addwfc	i1uart_trans@data+1,w,c
  7026  001F04  6EDA               	movwf	fsr2h,c
  7027  001F06  EE10 F00D          	lfsr	1,13
  7028  001F0A  5060               	movf	_uc_ptr,w,c
  7029  001F0C  26E1               	addwf	fsr1l,f,c
  7030  001F0E  5061               	movf	_uc_ptr+1,w,c
  7031  001F10  22E2               	addwfc	fsr1h,f,c
  7032  001F12  50E7               	movf	indf1,w,c
  7033  001F14  6E04               	movwf	(??i1_uart_trans+1)& (0+255),c
  7034  001F16  5004               	movf	??i1_uart_trans+1,w,c
  7035  001F18  0D01               	mullw	1
  7036  001F1A  0E07               	movlw	7
  7037  001F1C  26F3               	addwf	prodl,f,c
  7038  001F1E  0E00               	movlw	0
  7039  001F20  22F4               	addwfc	prodh,f,c
  7040  001F22  50F3               	movf	prodl,w,c
  7041  001F24  2460               	addwf	_uc_ptr,w,c
  7042  001F26  6EE1               	movwf	fsr1l,c
  7043  001F28  50F4               	movf	prodh,w,c
  7044  001F2A  2061               	addwfc	_uc_ptr+1,w,c
  7045  001F2C  6EE2               	movwf	fsr1h,c
  7046  001F2E  CFDF FFE7          	movff	indf2,indf1
  7047  001F32  EE20 F00D          	lfsr	2,13
  7048  001F36  5060               	movf	_uc_ptr,w,c
  7049  001F38  26D9               	addwf	fsr2l,f,c
  7050  001F3A  5061               	movf	_uc_ptr+1,w,c
  7051  001F3C  22DA               	addwfc	fsr2h,f,c
  7052  001F3E  2ADF               	incf	indf2,f,c
  7053  001F40                     i1l4276:
  7054  001F40  EE20 F00D          	lfsr	2,13
  7055  001F44  5060               	movf	_uc_ptr,w,c
  7056  001F46  26D9               	addwf	fsr2l,f,c
  7057  001F48  5061               	movf	_uc_ptr+1,w,c
  7058  001F4A  22DA               	addwfc	fsr2h,f,c
  7059  001F4C  50DF               	movf	indf2,w,c
  7060  001F4E  6E03               	movwf	??i1_uart_trans& (0+255),c
  7061  001F50  5005               	movf	i1uart_trans@length,w,c
  7062  001F52  5C03               	subwf	??i1_uart_trans,w,c
  7063  001F54  A0D8               	btfss	status,0,c
  7064  001F56  D7C7               	goto	i1l4272
  7065                           
  7066                           ;my_uart.c: 67: }
  7067                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  7068  001F58  EE20 F00E          	lfsr	2,14
  7069  001F5C  5060               	movf	_uc_ptr,w,c
  7070  001F5E  26D9               	addwf	fsr2l,f,c
  7071  001F60  5061               	movf	_uc_ptr+1,w,c
  7072  001F62  22DA               	addwfc	fsr2h,f,c
  7073  001F64  0E00               	movlw	0
  7074  001F66  6EDF               	movwf	indf2,c
  7075                           
  7076                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  7077  001F68  889D               	bsf	3997,4,c	;volatile
  7078  001F6A  0012               	return	
  7079  001F6C                     __end_ofi1_uart_trans:
  7080                           	opt stack 0
  7081                           pclatu	equ	0xFFB
  7082                           pclath	equ	0xFFA
  7083                           tblptru	equ	0xFF8
  7084                           tblptrh	equ	0xFF7
  7085                           tblptrl	equ	0xFF6
  7086                           tablat	equ	0xFF5
  7087                           prodh	equ	0xFF4
  7088                           prodl	equ	0xFF3
  7089                           intcon	equ	0xFF2
  7090                           intcon2	equ	0xFF1
  7091                           postinc0	equ	0xFEE
  7092                           fsr0h	equ	0xFEA
  7093                           fsr0l	equ	0xFE9
  7094                           wreg	equ	0xFE8
  7095                           indf1	equ	0xFE7
  7096                           postinc1	equ	0xFE6
  7097                           postdec1	equ	0xFE5
  7098                           fsr1h	equ	0xFE2
  7099                           fsr1l	equ	0xFE1
  7100                           bsr	equ	0xFE0
  7101                           indf2	equ	0xFDF
  7102                           postinc2	equ	0xFDE
  7103                           postdec2	equ	0xFDD
  7104                           fsr2h	equ	0xFDA
  7105                           fsr2l	equ	0xFD9
  7106                           status	equ	0xFD8
  7107                           
  7108 ;; *************** function _WriteTimer1 *****************
  7109 ;; Defined at:
  7110 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;  timer1          2    0[COMRAM] unsigned int 
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;  timer           2    2[COMRAM] struct Timers
  7115 ;; Return value:  Size  Location     Type
  7116 ;;		None               void
  7117 ;; Registers used:
  7118 ;;		None
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7124 ;;      Params:         2       0       0       0       0
  7125 ;;      Locals:         2       0       0       0       0
  7126 ;;      Temps:          0       0       0       0       0
  7127 ;;      Totals:         4       0       0       0       0
  7128 ;;Total ram usage:        4 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:    6
  7131 ;; This function calls:
  7132 ;;		Nothing
  7133 ;; This function is called by:
  7134 ;;		_timer1_int_handler
  7135 ;;		_motorMove
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           	psect	text41
  7140  002D80                     __ptext41:
  7141                           	opt stack 0
  7142  002D80                     _WriteTimer1:
  7143                           	opt stack 17
  7144                           
  7145                           ;incstack = 0
  7146  002D80  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  7147  002D84  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  7148  002D88  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  7149  002D8C  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  7150  002D90  0012               	return	
  7151  002D92                     __end_of_WriteTimer1:
  7152                           	opt stack 0
  7153                           pclatu	equ	0xFFB
  7154                           pclath	equ	0xFFA
  7155                           tblptru	equ	0xFF8
  7156                           tblptrh	equ	0xFF7
  7157                           tblptrl	equ	0xFF6
  7158                           tablat	equ	0xFF5
  7159                           prodh	equ	0xFF4
  7160                           prodl	equ	0xFF3
  7161                           intcon	equ	0xFF2
  7162                           intcon2	equ	0xFF1
  7163                           postinc0	equ	0xFEE
  7164                           fsr0h	equ	0xFEA
  7165                           fsr0l	equ	0xFE9
  7166                           wreg	equ	0xFE8
  7167                           indf1	equ	0xFE7
  7168                           postinc1	equ	0xFE6
  7169                           postdec1	equ	0xFE5
  7170                           fsr1h	equ	0xFE2
  7171                           fsr1l	equ	0xFE1
  7172                           bsr	equ	0xFE0
  7173                           indf2	equ	0xFDF
  7174                           postinc2	equ	0xFDE
  7175                           postdec2	equ	0xFDD
  7176                           fsr2h	equ	0xFDA
  7177                           fsr2l	equ	0xFD9
  7178                           status	equ	0xFD8
  7179                           
  7180 ;; *************** function _WriteTimer0 *****************
  7181 ;; Defined at:
  7182 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;  timer0          2    0[COMRAM] unsigned int 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  timer           2    2[COMRAM] struct Timers
  7187 ;; Return value:  Size  Location     Type
  7188 ;;		None               void
  7189 ;; Registers used:
  7190 ;;		None
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7196 ;;      Params:         2       0       0       0       0
  7197 ;;      Locals:         2       0       0       0       0
  7198 ;;      Temps:          0       0       0       0       0
  7199 ;;      Totals:         4       0       0       0       0
  7200 ;;Total ram usage:        4 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; Hardware stack levels required when called:    6
  7203 ;; This function calls:
  7204 ;;		Nothing
  7205 ;; This function is called by:
  7206 ;;		_motorMove
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           	psect	text42
  7211  002D92                     __ptext42:
  7212                           	opt stack 0
  7213  002D92                     _WriteTimer0:
  7214                           	opt stack 17
  7215                           
  7216                           ;incstack = 0
  7217  002D92  C001  F003         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7218  002D96  C002  F004         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7219  002D9A  C004  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7220  002D9E  C003  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7221  002DA2  0012               	return	
  7222  002DA4                     __end_of_WriteTimer0:
  7223                           	opt stack 0
  7224                           pclatu	equ	0xFFB
  7225                           pclath	equ	0xFFA
  7226                           tblptru	equ	0xFF8
  7227                           tblptrh	equ	0xFF7
  7228                           tblptrl	equ	0xFF6
  7229                           tablat	equ	0xFF5
  7230                           prodh	equ	0xFF4
  7231                           prodl	equ	0xFF3
  7232                           intcon	equ	0xFF2
  7233                           intcon2	equ	0xFF1
  7234                           postinc0	equ	0xFEE
  7235                           fsr0h	equ	0xFEA
  7236                           fsr0l	equ	0xFE9
  7237                           wreg	equ	0xFE8
  7238                           indf1	equ	0xFE7
  7239                           postinc1	equ	0xFE6
  7240                           postdec1	equ	0xFE5
  7241                           fsr1h	equ	0xFE2
  7242                           fsr1l	equ	0xFE1
  7243                           bsr	equ	0xFE0
  7244                           indf2	equ	0xFDF
  7245                           postinc2	equ	0xFDE
  7246                           postdec2	equ	0xFDD
  7247                           fsr2h	equ	0xFDA
  7248                           fsr2l	equ	0xFD9
  7249                           status	equ	0xFD8
  7250                           
  7251 ;; *************** function _adc_int_handler *****************
  7252 ;; Defined at:
  7253 ;;		line 96 in file "../src/user_interrupts.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;		None
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;  dist            3   54[COMRAM] float 
  7258 ;;  voltage         3   59[COMRAM] float 
  7259 ;;  roundDist       2   64[COMRAM] int 
  7260 ;;  channel         2   62[COMRAM] int 
  7261 ;;  k               2   57[COMRAM] int 
  7262 ;; Return value:  Size  Location     Type
  7263 ;;		None               void
  7264 ;; Registers used:
  7265 ;;		wreg, status,2, status,0, prodl, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7271 ;;      Params:         0       0       0       0       0
  7272 ;;      Locals:        12       0       0       0       0
  7273 ;;      Temps:          4       0       0       0       0
  7274 ;;      Totals:        16       0       0       0       0
  7275 ;;Total ram usage:       16 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:    8
  7278 ;; This function calls:
  7279 ;;		___awtoft
  7280 ;;		___ftadd
  7281 ;;		___ftdiv
  7282 ;;		___ftge
  7283 ;;		___ftmul
  7284 ;;		___fttol
  7285 ;;		i1_SetChanADC
  7286 ;;		i1___awmod
  7287 ;; This function is called by:
  7288 ;;		_InterruptHandlerLow
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text43
  7293  000E04                     __ptext43:
  7294                           	opt stack 0
  7295  000E04                     _adc_int_handler:
  7296                           	opt stack 17
  7297                           
  7298                           ;user_interrupts.c: 99: if(adcbuffer[0] < 3)
  7299                           
  7300                           ;incstack = 0
  7301  000E04  0E03               	movlw	3
  7302  000E06  0101               	movlb	1	; () banked
  7303  000E08  0101               	movlb	1	; () banked
  7304  000E0A  5D66               	subwf	_adcbuffer& (0+255),w,b
  7305  000E0C  B0D8               	btfsc	status,0,c
  7306  000E0E  D007               	goto	i1l4712
  7307                           
  7308                           ; BSR set to: 1
  7309                           ;user_interrupts.c: 100: adcbuffer[0] = adcbuffer[0] + 1;
  7310  000E10  0101               	movlb	1	; () banked
  7311  000E12  0101               	movlb	1	; () banked
  7312  000E14  2966               	incf	_adcbuffer& (0+255),w,b
  7313  000E16  0101               	movlb	1	; () banked
  7314  000E18  0101               	movlb	1	; () banked
  7315  000E1A  6F66               	movwf	_adcbuffer& (0+255),b
  7316  000E1C  D006               	goto	i1l4714
  7317  000E1E                     i1l4712:
  7318                           
  7319                           ; BSR set to: 1
  7320                           ;user_interrupts.c: 101: else
  7321                           ;user_interrupts.c: 102: adcbuffer[0] = 1;
  7322  000E1E  6E33               	movwf	??_adc_int_handler& (0+255),c
  7323  000E20  0E01               	movlw	1
  7324  000E22  0101               	movlb	1	; () banked
  7325  000E24  0101               	movlb	1	; () banked
  7326  000E26  6F66               	movwf	_adcbuffer& (0+255),b
  7327  000E28  5033               	movf	??_adc_int_handler& (0+255),w,c
  7328  000E2A                     i1l4714:
  7329                           
  7330                           ; BSR set to: 1
  7331                           ;user_interrupts.c: 105: int k = (int)ADRESH;
  7332  000E2A  CFC4 F03A          	movff	4036,adc_int_handler@k	;volatile
  7333  000E2E  6A3B               	clrf	adc_int_handler@k+1,c
  7334                           
  7335                           ; BSR set to: 1
  7336                           ;user_interrupts.c: 106: float voltage = 3.4*k/256;
  7337  000E30  0E9A               	movlw	154
  7338  000E32  6E11               	movwf	___ftmul@f2,c
  7339  000E34  0E59               	movlw	89
  7340  000E36  6E12               	movwf	___ftmul@f2+1,c
  7341  000E38  0E40               	movlw	64
  7342  000E3A  6E13               	movwf	___ftmul@f2+2,c
  7343  000E3C  C03A  F009         	movff	adc_int_handler@k,___awtoft@c
  7344  000E40  C03B  F00A         	movff	adc_int_handler@k+1,___awtoft@c+1
  7345  000E44  EC9E  F014         	call	___awtoft	;wreg free
  7346  000E48  C009  F00E         	movff	?___awtoft,___ftmul@f1
  7347  000E4C  C00A  F00F         	movff	?___awtoft+1,___ftmul@f1+1
  7348  000E50  C00B  F010         	movff	?___awtoft+2,___ftmul@f1+2
  7349  000E54  ECD0  F00B         	call	___ftmul	;wreg free
  7350  000E58  C00E  F024         	movff	?___ftmul,___ftdiv@f1
  7351  000E5C  C00F  F025         	movff	?___ftmul+1,___ftdiv@f1+1
  7352  000E60  C010  F026         	movff	?___ftmul+2,___ftdiv@f1+2
  7353  000E64  0E00               	movlw	0
  7354  000E66  6E27               	movwf	___ftdiv@f2,c
  7355  000E68  0E80               	movlw	128
  7356  000E6A  6E28               	movwf	___ftdiv@f2+1,c
  7357  000E6C  0E43               	movlw	67
  7358  000E6E  6E29               	movwf	___ftdiv@f2+2,c
  7359  000E70  ECC7  F00C         	call	___ftdiv	;wreg free
  7360  000E74  C024  F03C         	movff	?___ftdiv,adc_int_handler@voltage
  7361  000E78  C025  F03D         	movff	?___ftdiv+1,adc_int_handler@voltage+1
  7362  000E7C  C026  F03E         	movff	?___ftdiv+2,adc_int_handler@voltage+2
  7363                           
  7364                           ;user_interrupts.c: 107: int roundDist;
  7365                           ;user_interrupts.c: 111: if (voltage > .5) {
  7366  000E80  0E00               	movlw	0
  7367  000E82  6E01               	movwf	___ftge@ff1,c
  7368  000E84  0E00               	movlw	0
  7369  000E86  6E02               	movwf	___ftge@ff1+1,c
  7370  000E88  0E3F               	movlw	63
  7371  000E8A  6E03               	movwf	___ftge@ff1+2,c
  7372  000E8C  C03C  F004         	movff	adc_int_handler@voltage,___ftge@ff2
  7373  000E90  C03D  F005         	movff	adc_int_handler@voltage+1,___ftge@ff2+1
  7374  000E94  C03E  F006         	movff	adc_int_handler@voltage+2,___ftge@ff2+2
  7375  000E98  ECE1  F010         	call	___ftge	;wreg free
  7376  000E9C  B0D8               	btfsc	status,0,c
  7377  000E9E  D045               	goto	i1l4722
  7378                           
  7379                           ;user_interrupts.c: 112: float dist = 24/(voltage - 0.1);
  7380  000EA0  0E00               	movlw	0
  7381  000EA2  6E24               	movwf	___ftdiv@f1,c
  7382  000EA4  0EC0               	movlw	192
  7383  000EA6  6E25               	movwf	___ftdiv@f1+1,c
  7384  000EA8  0E41               	movlw	65
  7385  000EAA  6E26               	movwf	___ftdiv@f1+2,c
  7386  000EAC  0ECD               	movlw	205
  7387  000EAE  6E1B               	movwf	___ftadd@f2,c
  7388  000EB0  0ECC               	movlw	204
  7389  000EB2  6E1C               	movwf	___ftadd@f2+1,c
  7390  000EB4  0EBD               	movlw	189
  7391  000EB6  6E1D               	movwf	___ftadd@f2+2,c
  7392  000EB8  C03C  F018         	movff	adc_int_handler@voltage,___ftadd@f1
  7393  000EBC  C03D  F019         	movff	adc_int_handler@voltage+1,___ftadd@f1+1
  7394  000EC0  C03E  F01A         	movff	adc_int_handler@voltage+2,___ftadd@f1+2
  7395  000EC4  EC26  F006         	call	___ftadd	;wreg free
  7396  000EC8  C018  F027         	movff	?___ftadd,___ftdiv@f2
  7397  000ECC  C019  F028         	movff	?___ftadd+1,___ftdiv@f2+1
  7398  000ED0  C01A  F029         	movff	?___ftadd+2,___ftdiv@f2+2
  7399  000ED4  ECC7  F00C         	call	___ftdiv	;wreg free
  7400  000ED8  C024  F037         	movff	?___ftdiv,adc_int_handler@dist
  7401  000EDC  C025  F038         	movff	?___ftdiv+1,adc_int_handler@dist+1
  7402  000EE0  C026  F039         	movff	?___ftdiv+2,adc_int_handler@dist+2
  7403                           
  7404                           ;user_interrupts.c: 113: roundDist = (int)(dist + 0.5);
  7405  000EE4  0E00               	movlw	0
  7406  000EE6  6E1B               	movwf	___ftadd@f2,c
  7407  000EE8  0E00               	movlw	0
  7408  000EEA  6E1C               	movwf	___ftadd@f2+1,c
  7409  000EEC  0E3F               	movlw	63
  7410  000EEE  6E1D               	movwf	___ftadd@f2+2,c
  7411  000EF0  C037  F018         	movff	adc_int_handler@dist,___ftadd@f1
  7412  000EF4  C038  F019         	movff	adc_int_handler@dist+1,___ftadd@f1+1
  7413  000EF8  C039  F01A         	movff	adc_int_handler@dist+2,___ftadd@f1+2
  7414  000EFC  EC26  F006         	call	___ftadd	;wreg free
  7415  000F00  C018  F009         	movff	?___ftadd,___fttol@f1
  7416  000F04  C019  F00A         	movff	?___ftadd+1,___fttol@f1+1
  7417  000F08  C01A  F00B         	movff	?___ftadd+2,___fttol@f1+2
  7418  000F0C  EC4C  F00C         	call	___fttol	;wreg free
  7419  000F10  C009  F033         	movff	?___fttol,??_adc_int_handler
  7420  000F14  C00A  F034         	movff	?___fttol+1,??_adc_int_handler+1
  7421  000F18  C00B  F035         	movff	?___fttol+2,??_adc_int_handler+2
  7422  000F1C  C00C  F036         	movff	?___fttol+3,??_adc_int_handler+3
  7423  000F20  C033  F041         	movff	??_adc_int_handler,adc_int_handler@roundDist
  7424  000F24  C034  F042         	movff	??_adc_int_handler+1,adc_int_handler@roundDist+1
  7425                           
  7426                           ;user_interrupts.c: 114: }
  7427  000F28  D004               	goto	i1l4724
  7428  000F2A                     i1l4722:
  7429                           
  7430                           ;user_interrupts.c: 116: else
  7431                           ;user_interrupts.c: 117: roundDist = 0xFF;
  7432  000F2A  0E00               	movlw	0
  7433  000F2C  6E42               	movwf	adc_int_handler@roundDist+1,c
  7434  000F2E  0EFF               	movlw	255
  7435  000F30  6E41               	movwf	adc_int_handler@roundDist,c
  7436  000F32                     i1l4724:
  7437                           
  7438                           ;user_interrupts.c: 121: int channel = (int)adcbuffer[0] % 3;
  7439  000F32  0101               	movlb	1	; () banked
  7440  000F34  C166  F001         	movff	_adcbuffer,i1___awmod@dividend
  7441  000F38  6A02               	clrf	i1___awmod@dividend+1,c
  7442  000F3A  0E00               	movlw	0
  7443  000F3C  6E04               	movwf	i1___awmod@divisor+1,c
  7444  000F3E  0E03               	movlw	3
  7445  000F40  6E03               	movwf	i1___awmod@divisor,c
  7446  000F42  ECB6  F00F         	call	i1___awmod	;wreg free
  7447  000F46  C001  F03F         	movff	?i1___awmod,adc_int_handler@channel
  7448  000F4A  C002  F040         	movff	?i1___awmod+1,adc_int_handler@channel+1
  7449                           
  7450                           ;user_interrupts.c: 122: if (channel == 0) {
  7451  000F4E  5040               	movf	adc_int_handler@channel+1,w,c
  7452  000F50  103F               	iorwf	adc_int_handler@channel,w,c
  7453  000F52  A4D8               	btfss	status,2,c
  7454  000F54  D006               	goto	i1l4732
  7455                           
  7456                           ;user_interrupts.c: 123: adcbuffer[3] = roundDist;
  7457  000F56  C041  F169         	movff	adc_int_handler@roundDist,_adcbuffer+3
  7458                           
  7459                           ;user_interrupts.c: 124: SetChanADC(0b10001111);
  7460  000F5A  0E8F               	movlw	143
  7461  000F5C  EC84  F016         	call	i1_SetChanADC
  7462                           
  7463                           ;user_interrupts.c: 125: }
  7464  000F60  0012               	return	
  7465  000F62                     i1l4732:
  7466                           
  7467                           ;user_interrupts.c: 126: else if (channel == 1) {
  7468  000F62  043F               	decf	adc_int_handler@channel,w,c
  7469  000F64  1040               	iorwf	adc_int_handler@channel+1,w,c
  7470  000F66  A4D8               	btfss	status,2,c
  7471  000F68  D006               	goto	i1l548
  7472                           
  7473                           ;user_interrupts.c: 127: adcbuffer[1] = roundDist;
  7474  000F6A  C041  F167         	movff	adc_int_handler@roundDist,_adcbuffer+1
  7475                           
  7476                           ;user_interrupts.c: 128: SetChanADC(0b10010111);
  7477  000F6E  0E97               	movlw	151
  7478  000F70  EC84  F016         	call	i1_SetChanADC
  7479                           
  7480                           ;user_interrupts.c: 129: }
  7481  000F74  0012               	return	
  7482  000F76                     i1l548:
  7483                           
  7484                           ;user_interrupts.c: 130: else {
  7485                           ;user_interrupts.c: 131: adcbuffer[2] = roundDist;
  7486  000F76  C041  F168         	movff	adc_int_handler@roundDist,_adcbuffer+2
  7487                           
  7488                           ;user_interrupts.c: 132: SetChanADC(0b10011111);
  7489  000F7A  0E9F               	movlw	159
  7490  000F7C  EC84  F016         	call	i1_SetChanADC
  7491  000F80  0012               	return	
  7492  000F82                     __end_of_adc_int_handler:
  7493                           	opt stack 0
  7494                           pclatu	equ	0xFFB
  7495                           pclath	equ	0xFFA
  7496                           tblptru	equ	0xFF8
  7497                           tblptrh	equ	0xFF7
  7498                           tblptrl	equ	0xFF6
  7499                           tablat	equ	0xFF5
  7500                           prodh	equ	0xFF4
  7501                           prodl	equ	0xFF3
  7502                           intcon	equ	0xFF2
  7503                           intcon2	equ	0xFF1
  7504                           postinc0	equ	0xFEE
  7505                           fsr0h	equ	0xFEA
  7506                           fsr0l	equ	0xFE9
  7507                           wreg	equ	0xFE8
  7508                           indf1	equ	0xFE7
  7509                           postinc1	equ	0xFE6
  7510                           postdec1	equ	0xFE5
  7511                           fsr1h	equ	0xFE2
  7512                           fsr1l	equ	0xFE1
  7513                           bsr	equ	0xFE0
  7514                           indf2	equ	0xFDF
  7515                           postinc2	equ	0xFDE
  7516                           postdec2	equ	0xFDD
  7517                           fsr2h	equ	0xFDA
  7518                           fsr2l	equ	0xFD9
  7519                           status	equ	0xFD8
  7520                           
  7521 ;; *************** function i1___awmod *****************
  7522 ;; Defined at:
  7523 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;  dividend        2    0[COMRAM] int 
  7526 ;;  divisor         2    2[COMRAM] int 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;  __awmod         1    6[COMRAM] unsigned char 
  7529 ;;  __awmod         1    5[COMRAM] unsigned char 
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  2    0[COMRAM] int 
  7532 ;; Registers used:
  7533 ;;		wreg, status,2, status,0, prodl
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7539 ;;      Params:         4       0       0       0       0
  7540 ;;      Locals:         2       0       0       0       0
  7541 ;;      Temps:          1       0       0       0       0
  7542 ;;      Totals:         7       0       0       0       0
  7543 ;;Total ram usage:        7 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:    6
  7546 ;; This function calls:
  7547 ;;		Nothing
  7548 ;; This function is called by:
  7549 ;;		_adc_int_handler
  7550 ;;		i1_send_msg
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           
  7554                           	psect	text44
  7555  001F6C                     __ptext44:
  7556                           	opt stack 0
  7557  001F6C                     i1___awmod:
  7558                           	opt stack 16
  7559                           
  7560                           ;incstack = 0
  7561  001F6C  6E05               	movwf	??i1___awmod& (0+255),c
  7562  001F6E  0E00               	movlw	0
  7563  001F70  6E07               	movwf	i1___awmod@sign,c
  7564  001F72  5005               	movf	??i1___awmod& (0+255),w,c
  7565  001F74  5002               	movf	i1___awmod@dividend+1,w,c
  7566  001F76  0A80               	xorlw	128
  7567  001F78  6EF3               	movwf	prodl,c
  7568  001F7A  0E80               	movlw	128
  7569  001F7C  5CF3               	subwf	prodl,w,c
  7570  001F7E  0E00               	movlw	0
  7571  001F80  B4D8               	btfsc	status,2,c
  7572  001F82  5C01               	subwf	i1___awmod@dividend,w,c
  7573  001F84  B0D8               	btfsc	status,0,c
  7574  001F86  D008               	goto	i1l4352
  7575  001F88  6C01               	negf	i1___awmod@dividend,c
  7576  001F8A  1E02               	comf	i1___awmod@dividend+1,f,c
  7577  001F8C  B0D8               	btfsc	status,0,c
  7578  001F8E  2A02               	incf	i1___awmod@dividend+1,f,c
  7579  001F90  6E05               	movwf	??i1___awmod& (0+255),c
  7580  001F92  0E01               	movlw	1
  7581  001F94  6E07               	movwf	i1___awmod@sign,c
  7582  001F96  5005               	movf	??i1___awmod& (0+255),w,c
  7583  001F98                     i1l4352:
  7584  001F98  5004               	movf	i1___awmod@divisor+1,w,c
  7585  001F9A  0A80               	xorlw	128
  7586  001F9C  6EF3               	movwf	prodl,c
  7587  001F9E  0E80               	movlw	128
  7588  001FA0  5CF3               	subwf	prodl,w,c
  7589  001FA2  0E00               	movlw	0
  7590  001FA4  B4D8               	btfsc	status,2,c
  7591  001FA6  5C03               	subwf	i1___awmod@divisor,w,c
  7592  001FA8  B0D8               	btfsc	status,0,c
  7593  001FAA  D004               	goto	i1l4356
  7594  001FAC  6C03               	negf	i1___awmod@divisor,c
  7595  001FAE  1E04               	comf	i1___awmod@divisor+1,f,c
  7596  001FB0  B0D8               	btfsc	status,0,c
  7597  001FB2  2A04               	incf	i1___awmod@divisor+1,f,c
  7598  001FB4                     i1l4356:
  7599  001FB4  5004               	movf	i1___awmod@divisor+1,w,c
  7600  001FB6  1003               	iorwf	i1___awmod@divisor,w,c
  7601  001FB8  B4D8               	btfsc	status,2,c
  7602  001FBA  D01A               	goto	i1l4372
  7603  001FBC  6E05               	movwf	??i1___awmod& (0+255),c
  7604  001FBE  0E01               	movlw	1
  7605  001FC0  6E06               	movwf	i1___awmod@counter,c
  7606  001FC2  5005               	movf	??i1___awmod& (0+255),w,c
  7607  001FC4  D004               	goto	i1l4362
  7608  001FC6                     i1l4360:
  7609  001FC6  90D8               	bcf	status,0,c
  7610  001FC8  3603               	rlcf	i1___awmod@divisor,f,c
  7611  001FCA  3604               	rlcf	i1___awmod@divisor+1,f,c
  7612  001FCC  2A06               	incf	i1___awmod@counter,f,c
  7613  001FCE                     i1l4362:
  7614  001FCE  AE04               	btfss	i1___awmod@divisor+1,7,c
  7615  001FD0  D7FA               	goto	i1l4360
  7616  001FD2                     i1l4364:
  7617  001FD2  5003               	movf	i1___awmod@divisor,w,c
  7618  001FD4  5C01               	subwf	i1___awmod@dividend,w,c
  7619  001FD6  5004               	movf	i1___awmod@divisor+1,w,c
  7620  001FD8  5802               	subwfb	i1___awmod@dividend+1,w,c
  7621  001FDA  A0D8               	btfss	status,0,c
  7622  001FDC  D004               	goto	i1l4368
  7623  001FDE  5003               	movf	i1___awmod@divisor,w,c
  7624  001FE0  5E01               	subwf	i1___awmod@dividend,f,c
  7625  001FE2  5004               	movf	i1___awmod@divisor+1,w,c
  7626  001FE4  5A02               	subwfb	i1___awmod@dividend+1,f,c
  7627  001FE6                     i1l4368:
  7628  001FE6  90D8               	bcf	status,0,c
  7629  001FE8  3204               	rrcf	i1___awmod@divisor+1,f,c
  7630  001FEA  3203               	rrcf	i1___awmod@divisor,f,c
  7631  001FEC  2E06               	decfsz	i1___awmod@counter,f,c
  7632  001FEE  D7F1               	goto	i1l4364
  7633  001FF0                     i1l4372:
  7634  001FF0  5007               	movf	i1___awmod@sign,w,c
  7635  001FF2  B4D8               	btfsc	status,2,c
  7636  001FF4  D004               	goto	i1l4376
  7637  001FF6  6C01               	negf	i1___awmod@dividend,c
  7638  001FF8  1E02               	comf	i1___awmod@dividend+1,f,c
  7639  001FFA  B0D8               	btfsc	status,0,c
  7640  001FFC  2A02               	incf	i1___awmod@dividend+1,f,c
  7641  001FFE                     i1l4376:
  7642  001FFE  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  7643  002002  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  7644  002006  0012               	return	
  7645  002008                     __end_ofi1___awmod:
  7646                           	opt stack 0
  7647                           pclatu	equ	0xFFB
  7648                           pclath	equ	0xFFA
  7649                           tblptru	equ	0xFF8
  7650                           tblptrh	equ	0xFF7
  7651                           tblptrl	equ	0xFF6
  7652                           tablat	equ	0xFF5
  7653                           prodh	equ	0xFF4
  7654                           prodl	equ	0xFF3
  7655                           intcon	equ	0xFF2
  7656                           intcon2	equ	0xFF1
  7657                           postinc0	equ	0xFEE
  7658                           fsr0h	equ	0xFEA
  7659                           fsr0l	equ	0xFE9
  7660                           wreg	equ	0xFE8
  7661                           indf1	equ	0xFE7
  7662                           postinc1	equ	0xFE6
  7663                           postdec1	equ	0xFE5
  7664                           fsr1h	equ	0xFE2
  7665                           fsr1l	equ	0xFE1
  7666                           bsr	equ	0xFE0
  7667                           indf2	equ	0xFDF
  7668                           postinc2	equ	0xFDE
  7669                           postdec2	equ	0xFDD
  7670                           fsr2h	equ	0xFDA
  7671                           fsr2l	equ	0xFD9
  7672                           status	equ	0xFD8
  7673                           
  7674 ;; *************** function i1_SetChanADC *****************
  7675 ;; Defined at:
  7676 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  channel         1    wreg     unsigned char 
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;  channel         1    1[COMRAM] unsigned char 
  7681 ;; Return value:  Size  Location     Type
  7682 ;;		None               void
  7683 ;; Registers used:
  7684 ;;		wreg, status,2, status,0
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7690 ;;      Params:         0       0       0       0       0
  7691 ;;      Locals:         1       0       0       0       0
  7692 ;;      Temps:          1       0       0       0       0
  7693 ;;      Totals:         2       0       0       0       0
  7694 ;;Total ram usage:        2 bytes
  7695 ;; Hardware stack levels used:    1
  7696 ;; Hardware stack levels required when called:    6
  7697 ;; This function calls:
  7698 ;;		Nothing
  7699 ;; This function is called by:
  7700 ;;		_adc_int_handler
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text45
  7705  002D08                     __ptext45:
  7706                           	opt stack 0
  7707  002D08                     i1_SetChanADC:
  7708                           	opt stack 18
  7709                           
  7710                           ;incstack = 0
  7711                           ;i1SetChanADC@channel stored from wreg
  7712  002D08  CFE8 F002          	movff	wreg,i1SetChanADC@channel
  7713  002D0C  CFC2 F001          	movff	4034,??i1_SetChanADC	;volatile
  7714  002D10  0EC3               	movlw	195
  7715  002D12  1601               	andwf	??i1_SetChanADC,f,c
  7716  002D14  90D8               	bcf	status,0,c
  7717  002D16  3002               	rrcf	i1SetChanADC@channel,w,c
  7718  002D18  0B3C               	andlw	60
  7719  002D1A  1001               	iorwf	??i1_SetChanADC,w,c
  7720  002D1C  6EC2               	movwf	4034,c	;volatile
  7721  002D1E  0012               	return	
  7722  002D20                     __end_ofi1_SetChanADC:
  7723                           	opt stack 0
  7724                           pclatu	equ	0xFFB
  7725                           pclath	equ	0xFFA
  7726                           tblptru	equ	0xFF8
  7727                           tblptrh	equ	0xFF7
  7728                           tblptrl	equ	0xFF6
  7729                           tablat	equ	0xFF5
  7730                           prodh	equ	0xFF4
  7731                           prodl	equ	0xFF3
  7732                           intcon	equ	0xFF2
  7733                           intcon2	equ	0xFF1
  7734                           postinc0	equ	0xFEE
  7735                           fsr0h	equ	0xFEA
  7736                           fsr0l	equ	0xFE9
  7737                           wreg	equ	0xFE8
  7738                           indf1	equ	0xFE7
  7739                           postinc1	equ	0xFE6
  7740                           postdec1	equ	0xFE5
  7741                           fsr1h	equ	0xFE2
  7742                           fsr1l	equ	0xFE1
  7743                           bsr	equ	0xFE0
  7744                           indf2	equ	0xFDF
  7745                           postinc2	equ	0xFDE
  7746                           postdec2	equ	0xFDD
  7747                           fsr2h	equ	0xFDA
  7748                           fsr2l	equ	0xFD9
  7749                           status	equ	0xFD8
  7750                           
  7751 ;; *************** function ___fttol *****************
  7752 ;; Defined at:
  7753 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;  f1              3    8[COMRAM] float 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;  lval            4   18[COMRAM] unsigned long 
  7758 ;;  exp1            1   22[COMRAM] unsigned char 
  7759 ;;  sign1           1   17[COMRAM] unsigned char 
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  4    8[COMRAM] long 
  7762 ;; Registers used:
  7763 ;;		wreg, status,2, status,0
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7769 ;;      Params:         4       0       0       0       0
  7770 ;;      Locals:         6       0       0       0       0
  7771 ;;      Temps:          5       0       0       0       0
  7772 ;;      Totals:        15       0       0       0       0
  7773 ;;Total ram usage:       15 bytes
  7774 ;; Hardware stack levels used:    1
  7775 ;; Hardware stack levels required when called:    6
  7776 ;; This function calls:
  7777 ;;		Nothing
  7778 ;; This function is called by:
  7779 ;;		_adc_int_handler
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           	psect	text46
  7784  001898                     __ptext46:
  7785                           	opt stack 0
  7786  001898                     ___fttol:
  7787                           	opt stack 18
  7788                           
  7789                           ;incstack = 0
  7790  001898  C00B  F00D         	movff	___fttol@f1+2,??___fttol
  7791  00189C  6A0E               	clrf	(??___fttol+1)& (0+255),c
  7792  00189E  6A0F               	clrf	(??___fttol+2)& (0+255),c
  7793  0018A0  340A               	rlcf	___fttol@f1+1,w,c
  7794  0018A2  360D               	rlcf	??___fttol& (0+255),f,c
  7795  0018A4  E301               	bnc	u388_21
  7796  0018A6  800E               	bsf	(??___fttol+1)& (0+255),0,c
  7797  0018A8                     u388_21:
  7798  0018A8  500D               	movf	??___fttol,w,c
  7799  0018AA  6E17               	movwf	___fttol@exp1,c
  7800  0018AC  6617               	tstfsz	___fttol@exp1& (0+255),c
  7801  0018AE  D009               	goto	i1l4528
  7802  0018B0  0E00               	movlw	0
  7803  0018B2  6E09               	movwf	?___fttol,c
  7804  0018B4  0E00               	movlw	0
  7805  0018B6  6E0A               	movwf	?___fttol+1,c
  7806  0018B8  0E00               	movlw	0
  7807  0018BA  6E0B               	movwf	?___fttol+2,c
  7808  0018BC  0E00               	movlw	0
  7809  0018BE  6E0C               	movwf	?___fttol+3,c
  7810  0018C0  0012               	return	
  7811  0018C2                     i1l4528:
  7812  0018C2  0E17               	movlw	23
  7813  0018C4  6E0D               	movwf	??___fttol& (0+255),c
  7814  0018C6  C009  F00E         	movff	___fttol@f1,??___fttol+1
  7815  0018CA  C00A  F00F         	movff	___fttol@f1+1,??___fttol+2
  7816  0018CE  C00B  F010         	movff	___fttol@f1+2,??___fttol+3
  7817  0018D2  280D               	incf	??___fttol,w,c
  7818  0018D4  6E11               	movwf	(??___fttol+4)& (0+255),c
  7819  0018D6  D004               	goto	i1u390_20
  7820  0018D8                     i1u390_25:
  7821  0018D8  90D8               	bcf	status,0,c
  7822  0018DA  3210               	rrcf	??___fttol+3,f,c
  7823  0018DC  320F               	rrcf	??___fttol+2,f,c
  7824  0018DE  320E               	rrcf	??___fttol+1,f,c
  7825  0018E0                     i1u390_20:
  7826  0018E0  2E11               	decfsz	(??___fttol+4)& (0+255),f,c
  7827  0018E2  D7FA               	goto	i1u390_25
  7828  0018E4  500E               	movf	??___fttol+1,w,c
  7829  0018E6  6E12               	movwf	___fttol@sign1,c
  7830  0018E8  8E0A               	bsf	___fttol@f1+1,7,c
  7831  0018EA  0EFF               	movlw	255
  7832  0018EC  1609               	andwf	___fttol@f1,f,c
  7833  0018EE  0EFF               	movlw	255
  7834  0018F0  160A               	andwf	___fttol@f1+1,f,c
  7835  0018F2  0E00               	movlw	0
  7836  0018F4  160B               	andwf	___fttol@f1+2,f,c
  7837  0018F6  5009               	movf	___fttol@f1,w,c
  7838  0018F8  6E13               	movwf	___fttol@lval,c
  7839  0018FA  500A               	movf	___fttol@f1+1,w,c
  7840  0018FC  6E14               	movwf	___fttol@lval+1,c
  7841  0018FE  500B               	movf	___fttol@f1+2,w,c
  7842  001900  6E15               	movwf	___fttol@lval+2,c
  7843  001902  6A16               	clrf	___fttol@lval+3,c
  7844  001904  0E8E               	movlw	142
  7845  001906  5E17               	subwf	___fttol@exp1,f,c
  7846  001908  AE17               	btfss	___fttol@exp1,7,c
  7847  00190A  D019               	goto	i1l4550
  7848  00190C  5017               	movf	___fttol@exp1,w,c
  7849  00190E  0A80               	xorlw	128
  7850  001910  6E0D               	movwf	??___fttol& (0+255),c
  7851  001912  0EF1               	movlw	241
  7852  001914  0A80               	xorlw	128
  7853  001916  5C0D               	subwf	??___fttol,w,c
  7854  001918  B0D8               	btfsc	status,0,c
  7855  00191A  D009               	goto	i1l4546
  7856  00191C  0E00               	movlw	0
  7857  00191E  6E09               	movwf	?___fttol,c
  7858  001920  0E00               	movlw	0
  7859  001922  6E0A               	movwf	?___fttol+1,c
  7860  001924  0E00               	movlw	0
  7861  001926  6E0B               	movwf	?___fttol+2,c
  7862  001928  0E00               	movlw	0
  7863  00192A  6E0C               	movwf	?___fttol+3,c
  7864  00192C  0012               	return	
  7865  00192E                     i1l4546:
  7866  00192E  90D8               	bcf	status,0,c
  7867  001930  3216               	rrcf	___fttol@lval+3,f,c
  7868  001932  3215               	rrcf	___fttol@lval+2,f,c
  7869  001934  3214               	rrcf	___fttol@lval+1,f,c
  7870  001936  3213               	rrcf	___fttol@lval,f,c
  7871  001938  3E17               	incfsz	___fttol@exp1,f,c
  7872  00193A  D7F9               	goto	i1l4546
  7873  00193C  D014               	goto	i1l4560
  7874  00193E                     i1l4550:
  7875  00193E  0E17               	movlw	23
  7876  001940  6417               	cpfsgt	___fttol@exp1,c
  7877  001942  D00F               	goto	i1l4558
  7878  001944  0E00               	movlw	0
  7879  001946  6E09               	movwf	?___fttol,c
  7880  001948  0E00               	movlw	0
  7881  00194A  6E0A               	movwf	?___fttol+1,c
  7882  00194C  0E00               	movlw	0
  7883  00194E  6E0B               	movwf	?___fttol+2,c
  7884  001950  0E00               	movlw	0
  7885  001952  6E0C               	movwf	?___fttol+3,c
  7886  001954  0012               	return	
  7887  001956                     i1l4556:
  7888  001956  90D8               	bcf	status,0,c
  7889  001958  3613               	rlcf	___fttol@lval,f,c
  7890  00195A  3614               	rlcf	___fttol@lval+1,f,c
  7891  00195C  3615               	rlcf	___fttol@lval+2,f,c
  7892  00195E  3616               	rlcf	___fttol@lval+3,f,c
  7893  001960  0617               	decf	___fttol@exp1,f,c
  7894  001962                     i1l4558:
  7895  001962  6617               	tstfsz	___fttol@exp1,c
  7896  001964  D7F8               	goto	i1l4556
  7897  001966                     i1l4560:
  7898  001966  5012               	movf	___fttol@sign1,w,c
  7899  001968  B4D8               	btfsc	status,2,c
  7900  00196A  D008               	goto	i1l4564
  7901  00196C  1E16               	comf	___fttol@lval+3,f,c
  7902  00196E  1E15               	comf	___fttol@lval+2,f,c
  7903  001970  1E14               	comf	___fttol@lval+1,f,c
  7904  001972  6C13               	negf	___fttol@lval,c
  7905  001974  0E00               	movlw	0
  7906  001976  2214               	addwfc	___fttol@lval+1,f,c
  7907  001978  2215               	addwfc	___fttol@lval+2,f,c
  7908  00197A  2216               	addwfc	___fttol@lval+3,f,c
  7909  00197C                     i1l4564:
  7910  00197C  C013  F009         	movff	___fttol@lval,?___fttol
  7911  001980  C014  F00A         	movff	___fttol@lval+1,?___fttol+1
  7912  001984  C015  F00B         	movff	___fttol@lval+2,?___fttol+2
  7913  001988  C016  F00C         	movff	___fttol@lval+3,?___fttol+3
  7914  00198C  0012               	return	
  7915  00198E                     __end_of___fttol:
  7916                           	opt stack 0
  7917                           pclatu	equ	0xFFB
  7918                           pclath	equ	0xFFA
  7919                           tblptru	equ	0xFF8
  7920                           tblptrh	equ	0xFF7
  7921                           tblptrl	equ	0xFF6
  7922                           tablat	equ	0xFF5
  7923                           prodh	equ	0xFF4
  7924                           prodl	equ	0xFF3
  7925                           intcon	equ	0xFF2
  7926                           intcon2	equ	0xFF1
  7927                           postinc0	equ	0xFEE
  7928                           fsr0h	equ	0xFEA
  7929                           fsr0l	equ	0xFE9
  7930                           wreg	equ	0xFE8
  7931                           indf1	equ	0xFE7
  7932                           postinc1	equ	0xFE6
  7933                           postdec1	equ	0xFE5
  7934                           fsr1h	equ	0xFE2
  7935                           fsr1l	equ	0xFE1
  7936                           bsr	equ	0xFE0
  7937                           indf2	equ	0xFDF
  7938                           postinc2	equ	0xFDE
  7939                           postdec2	equ	0xFDD
  7940                           fsr2h	equ	0xFDA
  7941                           fsr2l	equ	0xFD9
  7942                           status	equ	0xFD8
  7943                           
  7944 ;; *************** function ___ftmul *****************
  7945 ;; Defined at:
  7946 ;;		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftmul.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;  f1              3   13[COMRAM] float 
  7949 ;;  f2              3   16[COMRAM] float 
  7950 ;; Auto vars:     Size  Location     Type
  7951 ;;  f3_as_produc    3   23[COMRAM] unsigned um
  7952 ;;  sign            1   27[COMRAM] unsigned char 
  7953 ;;  cntr            1   26[COMRAM] unsigned char 
  7954 ;;  exp             1   22[COMRAM] unsigned char 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  3   13[COMRAM] float 
  7957 ;; Registers used:
  7958 ;;		wreg, status,2, status,0, cstack
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7964 ;;      Params:         6       0       0       0       0
  7965 ;;      Locals:         6       0       0       0       0
  7966 ;;      Temps:          3       0       0       0       0
  7967 ;;      Totals:        15       0       0       0       0
  7968 ;;Total ram usage:       15 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; Hardware stack levels required when called:    7
  7971 ;; This function calls:
  7972 ;;		___ftpack
  7973 ;; This function is called by:
  7974 ;;		_adc_int_handler
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text47
  7979  0017A0                     __ptext47:
  7980                           	opt stack 0
  7981  0017A0                     ___ftmul:
  7982                           	opt stack 17
  7983                           
  7984                           ;incstack = 0
  7985  0017A0  C010  F014         	movff	___ftmul@f1+2,??___ftmul
  7986  0017A4  6A15               	clrf	(??___ftmul+1)& (0+255),c
  7987  0017A6  6A16               	clrf	(??___ftmul+2)& (0+255),c
  7988  0017A8  340F               	rlcf	___ftmul@f1+1,w,c
  7989  0017AA  3614               	rlcf	??___ftmul& (0+255),f,c
  7990  0017AC  E301               	bnc	u405_21
  7991  0017AE  8015               	bsf	(??___ftmul+1)& (0+255),0,c
  7992  0017B0                     u405_21:
  7993  0017B0  5014               	movf	??___ftmul,w,c
  7994  0017B2  6E17               	movwf	___ftmul@exp,c
  7995  0017B4  6617               	tstfsz	___ftmul@exp& (0+255),c
  7996  0017B6  D007               	goto	i1l4666
  7997  0017B8  0E00               	movlw	0
  7998  0017BA  6E0E               	movwf	?___ftmul,c
  7999  0017BC  0E00               	movlw	0
  8000  0017BE  6E0F               	movwf	?___ftmul+1,c
  8001  0017C0  0E00               	movlw	0
  8002  0017C2  6E10               	movwf	?___ftmul+2,c
  8003  0017C4  0012               	return	
  8004  0017C6                     i1l4666:
  8005  0017C6  C013  F014         	movff	___ftmul@f2+2,??___ftmul
  8006  0017CA  6A15               	clrf	(??___ftmul+1)& (0+255),c
  8007  0017CC  6A16               	clrf	(??___ftmul+2)& (0+255),c
  8008  0017CE  3412               	rlcf	___ftmul@f2+1,w,c
  8009  0017D0  3614               	rlcf	??___ftmul& (0+255),f,c
  8010  0017D2  E301               	bnc	u407_21
  8011  0017D4  8015               	bsf	(??___ftmul+1)& (0+255),0,c
  8012  0017D6                     u407_21:
  8013  0017D6  5014               	movf	??___ftmul,w,c
  8014  0017D8  6E1C               	movwf	___ftmul@sign,c
  8015  0017DA  661C               	tstfsz	___ftmul@sign& (0+255),c
  8016  0017DC  D007               	goto	i1l4672
  8017  0017DE  0E00               	movlw	0
  8018  0017E0  6E0E               	movwf	?___ftmul,c
  8019  0017E2  0E00               	movlw	0
  8020  0017E4  6E0F               	movwf	?___ftmul+1,c
  8021  0017E6  0E00               	movlw	0
  8022  0017E8  6E10               	movwf	?___ftmul+2,c
  8023  0017EA  0012               	return	
  8024  0017EC                     i1l4672:
  8025  0017EC  501C               	movf	___ftmul@sign,w,c
  8026  0017EE  0F7B               	addlw	123
  8027  0017F0  2617               	addwf	___ftmul@exp,f,c
  8028  0017F2  C010  F01C         	movff	___ftmul@f1+2,___ftmul@sign
  8029  0017F6  5013               	movf	___ftmul@f2+2,w,c
  8030  0017F8  1A1C               	xorwf	___ftmul@sign,f,c
  8031  0017FA  0E80               	movlw	128
  8032  0017FC  161C               	andwf	___ftmul@sign,f,c
  8033  0017FE  8E0F               	bsf	___ftmul@f1+1,7,c
  8034  001800  8E12               	bsf	___ftmul@f2+1,7,c
  8035  001802  0EFF               	movlw	255
  8036  001804  1611               	andwf	___ftmul@f2,f,c
  8037  001806  0EFF               	movlw	255
  8038  001808  1612               	andwf	___ftmul@f2+1,f,c
  8039  00180A  0E00               	movlw	0
  8040  00180C  1613               	andwf	___ftmul@f2+2,f,c
  8041  00180E  0E00               	movlw	0
  8042  001810  6E18               	movwf	___ftmul@f3_as_product,c
  8043  001812  0E00               	movlw	0
  8044  001814  6E19               	movwf	___ftmul@f3_as_product+1,c
  8045  001816  0E00               	movlw	0
  8046  001818  6E1A               	movwf	___ftmul@f3_as_product+2,c
  8047  00181A  6E14               	movwf	??___ftmul& (0+255),c
  8048  00181C  0E07               	movlw	7
  8049  00181E  6E1B               	movwf	___ftmul@cntr,c
  8050  001820  5014               	movf	??___ftmul& (0+255),w,c
  8051  001822                     i1l4686:
  8052  001822  A00E               	btfss	___ftmul@f1,0,c
  8053  001824  D006               	goto	i1l4690
  8054  001826  5011               	movf	___ftmul@f2,w,c
  8055  001828  2618               	addwf	___ftmul@f3_as_product,f,c
  8056  00182A  5012               	movf	___ftmul@f2+1,w,c
  8057  00182C  2219               	addwfc	___ftmul@f3_as_product+1,f,c
  8058  00182E  5013               	movf	___ftmul@f2+2,w,c
  8059  001830  221A               	addwfc	___ftmul@f3_as_product+2,f,c
  8060  001832                     i1l4690:
  8061  001832  90D8               	bcf	status,0,c
  8062  001834  3210               	rrcf	___ftmul@f1+2,f,c
  8063  001836  320F               	rrcf	___ftmul@f1+1,f,c
  8064  001838  320E               	rrcf	___ftmul@f1,f,c
  8065  00183A  90D8               	bcf	status,0,c
  8066  00183C  3611               	rlcf	___ftmul@f2,f,c
  8067  00183E  3612               	rlcf	___ftmul@f2+1,f,c
  8068  001840  3613               	rlcf	___ftmul@f2+2,f,c
  8069  001842  2E1B               	decfsz	___ftmul@cntr,f,c
  8070  001844  D7EE               	goto	i1l4686
  8071  001846  6E14               	movwf	??___ftmul& (0+255),c
  8072  001848  0E09               	movlw	9
  8073  00184A  6E1B               	movwf	___ftmul@cntr,c
  8074  00184C  5014               	movf	??___ftmul& (0+255),w,c
  8075  00184E                     i1l4696:
  8076  00184E  A00E               	btfss	___ftmul@f1,0,c
  8077  001850  D006               	goto	i1l4700
  8078  001852  5011               	movf	___ftmul@f2,w,c
  8079  001854  2618               	addwf	___ftmul@f3_as_product,f,c
  8080  001856  5012               	movf	___ftmul@f2+1,w,c
  8081  001858  2219               	addwfc	___ftmul@f3_as_product+1,f,c
  8082  00185A  5013               	movf	___ftmul@f2+2,w,c
  8083  00185C  221A               	addwfc	___ftmul@f3_as_product+2,f,c
  8084  00185E                     i1l4700:
  8085  00185E  90D8               	bcf	status,0,c
  8086  001860  3210               	rrcf	___ftmul@f1+2,f,c
  8087  001862  320F               	rrcf	___ftmul@f1+1,f,c
  8088  001864  320E               	rrcf	___ftmul@f1,f,c
  8089  001866  90D8               	bcf	status,0,c
  8090  001868  321A               	rrcf	___ftmul@f3_as_product+2,f,c
  8091  00186A  3219               	rrcf	___ftmul@f3_as_product+1,f,c
  8092  00186C  3218               	rrcf	___ftmul@f3_as_product,f,c
  8093  00186E  2E1B               	decfsz	___ftmul@cntr,f,c
  8094  001870  D7EE               	goto	i1l4696
  8095  001872  C018  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  8096  001876  C019  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8097  00187A  C01A  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8098  00187E  C017  F004         	movff	___ftmul@exp,___ftpack@exp
  8099  001882  C01C  F005         	movff	___ftmul@sign,___ftpack@sign
  8100  001886  EC14  F00F         	call	___ftpack	;wreg free
  8101  00188A  C001  F00E         	movff	?___ftpack,?___ftmul
  8102  00188E  C002  F00F         	movff	?___ftpack+1,?___ftmul+1
  8103  001892  C003  F010         	movff	?___ftpack+2,?___ftmul+2
  8104  001896  0012               	return	
  8105  001898                     __end_of___ftmul:
  8106                           	opt stack 0
  8107                           pclatu	equ	0xFFB
  8108                           pclath	equ	0xFFA
  8109                           tblptru	equ	0xFF8
  8110                           tblptrh	equ	0xFF7
  8111                           tblptrl	equ	0xFF6
  8112                           tablat	equ	0xFF5
  8113                           prodh	equ	0xFF4
  8114                           prodl	equ	0xFF3
  8115                           intcon	equ	0xFF2
  8116                           intcon2	equ	0xFF1
  8117                           postinc0	equ	0xFEE
  8118                           fsr0h	equ	0xFEA
  8119                           fsr0l	equ	0xFE9
  8120                           wreg	equ	0xFE8
  8121                           indf1	equ	0xFE7
  8122                           postinc1	equ	0xFE6
  8123                           postdec1	equ	0xFE5
  8124                           fsr1h	equ	0xFE2
  8125                           fsr1l	equ	0xFE1
  8126                           bsr	equ	0xFE0
  8127                           indf2	equ	0xFDF
  8128                           postinc2	equ	0xFDE
  8129                           postdec2	equ	0xFDD
  8130                           fsr2h	equ	0xFDA
  8131                           fsr2l	equ	0xFD9
  8132                           status	equ	0xFD8
  8133                           
  8134 ;; *************** function ___ftge *****************
  8135 ;; Defined at:
  8136 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftge.c"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;  ff1             3    0[COMRAM] float 
  8139 ;;  ff2             3    3[COMRAM] float 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;		None
  8142 ;; Return value:  Size  Location     Type
  8143 ;;		None               void
  8144 ;; Registers used:
  8145 ;;		wreg, status,2, status,0
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8151 ;;      Params:         6       0       0       0       0
  8152 ;;      Locals:         0       0       0       0       0
  8153 ;;      Temps:          3       0       0       0       0
  8154 ;;      Totals:         9       0       0       0       0
  8155 ;;Total ram usage:        9 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; Hardware stack levels required when called:    6
  8158 ;; This function calls:
  8159 ;;		Nothing
  8160 ;; This function is called by:
  8161 ;;		_adc_int_handler
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           	psect	text48
  8166  0021C2                     __ptext48:
  8167                           	opt stack 0
  8168  0021C2                     ___ftge:
  8169                           	opt stack 18
  8170                           
  8171                           ;incstack = 0
  8172  0021C2  AE03               	btfss	___ftge@ff1+2,7,c
  8173  0021C4  D016               	goto	i1l4188
  8174  0021C6  C001  F007         	movff	___ftge@ff1,??___ftge
  8175  0021CA  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  8176  0021CE  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  8177  0021D2  1E07               	comf	??___ftge,f,c
  8178  0021D4  1E08               	comf	??___ftge+1,f,c
  8179  0021D6  1E09               	comf	??___ftge+2,f,c
  8180  0021D8  2A07               	incf	??___ftge,f,c
  8181  0021DA  0E00               	movlw	0
  8182  0021DC  2208               	addwfc	??___ftge+1,f,c
  8183  0021DE  2209               	addwfc	??___ftge+2,f,c
  8184  0021E0  0E00               	movlw	0
  8185  0021E2  2407               	addwf	??___ftge,w,c
  8186  0021E4  6E01               	movwf	___ftge@ff1,c
  8187  0021E6  0E00               	movlw	0
  8188  0021E8  2008               	addwfc	??___ftge+1,w,c
  8189  0021EA  6E02               	movwf	___ftge@ff1+1,c
  8190  0021EC  0E80               	movlw	128
  8191  0021EE  2009               	addwfc	??___ftge+2,w,c
  8192  0021F0  6E03               	movwf	___ftge@ff1+2,c
  8193  0021F2                     i1l4188:
  8194  0021F2  AE06               	btfss	___ftge@ff2+2,7,c
  8195  0021F4  D016               	goto	i1l4192
  8196  0021F6  C004  F007         	movff	___ftge@ff2,??___ftge
  8197  0021FA  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  8198  0021FE  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  8199  002202  1E07               	comf	??___ftge,f,c
  8200  002204  1E08               	comf	??___ftge+1,f,c
  8201  002206  1E09               	comf	??___ftge+2,f,c
  8202  002208  2A07               	incf	??___ftge,f,c
  8203  00220A  0E00               	movlw	0
  8204  00220C  2208               	addwfc	??___ftge+1,f,c
  8205  00220E  2209               	addwfc	??___ftge+2,f,c
  8206  002210  0E00               	movlw	0
  8207  002212  2407               	addwf	??___ftge,w,c
  8208  002214  6E04               	movwf	___ftge@ff2,c
  8209  002216  0E00               	movlw	0
  8210  002218  2008               	addwfc	??___ftge+1,w,c
  8211  00221A  6E05               	movwf	___ftge@ff2+1,c
  8212  00221C  0E80               	movlw	128
  8213  00221E  2009               	addwfc	??___ftge+2,w,c
  8214  002220  6E06               	movwf	___ftge@ff2+2,c
  8215  002222                     i1l4192:
  8216  002222  0E00               	movlw	0
  8217  002224  1A01               	xorwf	___ftge@ff1,f,c
  8218  002226  0E00               	movlw	0
  8219  002228  1A02               	xorwf	___ftge@ff1+1,f,c
  8220  00222A  0E80               	movlw	128
  8221  00222C  1A03               	xorwf	___ftge@ff1+2,f,c
  8222  00222E  0E00               	movlw	0
  8223  002230  1A04               	xorwf	___ftge@ff2,f,c
  8224  002232  0E00               	movlw	0
  8225  002234  1A05               	xorwf	___ftge@ff2+1,f,c
  8226  002236  0E80               	movlw	128
  8227  002238  1A06               	xorwf	___ftge@ff2+2,f,c
  8228  00223A  5004               	movf	___ftge@ff2,w,c
  8229  00223C  5C01               	subwf	___ftge@ff1,w,c
  8230  00223E  5005               	movf	___ftge@ff2+1,w,c
  8231  002240  5802               	subwfb	___ftge@ff1+1,w,c
  8232  002242  5006               	movf	___ftge@ff2+2,w,c
  8233  002244  5803               	subwfb	___ftge@ff1+2,w,c
  8234  002246  B0D8               	btfsc	status,0,c
  8235  002248  D002               	goto	i1l4198
  8236  00224A  90D8               	bcf	status,0,c
  8237  00224C  0012               	return	
  8238  00224E                     i1l4198:
  8239  00224E  80D8               	bsf	status,0,c
  8240  002250  0012               	return	
  8241  002252                     __end_of___ftge:
  8242                           	opt stack 0
  8243                           pclatu	equ	0xFFB
  8244                           pclath	equ	0xFFA
  8245                           tblptru	equ	0xFF8
  8246                           tblptrh	equ	0xFF7
  8247                           tblptrl	equ	0xFF6
  8248                           tablat	equ	0xFF5
  8249                           prodh	equ	0xFF4
  8250                           prodl	equ	0xFF3
  8251                           intcon	equ	0xFF2
  8252                           intcon2	equ	0xFF1
  8253                           postinc0	equ	0xFEE
  8254                           fsr0h	equ	0xFEA
  8255                           fsr0l	equ	0xFE9
  8256                           wreg	equ	0xFE8
  8257                           indf1	equ	0xFE7
  8258                           postinc1	equ	0xFE6
  8259                           postdec1	equ	0xFE5
  8260                           fsr1h	equ	0xFE2
  8261                           fsr1l	equ	0xFE1
  8262                           bsr	equ	0xFE0
  8263                           indf2	equ	0xFDF
  8264                           postinc2	equ	0xFDE
  8265                           postdec2	equ	0xFDD
  8266                           fsr2h	equ	0xFDA
  8267                           fsr2l	equ	0xFD9
  8268                           status	equ	0xFD8
  8269                           
  8270 ;; *************** function ___ftdiv *****************
  8271 ;; Defined at:
  8272 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftdiv.c"
  8273 ;; Parameters:    Size  Location     Type
  8274 ;;  f1              3   35[COMRAM] float 
  8275 ;;  f2              3   38[COMRAM] float 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  f3              3   45[COMRAM] float 
  8278 ;;  sign            1   49[COMRAM] unsigned char 
  8279 ;;  exp             1   48[COMRAM] unsigned char 
  8280 ;;  cntr            1   44[COMRAM] unsigned char 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  3   35[COMRAM] float 
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0, cstack
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8290 ;;      Params:         6       0       0       0       0
  8291 ;;      Locals:         6       0       0       0       0
  8292 ;;      Temps:          3       0       0       0       0
  8293 ;;      Totals:        15       0       0       0       0
  8294 ;;Total ram usage:       15 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    7
  8297 ;; This function calls:
  8298 ;;		___ftpack
  8299 ;; This function is called by:
  8300 ;;		_adc_int_handler
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text49
  8305  00198E                     __ptext49:
  8306                           	opt stack 0
  8307  00198E                     ___ftdiv:
  8308                           	opt stack 17
  8309                           
  8310                           ;incstack = 0
  8311  00198E  C026  F02A         	movff	___ftdiv@f1+2,??___ftdiv
  8312  001992  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  8313  001994  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  8314  001996  3425               	rlcf	___ftdiv@f1+1,w,c
  8315  001998  362A               	rlcf	??___ftdiv& (0+255),f,c
  8316  00199A  E301               	bnc	u400_21
  8317  00199C  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  8318  00199E                     u400_21:
  8319  00199E  502A               	movf	??___ftdiv,w,c
  8320  0019A0  6E31               	movwf	___ftdiv@exp,c
  8321  0019A2  6631               	tstfsz	___ftdiv@exp& (0+255),c
  8322  0019A4  D007               	goto	i1l4622
  8323  0019A6  0E00               	movlw	0
  8324  0019A8  6E24               	movwf	?___ftdiv,c
  8325  0019AA  0E00               	movlw	0
  8326  0019AC  6E25               	movwf	?___ftdiv+1,c
  8327  0019AE  0E00               	movlw	0
  8328  0019B0  6E26               	movwf	?___ftdiv+2,c
  8329  0019B2  0012               	return	
  8330  0019B4                     i1l4622:
  8331  0019B4  C029  F02A         	movff	___ftdiv@f2+2,??___ftdiv
  8332  0019B8  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  8333  0019BA  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  8334  0019BC  3428               	rlcf	___ftdiv@f2+1,w,c
  8335  0019BE  362A               	rlcf	??___ftdiv& (0+255),f,c
  8336  0019C0  E301               	bnc	u402_21
  8337  0019C2  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  8338  0019C4                     u402_21:
  8339  0019C4  502A               	movf	??___ftdiv,w,c
  8340  0019C6  6E32               	movwf	___ftdiv@sign,c
  8341  0019C8  6632               	tstfsz	___ftdiv@sign& (0+255),c
  8342  0019CA  D007               	goto	i1l4628
  8343  0019CC  0E00               	movlw	0
  8344  0019CE  6E24               	movwf	?___ftdiv,c
  8345  0019D0  0E00               	movlw	0
  8346  0019D2  6E25               	movwf	?___ftdiv+1,c
  8347  0019D4  0E00               	movlw	0
  8348  0019D6  6E26               	movwf	?___ftdiv+2,c
  8349  0019D8  0012               	return	
  8350  0019DA                     i1l4628:
  8351  0019DA  0E00               	movlw	0
  8352  0019DC  6E2E               	movwf	___ftdiv@f3,c
  8353  0019DE  0E00               	movlw	0
  8354  0019E0  6E2F               	movwf	___ftdiv@f3+1,c
  8355  0019E2  0E00               	movlw	0
  8356  0019E4  6E30               	movwf	___ftdiv@f3+2,c
  8357  0019E6  5032               	movf	___ftdiv@sign,w,c
  8358  0019E8  0F89               	addlw	137
  8359  0019EA  5E31               	subwf	___ftdiv@exp,f,c
  8360  0019EC  C026  F032         	movff	___ftdiv@f1+2,___ftdiv@sign
  8361  0019F0  5029               	movf	___ftdiv@f2+2,w,c
  8362  0019F2  1A32               	xorwf	___ftdiv@sign,f,c
  8363  0019F4  0E80               	movlw	128
  8364  0019F6  1632               	andwf	___ftdiv@sign,f,c
  8365  0019F8  8E25               	bsf	___ftdiv@f1+1,7,c
  8366  0019FA  0EFF               	movlw	255
  8367  0019FC  1624               	andwf	___ftdiv@f1,f,c
  8368  0019FE  0EFF               	movlw	255
  8369  001A00  1625               	andwf	___ftdiv@f1+1,f,c
  8370  001A02  0E00               	movlw	0
  8371  001A04  1626               	andwf	___ftdiv@f1+2,f,c
  8372  001A06  8E28               	bsf	___ftdiv@f2+1,7,c
  8373  001A08  0EFF               	movlw	255
  8374  001A0A  1627               	andwf	___ftdiv@f2,f,c
  8375  001A0C  0EFF               	movlw	255
  8376  001A0E  1628               	andwf	___ftdiv@f2+1,f,c
  8377  001A10  0E00               	movlw	0
  8378  001A12  1629               	andwf	___ftdiv@f2+2,f,c
  8379  001A14  6E2A               	movwf	??___ftdiv& (0+255),c
  8380  001A16  0E18               	movlw	24
  8381  001A18  6E2D               	movwf	___ftdiv@cntr,c
  8382  001A1A  502A               	movf	??___ftdiv& (0+255),w,c
  8383  001A1C                     i1l1067:
  8384  001A1C  90D8               	bcf	status,0,c
  8385  001A1E  362E               	rlcf	___ftdiv@f3,f,c
  8386  001A20  362F               	rlcf	___ftdiv@f3+1,f,c
  8387  001A22  3630               	rlcf	___ftdiv@f3+2,f,c
  8388  001A24  5027               	movf	___ftdiv@f2,w,c
  8389  001A26  5C24               	subwf	___ftdiv@f1,w,c
  8390  001A28  5028               	movf	___ftdiv@f2+1,w,c
  8391  001A2A  5825               	subwfb	___ftdiv@f1+1,w,c
  8392  001A2C  5029               	movf	___ftdiv@f2+2,w,c
  8393  001A2E  5826               	subwfb	___ftdiv@f1+2,w,c
  8394  001A30  A0D8               	btfss	status,0,c
  8395  001A32  D007               	goto	i1l1068
  8396  001A34  5027               	movf	___ftdiv@f2,w,c
  8397  001A36  5E24               	subwf	___ftdiv@f1,f,c
  8398  001A38  5028               	movf	___ftdiv@f2+1,w,c
  8399  001A3A  5A25               	subwfb	___ftdiv@f1+1,f,c
  8400  001A3C  5029               	movf	___ftdiv@f2+2,w,c
  8401  001A3E  5A26               	subwfb	___ftdiv@f1+2,f,c
  8402  001A40  802E               	bsf	___ftdiv@f3,0,c
  8403  001A42                     i1l1068:
  8404  001A42  90D8               	bcf	status,0,c
  8405  001A44  3624               	rlcf	___ftdiv@f1,f,c
  8406  001A46  3625               	rlcf	___ftdiv@f1+1,f,c
  8407  001A48  3626               	rlcf	___ftdiv@f1+2,f,c
  8408  001A4A  2E2D               	decfsz	___ftdiv@cntr,f,c
  8409  001A4C  D7E7               	goto	i1l1067
  8410  001A4E  C02E  F001         	movff	___ftdiv@f3,___ftpack@arg
  8411  001A52  C02F  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8412  001A56  C030  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8413  001A5A  C031  F004         	movff	___ftdiv@exp,___ftpack@exp
  8414  001A5E  C032  F005         	movff	___ftdiv@sign,___ftpack@sign
  8415  001A62  EC14  F00F         	call	___ftpack	;wreg free
  8416  001A66  C001  F024         	movff	?___ftpack,?___ftdiv
  8417  001A6A  C002  F025         	movff	?___ftpack+1,?___ftdiv+1
  8418  001A6E  C003  F026         	movff	?___ftpack+2,?___ftdiv+2
  8419  001A72  0012               	return	
  8420  001A74                     __end_of___ftdiv:
  8421                           	opt stack 0
  8422                           pclatu	equ	0xFFB
  8423                           pclath	equ	0xFFA
  8424                           tblptru	equ	0xFF8
  8425                           tblptrh	equ	0xFF7
  8426                           tblptrl	equ	0xFF6
  8427                           tablat	equ	0xFF5
  8428                           prodh	equ	0xFF4
  8429                           prodl	equ	0xFF3
  8430                           intcon	equ	0xFF2
  8431                           intcon2	equ	0xFF1
  8432                           postinc0	equ	0xFEE
  8433                           fsr0h	equ	0xFEA
  8434                           fsr0l	equ	0xFE9
  8435                           wreg	equ	0xFE8
  8436                           indf1	equ	0xFE7
  8437                           postinc1	equ	0xFE6
  8438                           postdec1	equ	0xFE5
  8439                           fsr1h	equ	0xFE2
  8440                           fsr1l	equ	0xFE1
  8441                           bsr	equ	0xFE0
  8442                           indf2	equ	0xFDF
  8443                           postinc2	equ	0xFDE
  8444                           postdec2	equ	0xFDD
  8445                           fsr2h	equ	0xFDA
  8446                           fsr2l	equ	0xFD9
  8447                           status	equ	0xFD8
  8448                           
  8449 ;; *************** function ___ftadd *****************
  8450 ;; Defined at:
  8451 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftadd.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  f1              3   23[COMRAM] float 
  8454 ;;  f2              3   26[COMRAM] float 
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;  exp1            1   34[COMRAM] unsigned char 
  8457 ;;  exp2            1   33[COMRAM] unsigned char 
  8458 ;;  sign            1   32[COMRAM] unsigned char 
  8459 ;; Return value:  Size  Location     Type
  8460 ;;                  3   23[COMRAM] float 
  8461 ;; Registers used:
  8462 ;;		wreg, status,2, status,0, cstack
  8463 ;; Tracked objects:
  8464 ;;		On entry : 0/0
  8465 ;;		On exit  : 0/0
  8466 ;;		Unchanged: 0/0
  8467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8468 ;;      Params:         6       0       0       0       0
  8469 ;;      Locals:         3       0       0       0       0
  8470 ;;      Temps:          3       0       0       0       0
  8471 ;;      Totals:        12       0       0       0       0
  8472 ;;Total ram usage:       12 bytes
  8473 ;; Hardware stack levels used:    1
  8474 ;; Hardware stack levels required when called:    7
  8475 ;; This function calls:
  8476 ;;		___ftpack
  8477 ;; This function is called by:
  8478 ;;		_adc_int_handler
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           	psect	text50
  8483  000C4C                     __ptext50:
  8484                           	opt stack 0
  8485  000C4C                     ___ftadd:
  8486                           	opt stack 17
  8487                           
  8488                           ;incstack = 0
  8489  000C4C  C01A  F01E         	movff	___ftadd@f1+2,??___ftadd
  8490  000C50  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  8491  000C52  6A20               	clrf	(??___ftadd+2)& (0+255),c
  8492  000C54  3419               	rlcf	___ftadd@f1+1,w,c
  8493  000C56  361E               	rlcf	??___ftadd& (0+255),f,c
  8494  000C58  E301               	bnc	u366_21
  8495  000C5A  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  8496  000C5C                     u366_21:
  8497  000C5C  501E               	movf	??___ftadd,w,c
  8498  000C5E  6E23               	movwf	___ftadd@exp1,c
  8499  000C60  C01D  F01E         	movff	___ftadd@f2+2,??___ftadd
  8500  000C64  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  8501  000C66  6A20               	clrf	(??___ftadd+2)& (0+255),c
  8502  000C68  341C               	rlcf	___ftadd@f2+1,w,c
  8503  000C6A  361E               	rlcf	??___ftadd& (0+255),f,c
  8504  000C6C  E301               	bnc	u367_21
  8505  000C6E  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  8506  000C70                     u367_21:
  8507  000C70  501E               	movf	??___ftadd,w,c
  8508  000C72  6E22               	movwf	___ftadd@exp2,c
  8509  000C74  5023               	movf	___ftadd@exp1,w,c
  8510  000C76  B4D8               	btfsc	status,2,c
  8511  000C78  D00C               	goto	i1l1033
  8512  000C7A  5022               	movf	___ftadd@exp2,w,c
  8513  000C7C  5C23               	subwf	___ftadd@exp1,w,c
  8514  000C7E  B0D8               	btfsc	status,0,c
  8515  000C80  D00F               	goto	i1l4448
  8516  000C82  5023               	movf	___ftadd@exp1,w,c
  8517  000C84  0800               	sublw	0
  8518  000C86  2422               	addwf	___ftadd@exp2,w,c
  8519  000C88  6E1E               	movwf	??___ftadd& (0+255),c
  8520  000C8A  0E19               	movlw	25
  8521  000C8C  5C1E               	subwf	??___ftadd,w,c
  8522  000C8E  A0D8               	btfss	status,0,c
  8523  000C90  D007               	goto	i1l4448
  8524  000C92                     i1l1033:
  8525  000C92  C01B  F018         	movff	___ftadd@f2,?___ftadd
  8526  000C96  C01C  F019         	movff	___ftadd@f2+1,?___ftadd+1
  8527  000C9A  C01D  F01A         	movff	___ftadd@f2+2,?___ftadd+2
  8528  000C9E  0012               	return	
  8529  000CA0                     i1l4448:
  8530  000CA0  5022               	movf	___ftadd@exp2,w,c
  8531  000CA2  B4D8               	btfsc	status,2,c
  8532  000CA4  D00C               	goto	i1l1037
  8533  000CA6  5023               	movf	___ftadd@exp1,w,c
  8534  000CA8  5C22               	subwf	___ftadd@exp2,w,c
  8535  000CAA  B0D8               	btfsc	status,0,c
  8536  000CAC  D00F               	goto	i1l4454
  8537  000CAE  5022               	movf	___ftadd@exp2,w,c
  8538  000CB0  0800               	sublw	0
  8539  000CB2  2423               	addwf	___ftadd@exp1,w,c
  8540  000CB4  6E1E               	movwf	??___ftadd& (0+255),c
  8541  000CB6  0E19               	movlw	25
  8542  000CB8  5C1E               	subwf	??___ftadd,w,c
  8543  000CBA  A0D8               	btfss	status,0,c
  8544  000CBC  D007               	goto	i1l4454
  8545  000CBE                     i1l1037:
  8546  000CBE  C018  F018         	movff	___ftadd@f1,?___ftadd
  8547  000CC2  C019  F019         	movff	___ftadd@f1+1,?___ftadd+1
  8548  000CC6  C01A  F01A         	movff	___ftadd@f1+2,?___ftadd+2
  8549  000CCA  0012               	return	
  8550  000CCC                     i1l4454:
  8551  000CCC  6E1E               	movwf	??___ftadd& (0+255),c
  8552  000CCE  0E06               	movlw	6
  8553  000CD0  6E21               	movwf	___ftadd@sign,c
  8554  000CD2  501E               	movf	??___ftadd& (0+255),w,c
  8555  000CD4  BE1A               	btfsc	___ftadd@f1+2,7,c
  8556  000CD6  8E21               	bsf	___ftadd@sign,7,c
  8557  000CD8  BE1D               	btfsc	___ftadd@f2+2,7,c
  8558  000CDA  8C21               	bsf	___ftadd@sign,6,c
  8559  000CDC  8E19               	bsf	___ftadd@f1+1,7,c
  8560  000CDE  0EFF               	movlw	255
  8561  000CE0  1618               	andwf	___ftadd@f1,f,c
  8562  000CE2  0EFF               	movlw	255
  8563  000CE4  1619               	andwf	___ftadd@f1+1,f,c
  8564  000CE6  0E00               	movlw	0
  8565  000CE8  161A               	andwf	___ftadd@f1+2,f,c
  8566  000CEA  8E1C               	bsf	___ftadd@f2+1,7,c
  8567  000CEC  0EFF               	movlw	255
  8568  000CEE  161B               	andwf	___ftadd@f2,f,c
  8569  000CF0  0EFF               	movlw	255
  8570  000CF2  161C               	andwf	___ftadd@f2+1,f,c
  8571  000CF4  0E00               	movlw	0
  8572  000CF6  161D               	andwf	___ftadd@f2+2,f,c
  8573  000CF8  5022               	movf	___ftadd@exp2,w,c
  8574  000CFA  5C23               	subwf	___ftadd@exp1,w,c
  8575  000CFC  B0D8               	btfsc	status,0,c
  8576  000CFE  D01A               	goto	i1l4480
  8577  000D00                     i1l4470:
  8578  000D00  90D8               	bcf	status,0,c
  8579  000D02  361B               	rlcf	___ftadd@f2,f,c
  8580  000D04  361C               	rlcf	___ftadd@f2+1,f,c
  8581  000D06  361D               	rlcf	___ftadd@f2+2,f,c
  8582  000D08  0622               	decf	___ftadd@exp2,f,c
  8583  000D0A  5022               	movf	___ftadd@exp2,w,c
  8584  000D0C  1823               	xorwf	___ftadd@exp1,w,c
  8585  000D0E  B4D8               	btfsc	status,2,c
  8586  000D10  D00D               	goto	i1l4478
  8587  000D12  0621               	decf	___ftadd@sign,f,c
  8588  000D14  C021  F01E         	movff	___ftadd@sign,??___ftadd
  8589  000D18  0E07               	movlw	7
  8590  000D1A  161E               	andwf	??___ftadd,f,c
  8591  000D1C  B4D8               	btfsc	status,2,c
  8592  000D1E  D006               	goto	i1l4478
  8593  000D20  D7EF               	goto	i1l4470
  8594  000D22                     i1l4476:
  8595  000D22  90D8               	bcf	status,0,c
  8596  000D24  321A               	rrcf	___ftadd@f1+2,f,c
  8597  000D26  3219               	rrcf	___ftadd@f1+1,f,c
  8598  000D28  3218               	rrcf	___ftadd@f1,f,c
  8599  000D2A  2A23               	incf	___ftadd@exp1,f,c
  8600  000D2C                     i1l4478:
  8601  000D2C  5022               	movf	___ftadd@exp2,w,c
  8602  000D2E  6223               	cpfseq	___ftadd@exp1,c
  8603  000D30  D7F8               	goto	i1l4476
  8604  000D32  D01D               	goto	i1l1048
  8605  000D34                     i1l4480:
  8606  000D34  5023               	movf	___ftadd@exp1,w,c
  8607  000D36  5C22               	subwf	___ftadd@exp2,w,c
  8608  000D38  B0D8               	btfsc	status,0,c
  8609  000D3A  D019               	goto	i1l1048
  8610  000D3C                     i1l4482:
  8611  000D3C  90D8               	bcf	status,0,c
  8612  000D3E  3618               	rlcf	___ftadd@f1,f,c
  8613  000D40  3619               	rlcf	___ftadd@f1+1,f,c
  8614  000D42  361A               	rlcf	___ftadd@f1+2,f,c
  8615  000D44  0623               	decf	___ftadd@exp1,f,c
  8616  000D46  5022               	movf	___ftadd@exp2,w,c
  8617  000D48  1823               	xorwf	___ftadd@exp1,w,c
  8618  000D4A  B4D8               	btfsc	status,2,c
  8619  000D4C  D00D               	goto	i1l4490
  8620  000D4E  0621               	decf	___ftadd@sign,f,c
  8621  000D50  C021  F01E         	movff	___ftadd@sign,??___ftadd
  8622  000D54  0E07               	movlw	7
  8623  000D56  161E               	andwf	??___ftadd,f,c
  8624  000D58  B4D8               	btfsc	status,2,c
  8625  000D5A  D006               	goto	i1l4490
  8626  000D5C  D7EF               	goto	i1l4482
  8627  000D5E                     i1l4488:
  8628  000D5E  90D8               	bcf	status,0,c
  8629  000D60  321D               	rrcf	___ftadd@f2+2,f,c
  8630  000D62  321C               	rrcf	___ftadd@f2+1,f,c
  8631  000D64  321B               	rrcf	___ftadd@f2,f,c
  8632  000D66  2A22               	incf	___ftadd@exp2,f,c
  8633  000D68                     i1l4490:
  8634  000D68  5022               	movf	___ftadd@exp2,w,c
  8635  000D6A  6223               	cpfseq	___ftadd@exp1,c
  8636  000D6C  D7F8               	goto	i1l4488
  8637  000D6E                     i1l1048:
  8638  000D6E  AE21               	btfss	___ftadd@sign,7,c
  8639  000D70  D00C               	goto	i1l1057
  8640  000D72  0EFF               	movlw	255
  8641  000D74  1A18               	xorwf	___ftadd@f1,f,c
  8642  000D76  0EFF               	movlw	255
  8643  000D78  1A19               	xorwf	___ftadd@f1+1,f,c
  8644  000D7A  0EFF               	movlw	255
  8645  000D7C  1A1A               	xorwf	___ftadd@f1+2,f,c
  8646  000D7E  0E01               	movlw	1
  8647  000D80  2618               	addwf	___ftadd@f1,f,c
  8648  000D82  0E00               	movlw	0
  8649  000D84  2219               	addwfc	___ftadd@f1+1,f,c
  8650  000D86  0E00               	movlw	0
  8651  000D88  221A               	addwfc	___ftadd@f1+2,f,c
  8652  000D8A                     i1l1057:
  8653  000D8A  AC21               	btfss	___ftadd@sign,6,c
  8654  000D8C  D00C               	goto	i1l4496
  8655  000D8E  0EFF               	movlw	255
  8656  000D90  1A1B               	xorwf	___ftadd@f2,f,c
  8657  000D92  0EFF               	movlw	255
  8658  000D94  1A1C               	xorwf	___ftadd@f2+1,f,c
  8659  000D96  0EFF               	movlw	255
  8660  000D98  1A1D               	xorwf	___ftadd@f2+2,f,c
  8661  000D9A  0E01               	movlw	1
  8662  000D9C  261B               	addwf	___ftadd@f2,f,c
  8663  000D9E  0E00               	movlw	0
  8664  000DA0  221C               	addwfc	___ftadd@f2+1,f,c
  8665  000DA2  0E00               	movlw	0
  8666  000DA4  221D               	addwfc	___ftadd@f2+2,f,c
  8667  000DA6                     i1l4496:
  8668  000DA6  6E1E               	movwf	??___ftadd& (0+255),c
  8669  000DA8  0E00               	movlw	0
  8670  000DAA  6E21               	movwf	___ftadd@sign,c
  8671  000DAC  501E               	movf	??___ftadd& (0+255),w,c
  8672  000DAE  5018               	movf	___ftadd@f1,w,c
  8673  000DB0  261B               	addwf	___ftadd@f2,f,c
  8674  000DB2  5019               	movf	___ftadd@f1+1,w,c
  8675  000DB4  221C               	addwfc	___ftadd@f2+1,f,c
  8676  000DB6  501A               	movf	___ftadd@f1+2,w,c
  8677  000DB8  221D               	addwfc	___ftadd@f2+2,f,c
  8678  000DBA  AE1D               	btfss	___ftadd@f2+2,7,c
  8679  000DBC  D010               	goto	i1l4506
  8680  000DBE  0EFF               	movlw	255
  8681  000DC0  1A1B               	xorwf	___ftadd@f2,f,c
  8682  000DC2  0EFF               	movlw	255
  8683  000DC4  1A1C               	xorwf	___ftadd@f2+1,f,c
  8684  000DC6  0EFF               	movlw	255
  8685  000DC8  1A1D               	xorwf	___ftadd@f2+2,f,c
  8686  000DCA  0E01               	movlw	1
  8687  000DCC  261B               	addwf	___ftadd@f2,f,c
  8688  000DCE  0E00               	movlw	0
  8689  000DD0  221C               	addwfc	___ftadd@f2+1,f,c
  8690  000DD2  0E00               	movlw	0
  8691  000DD4  221D               	addwfc	___ftadd@f2+2,f,c
  8692  000DD6  6E1E               	movwf	??___ftadd& (0+255),c
  8693  000DD8  0E01               	movlw	1
  8694  000DDA  6E21               	movwf	___ftadd@sign,c
  8695  000DDC  501E               	movf	??___ftadd& (0+255),w,c
  8696  000DDE                     i1l4506:
  8697  000DDE  C01B  F001         	movff	___ftadd@f2,___ftpack@arg
  8698  000DE2  C01C  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  8699  000DE6  C01D  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  8700  000DEA  C023  F004         	movff	___ftadd@exp1,___ftpack@exp
  8701  000DEE  C021  F005         	movff	___ftadd@sign,___ftpack@sign
  8702  000DF2  EC14  F00F         	call	___ftpack	;wreg free
  8703  000DF6  C001  F018         	movff	?___ftpack,?___ftadd
  8704  000DFA  C002  F019         	movff	?___ftpack+1,?___ftadd+1
  8705  000DFE  C003  F01A         	movff	?___ftpack+2,?___ftadd+2
  8706  000E02  0012               	return	
  8707  000E04                     __end_of___ftadd:
  8708                           	opt stack 0
  8709                           pclatu	equ	0xFFB
  8710                           pclath	equ	0xFFA
  8711                           tblptru	equ	0xFF8
  8712                           tblptrh	equ	0xFF7
  8713                           tblptrl	equ	0xFF6
  8714                           tablat	equ	0xFF5
  8715                           prodh	equ	0xFF4
  8716                           prodl	equ	0xFF3
  8717                           intcon	equ	0xFF2
  8718                           intcon2	equ	0xFF1
  8719                           postinc0	equ	0xFEE
  8720                           fsr0h	equ	0xFEA
  8721                           fsr0l	equ	0xFE9
  8722                           wreg	equ	0xFE8
  8723                           indf1	equ	0xFE7
  8724                           postinc1	equ	0xFE6
  8725                           postdec1	equ	0xFE5
  8726                           fsr1h	equ	0xFE2
  8727                           fsr1l	equ	0xFE1
  8728                           bsr	equ	0xFE0
  8729                           indf2	equ	0xFDF
  8730                           postinc2	equ	0xFDE
  8731                           postdec2	equ	0xFDD
  8732                           fsr2h	equ	0xFDA
  8733                           fsr2l	equ	0xFD9
  8734                           status	equ	0xFD8
  8735                           
  8736 ;; *************** function ___ftpack *****************
  8737 ;; Defined at:
  8738 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  arg             3    0[COMRAM] unsigned um
  8741 ;;  exp             1    3[COMRAM] unsigned char 
  8742 ;;  sign            1    4[COMRAM] unsigned char 
  8743 ;; Auto vars:     Size  Location     Type
  8744 ;;		None
  8745 ;; Return value:  Size  Location     Type
  8746 ;;                  3    0[COMRAM] float 
  8747 ;; Registers used:
  8748 ;;		wreg, status,2, status,0
  8749 ;; Tracked objects:
  8750 ;;		On entry : 0/0
  8751 ;;		On exit  : 0/0
  8752 ;;		Unchanged: 0/0
  8753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8754 ;;      Params:         5       0       0       0       0
  8755 ;;      Locals:         0       0       0       0       0
  8756 ;;      Temps:          3       0       0       0       0
  8757 ;;      Totals:         8       0       0       0       0
  8758 ;;Total ram usage:        8 bytes
  8759 ;; Hardware stack levels used:    1
  8760 ;; Hardware stack levels required when called:    6
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		___awtoft
  8765 ;;		___ftadd
  8766 ;;		___ftdiv
  8767 ;;		___ftmul
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           	psect	text51
  8772  001E28                     __ptext51:
  8773                           	opt stack 0
  8774  001E28                     ___ftpack:
  8775                           	opt stack 17
  8776                           
  8777                           ;incstack = 0
  8778  001E28  5004               	movf	___ftpack@exp,w,c
  8779  001E2A  B4D8               	btfsc	status,2,c
  8780  001E2C  D005               	goto	i1l4118
  8781  001E2E  5001               	movf	___ftpack@arg,w,c
  8782  001E30  1002               	iorwf	___ftpack@arg+1,w,c
  8783  001E32  1003               	iorwf	___ftpack@arg+2,w,c
  8784  001E34  A4D8               	btfss	status,2,c
  8785  001E36  D00C               	goto	i1l4124
  8786  001E38                     i1l4118:
  8787  001E38  0E00               	movlw	0
  8788  001E3A  6E01               	movwf	?___ftpack,c
  8789  001E3C  0E00               	movlw	0
  8790  001E3E  6E02               	movwf	?___ftpack+1,c
  8791  001E40  0E00               	movlw	0
  8792  001E42  6E03               	movwf	?___ftpack+2,c
  8793  001E44  0012               	return	
  8794  001E46                     i1l4122:
  8795  001E46  2A04               	incf	___ftpack@exp,f,c
  8796  001E48  90D8               	bcf	status,0,c
  8797  001E4A  3203               	rrcf	___ftpack@arg+2,f,c
  8798  001E4C  3202               	rrcf	___ftpack@arg+1,f,c
  8799  001E4E  3201               	rrcf	___ftpack@arg,f,c
  8800  001E50                     i1l4124:
  8801  001E50  0E00               	movlw	0
  8802  001E52  1401               	andwf	___ftpack@arg,w,c
  8803  001E54  6E06               	movwf	??___ftpack& (0+255),c
  8804  001E56  0E00               	movlw	0
  8805  001E58  1402               	andwf	___ftpack@arg+1,w,c
  8806  001E5A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  8807  001E5C  0EFE               	movlw	254
  8808  001E5E  1403               	andwf	___ftpack@arg+2,w,c
  8809  001E60  6E08               	movwf	(??___ftpack+2)& (0+255),c
  8810  001E62  5006               	movf	??___ftpack,w,c
  8811  001E64  1007               	iorwf	??___ftpack+1,w,c
  8812  001E66  1008               	iorwf	??___ftpack+2,w,c
  8813  001E68  B4D8               	btfsc	status,2,c
  8814  001E6A  D00C               	goto	i1l4130
  8815  001E6C  D7EC               	goto	i1l4122
  8816  001E6E                     i1l4126:
  8817  001E6E  2A04               	incf	___ftpack@exp,f,c
  8818  001E70  0E01               	movlw	1
  8819  001E72  2601               	addwf	___ftpack@arg,f,c
  8820  001E74  0E00               	movlw	0
  8821  001E76  2202               	addwfc	___ftpack@arg+1,f,c
  8822  001E78  0E00               	movlw	0
  8823  001E7A  2203               	addwfc	___ftpack@arg+2,f,c
  8824  001E7C  90D8               	bcf	status,0,c
  8825  001E7E  3203               	rrcf	___ftpack@arg+2,f,c
  8826  001E80  3202               	rrcf	___ftpack@arg+1,f,c
  8827  001E82  3201               	rrcf	___ftpack@arg,f,c
  8828  001E84                     i1l4130:
  8829  001E84  0E00               	movlw	0
  8830  001E86  1401               	andwf	___ftpack@arg,w,c
  8831  001E88  6E06               	movwf	??___ftpack& (0+255),c
  8832  001E8A  0E00               	movlw	0
  8833  001E8C  1402               	andwf	___ftpack@arg+1,w,c
  8834  001E8E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  8835  001E90  0EFF               	movlw	255
  8836  001E92  1403               	andwf	___ftpack@arg+2,w,c
  8837  001E94  6E08               	movwf	(??___ftpack+2)& (0+255),c
  8838  001E96  5006               	movf	??___ftpack,w,c
  8839  001E98  1007               	iorwf	??___ftpack+1,w,c
  8840  001E9A  1008               	iorwf	??___ftpack+2,w,c
  8841  001E9C  B4D8               	btfsc	status,2,c
  8842  001E9E  D006               	goto	i1l4134
  8843  001EA0  D7E6               	goto	i1l4126
  8844  001EA2                     i1l4132:
  8845  001EA2  0604               	decf	___ftpack@exp,f,c
  8846  001EA4  90D8               	bcf	status,0,c
  8847  001EA6  3601               	rlcf	___ftpack@arg,f,c
  8848  001EA8  3602               	rlcf	___ftpack@arg+1,f,c
  8849  001EAA  3603               	rlcf	___ftpack@arg+2,f,c
  8850  001EAC                     i1l4134:
  8851  001EAC  AE02               	btfss	___ftpack@arg+1,7,c
  8852  001EAE  D7F9               	goto	i1l4132
  8853  001EB0  A004               	btfss	___ftpack@exp,0,c
  8854  001EB2  9E02               	bcf	___ftpack@arg+1,7,c
  8855  001EB4  90D8               	bcf	status,0,c
  8856  001EB6  3204               	rrcf	___ftpack@exp,f,c
  8857  001EB8  5004               	movf	___ftpack@exp,w,c
  8858  001EBA  1203               	iorwf	___ftpack@arg+2,f,c
  8859  001EBC  5005               	movf	___ftpack@sign,w,c
  8860  001EBE  A4D8               	btfss	status,2,c
  8861  001EC0  8E03               	bsf	___ftpack@arg+2,7,c
  8862  001EC2  C001  F001         	movff	___ftpack@arg,?___ftpack
  8863  001EC6  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  8864  001ECA  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  8865  001ECE  0012               	return	
  8866  001ED0                     __end_of___ftpack:
  8867                           	opt stack 0
  8868                           pclatu	equ	0xFFB
  8869                           pclath	equ	0xFFA
  8870                           tblptru	equ	0xFF8
  8871                           tblptrh	equ	0xFF7
  8872                           tblptrl	equ	0xFF6
  8873                           tablat	equ	0xFF5
  8874                           prodh	equ	0xFF4
  8875                           prodl	equ	0xFF3
  8876                           intcon	equ	0xFF2
  8877                           intcon2	equ	0xFF1
  8878                           postinc0	equ	0xFEE
  8879                           fsr0h	equ	0xFEA
  8880                           fsr0l	equ	0xFE9
  8881                           wreg	equ	0xFE8
  8882                           indf1	equ	0xFE7
  8883                           postinc1	equ	0xFE6
  8884                           postdec1	equ	0xFE5
  8885                           fsr1h	equ	0xFE2
  8886                           fsr1l	equ	0xFE1
  8887                           bsr	equ	0xFE0
  8888                           indf2	equ	0xFDF
  8889                           postinc2	equ	0xFDE
  8890                           postdec2	equ	0xFDD
  8891                           fsr2h	equ	0xFDA
  8892                           fsr2l	equ	0xFD9
  8893                           status	equ	0xFD8
  8894                           
  8895 ;; *************** function ___awtoft *****************
  8896 ;; Defined at:
  8897 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awtoft.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  c               2    8[COMRAM] int 
  8900 ;; Auto vars:     Size  Location     Type
  8901 ;;  sign            1   12[COMRAM] unsigned char 
  8902 ;; Return value:  Size  Location     Type
  8903 ;;                  3    8[COMRAM] float 
  8904 ;; Registers used:
  8905 ;;		wreg, status,2, status,0, prodl, cstack
  8906 ;; Tracked objects:
  8907 ;;		On entry : 0/0
  8908 ;;		On exit  : 0/0
  8909 ;;		Unchanged: 0/0
  8910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8911 ;;      Params:         3       0       0       0       0
  8912 ;;      Locals:         1       0       0       0       0
  8913 ;;      Temps:          1       0       0       0       0
  8914 ;;      Totals:         5       0       0       0       0
  8915 ;;Total ram usage:        5 bytes
  8916 ;; Hardware stack levels used:    1
  8917 ;; Hardware stack levels required when called:    7
  8918 ;; This function calls:
  8919 ;;		___ftpack
  8920 ;; This function is called by:
  8921 ;;		_adc_int_handler
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           	psect	text52
  8926  00293C                     __ptext52:
  8927                           	opt stack 0
  8928  00293C                     ___awtoft:
  8929                           	opt stack 17
  8930                           
  8931                           ;incstack = 0
  8932  00293C  6E0C               	movwf	??___awtoft& (0+255),c
  8933  00293E  0E00               	movlw	0
  8934  002940  6E0D               	movwf	___awtoft@sign,c
  8935  002942  500C               	movf	??___awtoft& (0+255),w,c
  8936  002944  500A               	movf	___awtoft@c+1,w,c
  8937  002946  0A80               	xorlw	128
  8938  002948  6EF3               	movwf	prodl,c
  8939  00294A  0E80               	movlw	128
  8940  00294C  5CF3               	subwf	prodl,w,c
  8941  00294E  0E00               	movlw	0
  8942  002950  B4D8               	btfsc	status,2,c
  8943  002952  5C09               	subwf	___awtoft@c,w,c
  8944  002954  B0D8               	btfsc	status,0,c
  8945  002956  D008               	goto	i1l4518
  8946  002958  6C09               	negf	___awtoft@c,c
  8947  00295A  1E0A               	comf	___awtoft@c+1,f,c
  8948  00295C  B0D8               	btfsc	status,0,c
  8949  00295E  2A0A               	incf	___awtoft@c+1,f,c
  8950  002960  6E0C               	movwf	??___awtoft& (0+255),c
  8951  002962  0E01               	movlw	1
  8952  002964  6E0D               	movwf	___awtoft@sign,c
  8953  002966  500C               	movf	??___awtoft& (0+255),w,c
  8954  002968                     i1l4518:
  8955  002968  C009  F001         	movff	___awtoft@c,___ftpack@arg
  8956  00296C  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  8957  002970  6A03               	clrf	___ftpack@arg+2,c
  8958  002972  6E0C               	movwf	??___awtoft& (0+255),c
  8959  002974  0E8E               	movlw	142
  8960  002976  6E04               	movwf	___ftpack@exp,c
  8961  002978  500C               	movf	??___awtoft& (0+255),w,c
  8962  00297A  C00D  F005         	movff	___awtoft@sign,___ftpack@sign
  8963  00297E  EC14  F00F         	call	___ftpack	;wreg free
  8964  002982  C001  F009         	movff	?___ftpack,?___awtoft
  8965  002986  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  8966  00298A  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  8967  00298E  0012               	return	
  8968  002990                     __end_of___awtoft:
  8969                           	opt stack 0
  8970                           pclatu	equ	0xFFB
  8971                           pclath	equ	0xFFA
  8972                           tblptru	equ	0xFF8
  8973                           tblptrh	equ	0xFF7
  8974                           tblptrl	equ	0xFF6
  8975                           tablat	equ	0xFF5
  8976                           prodh	equ	0xFF4
  8977                           prodl	equ	0xFF3
  8978                           intcon	equ	0xFF2
  8979                           intcon2	equ	0xFF1
  8980                           postinc0	equ	0xFEE
  8981                           fsr0h	equ	0xFEA
  8982                           fsr0l	equ	0xFE9
  8983                           wreg	equ	0xFE8
  8984                           indf1	equ	0xFE7
  8985                           postinc1	equ	0xFE6
  8986                           postdec1	equ	0xFE5
  8987                           fsr1h	equ	0xFE2
  8988                           fsr1l	equ	0xFE1
  8989                           bsr	equ	0xFE0
  8990                           indf2	equ	0xFDF
  8991                           postinc2	equ	0xFDE
  8992                           postdec2	equ	0xFDD
  8993                           fsr2h	equ	0xFDA
  8994                           fsr2l	equ	0xFD9
  8995                           status	equ	0xFD8
  8996                           
  8997 ;; *************** function _InterruptHandlerHigh *****************
  8998 ;; Defined at:
  8999 ;;		line 84 in file "../src/interrupts.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;		None
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;		None
  9004 ;; Return value:  Size  Location     Type
  9005 ;;		None               void
  9006 ;; Registers used:
  9007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  9008 ;; Tracked objects:
  9009 ;;		On entry : 0/0
  9010 ;;		On exit  : 0/0
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9013 ;;      Params:         0       0       0       0       0
  9014 ;;      Locals:         0       0       0       0       0
  9015 ;;      Temps:          0      14       0       0       0
  9016 ;;      Totals:         0      14       0       0       0
  9017 ;;Total ram usage:       14 bytes
  9018 ;; Hardware stack levels used:    1
  9019 ;; Hardware stack levels required when called:    5
  9020 ;; This function calls:
  9021 ;;		_SleepIfOkay
  9022 ;;		_i2c_int_handler
  9023 ;;		_timer0_int_handler
  9024 ;; This function is called by:
  9025 ;;		Interrupt level 2
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           	psect	intcode
  9030  000008                     __pintcode:
  9031                           	opt stack 0
  9032  000008                     _InterruptHandlerHigh:
  9033                           	opt stack 16
  9034                           
  9035                           ;incstack = 0
  9036  000008  CFFA F0C2          	movff	pclath,??_InterruptHandlerHigh
  9037  00000C  CFFB F0C3          	movff	pclatu,??_InterruptHandlerHigh+1
  9038  000010  EFFA  F011         	goto	int_func
  9039                           pclatu	equ	0xFFB
  9040                           pclath	equ	0xFFA
  9041                           tblptru	equ	0xFF8
  9042                           tblptrh	equ	0xFF7
  9043                           tblptrl	equ	0xFF6
  9044                           tablat	equ	0xFF5
  9045                           prodh	equ	0xFF4
  9046                           prodl	equ	0xFF3
  9047                           intcon	equ	0xFF2
  9048                           intcon2	equ	0xFF1
  9049                           postinc0	equ	0xFEE
  9050                           fsr0h	equ	0xFEA
  9051                           fsr0l	equ	0xFE9
  9052                           wreg	equ	0xFE8
  9053                           indf1	equ	0xFE7
  9054                           postinc1	equ	0xFE6
  9055                           postdec1	equ	0xFE5
  9056                           fsr1h	equ	0xFE2
  9057                           fsr1l	equ	0xFE1
  9058                           bsr	equ	0xFE0
  9059                           indf2	equ	0xFDF
  9060                           postinc2	equ	0xFDE
  9061                           postdec2	equ	0xFDD
  9062                           fsr2h	equ	0xFDA
  9063                           fsr2l	equ	0xFD9
  9064                           status	equ	0xFD8
  9065                           
  9066                           	psect	intcode_body
  9067  0023F4                     __pintcode_body:
  9068                           	opt stack 16
  9069  0023F4                     int_func:
  9070                           	opt stack 16
  9071  0023F4  CFE9 F0C4          	movff	fsr0l,??_InterruptHandlerHigh+2
  9072  0023F8  CFEA F0C5          	movff	fsr0h,??_InterruptHandlerHigh+3
  9073  0023FC  CFE1 F0C6          	movff	fsr1l,??_InterruptHandlerHigh+4
  9074  002400  CFE2 F0C7          	movff	fsr1h,??_InterruptHandlerHigh+5
  9075  002404  CFD9 F0C8          	movff	fsr2l,??_InterruptHandlerHigh+6
  9076  002408  CFDA F0C9          	movff	fsr2h,??_InterruptHandlerHigh+7
  9077  00240C  CFF3 F0CA          	movff	prodl,??_InterruptHandlerHigh+8
  9078  002410  CFF4 F0CB          	movff	prodh,??_InterruptHandlerHigh+9
  9079  002414  CFF6 F0CC          	movff	tblptrl,??_InterruptHandlerHigh+10
  9080  002418  CFF7 F0CD          	movff	tblptrh,??_InterruptHandlerHigh+11
  9081  00241C  CFF8 F0CE          	movff	tblptru,??_InterruptHandlerHigh+12
  9082  002420  CFF5 F0CF          	movff	tablat,??_InterruptHandlerHigh+13
  9083                           
  9084                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  9085  002424  A69E               	btfss	3998,3,c	;volatile
  9086  002426  D003               	goto	i2l3330
  9087                           
  9088                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  9089  002428  969E               	bcf	3998,3,c	;volatile
  9090                           
  9091                           ;interrupts.c: 94: i2c_int_handler();
  9092  00242A  ECF5  F016         	call	_i2c_int_handler	;wreg free
  9093  00242E                     i2l3330:
  9094                           
  9095                           ;interrupts.c: 96: }
  9096                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  9097  00242E  A4F2               	btfss	intcon,2,c	;volatile
  9098  002430  D005               	goto	i2l3338
  9099                           
  9100                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  9101  002432  94F2               	bcf	intcon,2,c	;volatile
  9102                           
  9103                           ;interrupts.c: 103: PORTAbits.RA0 = 1;
  9104  002434  8080               	bsf	3968,0,c	;volatile
  9105                           
  9106                           ;interrupts.c: 104: timer0_int_handler();
  9107  002436  EC04  F010         	call	_timer0_int_handler	;wreg free
  9108                           
  9109                           ;interrupts.c: 105: PORTAbits.RA0 = 0;
  9110  00243A  9080               	bcf	3968,0,c	;volatile
  9111  00243C                     i2l3338:
  9112                           
  9113                           ;interrupts.c: 106: }
  9114                           ;interrupts.c: 115: SleepIfOkay();
  9115  00243C  EC6D  F013         	call	_SleepIfOkay	;wreg free
  9116  002440  C0CF  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  9117  002444  C0CE  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  9118  002448  C0CD  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  9119  00244C  C0CC  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  9120  002450  C0CB  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  9121  002454  C0CA  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  9122  002458  C0C9  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  9123  00245C  C0C8  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  9124  002460  C0C7  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  9125  002464  C0C6  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  9126  002468  C0C5  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  9127  00246C  C0C4  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  9128  002470  C0C3  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  9129  002474  C0C2  FFFA         	movff	??_InterruptHandlerHigh,pclath
  9130  002478  0011               	retfie		f
  9131  00247A                     __end_of_InterruptHandlerHigh:
  9132                           	opt stack 0
  9133                           pclatu	equ	0xFFB
  9134                           pclath	equ	0xFFA
  9135                           tblptru	equ	0xFF8
  9136                           tblptrh	equ	0xFF7
  9137                           tblptrl	equ	0xFF6
  9138                           tablat	equ	0xFF5
  9139                           prodh	equ	0xFF4
  9140                           prodl	equ	0xFF3
  9141                           intcon	equ	0xFF2
  9142                           intcon2	equ	0xFF1
  9143                           postinc0	equ	0xFEE
  9144                           fsr0h	equ	0xFEA
  9145                           fsr0l	equ	0xFE9
  9146                           wreg	equ	0xFE8
  9147                           indf1	equ	0xFE7
  9148                           postinc1	equ	0xFE6
  9149                           postdec1	equ	0xFE5
  9150                           fsr1h	equ	0xFE2
  9151                           fsr1l	equ	0xFE1
  9152                           bsr	equ	0xFE0
  9153                           indf2	equ	0xFDF
  9154                           postinc2	equ	0xFDE
  9155                           postdec2	equ	0xFDD
  9156                           fsr2h	equ	0xFDA
  9157                           fsr2l	equ	0xFD9
  9158                           status	equ	0xFD8
  9159                           
  9160 ;; *************** function _timer0_int_handler *****************
  9161 ;; Defined at:
  9162 ;;		line 17 in file "../src/user_interrupts.c"
  9163 ;; Parameters:    Size  Location     Type
  9164 ;;		None
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  motormsg        6   15[BANK0 ] unsigned char [6]
  9167 ;;  motorcomm       2   13[BANK0 ] unsigned char [2]
  9168 ;; Return value:  Size  Location     Type
  9169 ;;		None               void
  9170 ;; Registers used:
  9171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9177 ;;      Params:         0       0       0       0       0
  9178 ;;      Locals:         0       8       0       0       0
  9179 ;;      Temps:          0       1       0       0       0
  9180 ;;      Totals:         0       9       0       0       0
  9181 ;;Total ram usage:        9 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:    2
  9184 ;; This function calls:
  9185 ;;		i2_WriteTimer0
  9186 ;;		i2_motorMove
  9187 ;; This function is called by:
  9188 ;;		_InterruptHandlerHigh
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           	psect	text54
  9193  002008                     __ptext54:
  9194                           	opt stack 0
  9195  002008                     _timer0_int_handler:
  9196                           	opt stack 18
  9197                           
  9198                           ;user_interrupts.c: 18: WriteTimer0(0x7F);
  9199                           
  9200                           ;incstack = 0
  9201  002008  0E00               	movlw	0
  9202  00200A  0100               	movlb	0	; () banked
  9203  00200C  0100               	movlb	0	; () banked
  9204  00200E  6F81               	movwf	(i2WriteTimer0@timer0+1)& (0+255),b
  9205  002010  0E7F               	movlw	127
  9206  002012  0100               	movlb	0	; () banked
  9207  002014  6F80               	movwf	i2WriteTimer0@timer0& (0+255),b
  9208  002016  ECDB  F016         	call	i2_WriteTimer0	;wreg free
  9209                           
  9210                           ;user_interrupts.c: 36: rightEncoder++;
  9211  00201A  0100               	movlb	0	; () banked
  9212  00201C  0100               	movlb	0	; () banked
  9213  00201E  2BEE               	incf	_rightEncoder& (0+255),f,b
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;user_interrupts.c: 37: if(rightEncoder >= rightDistDesired){
  9217  002020  0100               	movlb	0	; () banked
  9218  002022  0100               	movlb	0	; () banked
  9219  002024  51ED               	movf	_rightDistDesired& (0+255),w,b
  9220  002026  0100               	movlb	0	; () banked
  9221  002028  0100               	movlb	0	; () banked
  9222  00202A  5DEE               	subwf	_rightEncoder& (0+255),w,b
  9223  00202C  A0D8               	btfss	status,0,c
  9224  00202E  0012               	return	
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;user_interrupts.c: 39: unsigned char motormsg[6] = {0x04, 0x00, 0x00, 0x00, 0x00, 0x00};
  9228  002030  EE20  F0DC         	lfsr	2,timer0_int_handler@F5118
  9229  002034  EE10  F08F         	lfsr	1,timer0_int_handler@motormsg
  9230  002038  0E06               	movlw	6
  9231  00203A                     i2u231_41:
  9232  00203A  CFDE FFE6          	movff	postinc2,postinc1
  9233  00203E  2EE8               	decfsz	wreg,f,c
  9234  002040  D7FC               	goto	i2u231_41
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;user_interrupts.c: 40: motormsg[1] = rightEncoder;
  9238  002042  C0EE  F090         	movff	_rightEncoder,timer0_int_handler@motormsg+1
  9239                           
  9240                           ; BSR set to: 0
  9241                           ;user_interrupts.c: 41: motormsg[2] = (rightEncoder & 0x17);
  9242  002046  0100               	movlb	0	; () banked
  9243  002048  0100               	movlb	0	; () banked
  9244  00204A  51EE               	movf	_rightEncoder& (0+255),w,b
  9245  00204C  0B17               	andlw	23
  9246  00204E  0100               	movlb	0	; () banked
  9247  002050  0100               	movlb	0	; () banked
  9248  002052  6F91               	movwf	(timer0_int_handler@motormsg+2)& (0+255),b
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;user_interrupts.c: 43: unsigned char motorcomm[2] = {0x40, 0x40};
  9252  002054  C0E2  F08D         	movff	timer0_int_handler@F5120,timer0_int_handler@motorcomm
  9253  002058  C0E3  F08E         	movff	timer0_int_handler@F5120+1,timer0_int_handler@motorcomm+1
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;user_interrupts.c: 44: motorMove(0x40, 0x40, leftDistDesired, rightDistDesired);
  9257  00205C  0100               	movlb	0	; () banked
  9258  00205E  6F8C               	movwf	??_timer0_int_handler& (0+255),b
  9259  002060  0E40               	movlw	64
  9260  002062  0100               	movlb	0	; () banked
  9261  002064  0100               	movlb	0	; () banked
  9262  002066  6F85               	movwf	i2motorMove@right& (0+255),b
  9263  002068  0100               	movlb	0	; () banked
  9264  00206A  518C               	movf	??_timer0_int_handler& (0+255),w,b
  9265  00206C  C0EB  F086         	movff	_leftDistDesired,i2motorMove@leftDistance
  9266  002070  C0ED  F087         	movff	_rightDistDesired,i2motorMove@rightDistance
  9267  002074  0E40               	movlw	64
  9268  002076  EC4E  F010         	call	i2_motorMove
  9269                           
  9270                           ;user_interrupts.c: 45: if(leftEncoder >= leftDistDesired){
  9271  00207A  0100               	movlb	0	; () banked
  9272  00207C  0100               	movlb	0	; () banked
  9273  00207E  51EB               	movf	_leftDistDesired& (0+255),w,b
  9274  002080  0100               	movlb	0	; () banked
  9275  002082  0100               	movlb	0	; () banked
  9276  002084  5DEC               	subwf	_leftEncoder& (0+255),w,b
  9277  002086  A0D8               	btfss	status,0,c
  9278  002088  0012               	return	
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;user_interrupts.c: 46: stopCond = 0x01;
  9282  00208A  0100               	movlb	0	; () banked
  9283  00208C  6F8C               	movwf	??_timer0_int_handler& (0+255),b
  9284  00208E  0E01               	movlw	1
  9285  002090  0100               	movlb	0	; () banked
  9286  002092  0100               	movlb	0	; () banked
  9287  002094  6FEF               	movwf	_stopCond& (0+255),b
  9288  002096  0100               	movlb	0	; () banked
  9289  002098  518C               	movf	??_timer0_int_handler& (0+255),w,b
  9290  00209A  0012               	return	
  9291  00209C                     __end_of_timer0_int_handler:
  9292                           	opt stack 0
  9293                           pclatu	equ	0xFFB
  9294                           pclath	equ	0xFFA
  9295                           tblptru	equ	0xFF8
  9296                           tblptrh	equ	0xFF7
  9297                           tblptrl	equ	0xFF6
  9298                           tablat	equ	0xFF5
  9299                           prodh	equ	0xFF4
  9300                           prodl	equ	0xFF3
  9301                           intcon	equ	0xFF2
  9302                           intcon2	equ	0xFF1
  9303                           postinc0	equ	0xFEE
  9304                           fsr0h	equ	0xFEA
  9305                           fsr0l	equ	0xFE9
  9306                           wreg	equ	0xFE8
  9307                           indf1	equ	0xFE7
  9308                           postinc1	equ	0xFE6
  9309                           postdec1	equ	0xFE5
  9310                           fsr1h	equ	0xFE2
  9311                           fsr1l	equ	0xFE1
  9312                           bsr	equ	0xFE0
  9313                           indf2	equ	0xFDF
  9314                           postinc2	equ	0xFDE
  9315                           postdec2	equ	0xFDD
  9316                           fsr2h	equ	0xFDA
  9317                           fsr2l	equ	0xFD9
  9318                           status	equ	0xFD8
  9319                           
  9320 ;; *************** function _i2c_int_handler *****************
  9321 ;; Defined at:
  9322 ;;		line 139 in file "../src/my_i2c.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;		None
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;		None
  9327 ;; Return value:  Size  Location     Type
  9328 ;;		None               void
  9329 ;; Registers used:
  9330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9331 ;; Tracked objects:
  9332 ;;		On entry : 0/0
  9333 ;;		On exit  : 0/0
  9334 ;;		Unchanged: 0/0
  9335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9336 ;;      Params:         0       0       0       0       0
  9337 ;;      Locals:         0       0       0       0       0
  9338 ;;      Temps:          0       0       0       0       0
  9339 ;;      Totals:         0       0       0       0       0
  9340 ;;Total ram usage:        0 bytes
  9341 ;; Hardware stack levels used:    1
  9342 ;; Hardware stack levels required when called:    4
  9343 ;; This function calls:
  9344 ;;		_i2c_slave_int_handler
  9345 ;; This function is called by:
  9346 ;;		_InterruptHandlerHigh
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           	psect	text55
  9351  002DEA                     __ptext55:
  9352                           	opt stack 0
  9353  002DEA                     _i2c_int_handler:
  9354                           	opt stack 16
  9355                           
  9356                           ;my_i2c.c: 143: i2c_slave_int_handler();
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;incstack = 0
  9360  002DEA  EC67  F000         	call	_i2c_slave_int_handler	;wreg free
  9361  002DEE  0012               	return	
  9362  002DF0                     __end_of_i2c_int_handler:
  9363                           	opt stack 0
  9364                           pclatu	equ	0xFFB
  9365                           pclath	equ	0xFFA
  9366                           tblptru	equ	0xFF8
  9367                           tblptrh	equ	0xFF7
  9368                           tblptrl	equ	0xFF6
  9369                           tablat	equ	0xFF5
  9370                           prodh	equ	0xFF4
  9371                           prodl	equ	0xFF3
  9372                           intcon	equ	0xFF2
  9373                           intcon2	equ	0xFF1
  9374                           postinc0	equ	0xFEE
  9375                           fsr0h	equ	0xFEA
  9376                           fsr0l	equ	0xFE9
  9377                           wreg	equ	0xFE8
  9378                           indf1	equ	0xFE7
  9379                           postinc1	equ	0xFE6
  9380                           postdec1	equ	0xFE5
  9381                           fsr1h	equ	0xFE2
  9382                           fsr1l	equ	0xFE1
  9383                           bsr	equ	0xFE0
  9384                           indf2	equ	0xFDF
  9385                           postinc2	equ	0xFDE
  9386                           postdec2	equ	0xFDD
  9387                           fsr2h	equ	0xFDA
  9388                           fsr2l	equ	0xFD9
  9389                           status	equ	0xFD8
  9390                           
  9391 ;; *************** function _i2c_slave_int_handler *****************
  9392 ;; Defined at:
  9393 ;;		line 248 in file "../src/my_i2c.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;		None
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  ack             6   34[BANK0 ] unsigned char [6]
  9398 ;;  dist            6   40[BANK0 ] unsigned char [6]
  9399 ;;  ack             6   28[BANK0 ] unsigned char [6]
  9400 ;;  message         6   54[BANK0 ] unsigned char [6]
  9401 ;;  checksum        1   48[BANK0 ] unsigned char 
  9402 ;;  bitmask         1   47[BANK0 ] unsigned char 
  9403 ;;  messageType     1   46[BANK0 ] unsigned char 
  9404 ;;  length          2   63[BANK0 ] int 
  9405 ;;  error_buf       3   49[BANK0 ] unsigned char [3]
  9406 ;;  data_read       1   65[BANK0 ] unsigned char 
  9407 ;;  msg_ready       1   62[BANK0 ] unsigned char 
  9408 ;;  msg_to_send     1   61[BANK0 ] unsigned char 
  9409 ;;  i2c_data        1   60[BANK0 ] unsigned char 
  9410 ;;  overrun_erro    1   53[BANK0 ] unsigned char 
  9411 ;;  data_written    1   52[BANK0 ] unsigned char 
  9412 ;; Return value:  Size  Location     Type
  9413 ;;		None               void
  9414 ;; Registers used:
  9415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9416 ;; Tracked objects:
  9417 ;;		On entry : 0/0
  9418 ;;		On exit  : 0/0
  9419 ;;		Unchanged: 0/0
  9420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9421 ;;      Params:         0       0       0       0       0
  9422 ;;      Locals:         0      38       0       0       0
  9423 ;;      Temps:          0       2       0       0       0
  9424 ;;      Totals:         0      40       0       0       0
  9425 ;;Total ram usage:       40 bytes
  9426 ;; Hardware stack levels used:    1
  9427 ;; Hardware stack levels required when called:    3
  9428 ;; This function calls:
  9429 ;;		_ToMainHigh_sendmsg
  9430 ;;		_handle_start
  9431 ;;		_start_i2c_slave_reply
  9432 ;;		i2_motorMove
  9433 ;; This function is called by:
  9434 ;;		_i2c_int_handler
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           	psect	text56
  9439  0000CE                     __ptext56:
  9440                           	opt stack 0
  9441  0000CE                     _i2c_slave_int_handler:
  9442                           	opt stack 16
  9443                           
  9444                           ;my_i2c.c: 249: unsigned char i2c_data;
  9445                           ;my_i2c.c: 250: unsigned char data_read = 0;
  9446                           
  9447                           ;incstack = 0
  9448  0000CE  0100               	movlb	0	; () banked
  9449  0000D0  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9450  0000D2  0E00               	movlw	0
  9451  0000D4  0100               	movlb	0	; () banked
  9452  0000D6  0100               	movlb	0	; () banked
  9453  0000D8  6FC1               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  9454  0000DA  0100               	movlb	0	; () banked
  9455  0000DC  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9456                           
  9457                           ;my_i2c.c: 251: unsigned char data_written = 0;
  9458  0000DE  0100               	movlb	0	; () banked
  9459  0000E0  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9460  0000E2  0E00               	movlw	0
  9461  0000E4  0100               	movlb	0	; () banked
  9462  0000E6  0100               	movlb	0	; () banked
  9463  0000E8  6FB4               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  9464  0000EA  0100               	movlb	0	; () banked
  9465  0000EC  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9466                           
  9467                           ;my_i2c.c: 252: unsigned char msg_ready = 0;
  9468  0000EE  0100               	movlb	0	; () banked
  9469  0000F0  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9470  0000F2  0E00               	movlw	0
  9471  0000F4  0100               	movlb	0	; () banked
  9472  0000F6  0100               	movlb	0	; () banked
  9473  0000F8  6FBE               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  9474  0000FA  0100               	movlb	0	; () banked
  9475  0000FC  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9476                           
  9477                           ;my_i2c.c: 253: unsigned char msg_to_send = 0;
  9478  0000FE  0100               	movlb	0	; () banked
  9479  000100  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9480  000102  0E00               	movlw	0
  9481  000104  0100               	movlb	0	; () banked
  9482  000106  0100               	movlb	0	; () banked
  9483  000108  6FBD               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  9484  00010A  0100               	movlb	0	; () banked
  9485  00010C  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9486                           
  9487                           ;my_i2c.c: 254: unsigned char overrun_error = 0;
  9488  00010E  0100               	movlb	0	; () banked
  9489  000110  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9490  000112  0E00               	movlw	0
  9491  000114  0100               	movlb	0	; () banked
  9492  000116  0100               	movlb	0	; () banked
  9493  000118  6FB5               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  9494  00011A  0100               	movlb	0	; () banked
  9495  00011C  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;my_i2c.c: 255: unsigned char error_buf[3];
  9499                           ;my_i2c.c: 258: if (SSPCON1bits.SSPOV == 1) {
  9500  00011E  ACC6               	btfss	4038,6,c	;volatile
  9501  000120  D029               	goto	i2l3852
  9502                           
  9503                           ; BSR set to: 0
  9504                           ;my_i2c.c: 259: SSPCON1bits.SSPOV = 0;
  9505  000122  9CC6               	bcf	4038,6,c	;volatile
  9506                           
  9507                           ; BSR set to: 0
  9508                           ;my_i2c.c: 263: ic_ptr->status = 0x5;
  9509  000124  0101               	movlb	1	; () banked
  9510  000126  EE20 F00D          	lfsr	2,13
  9511  00012A  0101               	movlb	1	; () banked
  9512  00012C  51C5               	movf	_ic_ptr& (0+255),w,b
  9513  00012E  26D9               	addwf	fsr2l,f,c
  9514  000130  0101               	movlb	1	; () banked
  9515  000132  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9516  000134  22DA               	addwfc	fsr2h,f,c
  9517  000136  0E05               	movlw	5
  9518  000138  6EDF               	movwf	indf2,c
  9519                           
  9520                           ; BSR set to: 1
  9521                           ;my_i2c.c: 264: overrun_error = 1;
  9522  00013A  0100               	movlb	0	; () banked
  9523  00013C  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9524  00013E  0E01               	movlw	1
  9525  000140  0100               	movlb	0	; () banked
  9526  000142  0100               	movlb	0	; () banked
  9527  000144  6FB5               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  9528  000146  0100               	movlb	0	; () banked
  9529  000148  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;my_i2c.c: 265: ic_ptr->error_count++;
  9533  00014A  0101               	movlb	1	; () banked
  9534  00014C  EE20 F00F          	lfsr	2,15
  9535  000150  0101               	movlb	1	; () banked
  9536  000152  51C5               	movf	_ic_ptr& (0+255),w,b
  9537  000154  26D9               	addwf	fsr2l,f,c
  9538  000156  0101               	movlb	1	; () banked
  9539  000158  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9540  00015A  22DA               	addwfc	fsr2h,f,c
  9541  00015C  2ADF               	incf	indf2,f,c
  9542                           
  9543                           ; BSR set to: 1
  9544                           ;my_i2c.c: 266: ic_ptr->error_code = 0x4;
  9545  00015E  0101               	movlb	1	; () banked
  9546  000160  EE20 F00E          	lfsr	2,14
  9547  000164  0101               	movlb	1	; () banked
  9548  000166  51C5               	movf	_ic_ptr& (0+255),w,b
  9549  000168  26D9               	addwf	fsr2l,f,c
  9550  00016A  0101               	movlb	1	; () banked
  9551  00016C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9552  00016E  22DA               	addwfc	fsr2h,f,c
  9553  000170  0E04               	movlw	4
  9554  000172  6EDF               	movwf	indf2,c
  9555  000174                     i2l3852:
  9556                           
  9557                           ;my_i2c.c: 267: }
  9558                           ;my_i2c.c: 269: if (SSPSTATbits.BF == 1) {
  9559  000174  A0C7               	btfss	4039,0,c	;volatile
  9560  000176  D00A               	goto	i2l3858
  9561                           
  9562                           ;my_i2c.c: 270: i2c_data = SSPBUF;
  9563  000178  CFC9 F0BC          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  9564                           
  9565                           ;my_i2c.c: 271: data_read = 1;
  9566  00017C  0100               	movlb	0	; () banked
  9567  00017E  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9568  000180  0E01               	movlw	1
  9569  000182  0100               	movlb	0	; () banked
  9570  000184  0100               	movlb	0	; () banked
  9571  000186  6FC1               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  9572  000188  0100               	movlb	0	; () banked
  9573  00018A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9574  00018C                     i2l3858:
  9575                           
  9576                           ;my_i2c.c: 272: }
  9577                           ;my_i2c.c: 274: if (!overrun_error) {
  9578  00018C  0100               	movlb	0	; () banked
  9579  00018E  0100               	movlb	0	; () banked
  9580  000190  67B5               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  9581  000192  D1CE               	goto	i2l372
  9582  000194  D1B7               	goto	i2l3946
  9583  000196                     i2l374:
  9584                           
  9585                           ; BSR set to: 1
  9586                           ;my_i2c.c: 277: {
  9587                           ;my_i2c.c: 279: if (SSPSTATbits.S == 1) {
  9588  000196  A6C7               	btfss	4039,3,c	;volatile
  9589  000198  D1CB               	goto	i2l372
  9590                           
  9591                           ; BSR set to: 1
  9592                           ;my_i2c.c: 280: handle_start(data_read);
  9593  00019A  0100               	movlb	0	; () banked
  9594  00019C  0100               	movlb	0	; () banked
  9595  00019E  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9596  0001A0  EC3A  F00D         	call	_handle_start
  9597                           
  9598                           ;my_i2c.c: 282: if (ic_ptr->status == 0x8) {
  9599  0001A4  0101               	movlb	1	; () banked
  9600  0001A6  EE20 F00D          	lfsr	2,13
  9601  0001AA  0101               	movlb	1	; () banked
  9602  0001AC  51C5               	movf	_ic_ptr& (0+255),w,b
  9603  0001AE  26D9               	addwf	fsr2l,f,c
  9604  0001B0  0101               	movlb	1	; () banked
  9605  0001B2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9606  0001B4  22DA               	addwfc	fsr2h,f,c
  9607  0001B6  0E08               	movlw	8
  9608  0001B8  62DF               	cpfseq	indf2,c
  9609  0001BA  D1BA               	goto	i2l372
  9610                           
  9611                           ; BSR set to: 1
  9612                           ;my_i2c.c: 283: data_read = 0;
  9613  0001BC  0100               	movlb	0	; () banked
  9614  0001BE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9615  0001C0  0E00               	movlw	0
  9616  0001C2  0100               	movlb	0	; () banked
  9617  0001C4  0100               	movlb	0	; () banked
  9618  0001C6  6FC1               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  9619  0001C8  0100               	movlb	0	; () banked
  9620  0001CA  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9621                           
  9622                           ;my_i2c.c: 284: msg_to_send = 1;
  9623  0001CC  0100               	movlb	0	; () banked
  9624  0001CE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9625  0001D0  0E01               	movlw	1
  9626  0001D2  0100               	movlb	0	; () banked
  9627  0001D4  0100               	movlb	0	; () banked
  9628  0001D6  6FBD               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  9629  0001D8  D187               	goto	L8
  9630  0001DA                     i2l378:
  9631                           
  9632                           ; BSR set to: 1
  9633                           ;my_i2c.c: 290: {
  9634                           ;my_i2c.c: 292: if (SSPSTATbits.P == 1) {
  9635  0001DA  A8C7               	btfss	4039,4,c	;volatile
  9636  0001DC  D030               	goto	i2l3878
  9637                           
  9638                           ; BSR set to: 1
  9639                           ;my_i2c.c: 295: ic_ptr->event_count++;
  9640  0001DE  0101               	movlb	1	; () banked
  9641  0001E0  EE20 F00C          	lfsr	2,12
  9642  0001E4  0101               	movlb	1	; () banked
  9643  0001E6  51C5               	movf	_ic_ptr& (0+255),w,b
  9644  0001E8  26D9               	addwf	fsr2l,f,c
  9645  0001EA  0101               	movlb	1	; () banked
  9646  0001EC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9647  0001EE  22DA               	addwfc	fsr2h,f,c
  9648  0001F0  2ADF               	incf	indf2,f,c
  9649                           
  9650                           ; BSR set to: 1
  9651                           ;my_i2c.c: 296: if (data_read) {
  9652  0001F2  0100               	movlb	0	; () banked
  9653  0001F4  0100               	movlb	0	; () banked
  9654  0001F6  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9655  0001F8  B4D8               	btfsc	status,2,c
  9656  0001FA  D179               	goto	L10
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;my_i2c.c: 297: if (SSPSTATbits.D_A == 0) {
  9660  0001FC  BAC7               	btfsc	4039,5,c	;volatile
  9661  0001FE  D009               	goto	i2l3876
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;my_i2c.c: 298: msg_ready = 1;
  9665  000200  0100               	movlb	0	; () banked
  9666  000202  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9667  000204  0E01               	movlw	1
  9668  000206  0100               	movlb	0	; () banked
  9669  000208  0100               	movlb	0	; () banked
  9670  00020A  6FBE               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  9671  00020C  0100               	movlb	0	; () banked
  9672  00020E  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9673                           
  9674                           ;my_i2c.c: 299: } else {
  9675  000210  D16E               	goto	L10
  9676  000212                     i2l3876:
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;my_i2c.c: 300: ic_ptr->error_count++;
  9680  000212  0101               	movlb	1	; () banked
  9681  000214  EE20 F00F          	lfsr	2,15
  9682  000218  0101               	movlb	1	; () banked
  9683  00021A  51C5               	movf	_ic_ptr& (0+255),w,b
  9684  00021C  26D9               	addwf	fsr2l,f,c
  9685  00021E  0101               	movlb	1	; () banked
  9686  000220  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9687  000222  22DA               	addwfc	fsr2h,f,c
  9688  000224  2ADF               	incf	indf2,f,c
  9689                           
  9690                           ;my_i2c.c: 301: ic_ptr->error_code = 0x6;
  9691  000226  0101               	movlb	1	; () banked
  9692  000228  EE20 F00E          	lfsr	2,14
  9693  00022C  0101               	movlb	1	; () banked
  9694  00022E  51C5               	movf	_ic_ptr& (0+255),w,b
  9695  000230  26D9               	addwf	fsr2l,f,c
  9696  000232  0101               	movlb	1	; () banked
  9697  000234  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9698  000236  22DA               	addwfc	fsr2h,f,c
  9699  000238  0E06               	movlw	6
  9700  00023A  6EDF               	movwf	indf2,c
  9701                           
  9702                           ; BSR set to: 1
  9703  00023C  D158               	goto	L10
  9704  00023E                     i2l3878:
  9705                           
  9706                           ; BSR set to: 1
  9707  00023E  0100               	movlb	0	; () banked
  9708  000240  0100               	movlb	0	; () banked
  9709  000242  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9710  000244  B4D8               	btfsc	status,2,c
  9711  000246  D174               	goto	i2l372
  9712                           
  9713                           ; BSR set to: 0
  9714                           ;my_i2c.c: 306: ic_ptr->event_count++;
  9715  000248  0101               	movlb	1	; () banked
  9716  00024A  EE20 F00C          	lfsr	2,12
  9717  00024E  0101               	movlb	1	; () banked
  9718  000250  51C5               	movf	_ic_ptr& (0+255),w,b
  9719  000252  26D9               	addwf	fsr2l,f,c
  9720  000254  0101               	movlb	1	; () banked
  9721  000256  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9722  000258  22DA               	addwfc	fsr2h,f,c
  9723  00025A  2ADF               	incf	indf2,f,c
  9724                           
  9725                           ; BSR set to: 1
  9726                           ;my_i2c.c: 307: if (SSPSTATbits.D_A == 0) {
  9727  00025C  BAC7               	btfsc	4039,5,c	;volatile
  9728  00025E  D019               	goto	i2l3894
  9729                           
  9730                           ; BSR set to: 1
  9731                           ;my_i2c.c: 308: if (SSPSTATbits.R_W == 0) {
  9732  000260  B4C7               	btfsc	4039,2,c	;volatile
  9733  000262  D00B               	goto	i2l3888
  9734                           
  9735                           ; BSR set to: 1
  9736                           ;my_i2c.c: 309: ic_ptr->status = 0x7;
  9737  000264  0101               	movlb	1	; () banked
  9738  000266  EE20 F00D          	lfsr	2,13
  9739  00026A  0101               	movlb	1	; () banked
  9740  00026C  51C5               	movf	_ic_ptr& (0+255),w,b
  9741  00026E  26D9               	addwf	fsr2l,f,c
  9742  000270  0101               	movlb	1	; () banked
  9743  000272  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9744  000274  22DA               	addwfc	fsr2h,f,c
  9745  000276  0E07               	movlw	7
  9746  000278  D076               	goto	L7
  9747  00027A                     i2l3888:
  9748                           
  9749                           ; BSR set to: 1
  9750                           ;my_i2c.c: 311: ic_ptr->status = 0x8;
  9751  00027A  0101               	movlb	1	; () banked
  9752  00027C  EE20 F00D          	lfsr	2,13
  9753  000280  0101               	movlb	1	; () banked
  9754  000282  51C5               	movf	_ic_ptr& (0+255),w,b
  9755  000284  26D9               	addwf	fsr2l,f,c
  9756  000286  0101               	movlb	1	; () banked
  9757  000288  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9758  00028A  22DA               	addwfc	fsr2h,f,c
  9759  00028C  0E08               	movlw	8
  9760  00028E  6EDF               	movwf	indf2,c
  9761  000290  D11D               	goto	L11
  9762  000292                     i2l3894:
  9763                           
  9764                           ;my_i2c.c: 317: ic_ptr->error_count++;
  9765  000292  0101               	movlb	1	; () banked
  9766  000294  EE20 F00F          	lfsr	2,15
  9767  000298  0101               	movlb	1	; () banked
  9768  00029A  51C5               	movf	_ic_ptr& (0+255),w,b
  9769  00029C  26D9               	addwf	fsr2l,f,c
  9770  00029E  0101               	movlb	1	; () banked
  9771  0002A0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9772  0002A2  22DA               	addwfc	fsr2h,f,c
  9773  0002A4  2ADF               	incf	indf2,f,c
  9774                           
  9775                           ;my_i2c.c: 318: ic_ptr->status = 0x5;
  9776  0002A6  0101               	movlb	1	; () banked
  9777  0002A8  EE20 F00D          	lfsr	2,13
  9778  0002AC  0101               	movlb	1	; () banked
  9779  0002AE  51C5               	movf	_ic_ptr& (0+255),w,b
  9780  0002B0  26D9               	addwf	fsr2l,f,c
  9781  0002B2  0101               	movlb	1	; () banked
  9782  0002B4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9783  0002B6  22DA               	addwfc	fsr2h,f,c
  9784  0002B8  0E05               	movlw	5
  9785  0002BA  6EDF               	movwf	indf2,c
  9786                           
  9787                           ;my_i2c.c: 319: ic_ptr->error_code = 0x6;
  9788  0002BC  0101               	movlb	1	; () banked
  9789  0002BE  EE20 F00E          	lfsr	2,14
  9790  0002C2  0101               	movlb	1	; () banked
  9791  0002C4  51C5               	movf	_ic_ptr& (0+255),w,b
  9792  0002C6  26D9               	addwf	fsr2l,f,c
  9793  0002C8  0101               	movlb	1	; () banked
  9794  0002CA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9795  0002CC  22DA               	addwfc	fsr2h,f,c
  9796  0002CE  0E06               	movlw	6
  9797  0002D0  D04A               	goto	L7
  9798  0002D2                     i2l3896:
  9799                           
  9800                           ; BSR set to: 1
  9801                           ;my_i2c.c: 325: {
  9802                           ;my_i2c.c: 326: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  9803  0002D2  0101               	movlb	1	; () banked
  9804  0002D4  EE20 F01B          	lfsr	2,27
  9805  0002D8  0101               	movlb	1	; () banked
  9806  0002DA  51C5               	movf	_ic_ptr& (0+255),w,b
  9807  0002DC  26D9               	addwf	fsr2l,f,c
  9808  0002DE  0101               	movlb	1	; () banked
  9809  0002E0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9810  0002E2  22DA               	addwfc	fsr2h,f,c
  9811  0002E4  50DF               	movf	indf2,w,c
  9812  0002E6  0100               	movlb	0	; () banked
  9813  0002E8  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9814  0002EA  0101               	movlb	1	; () banked
  9815  0002EC  EE20 F01A          	lfsr	2,26
  9816  0002F0  0101               	movlb	1	; () banked
  9817  0002F2  51C5               	movf	_ic_ptr& (0+255),w,b
  9818  0002F4  26D9               	addwf	fsr2l,f,c
  9819  0002F6  0101               	movlb	1	; () banked
  9820  0002F8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9821  0002FA  22DA               	addwfc	fsr2h,f,c
  9822  0002FC  50DF               	movf	indf2,w,c
  9823  0002FE  0100               	movlb	0	; () banked
  9824  000300  5D9A               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  9825  000302  B0D8               	btfsc	status,0,c
  9826  000304  D0F4               	goto	L10
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;my_i2c.c: 327: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  9830  000306  0101               	movlb	1	; () banked
  9831  000308  EE20 F01B          	lfsr	2,27
  9832  00030C  0101               	movlb	1	; () banked
  9833  00030E  51C5               	movf	_ic_ptr& (0+255),w,b
  9834  000310  26D9               	addwf	fsr2l,f,c
  9835  000312  0101               	movlb	1	; () banked
  9836  000314  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9837  000316  22DA               	addwfc	fsr2h,f,c
  9838  000318  50DF               	movf	indf2,w,c
  9839  00031A  0100               	movlb	0	; () banked
  9840  00031C  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9841  00031E  0100               	movlb	0	; () banked
  9842  000320  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9843  000322  0D01               	mullw	1
  9844  000324  0E10               	movlw	16
  9845  000326  26F3               	addwf	prodl,f,c
  9846  000328  0E00               	movlw	0
  9847  00032A  22F4               	addwfc	prodh,f,c
  9848  00032C  50F3               	movf	prodl,w,c
  9849  00032E  0101               	movlb	1	; () banked
  9850  000330  0101               	movlb	1	; () banked
  9851  000332  25C5               	addwf	_ic_ptr& (0+255),w,b
  9852  000334  6ED9               	movwf	fsr2l,c
  9853  000336  50F4               	movf	prodh,w,c
  9854  000338  0101               	movlb	1	; () banked
  9855  00033A  0101               	movlb	1	; () banked
  9856  00033C  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9857  00033E  6EDA               	movwf	fsr2h,c
  9858  000340  50DF               	movf	indf2,w,c
  9859  000342  6EC9               	movwf	4041,c	;volatile
  9860                           
  9861                           ; BSR set to: 1
  9862                           ;my_i2c.c: 328: ic_ptr->outbufind++;
  9863  000344  0101               	movlb	1	; () banked
  9864  000346  EE20 F01B          	lfsr	2,27
  9865  00034A  0101               	movlb	1	; () banked
  9866  00034C  51C5               	movf	_ic_ptr& (0+255),w,b
  9867  00034E  26D9               	addwf	fsr2l,f,c
  9868  000350  0101               	movlb	1	; () banked
  9869  000352  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9870  000354  22DA               	addwfc	fsr2h,f,c
  9871  000356  2ADF               	incf	indf2,f,c
  9872                           
  9873                           ; BSR set to: 1
  9874                           ;my_i2c.c: 329: data_written = 1;
  9875  000358  0100               	movlb	0	; () banked
  9876  00035A  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9877  00035C  0E01               	movlw	1
  9878  00035E  0100               	movlb	0	; () banked
  9879  000360  0100               	movlb	0	; () banked
  9880  000362  6FB4               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  9881  000364  D0C1               	goto	L8
  9882  000366                     L7:
  9883  000366  6EDF               	movwf	indf2,c
  9884  000368  D0E3               	goto	i2l372
  9885  00036A                     i2l392:
  9886                           
  9887                           ; BSR set to: 1
  9888                           ;my_i2c.c: 337: {
  9889                           ;my_i2c.c: 339: if (SSPSTATbits.P == 1) {
  9890  00036A  A8C7               	btfss	4039,4,c	;volatile
  9891  00036C  D062               	goto	i2l3924
  9892                           
  9893                           ; BSR set to: 1
  9894                           ;my_i2c.c: 341: ic_ptr->event_count++;
  9895  00036E  0101               	movlb	1	; () banked
  9896  000370  EE20 F00C          	lfsr	2,12
  9897  000374  0101               	movlb	1	; () banked
  9898  000376  51C5               	movf	_ic_ptr& (0+255),w,b
  9899  000378  26D9               	addwf	fsr2l,f,c
  9900  00037A  0101               	movlb	1	; () banked
  9901  00037C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9902  00037E  22DA               	addwfc	fsr2h,f,c
  9903  000380  2ADF               	incf	indf2,f,c
  9904                           
  9905                           ; BSR set to: 1
  9906                           ;my_i2c.c: 342: if (data_read) {
  9907  000382  0100               	movlb	0	; () banked
  9908  000384  0100               	movlb	0	; () banked
  9909  000386  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9910  000388  B4D8               	btfsc	status,2,c
  9911  00038A  D04A               	goto	i2l3920
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;my_i2c.c: 343: if (SSPSTATbits.D_A == 1) {
  9915  00038C  AAC7               	btfss	4039,5,c	;volatile
  9916  00038E  D027               	goto	i2l3918
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;my_i2c.c: 344: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  9920  000390  0101               	movlb	1	; () banked
  9921  000392  EE20 F00A          	lfsr	2,10
  9922  000396  0101               	movlb	1	; () banked
  9923  000398  51C5               	movf	_ic_ptr& (0+255),w,b
  9924  00039A  26D9               	addwf	fsr2l,f,c
  9925  00039C  0101               	movlb	1	; () banked
  9926  00039E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9927  0003A0  22DA               	addwfc	fsr2h,f,c
  9928  0003A2  50DF               	movf	indf2,w,c
  9929  0003A4  0100               	movlb	0	; () banked
  9930  0003A6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9931  0003A8  0100               	movlb	0	; () banked
  9932  0003AA  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9933  0003AC  0D01               	mullw	1
  9934  0003AE  50F3               	movf	prodl,w,c
  9935  0003B0  0101               	movlb	1	; () banked
  9936  0003B2  0101               	movlb	1	; () banked
  9937  0003B4  25C5               	addwf	_ic_ptr& (0+255),w,b
  9938  0003B6  6ED9               	movwf	fsr2l,c
  9939  0003B8  50F4               	movf	prodh,w,c
  9940  0003BA  0101               	movlb	1	; () banked
  9941  0003BC  0101               	movlb	1	; () banked
  9942  0003BE  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9943  0003C0  6EDA               	movwf	fsr2h,c
  9944  0003C2  0100               	movlb	0	; () banked
  9945  0003C4  C0BC  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  9946                           
  9947                           ; BSR set to: 0
  9948                           ;my_i2c.c: 345: ic_ptr->buflen++;
  9949  0003C8  0101               	movlb	1	; () banked
  9950  0003CA  EE20 F00A          	lfsr	2,10
  9951  0003CE  0101               	movlb	1	; () banked
  9952  0003D0  51C5               	movf	_ic_ptr& (0+255),w,b
  9953  0003D2  26D9               	addwf	fsr2l,f,c
  9954  0003D4  0101               	movlb	1	; () banked
  9955  0003D6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9956  0003D8  22DA               	addwfc	fsr2h,f,c
  9957  0003DA  2ADF               	incf	indf2,f,c
  9958  0003DC  D021               	goto	i2l3920
  9959  0003DE                     i2l3918:
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;my_i2c.c: 348: ic_ptr->error_count++;
  9963  0003DE  0101               	movlb	1	; () banked
  9964  0003E0  EE20 F00F          	lfsr	2,15
  9965  0003E4  0101               	movlb	1	; () banked
  9966  0003E6  51C5               	movf	_ic_ptr& (0+255),w,b
  9967  0003E8  26D9               	addwf	fsr2l,f,c
  9968  0003EA  0101               	movlb	1	; () banked
  9969  0003EC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9970  0003EE  22DA               	addwfc	fsr2h,f,c
  9971  0003F0  2ADF               	incf	indf2,f,c
  9972                           
  9973                           ;my_i2c.c: 349: ic_ptr->error_code = 0x6;
  9974  0003F2  0101               	movlb	1	; () banked
  9975  0003F4  EE20 F00E          	lfsr	2,14
  9976  0003F8  0101               	movlb	1	; () banked
  9977  0003FA  51C5               	movf	_ic_ptr& (0+255),w,b
  9978  0003FC  26D9               	addwf	fsr2l,f,c
  9979  0003FE  0101               	movlb	1	; () banked
  9980  000400  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9981  000402  22DA               	addwfc	fsr2h,f,c
  9982  000404  0E06               	movlw	6
  9983  000406  6EDF               	movwf	indf2,c
  9984                           
  9985                           ;my_i2c.c: 350: ic_ptr->status = 0x5;
  9986  000408  0101               	movlb	1	; () banked
  9987  00040A  EE20 F00D          	lfsr	2,13
  9988  00040E  0101               	movlb	1	; () banked
  9989  000410  51C5               	movf	_ic_ptr& (0+255),w,b
  9990  000412  26D9               	addwf	fsr2l,f,c
  9991  000414  0101               	movlb	1	; () banked
  9992  000416  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9993  000418  22DA               	addwfc	fsr2h,f,c
  9994  00041A  0E05               	movlw	5
  9995  00041C  6EDF               	movwf	indf2,c
  9996  00041E  D067               	goto	L10
  9997  000420                     i2l3920:
  9998                           
  9999                           ;my_i2c.c: 353: msg_ready = 1;
 10000  000420  0100               	movlb	0	; () banked
 10001  000422  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10002  000424  0E01               	movlw	1
 10003  000426  0100               	movlb	0	; () banked
 10004  000428  0100               	movlb	0	; () banked
 10005  00042A  6FBE               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
 10006  00042C  0100               	movlb	0	; () banked
 10007  00042E  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10008                           
 10009                           ; BSR set to: 0
 10010  000430  D05E               	goto	L10
 10011  000432                     i2l3924:
 10012                           
 10013                           ; BSR set to: 1
 10014  000432  0100               	movlb	0	; () banked
 10015  000434  0100               	movlb	0	; () banked
 10016  000436  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
 10017  000438  B4D8               	btfsc	status,2,c
 10018  00043A  D07A               	goto	i2l372
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;my_i2c.c: 357: ic_ptr->event_count++;
 10022  00043C  0101               	movlb	1	; () banked
 10023  00043E  EE20 F00C          	lfsr	2,12
 10024  000442  0101               	movlb	1	; () banked
 10025  000444  51C5               	movf	_ic_ptr& (0+255),w,b
 10026  000446  26D9               	addwf	fsr2l,f,c
 10027  000448  0101               	movlb	1	; () banked
 10028  00044A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10029  00044C  22DA               	addwfc	fsr2h,f,c
 10030  00044E  2ADF               	incf	indf2,f,c
 10031                           
 10032                           ; BSR set to: 1
 10033                           ;my_i2c.c: 358: if (SSPSTATbits.D_A == 1) {
 10034  000450  AAC7               	btfss	4039,5,c	;volatile
 10035  000452  D027               	goto	i2l400
 10036                           
 10037                           ; BSR set to: 1
 10038                           ;my_i2c.c: 359: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 10039  000454  0101               	movlb	1	; () banked
 10040  000456  EE20 F00A          	lfsr	2,10
 10041  00045A  0101               	movlb	1	; () banked
 10042  00045C  51C5               	movf	_ic_ptr& (0+255),w,b
 10043  00045E  26D9               	addwf	fsr2l,f,c
 10044  000460  0101               	movlb	1	; () banked
 10045  000462  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10046  000464  22DA               	addwfc	fsr2h,f,c
 10047  000466  50DF               	movf	indf2,w,c
 10048  000468  0100               	movlb	0	; () banked
 10049  00046A  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10050  00046C  0100               	movlb	0	; () banked
 10051  00046E  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10052  000470  0D01               	mullw	1
 10053  000472  50F3               	movf	prodl,w,c
 10054  000474  0101               	movlb	1	; () banked
 10055  000476  0101               	movlb	1	; () banked
 10056  000478  25C5               	addwf	_ic_ptr& (0+255),w,b
 10057  00047A  6ED9               	movwf	fsr2l,c
 10058  00047C  50F4               	movf	prodh,w,c
 10059  00047E  0101               	movlb	1	; () banked
 10060  000480  0101               	movlb	1	; () banked
 10061  000482  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
 10062  000484  6EDA               	movwf	fsr2h,c
 10063  000486  0100               	movlb	0	; () banked
 10064  000488  C0BC  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;my_i2c.c: 360: ic_ptr->buflen++;
 10068  00048C  0101               	movlb	1	; () banked
 10069  00048E  EE20 F00A          	lfsr	2,10
 10070  000492  0101               	movlb	1	; () banked
 10071  000494  51C5               	movf	_ic_ptr& (0+255),w,b
 10072  000496  26D9               	addwf	fsr2l,f,c
 10073  000498  0101               	movlb	1	; () banked
 10074  00049A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10075  00049C  22DA               	addwfc	fsr2h,f,c
 10076  00049E  2ADF               	incf	indf2,f,c
 10077                           
 10078                           ;my_i2c.c: 361: } else {
 10079  0004A0  D047               	goto	i2l372
 10080  0004A2                     i2l400:
 10081                           
 10082                           ; BSR set to: 1
 10083                           ;my_i2c.c: 362: if (SSPSTATbits.R_W == 1) {
 10084  0004A2  A4C7               	btfss	4039,2,c	;volatile
 10085  0004A4  D6B6               	goto	i2l3876
 10086                           
 10087                           ; BSR set to: 1
 10088                           ;my_i2c.c: 363: ic_ptr->status = 0x8;
 10089  0004A6  0101               	movlb	1	; () banked
 10090  0004A8  EE20 F00D          	lfsr	2,13
 10091  0004AC  0101               	movlb	1	; () banked
 10092  0004AE  51C5               	movf	_ic_ptr& (0+255),w,b
 10093  0004B0  26D9               	addwf	fsr2l,f,c
 10094  0004B2  0101               	movlb	1	; () banked
 10095  0004B4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10096  0004B6  22DA               	addwfc	fsr2h,f,c
 10097  0004B8  0E08               	movlw	8
 10098  0004BA  6EDF               	movwf	indf2,c
 10099                           
 10100                           ; BSR set to: 1
 10101                           ;my_i2c.c: 364: msg_ready = 1;
 10102  0004BC  0100               	movlb	0	; () banked
 10103  0004BE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10104  0004C0  0E01               	movlw	1
 10105  0004C2  0100               	movlb	0	; () banked
 10106  0004C4  0100               	movlb	0	; () banked
 10107  0004C6  6FBE               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
 10108  0004C8  0100               	movlb	0	; () banked
 10109  0004CA  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10110  0004CC                     L11:
 10111                           
 10112                           ; BSR set to: 0
 10113                           ;my_i2c.c: 365: msg_to_send = 1;
 10114  0004CC  0100               	movlb	0	; () banked
 10115  0004CE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10116  0004D0  0E01               	movlw	1
 10117  0004D2  0100               	movlb	0	; () banked
 10118  0004D4  0100               	movlb	0	; () banked
 10119  0004D6  6FBD               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
 10120  0004D8  0100               	movlb	0	; () banked
 10121  0004DA  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;my_i2c.c: 367: data_read = 0;
 10125  0004DC  0100               	movlb	0	; () banked
 10126  0004DE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10127  0004E0  0E00               	movlw	0
 10128  0004E2  0100               	movlb	0	; () banked
 10129  0004E4  0100               	movlb	0	; () banked
 10130  0004E6  6FC1               	movwf	i2c_slave_int_handler@data_read& (0+255),b
 10131  0004E8                     L8:
 10132  0004E8  0100               	movlb	0	; () banked
 10133  0004EA  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10134                           
 10135                           ;my_i2c.c: 368: } else {
 10136  0004EC  D021               	goto	i2l372
 10137  0004EE                     L10:
 10138                           
 10139                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
 10140  0004EE  0101               	movlb	1	; () banked
 10141  0004F0  EE20 F00D          	lfsr	2,13
 10142  0004F4  0101               	movlb	1	; () banked
 10143  0004F6  51C5               	movf	_ic_ptr& (0+255),w,b
 10144  0004F8  26D9               	addwf	fsr2l,f,c
 10145  0004FA  0101               	movlb	1	; () banked
 10146  0004FC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10147  0004FE  22DA               	addwfc	fsr2h,f,c
 10148  000500  0E05               	movlw	5
 10149  000502  D731               	goto	L7
 10150  000504                     i2l3946:
 10151  000504  0101               	movlb	1	; () banked
 10152  000506  EE20 F00D          	lfsr	2,13
 10153  00050A  0101               	movlb	1	; () banked
 10154  00050C  51C5               	movf	_ic_ptr& (0+255),w,b
 10155  00050E  26D9               	addwf	fsr2l,f,c
 10156  000510  0101               	movlb	1	; () banked
 10157  000512  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10158  000514  22DA               	addwfc	fsr2h,f,c
 10159  000516  50DF               	movf	indf2,w,c
 10160                           
 10161                           ; Switch size 1, requested type "space"
 10162                           ; Number of cases is 4, Range of values is 5 to 8
 10163                           ; switch strategies available:
 10164                           ; Name         Instructions Cycles
 10165                           ; simple_byte           13     7 (average)
 10166                           ;	Chosen strategy is simple_byte
 10167  000518  0A05               	xorlw	5	; case 5
 10168  00051A  B4D8               	btfsc	status,2,c
 10169  00051C  D63C               	goto	i2l374
 10170  00051E  0A03               	xorlw	3	; case 6
 10171  000520  B4D8               	btfsc	status,2,c
 10172  000522  D65B               	goto	i2l378
 10173  000524  0A01               	xorlw	1	; case 7
 10174  000526  B4D8               	btfsc	status,2,c
 10175  000528  D720               	goto	i2l392
 10176  00052A  0A0F               	xorlw	15	; case 8
 10177  00052C  B4D8               	btfsc	status,2,c
 10178  00052E  D6D1               	goto	i2l3896
 10179  000530                     i2l372:
 10180                           
 10181                           ;my_i2c.c: 378: }
 10182                           ;my_i2c.c: 381: if (data_read || data_written) {
 10183  000530  0100               	movlb	0	; () banked
 10184  000532  0100               	movlb	0	; () banked
 10185  000534  67C1               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
 10186  000536  D005               	goto	i2l406
 10187                           
 10188                           ; BSR set to: 0
 10189  000538  0100               	movlb	0	; () banked
 10190  00053A  0100               	movlb	0	; () banked
 10191  00053C  51B4               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
 10192  00053E  B4D8               	btfsc	status,2,c
 10193  000540  D002               	goto	i2l3952
 10194  000542                     i2l406:
 10195                           
 10196                           ; BSR set to: 0
 10197                           ;my_i2c.c: 383: if (SSPCON1bits.CKP == 0) {
 10198  000542  A8C6               	btfss	4038,4,c	;volatile
 10199                           
 10200                           ; BSR set to: 0
 10201                           ;my_i2c.c: 384: SSPCON1bits.CKP = 1;
 10202  000544  88C6               	bsf	4038,4,c	;volatile
 10203  000546                     i2l3952:
 10204                           
 10205                           ; BSR set to: 0
 10206                           ;my_i2c.c: 385: }
 10207                           ;my_i2c.c: 386: }
 10208                           ;my_i2c.c: 389: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
 10209  000546  0101               	movlb	1	; () banked
 10210  000548  EE20 F00A          	lfsr	2,10
 10211  00054C  0101               	movlb	1	; () banked
 10212  00054E  51C5               	movf	_ic_ptr& (0+255),w,b
 10213  000550  26D9               	addwf	fsr2l,f,c
 10214  000552  0101               	movlb	1	; () banked
 10215  000554  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10216  000556  22DA               	addwfc	fsr2h,f,c
 10217  000558  0E08               	movlw	8
 10218  00055A  64DF               	cpfsgt	indf2,c
 10219  00055C  D024               	goto	i2l3958
 10220                           
 10221                           ; BSR set to: 1
 10222  00055E  0100               	movlb	0	; () banked
 10223  000560  0100               	movlb	0	; () banked
 10224  000562  67BE               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
 10225  000564  D020               	goto	i2l3958
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;my_i2c.c: 390: ic_ptr->status = 0x5;
 10229  000566  0101               	movlb	1	; () banked
 10230  000568  EE20 F00D          	lfsr	2,13
 10231  00056C  0101               	movlb	1	; () banked
 10232  00056E  51C5               	movf	_ic_ptr& (0+255),w,b
 10233  000570  26D9               	addwf	fsr2l,f,c
 10234  000572  0101               	movlb	1	; () banked
 10235  000574  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10236  000576  22DA               	addwfc	fsr2h,f,c
 10237  000578  0E05               	movlw	5
 10238  00057A  6EDF               	movwf	indf2,c
 10239                           
 10240                           ;my_i2c.c: 391: ic_ptr->error_count++;
 10241  00057C  0101               	movlb	1	; () banked
 10242  00057E  EE20 F00F          	lfsr	2,15
 10243  000582  0101               	movlb	1	; () banked
 10244  000584  51C5               	movf	_ic_ptr& (0+255),w,b
 10245  000586  26D9               	addwf	fsr2l,f,c
 10246  000588  0101               	movlb	1	; () banked
 10247  00058A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10248  00058C  22DA               	addwfc	fsr2h,f,c
 10249  00058E  2ADF               	incf	indf2,f,c
 10250                           
 10251                           ;my_i2c.c: 392: ic_ptr->error_code = 0x7;
 10252  000590  0101               	movlb	1	; () banked
 10253  000592  EE20 F00E          	lfsr	2,14
 10254  000596  0101               	movlb	1	; () banked
 10255  000598  51C5               	movf	_ic_ptr& (0+255),w,b
 10256  00059A  26D9               	addwf	fsr2l,f,c
 10257  00059C  0101               	movlb	1	; () banked
 10258  00059E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10259  0005A0  22DA               	addwfc	fsr2h,f,c
 10260  0005A2  0E07               	movlw	7
 10261  0005A4  6EDF               	movwf	indf2,c
 10262  0005A6                     i2l3958:
 10263                           
 10264                           ;my_i2c.c: 393: }
 10265                           ;my_i2c.c: 395: if (msg_ready) {
 10266  0005A6  0100               	movlb	0	; () banked
 10267  0005A8  0100               	movlb	0	; () banked
 10268  0005AA  51BE               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
 10269  0005AC  B4D8               	btfsc	status,2,c
 10270  0005AE  D048               	goto	i2l3966
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;my_i2c.c: 396: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
 10274  0005B0  0101               	movlb	1	; () banked
 10275  0005B2  EE20 F00C          	lfsr	2,12
 10276  0005B6  0101               	movlb	1	; () banked
 10277  0005B8  51C5               	movf	_ic_ptr& (0+255),w,b
 10278  0005BA  26D9               	addwf	fsr2l,f,c
 10279  0005BC  0101               	movlb	1	; () banked
 10280  0005BE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10281  0005C0  22DA               	addwfc	fsr2h,f,c
 10282  0005C2  0101               	movlb	1	; () banked
 10283  0005C4  EE10 F00A          	lfsr	1,10
 10284  0005C8  0101               	movlb	1	; () banked
 10285  0005CA  51C5               	movf	_ic_ptr& (0+255),w,b
 10286  0005CC  26E1               	addwf	fsr1l,f,c
 10287  0005CE  0101               	movlb	1	; () banked
 10288  0005D0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10289  0005D2  22E2               	addwfc	fsr1h,f,c
 10290  0005D4  50E7               	movf	indf1,w,c
 10291  0005D6  0100               	movlb	0	; () banked
 10292  0005D8  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10293  0005DA  0100               	movlb	0	; () banked
 10294  0005DC  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10295  0005DE  0D01               	mullw	1
 10296  0005E0  50F3               	movf	prodl,w,c
 10297  0005E2  0101               	movlb	1	; () banked
 10298  0005E4  0101               	movlb	1	; () banked
 10299  0005E6  25C5               	addwf	_ic_ptr& (0+255),w,b
 10300  0005E8  6EE1               	movwf	fsr1l,c
 10301  0005EA  50F4               	movf	prodh,w,c
 10302  0005EC  0101               	movlb	1	; () banked
 10303  0005EE  0101               	movlb	1	; () banked
 10304  0005F0  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
 10305  0005F2  6EE2               	movwf	fsr1h,c
 10306  0005F4  CFDF FFE7          	movff	indf2,indf1
 10307                           
 10308                           ; BSR set to: 1
 10309                           ;my_i2c.c: 397: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
 10310  0005F8  0100               	movlb	0	; () banked
 10311  0005FA  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10312  0005FC  0E28               	movlw	40
 10313  0005FE  0100               	movlb	0	; () banked
 10314  000600  0100               	movlb	0	; () banked
 10315  000602  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
 10316  000604  0100               	movlb	0	; () banked
 10317  000606  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10318  000608  0101               	movlb	1	; () banked
 10319  00060A  0100               	movlb	0	; () banked
 10320  00060C  C1C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
 10321  000610  0101               	movlb	1	; () banked
 10322  000612  0100               	movlb	0	; () banked
 10323  000614  C1C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
 10324  000618  0101               	movlb	1	; () banked
 10325  00061A  EE20 F00A          	lfsr	2,10
 10326  00061E  0101               	movlb	1	; () banked
 10327  000620  51C5               	movf	_ic_ptr& (0+255),w,b
 10328  000622  26D9               	addwf	fsr2l,f,c
 10329  000624  0101               	movlb	1	; () banked
 10330  000626  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10331  000628  22DA               	addwfc	fsr2h,f,c
 10332  00062A  50DF               	movf	indf2,w,c
 10333  00062C  0100               	movlb	0	; () banked
 10334  00062E  6F9B               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
 10335  000630  0100               	movlb	0	; () banked
 10336  000632  299B               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
 10337  000634  ECE4  F015         	call	_ToMainHigh_sendmsg
 10338                           
 10339                           ;my_i2c.c: 398: ic_ptr->buflen = 0;
 10340  000638  0101               	movlb	1	; () banked
 10341  00063A  EE20 F00A          	lfsr	2,10
 10342  00063E  D04B               	goto	L9
 10343  000640                     i2l3966:
 10344  000640  0101               	movlb	1	; () banked
 10345  000642  EE20 F00F          	lfsr	2,15
 10346  000646  0101               	movlb	1	; () banked
 10347  000648  51C5               	movf	_ic_ptr& (0+255),w,b
 10348  00064A  26D9               	addwf	fsr2l,f,c
 10349  00064C  0101               	movlb	1	; () banked
 10350  00064E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10351  000650  22DA               	addwfc	fsr2h,f,c
 10352  000652  50DF               	movf	indf2,w,c
 10353  000654  B4D8               	btfsc	status,2,c
 10354  000656  D047               	goto	i2l3974
 10355                           
 10356                           ; BSR set to: 1
 10357                           ;my_i2c.c: 400: error_buf[0] = ic_ptr->error_count;
 10358  000658  0101               	movlb	1	; () banked
 10359  00065A  EE20 F00F          	lfsr	2,15
 10360  00065E  0101               	movlb	1	; () banked
 10361  000660  51C5               	movf	_ic_ptr& (0+255),w,b
 10362  000662  26D9               	addwf	fsr2l,f,c
 10363  000664  0101               	movlb	1	; () banked
 10364  000666  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10365  000668  22DA               	addwfc	fsr2h,f,c
 10366  00066A  50DF               	movf	indf2,w,c
 10367  00066C  0100               	movlb	0	; () banked
 10368  00066E  0100               	movlb	0	; () banked
 10369  000670  6FB1               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
 10370                           
 10371                           ;my_i2c.c: 401: error_buf[1] = ic_ptr->error_code;
 10372  000672  0101               	movlb	1	; () banked
 10373  000674  EE20 F00E          	lfsr	2,14
 10374  000678  0101               	movlb	1	; () banked
 10375  00067A  51C5               	movf	_ic_ptr& (0+255),w,b
 10376  00067C  26D9               	addwf	fsr2l,f,c
 10377  00067E  0101               	movlb	1	; () banked
 10378  000680  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10379  000682  22DA               	addwfc	fsr2h,f,c
 10380  000684  50DF               	movf	indf2,w,c
 10381  000686  0100               	movlb	0	; () banked
 10382  000688  0100               	movlb	0	; () banked
 10383  00068A  6FB2               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
 10384                           
 10385                           ;my_i2c.c: 402: error_buf[2] = ic_ptr->event_count;
 10386  00068C  0101               	movlb	1	; () banked
 10387  00068E  EE20 F00C          	lfsr	2,12
 10388  000692  0101               	movlb	1	; () banked
 10389  000694  51C5               	movf	_ic_ptr& (0+255),w,b
 10390  000696  26D9               	addwf	fsr2l,f,c
 10391  000698  0101               	movlb	1	; () banked
 10392  00069A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10393  00069C  22DA               	addwfc	fsr2h,f,c
 10394  00069E  50DF               	movf	indf2,w,c
 10395  0006A0  0100               	movlb	0	; () banked
 10396  0006A2  0100               	movlb	0	; () banked
 10397  0006A4  6FB3               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
 10398                           
 10399                           ; BSR set to: 0
 10400                           ;my_i2c.c: 403: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
 10401  0006A6  0100               	movlb	0	; () banked
 10402  0006A8  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10403  0006AA  0E29               	movlw	41
 10404  0006AC  0100               	movlb	0	; () banked
 10405  0006AE  0100               	movlb	0	; () banked
 10406  0006B0  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
 10407  0006B2  0100               	movlb	0	; () banked
 10408  0006B4  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10409  0006B6  0100               	movlb	0	; () banked
 10410  0006B8  0E00               	movlw	high i2c_slave_int_handler@error_buf
 10411  0006BA  0100               	movlb	0	; () banked
 10412  0006BC  0100               	movlb	0	; () banked
 10413  0006BE  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
 10414  0006C0  0100               	movlb	0	; () banked
 10415  0006C2  0EB1               	movlw	low i2c_slave_int_handler@error_buf
 10416  0006C4  0100               	movlb	0	; () banked
 10417  0006C6  0100               	movlb	0	; () banked
 10418  0006C8  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
 10419  0006CA  0E03               	movlw	3
 10420  0006CC  ECE4  F015         	call	_ToMainHigh_sendmsg
 10421                           
 10422                           ;my_i2c.c: 404: ic_ptr->error_count = 0;
 10423  0006D0  0101               	movlb	1	; () banked
 10424  0006D2  EE20 F00F          	lfsr	2,15
 10425  0006D6                     L9:
 10426  0006D6  0101               	movlb	1	; () banked
 10427  0006D8  51C5               	movf	_ic_ptr& (0+255),w,b
 10428  0006DA  26D9               	addwf	fsr2l,f,c
 10429  0006DC  0101               	movlb	1	; () banked
 10430  0006DE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10431  0006E0  22DA               	addwfc	fsr2h,f,c
 10432  0006E2  0E00               	movlw	0
 10433  0006E4  6EDF               	movwf	indf2,c
 10434  0006E6                     i2l3974:
 10435                           
 10436                           ; BSR set to: 1
 10437                           ;my_i2c.c: 405: }
 10438                           ;my_i2c.c: 406: if (msg_to_send) {
 10439  0006E6  0100               	movlb	0	; () banked
 10440  0006E8  0100               	movlb	0	; () banked
 10441  0006EA  51BD               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
 10442  0006EC  B4D8               	btfsc	status,2,c
 10443  0006EE  0012               	return	
 10444                           
 10445                           ; BSR set to: 0
 10446                           ;my_i2c.c: 407: int length = 6;
 10447  0006F0  0E00               	movlw	0
 10448  0006F2  0100               	movlb	0	; () banked
 10449  0006F4  0100               	movlb	0	; () banked
 10450  0006F6  6FC0               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
 10451  0006F8  0E06               	movlw	6
 10452  0006FA  0100               	movlb	0	; () banked
 10453  0006FC  6FBF               	movwf	i2c_slave_int_handler@length& (0+255),b
 10454                           
 10455                           ; BSR set to: 0
 10456                           ;my_i2c.c: 411: if(ic_ptr->buffer[0] == 0xAA){
 10457  0006FE  0EAA               	movlw	170
 10458  000700  C1C5  FFD9         	movff	_ic_ptr,fsr2l
 10459  000704  C1C6  FFDA         	movff	_ic_ptr+1,fsr2h
 10460  000708  62DF               	cpfseq	indf2,c
 10461  00070A  D045               	goto	i2l3996
 10462                           
 10463                           ; BSR set to: 0
 10464                           ;my_i2c.c: 414: unsigned char messageType = 0x01, bitmask = 0x17, checksum;
 10465  00070C  0100               	movlb	0	; () banked
 10466  00070E  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10467  000710  0E01               	movlw	1
 10468  000712  0100               	movlb	0	; () banked
 10469  000714  0100               	movlb	0	; () banked
 10470  000716  6FAE               	movwf	i2c_slave_int_handler@messageType& (0+255),b
 10471  000718  0100               	movlb	0	; () banked
 10472  00071A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10473  00071C  0100               	movlb	0	; () banked
 10474  00071E  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10475  000720  0E17               	movlw	23
 10476  000722  0100               	movlb	0	; () banked
 10477  000724  0100               	movlb	0	; () banked
 10478  000726  6FAF               	movwf	i2c_slave_int_handler@bitmask& (0+255),b
 10479  000728  0100               	movlb	0	; () banked
 10480  00072A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10481                           
 10482                           ; BSR set to: 0
 10483                           ;my_i2c.c: 417: unsigned char message[6];
 10484                           ;my_i2c.c: 420: message[0] = messageType;
 10485  00072C  C0AE  F0B6         	movff	i2c_slave_int_handler@messageType,i2c_slave_int_handler@message
 10486                           
 10487                           ; BSR set to: 0
 10488                           ;my_i2c.c: 421: message[1] = adcbuffer[1];
 10489  000730  C167  F0B7         	movff	_adcbuffer+1,i2c_slave_int_handler@message+1
 10490                           
 10491                           ; BSR set to: 0
 10492                           ;my_i2c.c: 422: message[2] = adcbuffer[2];
 10493  000734  C168  F0B8         	movff	_adcbuffer+2,i2c_slave_int_handler@message+2
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;my_i2c.c: 423: message[3] = adcbuffer[3];
 10497  000738  C169  F0B9         	movff	_adcbuffer+3,i2c_slave_int_handler@message+3
 10498                           
 10499                           ; BSR set to: 0
 10500                           ;my_i2c.c: 426: checksum = message[1] + message[2] + message[3];
 10501  00073C  0100               	movlb	0	; () banked
 10502  00073E  0100               	movlb	0	; () banked
 10503  000740  51B7               	movf	(i2c_slave_int_handler@message+1)& (0+255),w,b
 10504  000742  0100               	movlb	0	; () banked
 10505  000744  0100               	movlb	0	; () banked
 10506  000746  25B8               	addwf	(i2c_slave_int_handler@message+2)& (0+255),w,b
 10507  000748  0100               	movlb	0	; () banked
 10508  00074A  0100               	movlb	0	; () banked
 10509  00074C  25B9               	addwf	(i2c_slave_int_handler@message+3)& (0+255),w,b
 10510  00074E  0100               	movlb	0	; () banked
 10511  000750  0100               	movlb	0	; () banked
 10512  000752  6FB0               	movwf	i2c_slave_int_handler@checksum& (0+255),b
 10513                           
 10514                           ; BSR set to: 0
 10515                           ;my_i2c.c: 427: message[4] = checksum & bitmask;
 10516  000754  0100               	movlb	0	; () banked
 10517  000756  0100               	movlb	0	; () banked
 10518  000758  51B0               	movf	i2c_slave_int_handler@checksum& (0+255),w,b
 10519  00075A  0100               	movlb	0	; () banked
 10520  00075C  0100               	movlb	0	; () banked
 10521  00075E  15AF               	andwf	i2c_slave_int_handler@bitmask& (0+255),w,b
 10522  000760  0100               	movlb	0	; () banked
 10523  000762  0100               	movlb	0	; () banked
 10524  000764  6FBA               	movwf	(i2c_slave_int_handler@message+4)& (0+255),b
 10525                           
 10526                           ;my_i2c.c: 428: message[5] = 0x00;
 10527  000766  0100               	movlb	0	; () banked
 10528  000768  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10529  00076A  0E00               	movlw	0
 10530  00076C  0100               	movlb	0	; () banked
 10531  00076E  0100               	movlb	0	; () banked
 10532  000770  6FBB               	movwf	(i2c_slave_int_handler@message+5)& (0+255),b
 10533  000772  0100               	movlb	0	; () banked
 10534  000774  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10535                           
 10536                           ; BSR set to: 0
 10537                           ;my_i2c.c: 430: start_i2c_slave_reply(length, message);
 10538  000776  0100               	movlb	0	; () banked
 10539  000778  0E00               	movlw	high i2c_slave_int_handler@message
 10540  00077A  0100               	movlb	0	; () banked
 10541  00077C  0100               	movlb	0	; () banked
 10542  00077E  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
 10543  000780  0100               	movlb	0	; () banked
 10544  000782  0EB6               	movlw	low i2c_slave_int_handler@message
 10545  000784  0100               	movlb	0	; () banked
 10546  000786  0100               	movlb	0	; () banked
 10547  000788  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
 10548  00078A  0100               	movlb	0	; () banked
 10549  00078C  0100               	movlb	0	; () banked
 10550  00078E  51BF               	movf	i2c_slave_int_handler@length& (0+255),w,b
 10551  000790  ECC2  F00A         	call	_start_i2c_slave_reply
 10552                           
 10553                           ;my_i2c.c: 432: } else if(ic_ptr->buffer[0] == 0xBA){
 10554  000794  D0DB               	goto	i2l4028
 10555  000796                     i2l3996:
 10556  000796  0EBA               	movlw	186
 10557  000798  C1C5  FFD9         	movff	_ic_ptr,fsr2l
 10558  00079C  C1C6  FFDA         	movff	_ic_ptr+1,fsr2h
 10559  0007A0  62DF               	cpfseq	indf2,c
 10560  0007A2  D05C               	goto	i2l4008
 10561                           
 10562                           ;my_i2c.c: 434: unsigned char ack[6] = {0x03, 0x00, 0x00, 0x00, 0x00, 0x00};
 10563  0007A4  EE20  F0D0         	lfsr	2,i2c_slave_int_handler@F5143
 10564  0007A8  EE10  F09C         	lfsr	1,i2c_slave_int_handler@ack
 10565  0007AC  0E06               	movlw	6
 10566  0007AE                     i2u303_41:
 10567  0007AE  CFDE FFE6          	movff	postinc2,postinc1
 10568  0007B2  2EE8               	decfsz	wreg,f,c
 10569  0007B4  D7FC               	goto	i2u303_41
 10570                           
 10571                           ;my_i2c.c: 435: start_i2c_slave_reply(length, ack);
 10572  0007B6  0100               	movlb	0	; () banked
 10573  0007B8  0E00               	movlw	high i2c_slave_int_handler@ack
 10574  0007BA  0100               	movlb	0	; () banked
 10575  0007BC  0100               	movlb	0	; () banked
 10576  0007BE  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
 10577  0007C0  0100               	movlb	0	; () banked
 10578  0007C2  0E9C               	movlw	low i2c_slave_int_handler@ack
 10579  0007C4  0100               	movlb	0	; () banked
 10580  0007C6  0100               	movlb	0	; () banked
 10581  0007C8  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
 10582  0007CA  0100               	movlb	0	; () banked
 10583  0007CC  0100               	movlb	0	; () banked
 10584  0007CE  51BF               	movf	i2c_slave_int_handler@length& (0+255),w,b
 10585  0007D0  ECC2  F00A         	call	_start_i2c_slave_reply
 10586                           
 10587                           ;my_i2c.c: 436: rightEncoder = 0;
 10588  0007D4  0100               	movlb	0	; () banked
 10589  0007D6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10590  0007D8  0E00               	movlw	0
 10591  0007DA  0100               	movlb	0	; () banked
 10592  0007DC  0100               	movlb	0	; () banked
 10593  0007DE  6FEE               	movwf	_rightEncoder& (0+255),b
 10594  0007E0  0100               	movlb	0	; () banked
 10595  0007E2  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10596                           
 10597                           ; BSR set to: 0
 10598                           ;my_i2c.c: 437: leftEncoder = 0;
 10599  0007E4  0100               	movlb	0	; () banked
 10600  0007E6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10601  0007E8  0E00               	movlw	0
 10602  0007EA  0100               	movlb	0	; () banked
 10603  0007EC  0100               	movlb	0	; () banked
 10604  0007EE  6FEC               	movwf	_leftEncoder& (0+255),b
 10605  0007F0  0100               	movlb	0	; () banked
 10606  0007F2  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10607                           
 10608                           ; BSR set to: 0
 10609                           ;my_i2c.c: 438: motorMove(ic_ptr->buffer[1], ic_ptr->buffer[2], ic_ptr->buffer[3], ic_pt
      +                          r->buffer[4]);
 10610  0007F4  0101               	movlb	1	; () banked
 10611  0007F6  EE20 F002          	lfsr	2,2
 10612  0007FA  0101               	movlb	1	; () banked
 10613  0007FC  51C5               	movf	_ic_ptr& (0+255),w,b
 10614  0007FE  26D9               	addwf	fsr2l,f,c
 10615  000800  0101               	movlb	1	; () banked
 10616  000802  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10617  000804  22DA               	addwfc	fsr2h,f,c
 10618  000806  50DF               	movf	indf2,w,c
 10619  000808  0100               	movlb	0	; () banked
 10620  00080A  0100               	movlb	0	; () banked
 10621  00080C  6F85               	movwf	i2motorMove@right& (0+255),b
 10622  00080E  0101               	movlb	1	; () banked
 10623  000810  EE20 F003          	lfsr	2,3
 10624  000814  0101               	movlb	1	; () banked
 10625  000816  51C5               	movf	_ic_ptr& (0+255),w,b
 10626  000818  26D9               	addwf	fsr2l,f,c
 10627  00081A  0101               	movlb	1	; () banked
 10628  00081C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10629  00081E  22DA               	addwfc	fsr2h,f,c
 10630  000820  50DF               	movf	indf2,w,c
 10631  000822  0100               	movlb	0	; () banked
 10632  000824  0100               	movlb	0	; () banked
 10633  000826  6F86               	movwf	i2motorMove@leftDistance& (0+255),b
 10634  000828  0101               	movlb	1	; () banked
 10635  00082A  EE20 F004          	lfsr	2,4
 10636  00082E  0101               	movlb	1	; () banked
 10637  000830  51C5               	movf	_ic_ptr& (0+255),w,b
 10638  000832  26D9               	addwf	fsr2l,f,c
 10639  000834  0101               	movlb	1	; () banked
 10640  000836  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10641  000838  22DA               	addwfc	fsr2h,f,c
 10642  00083A  50DF               	movf	indf2,w,c
 10643  00083C  0100               	movlb	0	; () banked
 10644  00083E  0100               	movlb	0	; () banked
 10645  000840  6F87               	movwf	i2motorMove@rightDistance& (0+255),b
 10646  000842  0101               	movlb	1	; () banked
 10647  000844  EE20 F001          	lfsr	2,1
 10648  000848  0101               	movlb	1	; () banked
 10649  00084A  51C5               	movf	_ic_ptr& (0+255),w,b
 10650  00084C  26D9               	addwf	fsr2l,f,c
 10651  00084E  0101               	movlb	1	; () banked
 10652  000850  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10653  000852  22DA               	addwfc	fsr2h,f,c
 10654  000854  50DF               	movf	indf2,w,c
 10655  000856  EC4E  F010         	call	i2_motorMove
 10656                           
 10657                           ;my_i2c.c: 439: }
 10658  00085A  D078               	goto	i2l4028
 10659  00085C                     i2l4008:
 10660                           
 10661                           ;my_i2c.c: 440: else if(ic_ptr->buffer[0] == 0xCA) {
 10662  00085C  0ECA               	movlw	202
 10663  00085E  C1C5  FFD9         	movff	_ic_ptr,fsr2l
 10664  000862  C1C6  FFDA         	movff	_ic_ptr+1,fsr2h
 10665  000866  62DF               	cpfseq	indf2,c
 10666  000868  D01F               	goto	i2l4020
 10667                           
 10668                           ;my_i2c.c: 441: unsigned char dist[6] = {0x04, 0x00, 0x00, 0x00, 0x00, 0x00};
 10669  00086A  EE20  F0D6         	lfsr	2,i2c_slave_int_handler@F5145
 10670  00086E  EE10  F0A8         	lfsr	1,i2c_slave_int_handler@dist
 10671  000872  0E06               	movlw	6
 10672  000874                     i2u305_41:
 10673  000874  CFDE FFE6          	movff	postinc2,postinc1
 10674  000878  2EE8               	decfsz	wreg,f,c
 10675  00087A  D7FC               	goto	i2u305_41
 10676                           
 10677                           ;my_i2c.c: 442: dist[1] = stopCond;
 10678  00087C  C0EF  F0A9         	movff	_stopCond,i2c_slave_int_handler@dist+1
 10679                           
 10680                           ;my_i2c.c: 443: dist[2] = leftEncoder;
 10681  000880  C0EC  F0AA         	movff	_leftEncoder,i2c_slave_int_handler@dist+2
 10682                           
 10683                           ;my_i2c.c: 444: dist[3] = rightEncoder;
 10684  000884  C0EE  F0AB         	movff	_rightEncoder,i2c_slave_int_handler@dist+3
 10685                           
 10686                           ;my_i2c.c: 445: start_i2c_slave_reply(length, dist);
 10687  000888  0100               	movlb	0	; () banked
 10688  00088A  0E00               	movlw	high i2c_slave_int_handler@dist
 10689  00088C  0100               	movlb	0	; () banked
 10690  00088E  0100               	movlb	0	; () banked
 10691  000890  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
 10692  000892  0100               	movlb	0	; () banked
 10693  000894  0EA8               	movlw	low i2c_slave_int_handler@dist
 10694  000896  0100               	movlb	0	; () banked
 10695  000898  0100               	movlb	0	; () banked
 10696  00089A  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
 10697  00089C  0100               	movlb	0	; () banked
 10698  00089E  0100               	movlb	0	; () banked
 10699  0008A0  51BF               	movf	i2c_slave_int_handler@length& (0+255),w,b
 10700  0008A2  ECC2  F00A         	call	_start_i2c_slave_reply
 10701                           
 10702                           ;my_i2c.c: 446: }
 10703  0008A6  D052               	goto	i2l4028
 10704  0008A8                     i2l4020:
 10705                           
 10706                           ;my_i2c.c: 447: else if(ic_ptr->buffer[0] == 0xBC) {
 10707  0008A8  0EBC               	movlw	188
 10708  0008AA  C1C5  FFD9         	movff	_ic_ptr,fsr2l
 10709  0008AE  C1C6  FFDA         	movff	_ic_ptr+1,fsr2h
 10710  0008B2  62DF               	cpfseq	indf2,c
 10711  0008B4  D04B               	goto	i2l4028
 10712                           
 10713                           ;my_i2c.c: 448: unsigned char ack[6] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 10714  0008B6  EE20  F0E4         	lfsr	2,i2c_slave_int_handler@F5147
 10715  0008BA  EE10  F0A2         	lfsr	1,i2c_slave_int_handler@ack_1696
 10716  0008BE  0E06               	movlw	6
 10717  0008C0                     i2u307_41:
 10718  0008C0  CFDE FFE6          	movff	postinc2,postinc1
 10719  0008C4  2EE8               	decfsz	wreg,f,c
 10720  0008C6  D7FC               	goto	i2u307_41
 10721                           
 10722                           ;my_i2c.c: 449: start_i2c_slave_reply(length, ack);
 10723  0008C8  0100               	movlb	0	; () banked
 10724  0008CA  0E00               	movlw	high i2c_slave_int_handler@ack_1696
 10725  0008CC  0100               	movlb	0	; () banked
 10726  0008CE  0100               	movlb	0	; () banked
 10727  0008D0  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
 10728  0008D2  0100               	movlb	0	; () banked
 10729  0008D4  0EA2               	movlw	low i2c_slave_int_handler@ack_1696
 10730  0008D6  0100               	movlb	0	; () banked
 10731  0008D8  0100               	movlb	0	; () banked
 10732  0008DA  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
 10733  0008DC  0100               	movlb	0	; () banked
 10734  0008DE  0100               	movlb	0	; () banked
 10735  0008E0  51BF               	movf	i2c_slave_int_handler@length& (0+255),w,b
 10736  0008E2  ECC2  F00A         	call	_start_i2c_slave_reply
 10737                           
 10738                           ;my_i2c.c: 450: motorMove(ic_ptr->buffer[1], ic_ptr->buffer[2], ic_ptr->buffer[3], ic_pt
      +                          r->buffer[4]);
 10739  0008E6  0101               	movlb	1	; () banked
 10740  0008E8  EE20 F002          	lfsr	2,2
 10741  0008EC  0101               	movlb	1	; () banked
 10742  0008EE  51C5               	movf	_ic_ptr& (0+255),w,b
 10743  0008F0  26D9               	addwf	fsr2l,f,c
 10744  0008F2  0101               	movlb	1	; () banked
 10745  0008F4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10746  0008F6  22DA               	addwfc	fsr2h,f,c
 10747  0008F8  50DF               	movf	indf2,w,c
 10748  0008FA  0100               	movlb	0	; () banked
 10749  0008FC  0100               	movlb	0	; () banked
 10750  0008FE  6F85               	movwf	i2motorMove@right& (0+255),b
 10751  000900  0101               	movlb	1	; () banked
 10752  000902  EE20 F003          	lfsr	2,3
 10753  000906  0101               	movlb	1	; () banked
 10754  000908  51C5               	movf	_ic_ptr& (0+255),w,b
 10755  00090A  26D9               	addwf	fsr2l,f,c
 10756  00090C  0101               	movlb	1	; () banked
 10757  00090E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10758  000910  22DA               	addwfc	fsr2h,f,c
 10759  000912  50DF               	movf	indf2,w,c
 10760  000914  0100               	movlb	0	; () banked
 10761  000916  0100               	movlb	0	; () banked
 10762  000918  6F86               	movwf	i2motorMove@leftDistance& (0+255),b
 10763  00091A  0101               	movlb	1	; () banked
 10764  00091C  EE20 F004          	lfsr	2,4
 10765  000920  0101               	movlb	1	; () banked
 10766  000922  51C5               	movf	_ic_ptr& (0+255),w,b
 10767  000924  26D9               	addwf	fsr2l,f,c
 10768  000926  0101               	movlb	1	; () banked
 10769  000928  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10770  00092A  22DA               	addwfc	fsr2h,f,c
 10771  00092C  50DF               	movf	indf2,w,c
 10772  00092E  0100               	movlb	0	; () banked
 10773  000930  0100               	movlb	0	; () banked
 10774  000932  6F87               	movwf	i2motorMove@rightDistance& (0+255),b
 10775  000934  0101               	movlb	1	; () banked
 10776  000936  EE20 F001          	lfsr	2,1
 10777  00093A  0101               	movlb	1	; () banked
 10778  00093C  51C5               	movf	_ic_ptr& (0+255),w,b
 10779  00093E  26D9               	addwf	fsr2l,f,c
 10780  000940  0101               	movlb	1	; () banked
 10781  000942  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10782  000944  22DA               	addwfc	fsr2h,f,c
 10783  000946  50DF               	movf	indf2,w,c
 10784  000948  EC4E  F010         	call	i2_motorMove
 10785  00094C                     i2l4028:
 10786                           
 10787                           ;my_i2c.c: 451: }
 10788                           ;my_i2c.c: 452: msg_to_send = 0;
 10789  00094C  0100               	movlb	0	; () banked
 10790  00094E  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10791  000950  0E00               	movlw	0
 10792  000952  0100               	movlb	0	; () banked
 10793  000954  0100               	movlb	0	; () banked
 10794  000956  6FBD               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
 10795  000958  0100               	movlb	0	; () banked
 10796  00095A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10797  00095C  0012               	return	
 10798  00095E                     __end_of_i2c_slave_int_handler:
 10799                           	opt stack 0
 10800                           pclatu	equ	0xFFB
 10801                           pclath	equ	0xFFA
 10802                           tblptru	equ	0xFF8
 10803                           tblptrh	equ	0xFF7
 10804                           tblptrl	equ	0xFF6
 10805                           tablat	equ	0xFF5
 10806                           prodh	equ	0xFF4
 10807                           prodl	equ	0xFF3
 10808                           intcon	equ	0xFF2
 10809                           intcon2	equ	0xFF1
 10810                           postinc0	equ	0xFEE
 10811                           fsr0h	equ	0xFEA
 10812                           fsr0l	equ	0xFE9
 10813                           wreg	equ	0xFE8
 10814                           indf1	equ	0xFE7
 10815                           postinc1	equ	0xFE6
 10816                           postdec1	equ	0xFE5
 10817                           fsr1h	equ	0xFE2
 10818                           fsr1l	equ	0xFE1
 10819                           bsr	equ	0xFE0
 10820                           indf2	equ	0xFDF
 10821                           postinc2	equ	0xFDE
 10822                           postdec2	equ	0xFDD
 10823                           fsr2h	equ	0xFDA
 10824                           fsr2l	equ	0xFD9
 10825                           status	equ	0xFD8
 10826                           
 10827 ;; *************** function i2_motorMove *****************
 10828 ;; Defined at:
 10829 ;;		line 5 in file "../src/motor.c"
 10830 ;; Parameters:    Size  Location     Type
 10831 ;;  left            1    wreg     unsigned char 
 10832 ;;  right           1    5[BANK0 ] unsigned char 
 10833 ;;  leftDistance    1    6[BANK0 ] unsigned char 
 10834 ;;  rightDistanc    1    7[BANK0 ] unsigned char 
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;  left            1   11[BANK0 ] unsigned char 
 10837 ;;  motorMove       2    9[BANK0 ] unsigned char [2]
 10838 ;; Return value:  Size  Location     Type
 10839 ;;		None               void
 10840 ;; Registers used:
 10841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10847 ;;      Params:         0       3       0       0       0
 10848 ;;      Locals:         0       3       0       0       0
 10849 ;;      Temps:          0       1       0       0       0
 10850 ;;      Totals:         0       7       0       0       0
 10851 ;;Total ram usage:        7 bytes
 10852 ;; Hardware stack levels used:    1
 10853 ;; Hardware stack levels required when called:    1
 10854 ;; This function calls:
 10855 ;;		i2_WriteTimer0
 10856 ;;		i2_WriteTimer1
 10857 ;;		i2_uart_trans
 10858 ;; This function is called by:
 10859 ;;		_i2c_slave_int_handler
 10860 ;;		_timer0_int_handler
 10861 ;; This function uses a non-reentrant model
 10862 ;;
 10863                           
 10864                           	psect	text57
 10865  00209C                     __ptext57:
 10866                           	opt stack 0
 10867  00209C                     i2_motorMove:
 10868                           	opt stack 18
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;incstack = 0
 10872                           ;i2motorMove@left stored from wreg
 10873  00209C  CFE8 F08B          	movff	wreg,i2motorMove@left
 10874                           
 10875                           ;motor.c: 7: if(leftDistance != 0 && rightDistance != 0){
 10876  0020A0  0100               	movlb	0	; () banked
 10877  0020A2  0100               	movlb	0	; () banked
 10878  0020A4  5186               	movf	i2motorMove@leftDistance& (0+255),w,b
 10879  0020A6  B4D8               	btfsc	status,2,c
 10880  0020A8  D009               	goto	i2l4300
 10881                           
 10882                           ; BSR set to: 0
 10883  0020AA  0100               	movlb	0	; () banked
 10884  0020AC  0100               	movlb	0	; () banked
 10885  0020AE  5187               	movf	i2motorMove@rightDistance& (0+255),w,b
 10886  0020B0  B4D8               	btfsc	status,2,c
 10887  0020B2  D004               	goto	i2l4300
 10888                           
 10889                           ; BSR set to: 0
 10890                           ;motor.c: 8: leftDistDesired = leftDistance;
 10891  0020B4  C086  F0EB         	movff	i2motorMove@leftDistance,_leftDistDesired
 10892                           
 10893                           ;motor.c: 9: rightDistDesired = rightDistance;
 10894  0020B8  C087  F0ED         	movff	i2motorMove@rightDistance,_rightDistDesired
 10895  0020BC                     i2l4300:
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;motor.c: 10: }
 10899                           ;motor.c: 12: if(left != 0x00 && right != 0x00){
 10900  0020BC  0100               	movlb	0	; () banked
 10901  0020BE  0100               	movlb	0	; () banked
 10902  0020C0  518B               	movf	i2motorMove@left& (0+255),w,b
 10903  0020C2  B4D8               	btfsc	status,2,c
 10904  0020C4  D009               	goto	i2l4306
 10905                           
 10906                           ; BSR set to: 0
 10907  0020C6  0100               	movlb	0	; () banked
 10908  0020C8  0100               	movlb	0	; () banked
 10909  0020CA  5185               	movf	i2motorMove@right& (0+255),w,b
 10910  0020CC  B4D8               	btfsc	status,2,c
 10911  0020CE  D004               	goto	i2l4306
 10912                           
 10913                           ; BSR set to: 0
 10914                           ;motor.c: 13: stopCond = 0x00;
 10915  0020D0  0100               	movlb	0	; () banked
 10916  0020D2  6F88               	movwf	??i2_motorMove& (0+255),b
 10917  0020D4  0E00               	movlw	0
 10918  0020D6  D003               	goto	L12
 10919  0020D8                     i2l4306:
 10920                           
 10921                           ; BSR set to: 0
 10922                           ;motor.c: 15: stopCond = 0x01;
 10923  0020D8  0100               	movlb	0	; () banked
 10924  0020DA  6F88               	movwf	??i2_motorMove& (0+255),b
 10925  0020DC  0E01               	movlw	1
 10926  0020DE                     L12:
 10927  0020DE  0100               	movlb	0	; () banked
 10928  0020E0  0100               	movlb	0	; () banked
 10929  0020E2  6FEF               	movwf	_stopCond& (0+255),b
 10930  0020E4  0100               	movlb	0	; () banked
 10931  0020E6  5188               	movf	??i2_motorMove& (0+255),w,b
 10932                           
 10933                           ; BSR set to: 0
 10934                           ;motor.c: 16: }
 10935                           ;motor.c: 18: WriteTimer0(0x7F);
 10936                           
 10937                           ; BSR set to: 0
 10938  0020E8  0E00               	movlw	0
 10939  0020EA  0100               	movlb	0	; () banked
 10940  0020EC  0100               	movlb	0	; () banked
 10941  0020EE  6F81               	movwf	(i2WriteTimer0@timer0+1)& (0+255),b
 10942  0020F0  0E7F               	movlw	127
 10943  0020F2  0100               	movlb	0	; () banked
 10944  0020F4  6F80               	movwf	i2WriteTimer0@timer0& (0+255),b
 10945  0020F6  ECDB  F016         	call	i2_WriteTimer0	;wreg free
 10946                           
 10947                           ;motor.c: 19: WriteTimer1(0xFF7F);
 10948  0020FA  0EFF               	movlw	255
 10949  0020FC  0100               	movlb	0	; () banked
 10950  0020FE  0100               	movlb	0	; () banked
 10951  002100  6F81               	movwf	(i2WriteTimer1@timer1+1)& (0+255),b
 10952  002102  0E7F               	movlw	127
 10953  002104  0100               	movlb	0	; () banked
 10954  002106  6F80               	movwf	i2WriteTimer1@timer1& (0+255),b
 10955  002108  ECD2  F016         	call	i2_WriteTimer1	;wreg free
 10956                           
 10957                           ;motor.c: 20: unsigned char direction[2];
 10958                           ;motor.c: 21: direction[0] = left;
 10959  00210C  C08B  F089         	movff	i2motorMove@left,i2motorMove@direction
 10960                           
 10961                           ;motor.c: 22: direction[1] = right;
 10962  002110  C085  F08A         	movff	i2motorMove@right,i2motorMove@direction+1
 10963                           
 10964                           ;motor.c: 23: uart_trans(2, direction);
 10965  002114  0100               	movlb	0	; () banked
 10966  002116  0E00               	movlw	high i2motorMove@direction
 10967  002118  0100               	movlb	0	; () banked
 10968  00211A  0100               	movlb	0	; () banked
 10969  00211C  6F81               	movwf	(i2uart_trans@data+1)& (0+255),b
 10970  00211E  0100               	movlb	0	; () banked
 10971  002120  0E89               	movlw	low i2motorMove@direction
 10972  002122  0100               	movlb	0	; () banked
 10973  002124  0100               	movlb	0	; () banked
 10974  002126  6F80               	movwf	i2uart_trans@data& (0+255),b
 10975  002128  0E02               	movlw	2
 10976  00212A  ECBA  F00E         	call	i2_uart_trans
 10977  00212E  0012               	return	
 10978  002130                     __end_ofi2_motorMove:
 10979                           	opt stack 0
 10980                           pclatu	equ	0xFFB
 10981                           pclath	equ	0xFFA
 10982                           tblptru	equ	0xFF8
 10983                           tblptrh	equ	0xFF7
 10984                           tblptrl	equ	0xFF6
 10985                           tablat	equ	0xFF5
 10986                           prodh	equ	0xFF4
 10987                           prodl	equ	0xFF3
 10988                           intcon	equ	0xFF2
 10989                           intcon2	equ	0xFF1
 10990                           postinc0	equ	0xFEE
 10991                           fsr0h	equ	0xFEA
 10992                           fsr0l	equ	0xFE9
 10993                           wreg	equ	0xFE8
 10994                           indf1	equ	0xFE7
 10995                           postinc1	equ	0xFE6
 10996                           postdec1	equ	0xFE5
 10997                           fsr1h	equ	0xFE2
 10998                           fsr1l	equ	0xFE1
 10999                           bsr	equ	0xFE0
 11000                           indf2	equ	0xFDF
 11001                           postinc2	equ	0xFDE
 11002                           postdec2	equ	0xFDD
 11003                           fsr2h	equ	0xFDA
 11004                           fsr2l	equ	0xFD9
 11005                           status	equ	0xFD8
 11006                           
 11007 ;; *************** function i2_uart_trans *****************
 11008 ;; Defined at:
 11009 ;;		line 61 in file "../src/my_uart.c"
 11010 ;; Parameters:    Size  Location     Type
 11011 ;;  length          1    wreg     unsigned char 
 11012 ;;  data            2    0[BANK0 ] PTR unsigned char 
 11013 ;;		 -> motorMove@direction(2), main@msgbuffer(11), 
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;  length          1    4[BANK0 ] unsigned char 
 11016 ;; Return value:  Size  Location     Type
 11017 ;;		None               void
 11018 ;; Registers used:
 11019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11020 ;; Tracked objects:
 11021 ;;		On entry : 0/0
 11022 ;;		On exit  : 0/0
 11023 ;;		Unchanged: 0/0
 11024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11025 ;;      Params:         0       2       0       0       0
 11026 ;;      Locals:         0       1       0       0       0
 11027 ;;      Temps:          0       2       0       0       0
 11028 ;;      Totals:         0       5       0       0       0
 11029 ;;Total ram usage:        5 bytes
 11030 ;; Hardware stack levels used:    1
 11031 ;; This function calls:
 11032 ;;		Nothing
 11033 ;; This function is called by:
 11034 ;;		i2_motorMove
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text58
 11039  001D74                     __ptext58:
 11040                           	opt stack 0
 11041  001D74                     i2_uart_trans:
 11042                           	opt stack 18
 11043                           
 11044                           ;incstack = 0
 11045                           ;i2uart_trans@length stored from wreg
 11046  001D74  CFE8 F084          	movff	wreg,i2uart_trans@length
 11047                           
 11048                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
 11049  001D78  EE20 F00D          	lfsr	2,13
 11050  001D7C  5060               	movf	_uc_ptr,w,c
 11051  001D7E  26D9               	addwf	fsr2l,f,c
 11052  001D80  5061               	movf	_uc_ptr+1,w,c
 11053  001D82  22DA               	addwfc	fsr2h,f,c
 11054  001D84  0E00               	movlw	0
 11055  001D86  6EDF               	movwf	indf2,c
 11056  001D88  D035               	goto	i2l4288
 11057  001D8A                     i2l4284:
 11058                           
 11059                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
 11060  001D8A  EE20 F00D          	lfsr	2,13
 11061  001D8E  5060               	movf	_uc_ptr,w,c
 11062  001D90  26D9               	addwf	fsr2l,f,c
 11063  001D92  5061               	movf	_uc_ptr+1,w,c
 11064  001D94  22DA               	addwfc	fsr2h,f,c
 11065  001D96  50DF               	movf	indf2,w,c
 11066  001D98  0100               	movlb	0	; () banked
 11067  001D9A  6F82               	movwf	??i2_uart_trans& (0+255),b
 11068  001D9C  0100               	movlb	0	; () banked
 11069  001D9E  5182               	movf	??i2_uart_trans& (0+255),w,b
 11070  001DA0  0D01               	mullw	1
 11071  001DA2  50F3               	movf	prodl,w,c
 11072  001DA4  0100               	movlb	0	; () banked
 11073  001DA6  0100               	movlb	0	; () banked
 11074  001DA8  2580               	addwf	i2uart_trans@data& (0+255),w,b
 11075  001DAA  6ED9               	movwf	fsr2l,c
 11076  001DAC  50F4               	movf	prodh,w,c
 11077  001DAE  0100               	movlb	0	; () banked
 11078  001DB0  0100               	movlb	0	; () banked
 11079  001DB2  2181               	addwfc	(i2uart_trans@data+1)& (0+255),w,b
 11080  001DB4  6EDA               	movwf	fsr2h,c
 11081  001DB6  EE10 F00D          	lfsr	1,13
 11082  001DBA  5060               	movf	_uc_ptr,w,c
 11083  001DBC  26E1               	addwf	fsr1l,f,c
 11084  001DBE  5061               	movf	_uc_ptr+1,w,c
 11085  001DC0  22E2               	addwfc	fsr1h,f,c
 11086  001DC2  50E7               	movf	indf1,w,c
 11087  001DC4  0100               	movlb	0	; () banked
 11088  001DC6  6F83               	movwf	(??i2_uart_trans+1)& (0+255),b
 11089  001DC8  0100               	movlb	0	; () banked
 11090  001DCA  5183               	movf	(??i2_uart_trans+1)& (0+255),w,b
 11091  001DCC  0D01               	mullw	1
 11092  001DCE  0E07               	movlw	7
 11093  001DD0  26F3               	addwf	prodl,f,c
 11094  001DD2  0E00               	movlw	0
 11095  001DD4  22F4               	addwfc	prodh,f,c
 11096  001DD6  50F3               	movf	prodl,w,c
 11097  001DD8  2460               	addwf	_uc_ptr,w,c
 11098  001DDA  6EE1               	movwf	fsr1l,c
 11099  001DDC  50F4               	movf	prodh,w,c
 11100  001DDE  2061               	addwfc	_uc_ptr+1,w,c
 11101  001DE0  6EE2               	movwf	fsr1h,c
 11102  001DE2  CFDF FFE7          	movff	indf2,indf1
 11103                           
 11104                           ; BSR set to: 0
 11105  001DE6  EE20 F00D          	lfsr	2,13
 11106  001DEA  5060               	movf	_uc_ptr,w,c
 11107  001DEC  26D9               	addwf	fsr2l,f,c
 11108  001DEE  5061               	movf	_uc_ptr+1,w,c
 11109  001DF0  22DA               	addwfc	fsr2h,f,c
 11110  001DF2  2ADF               	incf	indf2,f,c
 11111  001DF4                     i2l4288:
 11112  001DF4  EE20 F00D          	lfsr	2,13
 11113  001DF8  5060               	movf	_uc_ptr,w,c
 11114  001DFA  26D9               	addwf	fsr2l,f,c
 11115  001DFC  5061               	movf	_uc_ptr+1,w,c
 11116  001DFE  22DA               	addwfc	fsr2h,f,c
 11117  001E00  50DF               	movf	indf2,w,c
 11118  001E02  0100               	movlb	0	; () banked
 11119  001E04  6F82               	movwf	??i2_uart_trans& (0+255),b
 11120  001E06  0100               	movlb	0	; () banked
 11121  001E08  0100               	movlb	0	; () banked
 11122  001E0A  5184               	movf	i2uart_trans@length& (0+255),w,b
 11123  001E0C  0100               	movlb	0	; () banked
 11124  001E0E  5D82               	subwf	??i2_uart_trans& (0+255),w,b
 11125  001E10  A0D8               	btfss	status,0,c
 11126  001E12  D7BB               	goto	i2l4284
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;my_uart.c: 67: }
 11130                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
 11131                           
 11132                           ; BSR set to: 0
 11133  001E14  EE20 F00E          	lfsr	2,14
 11134  001E18  5060               	movf	_uc_ptr,w,c
 11135  001E1A  26D9               	addwf	fsr2l,f,c
 11136  001E1C  5061               	movf	_uc_ptr+1,w,c
 11137  001E1E  22DA               	addwfc	fsr2h,f,c
 11138  001E20  0E00               	movlw	0
 11139  001E22  6EDF               	movwf	indf2,c
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
 11143  001E24  889D               	bsf	3997,4,c	;volatile
 11144                           
 11145                           ; BSR set to: 0
 11146  001E26  0012               	return	
 11147  001E28                     __end_ofi2_uart_trans:
 11148                           	opt stack 0
 11149                           pclatu	equ	0xFFB
 11150                           pclath	equ	0xFFA
 11151                           tblptru	equ	0xFF8
 11152                           tblptrh	equ	0xFF7
 11153                           tblptrl	equ	0xFF6
 11154                           tablat	equ	0xFF5
 11155                           prodh	equ	0xFF4
 11156                           prodl	equ	0xFF3
 11157                           intcon	equ	0xFF2
 11158                           intcon2	equ	0xFF1
 11159                           postinc0	equ	0xFEE
 11160                           fsr0h	equ	0xFEA
 11161                           fsr0l	equ	0xFE9
 11162                           wreg	equ	0xFE8
 11163                           indf1	equ	0xFE7
 11164                           postinc1	equ	0xFE6
 11165                           postdec1	equ	0xFE5
 11166                           fsr1h	equ	0xFE2
 11167                           fsr1l	equ	0xFE1
 11168                           bsr	equ	0xFE0
 11169                           indf2	equ	0xFDF
 11170                           postinc2	equ	0xFDE
 11171                           postdec2	equ	0xFDD
 11172                           fsr2h	equ	0xFDA
 11173                           fsr2l	equ	0xFD9
 11174                           status	equ	0xFD8
 11175                           
 11176 ;; *************** function i2_WriteTimer1 *****************
 11177 ;; Defined at:
 11178 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
 11179 ;; Parameters:    Size  Location     Type
 11180 ;;  timer1          2    0[BANK0 ] unsigned int 
 11181 ;; Auto vars:     Size  Location     Type
 11182 ;;  WriteTimer1     2    2[BANK0 ] struct Timers
 11183 ;; Return value:  Size  Location     Type
 11184 ;;		None               void
 11185 ;; Registers used:
 11186 ;;		None
 11187 ;; Tracked objects:
 11188 ;;		On entry : 0/0
 11189 ;;		On exit  : 0/0
 11190 ;;		Unchanged: 0/0
 11191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11192 ;;      Params:         0       2       0       0       0
 11193 ;;      Locals:         0       2       0       0       0
 11194 ;;      Temps:          0       0       0       0       0
 11195 ;;      Totals:         0       4       0       0       0
 11196 ;;Total ram usage:        4 bytes
 11197 ;; Hardware stack levels used:    1
 11198 ;; This function calls:
 11199 ;;		Nothing
 11200 ;; This function is called by:
 11201 ;;		i2_motorMove
 11202 ;; This function uses a non-reentrant model
 11203 ;;
 11204                           
 11205                           	psect	text59
 11206  002DA4                     __ptext59:
 11207                           	opt stack 0
 11208  002DA4                     i2_WriteTimer1:
 11209                           	opt stack 18
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;incstack = 0
 11213  002DA4  C080  F082         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
 11214  002DA8  C081  F083         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
 11215  002DAC  C083  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
 11216  002DB0  C082  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
 11217  002DB4  0012               	return	
 11218  002DB6                     __end_ofi2_WriteTimer1:
 11219                           	opt stack 0
 11220                           pclatu	equ	0xFFB
 11221                           pclath	equ	0xFFA
 11222                           tblptru	equ	0xFF8
 11223                           tblptrh	equ	0xFF7
 11224                           tblptrl	equ	0xFF6
 11225                           tablat	equ	0xFF5
 11226                           prodh	equ	0xFF4
 11227                           prodl	equ	0xFF3
 11228                           intcon	equ	0xFF2
 11229                           intcon2	equ	0xFF1
 11230                           postinc0	equ	0xFEE
 11231                           fsr0h	equ	0xFEA
 11232                           fsr0l	equ	0xFE9
 11233                           wreg	equ	0xFE8
 11234                           indf1	equ	0xFE7
 11235                           postinc1	equ	0xFE6
 11236                           postdec1	equ	0xFE5
 11237                           fsr1h	equ	0xFE2
 11238                           fsr1l	equ	0xFE1
 11239                           bsr	equ	0xFE0
 11240                           indf2	equ	0xFDF
 11241                           postinc2	equ	0xFDE
 11242                           postdec2	equ	0xFDD
 11243                           fsr2h	equ	0xFDA
 11244                           fsr2l	equ	0xFD9
 11245                           status	equ	0xFD8
 11246                           
 11247 ;; *************** function i2_WriteTimer0 *****************
 11248 ;; Defined at:
 11249 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
 11250 ;; Parameters:    Size  Location     Type
 11251 ;;  timer0          2    0[BANK0 ] unsigned int 
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;  WriteTimer0     2    2[BANK0 ] struct Timers
 11254 ;; Return value:  Size  Location     Type
 11255 ;;		None               void
 11256 ;; Registers used:
 11257 ;;		None
 11258 ;; Tracked objects:
 11259 ;;		On entry : 0/0
 11260 ;;		On exit  : 0/0
 11261 ;;		Unchanged: 0/0
 11262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11263 ;;      Params:         0       2       0       0       0
 11264 ;;      Locals:         0       2       0       0       0
 11265 ;;      Temps:          0       0       0       0       0
 11266 ;;      Totals:         0       4       0       0       0
 11267 ;;Total ram usage:        4 bytes
 11268 ;; Hardware stack levels used:    1
 11269 ;; This function calls:
 11270 ;;		Nothing
 11271 ;; This function is called by:
 11272 ;;		_timer0_int_handler
 11273 ;;		i2_motorMove
 11274 ;; This function uses a non-reentrant model
 11275 ;;
 11276                           
 11277                           	psect	text60
 11278  002DB6                     __ptext60:
 11279                           	opt stack 0
 11280  002DB6                     i2_WriteTimer0:
 11281                           	opt stack 18
 11282                           
 11283                           ;incstack = 0
 11284  002DB6  C080  F082         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 11285  002DBA  C081  F083         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 11286  002DBE  C083  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 11287  002DC2  C082  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 11288  002DC6  0012               	return	
 11289  002DC8                     __end_ofi2_WriteTimer0:
 11290                           	opt stack 0
 11291                           pclatu	equ	0xFFB
 11292                           pclath	equ	0xFFA
 11293                           tblptru	equ	0xFF8
 11294                           tblptrh	equ	0xFF7
 11295                           tblptrl	equ	0xFF6
 11296                           tablat	equ	0xFF5
 11297                           prodh	equ	0xFF4
 11298                           prodl	equ	0xFF3
 11299                           intcon	equ	0xFF2
 11300                           intcon2	equ	0xFF1
 11301                           postinc0	equ	0xFEE
 11302                           fsr0h	equ	0xFEA
 11303                           fsr0l	equ	0xFE9
 11304                           wreg	equ	0xFE8
 11305                           indf1	equ	0xFE7
 11306                           postinc1	equ	0xFE6
 11307                           postdec1	equ	0xFE5
 11308                           fsr1h	equ	0xFE2
 11309                           fsr1l	equ	0xFE1
 11310                           bsr	equ	0xFE0
 11311                           indf2	equ	0xFDF
 11312                           postinc2	equ	0xFDE
 11313                           postdec2	equ	0xFDD
 11314                           fsr2h	equ	0xFDA
 11315                           fsr2l	equ	0xFD9
 11316                           status	equ	0xFD8
 11317                           
 11318 ;; *************** function _start_i2c_slave_reply *****************
 11319 ;; Defined at:
 11320 ;;		line 92 in file "../src/my_i2c.c"
 11321 ;; Parameters:    Size  Location     Type
 11322 ;;  length          1    wreg     unsigned char 
 11323 ;;  msg             2    0[BANK0 ] PTR unsigned char 
 11324 ;;		 -> i2c_slave_int_handler@ack_1696(6), i2c_slave_int_handler@dist(6), i2c_slave_int_handler@ack(6), i2c_slave_int_ha
      +ndler@message(6), 
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;  length          1    4[BANK0 ] unsigned char 
 11327 ;; Return value:  Size  Location     Type
 11328 ;;		None               void
 11329 ;; Registers used:
 11330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11336 ;;      Params:         0       2       0       0       0
 11337 ;;      Locals:         0       1       0       0       0
 11338 ;;      Temps:          0       2       0       0       0
 11339 ;;      Totals:         0       5       0       0       0
 11340 ;;Total ram usage:        5 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; This function calls:
 11343 ;;		Nothing
 11344 ;; This function is called by:
 11345 ;;		_i2c_slave_int_handler
 11346 ;; This function uses a non-reentrant model
 11347 ;;
 11348                           
 11349                           	psect	text61
 11350  001584                     __ptext61:
 11351                           	opt stack 0
 11352  001584                     _start_i2c_slave_reply:
 11353                           	opt stack 18
 11354                           
 11355                           ;incstack = 0
 11356                           ;start_i2c_slave_reply@length stored from wreg
 11357  001584  CFE8 F084          	movff	wreg,start_i2c_slave_reply@length
 11358                           
 11359                           ;my_i2c.c: 94: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
 11360  001588  0101               	movlb	1	; () banked
 11361  00158A  EE20 F01A          	lfsr	2,26
 11362  00158E  0101               	movlb	1	; () banked
 11363  001590  51C5               	movf	_ic_ptr& (0+255),w,b
 11364  001592  26D9               	addwf	fsr2l,f,c
 11365  001594  0101               	movlb	1	; () banked
 11366  001596  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11367  001598  22DA               	addwfc	fsr2h,f,c
 11368  00159A  0E00               	movlw	0
 11369  00159C  6EDF               	movwf	indf2,c
 11370  00159E  D042               	goto	i2l3818
 11371  0015A0                     i2l3814:
 11372                           
 11373                           ;my_i2c.c: 95: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
 11374  0015A0  0101               	movlb	1	; () banked
 11375  0015A2  EE20 F01A          	lfsr	2,26
 11376  0015A6  0101               	movlb	1	; () banked
 11377  0015A8  51C5               	movf	_ic_ptr& (0+255),w,b
 11378  0015AA  26D9               	addwf	fsr2l,f,c
 11379  0015AC  0101               	movlb	1	; () banked
 11380  0015AE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11381  0015B0  22DA               	addwfc	fsr2h,f,c
 11382  0015B2  50DF               	movf	indf2,w,c
 11383  0015B4  0100               	movlb	0	; () banked
 11384  0015B6  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
 11385  0015B8  0100               	movlb	0	; () banked
 11386  0015BA  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
 11387  0015BC  0D01               	mullw	1
 11388  0015BE  50F3               	movf	prodl,w,c
 11389  0015C0  0100               	movlb	0	; () banked
 11390  0015C2  0100               	movlb	0	; () banked
 11391  0015C4  2580               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
 11392  0015C6  6ED9               	movwf	fsr2l,c
 11393  0015C8  50F4               	movf	prodh,w,c
 11394  0015CA  0100               	movlb	0	; () banked
 11395  0015CC  0100               	movlb	0	; () banked
 11396  0015CE  2181               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
 11397  0015D0  6EDA               	movwf	fsr2h,c
 11398  0015D2  0101               	movlb	1	; () banked
 11399  0015D4  EE10 F01A          	lfsr	1,26
 11400  0015D8  0101               	movlb	1	; () banked
 11401  0015DA  51C5               	movf	_ic_ptr& (0+255),w,b
 11402  0015DC  26E1               	addwf	fsr1l,f,c
 11403  0015DE  0101               	movlb	1	; () banked
 11404  0015E0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11405  0015E2  22E2               	addwfc	fsr1h,f,c
 11406  0015E4  50E7               	movf	indf1,w,c
 11407  0015E6  0100               	movlb	0	; () banked
 11408  0015E8  6F83               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
 11409  0015EA  0100               	movlb	0	; () banked
 11410  0015EC  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
 11411  0015EE  0D01               	mullw	1
 11412  0015F0  0E10               	movlw	16
 11413  0015F2  26F3               	addwf	prodl,f,c
 11414  0015F4  0E00               	movlw	0
 11415  0015F6  22F4               	addwfc	prodh,f,c
 11416  0015F8  50F3               	movf	prodl,w,c
 11417  0015FA  0101               	movlb	1	; () banked
 11418  0015FC  0101               	movlb	1	; () banked
 11419  0015FE  25C5               	addwf	_ic_ptr& (0+255),w,b
 11420  001600  6EE1               	movwf	fsr1l,c
 11421  001602  50F4               	movf	prodh,w,c
 11422  001604  0101               	movlb	1	; () banked
 11423  001606  0101               	movlb	1	; () banked
 11424  001608  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
 11425  00160A  6EE2               	movwf	fsr1h,c
 11426  00160C  CFDF FFE7          	movff	indf2,indf1
 11427                           
 11428                           ; BSR set to: 1
 11429  001610  0101               	movlb	1	; () banked
 11430  001612  EE20 F01A          	lfsr	2,26
 11431  001616  0101               	movlb	1	; () banked
 11432  001618  51C5               	movf	_ic_ptr& (0+255),w,b
 11433  00161A  26D9               	addwf	fsr2l,f,c
 11434  00161C  0101               	movlb	1	; () banked
 11435  00161E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11436  001620  22DA               	addwfc	fsr2h,f,c
 11437  001622  2ADF               	incf	indf2,f,c
 11438  001624                     i2l3818:
 11439                           
 11440                           ; BSR set to: 1
 11441  001624  0101               	movlb	1	; () banked
 11442  001626  EE20 F01A          	lfsr	2,26
 11443  00162A  0101               	movlb	1	; () banked
 11444  00162C  51C5               	movf	_ic_ptr& (0+255),w,b
 11445  00162E  26D9               	addwf	fsr2l,f,c
 11446  001630  0101               	movlb	1	; () banked
 11447  001632  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11448  001634  22DA               	addwfc	fsr2h,f,c
 11449  001636  50DF               	movf	indf2,w,c
 11450  001638  0100               	movlb	0	; () banked
 11451  00163A  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
 11452  00163C  0100               	movlb	0	; () banked
 11453  00163E  0100               	movlb	0	; () banked
 11454  001640  5184               	movf	start_i2c_slave_reply@length& (0+255),w,b
 11455  001642  0100               	movlb	0	; () banked
 11456  001644  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
 11457  001646  A0D8               	btfss	status,0,c
 11458  001648  D7AB               	goto	i2l3814
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;my_i2c.c: 96: }
 11462                           ;my_i2c.c: 97: ic_ptr->outbuflen = length;
 11463                           
 11464                           ; BSR set to: 0
 11465  00164A  0101               	movlb	1	; () banked
 11466  00164C  EE20 F01A          	lfsr	2,26
 11467  001650  0101               	movlb	1	; () banked
 11468  001652  51C5               	movf	_ic_ptr& (0+255),w,b
 11469  001654  26D9               	addwf	fsr2l,f,c
 11470  001656  0101               	movlb	1	; () banked
 11471  001658  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11472  00165A  22DA               	addwfc	fsr2h,f,c
 11473  00165C  0100               	movlb	0	; () banked
 11474  00165E  C084  FFDF         	movff	start_i2c_slave_reply@length,indf2
 11475                           
 11476                           ;my_i2c.c: 98: ic_ptr->outbufind = 1;
 11477  001662  0101               	movlb	1	; () banked
 11478  001664  EE20 F01B          	lfsr	2,27
 11479  001668  0101               	movlb	1	; () banked
 11480  00166A  51C5               	movf	_ic_ptr& (0+255),w,b
 11481  00166C  26D9               	addwf	fsr2l,f,c
 11482  00166E  0101               	movlb	1	; () banked
 11483  001670  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11484  001672  22DA               	addwfc	fsr2h,f,c
 11485  001674  0E01               	movlw	1
 11486  001676  6EDF               	movwf	indf2,c
 11487                           
 11488                           ;my_i2c.c: 101: SSPBUF = ic_ptr->outbuffer[0];
 11489  001678  0101               	movlb	1	; () banked
 11490  00167A  EE20 F010          	lfsr	2,16
 11491  00167E  0101               	movlb	1	; () banked
 11492  001680  51C5               	movf	_ic_ptr& (0+255),w,b
 11493  001682  26D9               	addwf	fsr2l,f,c
 11494  001684  0101               	movlb	1	; () banked
 11495  001686  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11496  001688  22DA               	addwfc	fsr2h,f,c
 11497  00168A  50DF               	movf	indf2,w,c
 11498  00168C  6EC9               	movwf	4041,c	;volatile
 11499                           
 11500                           ; BSR set to: 1
 11501                           ;my_i2c.c: 104: SSPCON1bits.CKP = 1;
 11502  00168E  88C6               	bsf	4038,4,c	;volatile
 11503                           
 11504                           ; BSR set to: 1
 11505  001690  0012               	return	
 11506  001692                     __end_of_start_i2c_slave_reply:
 11507                           	opt stack 0
 11508                           pclatu	equ	0xFFB
 11509                           pclath	equ	0xFFA
 11510                           tblptru	equ	0xFF8
 11511                           tblptrh	equ	0xFF7
 11512                           tblptrl	equ	0xFF6
 11513                           tablat	equ	0xFF5
 11514                           prodh	equ	0xFF4
 11515                           prodl	equ	0xFF3
 11516                           intcon	equ	0xFF2
 11517                           intcon2	equ	0xFF1
 11518                           postinc0	equ	0xFEE
 11519                           fsr0h	equ	0xFEA
 11520                           fsr0l	equ	0xFE9
 11521                           wreg	equ	0xFE8
 11522                           indf1	equ	0xFE7
 11523                           postinc1	equ	0xFE6
 11524                           postdec1	equ	0xFE5
 11525                           fsr1h	equ	0xFE2
 11526                           fsr1l	equ	0xFE1
 11527                           bsr	equ	0xFE0
 11528                           indf2	equ	0xFDF
 11529                           postinc2	equ	0xFDE
 11530                           postdec2	equ	0xFDD
 11531                           fsr2h	equ	0xFDA
 11532                           fsr2l	equ	0xFD9
 11533                           status	equ	0xFD8
 11534                           
 11535 ;; *************** function _handle_start *****************
 11536 ;; Defined at:
 11537 ;;		line 110 in file "../src/my_i2c.c"
 11538 ;; Parameters:    Size  Location     Type
 11539 ;;  data_read       1    wreg     unsigned char 
 11540 ;; Auto vars:     Size  Location     Type
 11541 ;;  data_read       1    0[BANK0 ] unsigned char 
 11542 ;; Return value:  Size  Location     Type
 11543 ;;		None               void
 11544 ;; Registers used:
 11545 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11546 ;; Tracked objects:
 11547 ;;		On entry : 0/0
 11548 ;;		On exit  : 0/0
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11551 ;;      Params:         0       0       0       0       0
 11552 ;;      Locals:         0       1       0       0       0
 11553 ;;      Temps:          0       0       0       0       0
 11554 ;;      Totals:         0       1       0       0       0
 11555 ;;Total ram usage:        1 bytes
 11556 ;; Hardware stack levels used:    1
 11557 ;; This function calls:
 11558 ;;		Nothing
 11559 ;; This function is called by:
 11560 ;;		_i2c_slave_int_handler
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564                           	psect	text62
 11565  001A74                     __ptext62:
 11566                           	opt stack 0
 11567  001A74                     _handle_start:
 11568                           	opt stack 18
 11569                           
 11570                           ; BSR set to: 1
 11571                           ;incstack = 0
 11572                           ;handle_start@data_read stored from wreg
 11573  001A74  CFE8 F080          	movff	wreg,handle_start@data_read
 11574                           
 11575                           ;my_i2c.c: 111: ic_ptr->event_count = 1;
 11576  001A78  0101               	movlb	1	; () banked
 11577  001A7A  EE20 F00C          	lfsr	2,12
 11578  001A7E  0101               	movlb	1	; () banked
 11579  001A80  51C5               	movf	_ic_ptr& (0+255),w,b
 11580  001A82  26D9               	addwf	fsr2l,f,c
 11581  001A84  0101               	movlb	1	; () banked
 11582  001A86  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11583  001A88  22DA               	addwfc	fsr2h,f,c
 11584  001A8A  0E01               	movlw	1
 11585  001A8C  6EDF               	movwf	indf2,c
 11586                           
 11587                           ;my_i2c.c: 112: ic_ptr->buflen = 0;
 11588  001A8E  0101               	movlb	1	; () banked
 11589  001A90  EE20 F00A          	lfsr	2,10
 11590  001A94  0101               	movlb	1	; () banked
 11591  001A96  51C5               	movf	_ic_ptr& (0+255),w,b
 11592  001A98  26D9               	addwf	fsr2l,f,c
 11593  001A9A  0101               	movlb	1	; () banked
 11594  001A9C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11595  001A9E  22DA               	addwfc	fsr2h,f,c
 11596  001AA0  0E00               	movlw	0
 11597  001AA2  6EDF               	movwf	indf2,c
 11598                           
 11599                           ; BSR set to: 1
 11600                           ;my_i2c.c: 114: if (data_read) {
 11601  001AA4  0100               	movlb	0	; () banked
 11602  001AA6  0100               	movlb	0	; () banked
 11603  001AA8  5180               	movf	handle_start@data_read& (0+255),w,b
 11604  001AAA  B4D8               	btfsc	status,2,c
 11605  001AAC  D03D               	goto	i2l3836
 11606                           
 11607                           ; BSR set to: 0
 11608                           ;my_i2c.c: 115: if (SSPSTATbits.D_A == 1) {
 11609  001AAE  AAC7               	btfss	4039,5,c	;volatile
 11610  001AB0  D021               	goto	i2l335
 11611                           
 11612                           ; BSR set to: 0
 11613                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
 11614  001AB2  0101               	movlb	1	; () banked
 11615  001AB4  EE20 F00D          	lfsr	2,13
 11616  001AB8  0101               	movlb	1	; () banked
 11617  001ABA  51C5               	movf	_ic_ptr& (0+255),w,b
 11618  001ABC  26D9               	addwf	fsr2l,f,c
 11619  001ABE  0101               	movlb	1	; () banked
 11620  001AC0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11621  001AC2  22DA               	addwfc	fsr2h,f,c
 11622  001AC4  0E05               	movlw	5
 11623  001AC6  6EDF               	movwf	indf2,c
 11624                           
 11625                           ;my_i2c.c: 119: ic_ptr->error_count++;
 11626  001AC8  0101               	movlb	1	; () banked
 11627  001ACA  EE20 F00F          	lfsr	2,15
 11628  001ACE  0101               	movlb	1	; () banked
 11629  001AD0  51C5               	movf	_ic_ptr& (0+255),w,b
 11630  001AD2  26D9               	addwf	fsr2l,f,c
 11631  001AD4  0101               	movlb	1	; () banked
 11632  001AD6  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11633  001AD8  22DA               	addwfc	fsr2h,f,c
 11634  001ADA  2ADF               	incf	indf2,f,c
 11635                           
 11636                           ;my_i2c.c: 120: ic_ptr->error_code = 0x5;
 11637  001ADC  0101               	movlb	1	; () banked
 11638  001ADE  EE20 F00E          	lfsr	2,14
 11639  001AE2  0101               	movlb	1	; () banked
 11640  001AE4  51C5               	movf	_ic_ptr& (0+255),w,b
 11641  001AE6  26D9               	addwf	fsr2l,f,c
 11642  001AE8  0101               	movlb	1	; () banked
 11643  001AEA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11644  001AEC  22DA               	addwfc	fsr2h,f,c
 11645  001AEE  0E05               	movlw	5
 11646  001AF0  6EDF               	movwf	indf2,c
 11647                           
 11648                           ;my_i2c.c: 121: } else {
 11649  001AF2  0012               	return	
 11650  001AF4                     i2l335:
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;my_i2c.c: 122: if (SSPSTATbits.R_W == 1) {
 11654  001AF4  A4C7               	btfss	4039,2,c	;volatile
 11655  001AF6  D00C               	goto	i2l3834
 11656                           
 11657                           ; BSR set to: 0
 11658                           ;my_i2c.c: 123: ic_ptr->status = 0x8;
 11659  001AF8  0101               	movlb	1	; () banked
 11660  001AFA  EE20 F00D          	lfsr	2,13
 11661  001AFE  0101               	movlb	1	; () banked
 11662  001B00  51C5               	movf	_ic_ptr& (0+255),w,b
 11663  001B02  26D9               	addwf	fsr2l,f,c
 11664  001B04  0101               	movlb	1	; () banked
 11665  001B06  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11666  001B08  22DA               	addwfc	fsr2h,f,c
 11667  001B0A  0E08               	movlw	8
 11668  001B0C  6EDF               	movwf	indf2,c
 11669                           
 11670                           ;my_i2c.c: 124: } else {
 11671  001B0E  0012               	return	
 11672  001B10                     i2l3834:
 11673                           
 11674                           ;my_i2c.c: 125: ic_ptr->status = 0x7;
 11675  001B10  0101               	movlb	1	; () banked
 11676  001B12  EE20 F00D          	lfsr	2,13
 11677  001B16  0101               	movlb	1	; () banked
 11678  001B18  51C5               	movf	_ic_ptr& (0+255),w,b
 11679  001B1A  26D9               	addwf	fsr2l,f,c
 11680  001B1C  0101               	movlb	1	; () banked
 11681  001B1E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11682  001B20  22DA               	addwfc	fsr2h,f,c
 11683  001B22  0E07               	movlw	7
 11684  001B24  6EDF               	movwf	indf2,c
 11685  001B26  0012               	return	
 11686  001B28                     i2l3836:
 11687                           
 11688                           ;my_i2c.c: 129: ic_ptr->status = 0x6;
 11689  001B28  0101               	movlb	1	; () banked
 11690  001B2A  EE20 F00D          	lfsr	2,13
 11691  001B2E  0101               	movlb	1	; () banked
 11692  001B30  51C5               	movf	_ic_ptr& (0+255),w,b
 11693  001B32  26D9               	addwf	fsr2l,f,c
 11694  001B34  0101               	movlb	1	; () banked
 11695  001B36  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11696  001B38  22DA               	addwfc	fsr2h,f,c
 11697  001B3A  0E06               	movlw	6
 11698  001B3C  6EDF               	movwf	indf2,c
 11699  001B3E  0012               	return	
 11700  001B40                     __end_of_handle_start:
 11701                           	opt stack 0
 11702                           pclatu	equ	0xFFB
 11703                           pclath	equ	0xFFA
 11704                           tblptru	equ	0xFF8
 11705                           tblptrh	equ	0xFF7
 11706                           tblptrl	equ	0xFF6
 11707                           tablat	equ	0xFF5
 11708                           prodh	equ	0xFF4
 11709                           prodl	equ	0xFF3
 11710                           intcon	equ	0xFF2
 11711                           intcon2	equ	0xFF1
 11712                           postinc0	equ	0xFEE
 11713                           fsr0h	equ	0xFEA
 11714                           fsr0l	equ	0xFE9
 11715                           wreg	equ	0xFE8
 11716                           indf1	equ	0xFE7
 11717                           postinc1	equ	0xFE6
 11718                           postdec1	equ	0xFE5
 11719                           fsr1h	equ	0xFE2
 11720                           fsr1l	equ	0xFE1
 11721                           bsr	equ	0xFE0
 11722                           indf2	equ	0xFDF
 11723                           postinc2	equ	0xFDE
 11724                           postdec2	equ	0xFDD
 11725                           fsr2h	equ	0xFDA
 11726                           fsr2l	equ	0xFD9
 11727                           status	equ	0xFD8
 11728                           
 11729 ;; *************** function _ToMainHigh_sendmsg *****************
 11730 ;; Defined at:
 11731 ;;		line 126 in file "../src/messages.c"
 11732 ;; Parameters:    Size  Location     Type
 11733 ;;  length          1    wreg     unsigned char 
 11734 ;;  msgtype         1   22[BANK0 ] unsigned char 
 11735 ;;  data            2   23[BANK0 ] PTR void 
 11736 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), 
 11737 ;; Auto vars:     Size  Location     Type
 11738 ;;  length          1   25[BANK0 ] unsigned char 
 11739 ;; Return value:  Size  Location     Type
 11740 ;;                  1    wreg      char 
 11741 ;; Registers used:
 11742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11743 ;; Tracked objects:
 11744 ;;		On entry : 0/0
 11745 ;;		On exit  : 0/0
 11746 ;;		Unchanged: 0/0
 11747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11748 ;;      Params:         0       3       0       0       0
 11749 ;;      Locals:         0       1       0       0       0
 11750 ;;      Temps:          0       0       0       0       0
 11751 ;;      Totals:         0       4       0       0       0
 11752 ;;Total ram usage:        4 bytes
 11753 ;; Hardware stack levels used:    1
 11754 ;; Hardware stack levels required when called:    2
 11755 ;; This function calls:
 11756 ;;		i2_send_msg
 11757 ;; This function is called by:
 11758 ;;		_i2c_slave_int_handler
 11759 ;;		_i2c_master_int_handler
 11760 ;; This function uses a non-reentrant model
 11761 ;;
 11762                           
 11763                           	psect	text63
 11764  002BC8                     __ptext63:
 11765                           	opt stack 0
 11766  002BC8                     _ToMainHigh_sendmsg:
 11767                           	opt stack 16
 11768                           
 11769                           ; BSR set to: 1
 11770                           ;incstack = 0
 11771                           ;ToMainHigh_sendmsg@length stored from wreg
 11772  002BC8  CFE8 F099          	movff	wreg,ToMainHigh_sendmsg@length
 11773                           
 11774                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
 11775                           ;	Return value of _ToMainHigh_sendmsg is never used
 11776  002BCC  0102               	movlb	2	; () banked
 11777  002BCE  0E02               	movlw	high _ToMainHigh_MQ
 11778  002BD0  0100               	movlb	0	; () banked
 11779  002BD2  0100               	movlb	0	; () banked
 11780  002BD4  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
 11781  002BD6  0102               	movlb	2	; () banked
 11782  002BD8  0E86               	movlw	low _ToMainHigh_MQ
 11783  002BDA  0100               	movlb	0	; () banked
 11784  002BDC  0100               	movlb	0	; () banked
 11785  002BDE  6F8A               	movwf	i2send_msg@qptr& (0+255),b
 11786  002BE0  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
 11787  002BE4  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
 11788  002BE8  0100               	movlb	0	; () banked
 11789  002BEA  0100               	movlb	0	; () banked
 11790  002BEC  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
 11791  002BF0  0100               	movlb	0	; () banked
 11792  002BF2  0100               	movlb	0	; () banked
 11793  002BF4  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
 11794  002BF8  ECA5  F009         	call	i2_send_msg	;wreg free
 11795  002BFC  0012               	return	
 11796  002BFE                     __end_of_ToMainHigh_sendmsg:
 11797                           	opt stack 0
 11798                           pclatu	equ	0xFFB
 11799                           pclath	equ	0xFFA
 11800                           tblptru	equ	0xFF8
 11801                           tblptrh	equ	0xFF7
 11802                           tblptrl	equ	0xFF6
 11803                           tablat	equ	0xFF5
 11804                           prodh	equ	0xFF4
 11805                           prodl	equ	0xFF3
 11806                           intcon	equ	0xFF2
 11807                           intcon2	equ	0xFF1
 11808                           postinc0	equ	0xFEE
 11809                           fsr0h	equ	0xFEA
 11810                           fsr0l	equ	0xFE9
 11811                           wreg	equ	0xFE8
 11812                           indf1	equ	0xFE7
 11813                           postinc1	equ	0xFE6
 11814                           postdec1	equ	0xFE5
 11815                           fsr1h	equ	0xFE2
 11816                           fsr1l	equ	0xFE1
 11817                           bsr	equ	0xFE0
 11818                           indf2	equ	0xFDF
 11819                           postinc2	equ	0xFDE
 11820                           postdec2	equ	0xFDD
 11821                           fsr2h	equ	0xFDA
 11822                           fsr2l	equ	0xFD9
 11823                           status	equ	0xFD8
 11824                           
 11825 ;; *************** function i2_send_msg *****************
 11826 ;; Defined at:
 11827 ;;		line 24 in file "../src/messages.c"
 11828 ;; Parameters:    Size  Location     Type
 11829 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
 11830 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 11831 ;;  length          1   12[BANK0 ] unsigned char 
 11832 ;;  msgtype         1   13[BANK0 ] unsigned char 
 11833 ;;  data            2   14[BANK0 ] PTR void 
 11834 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
 11835 ;;		 -> main@uc(15), 
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
 11838 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
 11839 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 11840 ;;  send_msg        2   17[BANK0 ] unsigned int 
 11841 ;;  send_msg        1   19[BANK0 ] unsigned char 
 11842 ;; Return value:  Size  Location     Type
 11843 ;;                  1    wreg      char 
 11844 ;; Registers used:
 11845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11846 ;; Tracked objects:
 11847 ;;		On entry : 0/0
 11848 ;;		On exit  : 0/0
 11849 ;;		Unchanged: 0/0
 11850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11851 ;;      Params:         0       6       0       0       0
 11852 ;;      Locals:         0       5       0       0       0
 11853 ;;      Temps:          0       1       0       0       0
 11854 ;;      Totals:         0      12       0       0       0
 11855 ;;Total ram usage:       12 bytes
 11856 ;; Hardware stack levels used:    1
 11857 ;; Hardware stack levels required when called:    1
 11858 ;; This function calls:
 11859 ;;		i2___awmod
 11860 ;;		i2_memcpy
 11861 ;; This function is called by:
 11862 ;;		_ToMainHigh_sendmsg
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           	psect	text64
 11867  00134A                     __ptext64:
 11868                           	opt stack 0
 11869  00134A                     i2_send_msg:
 11870                           	opt stack 16
 11871                           
 11872                           ;messages.c: 25: unsigned char slot;
 11873                           ;messages.c: 27: msg *qmsg;
 11874                           ;messages.c: 28: size_t tlength = length;
 11875                           
 11876                           ;incstack = 0
 11877  00134A  0100               	movlb	0	; () banked
 11878  00134C  0100               	movlb	0	; () banked
 11879  00134E  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
 11880  001352  0100               	movlb	0	; () banked
 11881  001354  0100               	movlb	0	; () banked
 11882  001356  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
 11883                           
 11884                           ; BSR set to: 0
 11885                           ;messages.c: 38: slot = qptr->cur_write_ind;
 11886  001358  0100               	movlb	0	; () banked
 11887  00135A  EE20 F041          	lfsr	2,65
 11888  00135E  0100               	movlb	0	; () banked
 11889  001360  518A               	movf	i2send_msg@qptr& (0+255),w,b
 11890  001362  26D9               	addwf	fsr2l,f,c
 11891  001364  0100               	movlb	0	; () banked
 11892  001366  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 11893  001368  22DA               	addwfc	fsr2h,f,c
 11894  00136A  50DF               	movf	indf2,w,c
 11895  00136C  0100               	movlb	0	; () banked
 11896  00136E  0100               	movlb	0	; () banked
 11897  001370  6F93               	movwf	i2send_msg@slot& (0+255),b
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 11901  001372  0100               	movlb	0	; () banked
 11902  001374  0100               	movlb	0	; () banked
 11903  001376  5193               	movf	i2send_msg@slot& (0+255),w,b
 11904  001378  0D0D               	mullw	13
 11905  00137A  50F3               	movf	prodl,w,c
 11906  00137C  0100               	movlb	0	; () banked
 11907  00137E  0100               	movlb	0	; () banked
 11908  001380  258A               	addwf	i2send_msg@qptr& (0+255),w,b
 11909  001382  0100               	movlb	0	; () banked
 11910  001384  0100               	movlb	0	; () banked
 11911  001386  6F94               	movwf	i2send_msg@qmsg& (0+255),b
 11912  001388  50F4               	movf	prodh,w,c
 11913  00138A  0100               	movlb	0	; () banked
 11914  00138C  0100               	movlb	0	; () banked
 11915  00138E  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
 11916  001390  0100               	movlb	0	; () banked
 11917  001392  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
 11918                           
 11919                           ; BSR set to: 0
 11920                           ;messages.c: 41: if (qmsg->full != 0) {
 11921  001394  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
 11922  001398  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
 11923  00139C  50DF               	movf	indf2,w,c
 11924  00139E  B4D8               	btfsc	status,2,c
 11925  0013A0  D002               	goto	i2l4254
 11926                           
 11927                           ; BSR set to: 0
 11928                           ;messages.c: 42: return (-1);
 11929  0013A2  0EFF               	movlw	255
 11930  0013A4  0012               	return	
 11931  0013A6                     i2l4254:
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;messages.c: 43: }
 11935                           ;messages.c: 46: qmsg->length = length;
 11936  0013A6  0100               	movlb	0	; () banked
 11937  0013A8  EE20 F001          	lfsr	2,1
 11938  0013AC  0100               	movlb	0	; () banked
 11939  0013AE  5194               	movf	i2send_msg@qmsg& (0+255),w,b
 11940  0013B0  26D9               	addwf	fsr2l,f,c
 11941  0013B2  0100               	movlb	0	; () banked
 11942  0013B4  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
 11943  0013B6  22DA               	addwfc	fsr2h,f,c
 11944  0013B8  0100               	movlb	0	; () banked
 11945  0013BA  C08C  FFDF         	movff	i2send_msg@length,indf2
 11946                           
 11947                           ;messages.c: 47: qmsg->msgtype = msgtype;
 11948  0013BE  0100               	movlb	0	; () banked
 11949  0013C0  EE20 F002          	lfsr	2,2
 11950  0013C4  0100               	movlb	0	; () banked
 11951  0013C6  5194               	movf	i2send_msg@qmsg& (0+255),w,b
 11952  0013C8  26D9               	addwf	fsr2l,f,c
 11953  0013CA  0100               	movlb	0	; () banked
 11954  0013CC  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
 11955  0013CE  22DA               	addwfc	fsr2h,f,c
 11956  0013D0  0100               	movlb	0	; () banked
 11957  0013D2  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
 11958                           
 11959                           ; BSR set to: 0
 11960                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 11961  0013D6  0E03               	movlw	3
 11962  0013D8  0100               	movlb	0	; () banked
 11963  0013DA  0100               	movlb	0	; () banked
 11964  0013DC  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
 11965  0013DE  0100               	movlb	0	; () banked
 11966  0013E0  0100               	movlb	0	; () banked
 11967  0013E2  6F80               	movwf	i2memcpy@d1& (0+255),b
 11968  0013E4  0E00               	movlw	0
 11969  0013E6  0100               	movlb	0	; () banked
 11970  0013E8  0100               	movlb	0	; () banked
 11971  0013EA  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
 11972  0013EC  0100               	movlb	0	; () banked
 11973  0013EE  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
 11974  0013F0  0100               	movlb	0	; () banked
 11975  0013F2  0100               	movlb	0	; () banked
 11976  0013F4  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
 11977  0013F8  0100               	movlb	0	; () banked
 11978  0013FA  0100               	movlb	0	; () banked
 11979  0013FC  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
 11980  001400  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
 11981  001404  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
 11982  001408  EC6F  F014         	call	i2_memcpy	;wreg free
 11983                           
 11984                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
 11985  00140C  0100               	movlb	0	; () banked
 11986  00140E  EE20 F041          	lfsr	2,65
 11987  001412  0100               	movlb	0	; () banked
 11988  001414  518A               	movf	i2send_msg@qptr& (0+255),w,b
 11989  001416  26D9               	addwf	fsr2l,f,c
 11990  001418  0100               	movlb	0	; () banked
 11991  00141A  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 11992  00141C  22DA               	addwfc	fsr2h,f,c
 11993  00141E  0100               	movlb	0	; () banked
 11994  001420  EE10 F041          	lfsr	1,65
 11995  001424  0100               	movlb	0	; () banked
 11996  001426  518A               	movf	i2send_msg@qptr& (0+255),w,b
 11997  001428  26E1               	addwf	fsr1l,f,c
 11998  00142A  0100               	movlb	0	; () banked
 11999  00142C  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 12000  00142E  22E2               	addwfc	fsr1h,f,c
 12001  001430  50E7               	movf	indf1,w,c
 12002  001432  0100               	movlb	0	; () banked
 12003  001434  6F90               	movwf	??i2_send_msg& (0+255),b
 12004  001436  0E01               	movlw	1
 12005  001438  0100               	movlb	0	; () banked
 12006  00143A  2590               	addwf	??i2_send_msg& (0+255),w,b
 12007  00143C  0100               	movlb	0	; () banked
 12008  00143E  0100               	movlb	0	; () banked
 12009  001440  6F80               	movwf	i2___awmod@dividend& (0+255),b
 12010  001442  0100               	movlb	0	; () banked
 12011  001444  0100               	movlb	0	; () banked
 12012  001446  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
 12013  001448  0E00               	movlw	0
 12014  00144A  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
 12015  00144C  0E00               	movlw	0
 12016  00144E  0100               	movlb	0	; () banked
 12017  001450  0100               	movlb	0	; () banked
 12018  001452  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
 12019  001454  0E05               	movlw	5
 12020  001456  0100               	movlb	0	; () banked
 12021  001458  6F82               	movwf	i2___awmod@divisor& (0+255),b
 12022  00145A  EC49  F00B         	call	i2___awmod	;wreg free
 12023  00145E  0100               	movlb	0	; () banked
 12024  001460  0100               	movlb	0	; () banked
 12025  001462  5180               	movf	?i2___awmod& (0+255),w,b
 12026  001464  6EDF               	movwf	indf2,c
 12027                           
 12028                           ; BSR set to: 0
 12029                           ;messages.c: 59: qmsg->full = 1;
 12030  001466  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
 12031  00146A  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
 12032  00146E  0E01               	movlw	1
 12033  001470  6EDF               	movwf	indf2,c
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;messages.c: 60: return (1);
 12037  001472  0E01               	movlw	1
 12038  001474  0012               	return	
 12039  001476                     __end_ofi2_send_msg:
 12040                           	opt stack 0
 12041                           pclatu	equ	0xFFB
 12042                           pclath	equ	0xFFA
 12043                           tblptru	equ	0xFF8
 12044                           tblptrh	equ	0xFF7
 12045                           tblptrl	equ	0xFF6
 12046                           tablat	equ	0xFF5
 12047                           prodh	equ	0xFF4
 12048                           prodl	equ	0xFF3
 12049                           intcon	equ	0xFF2
 12050                           intcon2	equ	0xFF1
 12051                           postinc0	equ	0xFEE
 12052                           fsr0h	equ	0xFEA
 12053                           fsr0l	equ	0xFE9
 12054                           wreg	equ	0xFE8
 12055                           indf1	equ	0xFE7
 12056                           postinc1	equ	0xFE6
 12057                           postdec1	equ	0xFE5
 12058                           fsr1h	equ	0xFE2
 12059                           fsr1l	equ	0xFE1
 12060                           bsr	equ	0xFE0
 12061                           indf2	equ	0xFDF
 12062                           postinc2	equ	0xFDE
 12063                           postdec2	equ	0xFDD
 12064                           fsr2h	equ	0xFDA
 12065                           fsr2l	equ	0xFD9
 12066                           status	equ	0xFD8
 12067                           
 12068 ;; *************** function i2_memcpy *****************
 12069 ;; Defined at:
 12070 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;  d1              2    0[BANK0 ] PTR void 
 12073 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
 12074 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 12075 ;;		 -> main@msgbuffer(11), 
 12076 ;;  s1              2    2[BANK0 ] PTR const void 
 12077 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
 12078 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
 12079 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
 12080 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
 12081 ;;		 -> main@uc(15), 
 12082 ;;  n               2    4[BANK0 ] unsigned int 
 12083 ;; Auto vars:     Size  Location     Type
 12084 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
 12085 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
 12086 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
 12087 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
 12088 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
 12089 ;;		 -> main@uc(15), 
 12090 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
 12091 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
 12092 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 12093 ;;		 -> main@msgbuffer(11), 
 12094 ;; Return value:  Size  Location     Type
 12095 ;;                  2    0[BANK0 ] PTR void 
 12096 ;; Registers used:
 12097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12098 ;; Tracked objects:
 12099 ;;		On entry : 0/0
 12100 ;;		On exit  : 0/0
 12101 ;;		Unchanged: 0/0
 12102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12103 ;;      Params:         0       6       0       0       0
 12104 ;;      Locals:         0       4       0       0       0
 12105 ;;      Temps:          0       0       0       0       0
 12106 ;;      Totals:         0      10       0       0       0
 12107 ;;Total ram usage:       10 bytes
 12108 ;; Hardware stack levels used:    1
 12109 ;; This function calls:
 12110 ;;		Nothing
 12111 ;; This function is called by:
 12112 ;;		i2_send_msg
 12113 ;; This function uses a non-reentrant model
 12114 ;;
 12115                           
 12116                           	psect	text65
 12117  0028DE                     __ptext65:
 12118                           	opt stack 0
 12119  0028DE                     i2_memcpy:
 12120                           	opt stack 16
 12121                           
 12122                           ; BSR set to: 0
 12123                           ;incstack = 0
 12124  0028DE  0100               	movlb	0	; () banked
 12125  0028E0  0100               	movlb	0	; () banked
 12126  0028E2  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
 12127  0028E6  0100               	movlb	0	; () banked
 12128  0028E8  0100               	movlb	0	; () banked
 12129  0028EA  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
 12130  0028EE  0100               	movlb	0	; () banked
 12131  0028F0  0100               	movlb	0	; () banked
 12132  0028F2  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
 12133  0028F6  0100               	movlb	0	; () banked
 12134  0028F8  0100               	movlb	0	; () banked
 12135  0028FA  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
 12136  0028FE  D012               	goto	i2l4342
 12137  002900                     i2l4336:
 12138                           
 12139                           ; BSR set to: 0
 12140  002900  C088  FFD9         	movff	i2memcpy@s,fsr2l
 12141  002904  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
 12142  002908  C086  FFE1         	movff	i2memcpy@d,fsr1l
 12143  00290C  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
 12144  002910  CFDF FFE7          	movff	indf2,indf1
 12145                           
 12146                           ; BSR set to: 0
 12147  002914  0100               	movlb	0	; () banked
 12148  002916  0100               	movlb	0	; () banked
 12149  002918  4B88               	infsnz	i2memcpy@s& (0+255),f,b
 12150  00291A  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
 12151                           
 12152                           ; BSR set to: 0
 12153  00291C  0100               	movlb	0	; () banked
 12154  00291E  0100               	movlb	0	; () banked
 12155  002920  4B86               	infsnz	i2memcpy@d& (0+255),f,b
 12156  002922  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
 12157  002924                     i2l4342:
 12158                           
 12159                           ; BSR set to: 0
 12160  002924  0100               	movlb	0	; () banked
 12161  002926  0100               	movlb	0	; () banked
 12162  002928  0784               	decf	i2memcpy@n& (0+255),f,b
 12163  00292A  A0D8               	btfss	status,0,c
 12164  00292C  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
 12165  00292E  0100               	movlb	0	; () banked
 12166  002930  2984               	incf	i2memcpy@n& (0+255),w,b
 12167  002932  B4D8               	btfsc	status,2,c
 12168  002934  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
 12169  002936  B4D8               	btfsc	status,2,c
 12170                           
 12171                           ; BSR set to: 0
 12172                           
 12173                           ; BSR set to: 0
 12174                           ;	Return value of i2_memcpy is never used
 12175  002938  0012               	return	
 12176  00293A  D7E2               	goto	i2l4336
 12177  00293C                     __end_ofi2_memcpy:
 12178                           	opt stack 0
 12179                           pclatu	equ	0xFFB
 12180                           pclath	equ	0xFFA
 12181                           tblptru	equ	0xFF8
 12182                           tblptrh	equ	0xFF7
 12183                           tblptrl	equ	0xFF6
 12184                           tablat	equ	0xFF5
 12185                           prodh	equ	0xFF4
 12186                           prodl	equ	0xFF3
 12187                           intcon	equ	0xFF2
 12188                           intcon2	equ	0xFF1
 12189                           postinc0	equ	0xFEE
 12190                           fsr0h	equ	0xFEA
 12191                           fsr0l	equ	0xFE9
 12192                           wreg	equ	0xFE8
 12193                           indf1	equ	0xFE7
 12194                           postinc1	equ	0xFE6
 12195                           postdec1	equ	0xFE5
 12196                           fsr1h	equ	0xFE2
 12197                           fsr1l	equ	0xFE1
 12198                           bsr	equ	0xFE0
 12199                           indf2	equ	0xFDF
 12200                           postinc2	equ	0xFDE
 12201                           postdec2	equ	0xFDD
 12202                           fsr2h	equ	0xFDA
 12203                           fsr2l	equ	0xFD9
 12204                           status	equ	0xFD8
 12205                           
 12206 ;; *************** function i2___awmod *****************
 12207 ;; Defined at:
 12208 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
 12209 ;; Parameters:    Size  Location     Type
 12210 ;;  dividend        2    0[BANK0 ] int 
 12211 ;;  divisor         2    2[BANK0 ] int 
 12212 ;; Auto vars:     Size  Location     Type
 12213 ;;  __awmod         1    6[BANK0 ] unsigned char 
 12214 ;;  __awmod         1    5[BANK0 ] unsigned char 
 12215 ;; Return value:  Size  Location     Type
 12216 ;;                  2    0[BANK0 ] int 
 12217 ;; Registers used:
 12218 ;;		wreg, status,2, status,0, prodl
 12219 ;; Tracked objects:
 12220 ;;		On entry : 0/0
 12221 ;;		On exit  : 0/0
 12222 ;;		Unchanged: 0/0
 12223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12224 ;;      Params:         0       4       0       0       0
 12225 ;;      Locals:         0       2       0       0       0
 12226 ;;      Temps:          0       1       0       0       0
 12227 ;;      Totals:         0       7       0       0       0
 12228 ;;Total ram usage:        7 bytes
 12229 ;; Hardware stack levels used:    1
 12230 ;; This function calls:
 12231 ;;		Nothing
 12232 ;; This function is called by:
 12233 ;;		i2_send_msg
 12234 ;; This function uses a non-reentrant model
 12235 ;;
 12236                           
 12237                           	psect	text66
 12238  001692                     __ptext66:
 12239                           	opt stack 0
 12240  001692                     i2___awmod:
 12241                           	opt stack 16
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;incstack = 0
 12245  001692  0100               	movlb	0	; () banked
 12246  001694  6F84               	movwf	??i2___awmod& (0+255),b
 12247  001696  0E00               	movlw	0
 12248  001698  0100               	movlb	0	; () banked
 12249  00169A  0100               	movlb	0	; () banked
 12250  00169C  6F86               	movwf	i2___awmod@sign& (0+255),b
 12251  00169E  0100               	movlb	0	; () banked
 12252  0016A0  5184               	movf	??i2___awmod& (0+255),w,b
 12253                           
 12254                           ; BSR set to: 0
 12255  0016A2  0100               	movlb	0	; () banked
 12256  0016A4  0100               	movlb	0	; () banked
 12257  0016A6  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
 12258  0016A8  0A80               	xorlw	128
 12259  0016AA  6EF3               	movwf	prodl,c
 12260  0016AC  0E80               	movlw	128
 12261  0016AE  5CF3               	subwf	prodl,w,c
 12262  0016B0  0E00               	movlw	0
 12263  0016B2  B4D8               	btfsc	status,2,c
 12264  0016B4  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
 12265  0016B6  B0D8               	btfsc	status,0,c
 12266  0016B8  D00F               	goto	i2l4388
 12267                           
 12268                           ; BSR set to: 0
 12269  0016BA  0100               	movlb	0	; () banked
 12270  0016BC  0100               	movlb	0	; () banked
 12271  0016BE  6D80               	negf	i2___awmod@dividend& (0+255),b
 12272  0016C0  0100               	movlb	0	; () banked
 12273  0016C2  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
 12274  0016C4  B0D8               	btfsc	status,0,c
 12275  0016C6  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
 12276                           
 12277                           ; BSR set to: 0
 12278  0016C8  0100               	movlb	0	; () banked
 12279  0016CA  6F84               	movwf	??i2___awmod& (0+255),b
 12280  0016CC  0E01               	movlw	1
 12281  0016CE  0100               	movlb	0	; () banked
 12282  0016D0  0100               	movlb	0	; () banked
 12283  0016D2  6F86               	movwf	i2___awmod@sign& (0+255),b
 12284  0016D4  0100               	movlb	0	; () banked
 12285  0016D6  5184               	movf	??i2___awmod& (0+255),w,b
 12286  0016D8                     i2l4388:
 12287                           
 12288                           ; BSR set to: 0
 12289  0016D8  0100               	movlb	0	; () banked
 12290  0016DA  0100               	movlb	0	; () banked
 12291  0016DC  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 12292  0016DE  0A80               	xorlw	128
 12293  0016E0  6EF3               	movwf	prodl,c
 12294  0016E2  0E80               	movlw	128
 12295  0016E4  5CF3               	subwf	prodl,w,c
 12296  0016E6  0E00               	movlw	0
 12297  0016E8  B4D8               	btfsc	status,2,c
 12298  0016EA  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
 12299  0016EC  B0D8               	btfsc	status,0,c
 12300  0016EE  D007               	goto	i2l4392
 12301                           
 12302                           ; BSR set to: 0
 12303  0016F0  0100               	movlb	0	; () banked
 12304  0016F2  0100               	movlb	0	; () banked
 12305  0016F4  6D82               	negf	i2___awmod@divisor& (0+255),b
 12306  0016F6  0100               	movlb	0	; () banked
 12307  0016F8  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
 12308  0016FA  B0D8               	btfsc	status,0,c
 12309  0016FC  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
 12310  0016FE                     i2l4392:
 12311                           
 12312                           ; BSR set to: 0
 12313  0016FE  0100               	movlb	0	; () banked
 12314  001700  0100               	movlb	0	; () banked
 12315  001702  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 12316  001704  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
 12317  001706  B4D8               	btfsc	status,2,c
 12318  001708  D03A               	goto	i2l4408
 12319                           
 12320                           ; BSR set to: 0
 12321  00170A  0100               	movlb	0	; () banked
 12322  00170C  6F84               	movwf	??i2___awmod& (0+255),b
 12323  00170E  0E01               	movlw	1
 12324  001710  0100               	movlb	0	; () banked
 12325  001712  0100               	movlb	0	; () banked
 12326  001714  6F85               	movwf	i2___awmod@counter& (0+255),b
 12327  001716  0100               	movlb	0	; () banked
 12328  001718  5184               	movf	??i2___awmod& (0+255),w,b
 12329  00171A  D009               	goto	i2l4398
 12330  00171C                     i2l4396:
 12331                           
 12332                           ; BSR set to: 0
 12333  00171C  0100               	movlb	0	; () banked
 12334  00171E  0100               	movlb	0	; () banked
 12335  001720  0100               	movlb	0	; () banked
 12336  001722  90D8               	bcf	status,0,c
 12337  001724  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
 12338  001726  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
 12339  001728  0100               	movlb	0	; () banked
 12340  00172A  0100               	movlb	0	; () banked
 12341  00172C  2B85               	incf	i2___awmod@counter& (0+255),f,b
 12342  00172E                     i2l4398:
 12343                           
 12344                           ; BSR set to: 0
 12345  00172E  0100               	movlb	0	; () banked
 12346  001730  0100               	movlb	0	; () banked
 12347  001732  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
 12348  001734  D7F3               	goto	i2l4396
 12349  001736                     i2l4400:
 12350                           
 12351                           ; BSR set to: 0
 12352  001736  0100               	movlb	0	; () banked
 12353  001738  0100               	movlb	0	; () banked
 12354  00173A  5182               	movf	i2___awmod@divisor& (0+255),w,b
 12355  00173C  0100               	movlb	0	; () banked
 12356  00173E  0100               	movlb	0	; () banked
 12357  001740  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
 12358  001742  0100               	movlb	0	; () banked
 12359  001744  0100               	movlb	0	; () banked
 12360  001746  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 12361  001748  0100               	movlb	0	; () banked
 12362  00174A  0100               	movlb	0	; () banked
 12363  00174C  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
 12364  00174E  A0D8               	btfss	status,0,c
 12365  001750  D00C               	goto	i2l4404
 12366                           
 12367                           ; BSR set to: 0
 12368  001752  0100               	movlb	0	; () banked
 12369  001754  0100               	movlb	0	; () banked
 12370  001756  5182               	movf	i2___awmod@divisor& (0+255),w,b
 12371  001758  0100               	movlb	0	; () banked
 12372  00175A  0100               	movlb	0	; () banked
 12373  00175C  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
 12374  00175E  0100               	movlb	0	; () banked
 12375  001760  0100               	movlb	0	; () banked
 12376  001762  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 12377  001764  0100               	movlb	0	; () banked
 12378  001766  0100               	movlb	0	; () banked
 12379  001768  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
 12380  00176A                     i2l4404:
 12381                           
 12382                           ; BSR set to: 0
 12383  00176A  0100               	movlb	0	; () banked
 12384  00176C  0100               	movlb	0	; () banked
 12385  00176E  0100               	movlb	0	; () banked
 12386  001770  90D8               	bcf	status,0,c
 12387  001772  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
 12388  001774  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
 12389                           
 12390                           ; BSR set to: 0
 12391  001776  0100               	movlb	0	; () banked
 12392  001778  0100               	movlb	0	; () banked
 12393  00177A  2F85               	decfsz	i2___awmod@counter& (0+255),f,b
 12394  00177C  D7DC               	goto	i2l4400
 12395  00177E                     i2l4408:
 12396                           
 12397                           ; BSR set to: 0
 12398  00177E  0100               	movlb	0	; () banked
 12399  001780  0100               	movlb	0	; () banked
 12400  001782  5186               	movf	i2___awmod@sign& (0+255),w,b
 12401  001784  B4D8               	btfsc	status,2,c
 12402  001786  D007               	goto	i2l4412
 12403                           
 12404                           ; BSR set to: 0
 12405  001788  0100               	movlb	0	; () banked
 12406  00178A  0100               	movlb	0	; () banked
 12407  00178C  6D80               	negf	i2___awmod@dividend& (0+255),b
 12408  00178E  0100               	movlb	0	; () banked
 12409  001790  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
 12410  001792  B0D8               	btfsc	status,0,c
 12411  001794  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
 12412  001796                     i2l4412:
 12413                           
 12414                           ; BSR set to: 0
 12415  001796  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
 12416  00179A  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
 12417  00179E  0012               	return	
 12418  0017A0                     __end_ofi2___awmod:
 12419                           	opt stack 0
 12420                           pclatu	equ	0xFFB
 12421                           pclath	equ	0xFFA
 12422                           tblptru	equ	0xFF8
 12423                           tblptrh	equ	0xFF7
 12424                           tblptrl	equ	0xFF6
 12425                           tablat	equ	0xFF5
 12426                           prodh	equ	0xFF4
 12427                           prodl	equ	0xFF3
 12428                           intcon	equ	0xFF2
 12429                           intcon2	equ	0xFF1
 12430                           postinc0	equ	0xFEE
 12431                           fsr0h	equ	0xFEA
 12432                           fsr0l	equ	0xFE9
 12433                           wreg	equ	0xFE8
 12434                           indf1	equ	0xFE7
 12435                           postinc1	equ	0xFE6
 12436                           postdec1	equ	0xFE5
 12437                           fsr1h	equ	0xFE2
 12438                           fsr1l	equ	0xFE1
 12439                           bsr	equ	0xFE0
 12440                           indf2	equ	0xFDF
 12441                           postinc2	equ	0xFDE
 12442                           postdec2	equ	0xFDD
 12443                           fsr2h	equ	0xFDA
 12444                           fsr2l	equ	0xFD9
 12445                           status	equ	0xFD8
 12446                           
 12447 ;; *************** function _SleepIfOkay *****************
 12448 ;; Defined at:
 12449 ;;		line 228 in file "../src/messages.c"
 12450 ;; Parameters:    Size  Location     Type
 12451 ;;		None
 12452 ;; Auto vars:     Size  Location     Type
 12453 ;;		None
 12454 ;; Return value:  Size  Location     Type
 12455 ;;		None               void
 12456 ;; Registers used:
 12457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12458 ;; Tracked objects:
 12459 ;;		On entry : 0/0
 12460 ;;		On exit  : 0/0
 12461 ;;		Unchanged: 0/0
 12462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12463 ;;      Params:         0       0       0       0       0
 12464 ;;      Locals:         0       0       0       0       0
 12465 ;;      Temps:          0       0       0       0       0
 12466 ;;      Totals:         0       0       0       0       0
 12467 ;;Total ram usage:        0 bytes
 12468 ;; Hardware stack levels used:    1
 12469 ;; Hardware stack levels required when called:    2
 12470 ;; This function calls:
 12471 ;;		_enter_sleep_mode
 12472 ;;		i2_check_msg
 12473 ;;		i2_in_high_int
 12474 ;;		i2_in_low_int
 12475 ;; This function is called by:
 12476 ;;		_InterruptHandlerHigh
 12477 ;; This function uses a non-reentrant model
 12478 ;;
 12479                           
 12480                           	psect	text67
 12481  0026DA                     __ptext67:
 12482                           	opt stack 0
 12483  0026DA                     _SleepIfOkay:
 12484                           	opt stack 18
 12485                           
 12486                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 12487                           
 12488                           ; BSR set to: 0
 12489                           ;incstack = 0
 12490  0026DA  0100               	movlb	0	; () banked
 12491  0026DC  0100               	movlb	0	; () banked
 12492  0026DE  67EA               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
 12493  0026E0  D001               	goto	i2l3366
 12494  0026E2  0012               	return	
 12495  0026E4                     i2l3366:
 12496                           
 12497                           ; BSR set to: 0
 12498                           ;messages.c: 232: }
 12499                           ;messages.c: 235: if (in_low_int()) {
 12500  0026E4  ECEB  F014         	call	i2_in_low_int	;wreg free
 12501  0026E8  0100               	movlb	0	; () banked
 12502  0026EA  0100               	movlb	0	; () banked
 12503  0026EC  5183               	movf	(?i2_in_low_int+1)& (0+255),w,b
 12504  0026EE  0100               	movlb	0	; () banked
 12505  0026F0  1182               	iorwf	?i2_in_low_int& (0+255),w,b
 12506  0026F2  A4D8               	btfss	status,2,c
 12507  0026F4  0012               	return	
 12508                           
 12509                           ; BSR set to: 0
 12510                           ;messages.c: 237: }
 12511                           ;messages.c: 240: if (!in_high_int()) {
 12512                           
 12513                           ; BSR set to: 0
 12514                           
 12515                           ; BSR set to: 0
 12516                           ;messages.c: 236: return;
 12517  0026F6  ECE4  F016         	call	i2_in_high_int	;wreg free
 12518  0026FA  0100               	movlb	0	; () banked
 12519  0026FC  0100               	movlb	0	; () banked
 12520  0026FE  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
 12521  002700  0100               	movlb	0	; () banked
 12522  002702  1180               	iorwf	?i2_in_high_int& (0+255),w,b
 12523  002704  B4D8               	btfsc	status,2,c
 12524  002706  0012               	return	
 12525                           
 12526                           ; BSR set to: 0
 12527                           ;messages.c: 242: }
 12528                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 12529                           
 12530                           ; BSR set to: 0
 12531                           
 12532                           ; BSR set to: 0
 12533                           ;messages.c: 241: return;
 12534  002708  0102               	movlb	2	; () banked
 12535  00270A  0E02               	movlw	high _ToMainHigh_MQ
 12536  00270C  0100               	movlb	0	; () banked
 12537  00270E  0100               	movlb	0	; () banked
 12538  002710  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
 12539  002712  0102               	movlb	2	; () banked
 12540  002714  0E86               	movlw	low _ToMainHigh_MQ
 12541  002716  0100               	movlb	0	; () banked
 12542  002718  0100               	movlb	0	; () banked
 12543  00271A  6F80               	movwf	i2check_msg@qptr& (0+255),b
 12544  00271C  ECFF  F015         	call	i2_check_msg	;wreg free
 12545  002720  0900               	iorlw	0
 12546  002722  A4D8               	btfss	status,2,c
 12547  002724  0012               	return	
 12548                           
 12549                           ;messages.c: 249: }
 12550                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 12551                           
 12552                           ;messages.c: 248: return;
 12553  002726  0101               	movlb	1	; () banked
 12554  002728  0E01               	movlw	high _ToMainLow_MQ
 12555  00272A  0100               	movlb	0	; () banked
 12556  00272C  0100               	movlb	0	; () banked
 12557  00272E  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
 12558  002730  0101               	movlb	1	; () banked
 12559  002732  0E82               	movlw	low _ToMainLow_MQ
 12560  002734  0100               	movlb	0	; () banked
 12561  002736  0100               	movlb	0	; () banked
 12562  002738  6F80               	movwf	i2check_msg@qptr& (0+255),b
 12563  00273A  ECFF  F015         	call	i2_check_msg	;wreg free
 12564  00273E  0900               	iorlw	0
 12565  002740  B4D8               	btfsc	status,2,c
 12566                           
 12567                           ;messages.c: 252: }
 12568                           ;messages.c: 253: enter_sleep_mode();
 12569                           
 12570                           ;messages.c: 251: return;
 12571  002742  ECF8  F016         	call	_enter_sleep_mode	;wreg free
 12572  002746  0012               	return	
 12573  002748                     __end_of_SleepIfOkay:
 12574                           	opt stack 0
 12575                           pclatu	equ	0xFFB
 12576                           pclath	equ	0xFFA
 12577                           tblptru	equ	0xFF8
 12578                           tblptrh	equ	0xFF7
 12579                           tblptrl	equ	0xFF6
 12580                           tablat	equ	0xFF5
 12581                           prodh	equ	0xFF4
 12582                           prodl	equ	0xFF3
 12583                           intcon	equ	0xFF2
 12584                           intcon2	equ	0xFF1
 12585                           postinc0	equ	0xFEE
 12586                           fsr0h	equ	0xFEA
 12587                           fsr0l	equ	0xFE9
 12588                           wreg	equ	0xFE8
 12589                           indf1	equ	0xFE7
 12590                           postinc1	equ	0xFE6
 12591                           postdec1	equ	0xFE5
 12592                           fsr1h	equ	0xFE2
 12593                           fsr1l	equ	0xFE1
 12594                           bsr	equ	0xFE0
 12595                           indf2	equ	0xFDF
 12596                           postinc2	equ	0xFDE
 12597                           postdec2	equ	0xFDD
 12598                           fsr2h	equ	0xFDA
 12599                           fsr2l	equ	0xFD9
 12600                           status	equ	0xFD8
 12601                           
 12602 ;; *************** function i2_in_low_int *****************
 12603 ;; Defined at:
 12604 ;;		line 31 in file "../src/interrupts.c"
 12605 ;; Parameters:    Size  Location     Type
 12606 ;;		None
 12607 ;; Auto vars:     Size  Location     Type
 12608 ;;		None
 12609 ;; Return value:  Size  Location     Type
 12610 ;;                  2    2[BANK0 ] int 
 12611 ;; Registers used:
 12612 ;;		wreg, status,2, status,0, cstack
 12613 ;; Tracked objects:
 12614 ;;		On entry : 0/0
 12615 ;;		On exit  : 0/0
 12616 ;;		Unchanged: 0/0
 12617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12618 ;;      Params:         0       2       0       0       0
 12619 ;;      Locals:         0       0       0       0       0
 12620 ;;      Temps:          0       0       0       0       0
 12621 ;;      Totals:         0       2       0       0       0
 12622 ;;Total ram usage:        2 bytes
 12623 ;; Hardware stack levels used:    1
 12624 ;; Hardware stack levels required when called:    1
 12625 ;; This function calls:
 12626 ;;		i2_in_high_int
 12627 ;; This function is called by:
 12628 ;;		_SleepIfOkay
 12629 ;; This function uses a non-reentrant model
 12630 ;;
 12631                           
 12632                           	psect	text68
 12633  0029D6                     __ptext68:
 12634                           	opt stack 0
 12635  0029D6                     i2_in_low_int:
 12636                           	opt stack 18
 12637                           
 12638                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
 12639                           
 12640                           ;incstack = 0
 12641  0029D6  ACF2               	btfss	intcon,6,c	;volatile
 12642  0029D8  D008               	goto	i2l4230
 12643                           
 12644                           ;interrupts.c: 33: return (0);
 12645  0029DA  0E00               	movlw	0
 12646  0029DC  0100               	movlb	0	; () banked
 12647  0029DE  0100               	movlb	0	; () banked
 12648  0029E0  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 12649  0029E2  0E00               	movlw	0
 12650  0029E4  0100               	movlb	0	; () banked
 12651  0029E6  6F82               	movwf	?i2_in_low_int& (0+255),b
 12652  0029E8  0012               	return	
 12653  0029EA                     i2l4230:
 12654  0029EA  ECE4  F016         	call	i2_in_high_int	;wreg free
 12655  0029EE  0100               	movlb	0	; () banked
 12656  0029F0  0100               	movlb	0	; () banked
 12657  0029F2  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
 12658  0029F4  0100               	movlb	0	; () banked
 12659  0029F6  1180               	iorwf	?i2_in_high_int& (0+255),w,b
 12660  0029F8  B4D8               	btfsc	status,2,c
 12661  0029FA  D008               	goto	i2l4238
 12662                           
 12663                           ; BSR set to: 0
 12664                           ;interrupts.c: 35: return (0);
 12665  0029FC  0E00               	movlw	0
 12666  0029FE  0100               	movlb	0	; () banked
 12667  002A00  0100               	movlb	0	; () banked
 12668  002A02  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 12669  002A04  0E00               	movlw	0
 12670  002A06  0100               	movlb	0	; () banked
 12671  002A08  6F82               	movwf	?i2_in_low_int& (0+255),b
 12672  002A0A  0012               	return	
 12673  002A0C                     i2l4238:
 12674                           
 12675                           ; BSR set to: 0
 12676                           ;interrupts.c: 37: return (1);
 12677  002A0C  0E00               	movlw	0
 12678  002A0E  0100               	movlb	0	; () banked
 12679  002A10  0100               	movlb	0	; () banked
 12680  002A12  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 12681  002A14  0E01               	movlw	1
 12682  002A16  0100               	movlb	0	; () banked
 12683  002A18  6F82               	movwf	?i2_in_low_int& (0+255),b
 12684  002A1A  0012               	return	
 12685  002A1C                     __end_ofi2_in_low_int:
 12686                           	opt stack 0
 12687                           pclatu	equ	0xFFB
 12688                           pclath	equ	0xFFA
 12689                           tblptru	equ	0xFF8
 12690                           tblptrh	equ	0xFF7
 12691                           tblptrl	equ	0xFF6
 12692                           tablat	equ	0xFF5
 12693                           prodh	equ	0xFF4
 12694                           prodl	equ	0xFF3
 12695                           intcon	equ	0xFF2
 12696                           intcon2	equ	0xFF1
 12697                           postinc0	equ	0xFEE
 12698                           fsr0h	equ	0xFEA
 12699                           fsr0l	equ	0xFE9
 12700                           wreg	equ	0xFE8
 12701                           indf1	equ	0xFE7
 12702                           postinc1	equ	0xFE6
 12703                           postdec1	equ	0xFE5
 12704                           fsr1h	equ	0xFE2
 12705                           fsr1l	equ	0xFE1
 12706                           bsr	equ	0xFE0
 12707                           indf2	equ	0xFDF
 12708                           postinc2	equ	0xFDE
 12709                           postdec2	equ	0xFDD
 12710                           fsr2h	equ	0xFDA
 12711                           fsr2l	equ	0xFD9
 12712                           status	equ	0xFD8
 12713                           
 12714 ;; *************** function i2_in_high_int *****************
 12715 ;; Defined at:
 12716 ;;		line 23 in file "../src/interrupts.c"
 12717 ;; Parameters:    Size  Location     Type
 12718 ;;		None
 12719 ;; Auto vars:     Size  Location     Type
 12720 ;;		None
 12721 ;; Return value:  Size  Location     Type
 12722 ;;                  2    0[BANK0 ] int 
 12723 ;; Registers used:
 12724 ;;		wreg, status,2
 12725 ;; Tracked objects:
 12726 ;;		On entry : 0/0
 12727 ;;		On exit  : 0/0
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12730 ;;      Params:         0       2       0       0       0
 12731 ;;      Locals:         0       0       0       0       0
 12732 ;;      Temps:          0       0       0       0       0
 12733 ;;      Totals:         0       2       0       0       0
 12734 ;;Total ram usage:        2 bytes
 12735 ;; Hardware stack levels used:    1
 12736 ;; This function calls:
 12737 ;;		Nothing
 12738 ;; This function is called by:
 12739 ;;		_SleepIfOkay
 12740 ;;		i2_in_low_int
 12741 ;; This function uses a non-reentrant model
 12742 ;;
 12743                           
 12744                           	psect	text69
 12745  002DC8                     __ptext69:
 12746                           	opt stack 0
 12747  002DC8                     i2_in_high_int:
 12748                           	opt stack 18
 12749                           
 12750                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
 12751                           
 12752                           ; BSR set to: 0
 12753                           ;incstack = 0
 12754  002DC8  0E00               	movlw	0
 12755  002DCA  AEF2               	btfss	intcon,7,c	;volatile
 12756  002DCC  0E01               	movlw	1
 12757  002DCE  0100               	movlb	0	; () banked
 12758  002DD0  0100               	movlb	0	; () banked
 12759  002DD2  6F80               	movwf	?i2_in_high_int& (0+255),b
 12760  002DD4  0100               	movlb	0	; () banked
 12761  002DD6  6B81               	clrf	(?i2_in_high_int+1)& (0+255),b
 12762  002DD8  0012               	return	
 12763  002DDA                     __end_ofi2_in_high_int:
 12764                           	opt stack 0
 12765                           pclatu	equ	0xFFB
 12766                           pclath	equ	0xFFA
 12767                           tblptru	equ	0xFF8
 12768                           tblptrh	equ	0xFF7
 12769                           tblptrl	equ	0xFF6
 12770                           tablat	equ	0xFF5
 12771                           prodh	equ	0xFF4
 12772                           prodl	equ	0xFF3
 12773                           intcon	equ	0xFF2
 12774                           intcon2	equ	0xFF1
 12775                           postinc0	equ	0xFEE
 12776                           fsr0h	equ	0xFEA
 12777                           fsr0l	equ	0xFE9
 12778                           wreg	equ	0xFE8
 12779                           indf1	equ	0xFE7
 12780                           postinc1	equ	0xFE6
 12781                           postdec1	equ	0xFE5
 12782                           fsr1h	equ	0xFE2
 12783                           fsr1l	equ	0xFE1
 12784                           bsr	equ	0xFE0
 12785                           indf2	equ	0xFDF
 12786                           postinc2	equ	0xFDE
 12787                           postdec2	equ	0xFDD
 12788                           fsr2h	equ	0xFDA
 12789                           fsr2l	equ	0xFD9
 12790                           status	equ	0xFD8
 12791                           
 12792 ;; *************** function i2_check_msg *****************
 12793 ;; Defined at:
 12794 ;;		line 222 in file "../src/messages.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
 12797 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 12798 ;; Auto vars:     Size  Location     Type
 12799 ;;		None
 12800 ;; Return value:  Size  Location     Type
 12801 ;;                  1    wreg      unsigned char 
 12802 ;; Registers used:
 12803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12804 ;; Tracked objects:
 12805 ;;		On entry : 0/0
 12806 ;;		On exit  : 0/0
 12807 ;;		Unchanged: 0/0
 12808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12809 ;;      Params:         0       2       0       0       0
 12810 ;;      Locals:         0       0       0       0       0
 12811 ;;      Temps:          0       1       0       0       0
 12812 ;;      Totals:         0       3       0       0       0
 12813 ;;Total ram usage:        3 bytes
 12814 ;; Hardware stack levels used:    1
 12815 ;; This function calls:
 12816 ;;		Nothing
 12817 ;; This function is called by:
 12818 ;;		_SleepIfOkay
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           
 12822                           	psect	text70
 12823  002BFE                     __ptext70:
 12824                           	opt stack 0
 12825  002BFE                     i2_check_msg:
 12826                           	opt stack 19
 12827                           
 12828                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 12829                           
 12830                           ; BSR set to: 0
 12831                           ;incstack = 0
 12832  002BFE  0100               	movlb	0	; () banked
 12833  002C00  EE20 F042          	lfsr	2,66
 12834  002C04  0100               	movlb	0	; () banked
 12835  002C06  5180               	movf	i2check_msg@qptr& (0+255),w,b
 12836  002C08  26D9               	addwf	fsr2l,f,c
 12837  002C0A  0100               	movlb	0	; () banked
 12838  002C0C  5181               	movf	(i2check_msg@qptr+1)& (0+255),w,b
 12839  002C0E  22DA               	addwfc	fsr2h,f,c
 12840  002C10  50DF               	movf	indf2,w,c
 12841  002C12  0100               	movlb	0	; () banked
 12842  002C14  6F82               	movwf	??i2_check_msg& (0+255),b
 12843  002C16  0100               	movlb	0	; () banked
 12844  002C18  5182               	movf	??i2_check_msg& (0+255),w,b
 12845  002C1A  0D0D               	mullw	13
 12846  002C1C  50F3               	movf	prodl,w,c
 12847  002C1E  0100               	movlb	0	; () banked
 12848  002C20  0100               	movlb	0	; () banked
 12849  002C22  2580               	addwf	i2check_msg@qptr& (0+255),w,b
 12850  002C24  6ED9               	movwf	fsr2l,c
 12851  002C26  50F4               	movf	prodh,w,c
 12852  002C28  0100               	movlb	0	; () banked
 12853  002C2A  0100               	movlb	0	; () banked
 12854  002C2C  2181               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
 12855  002C2E  6EDA               	movwf	fsr2h,c
 12856  002C30  50DF               	movf	indf2,w,c
 12857  002C32  0012               	return	
 12858  002C34                     __end_ofi2_check_msg:
 12859                           	opt stack 0
 12860                           pclatu	equ	0xFFB
 12861                           pclath	equ	0xFFA
 12862                           tblptru	equ	0xFF8
 12863                           tblptrh	equ	0xFF7
 12864                           tblptrl	equ	0xFF6
 12865                           tablat	equ	0xFF5
 12866                           prodh	equ	0xFF4
 12867                           prodl	equ	0xFF3
 12868                           intcon	equ	0xFF2
 12869                           intcon2	equ	0xFF1
 12870                           postinc0	equ	0xFEE
 12871                           fsr0h	equ	0xFEA
 12872                           fsr0l	equ	0xFE9
 12873                           wreg	equ	0xFE8
 12874                           indf1	equ	0xFE7
 12875                           postinc1	equ	0xFE6
 12876                           postdec1	equ	0xFE5
 12877                           fsr1h	equ	0xFE2
 12878                           fsr1l	equ	0xFE1
 12879                           bsr	equ	0xFE0
 12880                           indf2	equ	0xFDF
 12881                           postinc2	equ	0xFDE
 12882                           postdec2	equ	0xFDD
 12883                           fsr2h	equ	0xFDA
 12884                           fsr2l	equ	0xFD9
 12885                           status	equ	0xFD8
 12886                           
 12887 ;; *************** function _enter_sleep_mode *****************
 12888 ;; Defined at:
 12889 ;;		line 202 in file "../src/messages.c"
 12890 ;; Parameters:    Size  Location     Type
 12891 ;;		None
 12892 ;; Auto vars:     Size  Location     Type
 12893 ;;		None
 12894 ;; Return value:  Size  Location     Type
 12895 ;;		None               void
 12896 ;; Registers used:
 12897 ;;		None
 12898 ;; Tracked objects:
 12899 ;;		On entry : 0/0
 12900 ;;		On exit  : 0/0
 12901 ;;		Unchanged: 0/0
 12902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12903 ;;      Params:         0       0       0       0       0
 12904 ;;      Locals:         0       0       0       0       0
 12905 ;;      Temps:          0       0       0       0       0
 12906 ;;      Totals:         0       0       0       0       0
 12907 ;;Total ram usage:        0 bytes
 12908 ;; Hardware stack levels used:    1
 12909 ;; This function calls:
 12910 ;;		Nothing
 12911 ;; This function is called by:
 12912 ;;		_SleepIfOkay
 12913 ;; This function uses a non-reentrant model
 12914 ;;
 12915                           
 12916                           	psect	text71
 12917  002DF0                     __ptext71:
 12918                           	opt stack 0
 12919  002DF0                     _enter_sleep_mode:
 12920                           	opt stack 19
 12921                           
 12922                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 12923                           
 12924                           ; BSR set to: 0
 12925                           ;incstack = 0
 12926  002DF0  8ED3               	bsf	4051,7,c	;volatile
 12927  002DF2  0003               	sleep		;# 
 12928  002DF4  0012               	return	
 12929  002DF6                     __end_of_enter_sleep_mode:
 12930                           	opt stack 0
 12931  0000                     pclatu	equ	0xFFB
 12932                           pclath	equ	0xFFA
 12933                           tblptru	equ	0xFF8
 12934                           tblptrh	equ	0xFF7
 12935                           tblptrl	equ	0xFF6
 12936                           tablat	equ	0xFF5
 12937                           prodh	equ	0xFF4
 12938                           prodl	equ	0xFF3
 12939                           intcon	equ	0xFF2
 12940                           intcon2	equ	0xFF1
 12941                           postinc0	equ	0xFEE
 12942                           fsr0h	equ	0xFEA
 12943                           fsr0l	equ	0xFE9
 12944                           wreg	equ	0xFE8
 12945                           indf1	equ	0xFE7
 12946                           postinc1	equ	0xFE6
 12947                           postdec1	equ	0xFE5
 12948                           fsr1h	equ	0xFE2
 12949                           fsr1l	equ	0xFE1
 12950                           bsr	equ	0xFE0
 12951                           indf2	equ	0xFDF
 12952                           postinc2	equ	0xFDE
 12953                           postdec2	equ	0xFDD
 12954                           fsr2h	equ	0xFDA
 12955                           fsr2l	equ	0xFD9
 12956                           status	equ	0xFD8
 12957                           pclatu	equ	0xFFB
 12958                           pclath	equ	0xFFA
 12959                           tblptru	equ	0xFF8
 12960                           tblptrh	equ	0xFF7
 12961                           tblptrl	equ	0xFF6
 12962                           tablat	equ	0xFF5
 12963                           prodh	equ	0xFF4
 12964                           prodl	equ	0xFF3
 12965                           intcon	equ	0xFF2
 12966                           intcon2	equ	0xFF1
 12967                           postinc0	equ	0xFEE
 12968                           fsr0h	equ	0xFEA
 12969                           fsr0l	equ	0xFE9
 12970                           wreg	equ	0xFE8
 12971                           indf1	equ	0xFE7
 12972                           postinc1	equ	0xFE6
 12973                           postdec1	equ	0xFE5
 12974                           fsr1h	equ	0xFE2
 12975                           fsr1l	equ	0xFE1
 12976                           bsr	equ	0xFE0
 12977                           indf2	equ	0xFDF
 12978                           postinc2	equ	0xFDE
 12979                           postdec2	equ	0xFDD
 12980                           fsr2h	equ	0xFDA
 12981                           fsr2l	equ	0xFD9
 12982                           status	equ	0xFD8
 12983                           
 12984                           	psect	param0
 12985  0000                     pclatu	equ	0xFFB
 12986                           pclath	equ	0xFFA
 12987                           tblptru	equ	0xFF8
 12988                           tblptrh	equ	0xFF7
 12989                           tblptrl	equ	0xFF6
 12990                           tablat	equ	0xFF5
 12991                           prodh	equ	0xFF4
 12992                           prodl	equ	0xFF3
 12993                           intcon	equ	0xFF2
 12994                           intcon2	equ	0xFF1
 12995                           postinc0	equ	0xFEE
 12996                           fsr0h	equ	0xFEA
 12997                           fsr0l	equ	0xFE9
 12998                           wreg	equ	0xFE8
 12999                           indf1	equ	0xFE7
 13000                           postinc1	equ	0xFE6
 13001                           postdec1	equ	0xFE5
 13002                           fsr1h	equ	0xFE2
 13003                           fsr1l	equ	0xFE1
 13004                           bsr	equ	0xFE0
 13005                           indf2	equ	0xFDF
 13006                           postinc2	equ	0xFDE
 13007                           postdec2	equ	0xFDD
 13008                           fsr2h	equ	0xFDA
 13009                           fsr2l	equ	0xFD9
 13010                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         312
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     83      97
    BANK0           128     80     112
    BANK1           256    102     201
    BANK2           256      0     201
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK2[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK2[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[15]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK2[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK2[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[15]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> motorMove@direction(COMRAM[2]), main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 15
		 -> main@uc(BANK1[15]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 15
		 -> NULL(NULL[0]), main@uc(BANK1[15]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 6
		 -> i2c_slave_int_handler@ack_1696(BANK0[6]), i2c_slave_int_handler@dist(BANK0[6]), i2c_slave_int_handler@ack(BANK0[6]), i2c_slave_int_handler@message(BANK0[6]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 15
		 -> NULL(NULL[0]), main@uc(BANK1[15]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[15]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_adc_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_motorMove
    _motorMove->i1_uart_trans
    _adc_int_handler->___ftdiv
    ___fttol->___ftpack
    ___ftmul->___awtoft
    ___ftdiv->___ftadd
    ___ftadd->___fttol
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->i2_motorMove
    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    i2_motorMove->i2_uart_trans
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                70    70      0   10503
                                             36 BANK1     66    66      0
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     124
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2619
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     211
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2107
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1935
                                             10 BANK1     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4     428
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2337
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2337
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2165
                                             10 BANK1     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     438
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     524
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     260
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0   15371
                                             66 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3117
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3094
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2816
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   9     9      0    1377
                                             12 COMRAM     9     9      0
                        _WriteTimer1
                          _motorMove
 ---------------------------------------------------------------------------------
 (7) _motorMove                                            7     4      3    1151
                                              5 COMRAM     7     4      3
                        _WriteTimer0
                        _WriteTimer1
                       i1_uart_trans
 ---------------------------------------------------------------------------------
 (8) i1_uart_trans                                         5     3      2     191
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2     176
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _WriteTimer0                                          4     2      2     150
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                     16    16      0   10877
                                             50 COMRAM    16    16      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                       i1_SetChanADC
                          i1___awmod
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     873
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) i1_SetChanADC                                         2     2      0      73
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             15    11      4     305
                                              8 COMRAM    15    11      4
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             15     9      6    2197
                                             13 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftge                                               9     3      6     242
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (7) ___ftdiv                                             15     9      6    2257
                                             35 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             12     6      6    2897
                                             23 COMRAM    12     6      6
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    1685
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             5     2      3    1829
                                              8 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    9154
                                             66 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  9     9      0    2442
                                             12 BANK0      9     9      0
                      i2_WriteTimer0
                        i2_motorMove
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    6476
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              40    40      0    6476
                                             26 BANK0     40    40      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
                        i2_motorMove
 ---------------------------------------------------------------------------------
 (12) i2_motorMove                                         7     4      3    2037
                                              5 BANK0      7     4      3
                      i2_WriteTimer0
                      i2_WriteTimer1
                       i2_uart_trans
 ---------------------------------------------------------------------------------
 (13) i2_uart_trans                                        5     3      2     235
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer1                                       4     2      2     310
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (13) i2_WriteTimer0                                       4     2      2     355
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     278
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3242
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2752
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     662
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4     809
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftpack
       ___fttol (ARG)
         ___ftpack (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftpack
         ___fttol (ARG)
           ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___ftpack (ARG)
     i1_SetChanADC
     i1___awmod
   _timer1_int_handler
     _WriteTimer1
     _motorMove
       _WriteTimer0
       _WriteTimer1
       i1_uart_trans
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
       i2_motorMove
         i2_WriteTimer0
         i2_WriteTimer1
         i2_uart_trans
   _timer0_int_handler
     i2_WriteTimer0
     i2_motorMove
       i2_WriteTimer0
       i2_WriteTimer1
       i2_uart_trans

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C9       8       78.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     66      C9       6       78.5%
BITBANK0            80      0       0       3        0.0%
BANK0               80     50      70       4       87.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     53      61       1       76.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     263      11        0.0%
DATA                 0      0     263      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Apr 07 17:32:38 2014

     i2c_slave_int_handler@ack_1696 00A2            _MQ_Main_Willing_to_block 00EA  
                       _SSPSTATbits 000FC7           __end_of_ToMainLow_recvmsg 2AA2  
                                bsr 000FE0           __end_of_ToMainLow_sendmsg 2CAC  
              __end_ofi1_uart_trans 1F6C                        __CFG_CP0$OFF 000000  
      i2c_slave_int_handler@bitmask 00AF                        ___ftadd@exp1 0023  
                      ___ftadd@exp2 0022                 __end_ofi2_motorMove 2130  
           i2motorMove@leftDistance 0086                        ___ftadd@sign 0021  
                               l160 0ACA                                 l612 2C58  
                               l613 2C5A                                 l636 2B3E  
                               l638 2B56                                 l639 2B58  
                               l680 2196                                 l593 24FA  
                               l673 2164                                 l906 2D24  
                               l677 2184                                 l678 2186  
                               l679 2194     __size_of_uart_trans_int_handler 0068  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
      i2c_slave_int_handler@message 00B6                        ___awmod@sign 0106  
                    _FromMainLow_MQ 0243       i2c_slave_int_handler@checksum 00B0  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
         i2c_slave_int_handler@dist 00A8                        ?_in_high_int 0100  
                  ??_init_uart_recv 0102          i2c_slave_int_handler@F5143 00D0  
        i2c_slave_int_handler@F5145 00D6          i2c_slave_int_handler@F5147 00E4  
                      ___ftdiv@cntr 002D                        ___ftdiv@sign 0032  
                              l1218 2360                                l3320 2A50  
                              l3306 29C6                                l4210 2318  
                              l4214 234C                                l4206 22FE  
                              l4160 14E2                                l4208 2310  
                              l4180 157A                                l4172 154E  
                              l4164 1500                                l4156 14BC  
                              l3700 25C4                                l3460 0A78  
                              l3452 0A36                                l3534 2B40  
                              l4166 1512                                l3462 0AD0  
                              l4168 151A                                l4176 1562  
                              l3640 23BC                                l3480 0BE8  
                              l3298 29A4                                l3634 238C  
                              l3474 0B4E                                l3466 0AF0  
                              l3732 28A2                                l3660 1D40  
                              l3484 0C2E                                l3476 0BA0  
                              l3468 0B10                                l3582 2166  
                              l3574 2150                                l3646 23EC  
                              l3718 127A                                l3752 0FEE  
                              l3680 10FC                                l3656 1CD6  
                              l3488 0C32                                l3738 28C6  
                              l3684 1180                                l3768 10DC  
                              _LATA 000F89                                _LATB 000F8A  
                              u4237 2D26                                i1l71 0084  
                   _FromMainHigh_MQ 0200                __end_ofi2_uart_trans 1E28  
                     __CFG_FCMEN$ON 000000              ?_block_on_To_msgqueues 0001  
                              _main 095E                        ___ftpack@arg 0001  
                      ___ftpack@exp 0004                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 0138  
                        i1_send_msg 1C00              __size_ofi2_WriteTimer0 0012  
            __size_ofi2_WriteTimer1 0012                                pclat 000FFA  
                       i2_check_msg 2BFE                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 0080  
                              start 00CA                       __CFG_FOSC2$ON 000000  
                  ?_adc_int_handler 0001                  i1uart_trans@length 0005  
                        i2_send_msg 134A                        ___ftmul@cntr 001B  
         ToMainHigh_recvmsg@msgtype 0118                        ___ftmul@sign 001C  
                    send_msg@length 010C                     __end_of_OpenADC 24FE  
                      ___fttol@exp1 0017         __size_of_timer0_int_handler 0094  
                      ___fttol@lval 0013             ??_i2c_slave_int_handler 009A  
                       _Delay1KTCYx 2D20                               ?_main 0001  
                   __end_of___ftadd 0E04                     __end_of___awmod 1584  
                   __end_of___ftdiv 1A74                     __end_of___ftmul 1898  
                             _T0CON 000FD5                               _T1CON 000FCD  
                   __end_of___fttol 198E                     __end_of___lwmod 236A  
                        i1memcpy@d1 0001                               i2l400 04A2  
                             i1l472 2816                               i1l548 0F76  
                             i2l406 0542                               i2l335 1AF4  
                             i1l691 2CF8                               i2l372 0530  
                             i2l374 0196                               i2l392 036A  
                             i2l378 01DA                          i1memcpy@s1 0003  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _PORTA 000F80  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TRISC 000F94                               _TXREG 000FAD  
                             _TXSTA 000FAC                          i2memcpy@d1 0080  
                        i2memcpy@s1 0082                        ?_init_queues 0001  
         __size_of_enter_sleep_mode 0006                      i1___awmod@sign 0007  
                   __end_of_in_main 2A60                       ___awtoft@sign 000D  
        ToMainLow_recvmsg@maxlength 011C                       ___ftpack@sign 0005  
           timer0_lthread@msgbuffer 0106             i2c_configure_slave@addr 0100  
                             tablat 000FF5                               status 000FD8  
            _uart_trans_int_handler 27B2                    __end_ofi1_memcpy 2B24  
                __size_ofi1___awmod 009C                    __end_ofi2_memcpy 293C  
                __size_ofi2___awmod 010E                     __initialization 2252  
                       i2_motorMove 209C                        __end_of_main 0C4C  
       __size_of_timer1_int_handler 007E          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0026               __size_ofi2_in_low_int 0046  
     __size_of_FromMainHigh_sendmsg 0036                              ??_main 0124  
                     ___fttol@sign1 0012                       i2_WriteTimer0 2DB6  
                     i2_WriteTimer1 2DA4                     send_msg@msgtype 010D  
                     __activetblptr 000002                     send_msg@tlength 0111  
                        _SetChanADC 2CAC                __end_of_handle_start 1B40  
        timer0_int_handler@motormsg 008F                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ADRESH 000FC4             ??_uart_recv_int_handler 001B  
                  __end_of___awtoft 2990                    __end_of___ftpack 1ED0  
                   _leftDistDesired 00EB                              i1l1033 0C92  
                            i1l1037 0CBE                              i1l1048 0D6E  
                            i1l1057 0D8A                              i1l1067 1A1C  
                            i1l1068 1A42                              i1l4130 1E84  
                            i1l4122 1E46                              i1l4132 1EA2  
                            i1l4124 1E50                              i1l4134 1EAC  
                            i1l4126 1E6E                              i1l4118 1E38  
                            i1l4332 2B12                              i1l4422 2832  
                            i1l4326 2AF6                              i1l4192 2222  
                            i1l4360 1FC6                              i1l4352 1F98  
                            i1l4272 1EE6                              i1l4506 0DDE  
                            i1l4362 1FCE                              i1l4188 21F2  
                            i1l4700 185E                              i1l4364 1FD2  
                            i1l4372 1FF0                              i1l4356 1FB4  
                            i1l4276 1F40                              i1l4428 2844  
                            i1l4518 2968                              i1l4470 0D00  
                            i1l4454 0CCC                              i1l4622 19B4  
                            i1l4198 224E                              i1l4550 193E  
                            i1l4480 0D34                              i1l4448 0CA0  
                            i1l4560 1966                              i1l4528 18C2  
                            i1l4376 1FFE                              i1l4368 1FE6  
                            i1l4712 0E1E                              i1l4490 0D68  
                            i1l4482 0D3C                              i1l4546 192E  
                            i1l4722 0F2A                              i1l4714 0E2A  
                            i2l4020 08A8                              i1l4476 0D22  
                            i1l4628 19DA                              i1l4564 197C  
                            i1l4556 1956                              i1l4732 0F62  
                            i1l4724 0F32                              i1l4580 1C38  
                            i1l4478 0D2C                              i1l4558 1962  
                            i2l4008 085C                              i1l4496 0DA6  
                            i1l4488 0D5E                              i1l4672 17EC  
                            i1l4752 1B9C                          _OpenTimer0 2C34  
                            i2l3330 242E                              i1l4690 1832  
                            i1l4666 17C6                              i1l4770 0066  
                        _OpenTimer1 2B24                              i2l4300 20BC  
                            i2l4028 094C                              i2l4230 29EA  
                            i1l4686 1822                              i1l4758 1BE0  
                    __CFG_WDTEN$OFF 000000                              i2l4400 1736  
                            i1l4696 184E                              i2l4306 20D8  
                            i2l3338 243C                              i1l4778 0074  
                            i2l4412 1796                              i2l4404 176A  
                            i2l4238 2A0C                              i2l3366 26E4  
                            i2l4342 2924                              i2l4254 13A6  
                            i2l4408 177E                              i2l4336 2900  
                            i2l4284 1D8A                              i2l3814 15A0  
                            i2l4392 16FE                              i2l4288 1DF4  
                            i2l3920 0420                              u400_21 199E  
                            i2l3834 1B10                              i2l3818 1624  
                            i2l4396 171C                              i2l4388 16D8  
                            i2l3836 1B28                              i2l3924 0432  
                            i2l3852 0174                              i2l4398 172E  
                            i2l3918 03DE                              i2l3952 0546  
                            i2l3946 0504                              i2l3858 018C  
                            i2l3876 0212                              i2l3974 06E6  
                            i2l3966 0640                              i2l3958 05A6  
                            i2l3894 0292                              i2l3878 023E  
                            i2l3896 02D2                              i2l3888 027A  
                            u402_21 19C4                              i2l3996 0796  
                            u405_21 17B0                              u407_21 17D6  
       __end_of_i2c_configure_slave 2C86                       ??_SleepIfOkay 0084  
                            u366_21 0C5C                  __size_of_ReadUSART 001E  
                            u367_21 0C70                              _OSCCON 000FD3  
                            u388_21 18A8                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
    __size_of_start_i2c_slave_reply 010E                         ?i1_send_msg 000B  
     __end_of_start_i2c_slave_reply 1692                  timer0_lthread@tptr 0100  
                         ??_OpenADC 0102                        i2_in_low_int 29D6  
                       ?i2_send_msg 008A                      __CFG_XINST$OFF 000000  
             __size_ofi1_uart_trans 009C                  __size_of_OpenUSART 0092  
                            ___ftge 21C2                     _i2c_int_handler 2DEA  
                         ??___ftadd 001E                           ??___awmod 0104  
                         ??___ftdiv 002A   i2c_slave_int_handler@data_written 00B4  
                   _i2c_master_send 10E0                           ??___ftmul 0014  
                         ??___fttol 000D                    OpenTimer0@config 0100  
                            _ic_ptr 01C5                           ??___lwmod 0104  
                     main@msgbuffer 0129                    __end_of_init_i2c 27B2  
                  OpenTimer1@config 0100                              _memcpy 2880  
                            clear_0 2258                              clear_1 2264  
                            clear_2 2270                     ___awmod@divisor 0102  
                            _uc_ptr 0060                      ?i2_WriteTimer0 0080  
                    ?i2_WriteTimer1 0080                     ___awmod@counter 0105  
          i2c_slave_int_handler@ack 009C                              main@ic 0149  
                            main@uc 013A                    __end_of_recv_msg 10E0  
       start_i2c_slave_reply@length 0084               ___ftmul@f3_as_product 0018  
                         ??_in_main 0106                   __end_ofi1___awmod 2008  
                  __end_of_send_msg 134A                        __pdataCOMRAM 0054  
                 __end_ofi2___awmod 17A0              motorMove@rightDistance 0008  
                i2uart_trans@length 0084                 adc_int_handler@dist 0037  
                            tblptrh 000FF7                              tblptrl 000FF6  
           timer1_int_handler@F5122 0054             timer1_int_handler@F5124 005A  
                            tblptru 000FF8                         init_queue@i 0103  
             __size_ofi2_uart_trans 00B4                      i2___awmod@sign 0086  
          ToMainLow_recvmsg@msgtype 0118                __size_of_in_high_int 0012  
                   __CFG_FOSC$HSPLL 000000                     i2motorMove@left 008B  
                        __accesstop 0080                        i1_uart_trans 1ED0  
           __end_of__initialization 22D6          __end_of_ToMainHigh_recvmsg 2AE4  
        __end_of_ToMainHigh_sendmsg 2BFE                          ___ftadd@f1 0018  
                        ___ftadd@f2 001B                          ___ftge@ff1 0001  
                        ___ftge@ff2 0004                          ___ftdiv@f1 0024  
                        ___ftdiv@f2 0027                          ___ftdiv@f3 002E  
                        ___awtoft@c 0009                    i1uart_trans@data 0001  
                        ___ftmul@f1 000E                          ___ftmul@f2 0011  
       __end_of_init_timer1_lthread 2D6E                 __end_of_SleepIfOkay 2748  
                        ___fttol@f1 0009                      __pcstackCOMRAM 0001  
                      __pidataBANK0 2D36                        __pidataBANK1 2DF6  
            __size_ofi2_in_high_int 0012                  __size_of_check_msg 0036  
                 __end_of_ReadUSART 2D08                        i2_uart_trans 1D74  
               i1SetChanADC@channel 0002                         ?_SetChanADC 0001  
               __size_ofi1_send_msg 00C0                           ?i1_memcpy 0001  
     __size_of_InterruptHandlerHigh 2472         __end_of_InterruptHandlerLow 00CA  
                         ?i2_memcpy 0080                       _ToMainHigh_MQ 0286  
                  _enter_sleep_mode 2DF0                 __size_ofi2_send_msg 012C  
              timer1_lthread@length 011E                       ReadUSART@data 0001  
                 __end_of_OpenUSART 21C2                       check_msg@qptr 0100  
              timer1_lthread@retval 0123             ??_block_on_To_msgqueues 0106  
              __size_of_init_queues 0072                          __pbssBANK0 00E4  
                        __pbssBANK1 0166                          __pbssBANK2 0200  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 0060             __end_of_i2c_int_handler 2DF0  
                      ?i2_check_msg 0080             __end_of_i2c_master_send 121E  
                timer1_lthread@tptr 011A                             ?___ftge 0001  
       timer0_int_handler@motorcomm 008D                   recv_msg@maxlength 010C  
                   recv_msg@msgtype 010D                     ??i2_WriteTimer0 0082  
                   ??i2_WriteTimer1 0082                     recv_msg@tlength 0114  
             __size_of_handle_start 00CC                        ?_Delay1KTCYx 0001  
                  WriteTimer0@timer 0003                             ?_memcpy 0100  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 0003  
                     ??_WriteTimer1 0003                           ?___awtoft 0009  
                         ?___ftpack 0001      __size_of_i2c_slave_int_handler 0890  
           __size_of_timer0_lthread 0012       __end_of_i2c_slave_int_handler 095E  
                __size_of_motorMove 0066             __size_of_timer1_lthread 0072  
                        ??i1_memcpy 0007                          ??i2_memcpy 0086  
                  i1send_msg@length 000D                       i2_in_high_int 2DC8  
                           _SSPCON1 000FC6                             _SSPCON2 000FC5  
                           _SSPSTAT 000FC7             ?_uart_trans_int_handler 0001  
                 __end_of_check_msg 2BC8                           ?_init_i2c 0100  
                       _SleepIfOkay 26DA                 i2WriteTimer0@timer0 0080  
               i2WriteTimer1@timer1 0080                           ?_recv_msg 010A  
                           _OpenADC 247A                          _in_low_int 2990  
                      _handle_start 1A74                             __Hparam 0000  
               __size_of_SetChanADC 0020                           ?_send_msg 010A  
                           __Lparam 0000          __end_of_timer0_int_handler 209C  
                      ?i2_motorMove 0085                    adc_int_handler@k 003A  
                  init_uart_recv@uc 0100                     __size_of___ftge 0090  
                           ___ftadd 0C4C                             ___awmod 1476  
                           ___ftdiv 198E                             ___ftmul 17A0  
                           ___fttol 1898                             ___lwmod 22E0  
                   __CFG_STVREN$OFF 000000  i2c_slave_int_handler@overrun_error 00B5  
                           __pcinit 2252                     __size_of_memcpy 005E  
                        ??___awtoft 000C                          ??___ftpack 0006  
          __size_of_adc_int_handler 017E                          _init_queue 257C  
                           __ramtop 0400                 __size_of_OpenTimer0 002A  
               __size_of_OpenTimer1 0038                             __ptext0 095E  
                           __ptext1 1CC0                             __ptext2 25F6  
                           __ptext3 22E0                             __ptext4 2B5C  
                           __ptext5 121E                             __ptext6 2D4A  
                           __ptext7 2CCC                             __ptext8 2D5C  
                           __ptext9 2668                           _T0CONbits 000FD5  
                           _in_main 2A1C                           _T1CONbits 000FCD  
                  ___awmod@dividend 0100                 __end_of_WriteTimer0 2DA4  
               __end_of_WriteTimer1 2D92                      ?i2_in_high_int 0080  
    __end_of_uart_trans_int_handler 281A                      OpenADC@config2 0100  
                           main@msg 0126                      __pintcode_body 23F4  
              end_of_initialization 22D6             timer1_lthread@msgbuffer 0120  
      __end_of_FromMainHigh_sendmsg 2B92      __size_of_uart_recv_int_handler 00C0  
        FromMainHigh_sendmsg@length 0119                             memcpy@d 0106  
                           memcpy@n 0104                             memcpy@s 0108  
     __end_of_uart_recv_int_handler 1C00                          ??_init_i2c 0102  
                     __Lmediumconst 0000                             int_func 23F4  
                      ??i1_send_msg 0011                   __end_of_motorMove 2880  
          adc_int_handler@roundDist 0041             __size_of_init_uart_recv 001E  
                  ?_i2c_int_handler 0001                       ?i1_SetChanADC 0001  
                  ?_i2c_master_send 0100                          ??_recv_msg 0111  
                      ??i2_send_msg 0090                          ??_send_msg 0110  
        __end_of_timer1_int_handler 257C                           _RCSTAbits 000FAB  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0096  
                        _uart_trans 1CC0                           _PORTAbits 000F80  
                __end_ofi1_send_msg 1CC0         FromMainHigh_sendmsg@msgtype 0116  
                         _TRISCbits 000F94                    i2motorMove@right 0085  
                         i1___awmod 1F6C                  __end_ofi2_send_msg 1476  
                         i2___awmod 1692                         ___ftdiv@exp 0031  
                    ??i1_SetChanADC 0001                           _TXSTAbits 000FAC  
                        main@length 0139                         ?_in_low_int 0102  
             timer0_lthread@msgtype 0102               _start_i2c_slave_reply 1584  
                       ___ftmul@exp 0017        __size_of_i2c_configure_slave 0028  
              __size_ofi2_check_msg 0036            __end_of_enter_sleep_mode 2DF6  
                    __end_of___ftge 2252                  _ToMainHigh_recvmsg 2AA2  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 2BC8  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
         i2c_master_send@recvlength 0100                       __pidataCOMRAM 2DDA  
                    _timer0_lthread 2D4A                         ?_init_queue 0100  
                         i2memcpy@d 0086                         _WriteTimer0 2D92  
                       _WriteTimer1 2D80                           i2memcpy@n 0084  
                         i2memcpy@s 0088                      _timer1_lthread 25F6  
                    __end_of_memcpy 28DE                   _enable_interrupts 2DE2  
              __size_of_Delay1KTCYx 0016                        ??_SetChanADC 0100  
         i2c_master_send@sendlength 0106                 ?_ToMainHigh_recvmsg 0118  
                   ??i2_in_high_int 0082                 ?_ToMainHigh_sendmsg 0096  
                ?_enable_interrupts 0001                 start_initialization 2252  
                     ??_in_high_int 0102                           _ReadUSART 2CEA  
                 ??_adc_int_handler 0033                          ?i1___awmod 0001  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 005E  
         i2c_master_send@slave_addr 0103                          ?i2___awmod 0080  
               ??_enable_interrupts 0100                        ??_OpenTimer0 0100  
                      ??_OpenTimer1 0100      __size_of_block_on_To_msgqueues 008A  
     __end_of_block_on_To_msgqueues 23F4                           _OpenUSART 2130  
      __end_of_InterruptHandlerHigh 247A                          init_i2c@ic 0100  
                motorMove@direction 000A                ??_ToMainHigh_recvmsg 011C  
              ??_ToMainHigh_sendmsg 0099                  __end_of_SetChanADC 2CCC  
                          ??___ftge 0007              __end_of_timer0_lthread 2D5C  
                       __pdataBANK0 00D0                         __pdataBANK1 01C7  
            __end_of_timer1_lthread 2668                  i1___awmod@dividend 0001  
              __size_ofi2_motorMove 0094           __end_of_enable_interrupts 2DEA  
                          ??_memcpy 0106               timer1_lthread@msgtype 011C  
                       ?_uart_trans 0100                _FromMainHigh_sendmsg 2B5C  
          i2motorMove@rightDistance 0087        __size_of_init_timer1_lthread 0012  
                __end_of_OpenTimer0 2C5E                  __end_of_OpenTimer1 2B5C  
                 __size_of___awtoft 0054                   __size_of___ftpack 00A8  
                       __pbssCOMRAM 005C                          ?_ReadUSART 0001  
                     ??_init_queues 0104                       __pcstackBANK0 0080  
                     __pcstackBANK1 0100                 __size_of_in_low_int 0046  
          start_i2c_slave_reply@msg 0080                           _adcbuffer 0166  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 0100  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 00B2  
    i2c_slave_int_handler@data_read 00C1                 __end_of_in_high_int 2D80  
                        ?_OpenUSART 0100                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 011A                        _ToMainLow_MQ 0182  
               __size_of_init_queue 007A                      _init_uart_recv 2CCC  
                         _check_msg 2B92                           __pnvBANK1 01C5  
            ?_start_i2c_slave_reply 0080                   __size_of_init_i2c 006A  
                 OpenADC@portconfig 0101                            ?_OpenADC 0100  
                    motorMove@right 0006                        recv_msg@data 010F  
                      recv_msg@qmsg 0116                        recv_msg@slot 0113  
                      recv_msg@qptr 010A                   __size_of_recv_msg 015E  
                         __pintcode 0008                   __size_of_send_msg 012C  
                          ?___ftadd 0018                            ?___awmod 0100  
                          ?___ftdiv 0024                     ?_timer0_lthread 0100  
                          ?___ftmul 000E                            ?___fttol 0009  
       timer1_int_handler@motorcomm 000E                            ?___lwmod 0100  
                   ?_timer1_lthread 011A               ?_FromMainHigh_sendmsg 0116  
                       __pintcodelo 0018                           _distMoved 005F  
            ToMainHigh_recvmsg@data 011A               __end_ofi2_WriteTimer0 2DC8  
             __end_ofi2_WriteTimer1 2DB6                            ?_in_main 0104  
                 WriteTimer0@timer0 0001                __end_ofi1_SetChanADC 2D20  
                _timer0_int_handler 2008                   WriteTimer1@timer1 0001  
             _i2c_slave_int_handler 00CE                  i2WriteTimer0@timer 0082  
                i2WriteTimer1@timer 0082      i2c_slave_int_handler@error_buf 00B1  
                       ??i1___awmod 0005               ToMainLow_sendmsg@data 0018  
                       ??i2___awmod 0084                 ?_timer0_int_handler 0001  
    i2c_slave_int_handler@msg_ready 00BE              __end_of_init_uart_recv 2CEA  
               __end_of_init_queues 26DA         i2c_slave_int_handler@length 00BF  
               __size_of_uart_trans 00B4                       OpenADC@config 0104  
                          _LATBbits 000F8A                     i2check_msg@qptr 0080  
                        ?_check_msg 0100                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D                       ?i2_in_low_int 0082  
                          i1u390_20 18E0                            i1u390_25 18D8  
                          i2u303_41 07AE                            i2u231_41 203A  
                          i2u305_41 0874                            i2u307_41 08C0  
                          i1u398_21 252A                            _PIR1bits 000F9E  
            ToMainHigh_sendmsg@data 0097                            _RCONbits 000FD0  
                         _motorMove 281A                    __CFG_WDTPS$32768 000000  
                         main@F5223 01C7                ??_timer0_int_handler 008C  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012                          _ADCON0bits 000FC2  
              timer0_lthread@length 0104                  _timer1_int_handler 24FE  
                          i1_memcpy 2AE4                _InterruptHandlerHigh 0008  
                       _leftEncoder 00EC                         ??_ReadUSART 0001  
                          i2_memcpy 28DE                timer0_lthread@msgval 0108  
                       _in_high_int 2D6E                        send_msg@data 010E  
               _i2c_configure_slave 2C5E                        send_msg@qmsg 0114  
                      send_msg@slot 0113                        send_msg@qptr 010A  
                       _INTCON2bits 000FF1                           copy_data0 22AA  
                         copy_data1 22CA                 ?_timer1_int_handler 0001  
                i2___awmod@dividend 0080                     ?_init_uart_recv 0100  
                     ?i1_uart_trans 0001                         ??_OpenUSART 0102  
                   OpenUSART@config 0105                      ??i2_in_low_int 0084  
                          __Hparam0 0000               _uart_recv_int_handler 1B40  
                      ??_in_low_int 0104                            __Lparam0 0000  
                  __size_of_OpenADC 0084                ?_i2c_configure_slave 0001  
                        ?_motorMove 0006                   ?_enter_sleep_mode 0001  
                  i2uart_trans@data 0080              ??_FromMainHigh_sendmsg 0119  
                 i1___awmod@divisor 0003                ??_timer1_int_handler 000D  
                 i1___awmod@counter 0006                     _adc_int_handler 0E04  
  i2c_slave_int_handler@messageType 00AE                    __size_of___ftadd 01B8  
          __size_of_i2c_int_handler 0006                    __size_of___awmod 010E  
                      _rightEncoder 00EE                    __size_of___ftdiv 00E6  
                ??_enter_sleep_mode 0080                    __size_of___ftmul 00F8  
          __size_of_i2c_master_send 013E                    __size_of___fttol 00F6  
                  __size_of___lwmod 008A                        ??_init_queue 0102  
                      ?_WriteTimer0 0001                        ?_WriteTimer1 0001  
          FromMainHigh_sendmsg@data 0117                            ___awtoft 293C  
                          ___ftpack 1E28                       ?i2_uart_trans 0080  
           ToMainLow_sendmsg@length 001A              ?_i2c_slave_int_handler 0001  
                 main@t0thread_data 0134               ?_InterruptHandlerHigh 0001  
             motorMove@leftDistance 0007                    __size_of_in_main 0044  
                 i2send_msg@msgtype 008D         ToMainHigh_recvmsg@maxlength 011C  
                     motorMove@left 000C                   i2send_msg@tlength 0091  
           init_timer1_lthread@tptr 0100                         _init_queues 2668  
                __end_of_in_low_int 29D6                            __ptext10 257C  
                          __ptext11 2748                            __ptext20 2D20  
                          __ptext12 10E0                            __ptext21 2A60  
                          __ptext13 2C5E                            __ptext30 247A  
                          __ptext22 2AA2                            __ptext14 2DE2  
                          __ptext23 0F82                            __ptext15 236A  
                          __ptext40 1ED0                            __ptext32 27B2  
                          __ptext24 2880                            __ptext16 2A1C  
                          __ptext41 2D80                            __ptext33 1B40  
                          __ptext25 1476                            __ptext17 2990  
                          __ptext50 0C4C                            __ptext42 2D92  
                          __ptext34 2C86                            __ptext26 2CAC  
                          __ptext18 2D6E                            __ptext51 1E28  
                          __ptext43 0E04                            __ptext35 1C00  
                          __ptext27 2130                            __ptext19 2B92  
                          __ptext60 2DB6                            __ptext52 293C  
                          __ptext44 1F6C                            __ptext36 2AE4  
                          __ptext28 2B24                            __ptext61 1584  
                          __ptext45 2D08                            __ptext37 2CEA  
                          __ptext29 2C34                            __ptext70 2BFE  
                          __ptext62 1A74                            __ptext54 2008  
                          __ptext46 1898                            __ptext38 24FE  
                          __ptext71 2DF0                            __ptext63 2BC8  
                          __ptext55 2DEA                            __ptext47 17A0  
                          __ptext39 281A                            __ptext64 134A  
                          __ptext56 00CE                            __ptext48 21C2  
                          __ptext65 28DE                            __ptext57 209C  
                          __ptext49 198E                            __ptext66 1692  
                          __ptext58 1D74                            __ptext67 26DA  
                          __ptext59 2DA4                            __ptext68 29D6  
                          __ptext69 2DC8          timer1_int_handler@motormsg 0010  
                    i1send_msg@data 000F              adc_int_handler@channel 003F  
                    i1send_msg@qmsg 0015                      i1send_msg@slot 0014  
                    i1send_msg@qptr 000B                      ??i1_uart_trans 0003  
                          _init_i2c 2748                 _init_timer1_lthread 2D5C  
                     __size_of_main 02EE                       ??i2_check_msg 0082  
                 main@t1thread_data 0136                         ??_check_msg 0102  
                __end_of_init_queue 25F6                __size_of_SleepIfOkay 006E  
                          _recv_msg 0F82    i2c_slave_int_handler@msg_to_send 00BD  
             ??_i2c_configure_slave 0100                            _send_msg 121E  
            adc_int_handler@voltage 003C                      init_queue@qptr 0100  
                     ??_Delay1KTCYx 0100               __size_ofi1_SetChanADC 0018  
                    ??i2_uart_trans 0082                            _stopCond 00EF  
                  uart_trans@length 0104                        ??_uart_trans 0102  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 0100  
          ??_uart_trans_int_handler 0001                   i2___awmod@divisor 0082  
                 i2___awmod@counter 0085                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2                        _UART_timeout 005C  
                    OpenUSART@spbrg 0100                            memcpy@d1 0100  
                          memcpy@s1 0102             timer0_int_handler@F5120 00E2  
           timer0_int_handler@F5118 00DC               __end_ofi2_in_high_int 2DDA  
                  i2send_msg@length 008C                            intlevel1 0000  
                          intlevel2 0000                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 0082                    ___lwmod@dividend 0100  
            ?_uart_recv_int_handler 0001                  __end_of_uart_trans 1D74  
                 SetChanADC@channel 0101               _block_on_To_msgqueues 236A  
                     ?_handle_start 0001                    ??_timer0_lthread 0108  
       __size_of_ToMainHigh_recvmsg 0042                        i1_SetChanADC 2D08  
           __end_of_adc_int_handler 0F82         __size_of_ToMainHigh_sendmsg 0036  
                        _OSCCONbits 000FD3                    ??_timer1_lthread 0122  
                     ??i2_motorMove 0088                         ??_motorMove 0009  
          ToMainHigh_sendmsg@length 0099                 __end_ofi2_check_msg 2C34  
             ??_init_timer1_lthread 0102              ??_InterruptHandlerHigh 00C2  
                 _ToMainLow_recvmsg 2A60                   _ToMainLow_sendmsg 2C86  
                main@last_reg_recvd 0128                     ___lwmod@divisor 0102  
              __end_ofi2_in_low_int 2A1C                  ?_ToMainLow_recvmsg 0118  
               __end_of_Delay1KTCYx 2D36                   ??_i2c_int_handler 00C2  
                   ___lwmod@counter 0105                  ?_ToMainLow_sendmsg 0017  
                 ??_i2c_master_send 0104                  i2c_master_send@msg 0101  
                    uart_trans@data 0100                         _SSPCON1bits 000FC6  
                       _SSPCON2bits 000FC5                      i2send_msg@data 008E  
             ??_InterruptHandlerLow 0043                 ??_ToMainLow_recvmsg 011C  
                    i2send_msg@qmsg 0094                      i2send_msg@slot 0093  
                    i2send_msg@qptr 008A                 ??_ToMainLow_sendmsg 001A  
     i2c_slave_int_handler@i2c_data 00BC                    _rightDistDesired 00ED  
                    ??_handle_start 0080                i2motorMove@direction 0089  
                      _USART_Status 005E  
