

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Fri May 02 21:47:18 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    95                           	psect	param0,global,class=BANK0,space=1,delta=1
    96  0000                     
    97                           	psect	idataCOMRAM
    98  002DD6                     __pidataCOMRAM:
    99                           	opt stack 0
   100                           
   101                           ;initializer for timer0_int_handler@F5118
   102  002DD6  40                 	db	64
   103  002DD7  40                 	db	64
   104                           
   105                           ;initializer for timer1_int_handler@F5120
   106  002DD8  C0                 	db	192
   107  002DD9  C0                 	db	192
   108                           
   109                           	psect	idataBANK0
   110  002DC4                     __pidataBANK0:
   111                           	opt stack 0
   112                           
   113                           ;initializer for i2c_slave_int_handler@F5145
   114  002DC4  04                 	db	4
   115  002DC5  00                 	db	0
   116  002DC6  00                 	db	0
   117  002DC7  00                 	db	0
   118  002DC8  00                 	db	0
   119  002DC9  00                 	db	0
   120                           
   121                           	psect	idataBANK1
   122  002DDA                     __pidataBANK1:
   123                           	opt stack 0
   124                           
   125                           ;initializer for main@F5223
   126  002DDA  01                 	db	1
   127  002DDB  02                 	db	2
   128  0000                     _ADCON0	set	4034
   129  0000                     _ADCON0bits	set	4034
   130  0000                     _ADCON1	set	4033
   131  0000                     _ADCON2	set	4032
   132  0000                     _ADRESH	set	4036
   133  0000                     _INTCON2bits	set	4081
   134  0000                     _INTCONbits	set	4082
   135  0000                     _IPR1bits	set	3999
   136  0000                     _LATA	set	3977
   137  0000                     _LATB	set	3978
   138  0000                     _LATBbits	set	3978
   139  0000                     _OSCCON	set	4051
   140  0000                     _OSCCONbits	set	4051
   141  0000                     _OSCTUNEbits	set	3995
   142  0000                     _PIE1bits	set	3997
   143  0000                     _PIR1bits	set	3998
   144  0000                     _PORTA	set	3968
   145  0000                     _PORTAbits	set	3968
   146  0000                     _RCONbits	set	4048
   147  0000                     _RCREG	set	4014
   148  0000                     _RCSTA	set	4011
   149  0000                     _RCSTAbits	set	4011
   150  0000                     _SPBRG	set	4015
   151  0000                     _SPBRGH	set	4016
   152  0000                     _SSPADD	set	4040
   153  0000                     _SSPBUF	set	4041
   154  0000                     _SSPCON1	set	4038
   155  0000                     _SSPCON1bits	set	4038
   156  0000                     _SSPCON2	set	4037
   157  0000                     _SSPCON2bits	set	4037
   158  0000                     _SSPSTAT	set	4039
   159  0000                     _SSPSTATbits	set	4039
   160  0000                     _T0CON	set	4053
   161  0000                     _T0CONbits	set	4053
   162  0000                     _T1CON	set	4045
   163  0000                     _T1CONbits	set	4045
   164  0000                     _TMR0H	set	4055
   165  0000                     _TMR0L	set	4054
   166  0000                     _TMR1H	set	4047
   167  0000                     _TMR1L	set	4046
   168  0000                     _TRISA	set	3986
   169  0000                     _TRISB	set	3987
   170  0000                     _TRISC	set	3988
   171  0000                     _TRISCbits	set	3988
   172  0000                     _TXREG	set	4013
   173  0000                     _TXSTA	set	4012
   174  0000                     _TXSTAbits	set	4012
   175                           
   176                           	psect	nvCOMRAM
   177  00005E                     __pnvCOMRAM:
   178                           	opt stack 0
   179  00005E                     _uc_ptr:
   180                           	opt stack 0
   181  00005E                     	ds	2
   182                           
   183                           	psect	nvBANK1
   184  0001C5                     __pnvBANK1:
   185                           	opt stack 0
   186  0001C5                     _ic_ptr:
   187                           	opt stack 0
   188  0001C5                     	ds	2
   189                           
   190                           ; #config settings
   191  0000                     
   192                           	psect	cinit
   193  0020DA                     __pcinit:
   194                           	opt stack 0
   195  0020DA                     start_initialization:
   196                           	opt stack 0
   197  0020DA                     __initialization:
   198                           	opt stack 0
   199                           
   200                           ; Clear objects allocated to BANK2 (201 bytes)
   201  0020DA  EE02  F000         	lfsr	0,__pbssBANK2
   202  0020DE  0EC9               	movlw	201
   203  0020E0                     clear_0:
   204  0020E0  6AEE               	clrf	postinc0,c
   205  0020E2  06E8               	decf	wreg,f,c
   206  0020E4  E1FD               	bnz	clear_0
   207                           
   208                           ; Clear objects allocated to BANK1 (95 bytes)
   209  0020E6  EE01  F066         	lfsr	0,__pbssBANK1
   210  0020EA  0E5F               	movlw	95
   211  0020EC                     clear_1:
   212  0020EC  6AEE               	clrf	postinc0,c
   213  0020EE  06E8               	decf	wreg,f,c
   214  0020F0  E1FD               	bnz	clear_1
   215                           
   216                           ; Clear objects allocated to BANK0 (16 bytes)
   217  0020F2  EE00  F0D0         	lfsr	0,__pbssBANK0
   218  0020F6  0E10               	movlw	16
   219  0020F8                     clear_2:
   220  0020F8  6AEE               	clrf	postinc0,c
   221  0020FA  06E8               	decf	wreg,f,c
   222  0020FC  E1FD               	bnz	clear_2
   223                           
   224                           ; Clear objects allocated to COMRAM (6 bytes)
   225  0020FE  6A59               	clrf	(__pbssCOMRAM+5)& (0+255),c
   226  002100  6A58               	clrf	(__pbssCOMRAM+4)& (0+255),c
   227  002102  6A57               	clrf	(__pbssCOMRAM+3)& (0+255),c
   228  002104  6A56               	clrf	(__pbssCOMRAM+2)& (0+255),c
   229  002106  6A55               	clrf	(__pbssCOMRAM+1)& (0+255),c
   230  002108  6A54               	clrf	__pbssCOMRAM& (0+255),c
   231                           
   232                           ; Initialize objects allocated to BANK1 (2 bytes)
   233                           ; load TBLPTR registers with __pidataBANK1
   234  00210A  0EDA               	movlw	low __pidataBANK1
   235  00210C  6EF6               	movwf	tblptrl,c
   236  00210E  0E2D               	movlw	high __pidataBANK1
   237  002110  6EF7               	movwf	tblptrh,c
   238  002112  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   239  002114  6EF8               	movwf	tblptru,c
   240  002116  0009               	tblrd		*+	;fetch initializer
   241  002118  CFF5 F1C7          	movff	tablat,__pdataBANK1
   242  00211C  0009               	tblrd		*+	;fetch initializer
   243  00211E  CFF5 F1C8          	movff	tablat,__pdataBANK1+1
   244                           
   245                           ; Initialize objects allocated to BANK0 (6 bytes)
   246                           ; load TBLPTR registers with __pidataBANK0
   247  002122  0EC4               	movlw	low __pidataBANK0
   248  002124  6EF6               	movwf	tblptrl,c
   249  002126  0E2D               	movlw	high __pidataBANK0
   250  002128  6EF7               	movwf	tblptrh,c
   251  00212A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   252  00212C  6EF8               	movwf	tblptru,c
   253  00212E  EE00  F0E0         	lfsr	0,__pdataBANK0
   254  002132  EE10 F006          	lfsr	1,6
   255  002136                     copy_data0:
   256  002136  0009               	tblrd		*+
   257  002138  CFF5 FFEE          	movff	tablat,postinc0
   258  00213C  50E5               	movf	postdec1,w,c
   259  00213E  50E1               	movf	fsr1l,w,c
   260  002140  E1FA               	bnz	copy_data0
   261                           
   262                           ; Initialize objects allocated to COMRAM (4 bytes)
   263                           ; load TBLPTR registers with __pidataCOMRAM
   264  002142  0ED6               	movlw	low __pidataCOMRAM
   265  002144  6EF6               	movwf	tblptrl,c
   266  002146  0E2D               	movlw	high __pidataCOMRAM
   267  002148  6EF7               	movwf	tblptrh,c
   268  00214A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   269  00214C  6EF8               	movwf	tblptru,c
   270  00214E  EE00  F05A         	lfsr	0,__pdataCOMRAM
   271  002152  EE10 F004          	lfsr	1,4
   272  002156                     copy_data1:
   273  002156  0009               	tblrd		*+
   274  002158  CFF5 FFEE          	movff	tablat,postinc0
   275  00215C  50E5               	movf	postdec1,w,c
   276  00215E  50E1               	movf	fsr1l,w,c
   277  002160  E1FA               	bnz	copy_data1
   278  002162                     end_of_initialization:
   279                           	opt stack 0
   280  002162                     __end_of__initialization:
   281                           	opt stack 0
   282  002162  0E00               	movlw	low (__Lmediumconst shr (0+16))
   283  002164  6EF8               	movwf	tblptru,c
   284  002166  0100               	movlb	0
   285  002168  EFBE  F004         	goto	_main	;jump to C main() function
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           postdec1	equ	0xFE5
   293                           fsr1l	equ	0xFE1
   294                           
   295                           	psect	bssCOMRAM
   296  000054                     __pbssCOMRAM:
   297                           	opt stack 0
   298  000054                     _UART_timeout:
   299                           	opt stack 0
   300  000054                     	ds	2
   301  000056                     _USART_Status:
   302                           	opt stack 0
   303  000056                     	ds	1
   304  000057                     _distMoved:
   305                           	opt stack 0
   306  000057                     	ds	1
   307  000058                     _leftDistDesired:
   308                           	opt stack 0
   309  000058                     	ds	1
   310  000059                     _rightDistDesired:
   311                           	opt stack 0
   312  000059                     	ds	1
   313                           tblptru	equ	0xFF8
   314                           tblptrh	equ	0xFF7
   315                           tblptrl	equ	0xFF6
   316                           tablat	equ	0xFF5
   317                           postinc0	equ	0xFEE
   318                           wreg	equ	0xFE8
   319                           postdec1	equ	0xFE5
   320                           fsr1l	equ	0xFE1
   321                           
   322                           	psect	dataCOMRAM
   323  00005A                     __pdataCOMRAM:
   324                           	opt stack 0
   325  00005A                     timer0_int_handler@F5118:
   326                           	opt stack 0
   327  00005A                     	ds	2
   328  00005C                     timer1_int_handler@F5120:
   329                           	opt stack 0
   330  00005C                     	ds	2
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           postdec1	equ	0xFE5
   338                           fsr1l	equ	0xFE1
   339                           
   340                           	psect	bssBANK0
   341  0000D0                     __pbssBANK0:
   342                           	opt stack 0
   343  0000D0                     i2c_slave_int_handler@F5143:
   344                           	opt stack 0
   345  0000D0                     	ds	6
   346  0000D6                     i2c_slave_int_handler@F5147:
   347                           	opt stack 0
   348  0000D6                     	ds	6
   349  0000DC                     _MQ_Main_Willing_to_block:
   350                           	opt stack 0
   351  0000DC                     	ds	1
   352  0000DD                     _leftEncoder:
   353                           	opt stack 0
   354  0000DD                     	ds	1
   355  0000DE                     _rightEncoder:
   356                           	opt stack 0
   357  0000DE                     	ds	1
   358  0000DF                     _stopCond:
   359                           	opt stack 0
   360  0000DF                     	ds	1
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           postdec1	equ	0xFE5
   368                           fsr1l	equ	0xFE1
   369                           
   370                           	psect	dataBANK0
   371  0000E0                     __pdataBANK0:
   372                           	opt stack 0
   373  0000E0                     i2c_slave_int_handler@F5145:
   374                           	opt stack 0
   375  0000E0                     	ds	6
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385                           	psect	bssBANK1
   386  000166                     __pbssBANK1:
   387                           	opt stack 0
   388  000166                     _adcbuffer:
   389                           	opt stack 0
   390  000166                     	ds	28
   391  000182                     _ToMainLow_MQ:
   392                           	opt stack 0
   393  000182                     	ds	67
   394                           tblptru	equ	0xFF8
   395                           tblptrh	equ	0xFF7
   396                           tblptrl	equ	0xFF6
   397                           tablat	equ	0xFF5
   398                           postinc0	equ	0xFEE
   399                           wreg	equ	0xFE8
   400                           postdec1	equ	0xFE5
   401                           fsr1l	equ	0xFE1
   402                           
   403                           	psect	dataBANK1
   404  0001C7                     __pdataBANK1:
   405                           	opt stack 0
   406  0001C7                     main@F5223:
   407                           	opt stack 0
   408  0001C7                     	ds	2
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           postdec1	equ	0xFE5
   416                           fsr1l	equ	0xFE1
   417                           
   418                           	psect	bssBANK2
   419  000200                     __pbssBANK2:
   420                           	opt stack 0
   421  000200                     _FromMainHigh_MQ:
   422                           	opt stack 0
   423  000200                     	ds	67
   424  000243                     _FromMainLow_MQ:
   425                           	opt stack 0
   426  000243                     	ds	67
   427  000286                     _ToMainHigh_MQ:
   428                           	opt stack 0
   429  000286                     	ds	67
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           postdec1	equ	0xFE5
   437                           fsr1l	equ	0xFE1
   438                           
   439                           	psect	cstackBANK1
   440  000100                     __pcstackBANK1:
   441                           	opt stack 0
   442  000100                     ??_SetChanADC:
   443  000100                     ?_in_high_int:
   444                           	opt stack 0
   445  000100                     ?___awmod:
   446                           	opt stack 0
   447  000100                     ?___lwmod:
   448                           	opt stack 0
   449  000100                     i2c_master_send@recvlength:
   450                           	opt stack 0
   451  000100                     i2c_configure_slave@addr:
   452                           	opt stack 0
   453  000100                     OpenADC@config2:
   454                           	opt stack 0
   455  000100                     OpenTimer0@config:
   456                           	opt stack 0
   457  000100                     OpenTimer1@config:
   458                           	opt stack 0
   459  000100                     Delay1KTCYx@unit:
   460                           	opt stack 0
   461  000100                     init_queue@qptr:
   462                           	opt stack 0
   463  000100                     check_msg@qptr:
   464                           	opt stack 0
   465  000100                     init_i2c@ic:
   466                           	opt stack 0
   467  000100                     init_uart_recv@uc:
   468                           	opt stack 0
   469  000100                     uart_trans@data:
   470                           	opt stack 0
   471  000100                     timer0_lthread@tptr:
   472                           	opt stack 0
   473  000100                     init_timer1_lthread@tptr:
   474                           	opt stack 0
   475  000100                     OpenUSART@spbrg:
   476                           	opt stack 0
   477  000100                     ___awmod@dividend:
   478                           	opt stack 0
   479  000100                     ___lwmod@dividend:
   480                           	opt stack 0
   481  000100                     memcpy@d1:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x0
   485  000100                     	ds	1
   486  000101                     OpenADC@portconfig:
   487                           	opt stack 0
   488  000101                     SetChanADC@channel:
   489                           	opt stack 0
   490  000101                     i2c_master_send@msg:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x1
   494  000101                     	ds	1
   495  000102                     ??_OpenUSART:
   496  000102                     ??_OpenADC:
   497  000102                     ??_uart_trans:
   498  000102                     ??_init_queue:
   499  000102                     ??_check_msg:
   500  000102                     ?_in_low_int:
   501                           	opt stack 0
   502  000102                     timer0_lthread@msgtype:
   503                           	opt stack 0
   504  000102                     ___awmod@divisor:
   505                           	opt stack 0
   506  000102                     ___lwmod@divisor:
   507                           	opt stack 0
   508  000102                     memcpy@s1:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x2
   512  000102                     	ds	1
   513  000103                     init_queue@i:
   514                           	opt stack 0
   515  000103                     i2c_master_send@slave_addr:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x3
   519  000103                     	ds	1
   520  000104                     ??_init_queues:
   521  000104                     ??_i2c_master_send:
   522  000104                     ??___awmod:
   523  000104                     ??___lwmod:
   524  000104                     ?_in_main:
   525                           	opt stack 0
   526  000104                     uart_trans@length:
   527                           	opt stack 0
   528  000104                     OpenADC@config:
   529                           	opt stack 0
   530  000104                     timer0_lthread@length:
   531                           	opt stack 0
   532  000104                     memcpy@n:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x4
   536  000104                     	ds	1
   537  000105                     OpenUSART@config:
   538                           	opt stack 0
   539  000105                     ___awmod@counter:
   540                           	opt stack 0
   541  000105                     ___lwmod@counter:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x5
   545  000105                     	ds	1
   546  000106                     ??_block_on_To_msgqueues:
   547  000106                     i2c_master_send@sendlength:
   548                           	opt stack 0
   549  000106                     ___awmod@sign:
   550                           	opt stack 0
   551  000106                     timer0_lthread@msgbuffer:
   552                           	opt stack 0
   553  000106                     memcpy@d:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x6
   557  000106                     	ds	2
   558  000108                     timer0_lthread@msgval:
   559                           	opt stack 0
   560  000108                     memcpy@s:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x8
   564  000108                     	ds	2
   565  00010A                     send_msg@qptr:
   566                           	opt stack 0
   567  00010A                     recv_msg@qptr:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0xA
   571  00010A                     	ds	2
   572  00010C                     send_msg@length:
   573                           	opt stack 0
   574  00010C                     recv_msg@maxlength:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0xC
   578  00010C                     	ds	1
   579  00010D                     send_msg@msgtype:
   580                           	opt stack 0
   581  00010D                     recv_msg@msgtype:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0xD
   585  00010D                     	ds	1
   586  00010E                     send_msg@data:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0xE
   590  00010E                     	ds	1
   591  00010F                     recv_msg@data:
   592                           	opt stack 0
   593                           
   594                           ; 2 bytes @ 0xF
   595  00010F                     	ds	1
   596  000110                     ??_send_msg:
   597                           
   598                           ; 0 bytes @ 0x10
   599  000110                     	ds	1
   600  000111                     ??_recv_msg:
   601  000111                     send_msg@tlength:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x11
   605  000111                     	ds	2
   606  000113                     send_msg@slot:
   607                           	opt stack 0
   608  000113                     recv_msg@slot:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x13
   612  000113                     	ds	1
   613  000114                     send_msg@qmsg:
   614                           	opt stack 0
   615  000114                     recv_msg@tlength:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x14
   619  000114                     	ds	2
   620  000116                     FromMainHigh_sendmsg@msgtype:
   621                           	opt stack 0
   622  000116                     recv_msg@qmsg:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x16
   626  000116                     	ds	1
   627  000117                     FromMainHigh_sendmsg@data:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x17
   631  000117                     	ds	1
   632  000118                     ToMainLow_recvmsg@msgtype:
   633                           	opt stack 0
   634  000118                     ToMainHigh_recvmsg@msgtype:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x18
   638  000118                     	ds	1
   639  000119                     FromMainHigh_sendmsg@length:
   640                           	opt stack 0
   641                           
   642                           ; 1 bytes @ 0x19
   643  000119                     	ds	1
   644  00011A                     ToMainLow_recvmsg@data:
   645                           	opt stack 0
   646  00011A                     ToMainHigh_recvmsg@data:
   647                           	opt stack 0
   648  00011A                     timer1_lthread@tptr:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x1A
   652  00011A                     	ds	2
   653  00011C                     ToMainLow_recvmsg@maxlength:
   654                           	opt stack 0
   655  00011C                     ToMainHigh_recvmsg@maxlength:
   656                           	opt stack 0
   657  00011C                     timer1_lthread@msgtype:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x1C
   661  00011C                     	ds	2
   662  00011E                     timer1_lthread@length:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x1E
   666  00011E                     	ds	2
   667  000120                     timer1_lthread@msgbuffer:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x20
   671  000120                     	ds	2
   672  000122                     ??_timer1_lthread:
   673                           
   674                           ; 0 bytes @ 0x22
   675  000122                     	ds	1
   676  000123                     timer1_lthread@retval:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x23
   680  000123                     	ds	1
   681  000124                     ??_main:
   682                           
   683                           ; 0 bytes @ 0x24
   684  000124                     	ds	2
   685  000126                     main@msg:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x26
   689  000126                     	ds	2
   690  000128                     main@last_reg_recvd:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x28
   694  000128                     	ds	1
   695  000129                     main@msgbuffer:
   696                           	opt stack 0
   697                           
   698                           ; 11 bytes @ 0x29
   699  000129                     	ds	11
   700  000134                     main@t0thread_data:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x34
   704  000134                     	ds	2
   705  000136                     main@t1thread_data:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x36
   709  000136                     	ds	2
   710  000138                     main@msgtype:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x38
   714  000138                     	ds	1
   715  000139                     main@length:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x39
   719  000139                     	ds	1
   720  00013A                     main@uc:
   721                           	opt stack 0
   722                           
   723                           ; 15 bytes @ 0x3A
   724  00013A                     	ds	15
   725  000149                     main@ic:
   726                           	opt stack 0
   727                           
   728                           ; 29 bytes @ 0x49
   729  000149                     	ds	29
   730                           tblptru	equ	0xFF8
   731                           tblptrh	equ	0xFF7
   732                           tblptrl	equ	0xFF6
   733                           tablat	equ	0xFF5
   734                           postinc0	equ	0xFEE
   735                           wreg	equ	0xFE8
   736                           postdec1	equ	0xFE5
   737                           fsr1l	equ	0xFE1
   738                           
   739                           	psect	cstackBANK0
   740  000080                     __pcstackBANK0:
   741                           	opt stack 0
   742  000080                     ?i2_in_high_int:
   743                           	opt stack 0
   744  000080                     ?i2___awmod:
   745                           	opt stack 0
   746  000080                     handle_start@data_read:
   747                           	opt stack 0
   748  000080                     start_i2c_slave_reply@msg:
   749                           	opt stack 0
   750  000080                     i2check_msg@qptr:
   751                           	opt stack 0
   752  000080                     i2uart_trans@data:
   753                           	opt stack 0
   754  000080                     i2WriteTimer0@timer0:
   755                           	opt stack 0
   756  000080                     i2WriteTimer1@timer1:
   757                           	opt stack 0
   758  000080                     i2memcpy@d1:
   759                           	opt stack 0
   760  000080                     i2___awmod@dividend:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x0
   764  000080                     	ds	2
   765  000082                     ??_start_i2c_slave_reply:
   766  000082                     ??i2_check_msg:
   767  000082                     ??i2_uart_trans:
   768  000082                     ?i2_in_low_int:
   769                           	opt stack 0
   770  000082                     i2WriteTimer0@timer:
   771                           	opt stack 0
   772  000082                     i2WriteTimer1@timer:
   773                           	opt stack 0
   774  000082                     i2memcpy@s1:
   775                           	opt stack 0
   776  000082                     i2___awmod@divisor:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x2
   780  000082                     	ds	2
   781  000084                     ??i2___awmod:
   782  000084                     start_i2c_slave_reply@length:
   783                           	opt stack 0
   784  000084                     i2uart_trans@length:
   785                           	opt stack 0
   786  000084                     i2memcpy@n:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x4
   790  000084                     	ds	1
   791  000085                     i2motorMove@right:
   792                           	opt stack 0
   793  000085                     i2___awmod@counter:
   794                           	opt stack 0
   795                           
   796                           ; 1 bytes @ 0x5
   797  000085                     	ds	1
   798  000086                     i2motorMove@leftDistance:
   799                           	opt stack 0
   800  000086                     i2___awmod@sign:
   801                           	opt stack 0
   802  000086                     i2memcpy@d:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x6
   806  000086                     	ds	1
   807  000087                     i2motorMove@rightDistance:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x7
   811  000087                     	ds	1
   812  000088                     ??i2_motorMove:
   813  000088                     i2memcpy@s:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x8
   817  000088                     	ds	1
   818  000089                     i2motorMove@direction:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x9
   822  000089                     	ds	1
   823  00008A                     i2send_msg@qptr:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0xA
   827  00008A                     	ds	1
   828  00008B                     i2motorMove@left:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0xB
   832  00008B                     	ds	1
   833  00008C                     i2send_msg@length:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0xC
   837  00008C                     	ds	1
   838  00008D                     i2send_msg@msgtype:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0xD
   842  00008D                     	ds	1
   843  00008E                     i2send_msg@data:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0xE
   847  00008E                     	ds	2
   848  000090                     ??i2_send_msg:
   849                           
   850                           ; 0 bytes @ 0x10
   851  000090                     	ds	1
   852  000091                     i2send_msg@tlength:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0x11
   856  000091                     	ds	2
   857  000093                     i2send_msg@slot:
   858                           	opt stack 0
   859                           
   860                           ; 1 bytes @ 0x13
   861  000093                     	ds	1
   862  000094                     i2send_msg@qmsg:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0x14
   866  000094                     	ds	2
   867  000096                     ToMainHigh_sendmsg@msgtype:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x16
   871  000096                     	ds	1
   872  000097                     ToMainHigh_sendmsg@data:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x17
   876  000097                     	ds	2
   877  000099                     ToMainHigh_sendmsg@length:
   878                           	opt stack 0
   879                           
   880                           ; 1 bytes @ 0x19
   881  000099                     	ds	1
   882  00009A                     ??_i2c_slave_int_handler:
   883                           
   884                           ; 0 bytes @ 0x1A
   885  00009A                     	ds	2
   886  00009C                     i2c_slave_int_handler@ack:
   887                           	opt stack 0
   888                           
   889                           ; 6 bytes @ 0x1C
   890  00009C                     	ds	6
   891  0000A2                     i2c_slave_int_handler@ack_1696:
   892                           	opt stack 0
   893                           
   894                           ; 6 bytes @ 0x22
   895  0000A2                     	ds	6
   896  0000A8                     i2c_slave_int_handler@dist:
   897                           	opt stack 0
   898                           
   899                           ; 6 bytes @ 0x28
   900  0000A8                     	ds	6
   901  0000AE                     i2c_slave_int_handler@messageType:
   902                           	opt stack 0
   903                           
   904                           ; 1 bytes @ 0x2E
   905  0000AE                     	ds	1
   906  0000AF                     i2c_slave_int_handler@bitmask:
   907                           	opt stack 0
   908                           
   909                           ; 1 bytes @ 0x2F
   910  0000AF                     	ds	1
   911  0000B0                     i2c_slave_int_handler@checksum:
   912                           	opt stack 0
   913                           
   914                           ; 1 bytes @ 0x30
   915  0000B0                     	ds	1
   916  0000B1                     i2c_slave_int_handler@error_buf:
   917                           	opt stack 0
   918                           
   919                           ; 3 bytes @ 0x31
   920  0000B1                     	ds	3
   921  0000B4                     i2c_slave_int_handler@data_written:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0x34
   925  0000B4                     	ds	1
   926  0000B5                     i2c_slave_int_handler@overrun_error:
   927                           	opt stack 0
   928                           
   929                           ; 1 bytes @ 0x35
   930  0000B5                     	ds	1
   931  0000B6                     i2c_slave_int_handler@message:
   932                           	opt stack 0
   933                           
   934                           ; 6 bytes @ 0x36
   935  0000B6                     	ds	6
   936  0000BC                     i2c_slave_int_handler@i2c_data:
   937                           	opt stack 0
   938                           
   939                           ; 1 bytes @ 0x3C
   940  0000BC                     	ds	1
   941  0000BD                     i2c_slave_int_handler@msg_to_send:
   942                           	opt stack 0
   943                           
   944                           ; 1 bytes @ 0x3D
   945  0000BD                     	ds	1
   946  0000BE                     i2c_slave_int_handler@msg_ready:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x3E
   950  0000BE                     	ds	1
   951  0000BF                     i2c_slave_int_handler@length:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x3F
   955  0000BF                     	ds	2
   956  0000C1                     i2c_slave_int_handler@data_read:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x41
   960  0000C1                     	ds	1
   961  0000C2                     ??_InterruptHandlerHigh:
   962                           
   963                           ; 0 bytes @ 0x42
   964  0000C2                     	ds	14
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           postinc0	equ	0xFEE
   970                           wreg	equ	0xFE8
   971                           postdec1	equ	0xFE5
   972                           fsr1l	equ	0xFE1
   973                           
   974                           	psect	cstackCOMRAM
   975  000001                     __pcstackCOMRAM:
   976                           	opt stack 0
   977  000001                     ??_uart_trans_int_handler:
   978  000001                     ??i1_SetChanADC:
   979  000001                     ?i1___awmod:
   980                           	opt stack 0
   981  000001                     ?___ftpack:
   982                           	opt stack 0
   983  000001                     ReadUSART@data:
   984                           	opt stack 0
   985  000001                     WriteTimer0@timer0:
   986                           	opt stack 0
   987  000001                     WriteTimer1@timer1:
   988                           	opt stack 0
   989  000001                     i1uart_trans@data:
   990                           	opt stack 0
   991  000001                     i1memcpy@d1:
   992                           	opt stack 0
   993  000001                     i1___awmod@dividend:
   994                           	opt stack 0
   995  000001                     ___ftpack@arg:
   996                           	opt stack 0
   997  000001                     ___ftge@ff1:
   998                           	opt stack 0
   999                           
  1000                           ; 3 bytes @ 0x0
  1001  000001                     	ds	1
  1002  000002                     i1SetChanADC@channel:
  1003                           	opt stack 0
  1004                           
  1005                           ; 1 bytes @ 0x1
  1006  000002                     	ds	1
  1007  000003                     ??i1_uart_trans:
  1008  000003                     WriteTimer0@timer:
  1009                           	opt stack 0
  1010  000003                     WriteTimer1@timer:
  1011                           	opt stack 0
  1012  000003                     i1memcpy@s1:
  1013                           	opt stack 0
  1014  000003                     i1___awmod@divisor:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x2
  1018  000003                     	ds	1
  1019  000004                     ___ftpack@exp:
  1020                           	opt stack 0
  1021  000004                     ___ftge@ff2:
  1022                           	opt stack 0
  1023                           
  1024                           ; 3 bytes @ 0x3
  1025  000004                     	ds	1
  1026  000005                     ??i1___awmod:
  1027  000005                     ___ftpack@sign:
  1028                           	opt stack 0
  1029  000005                     i1uart_trans@length:
  1030                           	opt stack 0
  1031  000005                     i1memcpy@n:
  1032                           	opt stack 0
  1033                           
  1034                           ; 2 bytes @ 0x4
  1035  000005                     	ds	1
  1036  000006                     ??___ftpack:
  1037  000006                     motorMove@right:
  1038                           	opt stack 0
  1039  000006                     i1___awmod@counter:
  1040                           	opt stack 0
  1041                           
  1042                           ; 1 bytes @ 0x5
  1043  000006                     	ds	1
  1044  000007                     ??___ftge:
  1045  000007                     motorMove@leftDistance:
  1046                           	opt stack 0
  1047  000007                     i1___awmod@sign:
  1048                           	opt stack 0
  1049  000007                     i1memcpy@d:
  1050                           	opt stack 0
  1051                           
  1052                           ; 2 bytes @ 0x6
  1053  000007                     	ds	1
  1054  000008                     motorMove@rightDistance:
  1055                           	opt stack 0
  1056                           
  1057                           ; 1 bytes @ 0x7
  1058  000008                     	ds	1
  1059  000009                     ??_motorMove:
  1060  000009                     ?___awtoft:
  1061                           	opt stack 0
  1062  000009                     ?___fttol:
  1063                           	opt stack 0
  1064  000009                     ___awtoft@c:
  1065                           	opt stack 0
  1066  000009                     i1memcpy@s:
  1067                           	opt stack 0
  1068  000009                     ___fttol@f1:
  1069                           	opt stack 0
  1070                           
  1071                           ; 3 bytes @ 0x8
  1072  000009                     	ds	1
  1073  00000A                     motorMove@direction:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x9
  1077  00000A                     	ds	1
  1078  00000B                     i1send_msg@qptr:
  1079                           	opt stack 0
  1080                           
  1081                           ; 2 bytes @ 0xA
  1082  00000B                     	ds	1
  1083  00000C                     ??___awtoft:
  1084  00000C                     motorMove@left:
  1085                           	opt stack 0
  1086                           
  1087                           ; 1 bytes @ 0xB
  1088  00000C                     	ds	1
  1089  00000D                     ??_timer1_int_handler:
  1090  00000D                     ??_timer0_int_handler:
  1091  00000D                     ??___fttol:
  1092  00000D                     ___awtoft@sign:
  1093                           	opt stack 0
  1094  00000D                     i1send_msg@length:
  1095                           	opt stack 0
  1096                           
  1097                           ; 1 bytes @ 0xC
  1098  00000D                     	ds	1
  1099  00000E                     ?___ftmul:
  1100                           	opt stack 0
  1101  00000E                     i1send_msg@msgtype:
  1102                           	opt stack 0
  1103  00000E                     ___ftmul@f1:
  1104                           	opt stack 0
  1105                           
  1106                           ; 3 bytes @ 0xD
  1107  00000E                     	ds	1
  1108  00000F                     i1send_msg@data:
  1109                           	opt stack 0
  1110                           
  1111                           ; 2 bytes @ 0xE
  1112  00000F                     	ds	1
  1113  000010                     timer0_int_handler@motorcomm:
  1114                           	opt stack 0
  1115  000010                     timer1_int_handler@motorcomm:
  1116                           	opt stack 0
  1117                           
  1118                           ; 2 bytes @ 0xF
  1119  000010                     	ds	1
  1120  000011                     ??i1_send_msg:
  1121  000011                     ___ftmul@f2:
  1122                           	opt stack 0
  1123                           
  1124                           ; 3 bytes @ 0x10
  1125  000011                     	ds	1
  1126  000012                     ___fttol@sign1:
  1127                           	opt stack 0
  1128  000012                     i1send_msg@tlength:
  1129                           	opt stack 0
  1130                           
  1131                           ; 2 bytes @ 0x11
  1132  000012                     	ds	1
  1133  000013                     ___fttol@lval:
  1134                           	opt stack 0
  1135                           
  1136                           ; 4 bytes @ 0x12
  1137  000013                     	ds	1
  1138  000014                     ??___ftmul:
  1139  000014                     i1send_msg@slot:
  1140                           	opt stack 0
  1141                           
  1142                           ; 1 bytes @ 0x13
  1143  000014                     	ds	1
  1144  000015                     i1send_msg@qmsg:
  1145                           	opt stack 0
  1146                           
  1147                           ; 2 bytes @ 0x14
  1148  000015                     	ds	2
  1149  000017                     ToMainLow_sendmsg@msgtype:
  1150                           	opt stack 0
  1151  000017                     ___ftmul@exp:
  1152                           	opt stack 0
  1153  000017                     ___fttol@exp1:
  1154                           	opt stack 0
  1155                           
  1156                           ; 1 bytes @ 0x16
  1157  000017                     	ds	1
  1158  000018                     ?___ftadd:
  1159                           	opt stack 0
  1160  000018                     ToMainLow_sendmsg@data:
  1161                           	opt stack 0
  1162  000018                     ___ftadd@f1:
  1163                           	opt stack 0
  1164  000018                     ___ftmul@f3_as_product:
  1165                           	opt stack 0
  1166                           
  1167                           ; 3 bytes @ 0x17
  1168  000018                     	ds	2
  1169  00001A                     ToMainLow_sendmsg@length:
  1170                           	opt stack 0
  1171                           
  1172                           ; 1 bytes @ 0x19
  1173  00001A                     	ds	1
  1174  00001B                     ??_uart_recv_int_handler:
  1175  00001B                     ___ftmul@cntr:
  1176                           	opt stack 0
  1177  00001B                     ___ftadd@f2:
  1178                           	opt stack 0
  1179                           
  1180                           ; 3 bytes @ 0x1A
  1181  00001B                     	ds	1
  1182  00001C                     ___ftmul@sign:
  1183                           	opt stack 0
  1184                           
  1185                           ; 1 bytes @ 0x1B
  1186  00001C                     	ds	2
  1187  00001E                     ??___ftadd:
  1188                           
  1189                           ; 0 bytes @ 0x1D
  1190  00001E                     	ds	3
  1191  000021                     ___ftadd@sign:
  1192                           	opt stack 0
  1193                           
  1194                           ; 1 bytes @ 0x20
  1195  000021                     	ds	1
  1196  000022                     ___ftadd@exp2:
  1197                           	opt stack 0
  1198                           
  1199                           ; 1 bytes @ 0x21
  1200  000022                     	ds	1
  1201  000023                     ___ftadd@exp1:
  1202                           	opt stack 0
  1203                           
  1204                           ; 1 bytes @ 0x22
  1205  000023                     	ds	1
  1206  000024                     ?___ftdiv:
  1207                           	opt stack 0
  1208  000024                     ___ftdiv@f1:
  1209                           	opt stack 0
  1210                           
  1211                           ; 3 bytes @ 0x23
  1212  000024                     	ds	3
  1213  000027                     ___ftdiv@f2:
  1214                           	opt stack 0
  1215                           
  1216                           ; 3 bytes @ 0x26
  1217  000027                     	ds	3
  1218  00002A                     ??___ftdiv:
  1219                           
  1220                           ; 0 bytes @ 0x29
  1221  00002A                     	ds	3
  1222  00002D                     ___ftdiv@cntr:
  1223                           	opt stack 0
  1224                           
  1225                           ; 1 bytes @ 0x2C
  1226  00002D                     	ds	1
  1227  00002E                     ___ftdiv@f3:
  1228                           	opt stack 0
  1229                           
  1230                           ; 3 bytes @ 0x2D
  1231  00002E                     	ds	3
  1232  000031                     ___ftdiv@exp:
  1233                           	opt stack 0
  1234                           
  1235                           ; 1 bytes @ 0x30
  1236  000031                     	ds	1
  1237  000032                     ___ftdiv@sign:
  1238                           	opt stack 0
  1239                           
  1240                           ; 1 bytes @ 0x31
  1241  000032                     	ds	1
  1242  000033                     ??_adc_int_handler:
  1243                           
  1244                           ; 0 bytes @ 0x32
  1245  000033                     	ds	4
  1246  000037                     adc_int_handler@dist:
  1247                           	opt stack 0
  1248                           
  1249                           ; 3 bytes @ 0x36
  1250  000037                     	ds	3
  1251  00003A                     adc_int_handler@k:
  1252                           	opt stack 0
  1253                           
  1254                           ; 2 bytes @ 0x39
  1255  00003A                     	ds	2
  1256  00003C                     adc_int_handler@voltage:
  1257                           	opt stack 0
  1258                           
  1259                           ; 3 bytes @ 0x3B
  1260  00003C                     	ds	3
  1261  00003F                     adc_int_handler@channel:
  1262                           	opt stack 0
  1263                           
  1264                           ; 2 bytes @ 0x3E
  1265  00003F                     	ds	2
  1266  000041                     adc_int_handler@roundDist:
  1267                           	opt stack 0
  1268                           
  1269                           ; 2 bytes @ 0x40
  1270  000041                     	ds	2
  1271  000043                     ??_InterruptHandlerLow:
  1272                           
  1273                           ; 0 bytes @ 0x42
  1274  000043                     	ds	17
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           postdec1	equ	0xFE5
  1282                           fsr1l	equ	0xFE1
  1283                           
  1284 ;;
  1285 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1286 ;;
  1287 ;; *************** function _main *****************
  1288 ;; Defined at:
  1289 ;;		line 186 in file "../src/main.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  ic             29   73[BANK1 ] struct __i2c_comm
  1294 ;;  uc             15   58[BANK1 ] struct __uart_comm
  1295 ;;  msgbuffer      11   41[BANK1 ] unsigned char [11]
  1296 ;;  t1thread_dat    2   54[BANK1 ] struct __timer1_thread_s
  1297 ;;  t0thread_dat    2   52[BANK1 ] struct __timer0_thread_s
  1298 ;;  msg             2   38[BANK1 ] unsigned char [2]
  1299 ;;  uthread_data    2    0        struct __uart_thread_str
  1300 ;;  length          1   57[BANK1 ] char 
  1301 ;;  msgtype         1   56[BANK1 ] unsigned char 
  1302 ;;  last_reg_rec    1   40[BANK1 ] unsigned char 
  1303 ;;  i               1    0        unsigned char 
  1304 ;;  c               1    0        unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;		None               void
  1307 ;; Registers used:
  1308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1314 ;;      Params:         0       0       0       0       0
  1315 ;;      Locals:         0       0      64       0       0
  1316 ;;      Temps:          0       0       2       0       0
  1317 ;;      Totals:         0       0      66       0       0
  1318 ;;Total ram usage:       66 bytes
  1319 ;; Hardware stack levels required when called:   15
  1320 ;; This function calls:
  1321 ;;		_OpenADC
  1322 ;;		_OpenTimer0
  1323 ;;		_OpenTimer1
  1324 ;;		_OpenUSART
  1325 ;;		_SetChanADC
  1326 ;;		_ToMainHigh_recvmsg
  1327 ;;		_ToMainLow_recvmsg
  1328 ;;		_block_on_To_msgqueues
  1329 ;;		_enable_interrupts
  1330 ;;		_i2c_configure_slave
  1331 ;;		_i2c_master_send
  1332 ;;		_init_i2c
  1333 ;;		_init_queues
  1334 ;;		_init_timer1_lthread
  1335 ;;		_init_uart_recv
  1336 ;;		_timer0_lthread
  1337 ;;		_timer1_lthread
  1338 ;;		_uart_trans
  1339 ;; This function is called by:
  1340 ;;		Startup code after reset
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text0
  1345  00097C                     __ptext0:
  1346                           	opt stack 0
  1347  00097C                     _main:
  1348                           	opt stack 16
  1349                           
  1350                           ;main.c: 187: char c;
  1351                           ;main.c: 188: signed char length;
  1352                           ;main.c: 189: unsigned char msgtype;
  1353                           ;main.c: 190: unsigned char last_reg_recvd;
  1354                           ;main.c: 191: uart_comm uc;
  1355                           ;main.c: 192: i2c_comm ic;
  1356                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1357                           ;main.c: 194: unsigned char i;
  1358                           ;main.c: 195: uart_thread_struct uthread_data;
  1359                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1360                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1361                           ;main.c: 205: OSCCON = 0x82;
  1362                           
  1363                           ;incstack = 0
  1364  00097C  0E82               	movlw	130
  1365  00097E  6ED3               	movwf	4051,c	;volatile
  1366                           
  1367                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
  1368  000980  9C9B               	bcf	3995,6,c	;volatile
  1369                           
  1370                           ;main.c: 224: init_uart_recv(&uc);
  1371  000982  0101               	movlb	1	; () banked
  1372  000984  0E01               	movlw	high main@uc
  1373  000986  0101               	movlb	1	; () banked
  1374  000988  0101               	movlb	1	; () banked
  1375  00098A  6F01               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1376  00098C  0101               	movlb	1	; () banked
  1377  00098E  0E3A               	movlw	low main@uc
  1378  000990  0101               	movlb	1	; () banked
  1379  000992  0101               	movlb	1	; () banked
  1380  000994  6F00               	movwf	init_uart_recv@uc& (0+255),b
  1381  000996  EC61  F016         	call	_init_uart_recv	;wreg free
  1382                           
  1383                           ;main.c: 227: init_i2c(&ic);
  1384  00099A  0101               	movlb	1	; () banked
  1385  00099C  0E01               	movlw	high main@ic
  1386  00099E  0101               	movlb	1	; () banked
  1387  0009A0  0101               	movlb	1	; () banked
  1388  0009A2  6F01               	movwf	(init_i2c@ic+1)& (0+255),b
  1389  0009A4  0101               	movlb	1	; () banked
  1390  0009A6  0E49               	movlw	low main@ic
  1391  0009A8  0101               	movlb	1	; () banked
  1392  0009AA  0101               	movlb	1	; () banked
  1393  0009AC  6F00               	movwf	init_i2c@ic& (0+255),b
  1394  0009AE  EC74  F013         	call	_init_i2c	;wreg free
  1395                           
  1396                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1397  0009B2  0101               	movlb	1	; () banked
  1398  0009B4  0E01               	movlw	high main@t1thread_data
  1399  0009B6  0101               	movlb	1	; () banked
  1400  0009B8  0101               	movlb	1	; () banked
  1401  0009BA  6F01               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1402  0009BC  0101               	movlb	1	; () banked
  1403  0009BE  0E36               	movlw	low main@t1thread_data
  1404  0009C0  0101               	movlb	1	; () banked
  1405  0009C2  0101               	movlb	1	; () banked
  1406  0009C4  6F00               	movwf	init_timer1_lthread@tptr& (0+255),b
  1407  0009C6  EC9F  F016         	call	_init_timer1_lthread	;wreg free
  1408                           
  1409                           ;main.c: 233: init_queues();
  1410  0009CA  EC04  F013         	call	_init_queues	;wreg free
  1411                           
  1412                           ;main.c: 237: TRISB = 0xFF;
  1413  0009CE  6893               	setf	3987,c	;volatile
  1414                           
  1415                           ;main.c: 238: LATB = 0x0;
  1416  0009D0  0E00               	movlw	0
  1417  0009D2  6E8A               	movwf	3978,c	;volatile
  1418                           
  1419                           ;main.c: 240: PORTA = 0x0;
  1420  0009D4  0E00               	movlw	0
  1421  0009D6  6E80               	movwf	3968,c	;volatile
  1422                           
  1423                           ;main.c: 241: LATA = 0x0;
  1424  0009D8  0E00               	movlw	0
  1425  0009DA  6E89               	movwf	3977,c	;volatile
  1426                           
  1427                           ;main.c: 242: TRISA = 0x00;
  1428  0009DC  0E00               	movlw	0
  1429  0009DE  6E92               	movwf	3986,c	;volatile
  1430                           
  1431                           ;main.c: 261: OpenTimer0(0b11111111 & 0b11111111 & 0b11111111 & 0b11101111 & 0b11111111);
  1432  0009E0  0EEF               	movlw	239
  1433  0009E2  EC15  F016         	call	_OpenTimer0
  1434                           
  1435                           ;main.c: 273: OpenTimer1(0b11111111 & 0b11111111 & 0b11001111 & 0b11111111 & 0b11110111 
      +                          & 0b11111111);
  1436  0009E6  0EC7               	movlw	199
  1437  0009E8  EC8D  F015         	call	_OpenTimer1
  1438                           
  1439                           ;main.c: 274: TRISC = 0xFF;
  1440  0009EC  6894               	setf	3988,c	;volatile
  1441                           
  1442                           ;main.c: 282: IPR1bits.ADIP = 0;
  1443  0009EE  9C9F               	bcf	3999,6,c	;volatile
  1444                           
  1445                           ;main.c: 283: PIE1bits.ADIE = 1;
  1446  0009F0  8C9D               	bsf	3997,6,c	;volatile
  1447                           
  1448                           ;main.c: 285: IPR1bits.TMR1IP = 0;
  1449  0009F2  909F               	bcf	3999,0,c	;volatile
  1450                           
  1451                           ;main.c: 287: INTCON2bits.TMR0IP = 0;
  1452  0009F4  94F1               	bcf	intcon2,2,c	;volatile
  1453                           
  1454                           ;main.c: 289: IPR1bits.RCIP = 0;
  1455  0009F6  9A9F               	bcf	3999,5,c	;volatile
  1456                           
  1457                           ;main.c: 291: IPR1bits.TXIP = 0;
  1458  0009F8  989F               	bcf	3999,4,c	;volatile
  1459                           
  1460                           ;main.c: 293: IPR1bits.SSPIP = 1;
  1461  0009FA  869F               	bsf	3999,3,c	;volatile
  1462                           
  1463                           ;main.c: 310: i2c_configure_slave(0xBE);
  1464  0009FC  0EBE               	movlw	190
  1465  0009FE  EC2A  F016         	call	_i2c_configure_slave
  1466                           
  1467                           ;main.c: 329: PIE1bits.SSPIE = 1;
  1468  000A02  869D               	bsf	3997,3,c	;volatile
  1469                           
  1470                           ;main.c: 340: OpenUSART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1471                           ;main.c: 341: 0b11111111 & 0b11111111, 38);
  1472  000A04  0E00               	movlw	0
  1473  000A06  0101               	movlb	1	; () banked
  1474  000A08  0101               	movlb	1	; () banked
  1475  000A0A  6F01               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1476  000A0C  0E26               	movlw	38
  1477  000A0E  0101               	movlb	1	; () banked
  1478  000A10  6F00               	movwf	OpenUSART@spbrg& (0+255),b
  1479  000A12  0EFC               	movlw	252
  1480  000A14  ECB6  F010         	call	_OpenUSART
  1481                           
  1482                           ;main.c: 342: RCSTAbits.SPEN = 1;
  1483  000A18  8EAB               	bsf	4011,7,c	;volatile
  1484                           
  1485                           ;main.c: 343: TRISC = 0xFF;
  1486  000A1A  6894               	setf	3988,c	;volatile
  1487                           
  1488                           ;main.c: 350: enable_interrupts();
  1489  000A1C  ECDE  F016         	call	_enable_interrupts	;wreg free
  1490                           
  1491                           ;main.c: 364: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1492                           ;main.c: 365: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1493                           ;main.c: 366: 0b1011);
  1494  000A20  0101               	movlb	1	; () banked
  1495  000A22  6F24               	movwf	??_main& (0+255),b
  1496  000A24  0E0C               	movlw	12
  1497  000A26  0101               	movlb	1	; () banked
  1498  000A28  0101               	movlb	1	; () banked
  1499  000A2A  6F00               	movwf	OpenADC@config2& (0+255),b
  1500  000A2C  0101               	movlb	1	; () banked
  1501  000A2E  5124               	movf	??_main& (0+255),w,b
  1502  000A30  0101               	movlb	1	; () banked
  1503  000A32  6F25               	movwf	(??_main+1)& (0+255),b
  1504  000A34  0E0B               	movlw	11
  1505  000A36  0101               	movlb	1	; () banked
  1506  000A38  0101               	movlb	1	; () banked
  1507  000A3A  6F01               	movwf	OpenADC@portconfig& (0+255),b
  1508  000A3C  0101               	movlb	1	; () banked
  1509  000A3E  5125               	movf	(??_main+1)& (0+255),w,b
  1510  000A40  0E53               	movlw	83
  1511  000A42  ECD1  F011         	call	_OpenADC
  1512                           
  1513                           ;main.c: 367: SetChanADC(0b10001111);
  1514  000A46  0E8F               	movlw	143
  1515  000A48  EC51  F016         	call	_SetChanADC
  1516                           
  1517                           ;main.c: 378: unsigned char msg[2] = {0x01, 0x02};
  1518  000A4C  C1C7  F126         	movff	main@F5223,main@msg
  1519  000A50  C1C8  F127         	movff	main@F5223+1,main@msg+1
  1520  000A54                     l3416:
  1521                           
  1522                           ;main.c: 390: block_on_To_msgqueues();
  1523  000A54  EC8C  F011         	call	_block_on_To_msgqueues	;wreg free
  1524                           
  1525                           ;main.c: 397: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1526  000A58  0101               	movlb	1	; () banked
  1527  000A5A  0E01               	movlw	high main@msgtype
  1528  000A5C  0101               	movlb	1	; () banked
  1529  000A5E  0101               	movlb	1	; () banked
  1530  000A60  6F19               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1531  000A62  0101               	movlb	1	; () banked
  1532  000A64  0E38               	movlw	low main@msgtype
  1533  000A66  0101               	movlb	1	; () banked
  1534  000A68  0101               	movlb	1	; () banked
  1535  000A6A  6F18               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1536  000A6C  0101               	movlb	1	; () banked
  1537  000A6E  0E01               	movlw	high main@msgbuffer
  1538  000A70  0101               	movlb	1	; () banked
  1539  000A72  0101               	movlb	1	; () banked
  1540  000A74  6F1B               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1541  000A76  0101               	movlb	1	; () banked
  1542  000A78  0E29               	movlw	low main@msgbuffer
  1543  000A7A  0101               	movlb	1	; () banked
  1544  000A7C  0101               	movlb	1	; () banked
  1545  000A7E  6F1A               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1546  000A80  0E0A               	movlw	10
  1547  000A82  EC4C  F015         	call	_ToMainHigh_recvmsg
  1548  000A86  0101               	movlb	1	; () banked
  1549  000A88  0101               	movlb	1	; () banked
  1550  000A8A  6F39               	movwf	main@length& (0+255),b
  1551                           
  1552                           ; BSR set to: 1
  1553                           ;main.c: 398: if (length < 0) {
  1554  000A8C  0101               	movlb	1	; () banked
  1555  000A8E  0101               	movlb	1	; () banked
  1556  000A90  BF39               	btfsc	main@length& (0+255),7,b
  1557  000A92  D04D               	goto	l3432
  1558  000A94  D03C               	goto	l3430
  1559  000A96                     l3424:
  1560                           
  1561                           ; BSR set to: 1
  1562                           ;main.c: 406: {
  1563                           ;main.c: 407: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1564  000A96  0101               	movlb	1	; () banked
  1565  000A98  0E01               	movlw	high main@t0thread_data
  1566  000A9A  0101               	movlb	1	; () banked
  1567  000A9C  0101               	movlb	1	; () banked
  1568  000A9E  6F01               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1569  000AA0  0101               	movlb	1	; () banked
  1570  000AA2  0E34               	movlw	low main@t0thread_data
  1571  000AA4  0101               	movlb	1	; () banked
  1572  000AA6  0101               	movlb	1	; () banked
  1573  000AA8  6F00               	movwf	timer0_lthread@tptr& (0+255),b
  1574  000AAA  0101               	movlb	1	; () banked
  1575  000AAC  0101               	movlb	1	; () banked
  1576  000AAE  C138  F102         	movff	main@msgtype,timer0_lthread@msgtype
  1577  000AB2  0101               	movlb	1	; () banked
  1578  000AB4  0101               	movlb	1	; () banked
  1579  000AB6  6B03               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1580  000AB8  0101               	movlb	1	; () banked
  1581  000ABA  0101               	movlb	1	; () banked
  1582  000ABC  5139               	movf	main@length& (0+255),w,b
  1583  000ABE  0101               	movlb	1	; () banked
  1584  000AC0  0101               	movlb	1	; () banked
  1585  000AC2  6F04               	movwf	timer0_lthread@length& (0+255),b
  1586  000AC4  0101               	movlb	1	; () banked
  1587  000AC6  6B05               	clrf	(timer0_lthread@length+1)& (0+255),b
  1588  000AC8  0101               	movlb	1	; () banked
  1589  000ACA  BF04               	btfsc	timer0_lthread@length& (0+255),7,b
  1590  000ACC  0705               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1591  000ACE  0101               	movlb	1	; () banked
  1592  000AD0  0E01               	movlw	high main@msgbuffer
  1593  000AD2  0101               	movlb	1	; () banked
  1594  000AD4  0101               	movlb	1	; () banked
  1595  000AD6  6F07               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1596  000AD8  0101               	movlb	1	; () banked
  1597  000ADA  0E29               	movlw	low main@msgbuffer
  1598  000ADC  0101               	movlb	1	; () banked
  1599  000ADE  0101               	movlb	1	; () banked
  1600  000AE0  6F06               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1601  000AE2  EC96  F016         	call	_timer0_lthread	;wreg free
  1602                           
  1603                           ;main.c: 408: break;
  1604  000AE6  D023               	goto	l3432
  1605  000AE8                     l160:
  1606                           
  1607                           ;main.c: 411: case 41:
  1608                           ;main.c: 412: {
  1609                           ;main.c: 415: last_reg_recvd = msgbuffer[0];
  1610  000AE8  C129  F128         	movff	main@msgbuffer,main@last_reg_recvd
  1611                           
  1612                           ;main.c: 416: break;
  1613  000AEC  D020               	goto	l3432
  1614  000AEE                     l3426:
  1615                           
  1616                           ;main.c: 419: {
  1617                           ;main.c: 422: uart_trans(length, msgbuffer);
  1618  000AEE  0101               	movlb	1	; () banked
  1619  000AF0  0E01               	movlw	high main@msgbuffer
  1620  000AF2  0101               	movlb	1	; () banked
  1621  000AF4  0101               	movlb	1	; () banked
  1622  000AF6  6F01               	movwf	(uart_trans@data+1)& (0+255),b
  1623  000AF8  0101               	movlb	1	; () banked
  1624  000AFA  0E29               	movlw	low main@msgbuffer
  1625  000AFC  0101               	movlb	1	; () banked
  1626  000AFE  0101               	movlb	1	; () banked
  1627  000B00  6F00               	movwf	uart_trans@data& (0+255),b
  1628  000B02  0101               	movlb	1	; () banked
  1629  000B04  0101               	movlb	1	; () banked
  1630  000B06  5139               	movf	main@length& (0+255),w,b
  1631  000B08  EC6F  F00E         	call	_uart_trans
  1632                           
  1633                           ;main.c: 425: break;
  1634  000B0C  D010               	goto	l3432
  1635  000B0E                     l3430:
  1636  000B0E  0101               	movlb	1	; () banked
  1637  000B10  0101               	movlb	1	; () banked
  1638  000B12  5138               	movf	main@msgtype& (0+255),w,b
  1639                           
  1640                           ; Switch size 1, requested type "space"
  1641                           ; Number of cases is 5, Range of values is 10 to 46
  1642                           ; switch strategies available:
  1643                           ; Name         Instructions Cycles
  1644                           ; simple_byte           16     9 (average)
  1645                           ;	Chosen strategy is simple_byte
  1646  000B14  0A0A               	xorlw	10	; case 10
  1647  000B16  B4D8               	btfsc	status,2,c
  1648  000B18  D7BE               	goto	l3424
  1649  000B1A  0A22               	xorlw	34	; case 40
  1650  000B1C  B4D8               	btfsc	status,2,c
  1651  000B1E  D7E4               	goto	l160
  1652  000B20  0A01               	xorlw	1	; case 41
  1653  000B22  B4D8               	btfsc	status,2,c
  1654  000B24  D7E1               	goto	l160
  1655  000B26  0A04               	xorlw	4	; case 45
  1656  000B28  B4D8               	btfsc	status,2,c
  1657  000B2A  D7E1               	goto	l3426
  1658  000B2C  0A03               	xorlw	3	; case 46
  1659  000B2E                     l3432:
  1660                           
  1661                           ;main.c: 440: }
  1662                           ;main.c: 443: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1663  000B2E  0101               	movlb	1	; () banked
  1664  000B30  0E01               	movlw	high main@msgtype
  1665  000B32  0101               	movlb	1	; () banked
  1666  000B34  0101               	movlb	1	; () banked
  1667  000B36  6F19               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1668  000B38  0101               	movlb	1	; () banked
  1669  000B3A  0E38               	movlw	low main@msgtype
  1670  000B3C  0101               	movlb	1	; () banked
  1671  000B3E  0101               	movlb	1	; () banked
  1672  000B40  6F18               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1673  000B42  0101               	movlb	1	; () banked
  1674  000B44  0E01               	movlw	high main@msgbuffer
  1675  000B46  0101               	movlb	1	; () banked
  1676  000B48  0101               	movlb	1	; () banked
  1677  000B4A  6F1B               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1678  000B4C  0101               	movlb	1	; () banked
  1679  000B4E  0E29               	movlw	low main@msgbuffer
  1680  000B50  0101               	movlb	1	; () banked
  1681  000B52  0101               	movlb	1	; () banked
  1682  000B54  6F1A               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1683  000B56  0E0A               	movlw	10
  1684  000B58  EC2B  F015         	call	_ToMainLow_recvmsg
  1685  000B5C  0101               	movlb	1	; () banked
  1686  000B5E  0101               	movlb	1	; () banked
  1687  000B60  6F39               	movwf	main@length& (0+255),b
  1688                           
  1689                           ; BSR set to: 1
  1690                           ;main.c: 444: if (length < 0) {
  1691  000B62  0101               	movlb	1	; () banked
  1692  000B64  0101               	movlb	1	; () banked
  1693  000B66  BF39               	btfsc	main@length& (0+255),7,b
  1694  000B68  D775               	goto	l3416
  1695  000B6A  D072               	goto	l3452
  1696  000B6C                     l3438:
  1697                           
  1698                           ; BSR set to: 1
  1699                           ;main.c: 452: {
  1700                           ;main.c: 453: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1701  000B6C  0101               	movlb	1	; () banked
  1702  000B6E  0E01               	movlw	high main@t1thread_data
  1703  000B70  0101               	movlb	1	; () banked
  1704  000B72  0101               	movlb	1	; () banked
  1705  000B74  6F1B               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1706  000B76  0101               	movlb	1	; () banked
  1707  000B78  0E36               	movlw	low main@t1thread_data
  1708  000B7A  0101               	movlb	1	; () banked
  1709  000B7C  0101               	movlb	1	; () banked
  1710  000B7E  6F1A               	movwf	timer1_lthread@tptr& (0+255),b
  1711  000B80  0101               	movlb	1	; () banked
  1712  000B82  0101               	movlb	1	; () banked
  1713  000B84  C138  F11C         	movff	main@msgtype,timer1_lthread@msgtype
  1714  000B88  0101               	movlb	1	; () banked
  1715  000B8A  0101               	movlb	1	; () banked
  1716  000B8C  6B1D               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1717  000B8E  0101               	movlb	1	; () banked
  1718  000B90  0101               	movlb	1	; () banked
  1719  000B92  5139               	movf	main@length& (0+255),w,b
  1720  000B94  0101               	movlb	1	; () banked
  1721  000B96  0101               	movlb	1	; () banked
  1722  000B98  6F1E               	movwf	timer1_lthread@length& (0+255),b
  1723  000B9A  0101               	movlb	1	; () banked
  1724  000B9C  6B1F               	clrf	(timer1_lthread@length+1)& (0+255),b
  1725  000B9E  0101               	movlb	1	; () banked
  1726  000BA0  BF1E               	btfsc	timer1_lthread@length& (0+255),7,b
  1727  000BA2  071F               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1728  000BA4  0101               	movlb	1	; () banked
  1729  000BA6  0E01               	movlw	high main@msgbuffer
  1730  000BA8  0101               	movlb	1	; () banked
  1731  000BAA  0101               	movlb	1	; () banked
  1732  000BAC  6F21               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1733  000BAE  0101               	movlb	1	; () banked
  1734  000BB0  0E29               	movlw	low main@msgbuffer
  1735  000BB2  0101               	movlb	1	; () banked
  1736  000BB4  0101               	movlb	1	; () banked
  1737  000BB6  6F20               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1738  000BB8  ECCB  F012         	call	_timer1_lthread	;wreg free
  1739                           
  1740                           ;main.c: 454: break;
  1741  000BBC  D74B               	goto	l3416
  1742  000BBE                     l3440:
  1743                           
  1744                           ;main.c: 457: case 31:
  1745                           ;main.c: 458: {
  1746                           ;main.c: 461: if(msgbuffer[0] == 0xBA){
  1747  000BBE  0101               	movlb	1	; () banked
  1748  000BC0  0101               	movlb	1	; () banked
  1749  000BC2  5129               	movf	main@msgbuffer& (0+255),w,b
  1750  000BC4  0ABA               	xorlw	186
  1751  000BC6  A4D8               	btfss	status,2,c
  1752  000BC8  D01E               	goto	l3444
  1753                           
  1754                           ; BSR set to: 1
  1755                           ;main.c: 463: i2c_master_send(5, 5, msgbuffer, 0xBE);
  1756  000BCA  0101               	movlb	1	; () banked
  1757  000BCC  6F24               	movwf	??_main& (0+255),b
  1758  000BCE  0E05               	movlw	5
  1759  000BD0  0101               	movlb	1	; () banked
  1760  000BD2  0101               	movlb	1	; () banked
  1761  000BD4  6F00               	movwf	i2c_master_send@recvlength& (0+255),b
  1762  000BD6  0101               	movlb	1	; () banked
  1763  000BD8  5124               	movf	??_main& (0+255),w,b
  1764  000BDA  0101               	movlb	1	; () banked
  1765  000BDC  0E01               	movlw	high main@msgbuffer
  1766  000BDE  0101               	movlb	1	; () banked
  1767  000BE0  0101               	movlb	1	; () banked
  1768  000BE2  6F02               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1769  000BE4  0101               	movlb	1	; () banked
  1770  000BE6  0E29               	movlw	low main@msgbuffer
  1771  000BE8  0101               	movlb	1	; () banked
  1772  000BEA  0101               	movlb	1	; () banked
  1773  000BEC  6F01               	movwf	i2c_master_send@msg& (0+255),b
  1774  000BEE  0101               	movlb	1	; () banked
  1775  000BF0  6F25               	movwf	(??_main+1)& (0+255),b
  1776  000BF2  0EBE               	movlw	190
  1777  000BF4  0101               	movlb	1	; () banked
  1778  000BF6  0101               	movlb	1	; () banked
  1779  000BF8  6F03               	movwf	i2c_master_send@slave_addr& (0+255),b
  1780  000BFA  0101               	movlb	1	; () banked
  1781  000BFC  5125               	movf	(??_main+1)& (0+255),w,b
  1782  000BFE  0E05               	movlw	5
  1783  000C00  EC7F  F008         	call	_i2c_master_send
  1784                           
  1785                           ;main.c: 464: } else if(msgbuffer[0] == 0xAA){
  1786  000C04  D023               	goto	l3448
  1787  000C06                     l3444:
  1788  000C06  0101               	movlb	1	; () banked
  1789  000C08  0101               	movlb	1	; () banked
  1790  000C0A  5129               	movf	main@msgbuffer& (0+255),w,b
  1791  000C0C  0AAA               	xorlw	170
  1792  000C0E  A4D8               	btfss	status,2,c
  1793  000C10  D01D               	goto	l3448
  1794                           
  1795                           ; BSR set to: 1
  1796                           ;main.c: 466: i2c_master_send(1, 5, msgbuffer, 0x9E);
  1797  000C12  0101               	movlb	1	; () banked
  1798  000C14  6F24               	movwf	??_main& (0+255),b
  1799  000C16  0E05               	movlw	5
  1800  000C18  0101               	movlb	1	; () banked
  1801  000C1A  0101               	movlb	1	; () banked
  1802  000C1C  6F00               	movwf	i2c_master_send@recvlength& (0+255),b
  1803  000C1E  0101               	movlb	1	; () banked
  1804  000C20  5124               	movf	??_main& (0+255),w,b
  1805  000C22  0101               	movlb	1	; () banked
  1806  000C24  0E01               	movlw	high main@msgbuffer
  1807  000C26  0101               	movlb	1	; () banked
  1808  000C28  0101               	movlb	1	; () banked
  1809  000C2A  6F02               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1810  000C2C  0101               	movlb	1	; () banked
  1811  000C2E  0E29               	movlw	low main@msgbuffer
  1812  000C30  0101               	movlb	1	; () banked
  1813  000C32  0101               	movlb	1	; () banked
  1814  000C34  6F01               	movwf	i2c_master_send@msg& (0+255),b
  1815  000C36  0101               	movlb	1	; () banked
  1816  000C38  6F25               	movwf	(??_main+1)& (0+255),b
  1817  000C3A  0E9E               	movlw	158
  1818  000C3C  0101               	movlb	1	; () banked
  1819  000C3E  0101               	movlb	1	; () banked
  1820  000C40  6F03               	movwf	i2c_master_send@slave_addr& (0+255),b
  1821  000C42  0101               	movlb	1	; () banked
  1822  000C44  5125               	movf	(??_main+1)& (0+255),w,b
  1823  000C46  0E01               	movlw	1
  1824  000C48  EC7F  F008         	call	_i2c_master_send
  1825  000C4C                     l3448:
  1826                           
  1827                           ;main.c: 467: }
  1828                           ;main.c: 469: LATBbits.LATB2 = 0;
  1829  000C4C  948A               	bcf	3978,2,c	;volatile
  1830                           
  1831                           ;main.c: 471: break;
  1832  000C4E  D702               	goto	l3416
  1833  000C50                     l3452:
  1834  000C50  0101               	movlb	1	; () banked
  1835  000C52  0101               	movlb	1	; () banked
  1836  000C54  5138               	movf	main@msgtype& (0+255),w,b
  1837                           
  1838                           ; Switch size 1, requested type "space"
  1839                           ; Number of cases is 3, Range of values is 11 to 31
  1840                           ; switch strategies available:
  1841                           ; Name         Instructions Cycles
  1842                           ; simple_byte           10     6 (average)
  1843                           ;	Chosen strategy is simple_byte
  1844  000C56  0A0B               	xorlw	11	; case 11
  1845  000C58  B4D8               	btfsc	status,2,c
  1846  000C5A  D788               	goto	l3438
  1847  000C5C  0A15               	xorlw	21	; case 30
  1848  000C5E  B4D8               	btfsc	status,2,c
  1849  000C60  D7AE               	goto	l3440
  1850  000C62  0A01               	xorlw	1	; case 31
  1851  000C64  B4D8               	btfsc	status,2,c
  1852  000C66  D7AB               	goto	l3440
  1853  000C68  D6F5               	goto	l3416
  1854  000C6A                     __end_of_main:
  1855                           	opt stack 0
  1856                           tblptru	equ	0xFF8
  1857                           tblptrh	equ	0xFF7
  1858                           tblptrl	equ	0xFF6
  1859                           tablat	equ	0xFF5
  1860                           intcon2	equ	0xFF1
  1861                           postinc0	equ	0xFEE
  1862                           wreg	equ	0xFE8
  1863                           postdec1	equ	0xFE5
  1864                           fsr1l	equ	0xFE1
  1865                           status	equ	0xFD8
  1866                           
  1867 ;; *************** function _uart_trans *****************
  1868 ;; Defined at:
  1869 ;;		line 61 in file "../src/my_uart.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  length          1    wreg     unsigned char 
  1872 ;;  data            2    0[BANK1 ] PTR unsigned char 
  1873 ;;		 -> motorMove@direction(2), main@msgbuffer(11), 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  length          1    4[BANK1 ] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;		None               void
  1878 ;; Registers used:
  1879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1885 ;;      Params:         0       0       2       0       0
  1886 ;;      Locals:         0       0       1       0       0
  1887 ;;      Temps:          0       0       2       0       0
  1888 ;;      Totals:         0       0       5       0       0
  1889 ;;Total ram usage:        5 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:   11
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text1
  1900  001CDE                     __ptext1:
  1901                           	opt stack 0
  1902  001CDE                     _uart_trans:
  1903                           	opt stack 19
  1904                           
  1905                           ; BSR set to: 1
  1906                           ;incstack = 0
  1907                           ;uart_trans@length stored from wreg
  1908  001CDE  CFE8 F104          	movff	wreg,uart_trans@length
  1909                           
  1910                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1911  001CE2  EE20 F00D          	lfsr	2,13
  1912  001CE6  505E               	movf	_uc_ptr,w,c
  1913  001CE8  26D9               	addwf	fsr2l,f,c
  1914  001CEA  505F               	movf	_uc_ptr+1,w,c
  1915  001CEC  22DA               	addwfc	fsr2h,f,c
  1916  001CEE  0E00               	movlw	0
  1917  001CF0  6EDF               	movwf	indf2,c
  1918  001CF2  D035               	goto	l3624
  1919  001CF4                     l3620:
  1920                           
  1921                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1922  001CF4  EE20 F00D          	lfsr	2,13
  1923  001CF8  505E               	movf	_uc_ptr,w,c
  1924  001CFA  26D9               	addwf	fsr2l,f,c
  1925  001CFC  505F               	movf	_uc_ptr+1,w,c
  1926  001CFE  22DA               	addwfc	fsr2h,f,c
  1927  001D00  50DF               	movf	indf2,w,c
  1928  001D02  0101               	movlb	1	; () banked
  1929  001D04  6F02               	movwf	??_uart_trans& (0+255),b
  1930  001D06  0101               	movlb	1	; () banked
  1931  001D08  5102               	movf	??_uart_trans& (0+255),w,b
  1932  001D0A  0D01               	mullw	1
  1933  001D0C  50F3               	movf	prodl,w,c
  1934  001D0E  0101               	movlb	1	; () banked
  1935  001D10  0101               	movlb	1	; () banked
  1936  001D12  2500               	addwf	uart_trans@data& (0+255),w,b
  1937  001D14  6ED9               	movwf	fsr2l,c
  1938  001D16  50F4               	movf	prodh,w,c
  1939  001D18  0101               	movlb	1	; () banked
  1940  001D1A  0101               	movlb	1	; () banked
  1941  001D1C  2101               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1942  001D1E  6EDA               	movwf	fsr2h,c
  1943  001D20  EE10 F00D          	lfsr	1,13
  1944  001D24  505E               	movf	_uc_ptr,w,c
  1945  001D26  26E1               	addwf	fsr1l,f,c
  1946  001D28  505F               	movf	_uc_ptr+1,w,c
  1947  001D2A  22E2               	addwfc	fsr1h,f,c
  1948  001D2C  50E7               	movf	indf1,w,c
  1949  001D2E  0101               	movlb	1	; () banked
  1950  001D30  6F03               	movwf	(??_uart_trans+1)& (0+255),b
  1951  001D32  0101               	movlb	1	; () banked
  1952  001D34  5103               	movf	(??_uart_trans+1)& (0+255),w,b
  1953  001D36  0D01               	mullw	1
  1954  001D38  0E07               	movlw	7
  1955  001D3A  26F3               	addwf	prodl,f,c
  1956  001D3C  0E00               	movlw	0
  1957  001D3E  22F4               	addwfc	prodh,f,c
  1958  001D40  50F3               	movf	prodl,w,c
  1959  001D42  245E               	addwf	_uc_ptr,w,c
  1960  001D44  6EE1               	movwf	fsr1l,c
  1961  001D46  50F4               	movf	prodh,w,c
  1962  001D48  205F               	addwfc	_uc_ptr+1,w,c
  1963  001D4A  6EE2               	movwf	fsr1h,c
  1964  001D4C  CFDF FFE7          	movff	indf2,indf1
  1965                           
  1966                           ; BSR set to: 1
  1967  001D50  EE20 F00D          	lfsr	2,13
  1968  001D54  505E               	movf	_uc_ptr,w,c
  1969  001D56  26D9               	addwf	fsr2l,f,c
  1970  001D58  505F               	movf	_uc_ptr+1,w,c
  1971  001D5A  22DA               	addwfc	fsr2h,f,c
  1972  001D5C  2ADF               	incf	indf2,f,c
  1973  001D5E                     l3624:
  1974  001D5E  EE20 F00D          	lfsr	2,13
  1975  001D62  505E               	movf	_uc_ptr,w,c
  1976  001D64  26D9               	addwf	fsr2l,f,c
  1977  001D66  505F               	movf	_uc_ptr+1,w,c
  1978  001D68  22DA               	addwfc	fsr2h,f,c
  1979  001D6A  50DF               	movf	indf2,w,c
  1980  001D6C  0101               	movlb	1	; () banked
  1981  001D6E  6F02               	movwf	??_uart_trans& (0+255),b
  1982  001D70  0101               	movlb	1	; () banked
  1983  001D72  0101               	movlb	1	; () banked
  1984  001D74  5104               	movf	uart_trans@length& (0+255),w,b
  1985  001D76  0101               	movlb	1	; () banked
  1986  001D78  5D02               	subwf	??_uart_trans& (0+255),w,b
  1987  001D7A  A0D8               	btfss	status,0,c
  1988  001D7C  D7BB               	goto	l3620
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;my_uart.c: 67: }
  1992                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  1993                           
  1994                           ; BSR set to: 1
  1995  001D7E  EE20 F00E          	lfsr	2,14
  1996  001D82  505E               	movf	_uc_ptr,w,c
  1997  001D84  26D9               	addwf	fsr2l,f,c
  1998  001D86  505F               	movf	_uc_ptr+1,w,c
  1999  001D88  22DA               	addwfc	fsr2h,f,c
  2000  001D8A  0E00               	movlw	0
  2001  001D8C  6EDF               	movwf	indf2,c
  2002                           
  2003                           ; BSR set to: 1
  2004                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  2005  001D8E  889D               	bsf	3997,4,c	;volatile
  2006                           
  2007                           ; BSR set to: 1
  2008  001D90  0012               	return	
  2009  001D92                     __end_of_uart_trans:
  2010                           	opt stack 0
  2011                           tblptru	equ	0xFF8
  2012                           tblptrh	equ	0xFF7
  2013                           tblptrl	equ	0xFF6
  2014                           tablat	equ	0xFF5
  2015                           prodh	equ	0xFF4
  2016                           prodl	equ	0xFF3
  2017                           intcon2	equ	0xFF1
  2018                           postinc0	equ	0xFEE
  2019                           wreg	equ	0xFE8
  2020                           indf1	equ	0xFE7
  2021                           postdec1	equ	0xFE5
  2022                           fsr1h	equ	0xFE2
  2023                           fsr1l	equ	0xFE1
  2024                           indf2	equ	0xFDF
  2025                           fsr2h	equ	0xFDA
  2026                           fsr2l	equ	0xFD9
  2027                           status	equ	0xFD8
  2028                           
  2029 ;; *************** function _timer1_lthread *****************
  2030 ;; Defined at:
  2031 ;;		line 14 in file "../src/timer1_thread.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  2034 ;;		 -> main@t1thread_data(2), 
  2035 ;;  msgtype         2   28[BANK1 ] int 
  2036 ;;  length          2   30[BANK1 ] int 
  2037 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  2038 ;;		 -> main@msgbuffer(11), 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  retval          1   35[BANK1 ] char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  2   26[BANK1 ] int 
  2043 ;; Registers used:
  2044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2050 ;;      Params:         0       0       8       0       0
  2051 ;;      Locals:         0       0       1       0       0
  2052 ;;      Temps:          0       0       1       0       0
  2053 ;;      Totals:         0       0      10       0       0
  2054 ;;Total ram usage:       10 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:   14
  2057 ;; This function calls:
  2058 ;;		_FromMainHigh_sendmsg
  2059 ;;		___lwmod
  2060 ;; This function is called by:
  2061 ;;		_main
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text2
  2066  002596                     __ptext2:
  2067                           	opt stack 0
  2068  002596                     _timer1_lthread:
  2069                           	opt stack 16
  2070                           
  2071                           ;timer1_thread.c: 15: signed char retval;
  2072                           ;timer1_thread.c: 17: tptr->msgcount++;
  2073                           
  2074                           ; BSR set to: 1
  2075                           ;incstack = 0
  2076  002596  C11A  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2077  00259A  C11B  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2078  00259E  2ADE               	incf	postinc2,f,c
  2079  0025A0  0E00               	movlw	0
  2080  0025A2  22DD               	addwfc	postdec2,f,c
  2081                           
  2082                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  2083  0025A4  C11A  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2084  0025A8  C11B  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2085  0025AC  0101               	movlb	1	; () banked
  2086  0025AE  CFDE F100          	movff	postinc2,___lwmod@dividend
  2087  0025B2  0101               	movlb	1	; () banked
  2088  0025B4  CFDD F101          	movff	postdec2,___lwmod@dividend+1
  2089  0025B8  0E00               	movlw	0
  2090  0025BA  0101               	movlb	1	; () banked
  2091  0025BC  0101               	movlb	1	; () banked
  2092  0025BE  6F03               	movwf	(___lwmod@divisor+1)& (0+255),b
  2093  0025C0  0E0A               	movlw	10
  2094  0025C2  0101               	movlb	1	; () banked
  2095  0025C4  6F02               	movwf	___lwmod@divisor& (0+255),b
  2096  0025C6  EC47  F011         	call	___lwmod	;wreg free
  2097  0025CA  0101               	movlb	1	; () banked
  2098  0025CC  0101               	movlb	1	; () banked
  2099  0025CE  5100               	movf	?___lwmod& (0+255),w,b
  2100  0025D0  0A09               	xorlw	9
  2101  0025D2  0101               	movlb	1	; () banked
  2102  0025D4  1101               	iorwf	(?___lwmod+1)& (0+255),w,b
  2103  0025D6  A4D8               	btfss	status,2,c
  2104  0025D8  0012               	return	
  2105                           
  2106                           ; BSR set to: 1
  2107                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  2108  0025DA  0101               	movlb	1	; () banked
  2109  0025DC  6F22               	movwf	??_timer1_lthread& (0+255),b
  2110  0025DE  0E14               	movlw	20
  2111  0025E0  0101               	movlb	1	; () banked
  2112  0025E2  0101               	movlb	1	; () banked
  2113  0025E4  6F16               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2114  0025E6  0101               	movlb	1	; () banked
  2115  0025E8  5122               	movf	??_timer1_lthread& (0+255),w,b
  2116  0025EA  0101               	movlb	1	; () banked
  2117  0025EC  0101               	movlb	1	; () banked
  2118  0025EE  C11B  F118         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2119  0025F2  0101               	movlb	1	; () banked
  2120  0025F4  0101               	movlb	1	; () banked
  2121  0025F6  C11A  F117         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  2122  0025FA  0E02               	movlw	2
  2123  0025FC  ECA9  F015         	call	_FromMainHigh_sendmsg
  2124  002600  0101               	movlb	1	; () banked
  2125  002602  0101               	movlb	1	; () banked
  2126  002604  6F23               	movwf	timer1_lthread@retval& (0+255),b
  2127  002606  0012               	return	
  2128  002608                     __end_of_timer1_lthread:
  2129                           	opt stack 0
  2130                           tblptru	equ	0xFF8
  2131                           tblptrh	equ	0xFF7
  2132                           tblptrl	equ	0xFF6
  2133                           tablat	equ	0xFF5
  2134                           prodh	equ	0xFF4
  2135                           prodl	equ	0xFF3
  2136                           intcon2	equ	0xFF1
  2137                           postinc0	equ	0xFEE
  2138                           wreg	equ	0xFE8
  2139                           indf1	equ	0xFE7
  2140                           postdec1	equ	0xFE5
  2141                           fsr1h	equ	0xFE2
  2142                           fsr1l	equ	0xFE1
  2143                           indf2	equ	0xFDF
  2144                           postinc2	equ	0xFDE
  2145                           postdec2	equ	0xFDD
  2146                           fsr2h	equ	0xFDA
  2147                           fsr2l	equ	0xFD9
  2148                           status	equ	0xFD8
  2149                           
  2150 ;; *************** function ___lwmod *****************
  2151 ;; Defined at:
  2152 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  dividend        2    0[BANK1 ] unsigned int 
  2155 ;;  divisor         2    2[BANK1 ] unsigned int 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  counter         1    5[BANK1 ] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  2    0[BANK1 ] unsigned int 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2167 ;;      Params:         0       0       4       0       0
  2168 ;;      Locals:         0       0       1       0       0
  2169 ;;      Temps:          0       0       1       0       0
  2170 ;;      Totals:         0       0       6       0       0
  2171 ;;Total ram usage:        6 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:   11
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_timer1_lthread
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text3
  2182  00228E                     __ptext3:
  2183                           	opt stack 0
  2184  00228E                     ___lwmod:
  2185                           	opt stack 18
  2186                           
  2187                           ; BSR set to: 1
  2188                           ;incstack = 0
  2189  00228E  0101               	movlb	1	; () banked
  2190  002290  0101               	movlb	1	; () banked
  2191  002292  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2192  002294  1102               	iorwf	___lwmod@divisor& (0+255),w,b
  2193  002296  B4D8               	btfsc	status,2,c
  2194  002298  D03A               	goto	l1216
  2195                           
  2196                           ; BSR set to: 1
  2197  00229A  0101               	movlb	1	; () banked
  2198  00229C  6F04               	movwf	??___lwmod& (0+255),b
  2199  00229E  0E01               	movlw	1
  2200  0022A0  0101               	movlb	1	; () banked
  2201  0022A2  0101               	movlb	1	; () banked
  2202  0022A4  6F05               	movwf	___lwmod@counter& (0+255),b
  2203  0022A6  0101               	movlb	1	; () banked
  2204  0022A8  5104               	movf	??___lwmod& (0+255),w,b
  2205  0022AA  D009               	goto	l4174
  2206  0022AC                     l4172:
  2207                           
  2208                           ; BSR set to: 1
  2209  0022AC  0101               	movlb	1	; () banked
  2210  0022AE  0101               	movlb	1	; () banked
  2211  0022B0  0101               	movlb	1	; () banked
  2212  0022B2  90D8               	bcf	status,0,c
  2213  0022B4  3702               	rlcf	___lwmod@divisor& (0+255),f,b
  2214  0022B6  3703               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2215  0022B8  0101               	movlb	1	; () banked
  2216  0022BA  0101               	movlb	1	; () banked
  2217  0022BC  2B05               	incf	___lwmod@counter& (0+255),f,b
  2218  0022BE                     l4174:
  2219                           
  2220                           ; BSR set to: 1
  2221  0022BE  0101               	movlb	1	; () banked
  2222  0022C0  0101               	movlb	1	; () banked
  2223  0022C2  AF03               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2224  0022C4  D7F3               	goto	l4172
  2225  0022C6                     l4176:
  2226                           
  2227                           ; BSR set to: 1
  2228  0022C6  0101               	movlb	1	; () banked
  2229  0022C8  0101               	movlb	1	; () banked
  2230  0022CA  5102               	movf	___lwmod@divisor& (0+255),w,b
  2231  0022CC  0101               	movlb	1	; () banked
  2232  0022CE  0101               	movlb	1	; () banked
  2233  0022D0  5D00               	subwf	___lwmod@dividend& (0+255),w,b
  2234  0022D2  0101               	movlb	1	; () banked
  2235  0022D4  0101               	movlb	1	; () banked
  2236  0022D6  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2237  0022D8  0101               	movlb	1	; () banked
  2238  0022DA  0101               	movlb	1	; () banked
  2239  0022DC  5901               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2240  0022DE  A0D8               	btfss	status,0,c
  2241  0022E0  D00C               	goto	l4180
  2242                           
  2243                           ; BSR set to: 1
  2244  0022E2  0101               	movlb	1	; () banked
  2245  0022E4  0101               	movlb	1	; () banked
  2246  0022E6  5102               	movf	___lwmod@divisor& (0+255),w,b
  2247  0022E8  0101               	movlb	1	; () banked
  2248  0022EA  0101               	movlb	1	; () banked
  2249  0022EC  5F00               	subwf	___lwmod@dividend& (0+255),f,b
  2250  0022EE  0101               	movlb	1	; () banked
  2251  0022F0  0101               	movlb	1	; () banked
  2252  0022F2  5103               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2253  0022F4  0101               	movlb	1	; () banked
  2254  0022F6  0101               	movlb	1	; () banked
  2255  0022F8  5B01               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2256  0022FA                     l4180:
  2257                           
  2258                           ; BSR set to: 1
  2259  0022FA  0101               	movlb	1	; () banked
  2260  0022FC  0101               	movlb	1	; () banked
  2261  0022FE  0101               	movlb	1	; () banked
  2262  002300  90D8               	bcf	status,0,c
  2263  002302  3303               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2264  002304  3302               	rrcf	___lwmod@divisor& (0+255),f,b
  2265                           
  2266                           ; BSR set to: 1
  2267  002306  0101               	movlb	1	; () banked
  2268  002308  0101               	movlb	1	; () banked
  2269  00230A  2F05               	decfsz	___lwmod@counter& (0+255),f,b
  2270  00230C  D7DC               	goto	l4176
  2271  00230E                     l1216:
  2272                           
  2273                           ; BSR set to: 1
  2274  00230E  C100  F100         	movff	___lwmod@dividend,?___lwmod
  2275  002312  C101  F101         	movff	___lwmod@dividend+1,?___lwmod+1
  2276                           
  2277                           ; BSR set to: 1
  2278  002316  0012               	return	
  2279  002318                     __end_of___lwmod:
  2280                           	opt stack 0
  2281                           tblptru	equ	0xFF8
  2282                           tblptrh	equ	0xFF7
  2283                           tblptrl	equ	0xFF6
  2284                           tablat	equ	0xFF5
  2285                           prodh	equ	0xFF4
  2286                           prodl	equ	0xFF3
  2287                           intcon2	equ	0xFF1
  2288                           postinc0	equ	0xFEE
  2289                           wreg	equ	0xFE8
  2290                           indf1	equ	0xFE7
  2291                           postdec1	equ	0xFE5
  2292                           fsr1h	equ	0xFE2
  2293                           fsr1l	equ	0xFE1
  2294                           indf2	equ	0xFDF
  2295                           postinc2	equ	0xFDE
  2296                           postdec2	equ	0xFDD
  2297                           fsr2h	equ	0xFDA
  2298                           fsr2l	equ	0xFD9
  2299                           status	equ	0xFD8
  2300                           
  2301 ;; *************** function _FromMainHigh_sendmsg *****************
  2302 ;; Defined at:
  2303 ;;		line 174 in file "../src/messages.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  length          1    wreg     unsigned char 
  2306 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2307 ;;  data            2   23[BANK1 ] PTR void 
  2308 ;;		 -> main@t1thread_data(2), 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  length          1   25[BANK1 ] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      char 
  2313 ;; Registers used:
  2314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2320 ;;      Params:         0       0       3       0       0
  2321 ;;      Locals:         0       0       1       0       0
  2322 ;;      Temps:          0       0       0       0       0
  2323 ;;      Totals:         0       0       4       0       0
  2324 ;;Total ram usage:        4 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:   13
  2327 ;; This function calls:
  2328 ;;		_send_msg
  2329 ;; This function is called by:
  2330 ;;		_timer1_lthread
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           	psect	text4
  2335  002B52                     __ptext4:
  2336                           	opt stack 0
  2337  002B52                     _FromMainHigh_sendmsg:
  2338                           	opt stack 16
  2339                           
  2340                           ; BSR set to: 1
  2341                           ;incstack = 0
  2342                           ;FromMainHigh_sendmsg@length stored from wreg
  2343  002B52  CFE8 F119          	movff	wreg,FromMainHigh_sendmsg@length
  2344                           
  2345                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2346  002B56  0102               	movlb	2	; () banked
  2347  002B58  0E02               	movlw	high _FromMainHigh_MQ
  2348  002B5A  0101               	movlb	1	; () banked
  2349  002B5C  0101               	movlb	1	; () banked
  2350  002B5E  6F0B               	movwf	(send_msg@qptr+1)& (0+255),b
  2351  002B60  0102               	movlb	2	; () banked
  2352  002B62  0E00               	movlw	low _FromMainHigh_MQ
  2353  002B64  0101               	movlb	1	; () banked
  2354  002B66  0101               	movlb	1	; () banked
  2355  002B68  6F0A               	movwf	send_msg@qptr& (0+255),b
  2356  002B6A  C119  F10C         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2357  002B6E  C116  F10D         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2358  002B72  0101               	movlb	1	; () banked
  2359  002B74  0101               	movlb	1	; () banked
  2360  002B76  C118  F10F         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2361  002B7A  0101               	movlb	1	; () banked
  2362  002B7C  0101               	movlb	1	; () banked
  2363  002B7E  C117  F10E         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2364  002B82  EC1E  F009         	call	_send_msg	;wreg free
  2365  002B86  0012               	return	
  2366  002B88                     __end_of_FromMainHigh_sendmsg:
  2367                           	opt stack 0
  2368                           tblptru	equ	0xFF8
  2369                           tblptrh	equ	0xFF7
  2370                           tblptrl	equ	0xFF6
  2371                           tablat	equ	0xFF5
  2372                           prodh	equ	0xFF4
  2373                           prodl	equ	0xFF3
  2374                           intcon2	equ	0xFF1
  2375                           postinc0	equ	0xFEE
  2376                           wreg	equ	0xFE8
  2377                           indf1	equ	0xFE7
  2378                           postdec1	equ	0xFE5
  2379                           fsr1h	equ	0xFE2
  2380                           fsr1l	equ	0xFE1
  2381                           indf2	equ	0xFDF
  2382                           postinc2	equ	0xFDE
  2383                           postdec2	equ	0xFDD
  2384                           fsr2h	equ	0xFDA
  2385                           fsr2l	equ	0xFD9
  2386                           status	equ	0xFD8
  2387                           
  2388 ;; *************** function _send_msg *****************
  2389 ;; Defined at:
  2390 ;;		line 24 in file "../src/messages.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2393 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2394 ;;  length          1   12[BANK1 ] unsigned char 
  2395 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2396 ;;  data            2   14[BANK1 ] PTR void 
  2397 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  2398 ;;		 -> main@uc(15), 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2401 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  2402 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2403 ;;  tlength         2   17[BANK1 ] unsigned int 
  2404 ;;  slot            1   19[BANK1 ] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      char 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2414 ;;      Params:         0       0       6       0       0
  2415 ;;      Locals:         0       0       5       0       0
  2416 ;;      Temps:          0       0       1       0       0
  2417 ;;      Totals:         0       0      12       0       0
  2418 ;;Total ram usage:       12 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:   12
  2421 ;; This function calls:
  2422 ;;		___awmod
  2423 ;;		_memcpy
  2424 ;; This function is called by:
  2425 ;;		_FromMainHigh_sendmsg
  2426 ;;		_FromMainLow_sendmsg
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text5
  2431  00123C                     __ptext5:
  2432                           	opt stack 0
  2433  00123C                     _send_msg:
  2434                           	opt stack 16
  2435                           
  2436                           ;messages.c: 25: unsigned char slot;
  2437                           ;messages.c: 27: msg *qmsg;
  2438                           ;messages.c: 28: size_t tlength = length;
  2439                           
  2440                           ;incstack = 0
  2441  00123C  0101               	movlb	1	; () banked
  2442  00123E  0101               	movlb	1	; () banked
  2443  001240  C10C  F111         	movff	send_msg@length,send_msg@tlength
  2444  001244  0101               	movlb	1	; () banked
  2445  001246  0101               	movlb	1	; () banked
  2446  001248  6B12               	clrf	(send_msg@tlength+1)& (0+255),b
  2447                           
  2448                           ; BSR set to: 1
  2449                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2450  00124A  0101               	movlb	1	; () banked
  2451  00124C  EE20 F041          	lfsr	2,65
  2452  001250  0101               	movlb	1	; () banked
  2453  001252  510A               	movf	send_msg@qptr& (0+255),w,b
  2454  001254  26D9               	addwf	fsr2l,f,c
  2455  001256  0101               	movlb	1	; () banked
  2456  001258  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2457  00125A  22DA               	addwfc	fsr2h,f,c
  2458  00125C  50DF               	movf	indf2,w,c
  2459  00125E  0101               	movlb	1	; () banked
  2460  001260  0101               	movlb	1	; () banked
  2461  001262  6F13               	movwf	send_msg@slot& (0+255),b
  2462                           
  2463                           ; BSR set to: 1
  2464                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2465  001264  0101               	movlb	1	; () banked
  2466  001266  0101               	movlb	1	; () banked
  2467  001268  5113               	movf	send_msg@slot& (0+255),w,b
  2468  00126A  0D0D               	mullw	13
  2469  00126C  50F3               	movf	prodl,w,c
  2470  00126E  0101               	movlb	1	; () banked
  2471  001270  0101               	movlb	1	; () banked
  2472  001272  250A               	addwf	send_msg@qptr& (0+255),w,b
  2473  001274  0101               	movlb	1	; () banked
  2474  001276  0101               	movlb	1	; () banked
  2475  001278  6F14               	movwf	send_msg@qmsg& (0+255),b
  2476  00127A  50F4               	movf	prodh,w,c
  2477  00127C  0101               	movlb	1	; () banked
  2478  00127E  0101               	movlb	1	; () banked
  2479  001280  210B               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2480  001282  0101               	movlb	1	; () banked
  2481  001284  6F15               	movwf	(send_msg@qmsg+1)& (0+255),b
  2482                           
  2483                           ; BSR set to: 1
  2484                           ;messages.c: 41: if (qmsg->full != 0) {
  2485  001286  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2486  00128A  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2487  00128E  50DF               	movf	indf2,w,c
  2488  001290  B4D8               	btfsc	status,2,c
  2489  001292  D002               	goto	l3682
  2490                           
  2491                           ; BSR set to: 1
  2492                           ;messages.c: 42: return (-1);
  2493  001294  0EFF               	movlw	255
  2494  001296  0012               	return	
  2495  001298                     l3682:
  2496                           
  2497                           ; BSR set to: 1
  2498                           ;messages.c: 43: }
  2499                           ;messages.c: 46: qmsg->length = length;
  2500  001298  0101               	movlb	1	; () banked
  2501  00129A  EE20 F001          	lfsr	2,1
  2502  00129E  0101               	movlb	1	; () banked
  2503  0012A0  5114               	movf	send_msg@qmsg& (0+255),w,b
  2504  0012A2  26D9               	addwf	fsr2l,f,c
  2505  0012A4  0101               	movlb	1	; () banked
  2506  0012A6  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2507  0012A8  22DA               	addwfc	fsr2h,f,c
  2508  0012AA  0101               	movlb	1	; () banked
  2509  0012AC  C10C  FFDF         	movff	send_msg@length,indf2
  2510                           
  2511                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2512  0012B0  0101               	movlb	1	; () banked
  2513  0012B2  EE20 F002          	lfsr	2,2
  2514  0012B6  0101               	movlb	1	; () banked
  2515  0012B8  5114               	movf	send_msg@qmsg& (0+255),w,b
  2516  0012BA  26D9               	addwf	fsr2l,f,c
  2517  0012BC  0101               	movlb	1	; () banked
  2518  0012BE  5115               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2519  0012C0  22DA               	addwfc	fsr2h,f,c
  2520  0012C2  0101               	movlb	1	; () banked
  2521  0012C4  C10D  FFDF         	movff	send_msg@msgtype,indf2
  2522                           
  2523                           ; BSR set to: 1
  2524                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2525  0012C8  0E03               	movlw	3
  2526  0012CA  0101               	movlb	1	; () banked
  2527  0012CC  0101               	movlb	1	; () banked
  2528  0012CE  2514               	addwf	send_msg@qmsg& (0+255),w,b
  2529  0012D0  0101               	movlb	1	; () banked
  2530  0012D2  0101               	movlb	1	; () banked
  2531  0012D4  6F00               	movwf	memcpy@d1& (0+255),b
  2532  0012D6  0E00               	movlw	0
  2533  0012D8  0101               	movlb	1	; () banked
  2534  0012DA  0101               	movlb	1	; () banked
  2535  0012DC  2115               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2536  0012DE  0101               	movlb	1	; () banked
  2537  0012E0  6F01               	movwf	(memcpy@d1+1)& (0+255),b
  2538  0012E2  0101               	movlb	1	; () banked
  2539  0012E4  0101               	movlb	1	; () banked
  2540  0012E6  C10F  F103         	movff	send_msg@data+1,memcpy@s1+1
  2541  0012EA  0101               	movlb	1	; () banked
  2542  0012EC  0101               	movlb	1	; () banked
  2543  0012EE  C10E  F102         	movff	send_msg@data,memcpy@s1
  2544  0012F2  C111  F104         	movff	send_msg@tlength,memcpy@n
  2545  0012F6  C112  F105         	movff	send_msg@tlength+1,memcpy@n+1
  2546  0012FA  ECDD  F013         	call	_memcpy	;wreg free
  2547                           
  2548                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  2549  0012FE  0101               	movlb	1	; () banked
  2550  001300  EE20 F041          	lfsr	2,65
  2551  001304  0101               	movlb	1	; () banked
  2552  001306  510A               	movf	send_msg@qptr& (0+255),w,b
  2553  001308  26D9               	addwf	fsr2l,f,c
  2554  00130A  0101               	movlb	1	; () banked
  2555  00130C  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2556  00130E  22DA               	addwfc	fsr2h,f,c
  2557  001310  0101               	movlb	1	; () banked
  2558  001312  EE10 F041          	lfsr	1,65
  2559  001316  0101               	movlb	1	; () banked
  2560  001318  510A               	movf	send_msg@qptr& (0+255),w,b
  2561  00131A  26E1               	addwf	fsr1l,f,c
  2562  00131C  0101               	movlb	1	; () banked
  2563  00131E  510B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2564  001320  22E2               	addwfc	fsr1h,f,c
  2565  001322  50E7               	movf	indf1,w,c
  2566  001324  0101               	movlb	1	; () banked
  2567  001326  6F10               	movwf	??_send_msg& (0+255),b
  2568  001328  0E01               	movlw	1
  2569  00132A  0101               	movlb	1	; () banked
  2570  00132C  2510               	addwf	??_send_msg& (0+255),w,b
  2571  00132E  0101               	movlb	1	; () banked
  2572  001330  0101               	movlb	1	; () banked
  2573  001332  6F00               	movwf	___awmod@dividend& (0+255),b
  2574  001334  0101               	movlb	1	; () banked
  2575  001336  0101               	movlb	1	; () banked
  2576  001338  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
  2577  00133A  0E00               	movlw	0
  2578  00133C  2301               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2579  00133E  0E00               	movlw	0
  2580  001340  0101               	movlb	1	; () banked
  2581  001342  0101               	movlb	1	; () banked
  2582  001344  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
  2583  001346  0E05               	movlw	5
  2584  001348  0101               	movlb	1	; () banked
  2585  00134A  6F02               	movwf	___awmod@divisor& (0+255),b
  2586  00134C  EC4A  F00A         	call	___awmod	;wreg free
  2587  001350  0101               	movlb	1	; () banked
  2588  001352  0101               	movlb	1	; () banked
  2589  001354  5100               	movf	?___awmod& (0+255),w,b
  2590  001356  6EDF               	movwf	indf2,c
  2591                           
  2592                           ; BSR set to: 1
  2593                           ;messages.c: 59: qmsg->full = 1;
  2594  001358  C114  FFD9         	movff	send_msg@qmsg,fsr2l
  2595  00135C  C115  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2596  001360  0E01               	movlw	1
  2597  001362  6EDF               	movwf	indf2,c
  2598                           
  2599                           ; BSR set to: 1
  2600                           ;messages.c: 60: return (1);
  2601  001364  0E01               	movlw	1
  2602  001366  0012               	return	
  2603  001368                     __end_of_send_msg:
  2604                           	opt stack 0
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           prodh	equ	0xFF4
  2610                           prodl	equ	0xFF3
  2611                           intcon2	equ	0xFF1
  2612                           postinc0	equ	0xFEE
  2613                           wreg	equ	0xFE8
  2614                           indf1	equ	0xFE7
  2615                           postdec1	equ	0xFE5
  2616                           fsr1h	equ	0xFE2
  2617                           fsr1l	equ	0xFE1
  2618                           indf2	equ	0xFDF
  2619                           postinc2	equ	0xFDE
  2620                           postdec2	equ	0xFDD
  2621                           fsr2h	equ	0xFDA
  2622                           fsr2l	equ	0xFD9
  2623                           status	equ	0xFD8
  2624                           
  2625 ;; *************** function _timer0_lthread *****************
  2626 ;; Defined at:
  2627 ;;		line 9 in file "../src/timer0_thread.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2630 ;;		 -> main@t0thread_data(2), 
  2631 ;;  msgtype         2    2[BANK1 ] int 
  2632 ;;  length          2    4[BANK1 ] int 
  2633 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2634 ;;		 -> main@msgbuffer(11), 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2637 ;;		 -> main@msgbuffer(11), 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  2    0[BANK1 ] int 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2, status,0
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2647 ;;      Params:         0       0       8       0       0
  2648 ;;      Locals:         0       0       2       0       0
  2649 ;;      Temps:          0       0       0       0       0
  2650 ;;      Totals:         0       0      10       0       0
  2651 ;;Total ram usage:       10 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; Hardware stack levels required when called:   11
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text6
  2662  002D2C                     __ptext6:
  2663                           	opt stack 0
  2664  002D2C                     _timer0_lthread:
  2665                           	opt stack 19
  2666                           
  2667                           ;timer0_thread.c: 10: unsigned int *msgval;
  2668                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2669                           
  2670                           ; BSR set to: 1
  2671                           ;incstack = 0
  2672  002D2C  0101               	movlb	1	; () banked
  2673  002D2E  0101               	movlb	1	; () banked
  2674  002D30  C107  F109         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2675  002D34  0101               	movlb	1	; () banked
  2676  002D36  0101               	movlb	1	; () banked
  2677  002D38  C106  F108         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2678                           
  2679                           ; BSR set to: 1
  2680  002D3C  0012               	return	
  2681  002D3E                     __end_of_timer0_lthread:
  2682                           	opt stack 0
  2683                           tblptru	equ	0xFF8
  2684                           tblptrh	equ	0xFF7
  2685                           tblptrl	equ	0xFF6
  2686                           tablat	equ	0xFF5
  2687                           prodh	equ	0xFF4
  2688                           prodl	equ	0xFF3
  2689                           intcon2	equ	0xFF1
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           indf1	equ	0xFE7
  2693                           postdec1	equ	0xFE5
  2694                           fsr1h	equ	0xFE2
  2695                           fsr1l	equ	0xFE1
  2696                           indf2	equ	0xFDF
  2697                           postinc2	equ	0xFDE
  2698                           postdec2	equ	0xFDD
  2699                           fsr2h	equ	0xFDA
  2700                           fsr2l	equ	0xFD9
  2701                           status	equ	0xFD8
  2702                           
  2703 ;; *************** function _init_uart_recv *****************
  2704 ;; Defined at:
  2705 ;;		line 54 in file "../src/my_uart.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2708 ;;		 -> main@uc(15), 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;		None               void
  2713 ;; Registers used:
  2714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2720 ;;      Params:         0       0       2       0       0
  2721 ;;      Locals:         0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0
  2723 ;;      Totals:         0       0       2       0       0
  2724 ;;Total ram usage:        2 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:   11
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_main
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text7
  2735  002CC2                     __ptext7:
  2736                           	opt stack 0
  2737  002CC2                     _init_uart_recv:
  2738                           	opt stack 19
  2739                           
  2740                           ;my_uart.c: 57: uc_ptr = uc;
  2741                           
  2742                           ; BSR set to: 1
  2743                           ;incstack = 0
  2744  002CC2  0101               	movlb	1	; () banked
  2745  002CC4  C101  F05F         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2746  002CC8  0101               	movlb	1	; () banked
  2747  002CCA  C100  F05E         	movff	init_uart_recv@uc,_uc_ptr
  2748                           
  2749                           ; BSR set to: 1
  2750                           ;my_uart.c: 58: uc_ptr->buflen = 0;
  2751  002CCE  EE20 F006          	lfsr	2,6
  2752  002CD2  505E               	movf	_uc_ptr,w,c
  2753  002CD4  26D9               	addwf	fsr2l,f,c
  2754  002CD6  505F               	movf	_uc_ptr+1,w,c
  2755  002CD8  22DA               	addwfc	fsr2h,f,c
  2756  002CDA  0E00               	movlw	0
  2757  002CDC  6EDF               	movwf	indf2,c
  2758                           
  2759                           ; BSR set to: 1
  2760  002CDE  0012               	return	
  2761  002CE0                     __end_of_init_uart_recv:
  2762                           	opt stack 0
  2763                           tblptru	equ	0xFF8
  2764                           tblptrh	equ	0xFF7
  2765                           tblptrl	equ	0xFF6
  2766                           tablat	equ	0xFF5
  2767                           prodh	equ	0xFF4
  2768                           prodl	equ	0xFF3
  2769                           intcon2	equ	0xFF1
  2770                           postinc0	equ	0xFEE
  2771                           wreg	equ	0xFE8
  2772                           indf1	equ	0xFE7
  2773                           postdec1	equ	0xFE5
  2774                           fsr1h	equ	0xFE2
  2775                           fsr1l	equ	0xFE1
  2776                           indf2	equ	0xFDF
  2777                           postinc2	equ	0xFDE
  2778                           postdec2	equ	0xFDD
  2779                           fsr2h	equ	0xFDA
  2780                           fsr2l	equ	0xFD9
  2781                           status	equ	0xFD8
  2782                           
  2783 ;; *************** function _init_timer1_lthread *****************
  2784 ;; Defined at:
  2785 ;;		line 6 in file "../src/timer1_thread.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2788 ;;		 -> main@t1thread_data(2), 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;		None               void
  2793 ;; Registers used:
  2794 ;;		wreg, fsr2l, fsr2h
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2800 ;;      Params:         0       0       2       0       0
  2801 ;;      Locals:         0       0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0
  2803 ;;      Totals:         0       0       2       0       0
  2804 ;;Total ram usage:        2 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:   11
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_main
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text8
  2815  002D3E                     __ptext8:
  2816                           	opt stack 0
  2817  002D3E                     _init_timer1_lthread:
  2818                           	opt stack 19
  2819                           
  2820                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2821                           
  2822                           ; BSR set to: 1
  2823                           ;incstack = 0
  2824  002D3E  C100  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2825  002D42  C101  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2826  002D46  0E00               	movlw	0
  2827  002D48  6EDE               	movwf	postinc2,c
  2828  002D4A  0E00               	movlw	0
  2829  002D4C  6EDD               	movwf	postdec2,c
  2830  002D4E  0012               	return	
  2831  002D50                     __end_of_init_timer1_lthread:
  2832                           	opt stack 0
  2833                           tblptru	equ	0xFF8
  2834                           tblptrh	equ	0xFF7
  2835                           tblptrl	equ	0xFF6
  2836                           tablat	equ	0xFF5
  2837                           prodh	equ	0xFF4
  2838                           prodl	equ	0xFF3
  2839                           intcon2	equ	0xFF1
  2840                           postinc0	equ	0xFEE
  2841                           wreg	equ	0xFE8
  2842                           indf1	equ	0xFE7
  2843                           postdec1	equ	0xFE5
  2844                           fsr1h	equ	0xFE2
  2845                           fsr1l	equ	0xFE1
  2846                           indf2	equ	0xFDF
  2847                           postinc2	equ	0xFDE
  2848                           postdec2	equ	0xFDD
  2849                           fsr2h	equ	0xFDA
  2850                           fsr2l	equ	0xFD9
  2851                           status	equ	0xFD8
  2852                           
  2853 ;; *************** function _init_queues *****************
  2854 ;; Defined at:
  2855 ;;		line 194 in file "../src/messages.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;		None               void
  2862 ;; Registers used:
  2863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2869 ;;      Params:         0       0       0       0       0
  2870 ;;      Locals:         0       0       0       0       0
  2871 ;;      Temps:          0       0       1       0       0
  2872 ;;      Totals:         0       0       1       0       0
  2873 ;;Total ram usage:        1 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:   12
  2876 ;; This function calls:
  2877 ;;		_init_queue
  2878 ;; This function is called by:
  2879 ;;		_main
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text9
  2884  002608                     __ptext9:
  2885                           	opt stack 0
  2886  002608                     _init_queues:
  2887                           	opt stack 18
  2888                           
  2889                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2890                           
  2891                           ;incstack = 0
  2892  002608  0101               	movlb	1	; () banked
  2893  00260A  6F04               	movwf	??_init_queues& (0+255),b
  2894  00260C  0E00               	movlw	0
  2895  00260E  0100               	movlb	0	; () banked
  2896  002610  0100               	movlb	0	; () banked
  2897  002612  6FDC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2898  002614  0101               	movlb	1	; () banked
  2899  002616  5104               	movf	??_init_queues& (0+255),w,b
  2900                           
  2901                           ; BSR set to: 1
  2902                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2903  002618  0101               	movlb	1	; () banked
  2904  00261A  0E01               	movlw	high _ToMainLow_MQ
  2905  00261C  0101               	movlb	1	; () banked
  2906  00261E  0101               	movlb	1	; () banked
  2907  002620  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2908  002622  0101               	movlb	1	; () banked
  2909  002624  0E82               	movlw	low _ToMainLow_MQ
  2910  002626  0101               	movlb	1	; () banked
  2911  002628  0101               	movlb	1	; () banked
  2912  00262A  6F00               	movwf	init_queue@qptr& (0+255),b
  2913  00262C  EC52  F012         	call	_init_queue	;wreg free
  2914                           
  2915                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2916  002630  0102               	movlb	2	; () banked
  2917  002632  0E02               	movlw	high _ToMainHigh_MQ
  2918  002634  0101               	movlb	1	; () banked
  2919  002636  0101               	movlb	1	; () banked
  2920  002638  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2921  00263A  0102               	movlb	2	; () banked
  2922  00263C  0E86               	movlw	low _ToMainHigh_MQ
  2923  00263E  0101               	movlb	1	; () banked
  2924  002640  0101               	movlb	1	; () banked
  2925  002642  6F00               	movwf	init_queue@qptr& (0+255),b
  2926  002644  EC52  F012         	call	_init_queue	;wreg free
  2927                           
  2928                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2929  002648  0102               	movlb	2	; () banked
  2930  00264A  0E02               	movlw	high _FromMainLow_MQ
  2931  00264C  0101               	movlb	1	; () banked
  2932  00264E  0101               	movlb	1	; () banked
  2933  002650  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2934  002652  0102               	movlb	2	; () banked
  2935  002654  0E43               	movlw	low _FromMainLow_MQ
  2936  002656  0101               	movlb	1	; () banked
  2937  002658  0101               	movlb	1	; () banked
  2938  00265A  6F00               	movwf	init_queue@qptr& (0+255),b
  2939  00265C  EC52  F012         	call	_init_queue	;wreg free
  2940                           
  2941                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2942  002660  0102               	movlb	2	; () banked
  2943  002662  0E02               	movlw	high _FromMainHigh_MQ
  2944  002664  0101               	movlb	1	; () banked
  2945  002666  0101               	movlb	1	; () banked
  2946  002668  6F01               	movwf	(init_queue@qptr+1)& (0+255),b
  2947  00266A  0102               	movlb	2	; () banked
  2948  00266C  0E00               	movlw	low _FromMainHigh_MQ
  2949  00266E  0101               	movlb	1	; () banked
  2950  002670  0101               	movlb	1	; () banked
  2951  002672  6F00               	movwf	init_queue@qptr& (0+255),b
  2952  002674  EC52  F012         	call	_init_queue	;wreg free
  2953  002678  0012               	return	
  2954  00267A                     __end_of_init_queues:
  2955                           	opt stack 0
  2956                           tblptru	equ	0xFF8
  2957                           tblptrh	equ	0xFF7
  2958                           tblptrl	equ	0xFF6
  2959                           tablat	equ	0xFF5
  2960                           prodh	equ	0xFF4
  2961                           prodl	equ	0xFF3
  2962                           intcon2	equ	0xFF1
  2963                           postinc0	equ	0xFEE
  2964                           wreg	equ	0xFE8
  2965                           indf1	equ	0xFE7
  2966                           postdec1	equ	0xFE5
  2967                           fsr1h	equ	0xFE2
  2968                           fsr1l	equ	0xFE1
  2969                           indf2	equ	0xFDF
  2970                           postinc2	equ	0xFDE
  2971                           postdec2	equ	0xFDD
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           status	equ	0xFD8
  2975                           
  2976 ;; *************** function _init_queue *****************
  2977 ;; Defined at:
  2978 ;;		line 14 in file "../src/messages.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2981 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  i               1    3[BANK1 ] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;		None               void
  2986 ;; Registers used:
  2987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2993 ;;      Params:         0       0       2       0       0
  2994 ;;      Locals:         0       0       1       0       0
  2995 ;;      Temps:          0       0       1       0       0
  2996 ;;      Totals:         0       0       4       0       0
  2997 ;;Total ram usage:        4 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:   11
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_init_queues
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text10
  3008  0024A4                     __ptext10:
  3009                           	opt stack 0
  3010  0024A4                     _init_queue:
  3011                           	opt stack 18
  3012                           
  3013                           ;messages.c: 15: unsigned char i;
  3014                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3015                           
  3016                           ;incstack = 0
  3017  0024A4  0101               	movlb	1	; () banked
  3018  0024A6  EE20 F041          	lfsr	2,65
  3019  0024AA  0101               	movlb	1	; () banked
  3020  0024AC  5100               	movf	init_queue@qptr& (0+255),w,b
  3021  0024AE  26D9               	addwf	fsr2l,f,c
  3022  0024B0  0101               	movlb	1	; () banked
  3023  0024B2  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  3024  0024B4  22DA               	addwfc	fsr2h,f,c
  3025  0024B6  0E00               	movlw	0
  3026  0024B8  6EDF               	movwf	indf2,c
  3027                           
  3028                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3029  0024BA  0101               	movlb	1	; () banked
  3030  0024BC  EE20 F042          	lfsr	2,66
  3031  0024C0  0101               	movlb	1	; () banked
  3032  0024C2  5100               	movf	init_queue@qptr& (0+255),w,b
  3033  0024C4  26D9               	addwf	fsr2l,f,c
  3034  0024C6  0101               	movlb	1	; () banked
  3035  0024C8  5101               	movf	(init_queue@qptr+1)& (0+255),w,b
  3036  0024CA  22DA               	addwfc	fsr2h,f,c
  3037  0024CC  0E00               	movlw	0
  3038  0024CE  6EDF               	movwf	indf2,c
  3039                           
  3040                           ; BSR set to: 1
  3041                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  3042  0024D0  0101               	movlb	1	; () banked
  3043  0024D2  6F02               	movwf	??_init_queue& (0+255),b
  3044  0024D4  0E00               	movlw	0
  3045  0024D6  0101               	movlb	1	; () banked
  3046  0024D8  0101               	movlb	1	; () banked
  3047  0024DA  6F03               	movwf	init_queue@i& (0+255),b
  3048  0024DC  0101               	movlb	1	; () banked
  3049  0024DE  5102               	movf	??_init_queue& (0+255),w,b
  3050                           
  3051                           ; BSR set to: 1
  3052  0024E0  0E04               	movlw	4
  3053  0024E2  0101               	movlb	1	; () banked
  3054  0024E4  0101               	movlb	1	; () banked
  3055  0024E6  6503               	cpfsgt	init_queue@i& (0+255),b
  3056  0024E8  D001               	goto	l3664
  3057  0024EA  0012               	return	
  3058  0024EC                     l3664:
  3059                           
  3060                           ; BSR set to: 1
  3061                           ;messages.c: 20: qptr->queue[i].full = 0;
  3062  0024EC  0101               	movlb	1	; () banked
  3063  0024EE  0101               	movlb	1	; () banked
  3064  0024F0  5103               	movf	init_queue@i& (0+255),w,b
  3065  0024F2  0D0D               	mullw	13
  3066  0024F4  50F3               	movf	prodl,w,c
  3067  0024F6  0101               	movlb	1	; () banked
  3068  0024F8  0101               	movlb	1	; () banked
  3069  0024FA  2500               	addwf	init_queue@qptr& (0+255),w,b
  3070  0024FC  6ED9               	movwf	fsr2l,c
  3071  0024FE  50F4               	movf	prodh,w,c
  3072  002500  0101               	movlb	1	; () banked
  3073  002502  0101               	movlb	1	; () banked
  3074  002504  2101               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3075  002506  6EDA               	movwf	fsr2h,c
  3076  002508  0E00               	movlw	0
  3077  00250A  6EDF               	movwf	indf2,c
  3078                           
  3079                           ; BSR set to: 1
  3080  00250C  0101               	movlb	1	; () banked
  3081  00250E  0101               	movlb	1	; () banked
  3082  002510  2B03               	incf	init_queue@i& (0+255),f,b
  3083                           
  3084                           ; BSR set to: 1
  3085  002512  0E04               	movlw	4
  3086  002514  0101               	movlb	1	; () banked
  3087  002516  0101               	movlb	1	; () banked
  3088  002518  6503               	cpfsgt	init_queue@i& (0+255),b
  3089  00251A  D7E8               	goto	l3664
  3090  00251C  0012               	return	
  3091  00251E                     __end_of_init_queue:
  3092                           	opt stack 0
  3093                           tblptru	equ	0xFF8
  3094                           tblptrh	equ	0xFF7
  3095                           tblptrl	equ	0xFF6
  3096                           tablat	equ	0xFF5
  3097                           prodh	equ	0xFF4
  3098                           prodl	equ	0xFF3
  3099                           intcon2	equ	0xFF1
  3100                           postinc0	equ	0xFEE
  3101                           wreg	equ	0xFE8
  3102                           indf1	equ	0xFE7
  3103                           postdec1	equ	0xFE5
  3104                           fsr1h	equ	0xFE2
  3105                           fsr1l	equ	0xFE1
  3106                           indf2	equ	0xFDF
  3107                           postinc2	equ	0xFDE
  3108                           postdec2	equ	0xFDD
  3109                           fsr2h	equ	0xFDA
  3110                           fsr2l	equ	0xFD9
  3111                           status	equ	0xFD8
  3112                           
  3113 ;; *************** function _init_i2c *****************
  3114 ;; Defined at:
  3115 ;;		line 459 in file "../src/my_i2c.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  3118 ;;		 -> main@ic(29), 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;		None               void
  3123 ;; Registers used:
  3124 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3130 ;;      Params:         0       0       2       0       0
  3131 ;;      Locals:         0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0
  3133 ;;      Totals:         0       0       2       0       0
  3134 ;;Total ram usage:        2 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:   11
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_main
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text11
  3145  0026E8                     __ptext11:
  3146                           	opt stack 0
  3147  0026E8                     _init_i2c:
  3148                           	opt stack 19
  3149                           
  3150                           ;my_i2c.c: 460: ic_ptr = ic;
  3151                           
  3152                           ; BSR set to: 1
  3153                           ;incstack = 0
  3154  0026E8  0101               	movlb	1	; () banked
  3155  0026EA  0101               	movlb	1	; () banked
  3156  0026EC  C101  F1C6         	movff	init_i2c@ic+1,_ic_ptr+1
  3157  0026F0  0101               	movlb	1	; () banked
  3158  0026F2  0101               	movlb	1	; () banked
  3159  0026F4  C100  F1C5         	movff	init_i2c@ic,_ic_ptr
  3160                           
  3161                           ; BSR set to: 1
  3162                           ;my_i2c.c: 461: ic_ptr->buflen = 0;
  3163  0026F8  0101               	movlb	1	; () banked
  3164  0026FA  EE20 F00A          	lfsr	2,10
  3165  0026FE  0101               	movlb	1	; () banked
  3166  002700  51C5               	movf	_ic_ptr& (0+255),w,b
  3167  002702  26D9               	addwf	fsr2l,f,c
  3168  002704  0101               	movlb	1	; () banked
  3169  002706  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3170  002708  22DA               	addwfc	fsr2h,f,c
  3171  00270A  0E00               	movlw	0
  3172  00270C  6EDF               	movwf	indf2,c
  3173                           
  3174                           ; BSR set to: 1
  3175                           ;my_i2c.c: 462: ic_ptr->event_count = 0;
  3176  00270E  0101               	movlb	1	; () banked
  3177  002710  EE20 F00C          	lfsr	2,12
  3178  002714  0101               	movlb	1	; () banked
  3179  002716  51C5               	movf	_ic_ptr& (0+255),w,b
  3180  002718  26D9               	addwf	fsr2l,f,c
  3181  00271A  0101               	movlb	1	; () banked
  3182  00271C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3183  00271E  22DA               	addwfc	fsr2h,f,c
  3184  002720  0E00               	movlw	0
  3185  002722  6EDF               	movwf	indf2,c
  3186                           
  3187                           ; BSR set to: 1
  3188                           ;my_i2c.c: 463: ic_ptr->status = 0x5;
  3189  002724  0101               	movlb	1	; () banked
  3190  002726  EE20 F00D          	lfsr	2,13
  3191  00272A  0101               	movlb	1	; () banked
  3192  00272C  51C5               	movf	_ic_ptr& (0+255),w,b
  3193  00272E  26D9               	addwf	fsr2l,f,c
  3194  002730  0101               	movlb	1	; () banked
  3195  002732  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3196  002734  22DA               	addwfc	fsr2h,f,c
  3197  002736  0E05               	movlw	5
  3198  002738  6EDF               	movwf	indf2,c
  3199                           
  3200                           ; BSR set to: 1
  3201                           ;my_i2c.c: 464: ic_ptr->error_count = 0;
  3202  00273A  0101               	movlb	1	; () banked
  3203  00273C  EE20 F00F          	lfsr	2,15
  3204  002740  0101               	movlb	1	; () banked
  3205  002742  51C5               	movf	_ic_ptr& (0+255),w,b
  3206  002744  26D9               	addwf	fsr2l,f,c
  3207  002746  0101               	movlb	1	; () banked
  3208  002748  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3209  00274A  22DA               	addwfc	fsr2h,f,c
  3210  00274C  0E00               	movlw	0
  3211  00274E  6EDF               	movwf	indf2,c
  3212                           
  3213                           ; BSR set to: 1
  3214  002750  0012               	return	
  3215  002752                     __end_of_init_i2c:
  3216                           	opt stack 0
  3217                           tblptru	equ	0xFF8
  3218                           tblptrh	equ	0xFF7
  3219                           tblptrl	equ	0xFF6
  3220                           tablat	equ	0xFF5
  3221                           prodh	equ	0xFF4
  3222                           prodl	equ	0xFF3
  3223                           intcon2	equ	0xFF1
  3224                           postinc0	equ	0xFEE
  3225                           wreg	equ	0xFE8
  3226                           indf1	equ	0xFE7
  3227                           postdec1	equ	0xFE5
  3228                           fsr1h	equ	0xFE2
  3229                           fsr1l	equ	0xFE1
  3230                           indf2	equ	0xFDF
  3231                           postinc2	equ	0xFDE
  3232                           postdec2	equ	0xFDD
  3233                           fsr2h	equ	0xFDA
  3234                           fsr2l	equ	0xFD9
  3235                           status	equ	0xFD8
  3236                           
  3237 ;; *************** function _i2c_master_send *****************
  3238 ;; Defined at:
  3239 ;;		line 44 in file "../src/my_i2c.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  sendlength      1    wreg     unsigned char 
  3242 ;;  recvlength      1    0[BANK1 ] unsigned char 
  3243 ;;  msg             2    1[BANK1 ] PTR unsigned char 
  3244 ;;		 -> main@msgbuffer(11), 
  3245 ;;  slave_addr      1    3[BANK1 ] unsigned char 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  sendlength      1    6[BANK1 ] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      unsigned char 
  3250 ;; Registers used:
  3251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3257 ;;      Params:         0       0       4       0       0
  3258 ;;      Locals:         0       0       1       0       0
  3259 ;;      Temps:          0       0       2       0       0
  3260 ;;      Totals:         0       0       7       0       0
  3261 ;;Total ram usage:        7 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; Hardware stack levels required when called:   11
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_main
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text12
  3272  0010FE                     __ptext12:
  3273                           	opt stack 0
  3274  0010FE                     _i2c_master_send:
  3275                           	opt stack 19
  3276                           
  3277                           ; BSR set to: 1
  3278                           ;incstack = 0
  3279                           ;i2c_master_send@sendlength stored from wreg
  3280  0010FE  CFE8 F106          	movff	wreg,i2c_master_send@sendlength
  3281                           
  3282                           ;my_i2c.c: 46: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < sendlength; ic_ptr->outbu
      +                          flen++) {
  3283  001102  0101               	movlb	1	; () banked
  3284  001104  EE20 F01A          	lfsr	2,26
  3285  001108  0101               	movlb	1	; () banked
  3286  00110A  51C5               	movf	_ic_ptr& (0+255),w,b
  3287  00110C  26D9               	addwf	fsr2l,f,c
  3288  00110E  0101               	movlb	1	; () banked
  3289  001110  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3290  001112  22DA               	addwfc	fsr2h,f,c
  3291  001114  0E00               	movlw	0
  3292  001116  6EDF               	movwf	indf2,c
  3293  001118  D042               	goto	l3648
  3294  00111A                     l3644:
  3295                           
  3296                           ; BSR set to: 1
  3297                           ;my_i2c.c: 47: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  3298  00111A  0101               	movlb	1	; () banked
  3299  00111C  EE20 F01A          	lfsr	2,26
  3300  001120  0101               	movlb	1	; () banked
  3301  001122  51C5               	movf	_ic_ptr& (0+255),w,b
  3302  001124  26D9               	addwf	fsr2l,f,c
  3303  001126  0101               	movlb	1	; () banked
  3304  001128  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3305  00112A  22DA               	addwfc	fsr2h,f,c
  3306  00112C  50DF               	movf	indf2,w,c
  3307  00112E  0101               	movlb	1	; () banked
  3308  001130  6F04               	movwf	??_i2c_master_send& (0+255),b
  3309  001132  0101               	movlb	1	; () banked
  3310  001134  5104               	movf	??_i2c_master_send& (0+255),w,b
  3311  001136  0D01               	mullw	1
  3312  001138  50F3               	movf	prodl,w,c
  3313  00113A  0101               	movlb	1	; () banked
  3314  00113C  0101               	movlb	1	; () banked
  3315  00113E  2501               	addwf	i2c_master_send@msg& (0+255),w,b
  3316  001140  6ED9               	movwf	fsr2l,c
  3317  001142  50F4               	movf	prodh,w,c
  3318  001144  0101               	movlb	1	; () banked
  3319  001146  0101               	movlb	1	; () banked
  3320  001148  2102               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  3321  00114A  6EDA               	movwf	fsr2h,c
  3322  00114C  0101               	movlb	1	; () banked
  3323  00114E  EE10 F01A          	lfsr	1,26
  3324  001152  0101               	movlb	1	; () banked
  3325  001154  51C5               	movf	_ic_ptr& (0+255),w,b
  3326  001156  26E1               	addwf	fsr1l,f,c
  3327  001158  0101               	movlb	1	; () banked
  3328  00115A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3329  00115C  22E2               	addwfc	fsr1h,f,c
  3330  00115E  50E7               	movf	indf1,w,c
  3331  001160  0101               	movlb	1	; () banked
  3332  001162  6F05               	movwf	(??_i2c_master_send+1)& (0+255),b
  3333  001164  0101               	movlb	1	; () banked
  3334  001166  5105               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3335  001168  0D01               	mullw	1
  3336  00116A  0E10               	movlw	16
  3337  00116C  26F3               	addwf	prodl,f,c
  3338  00116E  0E00               	movlw	0
  3339  001170  22F4               	addwfc	prodh,f,c
  3340  001172  50F3               	movf	prodl,w,c
  3341  001174  0101               	movlb	1	; () banked
  3342  001176  0101               	movlb	1	; () banked
  3343  001178  25C5               	addwf	_ic_ptr& (0+255),w,b
  3344  00117A  6EE1               	movwf	fsr1l,c
  3345  00117C  50F4               	movf	prodh,w,c
  3346  00117E  0101               	movlb	1	; () banked
  3347  001180  0101               	movlb	1	; () banked
  3348  001182  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3349  001184  6EE2               	movwf	fsr1h,c
  3350  001186  CFDF FFE7          	movff	indf2,indf1
  3351                           
  3352                           ; BSR set to: 1
  3353  00118A  0101               	movlb	1	; () banked
  3354  00118C  EE20 F01A          	lfsr	2,26
  3355  001190  0101               	movlb	1	; () banked
  3356  001192  51C5               	movf	_ic_ptr& (0+255),w,b
  3357  001194  26D9               	addwf	fsr2l,f,c
  3358  001196  0101               	movlb	1	; () banked
  3359  001198  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3360  00119A  22DA               	addwfc	fsr2h,f,c
  3361  00119C  2ADF               	incf	indf2,f,c
  3362  00119E                     l3648:
  3363                           
  3364                           ; BSR set to: 1
  3365  00119E  0101               	movlb	1	; () banked
  3366  0011A0  EE20 F01A          	lfsr	2,26
  3367  0011A4  0101               	movlb	1	; () banked
  3368  0011A6  51C5               	movf	_ic_ptr& (0+255),w,b
  3369  0011A8  26D9               	addwf	fsr2l,f,c
  3370  0011AA  0101               	movlb	1	; () banked
  3371  0011AC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3372  0011AE  22DA               	addwfc	fsr2h,f,c
  3373  0011B0  50DF               	movf	indf2,w,c
  3374  0011B2  0101               	movlb	1	; () banked
  3375  0011B4  6F04               	movwf	??_i2c_master_send& (0+255),b
  3376  0011B6  0101               	movlb	1	; () banked
  3377  0011B8  0101               	movlb	1	; () banked
  3378  0011BA  5106               	movf	i2c_master_send@sendlength& (0+255),w,b
  3379  0011BC  0101               	movlb	1	; () banked
  3380  0011BE  5D04               	subwf	??_i2c_master_send& (0+255),w,b
  3381  0011C0  A0D8               	btfss	status,0,c
  3382  0011C2  D7AB               	goto	l3644
  3383                           
  3384                           ; BSR set to: 1
  3385                           ;my_i2c.c: 48: }
  3386                           ;my_i2c.c: 50: ic_ptr->slave_addr = slave_addr;
  3387                           
  3388                           ; BSR set to: 1
  3389  0011C4  0101               	movlb	1	; () banked
  3390  0011C6  EE20 F01C          	lfsr	2,28
  3391  0011CA  0101               	movlb	1	; () banked
  3392  0011CC  51C5               	movf	_ic_ptr& (0+255),w,b
  3393  0011CE  26D9               	addwf	fsr2l,f,c
  3394  0011D0  0101               	movlb	1	; () banked
  3395  0011D2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3396  0011D4  22DA               	addwfc	fsr2h,f,c
  3397  0011D6  0101               	movlb	1	; () banked
  3398  0011D8  C103  FFDF         	movff	i2c_master_send@slave_addr,indf2
  3399                           
  3400                           ;my_i2c.c: 51: ic_ptr->outbuflen = sendlength;
  3401  0011DC  0101               	movlb	1	; () banked
  3402  0011DE  EE20 F01A          	lfsr	2,26
  3403  0011E2  0101               	movlb	1	; () banked
  3404  0011E4  51C5               	movf	_ic_ptr& (0+255),w,b
  3405  0011E6  26D9               	addwf	fsr2l,f,c
  3406  0011E8  0101               	movlb	1	; () banked
  3407  0011EA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3408  0011EC  22DA               	addwfc	fsr2h,f,c
  3409  0011EE  0101               	movlb	1	; () banked
  3410  0011F0  C106  FFDF         	movff	i2c_master_send@sendlength,indf2
  3411                           
  3412                           ;my_i2c.c: 52: ic_ptr->buflen = recvlength;
  3413  0011F4  0101               	movlb	1	; () banked
  3414  0011F6  EE20 F00A          	lfsr	2,10
  3415  0011FA  0101               	movlb	1	; () banked
  3416  0011FC  51C5               	movf	_ic_ptr& (0+255),w,b
  3417  0011FE  26D9               	addwf	fsr2l,f,c
  3418  001200  0101               	movlb	1	; () banked
  3419  001202  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3420  001204  22DA               	addwfc	fsr2h,f,c
  3421  001206  0101               	movlb	1	; () banked
  3422  001208  C100  FFDF         	movff	i2c_master_send@recvlength,indf2
  3423                           
  3424                           ;my_i2c.c: 53: ic_ptr->status = 0xA;
  3425  00120C  0101               	movlb	1	; () banked
  3426  00120E  EE20 F00D          	lfsr	2,13
  3427  001212  0101               	movlb	1	; () banked
  3428  001214  51C5               	movf	_ic_ptr& (0+255),w,b
  3429  001216  26D9               	addwf	fsr2l,f,c
  3430  001218  0101               	movlb	1	; () banked
  3431  00121A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3432  00121C  22DA               	addwfc	fsr2h,f,c
  3433  00121E  0E0A               	movlw	10
  3434  001220  6EDF               	movwf	indf2,c
  3435                           
  3436                           ;my_i2c.c: 54: ic_ptr->outbufind = 0;
  3437  001222  0101               	movlb	1	; () banked
  3438  001224  EE20 F01B          	lfsr	2,27
  3439  001228  0101               	movlb	1	; () banked
  3440  00122A  51C5               	movf	_ic_ptr& (0+255),w,b
  3441  00122C  26D9               	addwf	fsr2l,f,c
  3442  00122E  0101               	movlb	1	; () banked
  3443  001230  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  3444  001232  22DA               	addwfc	fsr2h,f,c
  3445  001234  0E00               	movlw	0
  3446  001236  6EDF               	movwf	indf2,c
  3447                           
  3448                           ; BSR set to: 1
  3449                           ;my_i2c.c: 56: SSPCON2bits.SEN = 1;
  3450  001238  80C5               	bsf	4037,0,c	;volatile
  3451  00123A  0012               	return	
  3452  00123C                     __end_of_i2c_master_send:
  3453                           	opt stack 0
  3454                           tblptru	equ	0xFF8
  3455                           tblptrh	equ	0xFF7
  3456                           tblptrl	equ	0xFF6
  3457                           tablat	equ	0xFF5
  3458                           prodh	equ	0xFF4
  3459                           prodl	equ	0xFF3
  3460                           intcon2	equ	0xFF1
  3461                           postinc0	equ	0xFEE
  3462                           wreg	equ	0xFE8
  3463                           indf1	equ	0xFE7
  3464                           postdec1	equ	0xFE5
  3465                           fsr1h	equ	0xFE2
  3466                           fsr1l	equ	0xFE1
  3467                           indf2	equ	0xFDF
  3468                           postinc2	equ	0xFDE
  3469                           postdec2	equ	0xFDD
  3470                           fsr2h	equ	0xFDA
  3471                           fsr2l	equ	0xFD9
  3472                           status	equ	0xFD8
  3473                           
  3474 ;; *************** function _i2c_configure_slave *****************
  3475 ;; Defined at:
  3476 ;;		line 470 in file "../src/my_i2c.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  addr            1    wreg     unsigned char 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  addr            1    0[BANK1 ] unsigned char 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;		None               void
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3490 ;;      Params:         0       0       0       0       0
  3491 ;;      Locals:         0       0       1       0       0
  3492 ;;      Temps:          0       0       0       0       0
  3493 ;;      Totals:         0       0       1       0       0
  3494 ;;Total ram usage:        1 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:   11
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text13
  3505  002C54                     __ptext13:
  3506                           	opt stack 0
  3507  002C54                     _i2c_configure_slave:
  3508                           	opt stack 19
  3509                           
  3510                           ; BSR set to: 1
  3511                           ;incstack = 0
  3512                           ;i2c_configure_slave@addr stored from wreg
  3513  002C54  CFE8 F100          	movff	wreg,i2c_configure_slave@addr
  3514                           
  3515                           ;my_i2c.c: 482: TRISCbits.TRISC3 = 1;
  3516  002C58  8694               	bsf	3988,3,c	;volatile
  3517                           
  3518                           ;my_i2c.c: 483: TRISCbits.TRISC4 = 1;
  3519  002C5A  8894               	bsf	3988,4,c	;volatile
  3520                           
  3521                           ;my_i2c.c: 488: SSPADD = addr;
  3522  002C5C  C100  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3523                           
  3524                           ;my_i2c.c: 490: SSPSTAT = 0x0;
  3525  002C60  0E00               	movlw	0
  3526  002C62  6EC7               	movwf	4039,c	;volatile
  3527                           
  3528                           ;my_i2c.c: 491: SSPCON1 = 0x0;
  3529  002C64  0E00               	movlw	0
  3530  002C66  6EC6               	movwf	4038,c	;volatile
  3531                           
  3532                           ;my_i2c.c: 492: SSPCON2 = 0x0;
  3533  002C68  0E00               	movlw	0
  3534  002C6A  6EC5               	movwf	4037,c	;volatile
  3535                           
  3536                           ;my_i2c.c: 493: SSPCON1 |= 0x0E;
  3537  002C6C  0E0E               	movlw	14
  3538  002C6E  12C6               	iorwf	4038,f,c	;volatile
  3539                           
  3540                           ;my_i2c.c: 494: SSPSTAT |= 0b10000000;
  3541  002C70  8EC7               	bsf	4039,7,c	;volatile
  3542                           
  3543                           ;my_i2c.c: 497: TRISCbits.TRISC3 = 1;
  3544  002C72  8694               	bsf	3988,3,c	;volatile
  3545                           
  3546                           ;my_i2c.c: 498: TRISCbits.TRISC4 = 1;
  3547  002C74  8894               	bsf	3988,4,c	;volatile
  3548                           
  3549                           ;my_i2c.c: 519: SSPCON2bits.SEN = 1;
  3550  002C76  80C5               	bsf	4037,0,c	;volatile
  3551                           
  3552                           ;my_i2c.c: 520: SSPCON1 |= 0b00100000;
  3553  002C78  8AC6               	bsf	4038,5,c	;volatile
  3554  002C7A  0012               	return	
  3555  002C7C                     __end_of_i2c_configure_slave:
  3556                           	opt stack 0
  3557                           tblptru	equ	0xFF8
  3558                           tblptrh	equ	0xFF7
  3559                           tblptrl	equ	0xFF6
  3560                           tablat	equ	0xFF5
  3561                           prodh	equ	0xFF4
  3562                           prodl	equ	0xFF3
  3563                           intcon2	equ	0xFF1
  3564                           postinc0	equ	0xFEE
  3565                           wreg	equ	0xFE8
  3566                           indf1	equ	0xFE7
  3567                           postdec1	equ	0xFE5
  3568                           fsr1h	equ	0xFE2
  3569                           fsr1l	equ	0xFE1
  3570                           indf2	equ	0xFDF
  3571                           postinc2	equ	0xFDE
  3572                           postdec2	equ	0xFDD
  3573                           fsr2h	equ	0xFDA
  3574                           fsr2l	equ	0xFD9
  3575                           status	equ	0xFD8
  3576                           
  3577 ;; *************** function _enable_interrupts *****************
  3578 ;; Defined at:
  3579 ;;		line 15 in file "../src/interrupts.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;		None               void
  3586 ;; Registers used:
  3587 ;;		None
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3593 ;;      Params:         0       0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0
  3596 ;;      Totals:         0       0       0       0       0
  3597 ;;Total ram usage:        0 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:   11
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_main
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text14
  3608  002DBC                     __ptext14:
  3609                           	opt stack 0
  3610  002DBC                     _enable_interrupts:
  3611                           	opt stack 19
  3612                           
  3613                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3614                           
  3615                           ;incstack = 0
  3616  002DBC  8ED0               	bsf	4048,7,c	;volatile
  3617                           
  3618                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3619  002DBE  8EF2               	bsf	intcon,7,c	;volatile
  3620                           
  3621                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3622  002DC0  8CF2               	bsf	intcon,6,c	;volatile
  3623  002DC2  0012               	return	
  3624  002DC4                     __end_of_enable_interrupts:
  3625                           	opt stack 0
  3626                           tblptru	equ	0xFF8
  3627                           tblptrh	equ	0xFF7
  3628                           tblptrl	equ	0xFF6
  3629                           tablat	equ	0xFF5
  3630                           prodh	equ	0xFF4
  3631                           prodl	equ	0xFF3
  3632                           intcon	equ	0xFF2
  3633                           intcon2	equ	0xFF1
  3634                           postinc0	equ	0xFEE
  3635                           wreg	equ	0xFE8
  3636                           indf1	equ	0xFE7
  3637                           postdec1	equ	0xFE5
  3638                           fsr1h	equ	0xFE2
  3639                           fsr1l	equ	0xFE1
  3640                           indf2	equ	0xFDF
  3641                           postinc2	equ	0xFDE
  3642                           postdec2	equ	0xFDD
  3643                           fsr2h	equ	0xFDA
  3644                           fsr2l	equ	0xFD9
  3645                           status	equ	0xFD8
  3646                           
  3647 ;; *************** function _block_on_To_msgqueues *****************
  3648 ;; Defined at:
  3649 ;;		line 258 in file "../src/messages.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;		None
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;		None               void
  3656 ;; Registers used:
  3657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3663 ;;      Params:         0       0       0       0       0
  3664 ;;      Locals:         0       0       0       0       0
  3665 ;;      Temps:          0       0       1       0       0
  3666 ;;      Totals:         0       0       1       0       0
  3667 ;;Total ram usage:        1 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:   14
  3670 ;; This function calls:
  3671 ;;		_Delay1KTCYx
  3672 ;;		_check_msg
  3673 ;;		_in_main
  3674 ;; This function is called by:
  3675 ;;		_main
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           	psect	text15
  3680  002318                     __ptext15:
  3681                           	opt stack 0
  3682  002318                     _block_on_To_msgqueues:
  3683                           	opt stack 16
  3684                           
  3685                           ;messages.c: 259: if (!in_main()) {
  3686                           
  3687                           ;incstack = 0
  3688  002318  EC09  F015         	call	_in_main	;wreg free
  3689  00231C  0101               	movlb	1	; () banked
  3690  00231E  0101               	movlb	1	; () banked
  3691  002320  5105               	movf	(?_in_main+1)& (0+255),w,b
  3692  002322  0101               	movlb	1	; () banked
  3693  002324  1104               	iorwf	?_in_main& (0+255),w,b
  3694  002326  B4D8               	btfsc	status,2,c
  3695  002328  0012               	return	
  3696                           
  3697                           ; BSR set to: 1
  3698                           ;messages.c: 261: }
  3699                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3700                           
  3701                           ; BSR set to: 1
  3702                           
  3703                           ; BSR set to: 1
  3704                           ;messages.c: 260: return;
  3705  00232A  0101               	movlb	1	; () banked
  3706  00232C  6F06               	movwf	??_block_on_To_msgqueues& (0+255),b
  3707  00232E  0E01               	movlw	1
  3708  002330  0100               	movlb	0	; () banked
  3709  002332  0100               	movlb	0	; () banked
  3710  002334  6FDC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3711  002336  0101               	movlb	1	; () banked
  3712  002338  5106               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3713  00233A                     l3598:
  3714                           
  3715                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3716  00233A  0102               	movlb	2	; () banked
  3717  00233C  0E02               	movlw	high _ToMainHigh_MQ
  3718  00233E  0101               	movlb	1	; () banked
  3719  002340  0101               	movlb	1	; () banked
  3720  002342  6F01               	movwf	(check_msg@qptr+1)& (0+255),b
  3721  002344  0102               	movlb	2	; () banked
  3722  002346  0E86               	movlw	low _ToMainHigh_MQ
  3723  002348  0101               	movlb	1	; () banked
  3724  00234A  0101               	movlb	1	; () banked
  3725  00234C  6F00               	movwf	check_msg@qptr& (0+255),b
  3726  00234E  ECC4  F015         	call	_check_msg	;wreg free
  3727  002352  0900               	iorlw	0
  3728  002354  B4D8               	btfsc	status,2,c
  3729  002356  D009               	goto	l3604
  3730                           
  3731                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3732  002358  0101               	movlb	1	; () banked
  3733  00235A  6F06               	movwf	??_block_on_To_msgqueues& (0+255),b
  3734  00235C  0E00               	movlw	0
  3735  00235E  0100               	movlb	0	; () banked
  3736  002360  0100               	movlb	0	; () banked
  3737  002362  6FDC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3738  002364  0101               	movlb	1	; () banked
  3739  002366  5106               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3740  002368  0012               	return	
  3741  00236A                     l3604:
  3742                           
  3743                           ;messages.c: 271: }
  3744                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3745  00236A  0101               	movlb	1	; () banked
  3746  00236C  0E01               	movlw	high _ToMainLow_MQ
  3747  00236E  0101               	movlb	1	; () banked
  3748  002370  0101               	movlb	1	; () banked
  3749  002372  6F01               	movwf	(check_msg@qptr+1)& (0+255),b
  3750  002374  0101               	movlb	1	; () banked
  3751  002376  0E82               	movlw	low _ToMainLow_MQ
  3752  002378  0101               	movlb	1	; () banked
  3753  00237A  0101               	movlb	1	; () banked
  3754  00237C  6F00               	movwf	check_msg@qptr& (0+255),b
  3755  00237E  ECC4  F015         	call	_check_msg	;wreg free
  3756  002382  0900               	iorlw	0
  3757  002384  B4D8               	btfsc	status,2,c
  3758  002386  D009               	goto	l3610
  3759                           
  3760                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3761  002388  0101               	movlb	1	; () banked
  3762  00238A  6F06               	movwf	??_block_on_To_msgqueues& (0+255),b
  3763  00238C  0E00               	movlw	0
  3764  00238E  0100               	movlb	0	; () banked
  3765  002390  0100               	movlb	0	; () banked
  3766  002392  6FDC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3767  002394  0101               	movlb	1	; () banked
  3768  002396  5106               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3769  002398  0012               	return	
  3770  00239A                     l3610:
  3771                           
  3772                           ;messages.c: 278: }
  3773                           ;messages.c: 279: Delay1KTCYx(10);
  3774  00239A  0E0A               	movlw	10
  3775  00239C  EC8B  F016         	call	_Delay1KTCYx
  3776  0023A0  D7CC               	goto	l3598
  3777  0023A2                     __end_of_block_on_To_msgqueues:
  3778                           	opt stack 0
  3779                           tblptru	equ	0xFF8
  3780                           tblptrh	equ	0xFF7
  3781                           tblptrl	equ	0xFF6
  3782                           tablat	equ	0xFF5
  3783                           prodh	equ	0xFF4
  3784                           prodl	equ	0xFF3
  3785                           intcon	equ	0xFF2
  3786                           intcon2	equ	0xFF1
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           indf1	equ	0xFE7
  3790                           postdec1	equ	0xFE5
  3791                           fsr1h	equ	0xFE2
  3792                           fsr1l	equ	0xFE1
  3793                           indf2	equ	0xFDF
  3794                           postinc2	equ	0xFDE
  3795                           postdec2	equ	0xFDD
  3796                           fsr2h	equ	0xFDA
  3797                           fsr2l	equ	0xFD9
  3798                           status	equ	0xFD8
  3799                           
  3800 ;; *************** function _in_main *****************
  3801 ;; Defined at:
  3802 ;;		line 41 in file "../src/interrupts.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  2    4[BANK1 ] int 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3816 ;;      Params:         0       0       2       0       0
  3817 ;;      Locals:         0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0
  3819 ;;      Totals:         0       0       2       0       0
  3820 ;;Total ram usage:        2 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:   13
  3823 ;; This function calls:
  3824 ;;		_in_high_int
  3825 ;;		_in_low_int
  3826 ;; This function is called by:
  3827 ;;		_block_on_To_msgqueues
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text16
  3832  002A12                     __ptext16:
  3833                           	opt stack 0
  3834  002A12                     _in_main:
  3835                           	opt stack 16
  3836                           
  3837                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3838                           
  3839                           ;incstack = 0
  3840  002A12  ECC3  F014         	call	_in_low_int	;wreg free
  3841  002A16  0101               	movlb	1	; () banked
  3842  002A18  0101               	movlb	1	; () banked
  3843  002A1A  5103               	movf	(?_in_low_int+1)& (0+255),w,b
  3844  002A1C  0101               	movlb	1	; () banked
  3845  002A1E  1102               	iorwf	?_in_low_int& (0+255),w,b
  3846  002A20  A4D8               	btfss	status,2,c
  3847  002A22  D011               	goto	l3314
  3848                           
  3849                           ; BSR set to: 1
  3850  002A24  ECA8  F016         	call	_in_high_int	;wreg free
  3851  002A28  0101               	movlb	1	; () banked
  3852  002A2A  0101               	movlb	1	; () banked
  3853  002A2C  5101               	movf	(?_in_high_int+1)& (0+255),w,b
  3854  002A2E  0101               	movlb	1	; () banked
  3855  002A30  1100               	iorwf	?_in_high_int& (0+255),w,b
  3856  002A32  A4D8               	btfss	status,2,c
  3857  002A34  D008               	goto	l3314
  3858                           
  3859                           ; BSR set to: 1
  3860                           ;interrupts.c: 43: return (1);
  3861  002A36  0E00               	movlw	0
  3862  002A38  0101               	movlb	1	; () banked
  3863  002A3A  0101               	movlb	1	; () banked
  3864  002A3C  6F05               	movwf	(?_in_main+1)& (0+255),b
  3865  002A3E  0E01               	movlw	1
  3866  002A40  0101               	movlb	1	; () banked
  3867  002A42  6F04               	movwf	?_in_main& (0+255),b
  3868  002A44  0012               	return	
  3869  002A46                     l3314:
  3870                           
  3871                           ; BSR set to: 1
  3872                           ;interrupts.c: 45: return (0);
  3873  002A46  0E00               	movlw	0
  3874  002A48  0101               	movlb	1	; () banked
  3875  002A4A  0101               	movlb	1	; () banked
  3876  002A4C  6F05               	movwf	(?_in_main+1)& (0+255),b
  3877  002A4E  0E00               	movlw	0
  3878  002A50  0101               	movlb	1	; () banked
  3879  002A52  6F04               	movwf	?_in_main& (0+255),b
  3880  002A54  0012               	return	
  3881  002A56                     __end_of_in_main:
  3882                           	opt stack 0
  3883                           tblptru	equ	0xFF8
  3884                           tblptrh	equ	0xFF7
  3885                           tblptrl	equ	0xFF6
  3886                           tablat	equ	0xFF5
  3887                           prodh	equ	0xFF4
  3888                           prodl	equ	0xFF3
  3889                           intcon	equ	0xFF2
  3890                           intcon2	equ	0xFF1
  3891                           postinc0	equ	0xFEE
  3892                           wreg	equ	0xFE8
  3893                           indf1	equ	0xFE7
  3894                           postdec1	equ	0xFE5
  3895                           fsr1h	equ	0xFE2
  3896                           fsr1l	equ	0xFE1
  3897                           indf2	equ	0xFDF
  3898                           postinc2	equ	0xFDE
  3899                           postdec2	equ	0xFDD
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8
  3903                           
  3904 ;; *************** function _in_low_int *****************
  3905 ;; Defined at:
  3906 ;;		line 31 in file "../src/interrupts.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  2    2[BANK1 ] int 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3920 ;;      Params:         0       0       2       0       0
  3921 ;;      Locals:         0       0       0       0       0
  3922 ;;      Temps:          0       0       0       0       0
  3923 ;;      Totals:         0       0       2       0       0
  3924 ;;Total ram usage:        2 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:   12
  3927 ;; This function calls:
  3928 ;;		_in_high_int
  3929 ;; This function is called by:
  3930 ;;		_in_main
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text17
  3935  002986                     __ptext17:
  3936                           	opt stack 0
  3937  002986                     _in_low_int:
  3938                           	opt stack 16
  3939                           
  3940                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3941                           
  3942                           ; BSR set to: 1
  3943                           ;incstack = 0
  3944  002986  ACF2               	btfss	intcon,6,c	;volatile
  3945  002988  D008               	goto	l3292
  3946                           
  3947                           ;interrupts.c: 33: return (0);
  3948  00298A  0E00               	movlw	0
  3949  00298C  0101               	movlb	1	; () banked
  3950  00298E  0101               	movlb	1	; () banked
  3951  002990  6F03               	movwf	(?_in_low_int+1)& (0+255),b
  3952  002992  0E00               	movlw	0
  3953  002994  0101               	movlb	1	; () banked
  3954  002996  6F02               	movwf	?_in_low_int& (0+255),b
  3955  002998  0012               	return	
  3956  00299A                     l3292:
  3957  00299A  ECA8  F016         	call	_in_high_int	;wreg free
  3958  00299E  0101               	movlb	1	; () banked
  3959  0029A0  0101               	movlb	1	; () banked
  3960  0029A2  5101               	movf	(?_in_high_int+1)& (0+255),w,b
  3961  0029A4  0101               	movlb	1	; () banked
  3962  0029A6  1100               	iorwf	?_in_high_int& (0+255),w,b
  3963  0029A8  B4D8               	btfsc	status,2,c
  3964  0029AA  D008               	goto	l3300
  3965                           
  3966                           ; BSR set to: 1
  3967                           ;interrupts.c: 35: return (0);
  3968  0029AC  0E00               	movlw	0
  3969  0029AE  0101               	movlb	1	; () banked
  3970  0029B0  0101               	movlb	1	; () banked
  3971  0029B2  6F03               	movwf	(?_in_low_int+1)& (0+255),b
  3972  0029B4  0E00               	movlw	0
  3973  0029B6  0101               	movlb	1	; () banked
  3974  0029B8  6F02               	movwf	?_in_low_int& (0+255),b
  3975  0029BA  0012               	return	
  3976  0029BC                     l3300:
  3977                           
  3978                           ; BSR set to: 1
  3979                           ;interrupts.c: 37: return (1);
  3980  0029BC  0E00               	movlw	0
  3981  0029BE  0101               	movlb	1	; () banked
  3982  0029C0  0101               	movlb	1	; () banked
  3983  0029C2  6F03               	movwf	(?_in_low_int+1)& (0+255),b
  3984  0029C4  0E01               	movlw	1
  3985  0029C6  0101               	movlb	1	; () banked
  3986  0029C8  6F02               	movwf	?_in_low_int& (0+255),b
  3987  0029CA  0012               	return	
  3988  0029CC                     __end_of_in_low_int:
  3989                           	opt stack 0
  3990                           tblptru	equ	0xFF8
  3991                           tblptrh	equ	0xFF7
  3992                           tblptrl	equ	0xFF6
  3993                           tablat	equ	0xFF5
  3994                           prodh	equ	0xFF4
  3995                           prodl	equ	0xFF3
  3996                           intcon	equ	0xFF2
  3997                           intcon2	equ	0xFF1
  3998                           postinc0	equ	0xFEE
  3999                           wreg	equ	0xFE8
  4000                           indf1	equ	0xFE7
  4001                           postdec1	equ	0xFE5
  4002                           fsr1h	equ	0xFE2
  4003                           fsr1l	equ	0xFE1
  4004                           indf2	equ	0xFDF
  4005                           postinc2	equ	0xFDE
  4006                           postdec2	equ	0xFDD
  4007                           fsr2h	equ	0xFDA
  4008                           fsr2l	equ	0xFD9
  4009                           status	equ	0xFD8
  4010                           
  4011 ;; *************** function _in_high_int *****************
  4012 ;; Defined at:
  4013 ;;		line 23 in file "../src/interrupts.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;		None
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  2    0[BANK1 ] int 
  4020 ;; Registers used:
  4021 ;;		wreg, status,2
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4027 ;;      Params:         0       0       2       0       0
  4028 ;;      Locals:         0       0       0       0       0
  4029 ;;      Temps:          0       0       0       0       0
  4030 ;;      Totals:         0       0       2       0       0
  4031 ;;Total ram usage:        2 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:   11
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_in_low_int
  4038 ;;		_in_main
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text18
  4043  002D50                     __ptext18:
  4044                           	opt stack 0
  4045  002D50                     _in_high_int:
  4046                           	opt stack 16
  4047                           
  4048                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  4049                           
  4050                           ; BSR set to: 1
  4051                           ;incstack = 0
  4052  002D50  0E00               	movlw	0
  4053  002D52  AEF2               	btfss	intcon,7,c	;volatile
  4054  002D54  0E01               	movlw	1
  4055  002D56  0101               	movlb	1	; () banked
  4056  002D58  0101               	movlb	1	; () banked
  4057  002D5A  6F00               	movwf	?_in_high_int& (0+255),b
  4058  002D5C  0101               	movlb	1	; () banked
  4059  002D5E  6B01               	clrf	(?_in_high_int+1)& (0+255),b
  4060  002D60  0012               	return	
  4061  002D62                     __end_of_in_high_int:
  4062                           	opt stack 0
  4063                           tblptru	equ	0xFF8
  4064                           tblptrh	equ	0xFF7
  4065                           tblptrl	equ	0xFF6
  4066                           tablat	equ	0xFF5
  4067                           prodh	equ	0xFF4
  4068                           prodl	equ	0xFF3
  4069                           intcon	equ	0xFF2
  4070                           intcon2	equ	0xFF1
  4071                           postinc0	equ	0xFEE
  4072                           wreg	equ	0xFE8
  4073                           indf1	equ	0xFE7
  4074                           postdec1	equ	0xFE5
  4075                           fsr1h	equ	0xFE2
  4076                           fsr1l	equ	0xFE1
  4077                           indf2	equ	0xFDF
  4078                           postinc2	equ	0xFDE
  4079                           postdec2	equ	0xFDD
  4080                           fsr2h	equ	0xFDA
  4081                           fsr2l	equ	0xFD9
  4082                           status	equ	0xFD8
  4083                           
  4084 ;; *************** function _check_msg *****************
  4085 ;; Defined at:
  4086 ;;		line 222 in file "../src/messages.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4089 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;		None
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      unsigned char 
  4094 ;; Registers used:
  4095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4101 ;;      Params:         0       0       2       0       0
  4102 ;;      Locals:         0       0       0       0       0
  4103 ;;      Temps:          0       0       1       0       0
  4104 ;;      Totals:         0       0       3       0       0
  4105 ;;Total ram usage:        3 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:   11
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_block_on_To_msgqueues
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text19
  4116  002B88                     __ptext19:
  4117                           	opt stack 0
  4118  002B88                     _check_msg:
  4119                           	opt stack 18
  4120                           
  4121                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4122                           
  4123                           ; BSR set to: 1
  4124                           ;incstack = 0
  4125  002B88  0101               	movlb	1	; () banked
  4126  002B8A  EE20 F042          	lfsr	2,66
  4127  002B8E  0101               	movlb	1	; () banked
  4128  002B90  5100               	movf	check_msg@qptr& (0+255),w,b
  4129  002B92  26D9               	addwf	fsr2l,f,c
  4130  002B94  0101               	movlb	1	; () banked
  4131  002B96  5101               	movf	(check_msg@qptr+1)& (0+255),w,b
  4132  002B98  22DA               	addwfc	fsr2h,f,c
  4133  002B9A  50DF               	movf	indf2,w,c
  4134  002B9C  0101               	movlb	1	; () banked
  4135  002B9E  6F02               	movwf	??_check_msg& (0+255),b
  4136  002BA0  0101               	movlb	1	; () banked
  4137  002BA2  5102               	movf	??_check_msg& (0+255),w,b
  4138  002BA4  0D0D               	mullw	13
  4139  002BA6  50F3               	movf	prodl,w,c
  4140  002BA8  0101               	movlb	1	; () banked
  4141  002BAA  0101               	movlb	1	; () banked
  4142  002BAC  2500               	addwf	check_msg@qptr& (0+255),w,b
  4143  002BAE  6ED9               	movwf	fsr2l,c
  4144  002BB0  50F4               	movf	prodh,w,c
  4145  002BB2  0101               	movlb	1	; () banked
  4146  002BB4  0101               	movlb	1	; () banked
  4147  002BB6  2101               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4148  002BB8  6EDA               	movwf	fsr2h,c
  4149  002BBA  50DF               	movf	indf2,w,c
  4150  002BBC  0012               	return	
  4151  002BBE                     __end_of_check_msg:
  4152                           	opt stack 0
  4153                           tblptru	equ	0xFF8
  4154                           tblptrh	equ	0xFF7
  4155                           tblptrl	equ	0xFF6
  4156                           tablat	equ	0xFF5
  4157                           prodh	equ	0xFF4
  4158                           prodl	equ	0xFF3
  4159                           intcon	equ	0xFF2
  4160                           intcon2	equ	0xFF1
  4161                           postinc0	equ	0xFEE
  4162                           wreg	equ	0xFE8
  4163                           indf1	equ	0xFE7
  4164                           postdec1	equ	0xFE5
  4165                           fsr1h	equ	0xFE2
  4166                           fsr1l	equ	0xFE1
  4167                           indf2	equ	0xFDF
  4168                           postinc2	equ	0xFDE
  4169                           postdec2	equ	0xFDD
  4170                           fsr2h	equ	0xFDA
  4171                           fsr2l	equ	0xFD9
  4172                           status	equ	0xFD8
  4173                           
  4174 ;; *************** function _Delay1KTCYx *****************
  4175 ;; Defined at:
  4176 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  unit            1    wreg     unsigned char 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  unit            1    0[BANK1 ] unsigned char 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;		None               void
  4183 ;; Registers used:
  4184 ;;		wreg
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4190 ;;      Params:         0       0       0       0       0
  4191 ;;      Locals:         0       0       1       0       0
  4192 ;;      Temps:          0       0       0       0       0
  4193 ;;      Totals:         0       0       1       0       0
  4194 ;;Total ram usage:        1 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:   11
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_block_on_To_msgqueues
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text20
  4205  002D16                     __ptext20:
  4206                           	opt stack 0
  4207  002D16                     _Delay1KTCYx:
  4208                           	opt stack 18
  4209                           
  4210                           ; BSR set to: 1
  4211                           ;incstack = 0
  4212                           ;Delay1KTCYx@unit stored from wreg
  4213  002D16  CFE8 F100          	movff	wreg,Delay1KTCYx@unit
  4214  002D1A                     l904:
  4215  002D1A  0EFA               	movlw	250
  4216  002D1C                     u4217:
  4217  002D1C  F000               	nop	
  4218  002D1E  2EE8               	decfsz	wreg,f,c
  4219  002D20  D7FD               	goto	u4217
  4220  002D22  0101               	movlb	1	; () banked
  4221  002D24  0101               	movlb	1	; () banked
  4222  002D26  2F00               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4223  002D28  D7F8               	goto	l904
  4224  002D2A  0012               	return	
  4225  002D2C                     __end_of_Delay1KTCYx:
  4226                           	opt stack 0
  4227                           tblptru	equ	0xFF8
  4228                           tblptrh	equ	0xFF7
  4229                           tblptrl	equ	0xFF6
  4230                           tablat	equ	0xFF5
  4231                           prodh	equ	0xFF4
  4232                           prodl	equ	0xFF3
  4233                           intcon	equ	0xFF2
  4234                           intcon2	equ	0xFF1
  4235                           postinc0	equ	0xFEE
  4236                           wreg	equ	0xFE8
  4237                           indf1	equ	0xFE7
  4238                           postdec1	equ	0xFE5
  4239                           fsr1h	equ	0xFE2
  4240                           fsr1l	equ	0xFE1
  4241                           indf2	equ	0xFDF
  4242                           postinc2	equ	0xFDE
  4243                           postdec2	equ	0xFDD
  4244                           fsr2h	equ	0xFDA
  4245                           fsr2l	equ	0xFD9
  4246                           status	equ	0xFD8
  4247                           
  4248 ;; *************** function _ToMainLow_recvmsg *****************
  4249 ;; Defined at:
  4250 ;;		line 112 in file "../src/messages.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  maxlength       1    wreg     unsigned char 
  4253 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4254 ;;		 -> main@msgtype(1), 
  4255 ;;  data            2   26[BANK1 ] PTR void 
  4256 ;;		 -> main@msgbuffer(11), 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      char 
  4261 ;; Registers used:
  4262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4268 ;;      Params:         0       0       4       0       0
  4269 ;;      Locals:         0       0       1       0       0
  4270 ;;      Temps:          0       0       0       0       0
  4271 ;;      Totals:         0       0       5       0       0
  4272 ;;Total ram usage:        5 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:   13
  4275 ;; This function calls:
  4276 ;;		_recv_msg
  4277 ;; This function is called by:
  4278 ;;		_main
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text21
  4283  002A56                     __ptext21:
  4284                           	opt stack 0
  4285  002A56                     _ToMainLow_recvmsg:
  4286                           	opt stack 17
  4287                           
  4288                           ; BSR set to: 1
  4289                           ;incstack = 0
  4290                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4291  002A56  CFE8 F11C          	movff	wreg,ToMainLow_recvmsg@maxlength
  4292                           
  4293                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4294  002A5A  0101               	movlb	1	; () banked
  4295  002A5C  0E01               	movlw	high _ToMainLow_MQ
  4296  002A5E  0101               	movlb	1	; () banked
  4297  002A60  0101               	movlb	1	; () banked
  4298  002A62  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  4299  002A64  0101               	movlb	1	; () banked
  4300  002A66  0E82               	movlw	low _ToMainLow_MQ
  4301  002A68  0101               	movlb	1	; () banked
  4302  002A6A  0101               	movlb	1	; () banked
  4303  002A6C  6F0A               	movwf	recv_msg@qptr& (0+255),b
  4304  002A6E  C11C  F10C         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4305  002A72  0101               	movlb	1	; () banked
  4306  002A74  0101               	movlb	1	; () banked
  4307  002A76  C119  F10E         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4308  002A7A  0101               	movlb	1	; () banked
  4309  002A7C  0101               	movlb	1	; () banked
  4310  002A7E  C118  F10D         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4311  002A82  0101               	movlb	1	; () banked
  4312  002A84  0101               	movlb	1	; () banked
  4313  002A86  C11B  F110         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4314  002A8A  0101               	movlb	1	; () banked
  4315  002A8C  0101               	movlb	1	; () banked
  4316  002A8E  C11A  F10F         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4317  002A92  ECD0  F007         	call	_recv_msg	;wreg free
  4318  002A96  0012               	return	
  4319  002A98                     __end_of_ToMainLow_recvmsg:
  4320                           	opt stack 0
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           prodh	equ	0xFF4
  4326                           prodl	equ	0xFF3
  4327                           intcon	equ	0xFF2
  4328                           intcon2	equ	0xFF1
  4329                           postinc0	equ	0xFEE
  4330                           wreg	equ	0xFE8
  4331                           indf1	equ	0xFE7
  4332                           postdec1	equ	0xFE5
  4333                           fsr1h	equ	0xFE2
  4334                           fsr1l	equ	0xFE1
  4335                           indf2	equ	0xFDF
  4336                           postinc2	equ	0xFDE
  4337                           postdec2	equ	0xFDD
  4338                           fsr2h	equ	0xFDA
  4339                           fsr2l	equ	0xFD9
  4340                           status	equ	0xFD8
  4341                           
  4342 ;; *************** function _ToMainHigh_recvmsg *****************
  4343 ;; Defined at:
  4344 ;;		line 135 in file "../src/messages.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;  maxlength       1    wreg     unsigned char 
  4347 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4348 ;;		 -> main@msgtype(1), 
  4349 ;;  data            2   26[BANK1 ] PTR void 
  4350 ;;		 -> main@msgbuffer(11), 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      char 
  4355 ;; Registers used:
  4356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4362 ;;      Params:         0       0       4       0       0
  4363 ;;      Locals:         0       0       1       0       0
  4364 ;;      Temps:          0       0       0       0       0
  4365 ;;      Totals:         0       0       5       0       0
  4366 ;;Total ram usage:        5 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:   13
  4369 ;; This function calls:
  4370 ;;		_recv_msg
  4371 ;; This function is called by:
  4372 ;;		_main
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           	psect	text22
  4377  002A98                     __ptext22:
  4378                           	opt stack 0
  4379  002A98                     _ToMainHigh_recvmsg:
  4380                           	opt stack 17
  4381                           
  4382                           ;incstack = 0
  4383                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4384  002A98  CFE8 F11C          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4385                           
  4386                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4387  002A9C  0102               	movlb	2	; () banked
  4388  002A9E  0E02               	movlw	high _ToMainHigh_MQ
  4389  002AA0  0101               	movlb	1	; () banked
  4390  002AA2  0101               	movlb	1	; () banked
  4391  002AA4  6F0B               	movwf	(recv_msg@qptr+1)& (0+255),b
  4392  002AA6  0102               	movlb	2	; () banked
  4393  002AA8  0E86               	movlw	low _ToMainHigh_MQ
  4394  002AAA  0101               	movlb	1	; () banked
  4395  002AAC  0101               	movlb	1	; () banked
  4396  002AAE  6F0A               	movwf	recv_msg@qptr& (0+255),b
  4397  002AB0  C11C  F10C         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4398  002AB4  0101               	movlb	1	; () banked
  4399  002AB6  0101               	movlb	1	; () banked
  4400  002AB8  C119  F10E         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4401  002ABC  0101               	movlb	1	; () banked
  4402  002ABE  0101               	movlb	1	; () banked
  4403  002AC0  C118  F10D         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4404  002AC4  0101               	movlb	1	; () banked
  4405  002AC6  0101               	movlb	1	; () banked
  4406  002AC8  C11B  F110         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4407  002ACC  0101               	movlb	1	; () banked
  4408  002ACE  0101               	movlb	1	; () banked
  4409  002AD0  C11A  F10F         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4410  002AD4  ECD0  F007         	call	_recv_msg	;wreg free
  4411  002AD8  0012               	return	
  4412  002ADA                     __end_of_ToMainHigh_recvmsg:
  4413                           	opt stack 0
  4414                           tblptru	equ	0xFF8
  4415                           tblptrh	equ	0xFF7
  4416                           tblptrl	equ	0xFF6
  4417                           tablat	equ	0xFF5
  4418                           prodh	equ	0xFF4
  4419                           prodl	equ	0xFF3
  4420                           intcon	equ	0xFF2
  4421                           intcon2	equ	0xFF1
  4422                           postinc0	equ	0xFEE
  4423                           wreg	equ	0xFE8
  4424                           indf1	equ	0xFE7
  4425                           postdec1	equ	0xFE5
  4426                           fsr1h	equ	0xFE2
  4427                           fsr1l	equ	0xFE1
  4428                           indf2	equ	0xFDF
  4429                           postinc2	equ	0xFDE
  4430                           postdec2	equ	0xFDD
  4431                           fsr2h	equ	0xFDA
  4432                           fsr2l	equ	0xFD9
  4433                           status	equ	0xFD8
  4434                           
  4435 ;; *************** function _recv_msg *****************
  4436 ;; Defined at:
  4437 ;;		line 63 in file "../src/messages.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4440 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4441 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4442 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4443 ;;		 -> main@msgtype(1), 
  4444 ;;  data            2   15[BANK1 ] PTR void 
  4445 ;;		 -> main@msgbuffer(11), 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4448 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4449 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4450 ;;  tlength         2   20[BANK1 ] unsigned int 
  4451 ;;  slot            1   19[BANK1 ] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      char 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4461 ;;      Params:         0       0       7       0       0
  4462 ;;      Locals:         0       0       5       0       0
  4463 ;;      Temps:          0       0       2       0       0
  4464 ;;      Totals:         0       0      14       0       0
  4465 ;;Total ram usage:       14 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:   12
  4468 ;; This function calls:
  4469 ;;		___awmod
  4470 ;;		_memcpy
  4471 ;; This function is called by:
  4472 ;;		_ToMainLow_recvmsg
  4473 ;;		_ToMainHigh_recvmsg
  4474 ;;		_FromMainLow_recvmsg
  4475 ;;		_FromMainHigh_recvmsg
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text23
  4480  000FA0                     __ptext23:
  4481                           	opt stack 0
  4482  000FA0                     _recv_msg:
  4483                           	opt stack 17
  4484                           
  4485                           ;messages.c: 64: unsigned char slot;
  4486                           ;messages.c: 68: msg *qmsg;
  4487                           ;messages.c: 69: size_t tlength;
  4488                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4489                           
  4490                           ;incstack = 0
  4491  000FA0  0101               	movlb	1	; () banked
  4492  000FA2  EE20 F042          	lfsr	2,66
  4493  000FA6  0101               	movlb	1	; () banked
  4494  000FA8  510A               	movf	recv_msg@qptr& (0+255),w,b
  4495  000FAA  26D9               	addwf	fsr2l,f,c
  4496  000FAC  0101               	movlb	1	; () banked
  4497  000FAE  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4498  000FB0  22DA               	addwfc	fsr2h,f,c
  4499  000FB2  50DF               	movf	indf2,w,c
  4500  000FB4  0101               	movlb	1	; () banked
  4501  000FB6  0101               	movlb	1	; () banked
  4502  000FB8  6F13               	movwf	recv_msg@slot& (0+255),b
  4503                           
  4504                           ; BSR set to: 1
  4505                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4506  000FBA  0101               	movlb	1	; () banked
  4507  000FBC  0101               	movlb	1	; () banked
  4508  000FBE  5113               	movf	recv_msg@slot& (0+255),w,b
  4509  000FC0  0D0D               	mullw	13
  4510  000FC2  50F3               	movf	prodl,w,c
  4511  000FC4  0101               	movlb	1	; () banked
  4512  000FC6  0101               	movlb	1	; () banked
  4513  000FC8  250A               	addwf	recv_msg@qptr& (0+255),w,b
  4514  000FCA  0101               	movlb	1	; () banked
  4515  000FCC  0101               	movlb	1	; () banked
  4516  000FCE  6F16               	movwf	recv_msg@qmsg& (0+255),b
  4517  000FD0  50F4               	movf	prodh,w,c
  4518  000FD2  0101               	movlb	1	; () banked
  4519  000FD4  0101               	movlb	1	; () banked
  4520  000FD6  210B               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4521  000FD8  0101               	movlb	1	; () banked
  4522  000FDA  6F17               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4523                           
  4524                           ; BSR set to: 1
  4525                           ;messages.c: 74: if (qmsg->full == 1) {
  4526  000FDC  0E01               	movlw	1
  4527  000FDE  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  4528  000FE2  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4529  000FE6  62DF               	cpfseq	indf2,c
  4530  000FE8  D088               	goto	l3732
  4531                           
  4532                           ; BSR set to: 1
  4533                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4534  000FEA  0101               	movlb	1	; () banked
  4535  000FEC  EE20 F001          	lfsr	2,1
  4536  000FF0  0101               	movlb	1	; () banked
  4537  000FF2  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4538  000FF4  26D9               	addwf	fsr2l,f,c
  4539  000FF6  0101               	movlb	1	; () banked
  4540  000FF8  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4541  000FFA  22DA               	addwfc	fsr2h,f,c
  4542  000FFC  50DF               	movf	indf2,w,c
  4543  000FFE  0101               	movlb	1	; () banked
  4544  001000  0101               	movlb	1	; () banked
  4545  001002  5D0C               	subwf	recv_msg@maxlength& (0+255),w,b
  4546  001004  B0D8               	btfsc	status,0,c
  4547  001006  D002               	goto	l3716
  4548                           
  4549                           ; BSR set to: 1
  4550                           ;messages.c: 77: return (-3);
  4551  001008  0EFD               	movlw	253
  4552  00100A  0012               	return	
  4553  00100C                     l3716:
  4554                           
  4555                           ; BSR set to: 1
  4556                           ;messages.c: 78: }
  4557                           ;messages.c: 80: tlength = qmsg->length;
  4558  00100C  0101               	movlb	1	; () banked
  4559  00100E  EE20 F001          	lfsr	2,1
  4560  001012  0101               	movlb	1	; () banked
  4561  001014  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4562  001016  26D9               	addwf	fsr2l,f,c
  4563  001018  0101               	movlb	1	; () banked
  4564  00101A  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4565  00101C  22DA               	addwfc	fsr2h,f,c
  4566  00101E  50DF               	movf	indf2,w,c
  4567  001020  0101               	movlb	1	; () banked
  4568  001022  6F11               	movwf	??_recv_msg& (0+255),b
  4569  001024  0101               	movlb	1	; () banked
  4570  001026  5111               	movf	??_recv_msg& (0+255),w,b
  4571  001028  0101               	movlb	1	; () banked
  4572  00102A  0101               	movlb	1	; () banked
  4573  00102C  6F14               	movwf	recv_msg@tlength& (0+255),b
  4574  00102E  0101               	movlb	1	; () banked
  4575  001030  6B15               	clrf	(recv_msg@tlength+1)& (0+255),b
  4576                           
  4577                           ; BSR set to: 1
  4578                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4579  001032  0101               	movlb	1	; () banked
  4580  001034  0101               	movlb	1	; () banked
  4581  001036  C110  F101         	movff	recv_msg@data+1,memcpy@d1+1
  4582  00103A  0101               	movlb	1	; () banked
  4583  00103C  0101               	movlb	1	; () banked
  4584  00103E  C10F  F100         	movff	recv_msg@data,memcpy@d1
  4585  001042  0E03               	movlw	3
  4586  001044  0101               	movlb	1	; () banked
  4587  001046  0101               	movlb	1	; () banked
  4588  001048  2516               	addwf	recv_msg@qmsg& (0+255),w,b
  4589  00104A  0101               	movlb	1	; () banked
  4590  00104C  6F11               	movwf	??_recv_msg& (0+255),b
  4591  00104E  0E00               	movlw	0
  4592  001050  0101               	movlb	1	; () banked
  4593  001052  0101               	movlb	1	; () banked
  4594  001054  2117               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4595  001056  0101               	movlb	1	; () banked
  4596  001058  6F12               	movwf	(??_recv_msg+1)& (0+255),b
  4597  00105A  C111  F102         	movff	??_recv_msg,memcpy@s1
  4598  00105E  C112  F103         	movff	??_recv_msg+1,memcpy@s1+1
  4599  001062  C114  F104         	movff	recv_msg@tlength,memcpy@n
  4600  001066  C115  F105         	movff	recv_msg@tlength+1,memcpy@n+1
  4601  00106A  ECDD  F013         	call	_memcpy	;wreg free
  4602                           
  4603                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  4604  00106E  0101               	movlb	1	; () banked
  4605  001070  EE20 F042          	lfsr	2,66
  4606  001074  0101               	movlb	1	; () banked
  4607  001076  510A               	movf	recv_msg@qptr& (0+255),w,b
  4608  001078  26D9               	addwf	fsr2l,f,c
  4609  00107A  0101               	movlb	1	; () banked
  4610  00107C  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4611  00107E  22DA               	addwfc	fsr2h,f,c
  4612  001080  0101               	movlb	1	; () banked
  4613  001082  EE10 F042          	lfsr	1,66
  4614  001086  0101               	movlb	1	; () banked
  4615  001088  510A               	movf	recv_msg@qptr& (0+255),w,b
  4616  00108A  26E1               	addwf	fsr1l,f,c
  4617  00108C  0101               	movlb	1	; () banked
  4618  00108E  510B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4619  001090  22E2               	addwfc	fsr1h,f,c
  4620  001092  50E7               	movf	indf1,w,c
  4621  001094  0101               	movlb	1	; () banked
  4622  001096  6F11               	movwf	??_recv_msg& (0+255),b
  4623  001098  0E01               	movlw	1
  4624  00109A  0101               	movlb	1	; () banked
  4625  00109C  2511               	addwf	??_recv_msg& (0+255),w,b
  4626  00109E  0101               	movlb	1	; () banked
  4627  0010A0  0101               	movlb	1	; () banked
  4628  0010A2  6F00               	movwf	___awmod@dividend& (0+255),b
  4629  0010A4  0101               	movlb	1	; () banked
  4630  0010A6  0101               	movlb	1	; () banked
  4631  0010A8  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
  4632  0010AA  0E00               	movlw	0
  4633  0010AC  2301               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4634  0010AE  0E00               	movlw	0
  4635  0010B0  0101               	movlb	1	; () banked
  4636  0010B2  0101               	movlb	1	; () banked
  4637  0010B4  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
  4638  0010B6  0E05               	movlw	5
  4639  0010B8  0101               	movlb	1	; () banked
  4640  0010BA  6F02               	movwf	___awmod@divisor& (0+255),b
  4641  0010BC  EC4A  F00A         	call	___awmod	;wreg free
  4642  0010C0  0101               	movlb	1	; () banked
  4643  0010C2  0101               	movlb	1	; () banked
  4644  0010C4  5100               	movf	?___awmod& (0+255),w,b
  4645  0010C6  6EDF               	movwf	indf2,c
  4646                           
  4647                           ; BSR set to: 1
  4648                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4649  0010C8  0101               	movlb	1	; () banked
  4650  0010CA  EE20 F002          	lfsr	2,2
  4651  0010CE  0101               	movlb	1	; () banked
  4652  0010D0  5116               	movf	recv_msg@qmsg& (0+255),w,b
  4653  0010D2  26D9               	addwf	fsr2l,f,c
  4654  0010D4  0101               	movlb	1	; () banked
  4655  0010D6  5117               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4656  0010D8  22DA               	addwfc	fsr2h,f,c
  4657  0010DA  C10D  FFE1         	movff	recv_msg@msgtype,fsr1l
  4658  0010DE  C10E  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4659  0010E2  CFDF FFE7          	movff	indf2,indf1
  4660                           
  4661                           ; BSR set to: 1
  4662                           ;messages.c: 91: qmsg->full = 0;
  4663  0010E6  C116  FFD9         	movff	recv_msg@qmsg,fsr2l
  4664  0010EA  C117  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4665  0010EE  0E00               	movlw	0
  4666  0010F0  6EDF               	movwf	indf2,c
  4667                           
  4668                           ; BSR set to: 1
  4669                           ;messages.c: 92: return (tlength);
  4670  0010F2  0101               	movlb	1	; () banked
  4671  0010F4  0101               	movlb	1	; () banked
  4672  0010F6  5114               	movf	recv_msg@tlength& (0+255),w,b
  4673  0010F8  0012               	return	
  4674  0010FA                     l3732:
  4675                           
  4676                           ; BSR set to: 1
  4677                           ;messages.c: 94: return (-4);
  4678  0010FA  0EFC               	movlw	252
  4679  0010FC  0012               	return	
  4680  0010FE                     __end_of_recv_msg:
  4681                           	opt stack 0
  4682                           tblptru	equ	0xFF8
  4683                           tblptrh	equ	0xFF7
  4684                           tblptrl	equ	0xFF6
  4685                           tablat	equ	0xFF5
  4686                           prodh	equ	0xFF4
  4687                           prodl	equ	0xFF3
  4688                           intcon	equ	0xFF2
  4689                           intcon2	equ	0xFF1
  4690                           postinc0	equ	0xFEE
  4691                           wreg	equ	0xFE8
  4692                           indf1	equ	0xFE7
  4693                           postdec1	equ	0xFE5
  4694                           fsr1h	equ	0xFE2
  4695                           fsr1l	equ	0xFE1
  4696                           indf2	equ	0xFDF
  4697                           postinc2	equ	0xFDE
  4698                           postdec2	equ	0xFDD
  4699                           fsr2h	equ	0xFDA
  4700                           fsr2l	equ	0xFD9
  4701                           status	equ	0xFD8
  4702                           
  4703 ;; *************** function _memcpy *****************
  4704 ;; Defined at:
  4705 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  d1              2    0[BANK1 ] PTR void 
  4708 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4709 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4710 ;;		 -> main@msgbuffer(11), 
  4711 ;;  s1              2    2[BANK1 ] PTR const void 
  4712 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4713 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4714 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4715 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4716 ;;		 -> main@uc(15), 
  4717 ;;  n               2    4[BANK1 ] unsigned int 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4720 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4721 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4722 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  4723 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  4724 ;;		 -> main@uc(15), 
  4725 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4726 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4727 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4728 ;;		 -> main@msgbuffer(11), 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  2    0[BANK1 ] PTR void 
  4731 ;; Registers used:
  4732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4738 ;;      Params:         0       0       6       0       0
  4739 ;;      Locals:         0       0       4       0       0
  4740 ;;      Temps:          0       0       0       0       0
  4741 ;;      Totals:         0       0      10       0       0
  4742 ;;Total ram usage:       10 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:   11
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_send_msg
  4749 ;;		_recv_msg
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text24
  4754  0027BA                     __ptext24:
  4755                           	opt stack 0
  4756  0027BA                     _memcpy:
  4757                           	opt stack 16
  4758                           
  4759                           ; BSR set to: 1
  4760                           ;incstack = 0
  4761  0027BA  0101               	movlb	1	; () banked
  4762  0027BC  0101               	movlb	1	; () banked
  4763  0027BE  C103  F109         	movff	memcpy@s1+1,memcpy@s+1
  4764  0027C2  0101               	movlb	1	; () banked
  4765  0027C4  0101               	movlb	1	; () banked
  4766  0027C6  C102  F108         	movff	memcpy@s1,memcpy@s
  4767  0027CA  0101               	movlb	1	; () banked
  4768  0027CC  0101               	movlb	1	; () banked
  4769  0027CE  C101  F107         	movff	memcpy@d1+1,memcpy@d+1
  4770  0027D2  0101               	movlb	1	; () banked
  4771  0027D4  0101               	movlb	1	; () banked
  4772  0027D6  C100  F106         	movff	memcpy@d1,memcpy@d
  4773  0027DA  D012               	goto	l3702
  4774  0027DC                     l3696:
  4775                           
  4776                           ; BSR set to: 1
  4777  0027DC  C108  FFD9         	movff	memcpy@s,fsr2l
  4778  0027E0  C109  FFDA         	movff	memcpy@s+1,fsr2h
  4779  0027E4  C106  FFE1         	movff	memcpy@d,fsr1l
  4780  0027E8  C107  FFE2         	movff	memcpy@d+1,fsr1h
  4781  0027EC  CFDF FFE7          	movff	indf2,indf1
  4782                           
  4783                           ; BSR set to: 1
  4784  0027F0  0101               	movlb	1	; () banked
  4785  0027F2  0101               	movlb	1	; () banked
  4786  0027F4  4B08               	infsnz	memcpy@s& (0+255),f,b
  4787  0027F6  2B09               	incf	(memcpy@s+1)& (0+255),f,b
  4788                           
  4789                           ; BSR set to: 1
  4790  0027F8  0101               	movlb	1	; () banked
  4791  0027FA  0101               	movlb	1	; () banked
  4792  0027FC  4B06               	infsnz	memcpy@d& (0+255),f,b
  4793  0027FE  2B07               	incf	(memcpy@d+1)& (0+255),f,b
  4794  002800                     l3702:
  4795                           
  4796                           ; BSR set to: 1
  4797  002800  0101               	movlb	1	; () banked
  4798  002802  0101               	movlb	1	; () banked
  4799  002804  0704               	decf	memcpy@n& (0+255),f,b
  4800  002806  A0D8               	btfss	status,0,c
  4801  002808  0705               	decf	(memcpy@n+1)& (0+255),f,b
  4802  00280A  0101               	movlb	1	; () banked
  4803  00280C  2904               	incf	memcpy@n& (0+255),w,b
  4804  00280E  B4D8               	btfsc	status,2,c
  4805  002810  2905               	incf	(memcpy@n+1)& (0+255),w,b
  4806  002812  B4D8               	btfsc	status,2,c
  4807                           
  4808                           ; BSR set to: 1
  4809                           
  4810                           ; BSR set to: 1
  4811                           ;	Return value of _memcpy is never used
  4812  002814  0012               	return	
  4813  002816  D7E2               	goto	l3696
  4814  002818                     __end_of_memcpy:
  4815                           	opt stack 0
  4816                           tblptru	equ	0xFF8
  4817                           tblptrh	equ	0xFF7
  4818                           tblptrl	equ	0xFF6
  4819                           tablat	equ	0xFF5
  4820                           prodh	equ	0xFF4
  4821                           prodl	equ	0xFF3
  4822                           intcon	equ	0xFF2
  4823                           intcon2	equ	0xFF1
  4824                           postinc0	equ	0xFEE
  4825                           wreg	equ	0xFE8
  4826                           indf1	equ	0xFE7
  4827                           postdec1	equ	0xFE5
  4828                           fsr1h	equ	0xFE2
  4829                           fsr1l	equ	0xFE1
  4830                           indf2	equ	0xFDF
  4831                           postinc2	equ	0xFDE
  4832                           postdec2	equ	0xFDD
  4833                           fsr2h	equ	0xFDA
  4834                           fsr2l	equ	0xFD9
  4835                           status	equ	0xFD8
  4836                           
  4837 ;; *************** function ___awmod *****************
  4838 ;; Defined at:
  4839 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  dividend        2    0[BANK1 ] int 
  4842 ;;  divisor         2    2[BANK1 ] int 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  sign            1    6[BANK1 ] unsigned char 
  4845 ;;  counter         1    5[BANK1 ] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  2    0[BANK1 ] int 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0, prodl
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4855 ;;      Params:         0       0       4       0       0
  4856 ;;      Locals:         0       0       2       0       0
  4857 ;;      Temps:          0       0       1       0       0
  4858 ;;      Totals:         0       0       7       0       0
  4859 ;;Total ram usage:        7 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:   11
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_send_msg
  4866 ;;		_recv_msg
  4867 ;;		_adc_int_handler
  4868 ;;		i1_send_msg
  4869 ;;		i2_send_msg
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text25
  4874  001494                     __ptext25:
  4875                           	opt stack 0
  4876  001494                     ___awmod:
  4877                           	opt stack 16
  4878                           
  4879                           ; BSR set to: 1
  4880                           ;incstack = 0
  4881  001494  0101               	movlb	1	; () banked
  4882  001496  6F04               	movwf	??___awmod& (0+255),b
  4883  001498  0E00               	movlw	0
  4884  00149A  0101               	movlb	1	; () banked
  4885  00149C  0101               	movlb	1	; () banked
  4886  00149E  6F06               	movwf	___awmod@sign& (0+255),b
  4887  0014A0  0101               	movlb	1	; () banked
  4888  0014A2  5104               	movf	??___awmod& (0+255),w,b
  4889                           
  4890                           ; BSR set to: 1
  4891  0014A4  0101               	movlb	1	; () banked
  4892  0014A6  0101               	movlb	1	; () banked
  4893  0014A8  5101               	movf	(___awmod@dividend+1)& (0+255),w,b
  4894  0014AA  0A80               	xorlw	128
  4895  0014AC  6EF3               	movwf	prodl,c
  4896  0014AE  0E80               	movlw	128
  4897  0014B0  5CF3               	subwf	prodl,w,c
  4898  0014B2  0E00               	movlw	0
  4899  0014B4  B4D8               	btfsc	status,2,c
  4900  0014B6  5D00               	subwf	___awmod@dividend& (0+255),w,b
  4901  0014B8  B0D8               	btfsc	status,0,c
  4902  0014BA  D00F               	goto	l4122
  4903                           
  4904                           ; BSR set to: 1
  4905  0014BC  0101               	movlb	1	; () banked
  4906  0014BE  0101               	movlb	1	; () banked
  4907  0014C0  6D00               	negf	___awmod@dividend& (0+255),b
  4908  0014C2  0101               	movlb	1	; () banked
  4909  0014C4  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  4910  0014C6  B0D8               	btfsc	status,0,c
  4911  0014C8  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  4912                           
  4913                           ; BSR set to: 1
  4914  0014CA  0101               	movlb	1	; () banked
  4915  0014CC  6F04               	movwf	??___awmod& (0+255),b
  4916  0014CE  0E01               	movlw	1
  4917  0014D0  0101               	movlb	1	; () banked
  4918  0014D2  0101               	movlb	1	; () banked
  4919  0014D4  6F06               	movwf	___awmod@sign& (0+255),b
  4920  0014D6  0101               	movlb	1	; () banked
  4921  0014D8  5104               	movf	??___awmod& (0+255),w,b
  4922  0014DA                     l4122:
  4923                           
  4924                           ; BSR set to: 1
  4925  0014DA  0101               	movlb	1	; () banked
  4926  0014DC  0101               	movlb	1	; () banked
  4927  0014DE  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  4928  0014E0  0A80               	xorlw	128
  4929  0014E2  6EF3               	movwf	prodl,c
  4930  0014E4  0E80               	movlw	128
  4931  0014E6  5CF3               	subwf	prodl,w,c
  4932  0014E8  0E00               	movlw	0
  4933  0014EA  B4D8               	btfsc	status,2,c
  4934  0014EC  5D02               	subwf	___awmod@divisor& (0+255),w,b
  4935  0014EE  B0D8               	btfsc	status,0,c
  4936  0014F0  D007               	goto	l4126
  4937                           
  4938                           ; BSR set to: 1
  4939  0014F2  0101               	movlb	1	; () banked
  4940  0014F4  0101               	movlb	1	; () banked
  4941  0014F6  6D02               	negf	___awmod@divisor& (0+255),b
  4942  0014F8  0101               	movlb	1	; () banked
  4943  0014FA  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
  4944  0014FC  B0D8               	btfsc	status,0,c
  4945  0014FE  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
  4946  001500                     l4126:
  4947                           
  4948                           ; BSR set to: 1
  4949  001500  0101               	movlb	1	; () banked
  4950  001502  0101               	movlb	1	; () banked
  4951  001504  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  4952  001506  1102               	iorwf	___awmod@divisor& (0+255),w,b
  4953  001508  B4D8               	btfsc	status,2,c
  4954  00150A  D03A               	goto	l4142
  4955                           
  4956                           ; BSR set to: 1
  4957  00150C  0101               	movlb	1	; () banked
  4958  00150E  6F04               	movwf	??___awmod& (0+255),b
  4959  001510  0E01               	movlw	1
  4960  001512  0101               	movlb	1	; () banked
  4961  001514  0101               	movlb	1	; () banked
  4962  001516  6F05               	movwf	___awmod@counter& (0+255),b
  4963  001518  0101               	movlb	1	; () banked
  4964  00151A  5104               	movf	??___awmod& (0+255),w,b
  4965  00151C  D009               	goto	l4132
  4966  00151E                     l4130:
  4967                           
  4968                           ; BSR set to: 1
  4969  00151E  0101               	movlb	1	; () banked
  4970  001520  0101               	movlb	1	; () banked
  4971  001522  0101               	movlb	1	; () banked
  4972  001524  90D8               	bcf	status,0,c
  4973  001526  3702               	rlcf	___awmod@divisor& (0+255),f,b
  4974  001528  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4975  00152A  0101               	movlb	1	; () banked
  4976  00152C  0101               	movlb	1	; () banked
  4977  00152E  2B05               	incf	___awmod@counter& (0+255),f,b
  4978  001530                     l4132:
  4979                           
  4980                           ; BSR set to: 1
  4981  001530  0101               	movlb	1	; () banked
  4982  001532  0101               	movlb	1	; () banked
  4983  001534  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4984  001536  D7F3               	goto	l4130
  4985  001538                     l4134:
  4986                           
  4987                           ; BSR set to: 1
  4988  001538  0101               	movlb	1	; () banked
  4989  00153A  0101               	movlb	1	; () banked
  4990  00153C  5102               	movf	___awmod@divisor& (0+255),w,b
  4991  00153E  0101               	movlb	1	; () banked
  4992  001540  0101               	movlb	1	; () banked
  4993  001542  5D00               	subwf	___awmod@dividend& (0+255),w,b
  4994  001544  0101               	movlb	1	; () banked
  4995  001546  0101               	movlb	1	; () banked
  4996  001548  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  4997  00154A  0101               	movlb	1	; () banked
  4998  00154C  0101               	movlb	1	; () banked
  4999  00154E  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5000  001550  A0D8               	btfss	status,0,c
  5001  001552  D00C               	goto	l4138
  5002                           
  5003                           ; BSR set to: 1
  5004  001554  0101               	movlb	1	; () banked
  5005  001556  0101               	movlb	1	; () banked
  5006  001558  5102               	movf	___awmod@divisor& (0+255),w,b
  5007  00155A  0101               	movlb	1	; () banked
  5008  00155C  0101               	movlb	1	; () banked
  5009  00155E  5F00               	subwf	___awmod@dividend& (0+255),f,b
  5010  001560  0101               	movlb	1	; () banked
  5011  001562  0101               	movlb	1	; () banked
  5012  001564  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
  5013  001566  0101               	movlb	1	; () banked
  5014  001568  0101               	movlb	1	; () banked
  5015  00156A  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5016  00156C                     l4138:
  5017                           
  5018                           ; BSR set to: 1
  5019  00156C  0101               	movlb	1	; () banked
  5020  00156E  0101               	movlb	1	; () banked
  5021  001570  0101               	movlb	1	; () banked
  5022  001572  90D8               	bcf	status,0,c
  5023  001574  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5024  001576  3302               	rrcf	___awmod@divisor& (0+255),f,b
  5025                           
  5026                           ; BSR set to: 1
  5027  001578  0101               	movlb	1	; () banked
  5028  00157A  0101               	movlb	1	; () banked
  5029  00157C  2F05               	decfsz	___awmod@counter& (0+255),f,b
  5030  00157E  D7DC               	goto	l4134
  5031  001580                     l4142:
  5032                           
  5033                           ; BSR set to: 1
  5034  001580  0101               	movlb	1	; () banked
  5035  001582  0101               	movlb	1	; () banked
  5036  001584  5106               	movf	___awmod@sign& (0+255),w,b
  5037  001586  B4D8               	btfsc	status,2,c
  5038  001588  D007               	goto	l4146
  5039                           
  5040                           ; BSR set to: 1
  5041  00158A  0101               	movlb	1	; () banked
  5042  00158C  0101               	movlb	1	; () banked
  5043  00158E  6D00               	negf	___awmod@dividend& (0+255),b
  5044  001590  0101               	movlb	1	; () banked
  5045  001592  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
  5046  001594  B0D8               	btfsc	status,0,c
  5047  001596  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
  5048  001598                     l4146:
  5049                           
  5050                           ; BSR set to: 1
  5051  001598  C100  F100         	movff	___awmod@dividend,?___awmod
  5052  00159C  C101  F101         	movff	___awmod@dividend+1,?___awmod+1
  5053  0015A0  0012               	return	
  5054  0015A2                     __end_of___awmod:
  5055                           	opt stack 0
  5056                           tblptru	equ	0xFF8
  5057                           tblptrh	equ	0xFF7
  5058                           tblptrl	equ	0xFF6
  5059                           tablat	equ	0xFF5
  5060                           prodh	equ	0xFF4
  5061                           prodl	equ	0xFF3
  5062                           intcon	equ	0xFF2
  5063                           intcon2	equ	0xFF1
  5064                           postinc0	equ	0xFEE
  5065                           wreg	equ	0xFE8
  5066                           indf1	equ	0xFE7
  5067                           postdec1	equ	0xFE5
  5068                           fsr1h	equ	0xFE2
  5069                           fsr1l	equ	0xFE1
  5070                           indf2	equ	0xFDF
  5071                           postinc2	equ	0xFDE
  5072                           postdec2	equ	0xFDD
  5073                           fsr2h	equ	0xFDA
  5074                           fsr2l	equ	0xFD9
  5075                           status	equ	0xFD8
  5076                           
  5077 ;; *************** function _SetChanADC *****************
  5078 ;; Defined at:
  5079 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  channel         1    wreg     unsigned char 
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;  channel         1    1[BANK1 ] unsigned char 
  5084 ;; Return value:  Size  Location     Type
  5085 ;;		None               void
  5086 ;; Registers used:
  5087 ;;		wreg, status,2, status,0
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5093 ;;      Params:         0       0       0       0       0
  5094 ;;      Locals:         0       0       1       0       0
  5095 ;;      Temps:          0       0       1       0       0
  5096 ;;      Totals:         0       0       2       0       0
  5097 ;;Total ram usage:        2 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:   11
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_main
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text26
  5108  002CA2                     __ptext26:
  5109                           	opt stack 0
  5110  002CA2                     _SetChanADC:
  5111                           	opt stack 19
  5112                           
  5113                           ; BSR set to: 1
  5114                           ;incstack = 0
  5115                           ;SetChanADC@channel stored from wreg
  5116  002CA2  CFE8 F101          	movff	wreg,SetChanADC@channel
  5117  002CA6  CFC2 F100          	movff	4034,??_SetChanADC	;volatile
  5118  002CAA  0EC3               	movlw	195
  5119  002CAC  0101               	movlb	1	; () banked
  5120  002CAE  1700               	andwf	??_SetChanADC& (0+255),f,b
  5121  002CB0  0101               	movlb	1	; () banked
  5122  002CB2  0101               	movlb	1	; () banked
  5123  002CB4  90D8               	bcf	status,0,c
  5124  002CB6  3101               	rrcf	SetChanADC@channel& (0+255),w,b
  5125  002CB8  0B3C               	andlw	60
  5126  002CBA  0101               	movlb	1	; () banked
  5127  002CBC  1100               	iorwf	??_SetChanADC& (0+255),w,b
  5128  002CBE  6EC2               	movwf	4034,c	;volatile
  5129                           
  5130                           ; BSR set to: 1
  5131  002CC0  0012               	return	
  5132  002CC2                     __end_of_SetChanADC:
  5133                           	opt stack 0
  5134                           tblptru	equ	0xFF8
  5135                           tblptrh	equ	0xFF7
  5136                           tblptrl	equ	0xFF6
  5137                           tablat	equ	0xFF5
  5138                           prodh	equ	0xFF4
  5139                           prodl	equ	0xFF3
  5140                           intcon	equ	0xFF2
  5141                           intcon2	equ	0xFF1
  5142                           postinc0	equ	0xFEE
  5143                           wreg	equ	0xFE8
  5144                           indf1	equ	0xFE7
  5145                           postdec1	equ	0xFE5
  5146                           fsr1h	equ	0xFE2
  5147                           fsr1l	equ	0xFE1
  5148                           indf2	equ	0xFDF
  5149                           postinc2	equ	0xFDE
  5150                           postdec2	equ	0xFDD
  5151                           fsr2h	equ	0xFDA
  5152                           fsr2l	equ	0xFD9
  5153                           status	equ	0xFD8
  5154                           
  5155 ;; *************** function _OpenUSART *****************
  5156 ;; Defined at:
  5157 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  config          1    wreg     unsigned char 
  5160 ;;  spbrg           2    0[BANK1 ] unsigned int 
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;  config          1    5[BANK1 ] unsigned char 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;		None               void
  5165 ;; Registers used:
  5166 ;;		wreg, status,2
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5172 ;;      Params:         0       0       2       0       0
  5173 ;;      Locals:         0       0       1       0       0
  5174 ;;      Temps:          0       0       3       0       0
  5175 ;;      Totals:         0       0       6       0       0
  5176 ;;Total ram usage:        6 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:   11
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_main
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text27
  5187  00216C                     __ptext27:
  5188                           	opt stack 0
  5189  00216C                     _OpenUSART:
  5190                           	opt stack 19
  5191                           
  5192                           ; BSR set to: 1
  5193                           ;incstack = 0
  5194                           ;OpenUSART@config stored from wreg
  5195  00216C  CFE8 F105          	movff	wreg,OpenUSART@config
  5196  002170  0E00               	movlw	0
  5197  002172  6EAC               	movwf	4012,c	;volatile
  5198  002174  0E00               	movlw	0
  5199  002176  6EAB               	movwf	4011,c	;volatile
  5200  002178  0101               	movlb	1	; () banked
  5201  00217A  0101               	movlb	1	; () banked
  5202  00217C  B105               	btfsc	OpenUSART@config& (0+255),0,b
  5203                           
  5204                           ; BSR set to: 1
  5205  00217E  88AC               	bsf	4012,4,c	;volatile
  5206                           
  5207                           ; BSR set to: 1
  5208                           
  5209                           ; BSR set to: 1
  5210  002180  0101               	movlb	1	; () banked
  5211  002182  0101               	movlb	1	; () banked
  5212  002184  A305               	btfss	OpenUSART@config& (0+255),1,b
  5213  002186  D002               	goto	l3538
  5214                           
  5215                           ; BSR set to: 1
  5216  002188  8CAC               	bsf	4012,6,c	;volatile
  5217  00218A  8CAB               	bsf	4011,6,c	;volatile
  5218  00218C                     l3538:
  5219                           
  5220                           ; BSR set to: 1
  5221  00218C  0101               	movlb	1	; () banked
  5222  00218E  0101               	movlb	1	; () banked
  5223  002190  B505               	btfsc	OpenUSART@config& (0+255),2,b
  5224                           
  5225                           ; BSR set to: 1
  5226  002192  8EAC               	bsf	4012,7,c	;volatile
  5227                           
  5228                           ; BSR set to: 1
  5229                           
  5230                           ; BSR set to: 1
  5231  002194  0101               	movlb	1	; () banked
  5232  002196  0101               	movlb	1	; () banked
  5233  002198  A705               	btfss	OpenUSART@config& (0+255),3,b
  5234  00219A  D002               	goto	l671
  5235                           
  5236                           ; BSR set to: 1
  5237  00219C  88AB               	bsf	4011,4,c	;volatile
  5238  00219E  D001               	goto	l3546
  5239  0021A0                     l671:
  5240                           
  5241                           ; BSR set to: 1
  5242  0021A0  8AAB               	bsf	4011,5,c	;volatile
  5243  0021A2                     l3546:
  5244                           
  5245                           ; BSR set to: 1
  5246  0021A2  0101               	movlb	1	; () banked
  5247  0021A4  0101               	movlb	1	; () banked
  5248  0021A6  B905               	btfsc	OpenUSART@config& (0+255),4,b
  5249                           
  5250                           ; BSR set to: 1
  5251  0021A8  84AC               	bsf	4012,2,c	;volatile
  5252                           
  5253                           ; BSR set to: 1
  5254  0021AA  989E               	bcf	3998,4,c	;volatile
  5255                           
  5256                           ; BSR set to: 1
  5257  0021AC  0101               	movlb	1	; () banked
  5258  0021AE  0101               	movlb	1	; () banked
  5259  0021B0  BB05               	btfsc	OpenUSART@config& (0+255),5,b
  5260                           
  5261                           ; BSR set to: 1
  5262  0021B2  86AB               	bsf	4011,3,c	;volatile
  5263                           
  5264                           ; BSR set to: 1
  5265                           
  5266                           ; BSR set to: 1
  5267  0021B4  0101               	movlb	1	; () banked
  5268  0021B6  0101               	movlb	1	; () banked
  5269  0021B8  AD05               	btfss	OpenUSART@config& (0+255),6,b
  5270  0021BA  D002               	goto	l675
  5271                           
  5272                           ; BSR set to: 1
  5273  0021BC  8A9D               	bsf	3997,5,c	;volatile
  5274  0021BE  D001               	goto	l676
  5275  0021C0                     l675:
  5276                           
  5277                           ; BSR set to: 1
  5278  0021C0  9A9D               	bcf	3997,5,c	;volatile
  5279  0021C2                     l676:
  5280                           
  5281                           ; BSR set to: 1
  5282  0021C2  9A9E               	bcf	3998,5,c	;volatile
  5283                           
  5284                           ; BSR set to: 1
  5285  0021C4  0101               	movlb	1	; () banked
  5286  0021C6  0101               	movlb	1	; () banked
  5287  0021C8  AF05               	btfss	OpenUSART@config& (0+255),7,b
  5288  0021CA  D002               	goto	l677
  5289                           
  5290                           ; BSR set to: 1
  5291  0021CC  889D               	bsf	3997,4,c	;volatile
  5292  0021CE  D001               	goto	l678
  5293  0021D0                     l677:
  5294                           
  5295                           ; BSR set to: 1
  5296  0021D0  989D               	bcf	3997,4,c	;volatile
  5297  0021D2                     l678:
  5298                           
  5299                           ; BSR set to: 1
  5300  0021D2  C100  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5301                           
  5302                           ; BSR set to: 1
  5303  0021D6  0101               	movlb	1	; () banked
  5304  0021D8  C101  F102         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5305  0021DC  C102  F103         	movff	??_OpenUSART,??_OpenUSART+1
  5306  0021E0  0101               	movlb	1	; () banked
  5307  0021E2  6B04               	clrf	(??_OpenUSART+2)& (0+255),b
  5308  0021E4  0101               	movlb	1	; () banked
  5309  0021E6  5103               	movf	(??_OpenUSART+1)& (0+255),w,b
  5310  0021E8  6EB0               	movwf	4016,c	;volatile
  5311                           
  5312                           ; BSR set to: 1
  5313  0021EA  8AAC               	bsf	4012,5,c	;volatile
  5314                           
  5315                           ; BSR set to: 1
  5316  0021EC  8EAB               	bsf	4011,7,c	;volatile
  5317                           
  5318                           ; BSR set to: 1
  5319  0021EE  9C94               	bcf	3988,6,c	;volatile
  5320                           
  5321                           ; BSR set to: 1
  5322  0021F0  8E94               	bsf	3988,7,c	;volatile
  5323                           
  5324                           ; BSR set to: 1
  5325  0021F2  A8AC               	btfss	4012,4,c	;volatile
  5326  0021F4  0012               	return	
  5327                           
  5328                           ; BSR set to: 1
  5329  0021F6  BEAC               	btfsc	4012,7,c	;volatile
  5330  0021F8  0012               	return	
  5331                           
  5332                           ; BSR set to: 1
  5333  0021FA  8C94               	bsf	3988,6,c	;volatile
  5334  0021FC  0012               	return	
  5335  0021FE                     __end_of_OpenUSART:
  5336                           	opt stack 0
  5337                           tblptru	equ	0xFF8
  5338                           tblptrh	equ	0xFF7
  5339                           tblptrl	equ	0xFF6
  5340                           tablat	equ	0xFF5
  5341                           prodh	equ	0xFF4
  5342                           prodl	equ	0xFF3
  5343                           intcon	equ	0xFF2
  5344                           intcon2	equ	0xFF1
  5345                           postinc0	equ	0xFEE
  5346                           wreg	equ	0xFE8
  5347                           indf1	equ	0xFE7
  5348                           postdec1	equ	0xFE5
  5349                           fsr1h	equ	0xFE2
  5350                           fsr1l	equ	0xFE1
  5351                           indf2	equ	0xFDF
  5352                           postinc2	equ	0xFDE
  5353                           postdec2	equ	0xFDD
  5354                           fsr2h	equ	0xFDA
  5355                           fsr2l	equ	0xFD9
  5356                           status	equ	0xFD8
  5357                           
  5358 ;; *************** function _OpenTimer1 *****************
  5359 ;; Defined at:
  5360 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;  config          1    wreg     unsigned char 
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  config          1    0[BANK1 ] unsigned char 
  5365 ;; Return value:  Size  Location     Type
  5366 ;;		None               void
  5367 ;; Registers used:
  5368 ;;		wreg, status,2, status,0
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5374 ;;      Params:         0       0       0       0       0
  5375 ;;      Locals:         0       0       1       0       0
  5376 ;;      Temps:          0       0       0       0       0
  5377 ;;      Totals:         0       0       1       0       0
  5378 ;;Total ram usage:        1 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; Hardware stack levels required when called:   11
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_main
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text28
  5389  002B1A                     __ptext28:
  5390                           	opt stack 0
  5391  002B1A                     _OpenTimer1:
  5392                           	opt stack 19
  5393                           
  5394                           ; BSR set to: 1
  5395                           ;incstack = 0
  5396                           ;OpenTimer1@config stored from wreg
  5397  002B1A  CFE8 F100          	movff	wreg,OpenTimer1@config
  5398  002B1E  0101               	movlb	1	; () banked
  5399  002B20  0101               	movlb	1	; () banked
  5400  002B22  5100               	movf	OpenTimer1@config& (0+255),w,b
  5401  002B24  0B7E               	andlw	126
  5402  002B26  6ECD               	movwf	4045,c	;volatile
  5403                           
  5404                           ; BSR set to: 1
  5405  002B28  0101               	movlb	1	; () banked
  5406  002B2A  0101               	movlb	1	; () banked
  5407  002B2C  AD00               	btfss	OpenTimer1@config& (0+255),6,b
  5408  002B2E  D002               	goto	l634
  5409                           
  5410                           ; BSR set to: 1
  5411  002B30  8ECD               	bsf	4045,7,c	;volatile
  5412  002B32  D001               	goto	l3498
  5413  002B34                     l634:
  5414                           
  5415                           ; BSR set to: 1
  5416  002B34  9ECD               	bcf	4045,7,c	;volatile
  5417  002B36                     l3498:
  5418                           
  5419                           ; BSR set to: 1
  5420  002B36  0E00               	movlw	0
  5421  002B38  6ECF               	movwf	4047,c	;volatile
  5422  002B3A  0E00               	movlw	0
  5423  002B3C  6ECE               	movwf	4046,c	;volatile
  5424                           
  5425                           ; BSR set to: 1
  5426  002B3E  909E               	bcf	3998,0,c	;volatile
  5427                           
  5428                           ; BSR set to: 1
  5429  002B40  0101               	movlb	1	; () banked
  5430  002B42  0101               	movlb	1	; () banked
  5431  002B44  AF00               	btfss	OpenTimer1@config& (0+255),7,b
  5432  002B46  D002               	goto	l636
  5433                           
  5434                           ; BSR set to: 1
  5435  002B48  809D               	bsf	3997,0,c	;volatile
  5436  002B4A  D001               	goto	l637
  5437  002B4C                     l636:
  5438                           
  5439                           ; BSR set to: 1
  5440  002B4C  909D               	bcf	3997,0,c	;volatile
  5441  002B4E                     l637:
  5442                           
  5443                           ; BSR set to: 1
  5444  002B4E  80CD               	bsf	4045,0,c	;volatile
  5445                           
  5446                           ; BSR set to: 1
  5447  002B50  0012               	return	
  5448  002B52                     __end_of_OpenTimer1:
  5449                           	opt stack 0
  5450                           tblptru	equ	0xFF8
  5451                           tblptrh	equ	0xFF7
  5452                           tblptrl	equ	0xFF6
  5453                           tablat	equ	0xFF5
  5454                           prodh	equ	0xFF4
  5455                           prodl	equ	0xFF3
  5456                           intcon	equ	0xFF2
  5457                           intcon2	equ	0xFF1
  5458                           postinc0	equ	0xFEE
  5459                           wreg	equ	0xFE8
  5460                           indf1	equ	0xFE7
  5461                           postdec1	equ	0xFE5
  5462                           fsr1h	equ	0xFE2
  5463                           fsr1l	equ	0xFE1
  5464                           indf2	equ	0xFDF
  5465                           postinc2	equ	0xFDE
  5466                           postdec2	equ	0xFDD
  5467                           fsr2h	equ	0xFDA
  5468                           fsr2l	equ	0xFD9
  5469                           status	equ	0xFD8
  5470                           
  5471 ;; *************** function _OpenTimer0 *****************
  5472 ;; Defined at:
  5473 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  config          1    wreg     unsigned char 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  config          1    0[BANK1 ] unsigned char 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;		None               void
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5487 ;;      Params:         0       0       0       0       0
  5488 ;;      Locals:         0       0       1       0       0
  5489 ;;      Temps:          0       0       0       0       0
  5490 ;;      Totals:         0       0       1       0       0
  5491 ;;Total ram usage:        1 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:   11
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_main
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text29
  5502  002C2A                     __ptext29:
  5503                           	opt stack 0
  5504  002C2A                     _OpenTimer0:
  5505                           	opt stack 19
  5506                           
  5507                           ; BSR set to: 1
  5508                           ;incstack = 0
  5509                           ;OpenTimer0@config stored from wreg
  5510  002C2A  CFE8 F100          	movff	wreg,OpenTimer0@config
  5511  002C2E  0101               	movlb	1	; () banked
  5512  002C30  0101               	movlb	1	; () banked
  5513  002C32  5100               	movf	OpenTimer0@config& (0+255),w,b
  5514  002C34  0B7F               	andlw	127
  5515  002C36  6ED5               	movwf	4053,c	;volatile
  5516                           
  5517                           ; BSR set to: 1
  5518  002C38  0E00               	movlw	0
  5519  002C3A  6ED7               	movwf	4055,c	;volatile
  5520                           
  5521                           ; BSR set to: 1
  5522  002C3C  0E00               	movlw	0
  5523  002C3E  6ED6               	movwf	4054,c	;volatile
  5524                           
  5525                           ; BSR set to: 1
  5526  002C40  94F2               	bcf	intcon,2,c	;volatile
  5527                           
  5528                           ; BSR set to: 1
  5529  002C42  0101               	movlb	1	; () banked
  5530  002C44  0101               	movlb	1	; () banked
  5531  002C46  AF00               	btfss	OpenTimer0@config& (0+255),7,b
  5532  002C48  D002               	goto	l610
  5533                           
  5534                           ; BSR set to: 1
  5535  002C4A  8AF2               	bsf	intcon,5,c	;volatile
  5536  002C4C  D001               	goto	l611
  5537  002C4E                     l610:
  5538                           
  5539                           ; BSR set to: 1
  5540  002C4E  9AF2               	bcf	intcon,5,c	;volatile
  5541  002C50                     l611:
  5542                           
  5543                           ; BSR set to: 1
  5544  002C50  8ED5               	bsf	4053,7,c	;volatile
  5545                           
  5546                           ; BSR set to: 1
  5547  002C52  0012               	return	
  5548  002C54                     __end_of_OpenTimer0:
  5549                           	opt stack 0
  5550                           tblptru	equ	0xFF8
  5551                           tblptrh	equ	0xFF7
  5552                           tblptrl	equ	0xFF6
  5553                           tablat	equ	0xFF5
  5554                           prodh	equ	0xFF4
  5555                           prodl	equ	0xFF3
  5556                           intcon	equ	0xFF2
  5557                           intcon2	equ	0xFF1
  5558                           postinc0	equ	0xFEE
  5559                           wreg	equ	0xFE8
  5560                           indf1	equ	0xFE7
  5561                           postdec1	equ	0xFE5
  5562                           fsr1h	equ	0xFE2
  5563                           fsr1l	equ	0xFE1
  5564                           indf2	equ	0xFDF
  5565                           postinc2	equ	0xFDE
  5566                           postdec2	equ	0xFDD
  5567                           fsr2h	equ	0xFDA
  5568                           fsr2l	equ	0xFD9
  5569                           status	equ	0xFD8
  5570                           
  5571 ;; *************** function _OpenADC *****************
  5572 ;; Defined at:
  5573 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  config          1    wreg     unsigned char 
  5576 ;;  config2         1    0[BANK1 ] unsigned char 
  5577 ;;  portconfig      1    1[BANK1 ] unsigned char 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  config          1    4[BANK1 ] unsigned char 
  5580 ;; Return value:  Size  Location     Type
  5581 ;;		None               void
  5582 ;; Registers used:
  5583 ;;		wreg, status,2, status,0
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5589 ;;      Params:         0       0       2       0       0
  5590 ;;      Locals:         0       0       1       0       0
  5591 ;;      Temps:          0       0       2       0       0
  5592 ;;      Totals:         0       0       5       0       0
  5593 ;;Total ram usage:        5 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:   11
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		_main
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text30
  5604  0023A2                     __ptext30:
  5605                           	opt stack 0
  5606  0023A2                     _OpenADC:
  5607                           	opt stack 19
  5608                           
  5609                           ; BSR set to: 1
  5610                           ;incstack = 0
  5611                           ;OpenADC@config stored from wreg
  5612  0023A2  CFE8 F104          	movff	wreg,OpenADC@config
  5613  0023A6  0E00               	movlw	0
  5614  0023A8  6EC2               	movwf	4034,c	;volatile
  5615  0023AA  0E00               	movlw	0
  5616  0023AC  6EC0               	movwf	4032,c	;volatile
  5617  0023AE  0101               	movlb	1	; () banked
  5618  0023B0  0101               	movlb	1	; () banked
  5619  0023B2  90D8               	bcf	status,0,c
  5620  0023B4  3100               	rrcf	OpenADC@config2& (0+255),w,b
  5621  0023B6  0B3C               	andlw	60
  5622  0023B8  6EC2               	movwf	4034,c	;volatile
  5623                           
  5624                           ; BSR set to: 1
  5625  0023BA  C100  F102         	movff	OpenADC@config2,??_OpenADC
  5626  0023BE  0101               	movlb	1	; () banked
  5627  0023C0  3B02               	swapf	??_OpenADC& (0+255),f,b
  5628  0023C2  0EF0               	movlw	240
  5629  0023C4  1702               	andwf	??_OpenADC& (0+255),f,b
  5630  0023C6  0E30               	movlw	48
  5631  0023C8  0101               	movlb	1	; () banked
  5632  0023CA  1702               	andwf	??_OpenADC& (0+255),f,b
  5633  0023CC  0101               	movlb	1	; () banked
  5634  0023CE  0101               	movlb	1	; () banked
  5635  0023D0  5101               	movf	OpenADC@portconfig& (0+255),w,b
  5636  0023D2  0B0F               	andlw	15
  5637  0023D4  0101               	movlb	1	; () banked
  5638  0023D6  1102               	iorwf	??_OpenADC& (0+255),w,b
  5639  0023D8  6EC1               	movwf	4033,c	;volatile
  5640                           
  5641                           ; BSR set to: 1
  5642  0023DA  C104  F102         	movff	OpenADC@config,??_OpenADC
  5643  0023DE  0101               	movlb	1	; () banked
  5644  0023E0  90D8               	bcf	status,0,c
  5645  0023E2  3702               	rlcf	??_OpenADC& (0+255),f,b
  5646  0023E4  0101               	movlb	1	; () banked
  5647  0023E6  90D8               	bcf	status,0,c
  5648  0023E8  3702               	rlcf	??_OpenADC& (0+255),f,b
  5649  0023EA  0E38               	movlw	56
  5650  0023EC  0101               	movlb	1	; () banked
  5651  0023EE  1702               	andwf	??_OpenADC& (0+255),f,b
  5652  0023F0  C104  F103         	movff	OpenADC@config,??_OpenADC+1
  5653  0023F4  0101               	movlb	1	; () banked
  5654  0023F6  3B03               	swapf	(??_OpenADC+1)& (0+255),f,b
  5655  0023F8  0E0F               	movlw	15
  5656  0023FA  1703               	andwf	(??_OpenADC+1)& (0+255),f,b
  5657  0023FC  0E07               	movlw	7
  5658  0023FE  0101               	movlb	1	; () banked
  5659  002400  1703               	andwf	(??_OpenADC+1)& (0+255),f,b
  5660  002402  0101               	movlb	1	; () banked
  5661  002404  0101               	movlb	1	; () banked
  5662  002406  5104               	movf	OpenADC@config& (0+255),w,b
  5663  002408  0B80               	andlw	128
  5664  00240A  0101               	movlb	1	; () banked
  5665  00240C  1103               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5666  00240E  0101               	movlb	1	; () banked
  5667  002410  1102               	iorwf	??_OpenADC& (0+255),w,b
  5668  002412  6EC0               	movwf	4032,c	;volatile
  5669                           
  5670                           ; BSR set to: 1
  5671  002414  0101               	movlb	1	; () banked
  5672  002416  0101               	movlb	1	; () banked
  5673  002418  AF00               	btfss	OpenADC@config2& (0+255),7,b
  5674  00241A  D003               	goto	l591
  5675                           
  5676                           ; BSR set to: 1
  5677  00241C  9C9E               	bcf	3998,6,c	;volatile
  5678  00241E  8C9D               	bsf	3997,6,c	;volatile
  5679  002420  8CF2               	bsf	intcon,6,c	;volatile
  5680  002422                     l591:
  5681                           
  5682                           ; BSR set to: 1
  5683  002422  80C2               	bsf	4034,0,c	;volatile
  5684                           
  5685                           ; BSR set to: 1
  5686  002424  0012               	return	
  5687  002426                     __end_of_OpenADC:
  5688                           	opt stack 0
  5689                           tblptru	equ	0xFF8
  5690                           tblptrh	equ	0xFF7
  5691                           tblptrl	equ	0xFF6
  5692                           tablat	equ	0xFF5
  5693                           prodh	equ	0xFF4
  5694                           prodl	equ	0xFF3
  5695                           intcon	equ	0xFF2
  5696                           intcon2	equ	0xFF1
  5697                           postinc0	equ	0xFEE
  5698                           wreg	equ	0xFE8
  5699                           indf1	equ	0xFE7
  5700                           postdec1	equ	0xFE5
  5701                           fsr1h	equ	0xFE2
  5702                           fsr1l	equ	0xFE1
  5703                           indf2	equ	0xFDF
  5704                           postinc2	equ	0xFDE
  5705                           postdec2	equ	0xFDD
  5706                           fsr2h	equ	0xFDA
  5707                           fsr2l	equ	0xFD9
  5708                           status	equ	0xFD8
  5709                           
  5710 ;; *************** function _InterruptHandlerLow *****************
  5711 ;; Defined at:
  5712 ;;		line 119 in file "../src/interrupts.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;		None
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;		None
  5717 ;; Return value:  Size  Location     Type
  5718 ;;		None               void
  5719 ;; Registers used:
  5720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5721 ;; Tracked objects:
  5722 ;;		On entry : 0/0
  5723 ;;		On exit  : 0/0
  5724 ;;		Unchanged: 0/0
  5725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5726 ;;      Params:         0       0       0       0       0
  5727 ;;      Locals:         0       0       0       0       0
  5728 ;;      Temps:         17       0       0       0       0
  5729 ;;      Totals:        17       0       0       0       0
  5730 ;;Total ram usage:       17 bytes
  5731 ;; Hardware stack levels used:    1
  5732 ;; Hardware stack levels required when called:   10
  5733 ;; This function calls:
  5734 ;;		_adc_int_handler
  5735 ;;		_timer0_int_handler
  5736 ;;		_timer1_int_handler
  5737 ;;		_uart_recv_int_handler
  5738 ;;		_uart_trans_int_handler
  5739 ;; This function is called by:
  5740 ;;		Interrupt level 1
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	intcodelo
  5745  000018                     __pintcodelo:
  5746                           	opt stack 0
  5747  000018                     _InterruptHandlerLow:
  5748                           	opt stack 16
  5749                           
  5750                           ; BSR set to: 1
  5751                           ;incstack = 0
  5752  000018  CFD8 F043          	movff	status,??_InterruptHandlerLow
  5753  00001C  CFE8 F044          	movff	wreg,??_InterruptHandlerLow+1
  5754  000020  CFE0 F045          	movff	bsr,??_InterruptHandlerLow+2
  5755  000024  CFFA F046          	movff	pclath,??_InterruptHandlerLow+3
  5756  000028  CFFB F047          	movff	pclatu,??_InterruptHandlerLow+4
  5757  00002C  CFE9 F048          	movff	fsr0l,??_InterruptHandlerLow+5
  5758  000030  CFEA F049          	movff	fsr0h,??_InterruptHandlerLow+6
  5759  000034  CFE1 F04A          	movff	fsr1l,??_InterruptHandlerLow+7
  5760  000038  CFE2 F04B          	movff	fsr1h,??_InterruptHandlerLow+8
  5761  00003C  CFD9 F04C          	movff	fsr2l,??_InterruptHandlerLow+9
  5762  000040  CFDA F04D          	movff	fsr2h,??_InterruptHandlerLow+10
  5763  000044  CFF3 F04E          	movff	prodl,??_InterruptHandlerLow+11
  5764  000048  CFF4 F04F          	movff	prodh,??_InterruptHandlerLow+12
  5765  00004C  CFF6 F050          	movff	tblptrl,??_InterruptHandlerLow+13
  5766  000050  CFF7 F051          	movff	tblptrh,??_InterruptHandlerLow+14
  5767  000054  CFF8 F052          	movff	tblptru,??_InterruptHandlerLow+15
  5768  000058  CFF5 F053          	movff	tablat,??_InterruptHandlerLow+16
  5769                           
  5770                           ;interrupts.c: 121: if(PIR1bits.ADIF){
  5771  00005C  AC9E               	btfss	3998,6,c	;volatile
  5772  00005E  D003               	goto	i1l4748
  5773                           
  5774                           ;interrupts.c: 123: PIR1bits.ADIF = 0;
  5775  000060  9C9E               	bcf	3998,6,c	;volatile
  5776                           
  5777                           ;interrupts.c: 124: adc_int_handler();
  5778  000062  EC11  F007         	call	_adc_int_handler	;wreg free
  5779  000066                     i1l4748:
  5780                           
  5781                           ;interrupts.c: 125: }
  5782                           ;interrupts.c: 128: if (PIR1bits.TMR1IF) {
  5783  000066  A09E               	btfss	3998,0,c	;volatile
  5784  000068  D005               	goto	i1l4756
  5785                           
  5786                           ;interrupts.c: 129: PIR1bits.TMR1IF = 0;
  5787  00006A  909E               	bcf	3998,0,c	;volatile
  5788                           
  5789                           ;interrupts.c: 130: PORTAbits.RA1 = 1;
  5790  00006C  8280               	bsf	3968,1,c	;volatile
  5791                           
  5792                           ;interrupts.c: 131: timer1_int_handler();
  5793  00006E  EC0C  F014         	call	_timer1_int_handler	;wreg free
  5794                           
  5795                           ;interrupts.c: 132: PORTAbits.RA1 = 0;
  5796  000072  9280               	bcf	3968,1,c	;volatile
  5797  000074                     i1l4756:
  5798                           
  5799                           ;interrupts.c: 134: }
  5800                           ;interrupts.c: 137: if (INTCONbits.TMR0IF) {
  5801  000074  A4F2               	btfss	intcon,2,c	;volatile
  5802  000076  D005               	goto	i1l4764
  5803                           
  5804                           ;interrupts.c: 138: INTCONbits.TMR0IF = 0;
  5805  000078  94F2               	bcf	intcon,2,c	;volatile
  5806                           
  5807                           ;interrupts.c: 140: PORTAbits.RA0 = 1;
  5808  00007A  8080               	bsf	3968,0,c	;volatile
  5809                           
  5810                           ;interrupts.c: 141: timer0_int_handler();
  5811  00007C  EC3B  F014         	call	_timer0_int_handler	;wreg free
  5812                           
  5813                           ;interrupts.c: 142: PORTAbits.RA0 = 0;
  5814  000080  9080               	bcf	3968,0,c	;volatile
  5815  000082                     i1l4764:
  5816                           
  5817                           ;interrupts.c: 143: }
  5818                           ;interrupts.c: 146: if (PIR1bits.TXIF) {
  5819  000082  B89E               	btfsc	3998,4,c	;volatile
  5820                           
  5821                           ;interrupts.c: 148: uart_trans_int_handler();
  5822  000084  ECA9  F013         	call	_uart_trans_int_handler	;wreg free
  5823                           
  5824                           ;interrupts.c: 149: }
  5825                           ;interrupts.c: 151: if (PIR1bits.RCIF) {
  5826  000088  AA9E               	btfss	3998,5,c	;volatile
  5827  00008A  D003               	goto	i1l71
  5828                           
  5829                           ;interrupts.c: 152: PIR1bits.RCIF = 0;
  5830  00008C  9A9E               	bcf	3998,5,c	;volatile
  5831                           
  5832                           ;interrupts.c: 154: uart_recv_int_handler();
  5833  00008E  ECAF  F00D         	call	_uart_recv_int_handler	;wreg free
  5834  000092                     i1l71:
  5835  000092  C053  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5836  000096  C052  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5837  00009A  C051  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5838  00009E  C050  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5839  0000A2  C04F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5840  0000A6  C04E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5841  0000AA  C04D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5842  0000AE  C04C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5843  0000B2  C04B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5844  0000B6  C04A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5845  0000BA  C049  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5846  0000BE  C048  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5847  0000C2  C047  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5848  0000C6  C046  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5849  0000CA  C045  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5850  0000CE  C044  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5851  0000D2  C043  FFD8         	movff	??_InterruptHandlerLow,status
  5852  0000D6  0010               	retfie	
  5853  0000D8                     __end_of_InterruptHandlerLow:
  5854                           	opt stack 0
  5855                           pclatu	equ	0xFFB
  5856                           pclath	equ	0xFFA
  5857                           tblptru	equ	0xFF8
  5858                           tblptrh	equ	0xFF7
  5859                           tblptrl	equ	0xFF6
  5860                           tablat	equ	0xFF5
  5861                           prodh	equ	0xFF4
  5862                           prodl	equ	0xFF3
  5863                           intcon	equ	0xFF2
  5864                           intcon2	equ	0xFF1
  5865                           postinc0	equ	0xFEE
  5866                           fsr0h	equ	0xFEA
  5867                           fsr0l	equ	0xFE9
  5868                           wreg	equ	0xFE8
  5869                           indf1	equ	0xFE7
  5870                           postdec1	equ	0xFE5
  5871                           fsr1h	equ	0xFE2
  5872                           fsr1l	equ	0xFE1
  5873                           bsr	equ	0xFE0
  5874                           indf2	equ	0xFDF
  5875                           postinc2	equ	0xFDE
  5876                           postdec2	equ	0xFDD
  5877                           fsr2h	equ	0xFDA
  5878                           fsr2l	equ	0xFD9
  5879                           status	equ	0xFD8
  5880                           
  5881 ;; *************** function _uart_trans_int_handler *****************
  5882 ;; Defined at:
  5883 ;;		line 73 in file "../src/my_uart.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;		None
  5888 ;; Return value:  Size  Location     Type
  5889 ;;		None               void
  5890 ;; Registers used:
  5891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5897 ;;      Params:         0       0       0       0       0
  5898 ;;      Locals:         0       0       0       0       0
  5899 ;;      Temps:          1       0       0       0       0
  5900 ;;      Totals:         1       0       0       0       0
  5901 ;;Total ram usage:        1 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    6
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_InterruptHandlerLow
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text32
  5912  002752                     __ptext32:
  5913                           	opt stack 0
  5914  002752                     _uart_trans_int_handler:
  5915                           	opt stack 19
  5916                           
  5917                           ;my_uart.c: 75: if(TXSTAbits.TRMT){
  5918                           
  5919                           ;incstack = 0
  5920  002752  A2AC               	btfss	4012,1,c	;volatile
  5921  002754  0012               	return	
  5922                           
  5923                           ;my_uart.c: 76: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5924  002756  EE20 F00E          	lfsr	2,14
  5925  00275A  505E               	movf	_uc_ptr,w,c
  5926  00275C  26D9               	addwf	fsr2l,f,c
  5927  00275E  505F               	movf	_uc_ptr+1,w,c
  5928  002760  22DA               	addwfc	fsr2h,f,c
  5929  002762  50DF               	movf	indf2,w,c
  5930  002764  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5931  002766  EE20 F00D          	lfsr	2,13
  5932  00276A  505E               	movf	_uc_ptr,w,c
  5933  00276C  26D9               	addwf	fsr2l,f,c
  5934  00276E  505F               	movf	_uc_ptr+1,w,c
  5935  002770  22DA               	addwfc	fsr2h,f,c
  5936  002772  50DF               	movf	indf2,w,c
  5937  002774  5C01               	subwf	??_uart_trans_int_handler,w,c
  5938  002776  B0D8               	btfsc	status,0,c
  5939  002778  D01E               	goto	i1l474
  5940                           
  5941                           ;my_uart.c: 77: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5942  00277A  EE20 F00E          	lfsr	2,14
  5943  00277E  505E               	movf	_uc_ptr,w,c
  5944  002780  26D9               	addwf	fsr2l,f,c
  5945  002782  505F               	movf	_uc_ptr+1,w,c
  5946  002784  22DA               	addwfc	fsr2h,f,c
  5947  002786  50DF               	movf	indf2,w,c
  5948  002788  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5949  00278A  5001               	movf	??_uart_trans_int_handler,w,c
  5950  00278C  0D01               	mullw	1
  5951  00278E  0E07               	movlw	7
  5952  002790  26F3               	addwf	prodl,f,c
  5953  002792  0E00               	movlw	0
  5954  002794  22F4               	addwfc	prodh,f,c
  5955  002796  50F3               	movf	prodl,w,c
  5956  002798  245E               	addwf	_uc_ptr,w,c
  5957  00279A  6ED9               	movwf	fsr2l,c
  5958  00279C  50F4               	movf	prodh,w,c
  5959  00279E  205F               	addwfc	_uc_ptr+1,w,c
  5960  0027A0  6EDA               	movwf	fsr2h,c
  5961  0027A2  50DF               	movf	indf2,w,c
  5962  0027A4  6EAD               	movwf	4013,c	;volatile
  5963                           
  5964                           ;my_uart.c: 79: uc_ptr->txBufind++;
  5965  0027A6  EE20 F00E          	lfsr	2,14
  5966  0027AA  505E               	movf	_uc_ptr,w,c
  5967  0027AC  26D9               	addwf	fsr2l,f,c
  5968  0027AE  505F               	movf	_uc_ptr+1,w,c
  5969  0027B0  22DA               	addwfc	fsr2h,f,c
  5970  0027B2  2ADF               	incf	indf2,f,c
  5971                           
  5972                           ;my_uart.c: 80: } else
  5973  0027B4  0012               	return	
  5974  0027B6                     i1l474:
  5975                           
  5976                           ;my_uart.c: 81: PIE1bits.TX1IE = 0;
  5977  0027B6  989D               	bcf	3997,4,c	;volatile
  5978  0027B8  0012               	return	
  5979  0027BA                     __end_of_uart_trans_int_handler:
  5980                           	opt stack 0
  5981                           pclatu	equ	0xFFB
  5982                           pclath	equ	0xFFA
  5983                           tblptru	equ	0xFF8
  5984                           tblptrh	equ	0xFF7
  5985                           tblptrl	equ	0xFF6
  5986                           tablat	equ	0xFF5
  5987                           prodh	equ	0xFF4
  5988                           prodl	equ	0xFF3
  5989                           intcon	equ	0xFF2
  5990                           intcon2	equ	0xFF1
  5991                           postinc0	equ	0xFEE
  5992                           fsr0h	equ	0xFEA
  5993                           fsr0l	equ	0xFE9
  5994                           wreg	equ	0xFE8
  5995                           indf1	equ	0xFE7
  5996                           postdec1	equ	0xFE5
  5997                           fsr1h	equ	0xFE2
  5998                           fsr1l	equ	0xFE1
  5999                           bsr	equ	0xFE0
  6000                           indf2	equ	0xFDF
  6001                           postinc2	equ	0xFDE
  6002                           postdec2	equ	0xFDD
  6003                           fsr2h	equ	0xFDA
  6004                           fsr2l	equ	0xFD9
  6005                           status	equ	0xFD8
  6006                           
  6007 ;; *************** function _uart_recv_int_handler *****************
  6008 ;; Defined at:
  6009 ;;		line 11 in file "../src/my_uart.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;		None               void
  6016 ;; Registers used:
  6017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6023 ;;      Params:         0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0
  6025 ;;      Temps:          1       0       0       0       0
  6026 ;;      Totals:         1       0       0       0       0
  6027 ;;Total ram usage:        1 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    9
  6030 ;; This function calls:
  6031 ;;		_ReadUSART
  6032 ;;		_ToMainLow_sendmsg
  6033 ;; This function is called by:
  6034 ;;		_InterruptHandlerLow
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text33
  6039  001B5E                     __ptext33:
  6040                           	opt stack 0
  6041  001B5E                     _uart_recv_int_handler:
  6042                           	opt stack 16
  6043                           
  6044                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  6045                           
  6046                           ;incstack = 0
  6047  001B5E  AA9E               	btfss	3998,5,c	;volatile
  6048  001B60  D04E               	goto	i1l4736
  6049                           
  6050                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  6051  001B62  EE20 F006          	lfsr	2,6
  6052  001B66  505E               	movf	_uc_ptr,w,c
  6053  001B68  26D9               	addwf	fsr2l,f,c
  6054  001B6A  505F               	movf	_uc_ptr+1,w,c
  6055  001B6C  22DA               	addwfc	fsr2h,f,c
  6056  001B6E  50DF               	movf	indf2,w,c
  6057  001B70  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6058  001B72  501B               	movf	??_uart_recv_int_handler,w,c
  6059  001B74  0D01               	mullw	1
  6060  001B76  50F3               	movf	prodl,w,c
  6061  001B78  245E               	addwf	_uc_ptr,w,c
  6062  001B7A  6ED9               	movwf	fsr2l,c
  6063  001B7C  50F4               	movf	prodh,w,c
  6064  001B7E  205F               	addwfc	_uc_ptr+1,w,c
  6065  001B80  6EDA               	movwf	fsr2h,c
  6066  001B82  EC70  F016         	call	_ReadUSART	;wreg free
  6067  001B86  6EDF               	movwf	indf2,c
  6068                           
  6069                           ;my_uart.c: 25: uc_ptr->buflen++;
  6070  001B88  EE20 F006          	lfsr	2,6
  6071  001B8C  505E               	movf	_uc_ptr,w,c
  6072  001B8E  26D9               	addwf	fsr2l,f,c
  6073  001B90  505F               	movf	_uc_ptr+1,w,c
  6074  001B92  22DA               	addwfc	fsr2h,f,c
  6075  001B94  2ADF               	incf	indf2,f,c
  6076                           
  6077                           ;my_uart.c: 26: if(UART_timeout > 200){
  6078  001B96  0EC9               	movlw	201
  6079  001B98  5C54               	subwf	_UART_timeout,w,c
  6080  001B9A  0E00               	movlw	0
  6081  001B9C  5855               	subwfb	_UART_timeout+1,w,c
  6082  001B9E  A0D8               	btfss	status,0,c
  6083  001BA0  D00C               	goto	i1l4730
  6084                           
  6085                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  6086  001BA2  EE20 F006          	lfsr	2,6
  6087  001BA6  505E               	movf	_uc_ptr,w,c
  6088  001BA8  26D9               	addwf	fsr2l,f,c
  6089  001BAA  505F               	movf	_uc_ptr+1,w,c
  6090  001BAC  22DA               	addwfc	fsr2h,f,c
  6091  001BAE  0E01               	movlw	1
  6092  001BB0  6EDF               	movwf	indf2,c
  6093                           
  6094                           ;my_uart.c: 28: UART_timeout = 0;
  6095  001BB2  0E00               	movlw	0
  6096  001BB4  6E55               	movwf	_UART_timeout+1,c
  6097  001BB6  0E00               	movlw	0
  6098  001BB8  6E54               	movwf	_UART_timeout,c
  6099  001BBA                     i1l4730:
  6100                           
  6101                           ;my_uart.c: 29: }
  6102                           ;my_uart.c: 32: if (uc_ptr->buflen == 6) {
  6103  001BBA  EE20 F006          	lfsr	2,6
  6104  001BBE  505E               	movf	_uc_ptr,w,c
  6105  001BC0  26D9               	addwf	fsr2l,f,c
  6106  001BC2  505F               	movf	_uc_ptr+1,w,c
  6107  001BC4  22DA               	addwfc	fsr2h,f,c
  6108  001BC6  0E06               	movlw	6
  6109  001BC8  62DF               	cpfseq	indf2,c
  6110  001BCA  D019               	goto	i1l4736
  6111                           
  6112                           ;my_uart.c: 33: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  6113  001BCC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6114  001BCE  0E1F               	movlw	31
  6115  001BD0  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6116  001BD2  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6117  001BD4  C05F  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  6118  001BD8  C05E  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  6119  001BDC  EE20 F006          	lfsr	2,6
  6120  001BE0  505E               	movf	_uc_ptr,w,c
  6121  001BE2  26D9               	addwf	fsr2l,f,c
  6122  001BE4  505F               	movf	_uc_ptr+1,w,c
  6123  001BE6  22DA               	addwfc	fsr2h,f,c
  6124  001BE8  50DF               	movf	indf2,w,c
  6125  001BEA  EC3E  F016         	call	_ToMainLow_sendmsg
  6126                           
  6127                           ;my_uart.c: 34: uc_ptr->buflen = 0;
  6128  001BEE  EE20 F006          	lfsr	2,6
  6129  001BF2  505E               	movf	_uc_ptr,w,c
  6130  001BF4  26D9               	addwf	fsr2l,f,c
  6131  001BF6  505F               	movf	_uc_ptr+1,w,c
  6132  001BF8  22DA               	addwfc	fsr2h,f,c
  6133  001BFA  0E00               	movlw	0
  6134  001BFC  6EDF               	movwf	indf2,c
  6135  001BFE                     i1l4736:
  6136                           
  6137                           ;my_uart.c: 35: }
  6138                           ;my_uart.c: 36: }
  6139                           ;my_uart.c: 43: if (USART_Status.OVERRUN_ERROR == 1) {
  6140  001BFE  A656               	btfss	_USART_Status,3,c
  6141  001C00  0012               	return	
  6142                           
  6143                           ;my_uart.c: 48: RCSTAbits.CREN = 0;
  6144  001C02  98AB               	bcf	4011,4,c	;volatile
  6145                           
  6146                           ;my_uart.c: 49: RCSTAbits.CREN = 1;
  6147  001C04  88AB               	bsf	4011,4,c	;volatile
  6148                           
  6149                           ;my_uart.c: 50: ToMainLow_sendmsg(0, 30, (void *) 0);
  6150  001C06  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6151  001C08  0E1E               	movlw	30
  6152  001C0A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6153  001C0C  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6154  001C0E  0E00               	movlw	0
  6155  001C10  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6156  001C12  0E00               	movlw	0
  6157  001C14  6E18               	movwf	ToMainLow_sendmsg@data,c
  6158  001C16  0E00               	movlw	0
  6159  001C18  EC3E  F016         	call	_ToMainLow_sendmsg
  6160  001C1C  0012               	return	
  6161  001C1E                     __end_of_uart_recv_int_handler:
  6162                           	opt stack 0
  6163                           pclatu	equ	0xFFB
  6164                           pclath	equ	0xFFA
  6165                           tblptru	equ	0xFF8
  6166                           tblptrh	equ	0xFF7
  6167                           tblptrl	equ	0xFF6
  6168                           tablat	equ	0xFF5
  6169                           prodh	equ	0xFF4
  6170                           prodl	equ	0xFF3
  6171                           intcon	equ	0xFF2
  6172                           intcon2	equ	0xFF1
  6173                           postinc0	equ	0xFEE
  6174                           fsr0h	equ	0xFEA
  6175                           fsr0l	equ	0xFE9
  6176                           wreg	equ	0xFE8
  6177                           indf1	equ	0xFE7
  6178                           postdec1	equ	0xFE5
  6179                           fsr1h	equ	0xFE2
  6180                           fsr1l	equ	0xFE1
  6181                           bsr	equ	0xFE0
  6182                           indf2	equ	0xFDF
  6183                           postinc2	equ	0xFDE
  6184                           postdec2	equ	0xFDD
  6185                           fsr2h	equ	0xFDA
  6186                           fsr2l	equ	0xFD9
  6187                           status	equ	0xFD8
  6188                           
  6189 ;; *************** function _ToMainLow_sendmsg *****************
  6190 ;; Defined at:
  6191 ;;		line 103 in file "../src/messages.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  length          1    wreg     unsigned char 
  6194 ;;  msgtype         1   22[COMRAM] unsigned char 
  6195 ;;  data            2   23[COMRAM] PTR void 
  6196 ;;		 -> NULL(0), main@uc(15), 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  length          1   25[COMRAM] unsigned char 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  1    wreg      char 
  6201 ;; Registers used:
  6202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6208 ;;      Params:         3       0       0       0       0
  6209 ;;      Locals:         1       0       0       0       0
  6210 ;;      Temps:          0       0       0       0       0
  6211 ;;      Totals:         4       0       0       0       0
  6212 ;;Total ram usage:        4 bytes
  6213 ;; Hardware stack levels used:    1
  6214 ;; Hardware stack levels required when called:    8
  6215 ;; This function calls:
  6216 ;;		i1_send_msg
  6217 ;; This function is called by:
  6218 ;;		_uart_recv_int_handler
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222                           	psect	text34
  6223  002C7C                     __ptext34:
  6224                           	opt stack 0
  6225  002C7C                     _ToMainLow_sendmsg:
  6226                           	opt stack 16
  6227                           
  6228                           ;incstack = 0
  6229                           ;ToMainLow_sendmsg@length stored from wreg
  6230  002C7C  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  6231                           
  6232                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6233                           ;	Return value of _ToMainLow_sendmsg is never used
  6234  002C80  0101               	movlb	1	; () banked
  6235  002C82  0E01               	movlw	high _ToMainLow_MQ
  6236  002C84  6E0C               	movwf	i1send_msg@qptr+1,c
  6237  002C86  0101               	movlb	1	; () banked
  6238  002C88  0E82               	movlw	low _ToMainLow_MQ
  6239  002C8A  6E0B               	movwf	i1send_msg@qptr,c
  6240  002C8C  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6241  002C90  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6242  002C94  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6243  002C98  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6244  002C9C  EC0F  F00E         	call	i1_send_msg	;wreg free
  6245  002CA0  0012               	return	
  6246  002CA2                     __end_of_ToMainLow_sendmsg:
  6247                           	opt stack 0
  6248                           pclatu	equ	0xFFB
  6249                           pclath	equ	0xFFA
  6250                           tblptru	equ	0xFF8
  6251                           tblptrh	equ	0xFF7
  6252                           tblptrl	equ	0xFF6
  6253                           tablat	equ	0xFF5
  6254                           prodh	equ	0xFF4
  6255                           prodl	equ	0xFF3
  6256                           intcon	equ	0xFF2
  6257                           intcon2	equ	0xFF1
  6258                           postinc0	equ	0xFEE
  6259                           fsr0h	equ	0xFEA
  6260                           fsr0l	equ	0xFE9
  6261                           wreg	equ	0xFE8
  6262                           indf1	equ	0xFE7
  6263                           postdec1	equ	0xFE5
  6264                           fsr1h	equ	0xFE2
  6265                           fsr1l	equ	0xFE1
  6266                           bsr	equ	0xFE0
  6267                           indf2	equ	0xFDF
  6268                           postinc2	equ	0xFDE
  6269                           postdec2	equ	0xFDD
  6270                           fsr2h	equ	0xFDA
  6271                           fsr2l	equ	0xFD9
  6272                           status	equ	0xFD8
  6273                           
  6274 ;; *************** function i1_send_msg *****************
  6275 ;; Defined at:
  6276 ;;		line 24 in file "../src/messages.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6279 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6280 ;;  length          1   12[COMRAM] unsigned char 
  6281 ;;  msgtype         1   13[COMRAM] unsigned char 
  6282 ;;  data            2   14[COMRAM] PTR void 
  6283 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
  6284 ;;		 -> main@uc(15), 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6287 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6288 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6289 ;;  send_msg        2   17[COMRAM] unsigned int 
  6290 ;;  send_msg        1   19[COMRAM] unsigned char 
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  1    wreg      char 
  6293 ;; Registers used:
  6294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6300 ;;      Params:         6       0       0       0       0
  6301 ;;      Locals:         5       0       0       0       0
  6302 ;;      Temps:          1       0       0       0       0
  6303 ;;      Totals:        12       0       0       0       0
  6304 ;;Total ram usage:       12 bytes
  6305 ;; Hardware stack levels used:    1
  6306 ;; Hardware stack levels required when called:    7
  6307 ;; This function calls:
  6308 ;;		i1___awmod
  6309 ;;		i1_memcpy
  6310 ;; This function is called by:
  6311 ;;		_ToMainLow_sendmsg
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text35
  6316  001C1E                     __ptext35:
  6317                           	opt stack 0
  6318  001C1E                     i1_send_msg:
  6319                           	opt stack 16
  6320                           
  6321                           ;messages.c: 25: unsigned char slot;
  6322                           ;messages.c: 27: msg *qmsg;
  6323                           ;messages.c: 28: size_t tlength = length;
  6324                           
  6325                           ;incstack = 0
  6326  001C1E  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6327  001C22  6A13               	clrf	i1send_msg@tlength+1,c
  6328                           
  6329                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6330  001C24  EE20 F041          	lfsr	2,65
  6331  001C28  500B               	movf	i1send_msg@qptr,w,c
  6332  001C2A  26D9               	addwf	fsr2l,f,c
  6333  001C2C  500C               	movf	i1send_msg@qptr+1,w,c
  6334  001C2E  22DA               	addwfc	fsr2h,f,c
  6335  001C30  50DF               	movf	indf2,w,c
  6336  001C32  6E14               	movwf	i1send_msg@slot,c
  6337                           
  6338                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6339  001C34  5014               	movf	i1send_msg@slot,w,c
  6340  001C36  0D0D               	mullw	13
  6341  001C38  50F3               	movf	prodl,w,c
  6342  001C3A  240B               	addwf	i1send_msg@qptr,w,c
  6343  001C3C  6E15               	movwf	i1send_msg@qmsg,c
  6344  001C3E  50F4               	movf	prodh,w,c
  6345  001C40  200C               	addwfc	i1send_msg@qptr+1,w,c
  6346  001C42  6E16               	movwf	i1send_msg@qmsg+1,c
  6347                           
  6348                           ;messages.c: 41: if (qmsg->full != 0) {
  6349  001C44  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6350  001C48  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6351  001C4C  50DF               	movf	indf2,w,c
  6352  001C4E  B4D8               	btfsc	status,2,c
  6353  001C50  D002               	goto	i1l4550
  6354                           
  6355                           ;messages.c: 42: return (-1);
  6356  001C52  0EFF               	movlw	255
  6357  001C54  0012               	return	
  6358  001C56                     i1l4550:
  6359                           
  6360                           ;messages.c: 43: }
  6361                           ;messages.c: 46: qmsg->length = length;
  6362  001C56  EE20 F001          	lfsr	2,1
  6363  001C5A  5015               	movf	i1send_msg@qmsg,w,c
  6364  001C5C  26D9               	addwf	fsr2l,f,c
  6365  001C5E  5016               	movf	i1send_msg@qmsg+1,w,c
  6366  001C60  22DA               	addwfc	fsr2h,f,c
  6367  001C62  C00D  FFDF         	movff	i1send_msg@length,indf2
  6368                           
  6369                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6370  001C66  EE20 F002          	lfsr	2,2
  6371  001C6A  5015               	movf	i1send_msg@qmsg,w,c
  6372  001C6C  26D9               	addwf	fsr2l,f,c
  6373  001C6E  5016               	movf	i1send_msg@qmsg+1,w,c
  6374  001C70  22DA               	addwfc	fsr2h,f,c
  6375  001C72  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6376                           
  6377                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6378  001C76  0E03               	movlw	3
  6379  001C78  2415               	addwf	i1send_msg@qmsg,w,c
  6380  001C7A  6E01               	movwf	i1memcpy@d1,c
  6381  001C7C  0E00               	movlw	0
  6382  001C7E  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6383  001C80  6E02               	movwf	i1memcpy@d1+1,c
  6384  001C82  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6385  001C86  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6386  001C8A  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6387  001C8E  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6388  001C92  EC6D  F015         	call	i1_memcpy	;wreg free
  6389                           
  6390                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  6391  001C96  EE20 F041          	lfsr	2,65
  6392  001C9A  500B               	movf	i1send_msg@qptr,w,c
  6393  001C9C  26D9               	addwf	fsr2l,f,c
  6394  001C9E  500C               	movf	i1send_msg@qptr+1,w,c
  6395  001CA0  22DA               	addwfc	fsr2h,f,c
  6396  001CA2  EE10 F041          	lfsr	1,65
  6397  001CA6  500B               	movf	i1send_msg@qptr,w,c
  6398  001CA8  26E1               	addwf	fsr1l,f,c
  6399  001CAA  500C               	movf	i1send_msg@qptr+1,w,c
  6400  001CAC  22E2               	addwfc	fsr1h,f,c
  6401  001CAE  50E7               	movf	indf1,w,c
  6402  001CB0  6E11               	movwf	??i1_send_msg& (0+255),c
  6403  001CB2  0E01               	movlw	1
  6404  001CB4  2411               	addwf	??i1_send_msg,w,c
  6405  001CB6  6E01               	movwf	i1___awmod@dividend,c
  6406  001CB8  6A02               	clrf	i1___awmod@dividend+1,c
  6407  001CBA  0E00               	movlw	0
  6408  001CBC  2202               	addwfc	i1___awmod@dividend+1,f,c
  6409  001CBE  0E00               	movlw	0
  6410  001CC0  6E04               	movwf	i1___awmod@divisor+1,c
  6411  001CC2  0E05               	movlw	5
  6412  001CC4  6E03               	movwf	i1___awmod@divisor,c
  6413  001CC6  EC1F  F010         	call	i1___awmod	;wreg free
  6414  001CCA  5001               	movf	?i1___awmod,w,c
  6415  001CCC  6EDF               	movwf	indf2,c
  6416                           
  6417                           ;messages.c: 59: qmsg->full = 1;
  6418  001CCE  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6419  001CD2  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6420  001CD6  0E01               	movlw	1
  6421  001CD8  6EDF               	movwf	indf2,c
  6422                           
  6423                           ;messages.c: 60: return (1);
  6424  001CDA  0E01               	movlw	1
  6425  001CDC  0012               	return	
  6426  001CDE                     __end_ofi1_send_msg:
  6427                           	opt stack 0
  6428                           pclatu	equ	0xFFB
  6429                           pclath	equ	0xFFA
  6430                           tblptru	equ	0xFF8
  6431                           tblptrh	equ	0xFF7
  6432                           tblptrl	equ	0xFF6
  6433                           tablat	equ	0xFF5
  6434                           prodh	equ	0xFF4
  6435                           prodl	equ	0xFF3
  6436                           intcon	equ	0xFF2
  6437                           intcon2	equ	0xFF1
  6438                           postinc0	equ	0xFEE
  6439                           fsr0h	equ	0xFEA
  6440                           fsr0l	equ	0xFE9
  6441                           wreg	equ	0xFE8
  6442                           indf1	equ	0xFE7
  6443                           postdec1	equ	0xFE5
  6444                           fsr1h	equ	0xFE2
  6445                           fsr1l	equ	0xFE1
  6446                           bsr	equ	0xFE0
  6447                           indf2	equ	0xFDF
  6448                           postinc2	equ	0xFDE
  6449                           postdec2	equ	0xFDD
  6450                           fsr2h	equ	0xFDA
  6451                           fsr2l	equ	0xFD9
  6452                           status	equ	0xFD8
  6453                           
  6454 ;; *************** function i1_memcpy *****************
  6455 ;; Defined at:
  6456 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;  d1              2    0[COMRAM] PTR void 
  6459 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6460 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6461 ;;		 -> main@msgbuffer(11), 
  6462 ;;  s1              2    2[COMRAM] PTR const void 
  6463 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6464 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6465 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6466 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6467 ;;		 -> main@uc(15), 
  6468 ;;  n               2    4[COMRAM] unsigned int 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6471 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6472 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6473 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
  6474 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
  6475 ;;		 -> main@uc(15), 
  6476 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6477 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  6478 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  6479 ;;		 -> main@msgbuffer(11), 
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  2    0[COMRAM] PTR void 
  6482 ;; Registers used:
  6483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6489 ;;      Params:         6       0       0       0       0
  6490 ;;      Locals:         4       0       0       0       0
  6491 ;;      Temps:          0       0       0       0       0
  6492 ;;      Totals:        10       0       0       0       0
  6493 ;;Total ram usage:       10 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:    6
  6496 ;; This function calls:
  6497 ;;		Nothing
  6498 ;; This function is called by:
  6499 ;;		i1_send_msg
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           	psect	text36
  6504  002ADA                     __ptext36:
  6505                           	opt stack 0
  6506  002ADA                     i1_memcpy:
  6507                           	opt stack 16
  6508                           
  6509                           ;incstack = 0
  6510  002ADA  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6511  002ADE  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6512  002AE2  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6513  002AE6  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6514  002AEA  D00E               	goto	i1l4300
  6515  002AEC                     i1l4294:
  6516  002AEC  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6517  002AF0  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6518  002AF4  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6519  002AF8  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6520  002AFC  CFDF FFE7          	movff	indf2,indf1
  6521  002B00  4A09               	infsnz	i1memcpy@s,f,c
  6522  002B02  2A0A               	incf	i1memcpy@s+1,f,c
  6523  002B04  4A07               	infsnz	i1memcpy@d,f,c
  6524  002B06  2A08               	incf	i1memcpy@d+1,f,c
  6525  002B08                     i1l4300:
  6526  002B08  0605               	decf	i1memcpy@n,f,c
  6527  002B0A  A0D8               	btfss	status,0,c
  6528  002B0C  0606               	decf	i1memcpy@n+1,f,c
  6529  002B0E  2805               	incf	i1memcpy@n& (0+255),w,c
  6530  002B10  B4D8               	btfsc	status,2,c
  6531  002B12  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6532  002B14  B4D8               	btfsc	status,2,c
  6533                           
  6534                           ;	Return value of i1_memcpy is never used
  6535  002B16  0012               	return	
  6536  002B18  D7E9               	goto	i1l4294
  6537  002B1A                     __end_ofi1_memcpy:
  6538                           	opt stack 0
  6539                           pclatu	equ	0xFFB
  6540                           pclath	equ	0xFFA
  6541                           tblptru	equ	0xFF8
  6542                           tblptrh	equ	0xFF7
  6543                           tblptrl	equ	0xFF6
  6544                           tablat	equ	0xFF5
  6545                           prodh	equ	0xFF4
  6546                           prodl	equ	0xFF3
  6547                           intcon	equ	0xFF2
  6548                           intcon2	equ	0xFF1
  6549                           postinc0	equ	0xFEE
  6550                           fsr0h	equ	0xFEA
  6551                           fsr0l	equ	0xFE9
  6552                           wreg	equ	0xFE8
  6553                           indf1	equ	0xFE7
  6554                           postdec1	equ	0xFE5
  6555                           fsr1h	equ	0xFE2
  6556                           fsr1l	equ	0xFE1
  6557                           bsr	equ	0xFE0
  6558                           indf2	equ	0xFDF
  6559                           postinc2	equ	0xFDE
  6560                           postdec2	equ	0xFDD
  6561                           fsr2h	equ	0xFDA
  6562                           fsr2l	equ	0xFD9
  6563                           status	equ	0xFD8
  6564                           
  6565 ;; *************** function _ReadUSART *****************
  6566 ;; Defined at:
  6567 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;  data            1    0[COMRAM] unsigned char 
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      unsigned char 
  6574 ;; Registers used:
  6575 ;;		wreg, status,2, status,0
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6581 ;;      Params:         0       0       0       0       0
  6582 ;;      Locals:         1       0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0
  6584 ;;      Totals:         1       0       0       0       0
  6585 ;;Total ram usage:        1 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    6
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_uart_recv_int_handler
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           	psect	text37
  6596  002CE0                     __ptext37:
  6597                           	opt stack 0
  6598  002CE0                     _ReadUSART:
  6599                           	opt stack 18
  6600                           
  6601                           ;incstack = 0
  6602  002CE0  0EF2               	movlw	242
  6603  002CE2  1656               	andwf	_USART_Status,f,c
  6604  002CE4  ACAB               	btfss	4011,6,c	;volatile
  6605  002CE6  D003               	goto	i1l689
  6606  002CE8  9056               	bcf	_USART_Status,0,c
  6607  002CEA  B0AB               	btfsc	4011,0,c	;volatile
  6608  002CEC  8056               	bsf	_USART_Status,0,c
  6609  002CEE                     i1l689:
  6610  002CEE  B4AB               	btfsc	4011,2,c	;volatile
  6611  002CF0  8456               	bsf	_USART_Status,2,c
  6612  002CF2  B2AB               	btfsc	4011,1,c	;volatile
  6613  002CF4  8656               	bsf	_USART_Status,3,c
  6614  002CF6  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6615  002CFA  5001               	movf	ReadUSART@data,w,c
  6616  002CFC  0012               	return	
  6617  002CFE                     __end_of_ReadUSART:
  6618                           	opt stack 0
  6619                           pclatu	equ	0xFFB
  6620                           pclath	equ	0xFFA
  6621                           tblptru	equ	0xFF8
  6622                           tblptrh	equ	0xFF7
  6623                           tblptrl	equ	0xFF6
  6624                           tablat	equ	0xFF5
  6625                           prodh	equ	0xFF4
  6626                           prodl	equ	0xFF3
  6627                           intcon	equ	0xFF2
  6628                           intcon2	equ	0xFF1
  6629                           postinc0	equ	0xFEE
  6630                           fsr0h	equ	0xFEA
  6631                           fsr0l	equ	0xFE9
  6632                           wreg	equ	0xFE8
  6633                           indf1	equ	0xFE7
  6634                           postdec1	equ	0xFE5
  6635                           fsr1h	equ	0xFE2
  6636                           fsr1l	equ	0xFE1
  6637                           bsr	equ	0xFE0
  6638                           indf2	equ	0xFDF
  6639                           postinc2	equ	0xFDE
  6640                           postdec2	equ	0xFDD
  6641                           fsr2h	equ	0xFDA
  6642                           fsr2l	equ	0xFD9
  6643                           status	equ	0xFD8
  6644                           
  6645 ;; *************** function _timer1_int_handler *****************
  6646 ;; Defined at:
  6647 ;;		line 69 in file "../src/user_interrupts.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;		None
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  motorcomm       2   15[COMRAM] unsigned char [2]
  6652 ;; Return value:  Size  Location     Type
  6653 ;;		None               void
  6654 ;; Registers used:
  6655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6661 ;;      Params:         0       0       0       0       0
  6662 ;;      Locals:         2       0       0       0       0
  6663 ;;      Temps:          3       0       0       0       0
  6664 ;;      Totals:         5       0       0       0       0
  6665 ;;Total ram usage:        5 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:    8
  6668 ;; This function calls:
  6669 ;;		_WriteTimer1
  6670 ;;		_motorMove
  6671 ;; This function is called by:
  6672 ;;		_InterruptHandlerLow
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text38
  6677  002818                     __ptext38:
  6678                           	opt stack 0
  6679  002818                     _timer1_int_handler:
  6680                           	opt stack 17
  6681                           
  6682                           ;user_interrupts.c: 82: WriteTimer1(0xFF7F);
  6683                           
  6684                           ;incstack = 0
  6685  002818  0EFF               	movlw	255
  6686  00281A  6E02               	movwf	WriteTimer1@timer1+1,c
  6687  00281C  0E7F               	movlw	127
  6688  00281E  6E01               	movwf	WriteTimer1@timer1,c
  6689  002820  ECB1  F016         	call	_WriteTimer1	;wreg free
  6690                           
  6691                           ;user_interrupts.c: 84: leftEncoder++;
  6692  002824  0100               	movlb	0	; () banked
  6693  002826  0100               	movlb	0	; () banked
  6694  002828  2BDD               	incf	_leftEncoder& (0+255),f,b
  6695                           
  6696                           ; BSR set to: 0
  6697                           ;user_interrupts.c: 86: if(leftEncoder >= leftDistDesired){
  6698  00282A  5058               	movf	_leftDistDesired,w,c
  6699  00282C  0100               	movlb	0	; () banked
  6700  00282E  0100               	movlb	0	; () banked
  6701  002830  5DDD               	subwf	_leftEncoder& (0+255),w,b
  6702  002832  A0D8               	btfss	status,0,c
  6703  002834  0012               	return	
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;user_interrupts.c: 93: unsigned char motorcomm[2] = {0xC0, 0xC0};
  6707  002836  C05C  F010         	movff	timer1_int_handler@F5120,timer1_int_handler@motorcomm
  6708  00283A  C05D  F011         	movff	timer1_int_handler@F5120+1,timer1_int_handler@motorcomm+1
  6709                           
  6710                           ; BSR set to: 0
  6711                           ;user_interrupts.c: 94: motorMove(0xC0, 0xC0, 0, 0);
  6712  00283E  6E0D               	movwf	??_timer1_int_handler& (0+255),c
  6713  002840  0EC0               	movlw	192
  6714  002842  6E06               	movwf	motorMove@right,c
  6715  002844  500D               	movf	??_timer1_int_handler& (0+255),w,c
  6716  002846  6E0E               	movwf	(??_timer1_int_handler+1)& (0+255),c
  6717  002848  0E00               	movlw	0
  6718  00284A  6E07               	movwf	motorMove@leftDistance,c
  6719  00284C  500E               	movf	(??_timer1_int_handler+1)& (0+255),w,c
  6720  00284E  6E0F               	movwf	(??_timer1_int_handler+2)& (0+255),c
  6721  002850  0E00               	movlw	0
  6722  002852  6E08               	movwf	motorMove@rightDistance,c
  6723  002854  500F               	movf	(??_timer1_int_handler+2)& (0+255),w,c
  6724  002856  0EC0               	movlw	192
  6725  002858  EC13  F012         	call	_motorMove
  6726                           
  6727                           ;user_interrupts.c: 96: if(rightEncoder >= rightDistDesired){
  6728  00285C  5059               	movf	_rightDistDesired,w,c
  6729  00285E  0100               	movlb	0	; () banked
  6730  002860  0100               	movlb	0	; () banked
  6731  002862  5DDE               	subwf	_rightEncoder& (0+255),w,b
  6732  002864  A0D8               	btfss	status,0,c
  6733  002866  0012               	return	
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;user_interrupts.c: 97: stopCond = 0x01;
  6737  002868  6E0D               	movwf	??_timer1_int_handler& (0+255),c
  6738  00286A  0E01               	movlw	1
  6739  00286C  0100               	movlb	0	; () banked
  6740  00286E  0100               	movlb	0	; () banked
  6741  002870  6FDF               	movwf	_stopCond& (0+255),b
  6742  002872  500D               	movf	??_timer1_int_handler& (0+255),w,c
  6743  002874  0012               	return	
  6744  002876                     __end_of_timer1_int_handler:
  6745                           	opt stack 0
  6746                           pclatu	equ	0xFFB
  6747                           pclath	equ	0xFFA
  6748                           tblptru	equ	0xFF8
  6749                           tblptrh	equ	0xFF7
  6750                           tblptrl	equ	0xFF6
  6751                           tablat	equ	0xFF5
  6752                           prodh	equ	0xFF4
  6753                           prodl	equ	0xFF3
  6754                           intcon	equ	0xFF2
  6755                           intcon2	equ	0xFF1
  6756                           postinc0	equ	0xFEE
  6757                           fsr0h	equ	0xFEA
  6758                           fsr0l	equ	0xFE9
  6759                           wreg	equ	0xFE8
  6760                           indf1	equ	0xFE7
  6761                           postdec1	equ	0xFE5
  6762                           fsr1h	equ	0xFE2
  6763                           fsr1l	equ	0xFE1
  6764                           bsr	equ	0xFE0
  6765                           indf2	equ	0xFDF
  6766                           postinc2	equ	0xFDE
  6767                           postdec2	equ	0xFDD
  6768                           fsr2h	equ	0xFDA
  6769                           fsr2l	equ	0xFD9
  6770                           status	equ	0xFD8
  6771                           
  6772 ;; *************** function _timer0_int_handler *****************
  6773 ;; Defined at:
  6774 ;;		line 17 in file "../src/user_interrupts.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;  motorcomm       2   15[COMRAM] unsigned char [2]
  6779 ;; Return value:  Size  Location     Type
  6780 ;;		None               void
  6781 ;; Registers used:
  6782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6788 ;;      Params:         0       0       0       0       0
  6789 ;;      Locals:         2       0       0       0       0
  6790 ;;      Temps:          3       0       0       0       0
  6791 ;;      Totals:         5       0       0       0       0
  6792 ;;Total ram usage:        5 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    8
  6795 ;; This function calls:
  6796 ;;		_WriteTimer0
  6797 ;;		_motorMove
  6798 ;; This function is called by:
  6799 ;;		_InterruptHandlerLow
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           	psect	text39
  6804  002876                     __ptext39:
  6805                           	opt stack 0
  6806  002876                     _timer0_int_handler:
  6807                           	opt stack 17
  6808                           
  6809                           ;user_interrupts.c: 18: WriteTimer0(0x7F);
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;incstack = 0
  6813  002876  0E00               	movlw	0
  6814  002878  6E02               	movwf	WriteTimer0@timer0+1,c
  6815  00287A  0E7F               	movlw	127
  6816  00287C  6E01               	movwf	WriteTimer0@timer0,c
  6817  00287E  ECBA  F016         	call	_WriteTimer0	;wreg free
  6818                           
  6819                           ;user_interrupts.c: 37: rightEncoder++;
  6820  002882  0100               	movlb	0	; () banked
  6821  002884  0100               	movlb	0	; () banked
  6822  002886  2BDE               	incf	_rightEncoder& (0+255),f,b
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;user_interrupts.c: 39: if( rightEncoder >= rightDistDesired){
  6826  002888  5059               	movf	_rightDistDesired,w,c
  6827  00288A  0100               	movlb	0	; () banked
  6828  00288C  0100               	movlb	0	; () banked
  6829  00288E  5DDE               	subwf	_rightEncoder& (0+255),w,b
  6830  002890  A0D8               	btfss	status,0,c
  6831  002892  0012               	return	
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;user_interrupts.c: 46: unsigned char motorcomm[2] = {0x40, 0x40};
  6835  002894  C05A  F010         	movff	timer0_int_handler@F5118,timer0_int_handler@motorcomm
  6836  002898  C05B  F011         	movff	timer0_int_handler@F5118+1,timer0_int_handler@motorcomm+1
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;user_interrupts.c: 47: motorMove(0x40, 0x40, 0, 0);
  6840  00289C  6E0D               	movwf	??_timer0_int_handler& (0+255),c
  6841  00289E  0E40               	movlw	64
  6842  0028A0  6E06               	movwf	motorMove@right,c
  6843  0028A2  500D               	movf	??_timer0_int_handler& (0+255),w,c
  6844  0028A4  6E0E               	movwf	(??_timer0_int_handler+1)& (0+255),c
  6845  0028A6  0E00               	movlw	0
  6846  0028A8  6E07               	movwf	motorMove@leftDistance,c
  6847  0028AA  500E               	movf	(??_timer0_int_handler+1)& (0+255),w,c
  6848  0028AC  6E0F               	movwf	(??_timer0_int_handler+2)& (0+255),c
  6849  0028AE  0E00               	movlw	0
  6850  0028B0  6E08               	movwf	motorMove@rightDistance,c
  6851  0028B2  500F               	movf	(??_timer0_int_handler+2)& (0+255),w,c
  6852  0028B4  0E40               	movlw	64
  6853  0028B6  EC13  F012         	call	_motorMove
  6854                           
  6855                           ;user_interrupts.c: 48: if(leftEncoder >= leftDistDesired){
  6856  0028BA  5058               	movf	_leftDistDesired,w,c
  6857  0028BC  0100               	movlb	0	; () banked
  6858  0028BE  0100               	movlb	0	; () banked
  6859  0028C0  5DDD               	subwf	_leftEncoder& (0+255),w,b
  6860  0028C2  A0D8               	btfss	status,0,c
  6861  0028C4  0012               	return	
  6862                           
  6863                           ; BSR set to: 0
  6864                           ;user_interrupts.c: 49: stopCond = 0x01;
  6865  0028C6  6E0D               	movwf	??_timer0_int_handler& (0+255),c
  6866  0028C8  0E01               	movlw	1
  6867  0028CA  0100               	movlb	0	; () banked
  6868  0028CC  0100               	movlb	0	; () banked
  6869  0028CE  6FDF               	movwf	_stopCond& (0+255),b
  6870  0028D0  500D               	movf	??_timer0_int_handler& (0+255),w,c
  6871  0028D2  0012               	return	
  6872  0028D4                     __end_of_timer0_int_handler:
  6873                           	opt stack 0
  6874                           pclatu	equ	0xFFB
  6875                           pclath	equ	0xFFA
  6876                           tblptru	equ	0xFF8
  6877                           tblptrh	equ	0xFF7
  6878                           tblptrl	equ	0xFF6
  6879                           tablat	equ	0xFF5
  6880                           prodh	equ	0xFF4
  6881                           prodl	equ	0xFF3
  6882                           intcon	equ	0xFF2
  6883                           intcon2	equ	0xFF1
  6884                           postinc0	equ	0xFEE
  6885                           fsr0h	equ	0xFEA
  6886                           fsr0l	equ	0xFE9
  6887                           wreg	equ	0xFE8
  6888                           indf1	equ	0xFE7
  6889                           postdec1	equ	0xFE5
  6890                           fsr1h	equ	0xFE2
  6891                           fsr1l	equ	0xFE1
  6892                           bsr	equ	0xFE0
  6893                           indf2	equ	0xFDF
  6894                           postinc2	equ	0xFDE
  6895                           postdec2	equ	0xFDD
  6896                           fsr2h	equ	0xFDA
  6897                           fsr2l	equ	0xFD9
  6898                           status	equ	0xFD8
  6899                           
  6900 ;; *************** function _motorMove *****************
  6901 ;; Defined at:
  6902 ;;		line 5 in file "../src/motor.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  left            1    wreg     unsigned char 
  6905 ;;  right           1    5[COMRAM] unsigned char 
  6906 ;;  leftDistance    1    6[COMRAM] unsigned char 
  6907 ;;  rightDistanc    1    7[COMRAM] unsigned char 
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;  left            1   11[COMRAM] unsigned char 
  6910 ;;  direction       2    9[COMRAM] unsigned char [2]
  6911 ;; Return value:  Size  Location     Type
  6912 ;;		None               void
  6913 ;; Registers used:
  6914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6920 ;;      Params:         3       0       0       0       0
  6921 ;;      Locals:         3       0       0       0       0
  6922 ;;      Temps:          1       0       0       0       0
  6923 ;;      Totals:         7       0       0       0       0
  6924 ;;Total ram usage:        7 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; Hardware stack levels required when called:    7
  6927 ;; This function calls:
  6928 ;;		_WriteTimer0
  6929 ;;		_WriteTimer1
  6930 ;;		i1_uart_trans
  6931 ;; This function is called by:
  6932 ;;		_timer0_int_handler
  6933 ;;		_timer1_int_handler
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text40
  6938  002426                     __ptext40:
  6939                           	opt stack 0
  6940  002426                     _motorMove:
  6941                           	opt stack 17
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;incstack = 0
  6945                           ;motorMove@left stored from wreg
  6946  002426  CFE8 F00C          	movff	wreg,motorMove@left
  6947                           
  6948                           ;motor.c: 7: if(leftDistance != 0 && rightDistance != 0){
  6949  00242A  5007               	movf	motorMove@leftDistance,w,c
  6950  00242C  B4D8               	btfsc	status,2,c
  6951  00242E  D013               	goto	i1l4392
  6952  002430  5008               	movf	motorMove@rightDistance,w,c
  6953  002432  B4D8               	btfsc	status,2,c
  6954  002434  D010               	goto	i1l4392
  6955                           
  6956                           ;motor.c: 8: leftDistDesired = leftDistance;
  6957  002436  C007  F058         	movff	motorMove@leftDistance,_leftDistDesired
  6958                           
  6959                           ;motor.c: 9: rightDistDesired = rightDistance;
  6960  00243A  C008  F059         	movff	motorMove@rightDistance,_rightDistDesired
  6961                           
  6962                           ;motor.c: 10: leftEncoder = 0;
  6963  00243E  6E09               	movwf	??_motorMove& (0+255),c
  6964  002440  0E00               	movlw	0
  6965  002442  0100               	movlb	0	; () banked
  6966  002444  0100               	movlb	0	; () banked
  6967  002446  6FDD               	movwf	_leftEncoder& (0+255),b
  6968  002448  5009               	movf	??_motorMove& (0+255),w,c
  6969                           
  6970                           ;motor.c: 11: rightEncoder = 0;
  6971  00244A  6E09               	movwf	??_motorMove& (0+255),c
  6972  00244C  0E00               	movlw	0
  6973  00244E  0100               	movlb	0	; () banked
  6974  002450  0100               	movlb	0	; () banked
  6975  002452  6FDE               	movwf	_rightEncoder& (0+255),b
  6976  002454  5009               	movf	??_motorMove& (0+255),w,c
  6977  002456                     i1l4392:
  6978                           
  6979                           ;motor.c: 12: }
  6980                           ;motor.c: 14: if(left != 0x00 && right != 0x00){
  6981  002456  500C               	movf	motorMove@left,w,c
  6982  002458  B4D8               	btfsc	status,2,c
  6983  00245A  D006               	goto	i1l4398
  6984  00245C  5006               	movf	motorMove@right,w,c
  6985  00245E  B4D8               	btfsc	status,2,c
  6986  002460  D003               	goto	i1l4398
  6987                           
  6988                           ;motor.c: 15: stopCond = 0x00;
  6989  002462  6E09               	movwf	??_motorMove& (0+255),c
  6990  002464  0E00               	movlw	0
  6991  002466  D002               	goto	L1
  6992  002468                     i1l4398:
  6993                           
  6994                           ;motor.c: 17: stopCond = 0x01;
  6995  002468  6E09               	movwf	??_motorMove& (0+255),c
  6996  00246A  0E01               	movlw	1
  6997  00246C                     L1:
  6998  00246C  0100               	movlb	0	; () banked
  6999  00246E  0100               	movlb	0	; () banked
  7000  002470  6FDF               	movwf	_stopCond& (0+255),b
  7001  002472  5009               	movf	??_motorMove& (0+255),w,c
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;motor.c: 18: }
  7005                           ;motor.c: 21: WriteTimer0(0x7F);
  7006                           
  7007                           ; BSR set to: 0
  7008  002474  0E00               	movlw	0
  7009  002476  6E02               	movwf	WriteTimer0@timer0+1,c
  7010  002478  0E7F               	movlw	127
  7011  00247A  6E01               	movwf	WriteTimer0@timer0,c
  7012  00247C  ECBA  F016         	call	_WriteTimer0	;wreg free
  7013                           
  7014                           ;motor.c: 22: WriteTimer1(0xFF7F);
  7015  002480  0EFF               	movlw	255
  7016  002482  6E02               	movwf	WriteTimer1@timer1+1,c
  7017  002484  0E7F               	movlw	127
  7018  002486  6E01               	movwf	WriteTimer1@timer1,c
  7019  002488  ECB1  F016         	call	_WriteTimer1	;wreg free
  7020                           
  7021                           ;motor.c: 25: unsigned char direction[2];
  7022                           ;motor.c: 26: direction[0] = left;
  7023  00248C  C00C  F00A         	movff	motorMove@left,motorMove@direction
  7024                           
  7025                           ;motor.c: 27: direction[1] = right;
  7026  002490  C006  F00B         	movff	motorMove@right,motorMove@direction+1
  7027                           
  7028                           ;motor.c: 28: uart_trans(2, direction);
  7029  002494  0E00               	movlw	high motorMove@direction
  7030  002496  6E02               	movwf	i1uart_trans@data+1,c
  7031  002498  0E0A               	movlw	low motorMove@direction
  7032  00249A  6E01               	movwf	i1uart_trans@data,c
  7033  00249C  0E02               	movlw	2
  7034  00249E  ECD1  F00F         	call	i1_uart_trans
  7035  0024A2  0012               	return	
  7036  0024A4                     __end_of_motorMove:
  7037                           	opt stack 0
  7038                           pclatu	equ	0xFFB
  7039                           pclath	equ	0xFFA
  7040                           tblptru	equ	0xFF8
  7041                           tblptrh	equ	0xFF7
  7042                           tblptrl	equ	0xFF6
  7043                           tablat	equ	0xFF5
  7044                           prodh	equ	0xFF4
  7045                           prodl	equ	0xFF3
  7046                           intcon	equ	0xFF2
  7047                           intcon2	equ	0xFF1
  7048                           postinc0	equ	0xFEE
  7049                           fsr0h	equ	0xFEA
  7050                           fsr0l	equ	0xFE9
  7051                           wreg	equ	0xFE8
  7052                           indf1	equ	0xFE7
  7053                           postdec1	equ	0xFE5
  7054                           fsr1h	equ	0xFE2
  7055                           fsr1l	equ	0xFE1
  7056                           bsr	equ	0xFE0
  7057                           indf2	equ	0xFDF
  7058                           postinc2	equ	0xFDE
  7059                           postdec2	equ	0xFDD
  7060                           fsr2h	equ	0xFDA
  7061                           fsr2l	equ	0xFD9
  7062                           status	equ	0xFD8
  7063                           
  7064 ;; *************** function i1_uart_trans *****************
  7065 ;; Defined at:
  7066 ;;		line 61 in file "../src/my_uart.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  length          1    wreg     unsigned char 
  7069 ;;  data            2    0[COMRAM] PTR unsigned char 
  7070 ;;		 -> motorMove@direction(2), main@msgbuffer(11), 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  length          1    4[COMRAM] unsigned char 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;		None               void
  7075 ;; Registers used:
  7076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7082 ;;      Params:         2       0       0       0       0
  7083 ;;      Locals:         1       0       0       0       0
  7084 ;;      Temps:          2       0       0       0       0
  7085 ;;      Totals:         5       0       0       0       0
  7086 ;;Total ram usage:        5 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; Hardware stack levels required when called:    6
  7089 ;; This function calls:
  7090 ;;		Nothing
  7091 ;; This function is called by:
  7092 ;;		_motorMove
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           	psect	text41
  7097  001FA2                     __ptext41:
  7098                           	opt stack 0
  7099  001FA2                     i1_uart_trans:
  7100                           	opt stack 17
  7101                           
  7102                           ;incstack = 0
  7103                           ;i1uart_trans@length stored from wreg
  7104  001FA2  CFE8 F005          	movff	wreg,i1uart_trans@length
  7105                           
  7106                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  7107  001FA6  EE20 F00D          	lfsr	2,13
  7108  001FAA  505E               	movf	_uc_ptr,w,c
  7109  001FAC  26D9               	addwf	fsr2l,f,c
  7110  001FAE  505F               	movf	_uc_ptr+1,w,c
  7111  001FB0  22DA               	addwfc	fsr2h,f,c
  7112  001FB2  0E00               	movlw	0
  7113  001FB4  6EDF               	movwf	indf2,c
  7114  001FB6  D02D               	goto	i1l4242
  7115  001FB8                     i1l4238:
  7116                           
  7117                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  7118  001FB8  EE20 F00D          	lfsr	2,13
  7119  001FBC  505E               	movf	_uc_ptr,w,c
  7120  001FBE  26D9               	addwf	fsr2l,f,c
  7121  001FC0  505F               	movf	_uc_ptr+1,w,c
  7122  001FC2  22DA               	addwfc	fsr2h,f,c
  7123  001FC4  50DF               	movf	indf2,w,c
  7124  001FC6  6E03               	movwf	??i1_uart_trans& (0+255),c
  7125  001FC8  5003               	movf	??i1_uart_trans,w,c
  7126  001FCA  0D01               	mullw	1
  7127  001FCC  50F3               	movf	prodl,w,c
  7128  001FCE  2401               	addwf	i1uart_trans@data,w,c
  7129  001FD0  6ED9               	movwf	fsr2l,c
  7130  001FD2  50F4               	movf	prodh,w,c
  7131  001FD4  2002               	addwfc	i1uart_trans@data+1,w,c
  7132  001FD6  6EDA               	movwf	fsr2h,c
  7133  001FD8  EE10 F00D          	lfsr	1,13
  7134  001FDC  505E               	movf	_uc_ptr,w,c
  7135  001FDE  26E1               	addwf	fsr1l,f,c
  7136  001FE0  505F               	movf	_uc_ptr+1,w,c
  7137  001FE2  22E2               	addwfc	fsr1h,f,c
  7138  001FE4  50E7               	movf	indf1,w,c
  7139  001FE6  6E04               	movwf	(??i1_uart_trans+1)& (0+255),c
  7140  001FE8  5004               	movf	??i1_uart_trans+1,w,c
  7141  001FEA  0D01               	mullw	1
  7142  001FEC  0E07               	movlw	7
  7143  001FEE  26F3               	addwf	prodl,f,c
  7144  001FF0  0E00               	movlw	0
  7145  001FF2  22F4               	addwfc	prodh,f,c
  7146  001FF4  50F3               	movf	prodl,w,c
  7147  001FF6  245E               	addwf	_uc_ptr,w,c
  7148  001FF8  6EE1               	movwf	fsr1l,c
  7149  001FFA  50F4               	movf	prodh,w,c
  7150  001FFC  205F               	addwfc	_uc_ptr+1,w,c
  7151  001FFE  6EE2               	movwf	fsr1h,c
  7152  002000  CFDF FFE7          	movff	indf2,indf1
  7153  002004  EE20 F00D          	lfsr	2,13
  7154  002008  505E               	movf	_uc_ptr,w,c
  7155  00200A  26D9               	addwf	fsr2l,f,c
  7156  00200C  505F               	movf	_uc_ptr+1,w,c
  7157  00200E  22DA               	addwfc	fsr2h,f,c
  7158  002010  2ADF               	incf	indf2,f,c
  7159  002012                     i1l4242:
  7160  002012  EE20 F00D          	lfsr	2,13
  7161  002016  505E               	movf	_uc_ptr,w,c
  7162  002018  26D9               	addwf	fsr2l,f,c
  7163  00201A  505F               	movf	_uc_ptr+1,w,c
  7164  00201C  22DA               	addwfc	fsr2h,f,c
  7165  00201E  50DF               	movf	indf2,w,c
  7166  002020  6E03               	movwf	??i1_uart_trans& (0+255),c
  7167  002022  5005               	movf	i1uart_trans@length,w,c
  7168  002024  5C03               	subwf	??i1_uart_trans,w,c
  7169  002026  A0D8               	btfss	status,0,c
  7170  002028  D7C7               	goto	i1l4238
  7171                           
  7172                           ;my_uart.c: 67: }
  7173                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
  7174  00202A  EE20 F00E          	lfsr	2,14
  7175  00202E  505E               	movf	_uc_ptr,w,c
  7176  002030  26D9               	addwf	fsr2l,f,c
  7177  002032  505F               	movf	_uc_ptr+1,w,c
  7178  002034  22DA               	addwfc	fsr2h,f,c
  7179  002036  0E00               	movlw	0
  7180  002038  6EDF               	movwf	indf2,c
  7181                           
  7182                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
  7183  00203A  889D               	bsf	3997,4,c	;volatile
  7184  00203C  0012               	return	
  7185  00203E                     __end_ofi1_uart_trans:
  7186                           	opt stack 0
  7187                           pclatu	equ	0xFFB
  7188                           pclath	equ	0xFFA
  7189                           tblptru	equ	0xFF8
  7190                           tblptrh	equ	0xFF7
  7191                           tblptrl	equ	0xFF6
  7192                           tablat	equ	0xFF5
  7193                           prodh	equ	0xFF4
  7194                           prodl	equ	0xFF3
  7195                           intcon	equ	0xFF2
  7196                           intcon2	equ	0xFF1
  7197                           postinc0	equ	0xFEE
  7198                           fsr0h	equ	0xFEA
  7199                           fsr0l	equ	0xFE9
  7200                           wreg	equ	0xFE8
  7201                           indf1	equ	0xFE7
  7202                           postdec1	equ	0xFE5
  7203                           fsr1h	equ	0xFE2
  7204                           fsr1l	equ	0xFE1
  7205                           bsr	equ	0xFE0
  7206                           indf2	equ	0xFDF
  7207                           postinc2	equ	0xFDE
  7208                           postdec2	equ	0xFDD
  7209                           fsr2h	equ	0xFDA
  7210                           fsr2l	equ	0xFD9
  7211                           status	equ	0xFD8
  7212                           
  7213 ;; *************** function _WriteTimer1 *****************
  7214 ;; Defined at:
  7215 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  timer1          2    0[COMRAM] unsigned int 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  timer           2    2[COMRAM] struct Timers
  7220 ;; Return value:  Size  Location     Type
  7221 ;;		None               void
  7222 ;; Registers used:
  7223 ;;		None
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7229 ;;      Params:         2       0       0       0       0
  7230 ;;      Locals:         2       0       0       0       0
  7231 ;;      Temps:          0       0       0       0       0
  7232 ;;      Totals:         4       0       0       0       0
  7233 ;;Total ram usage:        4 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    6
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		_timer1_int_handler
  7240 ;;		_motorMove
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           	psect	text42
  7245  002D62                     __ptext42:
  7246                           	opt stack 0
  7247  002D62                     _WriteTimer1:
  7248                           	opt stack 17
  7249                           
  7250                           ;incstack = 0
  7251  002D62  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  7252  002D66  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  7253  002D6A  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  7254  002D6E  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  7255  002D72  0012               	return	
  7256  002D74                     __end_of_WriteTimer1:
  7257                           	opt stack 0
  7258                           pclatu	equ	0xFFB
  7259                           pclath	equ	0xFFA
  7260                           tblptru	equ	0xFF8
  7261                           tblptrh	equ	0xFF7
  7262                           tblptrl	equ	0xFF6
  7263                           tablat	equ	0xFF5
  7264                           prodh	equ	0xFF4
  7265                           prodl	equ	0xFF3
  7266                           intcon	equ	0xFF2
  7267                           intcon2	equ	0xFF1
  7268                           postinc0	equ	0xFEE
  7269                           fsr0h	equ	0xFEA
  7270                           fsr0l	equ	0xFE9
  7271                           wreg	equ	0xFE8
  7272                           indf1	equ	0xFE7
  7273                           postdec1	equ	0xFE5
  7274                           fsr1h	equ	0xFE2
  7275                           fsr1l	equ	0xFE1
  7276                           bsr	equ	0xFE0
  7277                           indf2	equ	0xFDF
  7278                           postinc2	equ	0xFDE
  7279                           postdec2	equ	0xFDD
  7280                           fsr2h	equ	0xFDA
  7281                           fsr2l	equ	0xFD9
  7282                           status	equ	0xFD8
  7283                           
  7284 ;; *************** function _WriteTimer0 *****************
  7285 ;; Defined at:
  7286 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  timer0          2    0[COMRAM] unsigned int 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;  timer           2    2[COMRAM] struct Timers
  7291 ;; Return value:  Size  Location     Type
  7292 ;;		None               void
  7293 ;; Registers used:
  7294 ;;		None
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7300 ;;      Params:         2       0       0       0       0
  7301 ;;      Locals:         2       0       0       0       0
  7302 ;;      Temps:          0       0       0       0       0
  7303 ;;      Totals:         4       0       0       0       0
  7304 ;;Total ram usage:        4 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    6
  7307 ;; This function calls:
  7308 ;;		Nothing
  7309 ;; This function is called by:
  7310 ;;		_timer0_int_handler
  7311 ;;		_motorMove
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           	psect	text43
  7316  002D74                     __ptext43:
  7317                           	opt stack 0
  7318  002D74                     _WriteTimer0:
  7319                           	opt stack 17
  7320                           
  7321                           ;incstack = 0
  7322  002D74  C001  F003         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7323  002D78  C002  F004         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7324  002D7C  C004  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7325  002D80  C003  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7326  002D84  0012               	return	
  7327  002D86                     __end_of_WriteTimer0:
  7328                           	opt stack 0
  7329                           pclatu	equ	0xFFB
  7330                           pclath	equ	0xFFA
  7331                           tblptru	equ	0xFF8
  7332                           tblptrh	equ	0xFF7
  7333                           tblptrl	equ	0xFF6
  7334                           tablat	equ	0xFF5
  7335                           prodh	equ	0xFF4
  7336                           prodl	equ	0xFF3
  7337                           intcon	equ	0xFF2
  7338                           intcon2	equ	0xFF1
  7339                           postinc0	equ	0xFEE
  7340                           fsr0h	equ	0xFEA
  7341                           fsr0l	equ	0xFE9
  7342                           wreg	equ	0xFE8
  7343                           indf1	equ	0xFE7
  7344                           postdec1	equ	0xFE5
  7345                           fsr1h	equ	0xFE2
  7346                           fsr1l	equ	0xFE1
  7347                           bsr	equ	0xFE0
  7348                           indf2	equ	0xFDF
  7349                           postinc2	equ	0xFDE
  7350                           postdec2	equ	0xFDD
  7351                           fsr2h	equ	0xFDA
  7352                           fsr2l	equ	0xFD9
  7353                           status	equ	0xFD8
  7354                           
  7355 ;; *************** function _adc_int_handler *****************
  7356 ;; Defined at:
  7357 ;;		line 104 in file "../src/user_interrupts.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;		None
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;  dist            3   54[COMRAM] float 
  7362 ;;  voltage         3   59[COMRAM] float 
  7363 ;;  roundDist       2   64[COMRAM] int 
  7364 ;;  channel         2   62[COMRAM] int 
  7365 ;;  k               2   57[COMRAM] int 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;		None               void
  7368 ;; Registers used:
  7369 ;;		wreg, status,2, status,0, prodl, cstack
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7375 ;;      Params:         0       0       0       0       0
  7376 ;;      Locals:        12       0       0       0       0
  7377 ;;      Temps:          4       0       0       0       0
  7378 ;;      Totals:        16       0       0       0       0
  7379 ;;Total ram usage:       16 bytes
  7380 ;; Hardware stack levels used:    1
  7381 ;; Hardware stack levels required when called:    8
  7382 ;; This function calls:
  7383 ;;		___awtoft
  7384 ;;		___ftadd
  7385 ;;		___ftdiv
  7386 ;;		___ftge
  7387 ;;		___ftmul
  7388 ;;		___fttol
  7389 ;;		i1_SetChanADC
  7390 ;;		i1___awmod
  7391 ;; This function is called by:
  7392 ;;		_InterruptHandlerLow
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text44
  7397  000E22                     __ptext44:
  7398                           	opt stack 0
  7399  000E22                     _adc_int_handler:
  7400                           	opt stack 17
  7401                           
  7402                           ;user_interrupts.c: 107: if(adcbuffer[0] < 3)
  7403                           
  7404                           ;incstack = 0
  7405  000E22  0E03               	movlw	3
  7406  000E24  0101               	movlb	1	; () banked
  7407  000E26  0101               	movlb	1	; () banked
  7408  000E28  5D66               	subwf	_adcbuffer& (0+255),w,b
  7409  000E2A  B0D8               	btfsc	status,0,c
  7410  000E2C  D007               	goto	i1l4690
  7411                           
  7412                           ; BSR set to: 1
  7413                           ;user_interrupts.c: 108: adcbuffer[0] = adcbuffer[0] + 1;
  7414  000E2E  0101               	movlb	1	; () banked
  7415  000E30  0101               	movlb	1	; () banked
  7416  000E32  2966               	incf	_adcbuffer& (0+255),w,b
  7417  000E34  0101               	movlb	1	; () banked
  7418  000E36  0101               	movlb	1	; () banked
  7419  000E38  6F66               	movwf	_adcbuffer& (0+255),b
  7420  000E3A  D006               	goto	i1l4692
  7421  000E3C                     i1l4690:
  7422                           
  7423                           ; BSR set to: 1
  7424                           ;user_interrupts.c: 109: else
  7425                           ;user_interrupts.c: 110: adcbuffer[0] = 1;
  7426  000E3C  6E33               	movwf	??_adc_int_handler& (0+255),c
  7427  000E3E  0E01               	movlw	1
  7428  000E40  0101               	movlb	1	; () banked
  7429  000E42  0101               	movlb	1	; () banked
  7430  000E44  6F66               	movwf	_adcbuffer& (0+255),b
  7431  000E46  5033               	movf	??_adc_int_handler& (0+255),w,c
  7432  000E48                     i1l4692:
  7433                           
  7434                           ; BSR set to: 1
  7435                           ;user_interrupts.c: 113: int k = (int)ADRESH;
  7436  000E48  CFC4 F03A          	movff	4036,adc_int_handler@k	;volatile
  7437  000E4C  6A3B               	clrf	adc_int_handler@k+1,c
  7438                           
  7439                           ; BSR set to: 1
  7440                           ;user_interrupts.c: 114: float voltage = 3.4*k/256;
  7441  000E4E  0E9A               	movlw	154
  7442  000E50  6E11               	movwf	___ftmul@f2,c
  7443  000E52  0E59               	movlw	89
  7444  000E54  6E12               	movwf	___ftmul@f2+1,c
  7445  000E56  0E40               	movlw	64
  7446  000E58  6E13               	movwf	___ftmul@f2+2,c
  7447  000E5A  C03A  F009         	movff	adc_int_handler@k,___awtoft@c
  7448  000E5E  C03B  F00A         	movff	adc_int_handler@k+1,___awtoft@c+1
  7449  000E62  EC99  F014         	call	___awtoft	;wreg free
  7450  000E66  C009  F00E         	movff	?___awtoft,___ftmul@f1
  7451  000E6A  C00A  F00F         	movff	?___awtoft+1,___ftmul@f1+1
  7452  000E6E  C00B  F010         	movff	?___awtoft+2,___ftmul@f1+2
  7453  000E72  ECDF  F00B         	call	___ftmul	;wreg free
  7454  000E76  C00E  F024         	movff	?___ftmul,___ftdiv@f1
  7455  000E7A  C00F  F025         	movff	?___ftmul+1,___ftdiv@f1+1
  7456  000E7E  C010  F026         	movff	?___ftmul+2,___ftdiv@f1+2
  7457  000E82  0E00               	movlw	0
  7458  000E84  6E27               	movwf	___ftdiv@f2,c
  7459  000E86  0E80               	movlw	128
  7460  000E88  6E28               	movwf	___ftdiv@f2+1,c
  7461  000E8A  0E43               	movlw	67
  7462  000E8C  6E29               	movwf	___ftdiv@f2+2,c
  7463  000E8E  ECD6  F00C         	call	___ftdiv	;wreg free
  7464  000E92  C024  F03C         	movff	?___ftdiv,adc_int_handler@voltage
  7465  000E96  C025  F03D         	movff	?___ftdiv+1,adc_int_handler@voltage+1
  7466  000E9A  C026  F03E         	movff	?___ftdiv+2,adc_int_handler@voltage+2
  7467                           
  7468                           ;user_interrupts.c: 115: int roundDist;
  7469                           ;user_interrupts.c: 119: if (voltage > .5) {
  7470  000E9E  0E00               	movlw	0
  7471  000EA0  6E01               	movwf	___ftge@ff1,c
  7472  000EA2  0E00               	movlw	0
  7473  000EA4  6E02               	movwf	___ftge@ff1+1,c
  7474  000EA6  0E3F               	movlw	63
  7475  000EA8  6E03               	movwf	___ftge@ff1+2,c
  7476  000EAA  C03C  F004         	movff	adc_int_handler@voltage,___ftge@ff2
  7477  000EAE  C03D  F005         	movff	adc_int_handler@voltage+1,___ftge@ff2+1
  7478  000EB2  C03E  F006         	movff	adc_int_handler@voltage+2,___ftge@ff2+2
  7479  000EB6  ECFF  F010         	call	___ftge	;wreg free
  7480  000EBA  B0D8               	btfsc	status,0,c
  7481  000EBC  D045               	goto	i1l4700
  7482                           
  7483                           ;user_interrupts.c: 120: float dist = 24/(voltage - 0.1);
  7484  000EBE  0E00               	movlw	0
  7485  000EC0  6E24               	movwf	___ftdiv@f1,c
  7486  000EC2  0EC0               	movlw	192
  7487  000EC4  6E25               	movwf	___ftdiv@f1+1,c
  7488  000EC6  0E41               	movlw	65
  7489  000EC8  6E26               	movwf	___ftdiv@f1+2,c
  7490  000ECA  0ECD               	movlw	205
  7491  000ECC  6E1B               	movwf	___ftadd@f2,c
  7492  000ECE  0ECC               	movlw	204
  7493  000ED0  6E1C               	movwf	___ftadd@f2+1,c
  7494  000ED2  0EBD               	movlw	189
  7495  000ED4  6E1D               	movwf	___ftadd@f2+2,c
  7496  000ED6  C03C  F018         	movff	adc_int_handler@voltage,___ftadd@f1
  7497  000EDA  C03D  F019         	movff	adc_int_handler@voltage+1,___ftadd@f1+1
  7498  000EDE  C03E  F01A         	movff	adc_int_handler@voltage+2,___ftadd@f1+2
  7499  000EE2  EC35  F006         	call	___ftadd	;wreg free
  7500  000EE6  C018  F027         	movff	?___ftadd,___ftdiv@f2
  7501  000EEA  C019  F028         	movff	?___ftadd+1,___ftdiv@f2+1
  7502  000EEE  C01A  F029         	movff	?___ftadd+2,___ftdiv@f2+2
  7503  000EF2  ECD6  F00C         	call	___ftdiv	;wreg free
  7504  000EF6  C024  F037         	movff	?___ftdiv,adc_int_handler@dist
  7505  000EFA  C025  F038         	movff	?___ftdiv+1,adc_int_handler@dist+1
  7506  000EFE  C026  F039         	movff	?___ftdiv+2,adc_int_handler@dist+2
  7507                           
  7508                           ;user_interrupts.c: 121: roundDist = (int)(dist + 0.5);
  7509  000F02  0E00               	movlw	0
  7510  000F04  6E1B               	movwf	___ftadd@f2,c
  7511  000F06  0E00               	movlw	0
  7512  000F08  6E1C               	movwf	___ftadd@f2+1,c
  7513  000F0A  0E3F               	movlw	63
  7514  000F0C  6E1D               	movwf	___ftadd@f2+2,c
  7515  000F0E  C037  F018         	movff	adc_int_handler@dist,___ftadd@f1
  7516  000F12  C038  F019         	movff	adc_int_handler@dist+1,___ftadd@f1+1
  7517  000F16  C039  F01A         	movff	adc_int_handler@dist+2,___ftadd@f1+2
  7518  000F1A  EC35  F006         	call	___ftadd	;wreg free
  7519  000F1E  C018  F009         	movff	?___ftadd,___fttol@f1
  7520  000F22  C019  F00A         	movff	?___ftadd+1,___fttol@f1+1
  7521  000F26  C01A  F00B         	movff	?___ftadd+2,___fttol@f1+2
  7522  000F2A  EC5B  F00C         	call	___fttol	;wreg free
  7523  000F2E  C009  F033         	movff	?___fttol,??_adc_int_handler
  7524  000F32  C00A  F034         	movff	?___fttol+1,??_adc_int_handler+1
  7525  000F36  C00B  F035         	movff	?___fttol+2,??_adc_int_handler+2
  7526  000F3A  C00C  F036         	movff	?___fttol+3,??_adc_int_handler+3
  7527  000F3E  C033  F041         	movff	??_adc_int_handler,adc_int_handler@roundDist
  7528  000F42  C034  F042         	movff	??_adc_int_handler+1,adc_int_handler@roundDist+1
  7529                           
  7530                           ;user_interrupts.c: 122: }
  7531  000F46  D004               	goto	i1l4702
  7532  000F48                     i1l4700:
  7533                           
  7534                           ;user_interrupts.c: 124: else
  7535                           ;user_interrupts.c: 125: roundDist = 0xFE;
  7536  000F48  0E00               	movlw	0
  7537  000F4A  6E42               	movwf	adc_int_handler@roundDist+1,c
  7538  000F4C  0EFE               	movlw	254
  7539  000F4E  6E41               	movwf	adc_int_handler@roundDist,c
  7540  000F50                     i1l4702:
  7541                           
  7542                           ;user_interrupts.c: 129: int channel = (int)adcbuffer[0] % 3;
  7543  000F50  0101               	movlb	1	; () banked
  7544  000F52  C166  F001         	movff	_adcbuffer,i1___awmod@dividend
  7545  000F56  6A02               	clrf	i1___awmod@dividend+1,c
  7546  000F58  0E00               	movlw	0
  7547  000F5A  6E04               	movwf	i1___awmod@divisor+1,c
  7548  000F5C  0E03               	movlw	3
  7549  000F5E  6E03               	movwf	i1___awmod@divisor,c
  7550  000F60  EC1F  F010         	call	i1___awmod	;wreg free
  7551  000F64  C001  F03F         	movff	?i1___awmod,adc_int_handler@channel
  7552  000F68  C002  F040         	movff	?i1___awmod+1,adc_int_handler@channel+1
  7553                           
  7554                           ;user_interrupts.c: 130: if (channel == 0) {
  7555  000F6C  5040               	movf	adc_int_handler@channel+1,w,c
  7556  000F6E  103F               	iorwf	adc_int_handler@channel,w,c
  7557  000F70  A4D8               	btfss	status,2,c
  7558  000F72  D006               	goto	i1l4710
  7559                           
  7560                           ;user_interrupts.c: 131: adcbuffer[3] = roundDist;
  7561  000F74  C041  F169         	movff	adc_int_handler@roundDist,_adcbuffer+3
  7562                           
  7563                           ;user_interrupts.c: 132: SetChanADC(0b10001111);
  7564  000F78  0E8F               	movlw	143
  7565  000F7A  EC7F  F016         	call	i1_SetChanADC
  7566                           
  7567                           ;user_interrupts.c: 133: }
  7568  000F7E  0012               	return	
  7569  000F80                     i1l4710:
  7570                           
  7571                           ;user_interrupts.c: 134: else if (channel == 1) {
  7572  000F80  043F               	decf	adc_int_handler@channel,w,c
  7573  000F82  1040               	iorwf	adc_int_handler@channel+1,w,c
  7574  000F84  A4D8               	btfss	status,2,c
  7575  000F86  D006               	goto	i1l546
  7576                           
  7577                           ;user_interrupts.c: 135: adcbuffer[1] = roundDist;
  7578  000F88  C041  F167         	movff	adc_int_handler@roundDist,_adcbuffer+1
  7579                           
  7580                           ;user_interrupts.c: 136: SetChanADC(0b10010111);
  7581  000F8C  0E97               	movlw	151
  7582  000F8E  EC7F  F016         	call	i1_SetChanADC
  7583                           
  7584                           ;user_interrupts.c: 137: }
  7585  000F92  0012               	return	
  7586  000F94                     i1l546:
  7587                           
  7588                           ;user_interrupts.c: 138: else {
  7589                           ;user_interrupts.c: 139: adcbuffer[2] = roundDist;
  7590  000F94  C041  F168         	movff	adc_int_handler@roundDist,_adcbuffer+2
  7591                           
  7592                           ;user_interrupts.c: 140: SetChanADC(0b10011111);
  7593  000F98  0E9F               	movlw	159
  7594  000F9A  EC7F  F016         	call	i1_SetChanADC
  7595  000F9E  0012               	return	
  7596  000FA0                     __end_of_adc_int_handler:
  7597                           	opt stack 0
  7598                           pclatu	equ	0xFFB
  7599                           pclath	equ	0xFFA
  7600                           tblptru	equ	0xFF8
  7601                           tblptrh	equ	0xFF7
  7602                           tblptrl	equ	0xFF6
  7603                           tablat	equ	0xFF5
  7604                           prodh	equ	0xFF4
  7605                           prodl	equ	0xFF3
  7606                           intcon	equ	0xFF2
  7607                           intcon2	equ	0xFF1
  7608                           postinc0	equ	0xFEE
  7609                           fsr0h	equ	0xFEA
  7610                           fsr0l	equ	0xFE9
  7611                           wreg	equ	0xFE8
  7612                           indf1	equ	0xFE7
  7613                           postdec1	equ	0xFE5
  7614                           fsr1h	equ	0xFE2
  7615                           fsr1l	equ	0xFE1
  7616                           bsr	equ	0xFE0
  7617                           indf2	equ	0xFDF
  7618                           postinc2	equ	0xFDE
  7619                           postdec2	equ	0xFDD
  7620                           fsr2h	equ	0xFDA
  7621                           fsr2l	equ	0xFD9
  7622                           status	equ	0xFD8
  7623                           
  7624 ;; *************** function i1___awmod *****************
  7625 ;; Defined at:
  7626 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;  dividend        2    0[COMRAM] int 
  7629 ;;  divisor         2    2[COMRAM] int 
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;  __awmod         1    6[COMRAM] unsigned char 
  7632 ;;  __awmod         1    5[COMRAM] unsigned char 
  7633 ;; Return value:  Size  Location     Type
  7634 ;;                  2    0[COMRAM] int 
  7635 ;; Registers used:
  7636 ;;		wreg, status,2, status,0, prodl
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7642 ;;      Params:         4       0       0       0       0
  7643 ;;      Locals:         2       0       0       0       0
  7644 ;;      Temps:          1       0       0       0       0
  7645 ;;      Totals:         7       0       0       0       0
  7646 ;;Total ram usage:        7 bytes
  7647 ;; Hardware stack levels used:    1
  7648 ;; Hardware stack levels required when called:    6
  7649 ;; This function calls:
  7650 ;;		Nothing
  7651 ;; This function is called by:
  7652 ;;		_adc_int_handler
  7653 ;;		i1_send_msg
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           	psect	text45
  7658  00203E                     __ptext45:
  7659                           	opt stack 0
  7660  00203E                     i1___awmod:
  7661                           	opt stack 16
  7662                           
  7663                           ;incstack = 0
  7664  00203E  6E05               	movwf	??i1___awmod& (0+255),c
  7665  002040  0E00               	movlw	0
  7666  002042  6E07               	movwf	i1___awmod@sign,c
  7667  002044  5005               	movf	??i1___awmod& (0+255),w,c
  7668  002046  5002               	movf	i1___awmod@dividend+1,w,c
  7669  002048  0A80               	xorlw	128
  7670  00204A  6EF3               	movwf	prodl,c
  7671  00204C  0E80               	movlw	128
  7672  00204E  5CF3               	subwf	prodl,w,c
  7673  002050  0E00               	movlw	0
  7674  002052  B4D8               	btfsc	status,2,c
  7675  002054  5C01               	subwf	i1___awmod@dividend,w,c
  7676  002056  B0D8               	btfsc	status,0,c
  7677  002058  D008               	goto	i1l4320
  7678  00205A  6C01               	negf	i1___awmod@dividend,c
  7679  00205C  1E02               	comf	i1___awmod@dividend+1,f,c
  7680  00205E  B0D8               	btfsc	status,0,c
  7681  002060  2A02               	incf	i1___awmod@dividend+1,f,c
  7682  002062  6E05               	movwf	??i1___awmod& (0+255),c
  7683  002064  0E01               	movlw	1
  7684  002066  6E07               	movwf	i1___awmod@sign,c
  7685  002068  5005               	movf	??i1___awmod& (0+255),w,c
  7686  00206A                     i1l4320:
  7687  00206A  5004               	movf	i1___awmod@divisor+1,w,c
  7688  00206C  0A80               	xorlw	128
  7689  00206E  6EF3               	movwf	prodl,c
  7690  002070  0E80               	movlw	128
  7691  002072  5CF3               	subwf	prodl,w,c
  7692  002074  0E00               	movlw	0
  7693  002076  B4D8               	btfsc	status,2,c
  7694  002078  5C03               	subwf	i1___awmod@divisor,w,c
  7695  00207A  B0D8               	btfsc	status,0,c
  7696  00207C  D004               	goto	i1l4324
  7697  00207E  6C03               	negf	i1___awmod@divisor,c
  7698  002080  1E04               	comf	i1___awmod@divisor+1,f,c
  7699  002082  B0D8               	btfsc	status,0,c
  7700  002084  2A04               	incf	i1___awmod@divisor+1,f,c
  7701  002086                     i1l4324:
  7702  002086  5004               	movf	i1___awmod@divisor+1,w,c
  7703  002088  1003               	iorwf	i1___awmod@divisor,w,c
  7704  00208A  B4D8               	btfsc	status,2,c
  7705  00208C  D01A               	goto	i1l4340
  7706  00208E  6E05               	movwf	??i1___awmod& (0+255),c
  7707  002090  0E01               	movlw	1
  7708  002092  6E06               	movwf	i1___awmod@counter,c
  7709  002094  5005               	movf	??i1___awmod& (0+255),w,c
  7710  002096  D004               	goto	i1l4330
  7711  002098                     i1l4328:
  7712  002098  90D8               	bcf	status,0,c
  7713  00209A  3603               	rlcf	i1___awmod@divisor,f,c
  7714  00209C  3604               	rlcf	i1___awmod@divisor+1,f,c
  7715  00209E  2A06               	incf	i1___awmod@counter,f,c
  7716  0020A0                     i1l4330:
  7717  0020A0  AE04               	btfss	i1___awmod@divisor+1,7,c
  7718  0020A2  D7FA               	goto	i1l4328
  7719  0020A4                     i1l4332:
  7720  0020A4  5003               	movf	i1___awmod@divisor,w,c
  7721  0020A6  5C01               	subwf	i1___awmod@dividend,w,c
  7722  0020A8  5004               	movf	i1___awmod@divisor+1,w,c
  7723  0020AA  5802               	subwfb	i1___awmod@dividend+1,w,c
  7724  0020AC  A0D8               	btfss	status,0,c
  7725  0020AE  D004               	goto	i1l4336
  7726  0020B0  5003               	movf	i1___awmod@divisor,w,c
  7727  0020B2  5E01               	subwf	i1___awmod@dividend,f,c
  7728  0020B4  5004               	movf	i1___awmod@divisor+1,w,c
  7729  0020B6  5A02               	subwfb	i1___awmod@dividend+1,f,c
  7730  0020B8                     i1l4336:
  7731  0020B8  90D8               	bcf	status,0,c
  7732  0020BA  3204               	rrcf	i1___awmod@divisor+1,f,c
  7733  0020BC  3203               	rrcf	i1___awmod@divisor,f,c
  7734  0020BE  2E06               	decfsz	i1___awmod@counter,f,c
  7735  0020C0  D7F1               	goto	i1l4332
  7736  0020C2                     i1l4340:
  7737  0020C2  5007               	movf	i1___awmod@sign,w,c
  7738  0020C4  B4D8               	btfsc	status,2,c
  7739  0020C6  D004               	goto	i1l4344
  7740  0020C8  6C01               	negf	i1___awmod@dividend,c
  7741  0020CA  1E02               	comf	i1___awmod@dividend+1,f,c
  7742  0020CC  B0D8               	btfsc	status,0,c
  7743  0020CE  2A02               	incf	i1___awmod@dividend+1,f,c
  7744  0020D0                     i1l4344:
  7745  0020D0  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  7746  0020D4  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  7747  0020D8  0012               	return	
  7748  0020DA                     __end_ofi1___awmod:
  7749                           	opt stack 0
  7750                           pclatu	equ	0xFFB
  7751                           pclath	equ	0xFFA
  7752                           tblptru	equ	0xFF8
  7753                           tblptrh	equ	0xFF7
  7754                           tblptrl	equ	0xFF6
  7755                           tablat	equ	0xFF5
  7756                           prodh	equ	0xFF4
  7757                           prodl	equ	0xFF3
  7758                           intcon	equ	0xFF2
  7759                           intcon2	equ	0xFF1
  7760                           postinc0	equ	0xFEE
  7761                           fsr0h	equ	0xFEA
  7762                           fsr0l	equ	0xFE9
  7763                           wreg	equ	0xFE8
  7764                           indf1	equ	0xFE7
  7765                           postdec1	equ	0xFE5
  7766                           fsr1h	equ	0xFE2
  7767                           fsr1l	equ	0xFE1
  7768                           bsr	equ	0xFE0
  7769                           indf2	equ	0xFDF
  7770                           postinc2	equ	0xFDE
  7771                           postdec2	equ	0xFDD
  7772                           fsr2h	equ	0xFDA
  7773                           fsr2l	equ	0xFD9
  7774                           status	equ	0xFD8
  7775                           
  7776 ;; *************** function i1_SetChanADC *****************
  7777 ;; Defined at:
  7778 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  channel         1    wreg     unsigned char 
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;  channel         1    1[COMRAM] unsigned char 
  7783 ;; Return value:  Size  Location     Type
  7784 ;;		None               void
  7785 ;; Registers used:
  7786 ;;		wreg, status,2, status,0
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7792 ;;      Params:         0       0       0       0       0
  7793 ;;      Locals:         1       0       0       0       0
  7794 ;;      Temps:          1       0       0       0       0
  7795 ;;      Totals:         2       0       0       0       0
  7796 ;;Total ram usage:        2 bytes
  7797 ;; Hardware stack levels used:    1
  7798 ;; Hardware stack levels required when called:    6
  7799 ;; This function calls:
  7800 ;;		Nothing
  7801 ;; This function is called by:
  7802 ;;		_adc_int_handler
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           	psect	text46
  7807  002CFE                     __ptext46:
  7808                           	opt stack 0
  7809  002CFE                     i1_SetChanADC:
  7810                           	opt stack 18
  7811                           
  7812                           ;incstack = 0
  7813                           ;i1SetChanADC@channel stored from wreg
  7814  002CFE  CFE8 F002          	movff	wreg,i1SetChanADC@channel
  7815  002D02  CFC2 F001          	movff	4034,??i1_SetChanADC	;volatile
  7816  002D06  0EC3               	movlw	195
  7817  002D08  1601               	andwf	??i1_SetChanADC,f,c
  7818  002D0A  90D8               	bcf	status,0,c
  7819  002D0C  3002               	rrcf	i1SetChanADC@channel,w,c
  7820  002D0E  0B3C               	andlw	60
  7821  002D10  1001               	iorwf	??i1_SetChanADC,w,c
  7822  002D12  6EC2               	movwf	4034,c	;volatile
  7823  002D14  0012               	return	
  7824  002D16                     __end_ofi1_SetChanADC:
  7825                           	opt stack 0
  7826                           pclatu	equ	0xFFB
  7827                           pclath	equ	0xFFA
  7828                           tblptru	equ	0xFF8
  7829                           tblptrh	equ	0xFF7
  7830                           tblptrl	equ	0xFF6
  7831                           tablat	equ	0xFF5
  7832                           prodh	equ	0xFF4
  7833                           prodl	equ	0xFF3
  7834                           intcon	equ	0xFF2
  7835                           intcon2	equ	0xFF1
  7836                           postinc0	equ	0xFEE
  7837                           fsr0h	equ	0xFEA
  7838                           fsr0l	equ	0xFE9
  7839                           wreg	equ	0xFE8
  7840                           indf1	equ	0xFE7
  7841                           postdec1	equ	0xFE5
  7842                           fsr1h	equ	0xFE2
  7843                           fsr1l	equ	0xFE1
  7844                           bsr	equ	0xFE0
  7845                           indf2	equ	0xFDF
  7846                           postinc2	equ	0xFDE
  7847                           postdec2	equ	0xFDD
  7848                           fsr2h	equ	0xFDA
  7849                           fsr2l	equ	0xFD9
  7850                           status	equ	0xFD8
  7851                           
  7852 ;; *************** function ___fttol *****************
  7853 ;; Defined at:
  7854 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;  f1              3    8[COMRAM] float 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;  lval            4   18[COMRAM] unsigned long 
  7859 ;;  exp1            1   22[COMRAM] unsigned char 
  7860 ;;  sign1           1   17[COMRAM] unsigned char 
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  4    8[COMRAM] long 
  7863 ;; Registers used:
  7864 ;;		wreg, status,2, status,0
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7870 ;;      Params:         4       0       0       0       0
  7871 ;;      Locals:         6       0       0       0       0
  7872 ;;      Temps:          5       0       0       0       0
  7873 ;;      Totals:        15       0       0       0       0
  7874 ;;Total ram usage:       15 bytes
  7875 ;; Hardware stack levels used:    1
  7876 ;; Hardware stack levels required when called:    6
  7877 ;; This function calls:
  7878 ;;		Nothing
  7879 ;; This function is called by:
  7880 ;;		_adc_int_handler
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text47
  7885  0018B6                     __ptext47:
  7886                           	opt stack 0
  7887  0018B6                     ___fttol:
  7888                           	opt stack 18
  7889                           
  7890                           ;incstack = 0
  7891  0018B6  C00B  F00D         	movff	___fttol@f1+2,??___fttol
  7892  0018BA  6A0E               	clrf	(??___fttol+1)& (0+255),c
  7893  0018BC  6A0F               	clrf	(??___fttol+2)& (0+255),c
  7894  0018BE  340A               	rlcf	___fttol@f1+1,w,c
  7895  0018C0  360D               	rlcf	??___fttol& (0+255),f,c
  7896  0018C2  E301               	bnc	u384_21
  7897  0018C4  800E               	bsf	(??___fttol+1)& (0+255),0,c
  7898  0018C6                     u384_21:
  7899  0018C6  500D               	movf	??___fttol,w,c
  7900  0018C8  6E17               	movwf	___fttol@exp1,c
  7901  0018CA  6617               	tstfsz	___fttol@exp1& (0+255),c
  7902  0018CC  D009               	goto	i1l4498
  7903  0018CE  0E00               	movlw	0
  7904  0018D0  6E09               	movwf	?___fttol,c
  7905  0018D2  0E00               	movlw	0
  7906  0018D4  6E0A               	movwf	?___fttol+1,c
  7907  0018D6  0E00               	movlw	0
  7908  0018D8  6E0B               	movwf	?___fttol+2,c
  7909  0018DA  0E00               	movlw	0
  7910  0018DC  6E0C               	movwf	?___fttol+3,c
  7911  0018DE  0012               	return	
  7912  0018E0                     i1l4498:
  7913  0018E0  0E17               	movlw	23
  7914  0018E2  6E0D               	movwf	??___fttol& (0+255),c
  7915  0018E4  C009  F00E         	movff	___fttol@f1,??___fttol+1
  7916  0018E8  C00A  F00F         	movff	___fttol@f1+1,??___fttol+2
  7917  0018EC  C00B  F010         	movff	___fttol@f1+2,??___fttol+3
  7918  0018F0  280D               	incf	??___fttol,w,c
  7919  0018F2  6E11               	movwf	(??___fttol+4)& (0+255),c
  7920  0018F4  D004               	goto	i1u386_20
  7921  0018F6                     i1u386_25:
  7922  0018F6  90D8               	bcf	status,0,c
  7923  0018F8  3210               	rrcf	??___fttol+3,f,c
  7924  0018FA  320F               	rrcf	??___fttol+2,f,c
  7925  0018FC  320E               	rrcf	??___fttol+1,f,c
  7926  0018FE                     i1u386_20:
  7927  0018FE  2E11               	decfsz	(??___fttol+4)& (0+255),f,c
  7928  001900  D7FA               	goto	i1u386_25
  7929  001902  500E               	movf	??___fttol+1,w,c
  7930  001904  6E12               	movwf	___fttol@sign1,c
  7931  001906  8E0A               	bsf	___fttol@f1+1,7,c
  7932  001908  0EFF               	movlw	255
  7933  00190A  1609               	andwf	___fttol@f1,f,c
  7934  00190C  0EFF               	movlw	255
  7935  00190E  160A               	andwf	___fttol@f1+1,f,c
  7936  001910  0E00               	movlw	0
  7937  001912  160B               	andwf	___fttol@f1+2,f,c
  7938  001914  5009               	movf	___fttol@f1,w,c
  7939  001916  6E13               	movwf	___fttol@lval,c
  7940  001918  500A               	movf	___fttol@f1+1,w,c
  7941  00191A  6E14               	movwf	___fttol@lval+1,c
  7942  00191C  500B               	movf	___fttol@f1+2,w,c
  7943  00191E  6E15               	movwf	___fttol@lval+2,c
  7944  001920  6A16               	clrf	___fttol@lval+3,c
  7945  001922  0E8E               	movlw	142
  7946  001924  5E17               	subwf	___fttol@exp1,f,c
  7947  001926  AE17               	btfss	___fttol@exp1,7,c
  7948  001928  D019               	goto	i1l4520
  7949  00192A  5017               	movf	___fttol@exp1,w,c
  7950  00192C  0A80               	xorlw	128
  7951  00192E  6E0D               	movwf	??___fttol& (0+255),c
  7952  001930  0EF1               	movlw	241
  7953  001932  0A80               	xorlw	128
  7954  001934  5C0D               	subwf	??___fttol,w,c
  7955  001936  B0D8               	btfsc	status,0,c
  7956  001938  D009               	goto	i1l4516
  7957  00193A  0E00               	movlw	0
  7958  00193C  6E09               	movwf	?___fttol,c
  7959  00193E  0E00               	movlw	0
  7960  001940  6E0A               	movwf	?___fttol+1,c
  7961  001942  0E00               	movlw	0
  7962  001944  6E0B               	movwf	?___fttol+2,c
  7963  001946  0E00               	movlw	0
  7964  001948  6E0C               	movwf	?___fttol+3,c
  7965  00194A  0012               	return	
  7966  00194C                     i1l4516:
  7967  00194C  90D8               	bcf	status,0,c
  7968  00194E  3216               	rrcf	___fttol@lval+3,f,c
  7969  001950  3215               	rrcf	___fttol@lval+2,f,c
  7970  001952  3214               	rrcf	___fttol@lval+1,f,c
  7971  001954  3213               	rrcf	___fttol@lval,f,c
  7972  001956  3E17               	incfsz	___fttol@exp1,f,c
  7973  001958  D7F9               	goto	i1l4516
  7974  00195A  D014               	goto	i1l4530
  7975  00195C                     i1l4520:
  7976  00195C  0E17               	movlw	23
  7977  00195E  6417               	cpfsgt	___fttol@exp1,c
  7978  001960  D00F               	goto	i1l4528
  7979  001962  0E00               	movlw	0
  7980  001964  6E09               	movwf	?___fttol,c
  7981  001966  0E00               	movlw	0
  7982  001968  6E0A               	movwf	?___fttol+1,c
  7983  00196A  0E00               	movlw	0
  7984  00196C  6E0B               	movwf	?___fttol+2,c
  7985  00196E  0E00               	movlw	0
  7986  001970  6E0C               	movwf	?___fttol+3,c
  7987  001972  0012               	return	
  7988  001974                     i1l4526:
  7989  001974  90D8               	bcf	status,0,c
  7990  001976  3613               	rlcf	___fttol@lval,f,c
  7991  001978  3614               	rlcf	___fttol@lval+1,f,c
  7992  00197A  3615               	rlcf	___fttol@lval+2,f,c
  7993  00197C  3616               	rlcf	___fttol@lval+3,f,c
  7994  00197E  0617               	decf	___fttol@exp1,f,c
  7995  001980                     i1l4528:
  7996  001980  6617               	tstfsz	___fttol@exp1,c
  7997  001982  D7F8               	goto	i1l4526
  7998  001984                     i1l4530:
  7999  001984  5012               	movf	___fttol@sign1,w,c
  8000  001986  B4D8               	btfsc	status,2,c
  8001  001988  D008               	goto	i1l4534
  8002  00198A  1E16               	comf	___fttol@lval+3,f,c
  8003  00198C  1E15               	comf	___fttol@lval+2,f,c
  8004  00198E  1E14               	comf	___fttol@lval+1,f,c
  8005  001990  6C13               	negf	___fttol@lval,c
  8006  001992  0E00               	movlw	0
  8007  001994  2214               	addwfc	___fttol@lval+1,f,c
  8008  001996  2215               	addwfc	___fttol@lval+2,f,c
  8009  001998  2216               	addwfc	___fttol@lval+3,f,c
  8010  00199A                     i1l4534:
  8011  00199A  C013  F009         	movff	___fttol@lval,?___fttol
  8012  00199E  C014  F00A         	movff	___fttol@lval+1,?___fttol+1
  8013  0019A2  C015  F00B         	movff	___fttol@lval+2,?___fttol+2
  8014  0019A6  C016  F00C         	movff	___fttol@lval+3,?___fttol+3
  8015  0019AA  0012               	return	
  8016  0019AC                     __end_of___fttol:
  8017                           	opt stack 0
  8018                           pclatu	equ	0xFFB
  8019                           pclath	equ	0xFFA
  8020                           tblptru	equ	0xFF8
  8021                           tblptrh	equ	0xFF7
  8022                           tblptrl	equ	0xFF6
  8023                           tablat	equ	0xFF5
  8024                           prodh	equ	0xFF4
  8025                           prodl	equ	0xFF3
  8026                           intcon	equ	0xFF2
  8027                           intcon2	equ	0xFF1
  8028                           postinc0	equ	0xFEE
  8029                           fsr0h	equ	0xFEA
  8030                           fsr0l	equ	0xFE9
  8031                           wreg	equ	0xFE8
  8032                           indf1	equ	0xFE7
  8033                           postdec1	equ	0xFE5
  8034                           fsr1h	equ	0xFE2
  8035                           fsr1l	equ	0xFE1
  8036                           bsr	equ	0xFE0
  8037                           indf2	equ	0xFDF
  8038                           postinc2	equ	0xFDE
  8039                           postdec2	equ	0xFDD
  8040                           fsr2h	equ	0xFDA
  8041                           fsr2l	equ	0xFD9
  8042                           status	equ	0xFD8
  8043                           
  8044 ;; *************** function ___ftmul *****************
  8045 ;; Defined at:
  8046 ;;		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftmul.c"
  8047 ;; Parameters:    Size  Location     Type
  8048 ;;  f1              3   13[COMRAM] float 
  8049 ;;  f2              3   16[COMRAM] float 
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;  f3_as_produc    3   23[COMRAM] unsigned um
  8052 ;;  sign            1   27[COMRAM] unsigned char 
  8053 ;;  cntr            1   26[COMRAM] unsigned char 
  8054 ;;  exp             1   22[COMRAM] unsigned char 
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  3   13[COMRAM] float 
  8057 ;; Registers used:
  8058 ;;		wreg, status,2, status,0, cstack
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8064 ;;      Params:         6       0       0       0       0
  8065 ;;      Locals:         6       0       0       0       0
  8066 ;;      Temps:          3       0       0       0       0
  8067 ;;      Totals:        15       0       0       0       0
  8068 ;;Total ram usage:       15 bytes
  8069 ;; Hardware stack levels used:    1
  8070 ;; Hardware stack levels required when called:    7
  8071 ;; This function calls:
  8072 ;;		___ftpack
  8073 ;; This function is called by:
  8074 ;;		_adc_int_handler
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text48
  8079  0017BE                     __ptext48:
  8080                           	opt stack 0
  8081  0017BE                     ___ftmul:
  8082                           	opt stack 17
  8083                           
  8084                           ;incstack = 0
  8085  0017BE  C010  F014         	movff	___ftmul@f1+2,??___ftmul
  8086  0017C2  6A15               	clrf	(??___ftmul+1)& (0+255),c
  8087  0017C4  6A16               	clrf	(??___ftmul+2)& (0+255),c
  8088  0017C6  340F               	rlcf	___ftmul@f1+1,w,c
  8089  0017C8  3614               	rlcf	??___ftmul& (0+255),f,c
  8090  0017CA  E301               	bnc	u402_21
  8091  0017CC  8015               	bsf	(??___ftmul+1)& (0+255),0,c
  8092  0017CE                     u402_21:
  8093  0017CE  5014               	movf	??___ftmul,w,c
  8094  0017D0  6E17               	movwf	___ftmul@exp,c
  8095  0017D2  6617               	tstfsz	___ftmul@exp& (0+255),c
  8096  0017D4  D007               	goto	i1l4644
  8097  0017D6  0E00               	movlw	0
  8098  0017D8  6E0E               	movwf	?___ftmul,c
  8099  0017DA  0E00               	movlw	0
  8100  0017DC  6E0F               	movwf	?___ftmul+1,c
  8101  0017DE  0E00               	movlw	0
  8102  0017E0  6E10               	movwf	?___ftmul+2,c
  8103  0017E2  0012               	return	
  8104  0017E4                     i1l4644:
  8105  0017E4  C013  F014         	movff	___ftmul@f2+2,??___ftmul
  8106  0017E8  6A15               	clrf	(??___ftmul+1)& (0+255),c
  8107  0017EA  6A16               	clrf	(??___ftmul+2)& (0+255),c
  8108  0017EC  3412               	rlcf	___ftmul@f2+1,w,c
  8109  0017EE  3614               	rlcf	??___ftmul& (0+255),f,c
  8110  0017F0  E301               	bnc	u404_21
  8111  0017F2  8015               	bsf	(??___ftmul+1)& (0+255),0,c
  8112  0017F4                     u404_21:
  8113  0017F4  5014               	movf	??___ftmul,w,c
  8114  0017F6  6E1C               	movwf	___ftmul@sign,c
  8115  0017F8  661C               	tstfsz	___ftmul@sign& (0+255),c
  8116  0017FA  D007               	goto	i1l4650
  8117  0017FC  0E00               	movlw	0
  8118  0017FE  6E0E               	movwf	?___ftmul,c
  8119  001800  0E00               	movlw	0
  8120  001802  6E0F               	movwf	?___ftmul+1,c
  8121  001804  0E00               	movlw	0
  8122  001806  6E10               	movwf	?___ftmul+2,c
  8123  001808  0012               	return	
  8124  00180A                     i1l4650:
  8125  00180A  501C               	movf	___ftmul@sign,w,c
  8126  00180C  0F7B               	addlw	123
  8127  00180E  2617               	addwf	___ftmul@exp,f,c
  8128  001810  C010  F01C         	movff	___ftmul@f1+2,___ftmul@sign
  8129  001814  5013               	movf	___ftmul@f2+2,w,c
  8130  001816  1A1C               	xorwf	___ftmul@sign,f,c
  8131  001818  0E80               	movlw	128
  8132  00181A  161C               	andwf	___ftmul@sign,f,c
  8133  00181C  8E0F               	bsf	___ftmul@f1+1,7,c
  8134  00181E  8E12               	bsf	___ftmul@f2+1,7,c
  8135  001820  0EFF               	movlw	255
  8136  001822  1611               	andwf	___ftmul@f2,f,c
  8137  001824  0EFF               	movlw	255
  8138  001826  1612               	andwf	___ftmul@f2+1,f,c
  8139  001828  0E00               	movlw	0
  8140  00182A  1613               	andwf	___ftmul@f2+2,f,c
  8141  00182C  0E00               	movlw	0
  8142  00182E  6E18               	movwf	___ftmul@f3_as_product,c
  8143  001830  0E00               	movlw	0
  8144  001832  6E19               	movwf	___ftmul@f3_as_product+1,c
  8145  001834  0E00               	movlw	0
  8146  001836  6E1A               	movwf	___ftmul@f3_as_product+2,c
  8147  001838  6E14               	movwf	??___ftmul& (0+255),c
  8148  00183A  0E07               	movlw	7
  8149  00183C  6E1B               	movwf	___ftmul@cntr,c
  8150  00183E  5014               	movf	??___ftmul& (0+255),w,c
  8151  001840                     i1l4664:
  8152  001840  A00E               	btfss	___ftmul@f1,0,c
  8153  001842  D006               	goto	i1l4668
  8154  001844  5011               	movf	___ftmul@f2,w,c
  8155  001846  2618               	addwf	___ftmul@f3_as_product,f,c
  8156  001848  5012               	movf	___ftmul@f2+1,w,c
  8157  00184A  2219               	addwfc	___ftmul@f3_as_product+1,f,c
  8158  00184C  5013               	movf	___ftmul@f2+2,w,c
  8159  00184E  221A               	addwfc	___ftmul@f3_as_product+2,f,c
  8160  001850                     i1l4668:
  8161  001850  90D8               	bcf	status,0,c
  8162  001852  3210               	rrcf	___ftmul@f1+2,f,c
  8163  001854  320F               	rrcf	___ftmul@f1+1,f,c
  8164  001856  320E               	rrcf	___ftmul@f1,f,c
  8165  001858  90D8               	bcf	status,0,c
  8166  00185A  3611               	rlcf	___ftmul@f2,f,c
  8167  00185C  3612               	rlcf	___ftmul@f2+1,f,c
  8168  00185E  3613               	rlcf	___ftmul@f2+2,f,c
  8169  001860  2E1B               	decfsz	___ftmul@cntr,f,c
  8170  001862  D7EE               	goto	i1l4664
  8171  001864  6E14               	movwf	??___ftmul& (0+255),c
  8172  001866  0E09               	movlw	9
  8173  001868  6E1B               	movwf	___ftmul@cntr,c
  8174  00186A  5014               	movf	??___ftmul& (0+255),w,c
  8175  00186C                     i1l4674:
  8176  00186C  A00E               	btfss	___ftmul@f1,0,c
  8177  00186E  D006               	goto	i1l4678
  8178  001870  5011               	movf	___ftmul@f2,w,c
  8179  001872  2618               	addwf	___ftmul@f3_as_product,f,c
  8180  001874  5012               	movf	___ftmul@f2+1,w,c
  8181  001876  2219               	addwfc	___ftmul@f3_as_product+1,f,c
  8182  001878  5013               	movf	___ftmul@f2+2,w,c
  8183  00187A  221A               	addwfc	___ftmul@f3_as_product+2,f,c
  8184  00187C                     i1l4678:
  8185  00187C  90D8               	bcf	status,0,c
  8186  00187E  3210               	rrcf	___ftmul@f1+2,f,c
  8187  001880  320F               	rrcf	___ftmul@f1+1,f,c
  8188  001882  320E               	rrcf	___ftmul@f1,f,c
  8189  001884  90D8               	bcf	status,0,c
  8190  001886  321A               	rrcf	___ftmul@f3_as_product+2,f,c
  8191  001888  3219               	rrcf	___ftmul@f3_as_product+1,f,c
  8192  00188A  3218               	rrcf	___ftmul@f3_as_product,f,c
  8193  00188C  2E1B               	decfsz	___ftmul@cntr,f,c
  8194  00188E  D7EE               	goto	i1l4674
  8195  001890  C018  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  8196  001894  C019  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8197  001898  C01A  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8198  00189C  C017  F004         	movff	___ftmul@exp,___ftpack@exp
  8199  0018A0  C01C  F005         	movff	___ftmul@sign,___ftpack@sign
  8200  0018A4  EC7D  F00F         	call	___ftpack	;wreg free
  8201  0018A8  C001  F00E         	movff	?___ftpack,?___ftmul
  8202  0018AC  C002  F00F         	movff	?___ftpack+1,?___ftmul+1
  8203  0018B0  C003  F010         	movff	?___ftpack+2,?___ftmul+2
  8204  0018B4  0012               	return	
  8205  0018B6                     __end_of___ftmul:
  8206                           	opt stack 0
  8207                           pclatu	equ	0xFFB
  8208                           pclath	equ	0xFFA
  8209                           tblptru	equ	0xFF8
  8210                           tblptrh	equ	0xFF7
  8211                           tblptrl	equ	0xFF6
  8212                           tablat	equ	0xFF5
  8213                           prodh	equ	0xFF4
  8214                           prodl	equ	0xFF3
  8215                           intcon	equ	0xFF2
  8216                           intcon2	equ	0xFF1
  8217                           postinc0	equ	0xFEE
  8218                           fsr0h	equ	0xFEA
  8219                           fsr0l	equ	0xFE9
  8220                           wreg	equ	0xFE8
  8221                           indf1	equ	0xFE7
  8222                           postdec1	equ	0xFE5
  8223                           fsr1h	equ	0xFE2
  8224                           fsr1l	equ	0xFE1
  8225                           bsr	equ	0xFE0
  8226                           indf2	equ	0xFDF
  8227                           postinc2	equ	0xFDE
  8228                           postdec2	equ	0xFDD
  8229                           fsr2h	equ	0xFDA
  8230                           fsr2l	equ	0xFD9
  8231                           status	equ	0xFD8
  8232                           
  8233 ;; *************** function ___ftge *****************
  8234 ;; Defined at:
  8235 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftge.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  ff1             3    0[COMRAM] float 
  8238 ;;  ff2             3    3[COMRAM] float 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;		None
  8241 ;; Return value:  Size  Location     Type
  8242 ;;		None               void
  8243 ;; Registers used:
  8244 ;;		wreg, status,2, status,0
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8250 ;;      Params:         6       0       0       0       0
  8251 ;;      Locals:         0       0       0       0       0
  8252 ;;      Temps:          3       0       0       0       0
  8253 ;;      Totals:         9       0       0       0       0
  8254 ;;Total ram usage:        9 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; Hardware stack levels required when called:    6
  8257 ;; This function calls:
  8258 ;;		Nothing
  8259 ;; This function is called by:
  8260 ;;		_adc_int_handler
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text49
  8265  0021FE                     __ptext49:
  8266                           	opt stack 0
  8267  0021FE                     ___ftge:
  8268                           	opt stack 18
  8269                           
  8270                           ;incstack = 0
  8271  0021FE  AE03               	btfss	___ftge@ff1+2,7,c
  8272  002200  D016               	goto	i1l4154
  8273  002202  C001  F007         	movff	___ftge@ff1,??___ftge
  8274  002206  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  8275  00220A  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  8276  00220E  1E07               	comf	??___ftge,f,c
  8277  002210  1E08               	comf	??___ftge+1,f,c
  8278  002212  1E09               	comf	??___ftge+2,f,c
  8279  002214  2A07               	incf	??___ftge,f,c
  8280  002216  0E00               	movlw	0
  8281  002218  2208               	addwfc	??___ftge+1,f,c
  8282  00221A  2209               	addwfc	??___ftge+2,f,c
  8283  00221C  0E00               	movlw	0
  8284  00221E  2407               	addwf	??___ftge,w,c
  8285  002220  6E01               	movwf	___ftge@ff1,c
  8286  002222  0E00               	movlw	0
  8287  002224  2008               	addwfc	??___ftge+1,w,c
  8288  002226  6E02               	movwf	___ftge@ff1+1,c
  8289  002228  0E80               	movlw	128
  8290  00222A  2009               	addwfc	??___ftge+2,w,c
  8291  00222C  6E03               	movwf	___ftge@ff1+2,c
  8292  00222E                     i1l4154:
  8293  00222E  AE06               	btfss	___ftge@ff2+2,7,c
  8294  002230  D016               	goto	i1l4158
  8295  002232  C004  F007         	movff	___ftge@ff2,??___ftge
  8296  002236  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  8297  00223A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  8298  00223E  1E07               	comf	??___ftge,f,c
  8299  002240  1E08               	comf	??___ftge+1,f,c
  8300  002242  1E09               	comf	??___ftge+2,f,c
  8301  002244  2A07               	incf	??___ftge,f,c
  8302  002246  0E00               	movlw	0
  8303  002248  2208               	addwfc	??___ftge+1,f,c
  8304  00224A  2209               	addwfc	??___ftge+2,f,c
  8305  00224C  0E00               	movlw	0
  8306  00224E  2407               	addwf	??___ftge,w,c
  8307  002250  6E04               	movwf	___ftge@ff2,c
  8308  002252  0E00               	movlw	0
  8309  002254  2008               	addwfc	??___ftge+1,w,c
  8310  002256  6E05               	movwf	___ftge@ff2+1,c
  8311  002258  0E80               	movlw	128
  8312  00225A  2009               	addwfc	??___ftge+2,w,c
  8313  00225C  6E06               	movwf	___ftge@ff2+2,c
  8314  00225E                     i1l4158:
  8315  00225E  0E00               	movlw	0
  8316  002260  1A01               	xorwf	___ftge@ff1,f,c
  8317  002262  0E00               	movlw	0
  8318  002264  1A02               	xorwf	___ftge@ff1+1,f,c
  8319  002266  0E80               	movlw	128
  8320  002268  1A03               	xorwf	___ftge@ff1+2,f,c
  8321  00226A  0E00               	movlw	0
  8322  00226C  1A04               	xorwf	___ftge@ff2,f,c
  8323  00226E  0E00               	movlw	0
  8324  002270  1A05               	xorwf	___ftge@ff2+1,f,c
  8325  002272  0E80               	movlw	128
  8326  002274  1A06               	xorwf	___ftge@ff2+2,f,c
  8327  002276  5004               	movf	___ftge@ff2,w,c
  8328  002278  5C01               	subwf	___ftge@ff1,w,c
  8329  00227A  5005               	movf	___ftge@ff2+1,w,c
  8330  00227C  5802               	subwfb	___ftge@ff1+1,w,c
  8331  00227E  5006               	movf	___ftge@ff2+2,w,c
  8332  002280  5803               	subwfb	___ftge@ff1+2,w,c
  8333  002282  B0D8               	btfsc	status,0,c
  8334  002284  D002               	goto	i1l4164
  8335  002286  90D8               	bcf	status,0,c
  8336  002288  0012               	return	
  8337  00228A                     i1l4164:
  8338  00228A  80D8               	bsf	status,0,c
  8339  00228C  0012               	return	
  8340  00228E                     __end_of___ftge:
  8341                           	opt stack 0
  8342                           pclatu	equ	0xFFB
  8343                           pclath	equ	0xFFA
  8344                           tblptru	equ	0xFF8
  8345                           tblptrh	equ	0xFF7
  8346                           tblptrl	equ	0xFF6
  8347                           tablat	equ	0xFF5
  8348                           prodh	equ	0xFF4
  8349                           prodl	equ	0xFF3
  8350                           intcon	equ	0xFF2
  8351                           intcon2	equ	0xFF1
  8352                           postinc0	equ	0xFEE
  8353                           fsr0h	equ	0xFEA
  8354                           fsr0l	equ	0xFE9
  8355                           wreg	equ	0xFE8
  8356                           indf1	equ	0xFE7
  8357                           postdec1	equ	0xFE5
  8358                           fsr1h	equ	0xFE2
  8359                           fsr1l	equ	0xFE1
  8360                           bsr	equ	0xFE0
  8361                           indf2	equ	0xFDF
  8362                           postinc2	equ	0xFDE
  8363                           postdec2	equ	0xFDD
  8364                           fsr2h	equ	0xFDA
  8365                           fsr2l	equ	0xFD9
  8366                           status	equ	0xFD8
  8367                           
  8368 ;; *************** function ___ftdiv *****************
  8369 ;; Defined at:
  8370 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftdiv.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;  f1              3   35[COMRAM] float 
  8373 ;;  f2              3   38[COMRAM] float 
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;  f3              3   45[COMRAM] float 
  8376 ;;  sign            1   49[COMRAM] unsigned char 
  8377 ;;  exp             1   48[COMRAM] unsigned char 
  8378 ;;  cntr            1   44[COMRAM] unsigned char 
  8379 ;; Return value:  Size  Location     Type
  8380 ;;                  3   35[COMRAM] float 
  8381 ;; Registers used:
  8382 ;;		wreg, status,2, status,0, cstack
  8383 ;; Tracked objects:
  8384 ;;		On entry : 0/0
  8385 ;;		On exit  : 0/0
  8386 ;;		Unchanged: 0/0
  8387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8388 ;;      Params:         6       0       0       0       0
  8389 ;;      Locals:         6       0       0       0       0
  8390 ;;      Temps:          3       0       0       0       0
  8391 ;;      Totals:        15       0       0       0       0
  8392 ;;Total ram usage:       15 bytes
  8393 ;; Hardware stack levels used:    1
  8394 ;; Hardware stack levels required when called:    7
  8395 ;; This function calls:
  8396 ;;		___ftpack
  8397 ;; This function is called by:
  8398 ;;		_adc_int_handler
  8399 ;; This function uses a non-reentrant model
  8400 ;;
  8401                           
  8402                           	psect	text50
  8403  0019AC                     __ptext50:
  8404                           	opt stack 0
  8405  0019AC                     ___ftdiv:
  8406                           	opt stack 17
  8407                           
  8408                           ;incstack = 0
  8409  0019AC  C026  F02A         	movff	___ftdiv@f1+2,??___ftdiv
  8410  0019B0  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  8411  0019B2  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  8412  0019B4  3425               	rlcf	___ftdiv@f1+1,w,c
  8413  0019B6  362A               	rlcf	??___ftdiv& (0+255),f,c
  8414  0019B8  E301               	bnc	u397_21
  8415  0019BA  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  8416  0019BC                     u397_21:
  8417  0019BC  502A               	movf	??___ftdiv,w,c
  8418  0019BE  6E31               	movwf	___ftdiv@exp,c
  8419  0019C0  6631               	tstfsz	___ftdiv@exp& (0+255),c
  8420  0019C2  D007               	goto	i1l4600
  8421  0019C4  0E00               	movlw	0
  8422  0019C6  6E24               	movwf	?___ftdiv,c
  8423  0019C8  0E00               	movlw	0
  8424  0019CA  6E25               	movwf	?___ftdiv+1,c
  8425  0019CC  0E00               	movlw	0
  8426  0019CE  6E26               	movwf	?___ftdiv+2,c
  8427  0019D0  0012               	return	
  8428  0019D2                     i1l4600:
  8429  0019D2  C029  F02A         	movff	___ftdiv@f2+2,??___ftdiv
  8430  0019D6  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  8431  0019D8  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  8432  0019DA  3428               	rlcf	___ftdiv@f2+1,w,c
  8433  0019DC  362A               	rlcf	??___ftdiv& (0+255),f,c
  8434  0019DE  E301               	bnc	u399_21
  8435  0019E0  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  8436  0019E2                     u399_21:
  8437  0019E2  502A               	movf	??___ftdiv,w,c
  8438  0019E4  6E32               	movwf	___ftdiv@sign,c
  8439  0019E6  6632               	tstfsz	___ftdiv@sign& (0+255),c
  8440  0019E8  D007               	goto	i1l4606
  8441  0019EA  0E00               	movlw	0
  8442  0019EC  6E24               	movwf	?___ftdiv,c
  8443  0019EE  0E00               	movlw	0
  8444  0019F0  6E25               	movwf	?___ftdiv+1,c
  8445  0019F2  0E00               	movlw	0
  8446  0019F4  6E26               	movwf	?___ftdiv+2,c
  8447  0019F6  0012               	return	
  8448  0019F8                     i1l4606:
  8449  0019F8  0E00               	movlw	0
  8450  0019FA  6E2E               	movwf	___ftdiv@f3,c
  8451  0019FC  0E00               	movlw	0
  8452  0019FE  6E2F               	movwf	___ftdiv@f3+1,c
  8453  001A00  0E00               	movlw	0
  8454  001A02  6E30               	movwf	___ftdiv@f3+2,c
  8455  001A04  5032               	movf	___ftdiv@sign,w,c
  8456  001A06  0F89               	addlw	137
  8457  001A08  5E31               	subwf	___ftdiv@exp,f,c
  8458  001A0A  C026  F032         	movff	___ftdiv@f1+2,___ftdiv@sign
  8459  001A0E  5029               	movf	___ftdiv@f2+2,w,c
  8460  001A10  1A32               	xorwf	___ftdiv@sign,f,c
  8461  001A12  0E80               	movlw	128
  8462  001A14  1632               	andwf	___ftdiv@sign,f,c
  8463  001A16  8E25               	bsf	___ftdiv@f1+1,7,c
  8464  001A18  0EFF               	movlw	255
  8465  001A1A  1624               	andwf	___ftdiv@f1,f,c
  8466  001A1C  0EFF               	movlw	255
  8467  001A1E  1625               	andwf	___ftdiv@f1+1,f,c
  8468  001A20  0E00               	movlw	0
  8469  001A22  1626               	andwf	___ftdiv@f1+2,f,c
  8470  001A24  8E28               	bsf	___ftdiv@f2+1,7,c
  8471  001A26  0EFF               	movlw	255
  8472  001A28  1627               	andwf	___ftdiv@f2,f,c
  8473  001A2A  0EFF               	movlw	255
  8474  001A2C  1628               	andwf	___ftdiv@f2+1,f,c
  8475  001A2E  0E00               	movlw	0
  8476  001A30  1629               	andwf	___ftdiv@f2+2,f,c
  8477  001A32  6E2A               	movwf	??___ftdiv& (0+255),c
  8478  001A34  0E18               	movlw	24
  8479  001A36  6E2D               	movwf	___ftdiv@cntr,c
  8480  001A38  502A               	movf	??___ftdiv& (0+255),w,c
  8481  001A3A                     i1l1065:
  8482  001A3A  90D8               	bcf	status,0,c
  8483  001A3C  362E               	rlcf	___ftdiv@f3,f,c
  8484  001A3E  362F               	rlcf	___ftdiv@f3+1,f,c
  8485  001A40  3630               	rlcf	___ftdiv@f3+2,f,c
  8486  001A42  5027               	movf	___ftdiv@f2,w,c
  8487  001A44  5C24               	subwf	___ftdiv@f1,w,c
  8488  001A46  5028               	movf	___ftdiv@f2+1,w,c
  8489  001A48  5825               	subwfb	___ftdiv@f1+1,w,c
  8490  001A4A  5029               	movf	___ftdiv@f2+2,w,c
  8491  001A4C  5826               	subwfb	___ftdiv@f1+2,w,c
  8492  001A4E  A0D8               	btfss	status,0,c
  8493  001A50  D007               	goto	i1l1066
  8494  001A52  5027               	movf	___ftdiv@f2,w,c
  8495  001A54  5E24               	subwf	___ftdiv@f1,f,c
  8496  001A56  5028               	movf	___ftdiv@f2+1,w,c
  8497  001A58  5A25               	subwfb	___ftdiv@f1+1,f,c
  8498  001A5A  5029               	movf	___ftdiv@f2+2,w,c
  8499  001A5C  5A26               	subwfb	___ftdiv@f1+2,f,c
  8500  001A5E  802E               	bsf	___ftdiv@f3,0,c
  8501  001A60                     i1l1066:
  8502  001A60  90D8               	bcf	status,0,c
  8503  001A62  3624               	rlcf	___ftdiv@f1,f,c
  8504  001A64  3625               	rlcf	___ftdiv@f1+1,f,c
  8505  001A66  3626               	rlcf	___ftdiv@f1+2,f,c
  8506  001A68  2E2D               	decfsz	___ftdiv@cntr,f,c
  8507  001A6A  D7E7               	goto	i1l1065
  8508  001A6C  C02E  F001         	movff	___ftdiv@f3,___ftpack@arg
  8509  001A70  C02F  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8510  001A74  C030  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8511  001A78  C031  F004         	movff	___ftdiv@exp,___ftpack@exp
  8512  001A7C  C032  F005         	movff	___ftdiv@sign,___ftpack@sign
  8513  001A80  EC7D  F00F         	call	___ftpack	;wreg free
  8514  001A84  C001  F024         	movff	?___ftpack,?___ftdiv
  8515  001A88  C002  F025         	movff	?___ftpack+1,?___ftdiv+1
  8516  001A8C  C003  F026         	movff	?___ftpack+2,?___ftdiv+2
  8517  001A90  0012               	return	
  8518  001A92                     __end_of___ftdiv:
  8519                           	opt stack 0
  8520                           pclatu	equ	0xFFB
  8521                           pclath	equ	0xFFA
  8522                           tblptru	equ	0xFF8
  8523                           tblptrh	equ	0xFF7
  8524                           tblptrl	equ	0xFF6
  8525                           tablat	equ	0xFF5
  8526                           prodh	equ	0xFF4
  8527                           prodl	equ	0xFF3
  8528                           intcon	equ	0xFF2
  8529                           intcon2	equ	0xFF1
  8530                           postinc0	equ	0xFEE
  8531                           fsr0h	equ	0xFEA
  8532                           fsr0l	equ	0xFE9
  8533                           wreg	equ	0xFE8
  8534                           indf1	equ	0xFE7
  8535                           postdec1	equ	0xFE5
  8536                           fsr1h	equ	0xFE2
  8537                           fsr1l	equ	0xFE1
  8538                           bsr	equ	0xFE0
  8539                           indf2	equ	0xFDF
  8540                           postinc2	equ	0xFDE
  8541                           postdec2	equ	0xFDD
  8542                           fsr2h	equ	0xFDA
  8543                           fsr2l	equ	0xFD9
  8544                           status	equ	0xFD8
  8545                           
  8546 ;; *************** function ___ftadd *****************
  8547 ;; Defined at:
  8548 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftadd.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;  f1              3   23[COMRAM] float 
  8551 ;;  f2              3   26[COMRAM] float 
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;  exp1            1   34[COMRAM] unsigned char 
  8554 ;;  exp2            1   33[COMRAM] unsigned char 
  8555 ;;  sign            1   32[COMRAM] unsigned char 
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  3   23[COMRAM] float 
  8558 ;; Registers used:
  8559 ;;		wreg, status,2, status,0, cstack
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8565 ;;      Params:         6       0       0       0       0
  8566 ;;      Locals:         3       0       0       0       0
  8567 ;;      Temps:          3       0       0       0       0
  8568 ;;      Totals:        12       0       0       0       0
  8569 ;;Total ram usage:       12 bytes
  8570 ;; Hardware stack levels used:    1
  8571 ;; Hardware stack levels required when called:    7
  8572 ;; This function calls:
  8573 ;;		___ftpack
  8574 ;; This function is called by:
  8575 ;;		_adc_int_handler
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           	psect	text51
  8580  000C6A                     __ptext51:
  8581                           	opt stack 0
  8582  000C6A                     ___ftadd:
  8583                           	opt stack 17
  8584                           
  8585                           ;incstack = 0
  8586  000C6A  C01A  F01E         	movff	___ftadd@f1+2,??___ftadd
  8587  000C6E  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  8588  000C70  6A20               	clrf	(??___ftadd+2)& (0+255),c
  8589  000C72  3419               	rlcf	___ftadd@f1+1,w,c
  8590  000C74  361E               	rlcf	??___ftadd& (0+255),f,c
  8591  000C76  E301               	bnc	u362_21
  8592  000C78  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  8593  000C7A                     u362_21:
  8594  000C7A  501E               	movf	??___ftadd,w,c
  8595  000C7C  6E23               	movwf	___ftadd@exp1,c
  8596  000C7E  C01D  F01E         	movff	___ftadd@f2+2,??___ftadd
  8597  000C82  6A1F               	clrf	(??___ftadd+1)& (0+255),c
  8598  000C84  6A20               	clrf	(??___ftadd+2)& (0+255),c
  8599  000C86  341C               	rlcf	___ftadd@f2+1,w,c
  8600  000C88  361E               	rlcf	??___ftadd& (0+255),f,c
  8601  000C8A  E301               	bnc	u363_21
  8602  000C8C  801F               	bsf	(??___ftadd+1)& (0+255),0,c
  8603  000C8E                     u363_21:
  8604  000C8E  501E               	movf	??___ftadd,w,c
  8605  000C90  6E22               	movwf	___ftadd@exp2,c
  8606  000C92  5023               	movf	___ftadd@exp1,w,c
  8607  000C94  B4D8               	btfsc	status,2,c
  8608  000C96  D00C               	goto	i1l1031
  8609  000C98  5022               	movf	___ftadd@exp2,w,c
  8610  000C9A  5C23               	subwf	___ftadd@exp1,w,c
  8611  000C9C  B0D8               	btfsc	status,0,c
  8612  000C9E  D00F               	goto	i1l4418
  8613  000CA0  5023               	movf	___ftadd@exp1,w,c
  8614  000CA2  0800               	sublw	0
  8615  000CA4  2422               	addwf	___ftadd@exp2,w,c
  8616  000CA6  6E1E               	movwf	??___ftadd& (0+255),c
  8617  000CA8  0E19               	movlw	25
  8618  000CAA  5C1E               	subwf	??___ftadd,w,c
  8619  000CAC  A0D8               	btfss	status,0,c
  8620  000CAE  D007               	goto	i1l4418
  8621  000CB0                     i1l1031:
  8622  000CB0  C01B  F018         	movff	___ftadd@f2,?___ftadd
  8623  000CB4  C01C  F019         	movff	___ftadd@f2+1,?___ftadd+1
  8624  000CB8  C01D  F01A         	movff	___ftadd@f2+2,?___ftadd+2
  8625  000CBC  0012               	return	
  8626  000CBE                     i1l4418:
  8627  000CBE  5022               	movf	___ftadd@exp2,w,c
  8628  000CC0  B4D8               	btfsc	status,2,c
  8629  000CC2  D00C               	goto	i1l1035
  8630  000CC4  5023               	movf	___ftadd@exp1,w,c
  8631  000CC6  5C22               	subwf	___ftadd@exp2,w,c
  8632  000CC8  B0D8               	btfsc	status,0,c
  8633  000CCA  D00F               	goto	i1l4424
  8634  000CCC  5022               	movf	___ftadd@exp2,w,c
  8635  000CCE  0800               	sublw	0
  8636  000CD0  2423               	addwf	___ftadd@exp1,w,c
  8637  000CD2  6E1E               	movwf	??___ftadd& (0+255),c
  8638  000CD4  0E19               	movlw	25
  8639  000CD6  5C1E               	subwf	??___ftadd,w,c
  8640  000CD8  A0D8               	btfss	status,0,c
  8641  000CDA  D007               	goto	i1l4424
  8642  000CDC                     i1l1035:
  8643  000CDC  C018  F018         	movff	___ftadd@f1,?___ftadd
  8644  000CE0  C019  F019         	movff	___ftadd@f1+1,?___ftadd+1
  8645  000CE4  C01A  F01A         	movff	___ftadd@f1+2,?___ftadd+2
  8646  000CE8  0012               	return	
  8647  000CEA                     i1l4424:
  8648  000CEA  6E1E               	movwf	??___ftadd& (0+255),c
  8649  000CEC  0E06               	movlw	6
  8650  000CEE  6E21               	movwf	___ftadd@sign,c
  8651  000CF0  501E               	movf	??___ftadd& (0+255),w,c
  8652  000CF2  BE1A               	btfsc	___ftadd@f1+2,7,c
  8653  000CF4  8E21               	bsf	___ftadd@sign,7,c
  8654  000CF6  BE1D               	btfsc	___ftadd@f2+2,7,c
  8655  000CF8  8C21               	bsf	___ftadd@sign,6,c
  8656  000CFA  8E19               	bsf	___ftadd@f1+1,7,c
  8657  000CFC  0EFF               	movlw	255
  8658  000CFE  1618               	andwf	___ftadd@f1,f,c
  8659  000D00  0EFF               	movlw	255
  8660  000D02  1619               	andwf	___ftadd@f1+1,f,c
  8661  000D04  0E00               	movlw	0
  8662  000D06  161A               	andwf	___ftadd@f1+2,f,c
  8663  000D08  8E1C               	bsf	___ftadd@f2+1,7,c
  8664  000D0A  0EFF               	movlw	255
  8665  000D0C  161B               	andwf	___ftadd@f2,f,c
  8666  000D0E  0EFF               	movlw	255
  8667  000D10  161C               	andwf	___ftadd@f2+1,f,c
  8668  000D12  0E00               	movlw	0
  8669  000D14  161D               	andwf	___ftadd@f2+2,f,c
  8670  000D16  5022               	movf	___ftadd@exp2,w,c
  8671  000D18  5C23               	subwf	___ftadd@exp1,w,c
  8672  000D1A  B0D8               	btfsc	status,0,c
  8673  000D1C  D01A               	goto	i1l4450
  8674  000D1E                     i1l4440:
  8675  000D1E  90D8               	bcf	status,0,c
  8676  000D20  361B               	rlcf	___ftadd@f2,f,c
  8677  000D22  361C               	rlcf	___ftadd@f2+1,f,c
  8678  000D24  361D               	rlcf	___ftadd@f2+2,f,c
  8679  000D26  0622               	decf	___ftadd@exp2,f,c
  8680  000D28  5022               	movf	___ftadd@exp2,w,c
  8681  000D2A  1823               	xorwf	___ftadd@exp1,w,c
  8682  000D2C  B4D8               	btfsc	status,2,c
  8683  000D2E  D00D               	goto	i1l4448
  8684  000D30  0621               	decf	___ftadd@sign,f,c
  8685  000D32  C021  F01E         	movff	___ftadd@sign,??___ftadd
  8686  000D36  0E07               	movlw	7
  8687  000D38  161E               	andwf	??___ftadd,f,c
  8688  000D3A  B4D8               	btfsc	status,2,c
  8689  000D3C  D006               	goto	i1l4448
  8690  000D3E  D7EF               	goto	i1l4440
  8691  000D40                     i1l4446:
  8692  000D40  90D8               	bcf	status,0,c
  8693  000D42  321A               	rrcf	___ftadd@f1+2,f,c
  8694  000D44  3219               	rrcf	___ftadd@f1+1,f,c
  8695  000D46  3218               	rrcf	___ftadd@f1,f,c
  8696  000D48  2A23               	incf	___ftadd@exp1,f,c
  8697  000D4A                     i1l4448:
  8698  000D4A  5022               	movf	___ftadd@exp2,w,c
  8699  000D4C  6223               	cpfseq	___ftadd@exp1,c
  8700  000D4E  D7F8               	goto	i1l4446
  8701  000D50  D01D               	goto	i1l1046
  8702  000D52                     i1l4450:
  8703  000D52  5023               	movf	___ftadd@exp1,w,c
  8704  000D54  5C22               	subwf	___ftadd@exp2,w,c
  8705  000D56  B0D8               	btfsc	status,0,c
  8706  000D58  D019               	goto	i1l1046
  8707  000D5A                     i1l4452:
  8708  000D5A  90D8               	bcf	status,0,c
  8709  000D5C  3618               	rlcf	___ftadd@f1,f,c
  8710  000D5E  3619               	rlcf	___ftadd@f1+1,f,c
  8711  000D60  361A               	rlcf	___ftadd@f1+2,f,c
  8712  000D62  0623               	decf	___ftadd@exp1,f,c
  8713  000D64  5022               	movf	___ftadd@exp2,w,c
  8714  000D66  1823               	xorwf	___ftadd@exp1,w,c
  8715  000D68  B4D8               	btfsc	status,2,c
  8716  000D6A  D00D               	goto	i1l4460
  8717  000D6C  0621               	decf	___ftadd@sign,f,c
  8718  000D6E  C021  F01E         	movff	___ftadd@sign,??___ftadd
  8719  000D72  0E07               	movlw	7
  8720  000D74  161E               	andwf	??___ftadd,f,c
  8721  000D76  B4D8               	btfsc	status,2,c
  8722  000D78  D006               	goto	i1l4460
  8723  000D7A  D7EF               	goto	i1l4452
  8724  000D7C                     i1l4458:
  8725  000D7C  90D8               	bcf	status,0,c
  8726  000D7E  321D               	rrcf	___ftadd@f2+2,f,c
  8727  000D80  321C               	rrcf	___ftadd@f2+1,f,c
  8728  000D82  321B               	rrcf	___ftadd@f2,f,c
  8729  000D84  2A22               	incf	___ftadd@exp2,f,c
  8730  000D86                     i1l4460:
  8731  000D86  5022               	movf	___ftadd@exp2,w,c
  8732  000D88  6223               	cpfseq	___ftadd@exp1,c
  8733  000D8A  D7F8               	goto	i1l4458
  8734  000D8C                     i1l1046:
  8735  000D8C  AE21               	btfss	___ftadd@sign,7,c
  8736  000D8E  D00C               	goto	i1l1055
  8737  000D90  0EFF               	movlw	255
  8738  000D92  1A18               	xorwf	___ftadd@f1,f,c
  8739  000D94  0EFF               	movlw	255
  8740  000D96  1A19               	xorwf	___ftadd@f1+1,f,c
  8741  000D98  0EFF               	movlw	255
  8742  000D9A  1A1A               	xorwf	___ftadd@f1+2,f,c
  8743  000D9C  0E01               	movlw	1
  8744  000D9E  2618               	addwf	___ftadd@f1,f,c
  8745  000DA0  0E00               	movlw	0
  8746  000DA2  2219               	addwfc	___ftadd@f1+1,f,c
  8747  000DA4  0E00               	movlw	0
  8748  000DA6  221A               	addwfc	___ftadd@f1+2,f,c
  8749  000DA8                     i1l1055:
  8750  000DA8  AC21               	btfss	___ftadd@sign,6,c
  8751  000DAA  D00C               	goto	i1l4466
  8752  000DAC  0EFF               	movlw	255
  8753  000DAE  1A1B               	xorwf	___ftadd@f2,f,c
  8754  000DB0  0EFF               	movlw	255
  8755  000DB2  1A1C               	xorwf	___ftadd@f2+1,f,c
  8756  000DB4  0EFF               	movlw	255
  8757  000DB6  1A1D               	xorwf	___ftadd@f2+2,f,c
  8758  000DB8  0E01               	movlw	1
  8759  000DBA  261B               	addwf	___ftadd@f2,f,c
  8760  000DBC  0E00               	movlw	0
  8761  000DBE  221C               	addwfc	___ftadd@f2+1,f,c
  8762  000DC0  0E00               	movlw	0
  8763  000DC2  221D               	addwfc	___ftadd@f2+2,f,c
  8764  000DC4                     i1l4466:
  8765  000DC4  6E1E               	movwf	??___ftadd& (0+255),c
  8766  000DC6  0E00               	movlw	0
  8767  000DC8  6E21               	movwf	___ftadd@sign,c
  8768  000DCA  501E               	movf	??___ftadd& (0+255),w,c
  8769  000DCC  5018               	movf	___ftadd@f1,w,c
  8770  000DCE  261B               	addwf	___ftadd@f2,f,c
  8771  000DD0  5019               	movf	___ftadd@f1+1,w,c
  8772  000DD2  221C               	addwfc	___ftadd@f2+1,f,c
  8773  000DD4  501A               	movf	___ftadd@f1+2,w,c
  8774  000DD6  221D               	addwfc	___ftadd@f2+2,f,c
  8775  000DD8  AE1D               	btfss	___ftadd@f2+2,7,c
  8776  000DDA  D010               	goto	i1l4476
  8777  000DDC  0EFF               	movlw	255
  8778  000DDE  1A1B               	xorwf	___ftadd@f2,f,c
  8779  000DE0  0EFF               	movlw	255
  8780  000DE2  1A1C               	xorwf	___ftadd@f2+1,f,c
  8781  000DE4  0EFF               	movlw	255
  8782  000DE6  1A1D               	xorwf	___ftadd@f2+2,f,c
  8783  000DE8  0E01               	movlw	1
  8784  000DEA  261B               	addwf	___ftadd@f2,f,c
  8785  000DEC  0E00               	movlw	0
  8786  000DEE  221C               	addwfc	___ftadd@f2+1,f,c
  8787  000DF0  0E00               	movlw	0
  8788  000DF2  221D               	addwfc	___ftadd@f2+2,f,c
  8789  000DF4  6E1E               	movwf	??___ftadd& (0+255),c
  8790  000DF6  0E01               	movlw	1
  8791  000DF8  6E21               	movwf	___ftadd@sign,c
  8792  000DFA  501E               	movf	??___ftadd& (0+255),w,c
  8793  000DFC                     i1l4476:
  8794  000DFC  C01B  F001         	movff	___ftadd@f2,___ftpack@arg
  8795  000E00  C01C  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  8796  000E04  C01D  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  8797  000E08  C023  F004         	movff	___ftadd@exp1,___ftpack@exp
  8798  000E0C  C021  F005         	movff	___ftadd@sign,___ftpack@sign
  8799  000E10  EC7D  F00F         	call	___ftpack	;wreg free
  8800  000E14  C001  F018         	movff	?___ftpack,?___ftadd
  8801  000E18  C002  F019         	movff	?___ftpack+1,?___ftadd+1
  8802  000E1C  C003  F01A         	movff	?___ftpack+2,?___ftadd+2
  8803  000E20  0012               	return	
  8804  000E22                     __end_of___ftadd:
  8805                           	opt stack 0
  8806                           pclatu	equ	0xFFB
  8807                           pclath	equ	0xFFA
  8808                           tblptru	equ	0xFF8
  8809                           tblptrh	equ	0xFF7
  8810                           tblptrl	equ	0xFF6
  8811                           tablat	equ	0xFF5
  8812                           prodh	equ	0xFF4
  8813                           prodl	equ	0xFF3
  8814                           intcon	equ	0xFF2
  8815                           intcon2	equ	0xFF1
  8816                           postinc0	equ	0xFEE
  8817                           fsr0h	equ	0xFEA
  8818                           fsr0l	equ	0xFE9
  8819                           wreg	equ	0xFE8
  8820                           indf1	equ	0xFE7
  8821                           postdec1	equ	0xFE5
  8822                           fsr1h	equ	0xFE2
  8823                           fsr1l	equ	0xFE1
  8824                           bsr	equ	0xFE0
  8825                           indf2	equ	0xFDF
  8826                           postinc2	equ	0xFDE
  8827                           postdec2	equ	0xFDD
  8828                           fsr2h	equ	0xFDA
  8829                           fsr2l	equ	0xFD9
  8830                           status	equ	0xFD8
  8831                           
  8832 ;; *************** function ___ftpack *****************
  8833 ;; Defined at:
  8834 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c"
  8835 ;; Parameters:    Size  Location     Type
  8836 ;;  arg             3    0[COMRAM] unsigned um
  8837 ;;  exp             1    3[COMRAM] unsigned char 
  8838 ;;  sign            1    4[COMRAM] unsigned char 
  8839 ;; Auto vars:     Size  Location     Type
  8840 ;;		None
  8841 ;; Return value:  Size  Location     Type
  8842 ;;                  3    0[COMRAM] float 
  8843 ;; Registers used:
  8844 ;;		wreg, status,2, status,0
  8845 ;; Tracked objects:
  8846 ;;		On entry : 0/0
  8847 ;;		On exit  : 0/0
  8848 ;;		Unchanged: 0/0
  8849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8850 ;;      Params:         5       0       0       0       0
  8851 ;;      Locals:         0       0       0       0       0
  8852 ;;      Temps:          3       0       0       0       0
  8853 ;;      Totals:         8       0       0       0       0
  8854 ;;Total ram usage:        8 bytes
  8855 ;; Hardware stack levels used:    1
  8856 ;; Hardware stack levels required when called:    6
  8857 ;; This function calls:
  8858 ;;		Nothing
  8859 ;; This function is called by:
  8860 ;;		___awtoft
  8861 ;;		___ftadd
  8862 ;;		___ftdiv
  8863 ;;		___ftmul
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           	psect	text52
  8868  001EFA                     __ptext52:
  8869                           	opt stack 0
  8870  001EFA                     ___ftpack:
  8871                           	opt stack 17
  8872                           
  8873                           ;incstack = 0
  8874  001EFA  5004               	movf	___ftpack@exp,w,c
  8875  001EFC  B4D8               	btfsc	status,2,c
  8876  001EFE  D005               	goto	i1l4084
  8877  001F00  5001               	movf	___ftpack@arg,w,c
  8878  001F02  1002               	iorwf	___ftpack@arg+1,w,c
  8879  001F04  1003               	iorwf	___ftpack@arg+2,w,c
  8880  001F06  A4D8               	btfss	status,2,c
  8881  001F08  D00C               	goto	i1l4090
  8882  001F0A                     i1l4084:
  8883  001F0A  0E00               	movlw	0
  8884  001F0C  6E01               	movwf	?___ftpack,c
  8885  001F0E  0E00               	movlw	0
  8886  001F10  6E02               	movwf	?___ftpack+1,c
  8887  001F12  0E00               	movlw	0
  8888  001F14  6E03               	movwf	?___ftpack+2,c
  8889  001F16  0012               	return	
  8890  001F18                     i1l4088:
  8891  001F18  2A04               	incf	___ftpack@exp,f,c
  8892  001F1A  90D8               	bcf	status,0,c
  8893  001F1C  3203               	rrcf	___ftpack@arg+2,f,c
  8894  001F1E  3202               	rrcf	___ftpack@arg+1,f,c
  8895  001F20  3201               	rrcf	___ftpack@arg,f,c
  8896  001F22                     i1l4090:
  8897  001F22  0E00               	movlw	0
  8898  001F24  1401               	andwf	___ftpack@arg,w,c
  8899  001F26  6E06               	movwf	??___ftpack& (0+255),c
  8900  001F28  0E00               	movlw	0
  8901  001F2A  1402               	andwf	___ftpack@arg+1,w,c
  8902  001F2C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  8903  001F2E  0EFE               	movlw	254
  8904  001F30  1403               	andwf	___ftpack@arg+2,w,c
  8905  001F32  6E08               	movwf	(??___ftpack+2)& (0+255),c
  8906  001F34  5006               	movf	??___ftpack,w,c
  8907  001F36  1007               	iorwf	??___ftpack+1,w,c
  8908  001F38  1008               	iorwf	??___ftpack+2,w,c
  8909  001F3A  B4D8               	btfsc	status,2,c
  8910  001F3C  D00C               	goto	i1l4096
  8911  001F3E  D7EC               	goto	i1l4088
  8912  001F40                     i1l4092:
  8913  001F40  2A04               	incf	___ftpack@exp,f,c
  8914  001F42  0E01               	movlw	1
  8915  001F44  2601               	addwf	___ftpack@arg,f,c
  8916  001F46  0E00               	movlw	0
  8917  001F48  2202               	addwfc	___ftpack@arg+1,f,c
  8918  001F4A  0E00               	movlw	0
  8919  001F4C  2203               	addwfc	___ftpack@arg+2,f,c
  8920  001F4E  90D8               	bcf	status,0,c
  8921  001F50  3203               	rrcf	___ftpack@arg+2,f,c
  8922  001F52  3202               	rrcf	___ftpack@arg+1,f,c
  8923  001F54  3201               	rrcf	___ftpack@arg,f,c
  8924  001F56                     i1l4096:
  8925  001F56  0E00               	movlw	0
  8926  001F58  1401               	andwf	___ftpack@arg,w,c
  8927  001F5A  6E06               	movwf	??___ftpack& (0+255),c
  8928  001F5C  0E00               	movlw	0
  8929  001F5E  1402               	andwf	___ftpack@arg+1,w,c
  8930  001F60  6E07               	movwf	(??___ftpack+1)& (0+255),c
  8931  001F62  0EFF               	movlw	255
  8932  001F64  1403               	andwf	___ftpack@arg+2,w,c
  8933  001F66  6E08               	movwf	(??___ftpack+2)& (0+255),c
  8934  001F68  5006               	movf	??___ftpack,w,c
  8935  001F6A  1007               	iorwf	??___ftpack+1,w,c
  8936  001F6C  1008               	iorwf	??___ftpack+2,w,c
  8937  001F6E  B4D8               	btfsc	status,2,c
  8938  001F70  D006               	goto	i1l4100
  8939  001F72  D7E6               	goto	i1l4092
  8940  001F74                     i1l4098:
  8941  001F74  0604               	decf	___ftpack@exp,f,c
  8942  001F76  90D8               	bcf	status,0,c
  8943  001F78  3601               	rlcf	___ftpack@arg,f,c
  8944  001F7A  3602               	rlcf	___ftpack@arg+1,f,c
  8945  001F7C  3603               	rlcf	___ftpack@arg+2,f,c
  8946  001F7E                     i1l4100:
  8947  001F7E  AE02               	btfss	___ftpack@arg+1,7,c
  8948  001F80  D7F9               	goto	i1l4098
  8949  001F82  A004               	btfss	___ftpack@exp,0,c
  8950  001F84  9E02               	bcf	___ftpack@arg+1,7,c
  8951  001F86  90D8               	bcf	status,0,c
  8952  001F88  3204               	rrcf	___ftpack@exp,f,c
  8953  001F8A  5004               	movf	___ftpack@exp,w,c
  8954  001F8C  1203               	iorwf	___ftpack@arg+2,f,c
  8955  001F8E  5005               	movf	___ftpack@sign,w,c
  8956  001F90  A4D8               	btfss	status,2,c
  8957  001F92  8E03               	bsf	___ftpack@arg+2,7,c
  8958  001F94  C001  F001         	movff	___ftpack@arg,?___ftpack
  8959  001F98  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  8960  001F9C  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  8961  001FA0  0012               	return	
  8962  001FA2                     __end_of___ftpack:
  8963                           	opt stack 0
  8964                           pclatu	equ	0xFFB
  8965                           pclath	equ	0xFFA
  8966                           tblptru	equ	0xFF8
  8967                           tblptrh	equ	0xFF7
  8968                           tblptrl	equ	0xFF6
  8969                           tablat	equ	0xFF5
  8970                           prodh	equ	0xFF4
  8971                           prodl	equ	0xFF3
  8972                           intcon	equ	0xFF2
  8973                           intcon2	equ	0xFF1
  8974                           postinc0	equ	0xFEE
  8975                           fsr0h	equ	0xFEA
  8976                           fsr0l	equ	0xFE9
  8977                           wreg	equ	0xFE8
  8978                           indf1	equ	0xFE7
  8979                           postdec1	equ	0xFE5
  8980                           fsr1h	equ	0xFE2
  8981                           fsr1l	equ	0xFE1
  8982                           bsr	equ	0xFE0
  8983                           indf2	equ	0xFDF
  8984                           postinc2	equ	0xFDE
  8985                           postdec2	equ	0xFDD
  8986                           fsr2h	equ	0xFDA
  8987                           fsr2l	equ	0xFD9
  8988                           status	equ	0xFD8
  8989                           
  8990 ;; *************** function ___awtoft *****************
  8991 ;; Defined at:
  8992 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awtoft.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;  c               2    8[COMRAM] int 
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;  sign            1   12[COMRAM] unsigned char 
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  3    8[COMRAM] float 
  8999 ;; Registers used:
  9000 ;;		wreg, status,2, status,0, prodl, cstack
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9006 ;;      Params:         3       0       0       0       0
  9007 ;;      Locals:         1       0       0       0       0
  9008 ;;      Temps:          1       0       0       0       0
  9009 ;;      Totals:         5       0       0       0       0
  9010 ;;Total ram usage:        5 bytes
  9011 ;; Hardware stack levels used:    1
  9012 ;; Hardware stack levels required when called:    7
  9013 ;; This function calls:
  9014 ;;		___ftpack
  9015 ;; This function is called by:
  9016 ;;		_adc_int_handler
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text53
  9021  002932                     __ptext53:
  9022                           	opt stack 0
  9023  002932                     ___awtoft:
  9024                           	opt stack 17
  9025                           
  9026                           ;incstack = 0
  9027  002932  6E0C               	movwf	??___awtoft& (0+255),c
  9028  002934  0E00               	movlw	0
  9029  002936  6E0D               	movwf	___awtoft@sign,c
  9030  002938  500C               	movf	??___awtoft& (0+255),w,c
  9031  00293A  500A               	movf	___awtoft@c+1,w,c
  9032  00293C  0A80               	xorlw	128
  9033  00293E  6EF3               	movwf	prodl,c
  9034  002940  0E80               	movlw	128
  9035  002942  5CF3               	subwf	prodl,w,c
  9036  002944  0E00               	movlw	0
  9037  002946  B4D8               	btfsc	status,2,c
  9038  002948  5C09               	subwf	___awtoft@c,w,c
  9039  00294A  B0D8               	btfsc	status,0,c
  9040  00294C  D008               	goto	i1l4488
  9041  00294E  6C09               	negf	___awtoft@c,c
  9042  002950  1E0A               	comf	___awtoft@c+1,f,c
  9043  002952  B0D8               	btfsc	status,0,c
  9044  002954  2A0A               	incf	___awtoft@c+1,f,c
  9045  002956  6E0C               	movwf	??___awtoft& (0+255),c
  9046  002958  0E01               	movlw	1
  9047  00295A  6E0D               	movwf	___awtoft@sign,c
  9048  00295C  500C               	movf	??___awtoft& (0+255),w,c
  9049  00295E                     i1l4488:
  9050  00295E  C009  F001         	movff	___awtoft@c,___ftpack@arg
  9051  002962  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  9052  002966  6A03               	clrf	___ftpack@arg+2,c
  9053  002968  6E0C               	movwf	??___awtoft& (0+255),c
  9054  00296A  0E8E               	movlw	142
  9055  00296C  6E04               	movwf	___ftpack@exp,c
  9056  00296E  500C               	movf	??___awtoft& (0+255),w,c
  9057  002970  C00D  F005         	movff	___awtoft@sign,___ftpack@sign
  9058  002974  EC7D  F00F         	call	___ftpack	;wreg free
  9059  002978  C001  F009         	movff	?___ftpack,?___awtoft
  9060  00297C  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  9061  002980  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  9062  002984  0012               	return	
  9063  002986                     __end_of___awtoft:
  9064                           	opt stack 0
  9065                           pclatu	equ	0xFFB
  9066                           pclath	equ	0xFFA
  9067                           tblptru	equ	0xFF8
  9068                           tblptrh	equ	0xFF7
  9069                           tblptrl	equ	0xFF6
  9070                           tablat	equ	0xFF5
  9071                           prodh	equ	0xFF4
  9072                           prodl	equ	0xFF3
  9073                           intcon	equ	0xFF2
  9074                           intcon2	equ	0xFF1
  9075                           postinc0	equ	0xFEE
  9076                           fsr0h	equ	0xFEA
  9077                           fsr0l	equ	0xFE9
  9078                           wreg	equ	0xFE8
  9079                           indf1	equ	0xFE7
  9080                           postdec1	equ	0xFE5
  9081                           fsr1h	equ	0xFE2
  9082                           fsr1l	equ	0xFE1
  9083                           bsr	equ	0xFE0
  9084                           indf2	equ	0xFDF
  9085                           postinc2	equ	0xFDE
  9086                           postdec2	equ	0xFDD
  9087                           fsr2h	equ	0xFDA
  9088                           fsr2l	equ	0xFD9
  9089                           status	equ	0xFD8
  9090                           
  9091 ;; *************** function _InterruptHandlerHigh *****************
  9092 ;; Defined at:
  9093 ;;		line 84 in file "../src/interrupts.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;		None
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;		None
  9098 ;; Return value:  Size  Location     Type
  9099 ;;		None               void
  9100 ;; Registers used:
  9101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  9102 ;; Tracked objects:
  9103 ;;		On entry : 0/0
  9104 ;;		On exit  : 0/0
  9105 ;;		Unchanged: 0/0
  9106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9107 ;;      Params:         0       0       0       0       0
  9108 ;;      Locals:         0       0       0       0       0
  9109 ;;      Temps:          0      14       0       0       0
  9110 ;;      Totals:         0      14       0       0       0
  9111 ;;Total ram usage:       14 bytes
  9112 ;; Hardware stack levels used:    1
  9113 ;; Hardware stack levels required when called:    5
  9114 ;; This function calls:
  9115 ;;		_SleepIfOkay
  9116 ;;		_i2c_int_handler
  9117 ;; This function is called by:
  9118 ;;		Interrupt level 2
  9119 ;; This function uses a non-reentrant model
  9120 ;;
  9121                           
  9122                           	psect	intcode
  9123  000008                     __pintcode:
  9124                           	opt stack 0
  9125  000008                     _InterruptHandlerHigh:
  9126                           	opt stack 16
  9127                           
  9128                           ;incstack = 0
  9129  000008  CFFA F0C2          	movff	pclath,??_InterruptHandlerHigh
  9130  00000C  CFFB F0C3          	movff	pclatu,??_InterruptHandlerHigh+1
  9131  000010  EF8F  F012         	goto	int_func
  9132                           pclatu	equ	0xFFB
  9133                           pclath	equ	0xFFA
  9134                           tblptru	equ	0xFF8
  9135                           tblptrh	equ	0xFF7
  9136                           tblptrl	equ	0xFF6
  9137                           tablat	equ	0xFF5
  9138                           prodh	equ	0xFF4
  9139                           prodl	equ	0xFF3
  9140                           intcon	equ	0xFF2
  9141                           intcon2	equ	0xFF1
  9142                           postinc0	equ	0xFEE
  9143                           fsr0h	equ	0xFEA
  9144                           fsr0l	equ	0xFE9
  9145                           wreg	equ	0xFE8
  9146                           indf1	equ	0xFE7
  9147                           postdec1	equ	0xFE5
  9148                           fsr1h	equ	0xFE2
  9149                           fsr1l	equ	0xFE1
  9150                           bsr	equ	0xFE0
  9151                           indf2	equ	0xFDF
  9152                           postinc2	equ	0xFDE
  9153                           postdec2	equ	0xFDD
  9154                           fsr2h	equ	0xFDA
  9155                           fsr2l	equ	0xFD9
  9156                           status	equ	0xFD8
  9157                           
  9158                           	psect	intcode_body
  9159  00251E                     __pintcode_body:
  9160                           	opt stack 16
  9161  00251E                     int_func:
  9162                           	opt stack 16
  9163  00251E  CFE9 F0C4          	movff	fsr0l,??_InterruptHandlerHigh+2
  9164  002522  CFEA F0C5          	movff	fsr0h,??_InterruptHandlerHigh+3
  9165  002526  CFE1 F0C6          	movff	fsr1l,??_InterruptHandlerHigh+4
  9166  00252A  CFE2 F0C7          	movff	fsr1h,??_InterruptHandlerHigh+5
  9167  00252E  CFD9 F0C8          	movff	fsr2l,??_InterruptHandlerHigh+6
  9168  002532  CFDA F0C9          	movff	fsr2h,??_InterruptHandlerHigh+7
  9169  002536  CFF3 F0CA          	movff	prodl,??_InterruptHandlerHigh+8
  9170  00253A  CFF4 F0CB          	movff	prodh,??_InterruptHandlerHigh+9
  9171  00253E  CFF6 F0CC          	movff	tblptrl,??_InterruptHandlerHigh+10
  9172  002542  CFF7 F0CD          	movff	tblptrh,??_InterruptHandlerHigh+11
  9173  002546  CFF8 F0CE          	movff	tblptru,??_InterruptHandlerHigh+12
  9174  00254A  CFF5 F0CF          	movff	tablat,??_InterruptHandlerHigh+13
  9175                           
  9176                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  9177  00254E  A69E               	btfss	3998,3,c	;volatile
  9178  002550  D003               	goto	i2l62
  9179                           
  9180                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  9181  002552  969E               	bcf	3998,3,c	;volatile
  9182                           
  9183                           ;interrupts.c: 94: i2c_int_handler();
  9184  002554  ECE5  F016         	call	_i2c_int_handler	;wreg free
  9185  002558                     i2l62:
  9186                           
  9187                           ;interrupts.c: 96: }
  9188                           ;interrupts.c: 106: SleepIfOkay();
  9189  002558  EC3D  F013         	call	_SleepIfOkay	;wreg free
  9190  00255C  C0CF  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  9191  002560  C0CE  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  9192  002564  C0CD  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  9193  002568  C0CC  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  9194  00256C  C0CB  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  9195  002570  C0CA  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  9196  002574  C0C9  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  9197  002578  C0C8  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  9198  00257C  C0C7  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  9199  002580  C0C6  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  9200  002584  C0C5  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  9201  002588  C0C4  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  9202  00258C  C0C3  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  9203  002590  C0C2  FFFA         	movff	??_InterruptHandlerHigh,pclath
  9204  002594  0011               	retfie		f
  9205  002596                     __end_of_InterruptHandlerHigh:
  9206                           	opt stack 0
  9207                           pclatu	equ	0xFFB
  9208                           pclath	equ	0xFFA
  9209                           tblptru	equ	0xFF8
  9210                           tblptrh	equ	0xFF7
  9211                           tblptrl	equ	0xFF6
  9212                           tablat	equ	0xFF5
  9213                           prodh	equ	0xFF4
  9214                           prodl	equ	0xFF3
  9215                           intcon	equ	0xFF2
  9216                           intcon2	equ	0xFF1
  9217                           postinc0	equ	0xFEE
  9218                           fsr0h	equ	0xFEA
  9219                           fsr0l	equ	0xFE9
  9220                           wreg	equ	0xFE8
  9221                           indf1	equ	0xFE7
  9222                           postdec1	equ	0xFE5
  9223                           fsr1h	equ	0xFE2
  9224                           fsr1l	equ	0xFE1
  9225                           bsr	equ	0xFE0
  9226                           indf2	equ	0xFDF
  9227                           postinc2	equ	0xFDE
  9228                           postdec2	equ	0xFDD
  9229                           fsr2h	equ	0xFDA
  9230                           fsr2l	equ	0xFD9
  9231                           status	equ	0xFD8
  9232                           
  9233 ;; *************** function _i2c_int_handler *****************
  9234 ;; Defined at:
  9235 ;;		line 139 in file "../src/my_i2c.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;		None
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;		None
  9240 ;; Return value:  Size  Location     Type
  9241 ;;		None               void
  9242 ;; Registers used:
  9243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9249 ;;      Params:         0       0       0       0       0
  9250 ;;      Locals:         0       0       0       0       0
  9251 ;;      Temps:          0       0       0       0       0
  9252 ;;      Totals:         0       0       0       0       0
  9253 ;;Total ram usage:        0 bytes
  9254 ;; Hardware stack levels used:    1
  9255 ;; Hardware stack levels required when called:    4
  9256 ;; This function calls:
  9257 ;;		_i2c_slave_int_handler
  9258 ;; This function is called by:
  9259 ;;		_InterruptHandlerHigh
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           	psect	text55
  9264  002DCA                     __ptext55:
  9265                           	opt stack 0
  9266  002DCA                     _i2c_int_handler:
  9267                           	opt stack 16
  9268                           
  9269                           ;my_i2c.c: 143: i2c_slave_int_handler();
  9270                           
  9271                           ;incstack = 0
  9272  002DCA  EC6E  F000         	call	_i2c_slave_int_handler	;wreg free
  9273  002DCE  0012               	return	
  9274  002DD0                     __end_of_i2c_int_handler:
  9275                           	opt stack 0
  9276                           pclatu	equ	0xFFB
  9277                           pclath	equ	0xFFA
  9278                           tblptru	equ	0xFF8
  9279                           tblptrh	equ	0xFF7
  9280                           tblptrl	equ	0xFF6
  9281                           tablat	equ	0xFF5
  9282                           prodh	equ	0xFF4
  9283                           prodl	equ	0xFF3
  9284                           intcon	equ	0xFF2
  9285                           intcon2	equ	0xFF1
  9286                           postinc0	equ	0xFEE
  9287                           fsr0h	equ	0xFEA
  9288                           fsr0l	equ	0xFE9
  9289                           wreg	equ	0xFE8
  9290                           indf1	equ	0xFE7
  9291                           postdec1	equ	0xFE5
  9292                           fsr1h	equ	0xFE2
  9293                           fsr1l	equ	0xFE1
  9294                           bsr	equ	0xFE0
  9295                           indf2	equ	0xFDF
  9296                           postinc2	equ	0xFDE
  9297                           postdec2	equ	0xFDD
  9298                           fsr2h	equ	0xFDA
  9299                           fsr2l	equ	0xFD9
  9300                           status	equ	0xFD8
  9301                           
  9302 ;; *************** function _i2c_slave_int_handler *****************
  9303 ;; Defined at:
  9304 ;;		line 248 in file "../src/my_i2c.c"
  9305 ;; Parameters:    Size  Location     Type
  9306 ;;		None
  9307 ;; Auto vars:     Size  Location     Type
  9308 ;;  ack             6   34[BANK0 ] unsigned char [6]
  9309 ;;  dist            6   40[BANK0 ] unsigned char [6]
  9310 ;;  ack             6   28[BANK0 ] unsigned char [6]
  9311 ;;  message         6   54[BANK0 ] unsigned char [6]
  9312 ;;  checksum        1   48[BANK0 ] unsigned char 
  9313 ;;  bitmask         1   47[BANK0 ] unsigned char 
  9314 ;;  messageType     1   46[BANK0 ] unsigned char 
  9315 ;;  length          2   63[BANK0 ] int 
  9316 ;;  error_buf       3   49[BANK0 ] unsigned char [3]
  9317 ;;  data_read       1   65[BANK0 ] unsigned char 
  9318 ;;  msg_ready       1   62[BANK0 ] unsigned char 
  9319 ;;  msg_to_send     1   61[BANK0 ] unsigned char 
  9320 ;;  i2c_data        1   60[BANK0 ] unsigned char 
  9321 ;;  overrun_erro    1   53[BANK0 ] unsigned char 
  9322 ;;  data_written    1   52[BANK0 ] unsigned char 
  9323 ;; Return value:  Size  Location     Type
  9324 ;;		None               void
  9325 ;; Registers used:
  9326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9332 ;;      Params:         0       0       0       0       0
  9333 ;;      Locals:         0      38       0       0       0
  9334 ;;      Temps:          0       2       0       0       0
  9335 ;;      Totals:         0      40       0       0       0
  9336 ;;Total ram usage:       40 bytes
  9337 ;; Hardware stack levels used:    1
  9338 ;; Hardware stack levels required when called:    3
  9339 ;; This function calls:
  9340 ;;		_ToMainHigh_sendmsg
  9341 ;;		_handle_start
  9342 ;;		_start_i2c_slave_reply
  9343 ;;		i2_motorMove
  9344 ;; This function is called by:
  9345 ;;		_i2c_int_handler
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           
  9349                           	psect	text56
  9350  0000DC                     __ptext56:
  9351                           	opt stack 0
  9352  0000DC                     _i2c_slave_int_handler:
  9353                           	opt stack 16
  9354                           
  9355                           ;my_i2c.c: 249: unsigned char i2c_data;
  9356                           ;my_i2c.c: 250: unsigned char data_read = 0;
  9357                           
  9358                           ;incstack = 0
  9359  0000DC  0100               	movlb	0	; () banked
  9360  0000DE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9361  0000E0  0E00               	movlw	0
  9362  0000E2  0100               	movlb	0	; () banked
  9363  0000E4  0100               	movlb	0	; () banked
  9364  0000E6  6FC1               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  9365  0000E8  0100               	movlb	0	; () banked
  9366  0000EA  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9367                           
  9368                           ;my_i2c.c: 251: unsigned char data_written = 0;
  9369  0000EC  0100               	movlb	0	; () banked
  9370  0000EE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9371  0000F0  0E00               	movlw	0
  9372  0000F2  0100               	movlb	0	; () banked
  9373  0000F4  0100               	movlb	0	; () banked
  9374  0000F6  6FB4               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  9375  0000F8  0100               	movlb	0	; () banked
  9376  0000FA  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9377                           
  9378                           ;my_i2c.c: 252: unsigned char msg_ready = 0;
  9379  0000FC  0100               	movlb	0	; () banked
  9380  0000FE  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9381  000100  0E00               	movlw	0
  9382  000102  0100               	movlb	0	; () banked
  9383  000104  0100               	movlb	0	; () banked
  9384  000106  6FBE               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  9385  000108  0100               	movlb	0	; () banked
  9386  00010A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9387                           
  9388                           ;my_i2c.c: 253: unsigned char msg_to_send = 0;
  9389  00010C  0100               	movlb	0	; () banked
  9390  00010E  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9391  000110  0E00               	movlw	0
  9392  000112  0100               	movlb	0	; () banked
  9393  000114  0100               	movlb	0	; () banked
  9394  000116  6FBD               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  9395  000118  0100               	movlb	0	; () banked
  9396  00011A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9397                           
  9398                           ;my_i2c.c: 254: unsigned char overrun_error = 0;
  9399  00011C  0100               	movlb	0	; () banked
  9400  00011E  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9401  000120  0E00               	movlw	0
  9402  000122  0100               	movlb	0	; () banked
  9403  000124  0100               	movlb	0	; () banked
  9404  000126  6FB5               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  9405  000128  0100               	movlb	0	; () banked
  9406  00012A  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9407                           
  9408                           ; BSR set to: 0
  9409                           ;my_i2c.c: 255: unsigned char error_buf[3];
  9410                           ;my_i2c.c: 258: if (SSPCON1bits.SSPOV == 1) {
  9411  00012C  ACC6               	btfss	4038,6,c	;volatile
  9412  00012E  D029               	goto	i2l3816
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;my_i2c.c: 259: SSPCON1bits.SSPOV = 0;
  9416  000130  9CC6               	bcf	4038,6,c	;volatile
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;my_i2c.c: 263: ic_ptr->status = 0x5;
  9420  000132  0101               	movlb	1	; () banked
  9421  000134  EE20 F00D          	lfsr	2,13
  9422  000138  0101               	movlb	1	; () banked
  9423  00013A  51C5               	movf	_ic_ptr& (0+255),w,b
  9424  00013C  26D9               	addwf	fsr2l,f,c
  9425  00013E  0101               	movlb	1	; () banked
  9426  000140  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9427  000142  22DA               	addwfc	fsr2h,f,c
  9428  000144  0E05               	movlw	5
  9429  000146  6EDF               	movwf	indf2,c
  9430                           
  9431                           ; BSR set to: 1
  9432                           ;my_i2c.c: 264: overrun_error = 1;
  9433  000148  0100               	movlb	0	; () banked
  9434  00014A  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9435  00014C  0E01               	movlw	1
  9436  00014E  0100               	movlb	0	; () banked
  9437  000150  0100               	movlb	0	; () banked
  9438  000152  6FB5               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  9439  000154  0100               	movlb	0	; () banked
  9440  000156  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;my_i2c.c: 265: ic_ptr->error_count++;
  9444  000158  0101               	movlb	1	; () banked
  9445  00015A  EE20 F00F          	lfsr	2,15
  9446  00015E  0101               	movlb	1	; () banked
  9447  000160  51C5               	movf	_ic_ptr& (0+255),w,b
  9448  000162  26D9               	addwf	fsr2l,f,c
  9449  000164  0101               	movlb	1	; () banked
  9450  000166  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9451  000168  22DA               	addwfc	fsr2h,f,c
  9452  00016A  2ADF               	incf	indf2,f,c
  9453                           
  9454                           ; BSR set to: 1
  9455                           ;my_i2c.c: 266: ic_ptr->error_code = 0x4;
  9456  00016C  0101               	movlb	1	; () banked
  9457  00016E  EE20 F00E          	lfsr	2,14
  9458  000172  0101               	movlb	1	; () banked
  9459  000174  51C5               	movf	_ic_ptr& (0+255),w,b
  9460  000176  26D9               	addwf	fsr2l,f,c
  9461  000178  0101               	movlb	1	; () banked
  9462  00017A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9463  00017C  22DA               	addwfc	fsr2h,f,c
  9464  00017E  0E04               	movlw	4
  9465  000180  6EDF               	movwf	indf2,c
  9466  000182                     i2l3816:
  9467                           
  9468                           ;my_i2c.c: 267: }
  9469                           ;my_i2c.c: 269: if (SSPSTATbits.BF == 1) {
  9470  000182  A0C7               	btfss	4039,0,c	;volatile
  9471  000184  D00A               	goto	i2l3822
  9472                           
  9473                           ;my_i2c.c: 270: i2c_data = SSPBUF;
  9474  000186  CFC9 F0BC          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  9475                           
  9476                           ;my_i2c.c: 271: data_read = 1;
  9477  00018A  0100               	movlb	0	; () banked
  9478  00018C  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9479  00018E  0E01               	movlw	1
  9480  000190  0100               	movlb	0	; () banked
  9481  000192  0100               	movlb	0	; () banked
  9482  000194  6FC1               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  9483  000196  0100               	movlb	0	; () banked
  9484  000198  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9485  00019A                     i2l3822:
  9486                           
  9487                           ;my_i2c.c: 272: }
  9488                           ;my_i2c.c: 274: if (!overrun_error) {
  9489  00019A  0100               	movlb	0	; () banked
  9490  00019C  0100               	movlb	0	; () banked
  9491  00019E  67B5               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  9492  0001A0  D1CE               	goto	i2l372
  9493  0001A2  D1B7               	goto	i2l3910
  9494  0001A4                     i2l374:
  9495                           
  9496                           ; BSR set to: 1
  9497                           ;my_i2c.c: 277: {
  9498                           ;my_i2c.c: 279: if (SSPSTATbits.S == 1) {
  9499  0001A4  A6C7               	btfss	4039,3,c	;volatile
  9500  0001A6  D1CB               	goto	i2l372
  9501                           
  9502                           ; BSR set to: 1
  9503                           ;my_i2c.c: 280: handle_start(data_read);
  9504  0001A8  0100               	movlb	0	; () banked
  9505  0001AA  0100               	movlb	0	; () banked
  9506  0001AC  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9507  0001AE  EC49  F00D         	call	_handle_start
  9508                           
  9509                           ;my_i2c.c: 282: if (ic_ptr->status == 0x8) {
  9510  0001B2  0101               	movlb	1	; () banked
  9511  0001B4  EE20 F00D          	lfsr	2,13
  9512  0001B8  0101               	movlb	1	; () banked
  9513  0001BA  51C5               	movf	_ic_ptr& (0+255),w,b
  9514  0001BC  26D9               	addwf	fsr2l,f,c
  9515  0001BE  0101               	movlb	1	; () banked
  9516  0001C0  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9517  0001C2  22DA               	addwfc	fsr2h,f,c
  9518  0001C4  0E08               	movlw	8
  9519  0001C6  62DF               	cpfseq	indf2,c
  9520  0001C8  D1BA               	goto	i2l372
  9521                           
  9522                           ; BSR set to: 1
  9523                           ;my_i2c.c: 283: data_read = 0;
  9524  0001CA  0100               	movlb	0	; () banked
  9525  0001CC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9526  0001CE  0E00               	movlw	0
  9527  0001D0  0100               	movlb	0	; () banked
  9528  0001D2  0100               	movlb	0	; () banked
  9529  0001D4  6FC1               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  9530  0001D6  0100               	movlb	0	; () banked
  9531  0001D8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9532                           
  9533                           ;my_i2c.c: 284: msg_to_send = 1;
  9534  0001DA  0100               	movlb	0	; () banked
  9535  0001DC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9536  0001DE  0E01               	movlw	1
  9537  0001E0  0100               	movlb	0	; () banked
  9538  0001E2  0100               	movlb	0	; () banked
  9539  0001E4  6FBD               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  9540  0001E6  D187               	goto	L8
  9541  0001E8                     i2l378:
  9542                           
  9543                           ; BSR set to: 1
  9544                           ;my_i2c.c: 290: {
  9545                           ;my_i2c.c: 292: if (SSPSTATbits.P == 1) {
  9546  0001E8  A8C7               	btfss	4039,4,c	;volatile
  9547  0001EA  D030               	goto	i2l3842
  9548                           
  9549                           ; BSR set to: 1
  9550                           ;my_i2c.c: 295: ic_ptr->event_count++;
  9551  0001EC  0101               	movlb	1	; () banked
  9552  0001EE  EE20 F00C          	lfsr	2,12
  9553  0001F2  0101               	movlb	1	; () banked
  9554  0001F4  51C5               	movf	_ic_ptr& (0+255),w,b
  9555  0001F6  26D9               	addwf	fsr2l,f,c
  9556  0001F8  0101               	movlb	1	; () banked
  9557  0001FA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9558  0001FC  22DA               	addwfc	fsr2h,f,c
  9559  0001FE  2ADF               	incf	indf2,f,c
  9560                           
  9561                           ; BSR set to: 1
  9562                           ;my_i2c.c: 296: if (data_read) {
  9563  000200  0100               	movlb	0	; () banked
  9564  000202  0100               	movlb	0	; () banked
  9565  000204  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9566  000206  B4D8               	btfsc	status,2,c
  9567  000208  D179               	goto	L10
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;my_i2c.c: 297: if (SSPSTATbits.D_A == 0) {
  9571  00020A  BAC7               	btfsc	4039,5,c	;volatile
  9572  00020C  D009               	goto	i2l3840
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;my_i2c.c: 298: msg_ready = 1;
  9576  00020E  0100               	movlb	0	; () banked
  9577  000210  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9578  000212  0E01               	movlw	1
  9579  000214  0100               	movlb	0	; () banked
  9580  000216  0100               	movlb	0	; () banked
  9581  000218  6FBE               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  9582  00021A  0100               	movlb	0	; () banked
  9583  00021C  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9584                           
  9585                           ;my_i2c.c: 299: } else {
  9586  00021E  D16E               	goto	L10
  9587  000220                     i2l3840:
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;my_i2c.c: 300: ic_ptr->error_count++;
  9591  000220  0101               	movlb	1	; () banked
  9592  000222  EE20 F00F          	lfsr	2,15
  9593  000226  0101               	movlb	1	; () banked
  9594  000228  51C5               	movf	_ic_ptr& (0+255),w,b
  9595  00022A  26D9               	addwf	fsr2l,f,c
  9596  00022C  0101               	movlb	1	; () banked
  9597  00022E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9598  000230  22DA               	addwfc	fsr2h,f,c
  9599  000232  2ADF               	incf	indf2,f,c
  9600                           
  9601                           ;my_i2c.c: 301: ic_ptr->error_code = 0x6;
  9602  000234  0101               	movlb	1	; () banked
  9603  000236  EE20 F00E          	lfsr	2,14
  9604  00023A  0101               	movlb	1	; () banked
  9605  00023C  51C5               	movf	_ic_ptr& (0+255),w,b
  9606  00023E  26D9               	addwf	fsr2l,f,c
  9607  000240  0101               	movlb	1	; () banked
  9608  000242  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9609  000244  22DA               	addwfc	fsr2h,f,c
  9610  000246  0E06               	movlw	6
  9611  000248  6EDF               	movwf	indf2,c
  9612                           
  9613                           ; BSR set to: 1
  9614  00024A  D158               	goto	L10
  9615  00024C                     i2l3842:
  9616                           
  9617                           ; BSR set to: 1
  9618  00024C  0100               	movlb	0	; () banked
  9619  00024E  0100               	movlb	0	; () banked
  9620  000250  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9621  000252  B4D8               	btfsc	status,2,c
  9622  000254  D174               	goto	i2l372
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;my_i2c.c: 306: ic_ptr->event_count++;
  9626  000256  0101               	movlb	1	; () banked
  9627  000258  EE20 F00C          	lfsr	2,12
  9628  00025C  0101               	movlb	1	; () banked
  9629  00025E  51C5               	movf	_ic_ptr& (0+255),w,b
  9630  000260  26D9               	addwf	fsr2l,f,c
  9631  000262  0101               	movlb	1	; () banked
  9632  000264  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9633  000266  22DA               	addwfc	fsr2h,f,c
  9634  000268  2ADF               	incf	indf2,f,c
  9635                           
  9636                           ; BSR set to: 1
  9637                           ;my_i2c.c: 307: if (SSPSTATbits.D_A == 0) {
  9638  00026A  BAC7               	btfsc	4039,5,c	;volatile
  9639  00026C  D019               	goto	i2l3858
  9640                           
  9641                           ; BSR set to: 1
  9642                           ;my_i2c.c: 308: if (SSPSTATbits.R_W == 0) {
  9643  00026E  B4C7               	btfsc	4039,2,c	;volatile
  9644  000270  D00B               	goto	i2l3852
  9645                           
  9646                           ; BSR set to: 1
  9647                           ;my_i2c.c: 309: ic_ptr->status = 0x7;
  9648  000272  0101               	movlb	1	; () banked
  9649  000274  EE20 F00D          	lfsr	2,13
  9650  000278  0101               	movlb	1	; () banked
  9651  00027A  51C5               	movf	_ic_ptr& (0+255),w,b
  9652  00027C  26D9               	addwf	fsr2l,f,c
  9653  00027E  0101               	movlb	1	; () banked
  9654  000280  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9655  000282  22DA               	addwfc	fsr2h,f,c
  9656  000284  0E07               	movlw	7
  9657  000286  D076               	goto	L7
  9658  000288                     i2l3852:
  9659                           
  9660                           ; BSR set to: 1
  9661                           ;my_i2c.c: 311: ic_ptr->status = 0x8;
  9662  000288  0101               	movlb	1	; () banked
  9663  00028A  EE20 F00D          	lfsr	2,13
  9664  00028E  0101               	movlb	1	; () banked
  9665  000290  51C5               	movf	_ic_ptr& (0+255),w,b
  9666  000292  26D9               	addwf	fsr2l,f,c
  9667  000294  0101               	movlb	1	; () banked
  9668  000296  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9669  000298  22DA               	addwfc	fsr2h,f,c
  9670  00029A  0E08               	movlw	8
  9671  00029C  6EDF               	movwf	indf2,c
  9672  00029E  D11D               	goto	L11
  9673  0002A0                     i2l3858:
  9674                           
  9675                           ;my_i2c.c: 317: ic_ptr->error_count++;
  9676  0002A0  0101               	movlb	1	; () banked
  9677  0002A2  EE20 F00F          	lfsr	2,15
  9678  0002A6  0101               	movlb	1	; () banked
  9679  0002A8  51C5               	movf	_ic_ptr& (0+255),w,b
  9680  0002AA  26D9               	addwf	fsr2l,f,c
  9681  0002AC  0101               	movlb	1	; () banked
  9682  0002AE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9683  0002B0  22DA               	addwfc	fsr2h,f,c
  9684  0002B2  2ADF               	incf	indf2,f,c
  9685                           
  9686                           ;my_i2c.c: 318: ic_ptr->status = 0x5;
  9687  0002B4  0101               	movlb	1	; () banked
  9688  0002B6  EE20 F00D          	lfsr	2,13
  9689  0002BA  0101               	movlb	1	; () banked
  9690  0002BC  51C5               	movf	_ic_ptr& (0+255),w,b
  9691  0002BE  26D9               	addwf	fsr2l,f,c
  9692  0002C0  0101               	movlb	1	; () banked
  9693  0002C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9694  0002C4  22DA               	addwfc	fsr2h,f,c
  9695  0002C6  0E05               	movlw	5
  9696  0002C8  6EDF               	movwf	indf2,c
  9697                           
  9698                           ;my_i2c.c: 319: ic_ptr->error_code = 0x6;
  9699  0002CA  0101               	movlb	1	; () banked
  9700  0002CC  EE20 F00E          	lfsr	2,14
  9701  0002D0  0101               	movlb	1	; () banked
  9702  0002D2  51C5               	movf	_ic_ptr& (0+255),w,b
  9703  0002D4  26D9               	addwf	fsr2l,f,c
  9704  0002D6  0101               	movlb	1	; () banked
  9705  0002D8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9706  0002DA  22DA               	addwfc	fsr2h,f,c
  9707  0002DC  0E06               	movlw	6
  9708  0002DE  D04A               	goto	L7
  9709  0002E0                     i2l3860:
  9710                           
  9711                           ; BSR set to: 1
  9712                           ;my_i2c.c: 325: {
  9713                           ;my_i2c.c: 326: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  9714  0002E0  0101               	movlb	1	; () banked
  9715  0002E2  EE20 F01B          	lfsr	2,27
  9716  0002E6  0101               	movlb	1	; () banked
  9717  0002E8  51C5               	movf	_ic_ptr& (0+255),w,b
  9718  0002EA  26D9               	addwf	fsr2l,f,c
  9719  0002EC  0101               	movlb	1	; () banked
  9720  0002EE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9721  0002F0  22DA               	addwfc	fsr2h,f,c
  9722  0002F2  50DF               	movf	indf2,w,c
  9723  0002F4  0100               	movlb	0	; () banked
  9724  0002F6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9725  0002F8  0101               	movlb	1	; () banked
  9726  0002FA  EE20 F01A          	lfsr	2,26
  9727  0002FE  0101               	movlb	1	; () banked
  9728  000300  51C5               	movf	_ic_ptr& (0+255),w,b
  9729  000302  26D9               	addwf	fsr2l,f,c
  9730  000304  0101               	movlb	1	; () banked
  9731  000306  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9732  000308  22DA               	addwfc	fsr2h,f,c
  9733  00030A  50DF               	movf	indf2,w,c
  9734  00030C  0100               	movlb	0	; () banked
  9735  00030E  5D9A               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  9736  000310  B0D8               	btfsc	status,0,c
  9737  000312  D0F4               	goto	L10
  9738                           
  9739                           ; BSR set to: 0
  9740                           ;my_i2c.c: 327: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  9741  000314  0101               	movlb	1	; () banked
  9742  000316  EE20 F01B          	lfsr	2,27
  9743  00031A  0101               	movlb	1	; () banked
  9744  00031C  51C5               	movf	_ic_ptr& (0+255),w,b
  9745  00031E  26D9               	addwf	fsr2l,f,c
  9746  000320  0101               	movlb	1	; () banked
  9747  000322  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9748  000324  22DA               	addwfc	fsr2h,f,c
  9749  000326  50DF               	movf	indf2,w,c
  9750  000328  0100               	movlb	0	; () banked
  9751  00032A  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9752  00032C  0100               	movlb	0	; () banked
  9753  00032E  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9754  000330  0D01               	mullw	1
  9755  000332  0E10               	movlw	16
  9756  000334  26F3               	addwf	prodl,f,c
  9757  000336  0E00               	movlw	0
  9758  000338  22F4               	addwfc	prodh,f,c
  9759  00033A  50F3               	movf	prodl,w,c
  9760  00033C  0101               	movlb	1	; () banked
  9761  00033E  0101               	movlb	1	; () banked
  9762  000340  25C5               	addwf	_ic_ptr& (0+255),w,b
  9763  000342  6ED9               	movwf	fsr2l,c
  9764  000344  50F4               	movf	prodh,w,c
  9765  000346  0101               	movlb	1	; () banked
  9766  000348  0101               	movlb	1	; () banked
  9767  00034A  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9768  00034C  6EDA               	movwf	fsr2h,c
  9769  00034E  50DF               	movf	indf2,w,c
  9770  000350  6EC9               	movwf	4041,c	;volatile
  9771                           
  9772                           ; BSR set to: 1
  9773                           ;my_i2c.c: 328: ic_ptr->outbufind++;
  9774  000352  0101               	movlb	1	; () banked
  9775  000354  EE20 F01B          	lfsr	2,27
  9776  000358  0101               	movlb	1	; () banked
  9777  00035A  51C5               	movf	_ic_ptr& (0+255),w,b
  9778  00035C  26D9               	addwf	fsr2l,f,c
  9779  00035E  0101               	movlb	1	; () banked
  9780  000360  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9781  000362  22DA               	addwfc	fsr2h,f,c
  9782  000364  2ADF               	incf	indf2,f,c
  9783                           
  9784                           ; BSR set to: 1
  9785                           ;my_i2c.c: 329: data_written = 1;
  9786  000366  0100               	movlb	0	; () banked
  9787  000368  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9788  00036A  0E01               	movlw	1
  9789  00036C  0100               	movlb	0	; () banked
  9790  00036E  0100               	movlb	0	; () banked
  9791  000370  6FB4               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  9792  000372  D0C1               	goto	L8
  9793  000374                     L7:
  9794  000374  6EDF               	movwf	indf2,c
  9795  000376  D0E3               	goto	i2l372
  9796  000378                     i2l392:
  9797                           
  9798                           ; BSR set to: 1
  9799                           ;my_i2c.c: 337: {
  9800                           ;my_i2c.c: 339: if (SSPSTATbits.P == 1) {
  9801  000378  A8C7               	btfss	4039,4,c	;volatile
  9802  00037A  D062               	goto	i2l3888
  9803                           
  9804                           ; BSR set to: 1
  9805                           ;my_i2c.c: 341: ic_ptr->event_count++;
  9806  00037C  0101               	movlb	1	; () banked
  9807  00037E  EE20 F00C          	lfsr	2,12
  9808  000382  0101               	movlb	1	; () banked
  9809  000384  51C5               	movf	_ic_ptr& (0+255),w,b
  9810  000386  26D9               	addwf	fsr2l,f,c
  9811  000388  0101               	movlb	1	; () banked
  9812  00038A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9813  00038C  22DA               	addwfc	fsr2h,f,c
  9814  00038E  2ADF               	incf	indf2,f,c
  9815                           
  9816                           ; BSR set to: 1
  9817                           ;my_i2c.c: 342: if (data_read) {
  9818  000390  0100               	movlb	0	; () banked
  9819  000392  0100               	movlb	0	; () banked
  9820  000394  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9821  000396  B4D8               	btfsc	status,2,c
  9822  000398  D04A               	goto	i2l3884
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;my_i2c.c: 343: if (SSPSTATbits.D_A == 1) {
  9826  00039A  AAC7               	btfss	4039,5,c	;volatile
  9827  00039C  D027               	goto	i2l3882
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;my_i2c.c: 344: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  9831  00039E  0101               	movlb	1	; () banked
  9832  0003A0  EE20 F00A          	lfsr	2,10
  9833  0003A4  0101               	movlb	1	; () banked
  9834  0003A6  51C5               	movf	_ic_ptr& (0+255),w,b
  9835  0003A8  26D9               	addwf	fsr2l,f,c
  9836  0003AA  0101               	movlb	1	; () banked
  9837  0003AC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9838  0003AE  22DA               	addwfc	fsr2h,f,c
  9839  0003B0  50DF               	movf	indf2,w,c
  9840  0003B2  0100               	movlb	0	; () banked
  9841  0003B4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9842  0003B6  0100               	movlb	0	; () banked
  9843  0003B8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9844  0003BA  0D01               	mullw	1
  9845  0003BC  50F3               	movf	prodl,w,c
  9846  0003BE  0101               	movlb	1	; () banked
  9847  0003C0  0101               	movlb	1	; () banked
  9848  0003C2  25C5               	addwf	_ic_ptr& (0+255),w,b
  9849  0003C4  6ED9               	movwf	fsr2l,c
  9850  0003C6  50F4               	movf	prodh,w,c
  9851  0003C8  0101               	movlb	1	; () banked
  9852  0003CA  0101               	movlb	1	; () banked
  9853  0003CC  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9854  0003CE  6EDA               	movwf	fsr2h,c
  9855  0003D0  0100               	movlb	0	; () banked
  9856  0003D2  C0BC  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;my_i2c.c: 345: ic_ptr->buflen++;
  9860  0003D6  0101               	movlb	1	; () banked
  9861  0003D8  EE20 F00A          	lfsr	2,10
  9862  0003DC  0101               	movlb	1	; () banked
  9863  0003DE  51C5               	movf	_ic_ptr& (0+255),w,b
  9864  0003E0  26D9               	addwf	fsr2l,f,c
  9865  0003E2  0101               	movlb	1	; () banked
  9866  0003E4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9867  0003E6  22DA               	addwfc	fsr2h,f,c
  9868  0003E8  2ADF               	incf	indf2,f,c
  9869  0003EA  D021               	goto	i2l3884
  9870  0003EC                     i2l3882:
  9871                           
  9872                           ; BSR set to: 0
  9873                           ;my_i2c.c: 348: ic_ptr->error_count++;
  9874  0003EC  0101               	movlb	1	; () banked
  9875  0003EE  EE20 F00F          	lfsr	2,15
  9876  0003F2  0101               	movlb	1	; () banked
  9877  0003F4  51C5               	movf	_ic_ptr& (0+255),w,b
  9878  0003F6  26D9               	addwf	fsr2l,f,c
  9879  0003F8  0101               	movlb	1	; () banked
  9880  0003FA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9881  0003FC  22DA               	addwfc	fsr2h,f,c
  9882  0003FE  2ADF               	incf	indf2,f,c
  9883                           
  9884                           ;my_i2c.c: 349: ic_ptr->error_code = 0x6;
  9885  000400  0101               	movlb	1	; () banked
  9886  000402  EE20 F00E          	lfsr	2,14
  9887  000406  0101               	movlb	1	; () banked
  9888  000408  51C5               	movf	_ic_ptr& (0+255),w,b
  9889  00040A  26D9               	addwf	fsr2l,f,c
  9890  00040C  0101               	movlb	1	; () banked
  9891  00040E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9892  000410  22DA               	addwfc	fsr2h,f,c
  9893  000412  0E06               	movlw	6
  9894  000414  6EDF               	movwf	indf2,c
  9895                           
  9896                           ;my_i2c.c: 350: ic_ptr->status = 0x5;
  9897  000416  0101               	movlb	1	; () banked
  9898  000418  EE20 F00D          	lfsr	2,13
  9899  00041C  0101               	movlb	1	; () banked
  9900  00041E  51C5               	movf	_ic_ptr& (0+255),w,b
  9901  000420  26D9               	addwf	fsr2l,f,c
  9902  000422  0101               	movlb	1	; () banked
  9903  000424  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9904  000426  22DA               	addwfc	fsr2h,f,c
  9905  000428  0E05               	movlw	5
  9906  00042A  6EDF               	movwf	indf2,c
  9907  00042C  D067               	goto	L10
  9908  00042E                     i2l3884:
  9909                           
  9910                           ;my_i2c.c: 353: msg_ready = 1;
  9911  00042E  0100               	movlb	0	; () banked
  9912  000430  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9913  000432  0E01               	movlw	1
  9914  000434  0100               	movlb	0	; () banked
  9915  000436  0100               	movlb	0	; () banked
  9916  000438  6FBE               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  9917  00043A  0100               	movlb	0	; () banked
  9918  00043C  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9919                           
  9920                           ; BSR set to: 0
  9921  00043E  D05E               	goto	L10
  9922  000440                     i2l3888:
  9923                           
  9924                           ; BSR set to: 1
  9925  000440  0100               	movlb	0	; () banked
  9926  000442  0100               	movlb	0	; () banked
  9927  000444  51C1               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  9928  000446  B4D8               	btfsc	status,2,c
  9929  000448  D07A               	goto	i2l372
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;my_i2c.c: 357: ic_ptr->event_count++;
  9933  00044A  0101               	movlb	1	; () banked
  9934  00044C  EE20 F00C          	lfsr	2,12
  9935  000450  0101               	movlb	1	; () banked
  9936  000452  51C5               	movf	_ic_ptr& (0+255),w,b
  9937  000454  26D9               	addwf	fsr2l,f,c
  9938  000456  0101               	movlb	1	; () banked
  9939  000458  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9940  00045A  22DA               	addwfc	fsr2h,f,c
  9941  00045C  2ADF               	incf	indf2,f,c
  9942                           
  9943                           ; BSR set to: 1
  9944                           ;my_i2c.c: 358: if (SSPSTATbits.D_A == 1) {
  9945  00045E  AAC7               	btfss	4039,5,c	;volatile
  9946  000460  D027               	goto	i2l400
  9947                           
  9948                           ; BSR set to: 1
  9949                           ;my_i2c.c: 359: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  9950  000462  0101               	movlb	1	; () banked
  9951  000464  EE20 F00A          	lfsr	2,10
  9952  000468  0101               	movlb	1	; () banked
  9953  00046A  51C5               	movf	_ic_ptr& (0+255),w,b
  9954  00046C  26D9               	addwf	fsr2l,f,c
  9955  00046E  0101               	movlb	1	; () banked
  9956  000470  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9957  000472  22DA               	addwfc	fsr2h,f,c
  9958  000474  50DF               	movf	indf2,w,c
  9959  000476  0100               	movlb	0	; () banked
  9960  000478  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
  9961  00047A  0100               	movlb	0	; () banked
  9962  00047C  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
  9963  00047E  0D01               	mullw	1
  9964  000480  50F3               	movf	prodl,w,c
  9965  000482  0101               	movlb	1	; () banked
  9966  000484  0101               	movlb	1	; () banked
  9967  000486  25C5               	addwf	_ic_ptr& (0+255),w,b
  9968  000488  6ED9               	movwf	fsr2l,c
  9969  00048A  50F4               	movf	prodh,w,c
  9970  00048C  0101               	movlb	1	; () banked
  9971  00048E  0101               	movlb	1	; () banked
  9972  000490  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  9973  000492  6EDA               	movwf	fsr2h,c
  9974  000494  0100               	movlb	0	; () banked
  9975  000496  C0BC  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;my_i2c.c: 360: ic_ptr->buflen++;
  9979  00049A  0101               	movlb	1	; () banked
  9980  00049C  EE20 F00A          	lfsr	2,10
  9981  0004A0  0101               	movlb	1	; () banked
  9982  0004A2  51C5               	movf	_ic_ptr& (0+255),w,b
  9983  0004A4  26D9               	addwf	fsr2l,f,c
  9984  0004A6  0101               	movlb	1	; () banked
  9985  0004A8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
  9986  0004AA  22DA               	addwfc	fsr2h,f,c
  9987  0004AC  2ADF               	incf	indf2,f,c
  9988                           
  9989                           ;my_i2c.c: 361: } else {
  9990  0004AE  D047               	goto	i2l372
  9991  0004B0                     i2l400:
  9992                           
  9993                           ; BSR set to: 1
  9994                           ;my_i2c.c: 362: if (SSPSTATbits.R_W == 1) {
  9995  0004B0  A4C7               	btfss	4039,2,c	;volatile
  9996  0004B2  D6B6               	goto	i2l3840
  9997                           
  9998                           ; BSR set to: 1
  9999                           ;my_i2c.c: 363: ic_ptr->status = 0x8;
 10000  0004B4  0101               	movlb	1	; () banked
 10001  0004B6  EE20 F00D          	lfsr	2,13
 10002  0004BA  0101               	movlb	1	; () banked
 10003  0004BC  51C5               	movf	_ic_ptr& (0+255),w,b
 10004  0004BE  26D9               	addwf	fsr2l,f,c
 10005  0004C0  0101               	movlb	1	; () banked
 10006  0004C2  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10007  0004C4  22DA               	addwfc	fsr2h,f,c
 10008  0004C6  0E08               	movlw	8
 10009  0004C8  6EDF               	movwf	indf2,c
 10010                           
 10011                           ; BSR set to: 1
 10012                           ;my_i2c.c: 364: msg_ready = 1;
 10013  0004CA  0100               	movlb	0	; () banked
 10014  0004CC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10015  0004CE  0E01               	movlw	1
 10016  0004D0  0100               	movlb	0	; () banked
 10017  0004D2  0100               	movlb	0	; () banked
 10018  0004D4  6FBE               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
 10019  0004D6  0100               	movlb	0	; () banked
 10020  0004D8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10021  0004DA                     L11:
 10022                           
 10023                           ; BSR set to: 0
 10024                           ;my_i2c.c: 365: msg_to_send = 1;
 10025  0004DA  0100               	movlb	0	; () banked
 10026  0004DC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10027  0004DE  0E01               	movlw	1
 10028  0004E0  0100               	movlb	0	; () banked
 10029  0004E2  0100               	movlb	0	; () banked
 10030  0004E4  6FBD               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
 10031  0004E6  0100               	movlb	0	; () banked
 10032  0004E8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;my_i2c.c: 367: data_read = 0;
 10036  0004EA  0100               	movlb	0	; () banked
 10037  0004EC  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10038  0004EE  0E00               	movlw	0
 10039  0004F0  0100               	movlb	0	; () banked
 10040  0004F2  0100               	movlb	0	; () banked
 10041  0004F4  6FC1               	movwf	i2c_slave_int_handler@data_read& (0+255),b
 10042  0004F6                     L8:
 10043  0004F6  0100               	movlb	0	; () banked
 10044  0004F8  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10045                           
 10046                           ;my_i2c.c: 368: } else {
 10047  0004FA  D021               	goto	i2l372
 10048  0004FC                     L10:
 10049                           
 10050                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
 10051  0004FC  0101               	movlb	1	; () banked
 10052  0004FE  EE20 F00D          	lfsr	2,13
 10053  000502  0101               	movlb	1	; () banked
 10054  000504  51C5               	movf	_ic_ptr& (0+255),w,b
 10055  000506  26D9               	addwf	fsr2l,f,c
 10056  000508  0101               	movlb	1	; () banked
 10057  00050A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10058  00050C  22DA               	addwfc	fsr2h,f,c
 10059  00050E  0E05               	movlw	5
 10060  000510  D731               	goto	L7
 10061  000512                     i2l3910:
 10062  000512  0101               	movlb	1	; () banked
 10063  000514  EE20 F00D          	lfsr	2,13
 10064  000518  0101               	movlb	1	; () banked
 10065  00051A  51C5               	movf	_ic_ptr& (0+255),w,b
 10066  00051C  26D9               	addwf	fsr2l,f,c
 10067  00051E  0101               	movlb	1	; () banked
 10068  000520  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10069  000522  22DA               	addwfc	fsr2h,f,c
 10070  000524  50DF               	movf	indf2,w,c
 10071                           
 10072                           ; Switch size 1, requested type "space"
 10073                           ; Number of cases is 4, Range of values is 5 to 8
 10074                           ; switch strategies available:
 10075                           ; Name         Instructions Cycles
 10076                           ; simple_byte           13     7 (average)
 10077                           ;	Chosen strategy is simple_byte
 10078  000526  0A05               	xorlw	5	; case 5
 10079  000528  B4D8               	btfsc	status,2,c
 10080  00052A  D63C               	goto	i2l374
 10081  00052C  0A03               	xorlw	3	; case 6
 10082  00052E  B4D8               	btfsc	status,2,c
 10083  000530  D65B               	goto	i2l378
 10084  000532  0A01               	xorlw	1	; case 7
 10085  000534  B4D8               	btfsc	status,2,c
 10086  000536  D720               	goto	i2l392
 10087  000538  0A0F               	xorlw	15	; case 8
 10088  00053A  B4D8               	btfsc	status,2,c
 10089  00053C  D6D1               	goto	i2l3860
 10090  00053E                     i2l372:
 10091                           
 10092                           ;my_i2c.c: 378: }
 10093                           ;my_i2c.c: 381: if (data_read || data_written) {
 10094  00053E  0100               	movlb	0	; () banked
 10095  000540  0100               	movlb	0	; () banked
 10096  000542  67C1               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
 10097  000544  D005               	goto	i2l406
 10098                           
 10099                           ; BSR set to: 0
 10100  000546  0100               	movlb	0	; () banked
 10101  000548  0100               	movlb	0	; () banked
 10102  00054A  51B4               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
 10103  00054C  B4D8               	btfsc	status,2,c
 10104  00054E  D002               	goto	i2l3916
 10105  000550                     i2l406:
 10106                           
 10107                           ; BSR set to: 0
 10108                           ;my_i2c.c: 383: if (SSPCON1bits.CKP == 0) {
 10109  000550  A8C6               	btfss	4038,4,c	;volatile
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;my_i2c.c: 384: SSPCON1bits.CKP = 1;
 10113  000552  88C6               	bsf	4038,4,c	;volatile
 10114  000554                     i2l3916:
 10115                           
 10116                           ; BSR set to: 0
 10117                           ;my_i2c.c: 385: }
 10118                           ;my_i2c.c: 386: }
 10119                           ;my_i2c.c: 389: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
 10120  000554  0101               	movlb	1	; () banked
 10121  000556  EE20 F00A          	lfsr	2,10
 10122  00055A  0101               	movlb	1	; () banked
 10123  00055C  51C5               	movf	_ic_ptr& (0+255),w,b
 10124  00055E  26D9               	addwf	fsr2l,f,c
 10125  000560  0101               	movlb	1	; () banked
 10126  000562  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10127  000564  22DA               	addwfc	fsr2h,f,c
 10128  000566  0E08               	movlw	8
 10129  000568  64DF               	cpfsgt	indf2,c
 10130  00056A  D024               	goto	i2l3922
 10131                           
 10132                           ; BSR set to: 1
 10133  00056C  0100               	movlb	0	; () banked
 10134  00056E  0100               	movlb	0	; () banked
 10135  000570  67BE               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
 10136  000572  D020               	goto	i2l3922
 10137                           
 10138                           ; BSR set to: 0
 10139                           ;my_i2c.c: 390: ic_ptr->status = 0x5;
 10140  000574  0101               	movlb	1	; () banked
 10141  000576  EE20 F00D          	lfsr	2,13
 10142  00057A  0101               	movlb	1	; () banked
 10143  00057C  51C5               	movf	_ic_ptr& (0+255),w,b
 10144  00057E  26D9               	addwf	fsr2l,f,c
 10145  000580  0101               	movlb	1	; () banked
 10146  000582  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10147  000584  22DA               	addwfc	fsr2h,f,c
 10148  000586  0E05               	movlw	5
 10149  000588  6EDF               	movwf	indf2,c
 10150                           
 10151                           ;my_i2c.c: 391: ic_ptr->error_count++;
 10152  00058A  0101               	movlb	1	; () banked
 10153  00058C  EE20 F00F          	lfsr	2,15
 10154  000590  0101               	movlb	1	; () banked
 10155  000592  51C5               	movf	_ic_ptr& (0+255),w,b
 10156  000594  26D9               	addwf	fsr2l,f,c
 10157  000596  0101               	movlb	1	; () banked
 10158  000598  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10159  00059A  22DA               	addwfc	fsr2h,f,c
 10160  00059C  2ADF               	incf	indf2,f,c
 10161                           
 10162                           ;my_i2c.c: 392: ic_ptr->error_code = 0x7;
 10163  00059E  0101               	movlb	1	; () banked
 10164  0005A0  EE20 F00E          	lfsr	2,14
 10165  0005A4  0101               	movlb	1	; () banked
 10166  0005A6  51C5               	movf	_ic_ptr& (0+255),w,b
 10167  0005A8  26D9               	addwf	fsr2l,f,c
 10168  0005AA  0101               	movlb	1	; () banked
 10169  0005AC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10170  0005AE  22DA               	addwfc	fsr2h,f,c
 10171  0005B0  0E07               	movlw	7
 10172  0005B2  6EDF               	movwf	indf2,c
 10173  0005B4                     i2l3922:
 10174                           
 10175                           ;my_i2c.c: 393: }
 10176                           ;my_i2c.c: 395: if (msg_ready) {
 10177  0005B4  0100               	movlb	0	; () banked
 10178  0005B6  0100               	movlb	0	; () banked
 10179  0005B8  51BE               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
 10180  0005BA  B4D8               	btfsc	status,2,c
 10181  0005BC  D048               	goto	i2l3930
 10182                           
 10183                           ; BSR set to: 0
 10184                           ;my_i2c.c: 396: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
 10185  0005BE  0101               	movlb	1	; () banked
 10186  0005C0  EE20 F00C          	lfsr	2,12
 10187  0005C4  0101               	movlb	1	; () banked
 10188  0005C6  51C5               	movf	_ic_ptr& (0+255),w,b
 10189  0005C8  26D9               	addwf	fsr2l,f,c
 10190  0005CA  0101               	movlb	1	; () banked
 10191  0005CC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10192  0005CE  22DA               	addwfc	fsr2h,f,c
 10193  0005D0  0101               	movlb	1	; () banked
 10194  0005D2  EE10 F00A          	lfsr	1,10
 10195  0005D6  0101               	movlb	1	; () banked
 10196  0005D8  51C5               	movf	_ic_ptr& (0+255),w,b
 10197  0005DA  26E1               	addwf	fsr1l,f,c
 10198  0005DC  0101               	movlb	1	; () banked
 10199  0005DE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10200  0005E0  22E2               	addwfc	fsr1h,f,c
 10201  0005E2  50E7               	movf	indf1,w,c
 10202  0005E4  0100               	movlb	0	; () banked
 10203  0005E6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10204  0005E8  0100               	movlb	0	; () banked
 10205  0005EA  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10206  0005EC  0D01               	mullw	1
 10207  0005EE  50F3               	movf	prodl,w,c
 10208  0005F0  0101               	movlb	1	; () banked
 10209  0005F2  0101               	movlb	1	; () banked
 10210  0005F4  25C5               	addwf	_ic_ptr& (0+255),w,b
 10211  0005F6  6EE1               	movwf	fsr1l,c
 10212  0005F8  50F4               	movf	prodh,w,c
 10213  0005FA  0101               	movlb	1	; () banked
 10214  0005FC  0101               	movlb	1	; () banked
 10215  0005FE  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
 10216  000600  6EE2               	movwf	fsr1h,c
 10217  000602  CFDF FFE7          	movff	indf2,indf1
 10218                           
 10219                           ; BSR set to: 1
 10220                           ;my_i2c.c: 397: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
 10221  000606  0100               	movlb	0	; () banked
 10222  000608  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10223  00060A  0E28               	movlw	40
 10224  00060C  0100               	movlb	0	; () banked
 10225  00060E  0100               	movlb	0	; () banked
 10226  000610  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
 10227  000612  0100               	movlb	0	; () banked
 10228  000614  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10229  000616  0101               	movlb	1	; () banked
 10230  000618  0100               	movlb	0	; () banked
 10231  00061A  C1C6  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
 10232  00061E  0101               	movlb	1	; () banked
 10233  000620  0100               	movlb	0	; () banked
 10234  000622  C1C5  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
 10235  000626  0101               	movlb	1	; () banked
 10236  000628  EE20 F00A          	lfsr	2,10
 10237  00062C  0101               	movlb	1	; () banked
 10238  00062E  51C5               	movf	_ic_ptr& (0+255),w,b
 10239  000630  26D9               	addwf	fsr2l,f,c
 10240  000632  0101               	movlb	1	; () banked
 10241  000634  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10242  000636  22DA               	addwfc	fsr2h,f,c
 10243  000638  50DF               	movf	indf2,w,c
 10244  00063A  0100               	movlb	0	; () banked
 10245  00063C  6F9B               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
 10246  00063E  0100               	movlb	0	; () banked
 10247  000640  299B               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
 10248  000642  ECDF  F015         	call	_ToMainHigh_sendmsg
 10249                           
 10250                           ;my_i2c.c: 398: ic_ptr->buflen = 0;
 10251  000646  0101               	movlb	1	; () banked
 10252  000648  EE20 F00A          	lfsr	2,10
 10253  00064C  D04B               	goto	L9
 10254  00064E                     i2l3930:
 10255  00064E  0101               	movlb	1	; () banked
 10256  000650  EE20 F00F          	lfsr	2,15
 10257  000654  0101               	movlb	1	; () banked
 10258  000656  51C5               	movf	_ic_ptr& (0+255),w,b
 10259  000658  26D9               	addwf	fsr2l,f,c
 10260  00065A  0101               	movlb	1	; () banked
 10261  00065C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10262  00065E  22DA               	addwfc	fsr2h,f,c
 10263  000660  50DF               	movf	indf2,w,c
 10264  000662  B4D8               	btfsc	status,2,c
 10265  000664  D047               	goto	i2l3938
 10266                           
 10267                           ; BSR set to: 1
 10268                           ;my_i2c.c: 400: error_buf[0] = ic_ptr->error_count;
 10269  000666  0101               	movlb	1	; () banked
 10270  000668  EE20 F00F          	lfsr	2,15
 10271  00066C  0101               	movlb	1	; () banked
 10272  00066E  51C5               	movf	_ic_ptr& (0+255),w,b
 10273  000670  26D9               	addwf	fsr2l,f,c
 10274  000672  0101               	movlb	1	; () banked
 10275  000674  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10276  000676  22DA               	addwfc	fsr2h,f,c
 10277  000678  50DF               	movf	indf2,w,c
 10278  00067A  0100               	movlb	0	; () banked
 10279  00067C  0100               	movlb	0	; () banked
 10280  00067E  6FB1               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
 10281                           
 10282                           ;my_i2c.c: 401: error_buf[1] = ic_ptr->error_code;
 10283  000680  0101               	movlb	1	; () banked
 10284  000682  EE20 F00E          	lfsr	2,14
 10285  000686  0101               	movlb	1	; () banked
 10286  000688  51C5               	movf	_ic_ptr& (0+255),w,b
 10287  00068A  26D9               	addwf	fsr2l,f,c
 10288  00068C  0101               	movlb	1	; () banked
 10289  00068E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10290  000690  22DA               	addwfc	fsr2h,f,c
 10291  000692  50DF               	movf	indf2,w,c
 10292  000694  0100               	movlb	0	; () banked
 10293  000696  0100               	movlb	0	; () banked
 10294  000698  6FB2               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
 10295                           
 10296                           ;my_i2c.c: 402: error_buf[2] = ic_ptr->event_count;
 10297  00069A  0101               	movlb	1	; () banked
 10298  00069C  EE20 F00C          	lfsr	2,12
 10299  0006A0  0101               	movlb	1	; () banked
 10300  0006A2  51C5               	movf	_ic_ptr& (0+255),w,b
 10301  0006A4  26D9               	addwf	fsr2l,f,c
 10302  0006A6  0101               	movlb	1	; () banked
 10303  0006A8  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10304  0006AA  22DA               	addwfc	fsr2h,f,c
 10305  0006AC  50DF               	movf	indf2,w,c
 10306  0006AE  0100               	movlb	0	; () banked
 10307  0006B0  0100               	movlb	0	; () banked
 10308  0006B2  6FB3               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
 10309                           
 10310                           ; BSR set to: 0
 10311                           ;my_i2c.c: 403: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
 10312  0006B4  0100               	movlb	0	; () banked
 10313  0006B6  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10314  0006B8  0E29               	movlw	41
 10315  0006BA  0100               	movlb	0	; () banked
 10316  0006BC  0100               	movlb	0	; () banked
 10317  0006BE  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
 10318  0006C0  0100               	movlb	0	; () banked
 10319  0006C2  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10320  0006C4  0100               	movlb	0	; () banked
 10321  0006C6  0E00               	movlw	high i2c_slave_int_handler@error_buf
 10322  0006C8  0100               	movlb	0	; () banked
 10323  0006CA  0100               	movlb	0	; () banked
 10324  0006CC  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
 10325  0006CE  0100               	movlb	0	; () banked
 10326  0006D0  0EB1               	movlw	low i2c_slave_int_handler@error_buf
 10327  0006D2  0100               	movlb	0	; () banked
 10328  0006D4  0100               	movlb	0	; () banked
 10329  0006D6  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
 10330  0006D8  0E03               	movlw	3
 10331  0006DA  ECDF  F015         	call	_ToMainHigh_sendmsg
 10332                           
 10333                           ;my_i2c.c: 404: ic_ptr->error_count = 0;
 10334  0006DE  0101               	movlb	1	; () banked
 10335  0006E0  EE20 F00F          	lfsr	2,15
 10336  0006E4                     L9:
 10337  0006E4  0101               	movlb	1	; () banked
 10338  0006E6  51C5               	movf	_ic_ptr& (0+255),w,b
 10339  0006E8  26D9               	addwf	fsr2l,f,c
 10340  0006EA  0101               	movlb	1	; () banked
 10341  0006EC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10342  0006EE  22DA               	addwfc	fsr2h,f,c
 10343  0006F0  0E00               	movlw	0
 10344  0006F2  6EDF               	movwf	indf2,c
 10345  0006F4                     i2l3938:
 10346                           
 10347                           ; BSR set to: 1
 10348                           ;my_i2c.c: 405: }
 10349                           ;my_i2c.c: 406: if (msg_to_send) {
 10350  0006F4  0100               	movlb	0	; () banked
 10351  0006F6  0100               	movlb	0	; () banked
 10352  0006F8  51BD               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
 10353  0006FA  B4D8               	btfsc	status,2,c
 10354  0006FC  0012               	return	
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;my_i2c.c: 407: int length = 6;
 10358  0006FE  0E00               	movlw	0
 10359  000700  0100               	movlb	0	; () banked
 10360  000702  0100               	movlb	0	; () banked
 10361  000704  6FC0               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
 10362  000706  0E06               	movlw	6
 10363  000708  0100               	movlb	0	; () banked
 10364  00070A  6FBF               	movwf	i2c_slave_int_handler@length& (0+255),b
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;my_i2c.c: 411: if(ic_ptr->buffer[0] == 0xAA){
 10368  00070C  0EAA               	movlw	170
 10369  00070E  C1C5  FFD9         	movff	_ic_ptr,fsr2l
 10370  000712  C1C6  FFDA         	movff	_ic_ptr+1,fsr2h
 10371  000716  62DF               	cpfseq	indf2,c
 10372  000718  D045               	goto	i2l3960
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;my_i2c.c: 414: unsigned char messageType = 0x01, bitmask = 0x17, checksum;
 10376  00071A  0100               	movlb	0	; () banked
 10377  00071C  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10378  00071E  0E01               	movlw	1
 10379  000720  0100               	movlb	0	; () banked
 10380  000722  0100               	movlb	0	; () banked
 10381  000724  6FAE               	movwf	i2c_slave_int_handler@messageType& (0+255),b
 10382  000726  0100               	movlb	0	; () banked
 10383  000728  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10384  00072A  0100               	movlb	0	; () banked
 10385  00072C  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10386  00072E  0E17               	movlw	23
 10387  000730  0100               	movlb	0	; () banked
 10388  000732  0100               	movlb	0	; () banked
 10389  000734  6FAF               	movwf	i2c_slave_int_handler@bitmask& (0+255),b
 10390  000736  0100               	movlb	0	; () banked
 10391  000738  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10392                           
 10393                           ; BSR set to: 0
 10394                           ;my_i2c.c: 417: unsigned char message[6];
 10395                           ;my_i2c.c: 420: message[0] = messageType;
 10396  00073A  C0AE  F0B6         	movff	i2c_slave_int_handler@messageType,i2c_slave_int_handler@message
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;my_i2c.c: 421: message[1] = adcbuffer[1];
 10400  00073E  C167  F0B7         	movff	_adcbuffer+1,i2c_slave_int_handler@message+1
 10401                           
 10402                           ; BSR set to: 0
 10403                           ;my_i2c.c: 422: message[2] = adcbuffer[2];
 10404  000742  C168  F0B8         	movff	_adcbuffer+2,i2c_slave_int_handler@message+2
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;my_i2c.c: 423: message[3] = adcbuffer[3];
 10408  000746  C169  F0B9         	movff	_adcbuffer+3,i2c_slave_int_handler@message+3
 10409                           
 10410                           ; BSR set to: 0
 10411                           ;my_i2c.c: 426: checksum = message[1] + message[2] + message[3];
 10412  00074A  0100               	movlb	0	; () banked
 10413  00074C  0100               	movlb	0	; () banked
 10414  00074E  51B7               	movf	(i2c_slave_int_handler@message+1)& (0+255),w,b
 10415  000750  0100               	movlb	0	; () banked
 10416  000752  0100               	movlb	0	; () banked
 10417  000754  25B8               	addwf	(i2c_slave_int_handler@message+2)& (0+255),w,b
 10418  000756  0100               	movlb	0	; () banked
 10419  000758  0100               	movlb	0	; () banked
 10420  00075A  25B9               	addwf	(i2c_slave_int_handler@message+3)& (0+255),w,b
 10421  00075C  0100               	movlb	0	; () banked
 10422  00075E  0100               	movlb	0	; () banked
 10423  000760  6FB0               	movwf	i2c_slave_int_handler@checksum& (0+255),b
 10424                           
 10425                           ; BSR set to: 0
 10426                           ;my_i2c.c: 427: message[4] = checksum & bitmask;
 10427  000762  0100               	movlb	0	; () banked
 10428  000764  0100               	movlb	0	; () banked
 10429  000766  51B0               	movf	i2c_slave_int_handler@checksum& (0+255),w,b
 10430  000768  0100               	movlb	0	; () banked
 10431  00076A  0100               	movlb	0	; () banked
 10432  00076C  15AF               	andwf	i2c_slave_int_handler@bitmask& (0+255),w,b
 10433  00076E  0100               	movlb	0	; () banked
 10434  000770  0100               	movlb	0	; () banked
 10435  000772  6FBA               	movwf	(i2c_slave_int_handler@message+4)& (0+255),b
 10436                           
 10437                           ;my_i2c.c: 428: message[5] = 0x00;
 10438  000774  0100               	movlb	0	; () banked
 10439  000776  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10440  000778  0E00               	movlw	0
 10441  00077A  0100               	movlb	0	; () banked
 10442  00077C  0100               	movlb	0	; () banked
 10443  00077E  6FBB               	movwf	(i2c_slave_int_handler@message+5)& (0+255),b
 10444  000780  0100               	movlb	0	; () banked
 10445  000782  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10446                           
 10447                           ; BSR set to: 0
 10448                           ;my_i2c.c: 430: start_i2c_slave_reply(length, message);
 10449  000784  0100               	movlb	0	; () banked
 10450  000786  0E00               	movlw	high i2c_slave_int_handler@message
 10451  000788  0100               	movlb	0	; () banked
 10452  00078A  0100               	movlb	0	; () banked
 10453  00078C  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
 10454  00078E  0100               	movlb	0	; () banked
 10455  000790  0EB6               	movlw	low i2c_slave_int_handler@message
 10456  000792  0100               	movlb	0	; () banked
 10457  000794  0100               	movlb	0	; () banked
 10458  000796  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
 10459  000798  0100               	movlb	0	; () banked
 10460  00079A  0100               	movlb	0	; () banked
 10461  00079C  51BF               	movf	i2c_slave_int_handler@length& (0+255),w,b
 10462  00079E  ECD1  F00A         	call	_start_i2c_slave_reply
 10463                           
 10464                           ;my_i2c.c: 432: } else if(ic_ptr->buffer[0] == 0xBA || ic_ptr->buffer[0] == 0xBD){
 10465  0007A2  D0E3               	goto	i2l3994
 10466  0007A4                     i2l3960:
 10467  0007A4  C1C5  FFD9         	movff	_ic_ptr,fsr2l
 10468  0007A8  C1C6  FFDA         	movff	_ic_ptr+1,fsr2h
 10469  0007AC  50DF               	movf	indf2,w,c
 10470  0007AE  0ABA               	xorlw	186
 10471  0007B0  B4D8               	btfsc	status,2,c
 10472  0007B2  D007               	goto	i2l3964
 10473  0007B4  0EBD               	movlw	189
 10474  0007B6  C1C5  FFD9         	movff	_ic_ptr,fsr2l
 10475  0007BA  C1C6  FFDA         	movff	_ic_ptr+1,fsr2h
 10476  0007BE  62DF               	cpfseq	indf2,c
 10477  0007C0  D05C               	goto	i2l3974
 10478  0007C2                     i2l3964:
 10479                           
 10480                           ;my_i2c.c: 434: unsigned char ack[6] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 10481  0007C2  EE20  F0D0         	lfsr	2,i2c_slave_int_handler@F5143
 10482  0007C6  EE10  F09C         	lfsr	1,i2c_slave_int_handler@ack
 10483  0007CA  0E06               	movlw	6
 10484  0007CC                     i2u299_41:
 10485  0007CC  CFDE FFE6          	movff	postinc2,postinc1
 10486  0007D0  2EE8               	decfsz	wreg,f,c
 10487  0007D2  D7FC               	goto	i2u299_41
 10488                           
 10489                           ;my_i2c.c: 435: start_i2c_slave_reply(length, ack);
 10490  0007D4  0100               	movlb	0	; () banked
 10491  0007D6  0E00               	movlw	high i2c_slave_int_handler@ack
 10492  0007D8  0100               	movlb	0	; () banked
 10493  0007DA  0100               	movlb	0	; () banked
 10494  0007DC  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
 10495  0007DE  0100               	movlb	0	; () banked
 10496  0007E0  0E9C               	movlw	low i2c_slave_int_handler@ack
 10497  0007E2  0100               	movlb	0	; () banked
 10498  0007E4  0100               	movlb	0	; () banked
 10499  0007E6  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
 10500  0007E8  0100               	movlb	0	; () banked
 10501  0007EA  0100               	movlb	0	; () banked
 10502  0007EC  51BF               	movf	i2c_slave_int_handler@length& (0+255),w,b
 10503  0007EE  ECD1  F00A         	call	_start_i2c_slave_reply
 10504                           
 10505                           ;my_i2c.c: 436: rightEncoder = 0;
 10506  0007F2  0100               	movlb	0	; () banked
 10507  0007F4  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10508  0007F6  0E00               	movlw	0
 10509  0007F8  0100               	movlb	0	; () banked
 10510  0007FA  0100               	movlb	0	; () banked
 10511  0007FC  6FDE               	movwf	_rightEncoder& (0+255),b
 10512  0007FE  0100               	movlb	0	; () banked
 10513  000800  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10514                           
 10515                           ; BSR set to: 0
 10516                           ;my_i2c.c: 437: leftEncoder = 0;
 10517  000802  0100               	movlb	0	; () banked
 10518  000804  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10519  000806  0E00               	movlw	0
 10520  000808  0100               	movlb	0	; () banked
 10521  00080A  0100               	movlb	0	; () banked
 10522  00080C  6FDD               	movwf	_leftEncoder& (0+255),b
 10523  00080E  0100               	movlb	0	; () banked
 10524  000810  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10525                           
 10526                           ; BSR set to: 0
 10527                           ;my_i2c.c: 438: motorMove(ic_ptr->buffer[1], ic_ptr->buffer[2], ic_ptr->buffer[3], ic_pt
      +                          r->buffer[4]);
 10528  000812  0101               	movlb	1	; () banked
 10529  000814  EE20 F002          	lfsr	2,2
 10530  000818  0101               	movlb	1	; () banked
 10531  00081A  51C5               	movf	_ic_ptr& (0+255),w,b
 10532  00081C  26D9               	addwf	fsr2l,f,c
 10533  00081E  0101               	movlb	1	; () banked
 10534  000820  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10535  000822  22DA               	addwfc	fsr2h,f,c
 10536  000824  50DF               	movf	indf2,w,c
 10537  000826  0100               	movlb	0	; () banked
 10538  000828  0100               	movlb	0	; () banked
 10539  00082A  6F85               	movwf	i2motorMove@right& (0+255),b
 10540  00082C  0101               	movlb	1	; () banked
 10541  00082E  EE20 F003          	lfsr	2,3
 10542  000832  0101               	movlb	1	; () banked
 10543  000834  51C5               	movf	_ic_ptr& (0+255),w,b
 10544  000836  26D9               	addwf	fsr2l,f,c
 10545  000838  0101               	movlb	1	; () banked
 10546  00083A  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10547  00083C  22DA               	addwfc	fsr2h,f,c
 10548  00083E  50DF               	movf	indf2,w,c
 10549  000840  0100               	movlb	0	; () banked
 10550  000842  0100               	movlb	0	; () banked
 10551  000844  6F86               	movwf	i2motorMove@leftDistance& (0+255),b
 10552  000846  0101               	movlb	1	; () banked
 10553  000848  EE20 F004          	lfsr	2,4
 10554  00084C  0101               	movlb	1	; () banked
 10555  00084E  51C5               	movf	_ic_ptr& (0+255),w,b
 10556  000850  26D9               	addwf	fsr2l,f,c
 10557  000852  0101               	movlb	1	; () banked
 10558  000854  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10559  000856  22DA               	addwfc	fsr2h,f,c
 10560  000858  50DF               	movf	indf2,w,c
 10561  00085A  0100               	movlb	0	; () banked
 10562  00085C  0100               	movlb	0	; () banked
 10563  00085E  6F87               	movwf	i2motorMove@rightDistance& (0+255),b
 10564  000860  0101               	movlb	1	; () banked
 10565  000862  EE20 F001          	lfsr	2,1
 10566  000866  0101               	movlb	1	; () banked
 10567  000868  51C5               	movf	_ic_ptr& (0+255),w,b
 10568  00086A  26D9               	addwf	fsr2l,f,c
 10569  00086C  0101               	movlb	1	; () banked
 10570  00086E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10571  000870  22DA               	addwfc	fsr2h,f,c
 10572  000872  50DF               	movf	indf2,w,c
 10573  000874  ECC9  F00E         	call	i2_motorMove
 10574                           
 10575                           ;my_i2c.c: 439: }
 10576  000878  D078               	goto	i2l3994
 10577  00087A                     i2l3974:
 10578                           
 10579                           ;my_i2c.c: 440: else if(ic_ptr->buffer[0] == 0xCA) {
 10580  00087A  0ECA               	movlw	202
 10581  00087C  C1C5  FFD9         	movff	_ic_ptr,fsr2l
 10582  000880  C1C6  FFDA         	movff	_ic_ptr+1,fsr2h
 10583  000884  62DF               	cpfseq	indf2,c
 10584  000886  D01F               	goto	i2l3986
 10585                           
 10586                           ;my_i2c.c: 441: unsigned char dist[6] = {0x04, 0x00, 0x00, 0x00, 0x00, 0x00};
 10587  000888  EE20  F0E0         	lfsr	2,i2c_slave_int_handler@F5145
 10588  00088C  EE10  F0A8         	lfsr	1,i2c_slave_int_handler@dist
 10589  000890  0E06               	movlw	6
 10590  000892                     i2u301_41:
 10591  000892  CFDE FFE6          	movff	postinc2,postinc1
 10592  000896  2EE8               	decfsz	wreg,f,c
 10593  000898  D7FC               	goto	i2u301_41
 10594                           
 10595                           ;my_i2c.c: 442: dist[1] = stopCond;
 10596  00089A  C0DF  F0A9         	movff	_stopCond,i2c_slave_int_handler@dist+1
 10597                           
 10598                           ;my_i2c.c: 443: dist[2] = leftEncoder;
 10599  00089E  C0DD  F0AA         	movff	_leftEncoder,i2c_slave_int_handler@dist+2
 10600                           
 10601                           ;my_i2c.c: 444: dist[3] = rightEncoder;
 10602  0008A2  C0DE  F0AB         	movff	_rightEncoder,i2c_slave_int_handler@dist+3
 10603                           
 10604                           ;my_i2c.c: 445: start_i2c_slave_reply(length, dist);
 10605  0008A6  0100               	movlb	0	; () banked
 10606  0008A8  0E00               	movlw	high i2c_slave_int_handler@dist
 10607  0008AA  0100               	movlb	0	; () banked
 10608  0008AC  0100               	movlb	0	; () banked
 10609  0008AE  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
 10610  0008B0  0100               	movlb	0	; () banked
 10611  0008B2  0EA8               	movlw	low i2c_slave_int_handler@dist
 10612  0008B4  0100               	movlb	0	; () banked
 10613  0008B6  0100               	movlb	0	; () banked
 10614  0008B8  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
 10615  0008BA  0100               	movlb	0	; () banked
 10616  0008BC  0100               	movlb	0	; () banked
 10617  0008BE  51BF               	movf	i2c_slave_int_handler@length& (0+255),w,b
 10618  0008C0  ECD1  F00A         	call	_start_i2c_slave_reply
 10619                           
 10620                           ;my_i2c.c: 446: }
 10621  0008C4  D052               	goto	i2l3994
 10622  0008C6                     i2l3986:
 10623                           
 10624                           ;my_i2c.c: 447: else if(ic_ptr->buffer[0] == 0xBC) {
 10625  0008C6  0EBC               	movlw	188
 10626  0008C8  C1C5  FFD9         	movff	_ic_ptr,fsr2l
 10627  0008CC  C1C6  FFDA         	movff	_ic_ptr+1,fsr2h
 10628  0008D0  62DF               	cpfseq	indf2,c
 10629  0008D2  D04B               	goto	i2l3994
 10630                           
 10631                           ;my_i2c.c: 448: unsigned char ack[6] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 10632  0008D4  EE20  F0D6         	lfsr	2,i2c_slave_int_handler@F5147
 10633  0008D8  EE10  F0A2         	lfsr	1,i2c_slave_int_handler@ack_1696
 10634  0008DC  0E06               	movlw	6
 10635  0008DE                     i2u303_41:
 10636  0008DE  CFDE FFE6          	movff	postinc2,postinc1
 10637  0008E2  2EE8               	decfsz	wreg,f,c
 10638  0008E4  D7FC               	goto	i2u303_41
 10639                           
 10640                           ;my_i2c.c: 449: start_i2c_slave_reply(length, ack);
 10641  0008E6  0100               	movlb	0	; () banked
 10642  0008E8  0E00               	movlw	high i2c_slave_int_handler@ack_1696
 10643  0008EA  0100               	movlb	0	; () banked
 10644  0008EC  0100               	movlb	0	; () banked
 10645  0008EE  6F81               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
 10646  0008F0  0100               	movlb	0	; () banked
 10647  0008F2  0EA2               	movlw	low i2c_slave_int_handler@ack_1696
 10648  0008F4  0100               	movlb	0	; () banked
 10649  0008F6  0100               	movlb	0	; () banked
 10650  0008F8  6F80               	movwf	start_i2c_slave_reply@msg& (0+255),b
 10651  0008FA  0100               	movlb	0	; () banked
 10652  0008FC  0100               	movlb	0	; () banked
 10653  0008FE  51BF               	movf	i2c_slave_int_handler@length& (0+255),w,b
 10654  000900  ECD1  F00A         	call	_start_i2c_slave_reply
 10655                           
 10656                           ;my_i2c.c: 450: motorMove(ic_ptr->buffer[1], ic_ptr->buffer[2], ic_ptr->buffer[3], ic_pt
      +                          r->buffer[4]);
 10657  000904  0101               	movlb	1	; () banked
 10658  000906  EE20 F002          	lfsr	2,2
 10659  00090A  0101               	movlb	1	; () banked
 10660  00090C  51C5               	movf	_ic_ptr& (0+255),w,b
 10661  00090E  26D9               	addwf	fsr2l,f,c
 10662  000910  0101               	movlb	1	; () banked
 10663  000912  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10664  000914  22DA               	addwfc	fsr2h,f,c
 10665  000916  50DF               	movf	indf2,w,c
 10666  000918  0100               	movlb	0	; () banked
 10667  00091A  0100               	movlb	0	; () banked
 10668  00091C  6F85               	movwf	i2motorMove@right& (0+255),b
 10669  00091E  0101               	movlb	1	; () banked
 10670  000920  EE20 F003          	lfsr	2,3
 10671  000924  0101               	movlb	1	; () banked
 10672  000926  51C5               	movf	_ic_ptr& (0+255),w,b
 10673  000928  26D9               	addwf	fsr2l,f,c
 10674  00092A  0101               	movlb	1	; () banked
 10675  00092C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10676  00092E  22DA               	addwfc	fsr2h,f,c
 10677  000930  50DF               	movf	indf2,w,c
 10678  000932  0100               	movlb	0	; () banked
 10679  000934  0100               	movlb	0	; () banked
 10680  000936  6F86               	movwf	i2motorMove@leftDistance& (0+255),b
 10681  000938  0101               	movlb	1	; () banked
 10682  00093A  EE20 F004          	lfsr	2,4
 10683  00093E  0101               	movlb	1	; () banked
 10684  000940  51C5               	movf	_ic_ptr& (0+255),w,b
 10685  000942  26D9               	addwf	fsr2l,f,c
 10686  000944  0101               	movlb	1	; () banked
 10687  000946  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10688  000948  22DA               	addwfc	fsr2h,f,c
 10689  00094A  50DF               	movf	indf2,w,c
 10690  00094C  0100               	movlb	0	; () banked
 10691  00094E  0100               	movlb	0	; () banked
 10692  000950  6F87               	movwf	i2motorMove@rightDistance& (0+255),b
 10693  000952  0101               	movlb	1	; () banked
 10694  000954  EE20 F001          	lfsr	2,1
 10695  000958  0101               	movlb	1	; () banked
 10696  00095A  51C5               	movf	_ic_ptr& (0+255),w,b
 10697  00095C  26D9               	addwf	fsr2l,f,c
 10698  00095E  0101               	movlb	1	; () banked
 10699  000960  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 10700  000962  22DA               	addwfc	fsr2h,f,c
 10701  000964  50DF               	movf	indf2,w,c
 10702  000966  ECC9  F00E         	call	i2_motorMove
 10703  00096A                     i2l3994:
 10704                           
 10705                           ;my_i2c.c: 451: }
 10706                           ;my_i2c.c: 452: msg_to_send = 0;
 10707  00096A  0100               	movlb	0	; () banked
 10708  00096C  6F9A               	movwf	??_i2c_slave_int_handler& (0+255),b
 10709  00096E  0E00               	movlw	0
 10710  000970  0100               	movlb	0	; () banked
 10711  000972  0100               	movlb	0	; () banked
 10712  000974  6FBD               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
 10713  000976  0100               	movlb	0	; () banked
 10714  000978  519A               	movf	??_i2c_slave_int_handler& (0+255),w,b
 10715  00097A  0012               	return	
 10716  00097C                     __end_of_i2c_slave_int_handler:
 10717                           	opt stack 0
 10718                           pclatu	equ	0xFFB
 10719                           pclath	equ	0xFFA
 10720                           tblptru	equ	0xFF8
 10721                           tblptrh	equ	0xFF7
 10722                           tblptrl	equ	0xFF6
 10723                           tablat	equ	0xFF5
 10724                           prodh	equ	0xFF4
 10725                           prodl	equ	0xFF3
 10726                           intcon	equ	0xFF2
 10727                           intcon2	equ	0xFF1
 10728                           postinc0	equ	0xFEE
 10729                           fsr0h	equ	0xFEA
 10730                           fsr0l	equ	0xFE9
 10731                           wreg	equ	0xFE8
 10732                           indf1	equ	0xFE7
 10733                           postinc1	equ	0xFE6
 10734                           postdec1	equ	0xFE5
 10735                           fsr1h	equ	0xFE2
 10736                           fsr1l	equ	0xFE1
 10737                           bsr	equ	0xFE0
 10738                           indf2	equ	0xFDF
 10739                           postinc2	equ	0xFDE
 10740                           postdec2	equ	0xFDD
 10741                           fsr2h	equ	0xFDA
 10742                           fsr2l	equ	0xFD9
 10743                           status	equ	0xFD8
 10744                           
 10745 ;; *************** function i2_motorMove *****************
 10746 ;; Defined at:
 10747 ;;		line 5 in file "../src/motor.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;  left            1    wreg     unsigned char 
 10750 ;;  right           1    5[BANK0 ] unsigned char 
 10751 ;;  leftDistance    1    6[BANK0 ] unsigned char 
 10752 ;;  rightDistanc    1    7[BANK0 ] unsigned char 
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;  left            1   11[BANK0 ] unsigned char 
 10755 ;;  motorMove       2    9[BANK0 ] unsigned char [2]
 10756 ;; Return value:  Size  Location     Type
 10757 ;;		None               void
 10758 ;; Registers used:
 10759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10760 ;; Tracked objects:
 10761 ;;		On entry : 0/0
 10762 ;;		On exit  : 0/0
 10763 ;;		Unchanged: 0/0
 10764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10765 ;;      Params:         0       3       0       0       0
 10766 ;;      Locals:         0       3       0       0       0
 10767 ;;      Temps:          0       1       0       0       0
 10768 ;;      Totals:         0       7       0       0       0
 10769 ;;Total ram usage:        7 bytes
 10770 ;; Hardware stack levels used:    1
 10771 ;; Hardware stack levels required when called:    1
 10772 ;; This function calls:
 10773 ;;		i2_WriteTimer0
 10774 ;;		i2_WriteTimer1
 10775 ;;		i2_uart_trans
 10776 ;; This function is called by:
 10777 ;;		_i2c_slave_int_handler
 10778 ;; This function uses a non-reentrant model
 10779 ;;
 10780                           
 10781                           	psect	text57
 10782  001D92                     __ptext57:
 10783                           	opt stack 0
 10784  001D92                     i2_motorMove:
 10785                           	opt stack 17
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;incstack = 0
 10789                           ;i2motorMove@left stored from wreg
 10790  001D92  CFE8 F08B          	movff	wreg,i2motorMove@left
 10791                           
 10792                           ;motor.c: 7: if(leftDistance != 0 && rightDistance != 0){
 10793  001D96  0100               	movlb	0	; () banked
 10794  001D98  0100               	movlb	0	; () banked
 10795  001D9A  5186               	movf	i2motorMove@leftDistance& (0+255),w,b
 10796  001D9C  B4D8               	btfsc	status,2,c
 10797  001D9E  D019               	goto	i2l4268
 10798                           
 10799                           ; BSR set to: 0
 10800  001DA0  0100               	movlb	0	; () banked
 10801  001DA2  0100               	movlb	0	; () banked
 10802  001DA4  5187               	movf	i2motorMove@rightDistance& (0+255),w,b
 10803  001DA6  B4D8               	btfsc	status,2,c
 10804  001DA8  D014               	goto	i2l4268
 10805                           
 10806                           ; BSR set to: 0
 10807                           ;motor.c: 8: leftDistDesired = leftDistance;
 10808  001DAA  C086  F058         	movff	i2motorMove@leftDistance,_leftDistDesired
 10809                           
 10810                           ;motor.c: 9: rightDistDesired = rightDistance;
 10811  001DAE  C087  F059         	movff	i2motorMove@rightDistance,_rightDistDesired
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;motor.c: 10: leftEncoder = 0;
 10815  001DB2  0100               	movlb	0	; () banked
 10816  001DB4  6F88               	movwf	??i2_motorMove& (0+255),b
 10817  001DB6  0E00               	movlw	0
 10818  001DB8  0100               	movlb	0	; () banked
 10819  001DBA  0100               	movlb	0	; () banked
 10820  001DBC  6FDD               	movwf	_leftEncoder& (0+255),b
 10821  001DBE  0100               	movlb	0	; () banked
 10822  001DC0  5188               	movf	??i2_motorMove& (0+255),w,b
 10823                           
 10824                           ;motor.c: 11: rightEncoder = 0;
 10825  001DC2  0100               	movlb	0	; () banked
 10826  001DC4  6F88               	movwf	??i2_motorMove& (0+255),b
 10827  001DC6  0E00               	movlw	0
 10828  001DC8  0100               	movlb	0	; () banked
 10829  001DCA  0100               	movlb	0	; () banked
 10830  001DCC  6FDE               	movwf	_rightEncoder& (0+255),b
 10831  001DCE  0100               	movlb	0	; () banked
 10832  001DD0  5188               	movf	??i2_motorMove& (0+255),w,b
 10833  001DD2                     i2l4268:
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;motor.c: 12: }
 10837                           ;motor.c: 14: if(left != 0x00 && right != 0x00){
 10838  001DD2  0100               	movlb	0	; () banked
 10839  001DD4  0100               	movlb	0	; () banked
 10840  001DD6  518B               	movf	i2motorMove@left& (0+255),w,b
 10841  001DD8  B4D8               	btfsc	status,2,c
 10842  001DDA  D009               	goto	i2l4274
 10843                           
 10844                           ; BSR set to: 0
 10845  001DDC  0100               	movlb	0	; () banked
 10846  001DDE  0100               	movlb	0	; () banked
 10847  001DE0  5185               	movf	i2motorMove@right& (0+255),w,b
 10848  001DE2  B4D8               	btfsc	status,2,c
 10849  001DE4  D004               	goto	i2l4274
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;motor.c: 15: stopCond = 0x00;
 10853  001DE6  0100               	movlb	0	; () banked
 10854  001DE8  6F88               	movwf	??i2_motorMove& (0+255),b
 10855  001DEA  0E00               	movlw	0
 10856  001DEC  D003               	goto	L12
 10857  001DEE                     i2l4274:
 10858                           
 10859                           ; BSR set to: 0
 10860                           ;motor.c: 17: stopCond = 0x01;
 10861  001DEE  0100               	movlb	0	; () banked
 10862  001DF0  6F88               	movwf	??i2_motorMove& (0+255),b
 10863  001DF2  0E01               	movlw	1
 10864  001DF4                     L12:
 10865  001DF4  0100               	movlb	0	; () banked
 10866  001DF6  0100               	movlb	0	; () banked
 10867  001DF8  6FDF               	movwf	_stopCond& (0+255),b
 10868  001DFA  0100               	movlb	0	; () banked
 10869  001DFC  5188               	movf	??i2_motorMove& (0+255),w,b
 10870                           
 10871                           ; BSR set to: 0
 10872                           ;motor.c: 18: }
 10873                           ;motor.c: 21: WriteTimer0(0x7F);
 10874                           
 10875                           ; BSR set to: 0
 10876  001DFE  0E00               	movlw	0
 10877  001E00  0100               	movlb	0	; () banked
 10878  001E02  0100               	movlb	0	; () banked
 10879  001E04  6F81               	movwf	(i2WriteTimer0@timer0+1)& (0+255),b
 10880  001E06  0E7F               	movlw	127
 10881  001E08  0100               	movlb	0	; () banked
 10882  001E0A  6F80               	movwf	i2WriteTimer0@timer0& (0+255),b
 10883  001E0C  ECCC  F016         	call	i2_WriteTimer0	;wreg free
 10884                           
 10885                           ;motor.c: 22: WriteTimer1(0xFF7F);
 10886  001E10  0EFF               	movlw	255
 10887  001E12  0100               	movlb	0	; () banked
 10888  001E14  0100               	movlb	0	; () banked
 10889  001E16  6F81               	movwf	(i2WriteTimer1@timer1+1)& (0+255),b
 10890  001E18  0E7F               	movlw	127
 10891  001E1A  0100               	movlb	0	; () banked
 10892  001E1C  6F80               	movwf	i2WriteTimer1@timer1& (0+255),b
 10893  001E1E  ECC3  F016         	call	i2_WriteTimer1	;wreg free
 10894                           
 10895                           ;motor.c: 25: unsigned char direction[2];
 10896                           ;motor.c: 26: direction[0] = left;
 10897  001E22  C08B  F089         	movff	i2motorMove@left,i2motorMove@direction
 10898                           
 10899                           ;motor.c: 27: direction[1] = right;
 10900  001E26  C085  F08A         	movff	i2motorMove@right,i2motorMove@direction+1
 10901                           
 10902                           ;motor.c: 28: uart_trans(2, direction);
 10903  001E2A  0100               	movlb	0	; () banked
 10904  001E2C  0E00               	movlw	high i2motorMove@direction
 10905  001E2E  0100               	movlb	0	; () banked
 10906  001E30  0100               	movlb	0	; () banked
 10907  001E32  6F81               	movwf	(i2uart_trans@data+1)& (0+255),b
 10908  001E34  0100               	movlb	0	; () banked
 10909  001E36  0E89               	movlw	low i2motorMove@direction
 10910  001E38  0100               	movlb	0	; () banked
 10911  001E3A  0100               	movlb	0	; () banked
 10912  001E3C  6F80               	movwf	i2uart_trans@data& (0+255),b
 10913  001E3E  0E02               	movlw	2
 10914  001E40  EC23  F00F         	call	i2_uart_trans
 10915  001E44  0012               	return	
 10916  001E46                     __end_ofi2_motorMove:
 10917                           	opt stack 0
 10918                           pclatu	equ	0xFFB
 10919                           pclath	equ	0xFFA
 10920                           tblptru	equ	0xFF8
 10921                           tblptrh	equ	0xFF7
 10922                           tblptrl	equ	0xFF6
 10923                           tablat	equ	0xFF5
 10924                           prodh	equ	0xFF4
 10925                           prodl	equ	0xFF3
 10926                           intcon	equ	0xFF2
 10927                           intcon2	equ	0xFF1
 10928                           postinc0	equ	0xFEE
 10929                           fsr0h	equ	0xFEA
 10930                           fsr0l	equ	0xFE9
 10931                           wreg	equ	0xFE8
 10932                           indf1	equ	0xFE7
 10933                           postinc1	equ	0xFE6
 10934                           postdec1	equ	0xFE5
 10935                           fsr1h	equ	0xFE2
 10936                           fsr1l	equ	0xFE1
 10937                           bsr	equ	0xFE0
 10938                           indf2	equ	0xFDF
 10939                           postinc2	equ	0xFDE
 10940                           postdec2	equ	0xFDD
 10941                           fsr2h	equ	0xFDA
 10942                           fsr2l	equ	0xFD9
 10943                           status	equ	0xFD8
 10944                           
 10945 ;; *************** function i2_uart_trans *****************
 10946 ;; Defined at:
 10947 ;;		line 61 in file "../src/my_uart.c"
 10948 ;; Parameters:    Size  Location     Type
 10949 ;;  length          1    wreg     unsigned char 
 10950 ;;  data            2    0[BANK0 ] PTR unsigned char 
 10951 ;;		 -> motorMove@direction(2), main@msgbuffer(11), 
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;  length          1    4[BANK0 ] unsigned char 
 10954 ;; Return value:  Size  Location     Type
 10955 ;;		None               void
 10956 ;; Registers used:
 10957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10963 ;;      Params:         0       2       0       0       0
 10964 ;;      Locals:         0       1       0       0       0
 10965 ;;      Temps:          0       2       0       0       0
 10966 ;;      Totals:         0       5       0       0       0
 10967 ;;Total ram usage:        5 bytes
 10968 ;; Hardware stack levels used:    1
 10969 ;; This function calls:
 10970 ;;		Nothing
 10971 ;; This function is called by:
 10972 ;;		i2_motorMove
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           	psect	text58
 10977  001E46                     __ptext58:
 10978                           	opt stack 0
 10979  001E46                     i2_uart_trans:
 10980                           	opt stack 17
 10981                           
 10982                           ;incstack = 0
 10983                           ;i2uart_trans@length stored from wreg
 10984  001E46  CFE8 F084          	movff	wreg,i2uart_trans@length
 10985                           
 10986                           ;my_uart.c: 63: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
 10987  001E4A  EE20 F00D          	lfsr	2,13
 10988  001E4E  505E               	movf	_uc_ptr,w,c
 10989  001E50  26D9               	addwf	fsr2l,f,c
 10990  001E52  505F               	movf	_uc_ptr+1,w,c
 10991  001E54  22DA               	addwfc	fsr2h,f,c
 10992  001E56  0E00               	movlw	0
 10993  001E58  6EDF               	movwf	indf2,c
 10994  001E5A  D035               	goto	i2l4254
 10995  001E5C                     i2l4250:
 10996                           
 10997                           ;my_uart.c: 65: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
 10998  001E5C  EE20 F00D          	lfsr	2,13
 10999  001E60  505E               	movf	_uc_ptr,w,c
 11000  001E62  26D9               	addwf	fsr2l,f,c
 11001  001E64  505F               	movf	_uc_ptr+1,w,c
 11002  001E66  22DA               	addwfc	fsr2h,f,c
 11003  001E68  50DF               	movf	indf2,w,c
 11004  001E6A  0100               	movlb	0	; () banked
 11005  001E6C  6F82               	movwf	??i2_uart_trans& (0+255),b
 11006  001E6E  0100               	movlb	0	; () banked
 11007  001E70  5182               	movf	??i2_uart_trans& (0+255),w,b
 11008  001E72  0D01               	mullw	1
 11009  001E74  50F3               	movf	prodl,w,c
 11010  001E76  0100               	movlb	0	; () banked
 11011  001E78  0100               	movlb	0	; () banked
 11012  001E7A  2580               	addwf	i2uart_trans@data& (0+255),w,b
 11013  001E7C  6ED9               	movwf	fsr2l,c
 11014  001E7E  50F4               	movf	prodh,w,c
 11015  001E80  0100               	movlb	0	; () banked
 11016  001E82  0100               	movlb	0	; () banked
 11017  001E84  2181               	addwfc	(i2uart_trans@data+1)& (0+255),w,b
 11018  001E86  6EDA               	movwf	fsr2h,c
 11019  001E88  EE10 F00D          	lfsr	1,13
 11020  001E8C  505E               	movf	_uc_ptr,w,c
 11021  001E8E  26E1               	addwf	fsr1l,f,c
 11022  001E90  505F               	movf	_uc_ptr+1,w,c
 11023  001E92  22E2               	addwfc	fsr1h,f,c
 11024  001E94  50E7               	movf	indf1,w,c
 11025  001E96  0100               	movlb	0	; () banked
 11026  001E98  6F83               	movwf	(??i2_uart_trans+1)& (0+255),b
 11027  001E9A  0100               	movlb	0	; () banked
 11028  001E9C  5183               	movf	(??i2_uart_trans+1)& (0+255),w,b
 11029  001E9E  0D01               	mullw	1
 11030  001EA0  0E07               	movlw	7
 11031  001EA2  26F3               	addwf	prodl,f,c
 11032  001EA4  0E00               	movlw	0
 11033  001EA6  22F4               	addwfc	prodh,f,c
 11034  001EA8  50F3               	movf	prodl,w,c
 11035  001EAA  245E               	addwf	_uc_ptr,w,c
 11036  001EAC  6EE1               	movwf	fsr1l,c
 11037  001EAE  50F4               	movf	prodh,w,c
 11038  001EB0  205F               	addwfc	_uc_ptr+1,w,c
 11039  001EB2  6EE2               	movwf	fsr1h,c
 11040  001EB4  CFDF FFE7          	movff	indf2,indf1
 11041                           
 11042                           ; BSR set to: 0
 11043  001EB8  EE20 F00D          	lfsr	2,13
 11044  001EBC  505E               	movf	_uc_ptr,w,c
 11045  001EBE  26D9               	addwf	fsr2l,f,c
 11046  001EC0  505F               	movf	_uc_ptr+1,w,c
 11047  001EC2  22DA               	addwfc	fsr2h,f,c
 11048  001EC4  2ADF               	incf	indf2,f,c
 11049  001EC6                     i2l4254:
 11050  001EC6  EE20 F00D          	lfsr	2,13
 11051  001ECA  505E               	movf	_uc_ptr,w,c
 11052  001ECC  26D9               	addwf	fsr2l,f,c
 11053  001ECE  505F               	movf	_uc_ptr+1,w,c
 11054  001ED0  22DA               	addwfc	fsr2h,f,c
 11055  001ED2  50DF               	movf	indf2,w,c
 11056  001ED4  0100               	movlb	0	; () banked
 11057  001ED6  6F82               	movwf	??i2_uart_trans& (0+255),b
 11058  001ED8  0100               	movlb	0	; () banked
 11059  001EDA  0100               	movlb	0	; () banked
 11060  001EDC  5184               	movf	i2uart_trans@length& (0+255),w,b
 11061  001EDE  0100               	movlb	0	; () banked
 11062  001EE0  5D82               	subwf	??i2_uart_trans& (0+255),w,b
 11063  001EE2  A0D8               	btfss	status,0,c
 11064  001EE4  D7BB               	goto	i2l4250
 11065                           
 11066                           ; BSR set to: 0
 11067                           ;my_uart.c: 67: }
 11068                           ;my_uart.c: 68: uc_ptr->txBufind = 0;
 11069                           
 11070                           ; BSR set to: 0
 11071  001EE6  EE20 F00E          	lfsr	2,14
 11072  001EEA  505E               	movf	_uc_ptr,w,c
 11073  001EEC  26D9               	addwf	fsr2l,f,c
 11074  001EEE  505F               	movf	_uc_ptr+1,w,c
 11075  001EF0  22DA               	addwfc	fsr2h,f,c
 11076  001EF2  0E00               	movlw	0
 11077  001EF4  6EDF               	movwf	indf2,c
 11078                           
 11079                           ; BSR set to: 0
 11080                           ;my_uart.c: 69: PIE1bits.TX1IE = 1;
 11081  001EF6  889D               	bsf	3997,4,c	;volatile
 11082                           
 11083                           ; BSR set to: 0
 11084  001EF8  0012               	return	
 11085  001EFA                     __end_ofi2_uart_trans:
 11086                           	opt stack 0
 11087                           pclatu	equ	0xFFB
 11088                           pclath	equ	0xFFA
 11089                           tblptru	equ	0xFF8
 11090                           tblptrh	equ	0xFF7
 11091                           tblptrl	equ	0xFF6
 11092                           tablat	equ	0xFF5
 11093                           prodh	equ	0xFF4
 11094                           prodl	equ	0xFF3
 11095                           intcon	equ	0xFF2
 11096                           intcon2	equ	0xFF1
 11097                           postinc0	equ	0xFEE
 11098                           fsr0h	equ	0xFEA
 11099                           fsr0l	equ	0xFE9
 11100                           wreg	equ	0xFE8
 11101                           indf1	equ	0xFE7
 11102                           postinc1	equ	0xFE6
 11103                           postdec1	equ	0xFE5
 11104                           fsr1h	equ	0xFE2
 11105                           fsr1l	equ	0xFE1
 11106                           bsr	equ	0xFE0
 11107                           indf2	equ	0xFDF
 11108                           postinc2	equ	0xFDE
 11109                           postdec2	equ	0xFDD
 11110                           fsr2h	equ	0xFDA
 11111                           fsr2l	equ	0xFD9
 11112                           status	equ	0xFD8
 11113                           
 11114 ;; *************** function i2_WriteTimer1 *****************
 11115 ;; Defined at:
 11116 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
 11117 ;; Parameters:    Size  Location     Type
 11118 ;;  timer1          2    0[BANK0 ] unsigned int 
 11119 ;; Auto vars:     Size  Location     Type
 11120 ;;  WriteTimer1     2    2[BANK0 ] struct Timers
 11121 ;; Return value:  Size  Location     Type
 11122 ;;		None               void
 11123 ;; Registers used:
 11124 ;;		None
 11125 ;; Tracked objects:
 11126 ;;		On entry : 0/0
 11127 ;;		On exit  : 0/0
 11128 ;;		Unchanged: 0/0
 11129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11130 ;;      Params:         0       2       0       0       0
 11131 ;;      Locals:         0       2       0       0       0
 11132 ;;      Temps:          0       0       0       0       0
 11133 ;;      Totals:         0       4       0       0       0
 11134 ;;Total ram usage:        4 bytes
 11135 ;; Hardware stack levels used:    1
 11136 ;; This function calls:
 11137 ;;		Nothing
 11138 ;; This function is called by:
 11139 ;;		i2_motorMove
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143                           	psect	text59
 11144  002D86                     __ptext59:
 11145                           	opt stack 0
 11146  002D86                     i2_WriteTimer1:
 11147                           	opt stack 17
 11148                           
 11149                           ; BSR set to: 0
 11150                           ;incstack = 0
 11151  002D86  C080  F082         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
 11152  002D8A  C081  F083         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
 11153  002D8E  C083  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
 11154  002D92  C082  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
 11155  002D96  0012               	return	
 11156  002D98                     __end_ofi2_WriteTimer1:
 11157                           	opt stack 0
 11158                           pclatu	equ	0xFFB
 11159                           pclath	equ	0xFFA
 11160                           tblptru	equ	0xFF8
 11161                           tblptrh	equ	0xFF7
 11162                           tblptrl	equ	0xFF6
 11163                           tablat	equ	0xFF5
 11164                           prodh	equ	0xFF4
 11165                           prodl	equ	0xFF3
 11166                           intcon	equ	0xFF2
 11167                           intcon2	equ	0xFF1
 11168                           postinc0	equ	0xFEE
 11169                           fsr0h	equ	0xFEA
 11170                           fsr0l	equ	0xFE9
 11171                           wreg	equ	0xFE8
 11172                           indf1	equ	0xFE7
 11173                           postinc1	equ	0xFE6
 11174                           postdec1	equ	0xFE5
 11175                           fsr1h	equ	0xFE2
 11176                           fsr1l	equ	0xFE1
 11177                           bsr	equ	0xFE0
 11178                           indf2	equ	0xFDF
 11179                           postinc2	equ	0xFDE
 11180                           postdec2	equ	0xFDD
 11181                           fsr2h	equ	0xFDA
 11182                           fsr2l	equ	0xFD9
 11183                           status	equ	0xFD8
 11184                           
 11185 ;; *************** function i2_WriteTimer0 *****************
 11186 ;; Defined at:
 11187 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;  timer0          2    0[BANK0 ] unsigned int 
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;  WriteTimer0     2    2[BANK0 ] struct Timers
 11192 ;; Return value:  Size  Location     Type
 11193 ;;		None               void
 11194 ;; Registers used:
 11195 ;;		None
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11201 ;;      Params:         0       2       0       0       0
 11202 ;;      Locals:         0       2       0       0       0
 11203 ;;      Temps:          0       0       0       0       0
 11204 ;;      Totals:         0       4       0       0       0
 11205 ;;Total ram usage:        4 bytes
 11206 ;; Hardware stack levels used:    1
 11207 ;; This function calls:
 11208 ;;		Nothing
 11209 ;; This function is called by:
 11210 ;;		i2_motorMove
 11211 ;; This function uses a non-reentrant model
 11212 ;;
 11213                           
 11214                           	psect	text60
 11215  002D98                     __ptext60:
 11216                           	opt stack 0
 11217  002D98                     i2_WriteTimer0:
 11218                           	opt stack 17
 11219                           
 11220                           ;incstack = 0
 11221  002D98  C080  F082         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
 11222  002D9C  C081  F083         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
 11223  002DA0  C083  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
 11224  002DA4  C082  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
 11225  002DA8  0012               	return	
 11226  002DAA                     __end_ofi2_WriteTimer0:
 11227                           	opt stack 0
 11228                           pclatu	equ	0xFFB
 11229                           pclath	equ	0xFFA
 11230                           tblptru	equ	0xFF8
 11231                           tblptrh	equ	0xFF7
 11232                           tblptrl	equ	0xFF6
 11233                           tablat	equ	0xFF5
 11234                           prodh	equ	0xFF4
 11235                           prodl	equ	0xFF3
 11236                           intcon	equ	0xFF2
 11237                           intcon2	equ	0xFF1
 11238                           postinc0	equ	0xFEE
 11239                           fsr0h	equ	0xFEA
 11240                           fsr0l	equ	0xFE9
 11241                           wreg	equ	0xFE8
 11242                           indf1	equ	0xFE7
 11243                           postinc1	equ	0xFE6
 11244                           postdec1	equ	0xFE5
 11245                           fsr1h	equ	0xFE2
 11246                           fsr1l	equ	0xFE1
 11247                           bsr	equ	0xFE0
 11248                           indf2	equ	0xFDF
 11249                           postinc2	equ	0xFDE
 11250                           postdec2	equ	0xFDD
 11251                           fsr2h	equ	0xFDA
 11252                           fsr2l	equ	0xFD9
 11253                           status	equ	0xFD8
 11254                           
 11255 ;; *************** function _start_i2c_slave_reply *****************
 11256 ;; Defined at:
 11257 ;;		line 92 in file "../src/my_i2c.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;  length          1    wreg     unsigned char 
 11260 ;;  msg             2    0[BANK0 ] PTR unsigned char 
 11261 ;;		 -> i2c_slave_int_handler@ack_1696(6), i2c_slave_int_handler@dist(6), i2c_slave_int_handler@ack(6), i2c_slave_int_ha
      +ndler@message(6), 
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;  length          1    4[BANK0 ] unsigned char 
 11264 ;; Return value:  Size  Location     Type
 11265 ;;		None               void
 11266 ;; Registers used:
 11267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11268 ;; Tracked objects:
 11269 ;;		On entry : 0/0
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11273 ;;      Params:         0       2       0       0       0
 11274 ;;      Locals:         0       1       0       0       0
 11275 ;;      Temps:          0       2       0       0       0
 11276 ;;      Totals:         0       5       0       0       0
 11277 ;;Total ram usage:        5 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; This function calls:
 11280 ;;		Nothing
 11281 ;; This function is called by:
 11282 ;;		_i2c_slave_int_handler
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286                           	psect	text61
 11287  0015A2                     __ptext61:
 11288                           	opt stack 0
 11289  0015A2                     _start_i2c_slave_reply:
 11290                           	opt stack 18
 11291                           
 11292                           ;incstack = 0
 11293                           ;start_i2c_slave_reply@length stored from wreg
 11294  0015A2  CFE8 F084          	movff	wreg,start_i2c_slave_reply@length
 11295                           
 11296                           ;my_i2c.c: 94: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
 11297  0015A6  0101               	movlb	1	; () banked
 11298  0015A8  EE20 F01A          	lfsr	2,26
 11299  0015AC  0101               	movlb	1	; () banked
 11300  0015AE  51C5               	movf	_ic_ptr& (0+255),w,b
 11301  0015B0  26D9               	addwf	fsr2l,f,c
 11302  0015B2  0101               	movlb	1	; () banked
 11303  0015B4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11304  0015B6  22DA               	addwfc	fsr2h,f,c
 11305  0015B8  0E00               	movlw	0
 11306  0015BA  6EDF               	movwf	indf2,c
 11307  0015BC  D042               	goto	i2l3782
 11308  0015BE                     i2l3778:
 11309                           
 11310                           ;my_i2c.c: 95: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
 11311  0015BE  0101               	movlb	1	; () banked
 11312  0015C0  EE20 F01A          	lfsr	2,26
 11313  0015C4  0101               	movlb	1	; () banked
 11314  0015C6  51C5               	movf	_ic_ptr& (0+255),w,b
 11315  0015C8  26D9               	addwf	fsr2l,f,c
 11316  0015CA  0101               	movlb	1	; () banked
 11317  0015CC  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11318  0015CE  22DA               	addwfc	fsr2h,f,c
 11319  0015D0  50DF               	movf	indf2,w,c
 11320  0015D2  0100               	movlb	0	; () banked
 11321  0015D4  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
 11322  0015D6  0100               	movlb	0	; () banked
 11323  0015D8  5182               	movf	??_start_i2c_slave_reply& (0+255),w,b
 11324  0015DA  0D01               	mullw	1
 11325  0015DC  50F3               	movf	prodl,w,c
 11326  0015DE  0100               	movlb	0	; () banked
 11327  0015E0  0100               	movlb	0	; () banked
 11328  0015E2  2580               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
 11329  0015E4  6ED9               	movwf	fsr2l,c
 11330  0015E6  50F4               	movf	prodh,w,c
 11331  0015E8  0100               	movlb	0	; () banked
 11332  0015EA  0100               	movlb	0	; () banked
 11333  0015EC  2181               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
 11334  0015EE  6EDA               	movwf	fsr2h,c
 11335  0015F0  0101               	movlb	1	; () banked
 11336  0015F2  EE10 F01A          	lfsr	1,26
 11337  0015F6  0101               	movlb	1	; () banked
 11338  0015F8  51C5               	movf	_ic_ptr& (0+255),w,b
 11339  0015FA  26E1               	addwf	fsr1l,f,c
 11340  0015FC  0101               	movlb	1	; () banked
 11341  0015FE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11342  001600  22E2               	addwfc	fsr1h,f,c
 11343  001602  50E7               	movf	indf1,w,c
 11344  001604  0100               	movlb	0	; () banked
 11345  001606  6F83               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
 11346  001608  0100               	movlb	0	; () banked
 11347  00160A  5183               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
 11348  00160C  0D01               	mullw	1
 11349  00160E  0E10               	movlw	16
 11350  001610  26F3               	addwf	prodl,f,c
 11351  001612  0E00               	movlw	0
 11352  001614  22F4               	addwfc	prodh,f,c
 11353  001616  50F3               	movf	prodl,w,c
 11354  001618  0101               	movlb	1	; () banked
 11355  00161A  0101               	movlb	1	; () banked
 11356  00161C  25C5               	addwf	_ic_ptr& (0+255),w,b
 11357  00161E  6EE1               	movwf	fsr1l,c
 11358  001620  50F4               	movf	prodh,w,c
 11359  001622  0101               	movlb	1	; () banked
 11360  001624  0101               	movlb	1	; () banked
 11361  001626  21C6               	addwfc	(_ic_ptr+1)& (0+255),w,b
 11362  001628  6EE2               	movwf	fsr1h,c
 11363  00162A  CFDF FFE7          	movff	indf2,indf1
 11364                           
 11365                           ; BSR set to: 1
 11366  00162E  0101               	movlb	1	; () banked
 11367  001630  EE20 F01A          	lfsr	2,26
 11368  001634  0101               	movlb	1	; () banked
 11369  001636  51C5               	movf	_ic_ptr& (0+255),w,b
 11370  001638  26D9               	addwf	fsr2l,f,c
 11371  00163A  0101               	movlb	1	; () banked
 11372  00163C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11373  00163E  22DA               	addwfc	fsr2h,f,c
 11374  001640  2ADF               	incf	indf2,f,c
 11375  001642                     i2l3782:
 11376                           
 11377                           ; BSR set to: 1
 11378  001642  0101               	movlb	1	; () banked
 11379  001644  EE20 F01A          	lfsr	2,26
 11380  001648  0101               	movlb	1	; () banked
 11381  00164A  51C5               	movf	_ic_ptr& (0+255),w,b
 11382  00164C  26D9               	addwf	fsr2l,f,c
 11383  00164E  0101               	movlb	1	; () banked
 11384  001650  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11385  001652  22DA               	addwfc	fsr2h,f,c
 11386  001654  50DF               	movf	indf2,w,c
 11387  001656  0100               	movlb	0	; () banked
 11388  001658  6F82               	movwf	??_start_i2c_slave_reply& (0+255),b
 11389  00165A  0100               	movlb	0	; () banked
 11390  00165C  0100               	movlb	0	; () banked
 11391  00165E  5184               	movf	start_i2c_slave_reply@length& (0+255),w,b
 11392  001660  0100               	movlb	0	; () banked
 11393  001662  5D82               	subwf	??_start_i2c_slave_reply& (0+255),w,b
 11394  001664  A0D8               	btfss	status,0,c
 11395  001666  D7AB               	goto	i2l3778
 11396                           
 11397                           ; BSR set to: 0
 11398                           ;my_i2c.c: 96: }
 11399                           ;my_i2c.c: 97: ic_ptr->outbuflen = length;
 11400                           
 11401                           ; BSR set to: 0
 11402  001668  0101               	movlb	1	; () banked
 11403  00166A  EE20 F01A          	lfsr	2,26
 11404  00166E  0101               	movlb	1	; () banked
 11405  001670  51C5               	movf	_ic_ptr& (0+255),w,b
 11406  001672  26D9               	addwf	fsr2l,f,c
 11407  001674  0101               	movlb	1	; () banked
 11408  001676  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11409  001678  22DA               	addwfc	fsr2h,f,c
 11410  00167A  0100               	movlb	0	; () banked
 11411  00167C  C084  FFDF         	movff	start_i2c_slave_reply@length,indf2
 11412                           
 11413                           ;my_i2c.c: 98: ic_ptr->outbufind = 1;
 11414  001680  0101               	movlb	1	; () banked
 11415  001682  EE20 F01B          	lfsr	2,27
 11416  001686  0101               	movlb	1	; () banked
 11417  001688  51C5               	movf	_ic_ptr& (0+255),w,b
 11418  00168A  26D9               	addwf	fsr2l,f,c
 11419  00168C  0101               	movlb	1	; () banked
 11420  00168E  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11421  001690  22DA               	addwfc	fsr2h,f,c
 11422  001692  0E01               	movlw	1
 11423  001694  6EDF               	movwf	indf2,c
 11424                           
 11425                           ;my_i2c.c: 101: SSPBUF = ic_ptr->outbuffer[0];
 11426  001696  0101               	movlb	1	; () banked
 11427  001698  EE20 F010          	lfsr	2,16
 11428  00169C  0101               	movlb	1	; () banked
 11429  00169E  51C5               	movf	_ic_ptr& (0+255),w,b
 11430  0016A0  26D9               	addwf	fsr2l,f,c
 11431  0016A2  0101               	movlb	1	; () banked
 11432  0016A4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11433  0016A6  22DA               	addwfc	fsr2h,f,c
 11434  0016A8  50DF               	movf	indf2,w,c
 11435  0016AA  6EC9               	movwf	4041,c	;volatile
 11436                           
 11437                           ; BSR set to: 1
 11438                           ;my_i2c.c: 104: SSPCON1bits.CKP = 1;
 11439  0016AC  88C6               	bsf	4038,4,c	;volatile
 11440                           
 11441                           ; BSR set to: 1
 11442  0016AE  0012               	return	
 11443  0016B0                     __end_of_start_i2c_slave_reply:
 11444                           	opt stack 0
 11445                           pclatu	equ	0xFFB
 11446                           pclath	equ	0xFFA
 11447                           tblptru	equ	0xFF8
 11448                           tblptrh	equ	0xFF7
 11449                           tblptrl	equ	0xFF6
 11450                           tablat	equ	0xFF5
 11451                           prodh	equ	0xFF4
 11452                           prodl	equ	0xFF3
 11453                           intcon	equ	0xFF2
 11454                           intcon2	equ	0xFF1
 11455                           postinc0	equ	0xFEE
 11456                           fsr0h	equ	0xFEA
 11457                           fsr0l	equ	0xFE9
 11458                           wreg	equ	0xFE8
 11459                           indf1	equ	0xFE7
 11460                           postinc1	equ	0xFE6
 11461                           postdec1	equ	0xFE5
 11462                           fsr1h	equ	0xFE2
 11463                           fsr1l	equ	0xFE1
 11464                           bsr	equ	0xFE0
 11465                           indf2	equ	0xFDF
 11466                           postinc2	equ	0xFDE
 11467                           postdec2	equ	0xFDD
 11468                           fsr2h	equ	0xFDA
 11469                           fsr2l	equ	0xFD9
 11470                           status	equ	0xFD8
 11471                           
 11472 ;; *************** function _handle_start *****************
 11473 ;; Defined at:
 11474 ;;		line 110 in file "../src/my_i2c.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;  data_read       1    wreg     unsigned char 
 11477 ;; Auto vars:     Size  Location     Type
 11478 ;;  data_read       1    0[BANK0 ] unsigned char 
 11479 ;; Return value:  Size  Location     Type
 11480 ;;		None               void
 11481 ;; Registers used:
 11482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11483 ;; Tracked objects:
 11484 ;;		On entry : 0/0
 11485 ;;		On exit  : 0/0
 11486 ;;		Unchanged: 0/0
 11487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11488 ;;      Params:         0       0       0       0       0
 11489 ;;      Locals:         0       1       0       0       0
 11490 ;;      Temps:          0       0       0       0       0
 11491 ;;      Totals:         0       1       0       0       0
 11492 ;;Total ram usage:        1 bytes
 11493 ;; Hardware stack levels used:    1
 11494 ;; This function calls:
 11495 ;;		Nothing
 11496 ;; This function is called by:
 11497 ;;		_i2c_slave_int_handler
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text62
 11502  001A92                     __ptext62:
 11503                           	opt stack 0
 11504  001A92                     _handle_start:
 11505                           	opt stack 18
 11506                           
 11507                           ; BSR set to: 1
 11508                           ;incstack = 0
 11509                           ;handle_start@data_read stored from wreg
 11510  001A92  CFE8 F080          	movff	wreg,handle_start@data_read
 11511                           
 11512                           ;my_i2c.c: 111: ic_ptr->event_count = 1;
 11513  001A96  0101               	movlb	1	; () banked
 11514  001A98  EE20 F00C          	lfsr	2,12
 11515  001A9C  0101               	movlb	1	; () banked
 11516  001A9E  51C5               	movf	_ic_ptr& (0+255),w,b
 11517  001AA0  26D9               	addwf	fsr2l,f,c
 11518  001AA2  0101               	movlb	1	; () banked
 11519  001AA4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11520  001AA6  22DA               	addwfc	fsr2h,f,c
 11521  001AA8  0E01               	movlw	1
 11522  001AAA  6EDF               	movwf	indf2,c
 11523                           
 11524                           ;my_i2c.c: 112: ic_ptr->buflen = 0;
 11525  001AAC  0101               	movlb	1	; () banked
 11526  001AAE  EE20 F00A          	lfsr	2,10
 11527  001AB2  0101               	movlb	1	; () banked
 11528  001AB4  51C5               	movf	_ic_ptr& (0+255),w,b
 11529  001AB6  26D9               	addwf	fsr2l,f,c
 11530  001AB8  0101               	movlb	1	; () banked
 11531  001ABA  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11532  001ABC  22DA               	addwfc	fsr2h,f,c
 11533  001ABE  0E00               	movlw	0
 11534  001AC0  6EDF               	movwf	indf2,c
 11535                           
 11536                           ; BSR set to: 1
 11537                           ;my_i2c.c: 114: if (data_read) {
 11538  001AC2  0100               	movlb	0	; () banked
 11539  001AC4  0100               	movlb	0	; () banked
 11540  001AC6  5180               	movf	handle_start@data_read& (0+255),w,b
 11541  001AC8  B4D8               	btfsc	status,2,c
 11542  001ACA  D03D               	goto	i2l3800
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;my_i2c.c: 115: if (SSPSTATbits.D_A == 1) {
 11546  001ACC  AAC7               	btfss	4039,5,c	;volatile
 11547  001ACE  D021               	goto	i2l335
 11548                           
 11549                           ; BSR set to: 0
 11550                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
 11551  001AD0  0101               	movlb	1	; () banked
 11552  001AD2  EE20 F00D          	lfsr	2,13
 11553  001AD6  0101               	movlb	1	; () banked
 11554  001AD8  51C5               	movf	_ic_ptr& (0+255),w,b
 11555  001ADA  26D9               	addwf	fsr2l,f,c
 11556  001ADC  0101               	movlb	1	; () banked
 11557  001ADE  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11558  001AE0  22DA               	addwfc	fsr2h,f,c
 11559  001AE2  0E05               	movlw	5
 11560  001AE4  6EDF               	movwf	indf2,c
 11561                           
 11562                           ;my_i2c.c: 119: ic_ptr->error_count++;
 11563  001AE6  0101               	movlb	1	; () banked
 11564  001AE8  EE20 F00F          	lfsr	2,15
 11565  001AEC  0101               	movlb	1	; () banked
 11566  001AEE  51C5               	movf	_ic_ptr& (0+255),w,b
 11567  001AF0  26D9               	addwf	fsr2l,f,c
 11568  001AF2  0101               	movlb	1	; () banked
 11569  001AF4  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11570  001AF6  22DA               	addwfc	fsr2h,f,c
 11571  001AF8  2ADF               	incf	indf2,f,c
 11572                           
 11573                           ;my_i2c.c: 120: ic_ptr->error_code = 0x5;
 11574  001AFA  0101               	movlb	1	; () banked
 11575  001AFC  EE20 F00E          	lfsr	2,14
 11576  001B00  0101               	movlb	1	; () banked
 11577  001B02  51C5               	movf	_ic_ptr& (0+255),w,b
 11578  001B04  26D9               	addwf	fsr2l,f,c
 11579  001B06  0101               	movlb	1	; () banked
 11580  001B08  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11581  001B0A  22DA               	addwfc	fsr2h,f,c
 11582  001B0C  0E05               	movlw	5
 11583  001B0E  6EDF               	movwf	indf2,c
 11584                           
 11585                           ;my_i2c.c: 121: } else {
 11586  001B10  0012               	return	
 11587  001B12                     i2l335:
 11588                           
 11589                           ; BSR set to: 0
 11590                           ;my_i2c.c: 122: if (SSPSTATbits.R_W == 1) {
 11591  001B12  A4C7               	btfss	4039,2,c	;volatile
 11592  001B14  D00C               	goto	i2l3798
 11593                           
 11594                           ; BSR set to: 0
 11595                           ;my_i2c.c: 123: ic_ptr->status = 0x8;
 11596  001B16  0101               	movlb	1	; () banked
 11597  001B18  EE20 F00D          	lfsr	2,13
 11598  001B1C  0101               	movlb	1	; () banked
 11599  001B1E  51C5               	movf	_ic_ptr& (0+255),w,b
 11600  001B20  26D9               	addwf	fsr2l,f,c
 11601  001B22  0101               	movlb	1	; () banked
 11602  001B24  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11603  001B26  22DA               	addwfc	fsr2h,f,c
 11604  001B28  0E08               	movlw	8
 11605  001B2A  6EDF               	movwf	indf2,c
 11606                           
 11607                           ;my_i2c.c: 124: } else {
 11608  001B2C  0012               	return	
 11609  001B2E                     i2l3798:
 11610                           
 11611                           ;my_i2c.c: 125: ic_ptr->status = 0x7;
 11612  001B2E  0101               	movlb	1	; () banked
 11613  001B30  EE20 F00D          	lfsr	2,13
 11614  001B34  0101               	movlb	1	; () banked
 11615  001B36  51C5               	movf	_ic_ptr& (0+255),w,b
 11616  001B38  26D9               	addwf	fsr2l,f,c
 11617  001B3A  0101               	movlb	1	; () banked
 11618  001B3C  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11619  001B3E  22DA               	addwfc	fsr2h,f,c
 11620  001B40  0E07               	movlw	7
 11621  001B42  6EDF               	movwf	indf2,c
 11622  001B44  0012               	return	
 11623  001B46                     i2l3800:
 11624                           
 11625                           ;my_i2c.c: 129: ic_ptr->status = 0x6;
 11626  001B46  0101               	movlb	1	; () banked
 11627  001B48  EE20 F00D          	lfsr	2,13
 11628  001B4C  0101               	movlb	1	; () banked
 11629  001B4E  51C5               	movf	_ic_ptr& (0+255),w,b
 11630  001B50  26D9               	addwf	fsr2l,f,c
 11631  001B52  0101               	movlb	1	; () banked
 11632  001B54  51C6               	movf	(_ic_ptr+1)& (0+255),w,b
 11633  001B56  22DA               	addwfc	fsr2h,f,c
 11634  001B58  0E06               	movlw	6
 11635  001B5A  6EDF               	movwf	indf2,c
 11636  001B5C  0012               	return	
 11637  001B5E                     __end_of_handle_start:
 11638                           	opt stack 0
 11639                           pclatu	equ	0xFFB
 11640                           pclath	equ	0xFFA
 11641                           tblptru	equ	0xFF8
 11642                           tblptrh	equ	0xFF7
 11643                           tblptrl	equ	0xFF6
 11644                           tablat	equ	0xFF5
 11645                           prodh	equ	0xFF4
 11646                           prodl	equ	0xFF3
 11647                           intcon	equ	0xFF2
 11648                           intcon2	equ	0xFF1
 11649                           postinc0	equ	0xFEE
 11650                           fsr0h	equ	0xFEA
 11651                           fsr0l	equ	0xFE9
 11652                           wreg	equ	0xFE8
 11653                           indf1	equ	0xFE7
 11654                           postinc1	equ	0xFE6
 11655                           postdec1	equ	0xFE5
 11656                           fsr1h	equ	0xFE2
 11657                           fsr1l	equ	0xFE1
 11658                           bsr	equ	0xFE0
 11659                           indf2	equ	0xFDF
 11660                           postinc2	equ	0xFDE
 11661                           postdec2	equ	0xFDD
 11662                           fsr2h	equ	0xFDA
 11663                           fsr2l	equ	0xFD9
 11664                           status	equ	0xFD8
 11665                           
 11666 ;; *************** function _ToMainHigh_sendmsg *****************
 11667 ;; Defined at:
 11668 ;;		line 126 in file "../src/messages.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;  length          1    wreg     unsigned char 
 11671 ;;  msgtype         1   22[BANK0 ] unsigned char 
 11672 ;;  data            2   23[BANK0 ] PTR void 
 11673 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@ic(29), 
 11674 ;; Auto vars:     Size  Location     Type
 11675 ;;  length          1   25[BANK0 ] unsigned char 
 11676 ;; Return value:  Size  Location     Type
 11677 ;;                  1    wreg      char 
 11678 ;; Registers used:
 11679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11680 ;; Tracked objects:
 11681 ;;		On entry : 0/0
 11682 ;;		On exit  : 0/0
 11683 ;;		Unchanged: 0/0
 11684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11685 ;;      Params:         0       3       0       0       0
 11686 ;;      Locals:         0       1       0       0       0
 11687 ;;      Temps:          0       0       0       0       0
 11688 ;;      Totals:         0       4       0       0       0
 11689 ;;Total ram usage:        4 bytes
 11690 ;; Hardware stack levels used:    1
 11691 ;; Hardware stack levels required when called:    2
 11692 ;; This function calls:
 11693 ;;		i2_send_msg
 11694 ;; This function is called by:
 11695 ;;		_i2c_slave_int_handler
 11696 ;;		_i2c_master_int_handler
 11697 ;; This function uses a non-reentrant model
 11698 ;;
 11699                           
 11700                           	psect	text63
 11701  002BBE                     __ptext63:
 11702                           	opt stack 0
 11703  002BBE                     _ToMainHigh_sendmsg:
 11704                           	opt stack 16
 11705                           
 11706                           ; BSR set to: 1
 11707                           ;incstack = 0
 11708                           ;ToMainHigh_sendmsg@length stored from wreg
 11709  002BBE  CFE8 F099          	movff	wreg,ToMainHigh_sendmsg@length
 11710                           
 11711                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
 11712                           ;	Return value of _ToMainHigh_sendmsg is never used
 11713  002BC2  0102               	movlb	2	; () banked
 11714  002BC4  0E02               	movlw	high _ToMainHigh_MQ
 11715  002BC6  0100               	movlb	0	; () banked
 11716  002BC8  0100               	movlb	0	; () banked
 11717  002BCA  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
 11718  002BCC  0102               	movlb	2	; () banked
 11719  002BCE  0E86               	movlw	low _ToMainHigh_MQ
 11720  002BD0  0100               	movlb	0	; () banked
 11721  002BD2  0100               	movlb	0	; () banked
 11722  002BD4  6F8A               	movwf	i2send_msg@qptr& (0+255),b
 11723  002BD6  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
 11724  002BDA  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
 11725  002BDE  0100               	movlb	0	; () banked
 11726  002BE0  0100               	movlb	0	; () banked
 11727  002BE2  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
 11728  002BE6  0100               	movlb	0	; () banked
 11729  002BE8  0100               	movlb	0	; () banked
 11730  002BEA  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
 11731  002BEE  ECB4  F009         	call	i2_send_msg	;wreg free
 11732  002BF2  0012               	return	
 11733  002BF4                     __end_of_ToMainHigh_sendmsg:
 11734                           	opt stack 0
 11735                           pclatu	equ	0xFFB
 11736                           pclath	equ	0xFFA
 11737                           tblptru	equ	0xFF8
 11738                           tblptrh	equ	0xFF7
 11739                           tblptrl	equ	0xFF6
 11740                           tablat	equ	0xFF5
 11741                           prodh	equ	0xFF4
 11742                           prodl	equ	0xFF3
 11743                           intcon	equ	0xFF2
 11744                           intcon2	equ	0xFF1
 11745                           postinc0	equ	0xFEE
 11746                           fsr0h	equ	0xFEA
 11747                           fsr0l	equ	0xFE9
 11748                           wreg	equ	0xFE8
 11749                           indf1	equ	0xFE7
 11750                           postinc1	equ	0xFE6
 11751                           postdec1	equ	0xFE5
 11752                           fsr1h	equ	0xFE2
 11753                           fsr1l	equ	0xFE1
 11754                           bsr	equ	0xFE0
 11755                           indf2	equ	0xFDF
 11756                           postinc2	equ	0xFDE
 11757                           postdec2	equ	0xFDD
 11758                           fsr2h	equ	0xFDA
 11759                           fsr2l	equ	0xFD9
 11760                           status	equ	0xFD8
 11761                           
 11762 ;; *************** function i2_send_msg *****************
 11763 ;; Defined at:
 11764 ;;		line 24 in file "../src/messages.c"
 11765 ;; Parameters:    Size  Location     Type
 11766 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
 11767 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 11768 ;;  length          1   12[BANK0 ] unsigned char 
 11769 ;;  msgtype         1   13[BANK0 ] unsigned char 
 11770 ;;  data            2   14[BANK0 ] PTR void 
 11771 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), main@t1thread_data(2), main@ic(29), 
 11772 ;;		 -> main@uc(15), 
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
 11775 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
 11776 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 11777 ;;  send_msg        2   17[BANK0 ] unsigned int 
 11778 ;;  send_msg        1   19[BANK0 ] unsigned char 
 11779 ;; Return value:  Size  Location     Type
 11780 ;;                  1    wreg      char 
 11781 ;; Registers used:
 11782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11783 ;; Tracked objects:
 11784 ;;		On entry : 0/0
 11785 ;;		On exit  : 0/0
 11786 ;;		Unchanged: 0/0
 11787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11788 ;;      Params:         0       6       0       0       0
 11789 ;;      Locals:         0       5       0       0       0
 11790 ;;      Temps:          0       1       0       0       0
 11791 ;;      Totals:         0      12       0       0       0
 11792 ;;Total ram usage:       12 bytes
 11793 ;; Hardware stack levels used:    1
 11794 ;; Hardware stack levels required when called:    1
 11795 ;; This function calls:
 11796 ;;		i2___awmod
 11797 ;;		i2_memcpy
 11798 ;; This function is called by:
 11799 ;;		_ToMainHigh_sendmsg
 11800 ;; This function uses a non-reentrant model
 11801 ;;
 11802                           
 11803                           	psect	text64
 11804  001368                     __ptext64:
 11805                           	opt stack 0
 11806  001368                     i2_send_msg:
 11807                           	opt stack 16
 11808                           
 11809                           ;messages.c: 25: unsigned char slot;
 11810                           ;messages.c: 27: msg *qmsg;
 11811                           ;messages.c: 28: size_t tlength = length;
 11812                           
 11813                           ;incstack = 0
 11814  001368  0100               	movlb	0	; () banked
 11815  00136A  0100               	movlb	0	; () banked
 11816  00136C  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
 11817  001370  0100               	movlb	0	; () banked
 11818  001372  0100               	movlb	0	; () banked
 11819  001374  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
 11820                           
 11821                           ; BSR set to: 0
 11822                           ;messages.c: 38: slot = qptr->cur_write_ind;
 11823  001376  0100               	movlb	0	; () banked
 11824  001378  EE20 F041          	lfsr	2,65
 11825  00137C  0100               	movlb	0	; () banked
 11826  00137E  518A               	movf	i2send_msg@qptr& (0+255),w,b
 11827  001380  26D9               	addwf	fsr2l,f,c
 11828  001382  0100               	movlb	0	; () banked
 11829  001384  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 11830  001386  22DA               	addwfc	fsr2h,f,c
 11831  001388  50DF               	movf	indf2,w,c
 11832  00138A  0100               	movlb	0	; () banked
 11833  00138C  0100               	movlb	0	; () banked
 11834  00138E  6F93               	movwf	i2send_msg@slot& (0+255),b
 11835                           
 11836                           ; BSR set to: 0
 11837                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 11838  001390  0100               	movlb	0	; () banked
 11839  001392  0100               	movlb	0	; () banked
 11840  001394  5193               	movf	i2send_msg@slot& (0+255),w,b
 11841  001396  0D0D               	mullw	13
 11842  001398  50F3               	movf	prodl,w,c
 11843  00139A  0100               	movlb	0	; () banked
 11844  00139C  0100               	movlb	0	; () banked
 11845  00139E  258A               	addwf	i2send_msg@qptr& (0+255),w,b
 11846  0013A0  0100               	movlb	0	; () banked
 11847  0013A2  0100               	movlb	0	; () banked
 11848  0013A4  6F94               	movwf	i2send_msg@qmsg& (0+255),b
 11849  0013A6  50F4               	movf	prodh,w,c
 11850  0013A8  0100               	movlb	0	; () banked
 11851  0013AA  0100               	movlb	0	; () banked
 11852  0013AC  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
 11853  0013AE  0100               	movlb	0	; () banked
 11854  0013B0  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
 11855                           
 11856                           ; BSR set to: 0
 11857                           ;messages.c: 41: if (qmsg->full != 0) {
 11858  0013B2  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
 11859  0013B6  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
 11860  0013BA  50DF               	movf	indf2,w,c
 11861  0013BC  B4D8               	btfsc	status,2,c
 11862  0013BE  D002               	goto	i2l4220
 11863                           
 11864                           ; BSR set to: 0
 11865                           ;messages.c: 42: return (-1);
 11866  0013C0  0EFF               	movlw	255
 11867  0013C2  0012               	return	
 11868  0013C4                     i2l4220:
 11869                           
 11870                           ; BSR set to: 0
 11871                           ;messages.c: 43: }
 11872                           ;messages.c: 46: qmsg->length = length;
 11873  0013C4  0100               	movlb	0	; () banked
 11874  0013C6  EE20 F001          	lfsr	2,1
 11875  0013CA  0100               	movlb	0	; () banked
 11876  0013CC  5194               	movf	i2send_msg@qmsg& (0+255),w,b
 11877  0013CE  26D9               	addwf	fsr2l,f,c
 11878  0013D0  0100               	movlb	0	; () banked
 11879  0013D2  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
 11880  0013D4  22DA               	addwfc	fsr2h,f,c
 11881  0013D6  0100               	movlb	0	; () banked
 11882  0013D8  C08C  FFDF         	movff	i2send_msg@length,indf2
 11883                           
 11884                           ;messages.c: 47: qmsg->msgtype = msgtype;
 11885  0013DC  0100               	movlb	0	; () banked
 11886  0013DE  EE20 F002          	lfsr	2,2
 11887  0013E2  0100               	movlb	0	; () banked
 11888  0013E4  5194               	movf	i2send_msg@qmsg& (0+255),w,b
 11889  0013E6  26D9               	addwf	fsr2l,f,c
 11890  0013E8  0100               	movlb	0	; () banked
 11891  0013EA  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
 11892  0013EC  22DA               	addwfc	fsr2h,f,c
 11893  0013EE  0100               	movlb	0	; () banked
 11894  0013F0  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
 11895                           
 11896                           ; BSR set to: 0
 11897                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 11898  0013F4  0E03               	movlw	3
 11899  0013F6  0100               	movlb	0	; () banked
 11900  0013F8  0100               	movlb	0	; () banked
 11901  0013FA  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
 11902  0013FC  0100               	movlb	0	; () banked
 11903  0013FE  0100               	movlb	0	; () banked
 11904  001400  6F80               	movwf	i2memcpy@d1& (0+255),b
 11905  001402  0E00               	movlw	0
 11906  001404  0100               	movlb	0	; () banked
 11907  001406  0100               	movlb	0	; () banked
 11908  001408  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
 11909  00140A  0100               	movlb	0	; () banked
 11910  00140C  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
 11911  00140E  0100               	movlb	0	; () banked
 11912  001410  0100               	movlb	0	; () banked
 11913  001412  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
 11914  001416  0100               	movlb	0	; () banked
 11915  001418  0100               	movlb	0	; () banked
 11916  00141A  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
 11917  00141E  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
 11918  001422  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
 11919  001426  EC6A  F014         	call	i2_memcpy	;wreg free
 11920                           
 11921                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
 11922  00142A  0100               	movlb	0	; () banked
 11923  00142C  EE20 F041          	lfsr	2,65
 11924  001430  0100               	movlb	0	; () banked
 11925  001432  518A               	movf	i2send_msg@qptr& (0+255),w,b
 11926  001434  26D9               	addwf	fsr2l,f,c
 11927  001436  0100               	movlb	0	; () banked
 11928  001438  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 11929  00143A  22DA               	addwfc	fsr2h,f,c
 11930  00143C  0100               	movlb	0	; () banked
 11931  00143E  EE10 F041          	lfsr	1,65
 11932  001442  0100               	movlb	0	; () banked
 11933  001444  518A               	movf	i2send_msg@qptr& (0+255),w,b
 11934  001446  26E1               	addwf	fsr1l,f,c
 11935  001448  0100               	movlb	0	; () banked
 11936  00144A  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
 11937  00144C  22E2               	addwfc	fsr1h,f,c
 11938  00144E  50E7               	movf	indf1,w,c
 11939  001450  0100               	movlb	0	; () banked
 11940  001452  6F90               	movwf	??i2_send_msg& (0+255),b
 11941  001454  0E01               	movlw	1
 11942  001456  0100               	movlb	0	; () banked
 11943  001458  2590               	addwf	??i2_send_msg& (0+255),w,b
 11944  00145A  0100               	movlb	0	; () banked
 11945  00145C  0100               	movlb	0	; () banked
 11946  00145E  6F80               	movwf	i2___awmod@dividend& (0+255),b
 11947  001460  0100               	movlb	0	; () banked
 11948  001462  0100               	movlb	0	; () banked
 11949  001464  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
 11950  001466  0E00               	movlw	0
 11951  001468  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
 11952  00146A  0E00               	movlw	0
 11953  00146C  0100               	movlb	0	; () banked
 11954  00146E  0100               	movlb	0	; () banked
 11955  001470  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
 11956  001472  0E05               	movlw	5
 11957  001474  0100               	movlb	0	; () banked
 11958  001476  6F82               	movwf	i2___awmod@divisor& (0+255),b
 11959  001478  EC58  F00B         	call	i2___awmod	;wreg free
 11960  00147C  0100               	movlb	0	; () banked
 11961  00147E  0100               	movlb	0	; () banked
 11962  001480  5180               	movf	?i2___awmod& (0+255),w,b
 11963  001482  6EDF               	movwf	indf2,c
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;messages.c: 59: qmsg->full = 1;
 11967  001484  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
 11968  001488  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
 11969  00148C  0E01               	movlw	1
 11970  00148E  6EDF               	movwf	indf2,c
 11971                           
 11972                           ; BSR set to: 0
 11973                           ;messages.c: 60: return (1);
 11974  001490  0E01               	movlw	1
 11975  001492  0012               	return	
 11976  001494                     __end_ofi2_send_msg:
 11977                           	opt stack 0
 11978                           pclatu	equ	0xFFB
 11979                           pclath	equ	0xFFA
 11980                           tblptru	equ	0xFF8
 11981                           tblptrh	equ	0xFF7
 11982                           tblptrl	equ	0xFF6
 11983                           tablat	equ	0xFF5
 11984                           prodh	equ	0xFF4
 11985                           prodl	equ	0xFF3
 11986                           intcon	equ	0xFF2
 11987                           intcon2	equ	0xFF1
 11988                           postinc0	equ	0xFEE
 11989                           fsr0h	equ	0xFEA
 11990                           fsr0l	equ	0xFE9
 11991                           wreg	equ	0xFE8
 11992                           indf1	equ	0xFE7
 11993                           postinc1	equ	0xFE6
 11994                           postdec1	equ	0xFE5
 11995                           fsr1h	equ	0xFE2
 11996                           fsr1l	equ	0xFE1
 11997                           bsr	equ	0xFE0
 11998                           indf2	equ	0xFDF
 11999                           postinc2	equ	0xFDE
 12000                           postdec2	equ	0xFDD
 12001                           fsr2h	equ	0xFDA
 12002                           fsr2l	equ	0xFD9
 12003                           status	equ	0xFD8
 12004                           
 12005 ;; *************** function i2_memcpy *****************
 12006 ;; Defined at:
 12007 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
 12008 ;; Parameters:    Size  Location     Type
 12009 ;;  d1              2    0[BANK0 ] PTR void 
 12010 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
 12011 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 12012 ;;		 -> main@msgbuffer(11), 
 12013 ;;  s1              2    2[BANK0 ] PTR const void 
 12014 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
 12015 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
 12016 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
 12017 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
 12018 ;;		 -> main@uc(15), 
 12019 ;;  n               2    4[BANK0 ] unsigned int 
 12020 ;; Auto vars:     Size  Location     Type
 12021 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
 12022 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
 12023 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
 12024 ;;		 -> NULL(0), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), FromMainLow_MQ(67), 
 12025 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@t1thread_data(2), main@ic(29), 
 12026 ;;		 -> main@uc(15), 
 12027 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
 12028 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
 12029 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 12030 ;;		 -> main@msgbuffer(11), 
 12031 ;; Return value:  Size  Location     Type
 12032 ;;                  2    0[BANK0 ] PTR void 
 12033 ;; Registers used:
 12034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12035 ;; Tracked objects:
 12036 ;;		On entry : 0/0
 12037 ;;		On exit  : 0/0
 12038 ;;		Unchanged: 0/0
 12039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12040 ;;      Params:         0       6       0       0       0
 12041 ;;      Locals:         0       4       0       0       0
 12042 ;;      Temps:          0       0       0       0       0
 12043 ;;      Totals:         0      10       0       0       0
 12044 ;;Total ram usage:       10 bytes
 12045 ;; Hardware stack levels used:    1
 12046 ;; This function calls:
 12047 ;;		Nothing
 12048 ;; This function is called by:
 12049 ;;		i2_send_msg
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           	psect	text65
 12054  0028D4                     __ptext65:
 12055                           	opt stack 0
 12056  0028D4                     i2_memcpy:
 12057                           	opt stack 16
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;incstack = 0
 12061  0028D4  0100               	movlb	0	; () banked
 12062  0028D6  0100               	movlb	0	; () banked
 12063  0028D8  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
 12064  0028DC  0100               	movlb	0	; () banked
 12065  0028DE  0100               	movlb	0	; () banked
 12066  0028E0  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
 12067  0028E4  0100               	movlb	0	; () banked
 12068  0028E6  0100               	movlb	0	; () banked
 12069  0028E8  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
 12070  0028EC  0100               	movlb	0	; () banked
 12071  0028EE  0100               	movlb	0	; () banked
 12072  0028F0  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
 12073  0028F4  D012               	goto	i2l4310
 12074  0028F6                     i2l4304:
 12075                           
 12076                           ; BSR set to: 0
 12077  0028F6  C088  FFD9         	movff	i2memcpy@s,fsr2l
 12078  0028FA  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
 12079  0028FE  C086  FFE1         	movff	i2memcpy@d,fsr1l
 12080  002902  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
 12081  002906  CFDF FFE7          	movff	indf2,indf1
 12082                           
 12083                           ; BSR set to: 0
 12084  00290A  0100               	movlb	0	; () banked
 12085  00290C  0100               	movlb	0	; () banked
 12086  00290E  4B88               	infsnz	i2memcpy@s& (0+255),f,b
 12087  002910  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
 12088                           
 12089                           ; BSR set to: 0
 12090  002912  0100               	movlb	0	; () banked
 12091  002914  0100               	movlb	0	; () banked
 12092  002916  4B86               	infsnz	i2memcpy@d& (0+255),f,b
 12093  002918  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
 12094  00291A                     i2l4310:
 12095                           
 12096                           ; BSR set to: 0
 12097  00291A  0100               	movlb	0	; () banked
 12098  00291C  0100               	movlb	0	; () banked
 12099  00291E  0784               	decf	i2memcpy@n& (0+255),f,b
 12100  002920  A0D8               	btfss	status,0,c
 12101  002922  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
 12102  002924  0100               	movlb	0	; () banked
 12103  002926  2984               	incf	i2memcpy@n& (0+255),w,b
 12104  002928  B4D8               	btfsc	status,2,c
 12105  00292A  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
 12106  00292C  B4D8               	btfsc	status,2,c
 12107                           
 12108                           ; BSR set to: 0
 12109                           
 12110                           ; BSR set to: 0
 12111                           ;	Return value of i2_memcpy is never used
 12112  00292E  0012               	return	
 12113  002930  D7E2               	goto	i2l4304
 12114  002932                     __end_ofi2_memcpy:
 12115                           	opt stack 0
 12116                           pclatu	equ	0xFFB
 12117                           pclath	equ	0xFFA
 12118                           tblptru	equ	0xFF8
 12119                           tblptrh	equ	0xFF7
 12120                           tblptrl	equ	0xFF6
 12121                           tablat	equ	0xFF5
 12122                           prodh	equ	0xFF4
 12123                           prodl	equ	0xFF3
 12124                           intcon	equ	0xFF2
 12125                           intcon2	equ	0xFF1
 12126                           postinc0	equ	0xFEE
 12127                           fsr0h	equ	0xFEA
 12128                           fsr0l	equ	0xFE9
 12129                           wreg	equ	0xFE8
 12130                           indf1	equ	0xFE7
 12131                           postinc1	equ	0xFE6
 12132                           postdec1	equ	0xFE5
 12133                           fsr1h	equ	0xFE2
 12134                           fsr1l	equ	0xFE1
 12135                           bsr	equ	0xFE0
 12136                           indf2	equ	0xFDF
 12137                           postinc2	equ	0xFDE
 12138                           postdec2	equ	0xFDD
 12139                           fsr2h	equ	0xFDA
 12140                           fsr2l	equ	0xFD9
 12141                           status	equ	0xFD8
 12142                           
 12143 ;; *************** function i2___awmod *****************
 12144 ;; Defined at:
 12145 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
 12146 ;; Parameters:    Size  Location     Type
 12147 ;;  dividend        2    0[BANK0 ] int 
 12148 ;;  divisor         2    2[BANK0 ] int 
 12149 ;; Auto vars:     Size  Location     Type
 12150 ;;  __awmod         1    6[BANK0 ] unsigned char 
 12151 ;;  __awmod         1    5[BANK0 ] unsigned char 
 12152 ;; Return value:  Size  Location     Type
 12153 ;;                  2    0[BANK0 ] int 
 12154 ;; Registers used:
 12155 ;;		wreg, status,2, status,0, prodl
 12156 ;; Tracked objects:
 12157 ;;		On entry : 0/0
 12158 ;;		On exit  : 0/0
 12159 ;;		Unchanged: 0/0
 12160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12161 ;;      Params:         0       4       0       0       0
 12162 ;;      Locals:         0       2       0       0       0
 12163 ;;      Temps:          0       1       0       0       0
 12164 ;;      Totals:         0       7       0       0       0
 12165 ;;Total ram usage:        7 bytes
 12166 ;; Hardware stack levels used:    1
 12167 ;; This function calls:
 12168 ;;		Nothing
 12169 ;; This function is called by:
 12170 ;;		i2_send_msg
 12171 ;; This function uses a non-reentrant model
 12172 ;;
 12173                           
 12174                           	psect	text66
 12175  0016B0                     __ptext66:
 12176                           	opt stack 0
 12177  0016B0                     i2___awmod:
 12178                           	opt stack 16
 12179                           
 12180                           ; BSR set to: 0
 12181                           ;incstack = 0
 12182  0016B0  0100               	movlb	0	; () banked
 12183  0016B2  6F84               	movwf	??i2___awmod& (0+255),b
 12184  0016B4  0E00               	movlw	0
 12185  0016B6  0100               	movlb	0	; () banked
 12186  0016B8  0100               	movlb	0	; () banked
 12187  0016BA  6F86               	movwf	i2___awmod@sign& (0+255),b
 12188  0016BC  0100               	movlb	0	; () banked
 12189  0016BE  5184               	movf	??i2___awmod& (0+255),w,b
 12190                           
 12191                           ; BSR set to: 0
 12192  0016C0  0100               	movlb	0	; () banked
 12193  0016C2  0100               	movlb	0	; () banked
 12194  0016C4  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
 12195  0016C6  0A80               	xorlw	128
 12196  0016C8  6EF3               	movwf	prodl,c
 12197  0016CA  0E80               	movlw	128
 12198  0016CC  5CF3               	subwf	prodl,w,c
 12199  0016CE  0E00               	movlw	0
 12200  0016D0  B4D8               	btfsc	status,2,c
 12201  0016D2  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
 12202  0016D4  B0D8               	btfsc	status,0,c
 12203  0016D6  D00F               	goto	i2l4356
 12204                           
 12205                           ; BSR set to: 0
 12206  0016D8  0100               	movlb	0	; () banked
 12207  0016DA  0100               	movlb	0	; () banked
 12208  0016DC  6D80               	negf	i2___awmod@dividend& (0+255),b
 12209  0016DE  0100               	movlb	0	; () banked
 12210  0016E0  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
 12211  0016E2  B0D8               	btfsc	status,0,c
 12212  0016E4  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
 12213                           
 12214                           ; BSR set to: 0
 12215  0016E6  0100               	movlb	0	; () banked
 12216  0016E8  6F84               	movwf	??i2___awmod& (0+255),b
 12217  0016EA  0E01               	movlw	1
 12218  0016EC  0100               	movlb	0	; () banked
 12219  0016EE  0100               	movlb	0	; () banked
 12220  0016F0  6F86               	movwf	i2___awmod@sign& (0+255),b
 12221  0016F2  0100               	movlb	0	; () banked
 12222  0016F4  5184               	movf	??i2___awmod& (0+255),w,b
 12223  0016F6                     i2l4356:
 12224                           
 12225                           ; BSR set to: 0
 12226  0016F6  0100               	movlb	0	; () banked
 12227  0016F8  0100               	movlb	0	; () banked
 12228  0016FA  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 12229  0016FC  0A80               	xorlw	128
 12230  0016FE  6EF3               	movwf	prodl,c
 12231  001700  0E80               	movlw	128
 12232  001702  5CF3               	subwf	prodl,w,c
 12233  001704  0E00               	movlw	0
 12234  001706  B4D8               	btfsc	status,2,c
 12235  001708  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
 12236  00170A  B0D8               	btfsc	status,0,c
 12237  00170C  D007               	goto	i2l4360
 12238                           
 12239                           ; BSR set to: 0
 12240  00170E  0100               	movlb	0	; () banked
 12241  001710  0100               	movlb	0	; () banked
 12242  001712  6D82               	negf	i2___awmod@divisor& (0+255),b
 12243  001714  0100               	movlb	0	; () banked
 12244  001716  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
 12245  001718  B0D8               	btfsc	status,0,c
 12246  00171A  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
 12247  00171C                     i2l4360:
 12248                           
 12249                           ; BSR set to: 0
 12250  00171C  0100               	movlb	0	; () banked
 12251  00171E  0100               	movlb	0	; () banked
 12252  001720  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 12253  001722  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
 12254  001724  B4D8               	btfsc	status,2,c
 12255  001726  D03A               	goto	i2l4376
 12256                           
 12257                           ; BSR set to: 0
 12258  001728  0100               	movlb	0	; () banked
 12259  00172A  6F84               	movwf	??i2___awmod& (0+255),b
 12260  00172C  0E01               	movlw	1
 12261  00172E  0100               	movlb	0	; () banked
 12262  001730  0100               	movlb	0	; () banked
 12263  001732  6F85               	movwf	i2___awmod@counter& (0+255),b
 12264  001734  0100               	movlb	0	; () banked
 12265  001736  5184               	movf	??i2___awmod& (0+255),w,b
 12266  001738  D009               	goto	i2l4366
 12267  00173A                     i2l4364:
 12268                           
 12269                           ; BSR set to: 0
 12270  00173A  0100               	movlb	0	; () banked
 12271  00173C  0100               	movlb	0	; () banked
 12272  00173E  0100               	movlb	0	; () banked
 12273  001740  90D8               	bcf	status,0,c
 12274  001742  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
 12275  001744  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
 12276  001746  0100               	movlb	0	; () banked
 12277  001748  0100               	movlb	0	; () banked
 12278  00174A  2B85               	incf	i2___awmod@counter& (0+255),f,b
 12279  00174C                     i2l4366:
 12280                           
 12281                           ; BSR set to: 0
 12282  00174C  0100               	movlb	0	; () banked
 12283  00174E  0100               	movlb	0	; () banked
 12284  001750  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
 12285  001752  D7F3               	goto	i2l4364
 12286  001754                     i2l4368:
 12287                           
 12288                           ; BSR set to: 0
 12289  001754  0100               	movlb	0	; () banked
 12290  001756  0100               	movlb	0	; () banked
 12291  001758  5182               	movf	i2___awmod@divisor& (0+255),w,b
 12292  00175A  0100               	movlb	0	; () banked
 12293  00175C  0100               	movlb	0	; () banked
 12294  00175E  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
 12295  001760  0100               	movlb	0	; () banked
 12296  001762  0100               	movlb	0	; () banked
 12297  001764  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 12298  001766  0100               	movlb	0	; () banked
 12299  001768  0100               	movlb	0	; () banked
 12300  00176A  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
 12301  00176C  A0D8               	btfss	status,0,c
 12302  00176E  D00C               	goto	i2l4372
 12303                           
 12304                           ; BSR set to: 0
 12305  001770  0100               	movlb	0	; () banked
 12306  001772  0100               	movlb	0	; () banked
 12307  001774  5182               	movf	i2___awmod@divisor& (0+255),w,b
 12308  001776  0100               	movlb	0	; () banked
 12309  001778  0100               	movlb	0	; () banked
 12310  00177A  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
 12311  00177C  0100               	movlb	0	; () banked
 12312  00177E  0100               	movlb	0	; () banked
 12313  001780  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
 12314  001782  0100               	movlb	0	; () banked
 12315  001784  0100               	movlb	0	; () banked
 12316  001786  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
 12317  001788                     i2l4372:
 12318                           
 12319                           ; BSR set to: 0
 12320  001788  0100               	movlb	0	; () banked
 12321  00178A  0100               	movlb	0	; () banked
 12322  00178C  0100               	movlb	0	; () banked
 12323  00178E  90D8               	bcf	status,0,c
 12324  001790  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
 12325  001792  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
 12326                           
 12327                           ; BSR set to: 0
 12328  001794  0100               	movlb	0	; () banked
 12329  001796  0100               	movlb	0	; () banked
 12330  001798  2F85               	decfsz	i2___awmod@counter& (0+255),f,b
 12331  00179A  D7DC               	goto	i2l4368
 12332  00179C                     i2l4376:
 12333                           
 12334                           ; BSR set to: 0
 12335  00179C  0100               	movlb	0	; () banked
 12336  00179E  0100               	movlb	0	; () banked
 12337  0017A0  5186               	movf	i2___awmod@sign& (0+255),w,b
 12338  0017A2  B4D8               	btfsc	status,2,c
 12339  0017A4  D007               	goto	i2l4380
 12340                           
 12341                           ; BSR set to: 0
 12342  0017A6  0100               	movlb	0	; () banked
 12343  0017A8  0100               	movlb	0	; () banked
 12344  0017AA  6D80               	negf	i2___awmod@dividend& (0+255),b
 12345  0017AC  0100               	movlb	0	; () banked
 12346  0017AE  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
 12347  0017B0  B0D8               	btfsc	status,0,c
 12348  0017B2  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
 12349  0017B4                     i2l4380:
 12350                           
 12351                           ; BSR set to: 0
 12352  0017B4  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
 12353  0017B8  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
 12354  0017BC  0012               	return	
 12355  0017BE                     __end_ofi2___awmod:
 12356                           	opt stack 0
 12357                           pclatu	equ	0xFFB
 12358                           pclath	equ	0xFFA
 12359                           tblptru	equ	0xFF8
 12360                           tblptrh	equ	0xFF7
 12361                           tblptrl	equ	0xFF6
 12362                           tablat	equ	0xFF5
 12363                           prodh	equ	0xFF4
 12364                           prodl	equ	0xFF3
 12365                           intcon	equ	0xFF2
 12366                           intcon2	equ	0xFF1
 12367                           postinc0	equ	0xFEE
 12368                           fsr0h	equ	0xFEA
 12369                           fsr0l	equ	0xFE9
 12370                           wreg	equ	0xFE8
 12371                           indf1	equ	0xFE7
 12372                           postinc1	equ	0xFE6
 12373                           postdec1	equ	0xFE5
 12374                           fsr1h	equ	0xFE2
 12375                           fsr1l	equ	0xFE1
 12376                           bsr	equ	0xFE0
 12377                           indf2	equ	0xFDF
 12378                           postinc2	equ	0xFDE
 12379                           postdec2	equ	0xFDD
 12380                           fsr2h	equ	0xFDA
 12381                           fsr2l	equ	0xFD9
 12382                           status	equ	0xFD8
 12383                           
 12384 ;; *************** function _SleepIfOkay *****************
 12385 ;; Defined at:
 12386 ;;		line 228 in file "../src/messages.c"
 12387 ;; Parameters:    Size  Location     Type
 12388 ;;		None
 12389 ;; Auto vars:     Size  Location     Type
 12390 ;;		None
 12391 ;; Return value:  Size  Location     Type
 12392 ;;		None               void
 12393 ;; Registers used:
 12394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12395 ;; Tracked objects:
 12396 ;;		On entry : 0/0
 12397 ;;		On exit  : 0/0
 12398 ;;		Unchanged: 0/0
 12399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12400 ;;      Params:         0       0       0       0       0
 12401 ;;      Locals:         0       0       0       0       0
 12402 ;;      Temps:          0       0       0       0       0
 12403 ;;      Totals:         0       0       0       0       0
 12404 ;;Total ram usage:        0 bytes
 12405 ;; Hardware stack levels used:    1
 12406 ;; Hardware stack levels required when called:    2
 12407 ;; This function calls:
 12408 ;;		_enter_sleep_mode
 12409 ;;		i2_check_msg
 12410 ;;		i2_in_high_int
 12411 ;;		i2_in_low_int
 12412 ;; This function is called by:
 12413 ;;		_InterruptHandlerHigh
 12414 ;; This function uses a non-reentrant model
 12415 ;;
 12416                           
 12417                           	psect	text67
 12418  00267A                     __ptext67:
 12419                           	opt stack 0
 12420  00267A                     _SleepIfOkay:
 12421                           	opt stack 18
 12422                           
 12423                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;incstack = 0
 12427  00267A  0100               	movlb	0	; () banked
 12428  00267C  0100               	movlb	0	; () banked
 12429  00267E  67DC               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
 12430  002680  D001               	goto	i2l3330
 12431  002682  0012               	return	
 12432  002684                     i2l3330:
 12433                           
 12434                           ; BSR set to: 0
 12435                           ;messages.c: 232: }
 12436                           ;messages.c: 235: if (in_low_int()) {
 12437  002684  ECE6  F014         	call	i2_in_low_int	;wreg free
 12438  002688  0100               	movlb	0	; () banked
 12439  00268A  0100               	movlb	0	; () banked
 12440  00268C  5183               	movf	(?i2_in_low_int+1)& (0+255),w,b
 12441  00268E  0100               	movlb	0	; () banked
 12442  002690  1182               	iorwf	?i2_in_low_int& (0+255),w,b
 12443  002692  A4D8               	btfss	status,2,c
 12444  002694  0012               	return	
 12445                           
 12446                           ; BSR set to: 0
 12447                           ;messages.c: 237: }
 12448                           ;messages.c: 240: if (!in_high_int()) {
 12449                           
 12450                           ; BSR set to: 0
 12451                           
 12452                           ; BSR set to: 0
 12453                           ;messages.c: 236: return;
 12454  002696  ECD5  F016         	call	i2_in_high_int	;wreg free
 12455  00269A  0100               	movlb	0	; () banked
 12456  00269C  0100               	movlb	0	; () banked
 12457  00269E  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
 12458  0026A0  0100               	movlb	0	; () banked
 12459  0026A2  1180               	iorwf	?i2_in_high_int& (0+255),w,b
 12460  0026A4  B4D8               	btfsc	status,2,c
 12461  0026A6  0012               	return	
 12462                           
 12463                           ; BSR set to: 0
 12464                           ;messages.c: 242: }
 12465                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 12466                           
 12467                           ; BSR set to: 0
 12468                           
 12469                           ; BSR set to: 0
 12470                           ;messages.c: 241: return;
 12471  0026A8  0102               	movlb	2	; () banked
 12472  0026AA  0E02               	movlw	high _ToMainHigh_MQ
 12473  0026AC  0100               	movlb	0	; () banked
 12474  0026AE  0100               	movlb	0	; () banked
 12475  0026B0  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
 12476  0026B2  0102               	movlb	2	; () banked
 12477  0026B4  0E86               	movlw	low _ToMainHigh_MQ
 12478  0026B6  0100               	movlb	0	; () banked
 12479  0026B8  0100               	movlb	0	; () banked
 12480  0026BA  6F80               	movwf	i2check_msg@qptr& (0+255),b
 12481  0026BC  ECFA  F015         	call	i2_check_msg	;wreg free
 12482  0026C0  0900               	iorlw	0
 12483  0026C2  A4D8               	btfss	status,2,c
 12484  0026C4  0012               	return	
 12485                           
 12486                           ;messages.c: 249: }
 12487                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 12488                           
 12489                           ;messages.c: 248: return;
 12490  0026C6  0101               	movlb	1	; () banked
 12491  0026C8  0E01               	movlw	high _ToMainLow_MQ
 12492  0026CA  0100               	movlb	0	; () banked
 12493  0026CC  0100               	movlb	0	; () banked
 12494  0026CE  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
 12495  0026D0  0101               	movlb	1	; () banked
 12496  0026D2  0E82               	movlw	low _ToMainLow_MQ
 12497  0026D4  0100               	movlb	0	; () banked
 12498  0026D6  0100               	movlb	0	; () banked
 12499  0026D8  6F80               	movwf	i2check_msg@qptr& (0+255),b
 12500  0026DA  ECFA  F015         	call	i2_check_msg	;wreg free
 12501  0026DE  0900               	iorlw	0
 12502  0026E0  B4D8               	btfsc	status,2,c
 12503                           
 12504                           ;messages.c: 252: }
 12505                           ;messages.c: 253: enter_sleep_mode();
 12506                           
 12507                           ;messages.c: 251: return;
 12508  0026E2  ECE8  F016         	call	_enter_sleep_mode	;wreg free
 12509  0026E6  0012               	return	
 12510  0026E8                     __end_of_SleepIfOkay:
 12511                           	opt stack 0
 12512                           pclatu	equ	0xFFB
 12513                           pclath	equ	0xFFA
 12514                           tblptru	equ	0xFF8
 12515                           tblptrh	equ	0xFF7
 12516                           tblptrl	equ	0xFF6
 12517                           tablat	equ	0xFF5
 12518                           prodh	equ	0xFF4
 12519                           prodl	equ	0xFF3
 12520                           intcon	equ	0xFF2
 12521                           intcon2	equ	0xFF1
 12522                           postinc0	equ	0xFEE
 12523                           fsr0h	equ	0xFEA
 12524                           fsr0l	equ	0xFE9
 12525                           wreg	equ	0xFE8
 12526                           indf1	equ	0xFE7
 12527                           postinc1	equ	0xFE6
 12528                           postdec1	equ	0xFE5
 12529                           fsr1h	equ	0xFE2
 12530                           fsr1l	equ	0xFE1
 12531                           bsr	equ	0xFE0
 12532                           indf2	equ	0xFDF
 12533                           postinc2	equ	0xFDE
 12534                           postdec2	equ	0xFDD
 12535                           fsr2h	equ	0xFDA
 12536                           fsr2l	equ	0xFD9
 12537                           status	equ	0xFD8
 12538                           
 12539 ;; *************** function i2_in_low_int *****************
 12540 ;; Defined at:
 12541 ;;		line 31 in file "../src/interrupts.c"
 12542 ;; Parameters:    Size  Location     Type
 12543 ;;		None
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;		None
 12546 ;; Return value:  Size  Location     Type
 12547 ;;                  2    2[BANK0 ] int 
 12548 ;; Registers used:
 12549 ;;		wreg, status,2, status,0, cstack
 12550 ;; Tracked objects:
 12551 ;;		On entry : 0/0
 12552 ;;		On exit  : 0/0
 12553 ;;		Unchanged: 0/0
 12554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12555 ;;      Params:         0       2       0       0       0
 12556 ;;      Locals:         0       0       0       0       0
 12557 ;;      Temps:          0       0       0       0       0
 12558 ;;      Totals:         0       2       0       0       0
 12559 ;;Total ram usage:        2 bytes
 12560 ;; Hardware stack levels used:    1
 12561 ;; Hardware stack levels required when called:    1
 12562 ;; This function calls:
 12563 ;;		i2_in_high_int
 12564 ;; This function is called by:
 12565 ;;		_SleepIfOkay
 12566 ;; This function uses a non-reentrant model
 12567 ;;
 12568                           
 12569                           	psect	text68
 12570  0029CC                     __ptext68:
 12571                           	opt stack 0
 12572  0029CC                     i2_in_low_int:
 12573                           	opt stack 18
 12574                           
 12575                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
 12576                           
 12577                           ;incstack = 0
 12578  0029CC  ACF2               	btfss	intcon,6,c	;volatile
 12579  0029CE  D008               	goto	i2l4196
 12580                           
 12581                           ;interrupts.c: 33: return (0);
 12582  0029D0  0E00               	movlw	0
 12583  0029D2  0100               	movlb	0	; () banked
 12584  0029D4  0100               	movlb	0	; () banked
 12585  0029D6  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 12586  0029D8  0E00               	movlw	0
 12587  0029DA  0100               	movlb	0	; () banked
 12588  0029DC  6F82               	movwf	?i2_in_low_int& (0+255),b
 12589  0029DE  0012               	return	
 12590  0029E0                     i2l4196:
 12591  0029E0  ECD5  F016         	call	i2_in_high_int	;wreg free
 12592  0029E4  0100               	movlb	0	; () banked
 12593  0029E6  0100               	movlb	0	; () banked
 12594  0029E8  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
 12595  0029EA  0100               	movlb	0	; () banked
 12596  0029EC  1180               	iorwf	?i2_in_high_int& (0+255),w,b
 12597  0029EE  B4D8               	btfsc	status,2,c
 12598  0029F0  D008               	goto	i2l4204
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;interrupts.c: 35: return (0);
 12602  0029F2  0E00               	movlw	0
 12603  0029F4  0100               	movlb	0	; () banked
 12604  0029F6  0100               	movlb	0	; () banked
 12605  0029F8  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 12606  0029FA  0E00               	movlw	0
 12607  0029FC  0100               	movlb	0	; () banked
 12608  0029FE  6F82               	movwf	?i2_in_low_int& (0+255),b
 12609  002A00  0012               	return	
 12610  002A02                     i2l4204:
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;interrupts.c: 37: return (1);
 12614  002A02  0E00               	movlw	0
 12615  002A04  0100               	movlb	0	; () banked
 12616  002A06  0100               	movlb	0	; () banked
 12617  002A08  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
 12618  002A0A  0E01               	movlw	1
 12619  002A0C  0100               	movlb	0	; () banked
 12620  002A0E  6F82               	movwf	?i2_in_low_int& (0+255),b
 12621  002A10  0012               	return	
 12622  002A12                     __end_ofi2_in_low_int:
 12623                           	opt stack 0
 12624                           pclatu	equ	0xFFB
 12625                           pclath	equ	0xFFA
 12626                           tblptru	equ	0xFF8
 12627                           tblptrh	equ	0xFF7
 12628                           tblptrl	equ	0xFF6
 12629                           tablat	equ	0xFF5
 12630                           prodh	equ	0xFF4
 12631                           prodl	equ	0xFF3
 12632                           intcon	equ	0xFF2
 12633                           intcon2	equ	0xFF1
 12634                           postinc0	equ	0xFEE
 12635                           fsr0h	equ	0xFEA
 12636                           fsr0l	equ	0xFE9
 12637                           wreg	equ	0xFE8
 12638                           indf1	equ	0xFE7
 12639                           postinc1	equ	0xFE6
 12640                           postdec1	equ	0xFE5
 12641                           fsr1h	equ	0xFE2
 12642                           fsr1l	equ	0xFE1
 12643                           bsr	equ	0xFE0
 12644                           indf2	equ	0xFDF
 12645                           postinc2	equ	0xFDE
 12646                           postdec2	equ	0xFDD
 12647                           fsr2h	equ	0xFDA
 12648                           fsr2l	equ	0xFD9
 12649                           status	equ	0xFD8
 12650                           
 12651 ;; *************** function i2_in_high_int *****************
 12652 ;; Defined at:
 12653 ;;		line 23 in file "../src/interrupts.c"
 12654 ;; Parameters:    Size  Location     Type
 12655 ;;		None
 12656 ;; Auto vars:     Size  Location     Type
 12657 ;;		None
 12658 ;; Return value:  Size  Location     Type
 12659 ;;                  2    0[BANK0 ] int 
 12660 ;; Registers used:
 12661 ;;		wreg, status,2
 12662 ;; Tracked objects:
 12663 ;;		On entry : 0/0
 12664 ;;		On exit  : 0/0
 12665 ;;		Unchanged: 0/0
 12666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12667 ;;      Params:         0       2       0       0       0
 12668 ;;      Locals:         0       0       0       0       0
 12669 ;;      Temps:          0       0       0       0       0
 12670 ;;      Totals:         0       2       0       0       0
 12671 ;;Total ram usage:        2 bytes
 12672 ;; Hardware stack levels used:    1
 12673 ;; This function calls:
 12674 ;;		Nothing
 12675 ;; This function is called by:
 12676 ;;		_SleepIfOkay
 12677 ;;		i2_in_low_int
 12678 ;; This function uses a non-reentrant model
 12679 ;;
 12680                           
 12681                           	psect	text69
 12682  002DAA                     __ptext69:
 12683                           	opt stack 0
 12684  002DAA                     i2_in_high_int:
 12685                           	opt stack 18
 12686                           
 12687                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
 12688                           
 12689                           ; BSR set to: 0
 12690                           ;incstack = 0
 12691  002DAA  0E00               	movlw	0
 12692  002DAC  AEF2               	btfss	intcon,7,c	;volatile
 12693  002DAE  0E01               	movlw	1
 12694  002DB0  0100               	movlb	0	; () banked
 12695  002DB2  0100               	movlb	0	; () banked
 12696  002DB4  6F80               	movwf	?i2_in_high_int& (0+255),b
 12697  002DB6  0100               	movlb	0	; () banked
 12698  002DB8  6B81               	clrf	(?i2_in_high_int+1)& (0+255),b
 12699  002DBA  0012               	return	
 12700  002DBC                     __end_ofi2_in_high_int:
 12701                           	opt stack 0
 12702                           pclatu	equ	0xFFB
 12703                           pclath	equ	0xFFA
 12704                           tblptru	equ	0xFF8
 12705                           tblptrh	equ	0xFF7
 12706                           tblptrl	equ	0xFF6
 12707                           tablat	equ	0xFF5
 12708                           prodh	equ	0xFF4
 12709                           prodl	equ	0xFF3
 12710                           intcon	equ	0xFF2
 12711                           intcon2	equ	0xFF1
 12712                           postinc0	equ	0xFEE
 12713                           fsr0h	equ	0xFEA
 12714                           fsr0l	equ	0xFE9
 12715                           wreg	equ	0xFE8
 12716                           indf1	equ	0xFE7
 12717                           postinc1	equ	0xFE6
 12718                           postdec1	equ	0xFE5
 12719                           fsr1h	equ	0xFE2
 12720                           fsr1l	equ	0xFE1
 12721                           bsr	equ	0xFE0
 12722                           indf2	equ	0xFDF
 12723                           postinc2	equ	0xFDE
 12724                           postdec2	equ	0xFDD
 12725                           fsr2h	equ	0xFDA
 12726                           fsr2l	equ	0xFD9
 12727                           status	equ	0xFD8
 12728                           
 12729 ;; *************** function i2_check_msg *****************
 12730 ;; Defined at:
 12731 ;;		line 222 in file "../src/messages.c"
 12732 ;; Parameters:    Size  Location     Type
 12733 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
 12734 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
 12735 ;; Auto vars:     Size  Location     Type
 12736 ;;		None
 12737 ;; Return value:  Size  Location     Type
 12738 ;;                  1    wreg      unsigned char 
 12739 ;; Registers used:
 12740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12741 ;; Tracked objects:
 12742 ;;		On entry : 0/0
 12743 ;;		On exit  : 0/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12746 ;;      Params:         0       2       0       0       0
 12747 ;;      Locals:         0       0       0       0       0
 12748 ;;      Temps:          0       1       0       0       0
 12749 ;;      Totals:         0       3       0       0       0
 12750 ;;Total ram usage:        3 bytes
 12751 ;; Hardware stack levels used:    1
 12752 ;; This function calls:
 12753 ;;		Nothing
 12754 ;; This function is called by:
 12755 ;;		_SleepIfOkay
 12756 ;; This function uses a non-reentrant model
 12757 ;;
 12758                           
 12759                           	psect	text70
 12760  002BF4                     __ptext70:
 12761                           	opt stack 0
 12762  002BF4                     i2_check_msg:
 12763                           	opt stack 19
 12764                           
 12765                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;incstack = 0
 12769  002BF4  0100               	movlb	0	; () banked
 12770  002BF6  EE20 F042          	lfsr	2,66
 12771  002BFA  0100               	movlb	0	; () banked
 12772  002BFC  5180               	movf	i2check_msg@qptr& (0+255),w,b
 12773  002BFE  26D9               	addwf	fsr2l,f,c
 12774  002C00  0100               	movlb	0	; () banked
 12775  002C02  5181               	movf	(i2check_msg@qptr+1)& (0+255),w,b
 12776  002C04  22DA               	addwfc	fsr2h,f,c
 12777  002C06  50DF               	movf	indf2,w,c
 12778  002C08  0100               	movlb	0	; () banked
 12779  002C0A  6F82               	movwf	??i2_check_msg& (0+255),b
 12780  002C0C  0100               	movlb	0	; () banked
 12781  002C0E  5182               	movf	??i2_check_msg& (0+255),w,b
 12782  002C10  0D0D               	mullw	13
 12783  002C12  50F3               	movf	prodl,w,c
 12784  002C14  0100               	movlb	0	; () banked
 12785  002C16  0100               	movlb	0	; () banked
 12786  002C18  2580               	addwf	i2check_msg@qptr& (0+255),w,b
 12787  002C1A  6ED9               	movwf	fsr2l,c
 12788  002C1C  50F4               	movf	prodh,w,c
 12789  002C1E  0100               	movlb	0	; () banked
 12790  002C20  0100               	movlb	0	; () banked
 12791  002C22  2181               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
 12792  002C24  6EDA               	movwf	fsr2h,c
 12793  002C26  50DF               	movf	indf2,w,c
 12794  002C28  0012               	return	
 12795  002C2A                     __end_ofi2_check_msg:
 12796                           	opt stack 0
 12797                           pclatu	equ	0xFFB
 12798                           pclath	equ	0xFFA
 12799                           tblptru	equ	0xFF8
 12800                           tblptrh	equ	0xFF7
 12801                           tblptrl	equ	0xFF6
 12802                           tablat	equ	0xFF5
 12803                           prodh	equ	0xFF4
 12804                           prodl	equ	0xFF3
 12805                           intcon	equ	0xFF2
 12806                           intcon2	equ	0xFF1
 12807                           postinc0	equ	0xFEE
 12808                           fsr0h	equ	0xFEA
 12809                           fsr0l	equ	0xFE9
 12810                           wreg	equ	0xFE8
 12811                           indf1	equ	0xFE7
 12812                           postinc1	equ	0xFE6
 12813                           postdec1	equ	0xFE5
 12814                           fsr1h	equ	0xFE2
 12815                           fsr1l	equ	0xFE1
 12816                           bsr	equ	0xFE0
 12817                           indf2	equ	0xFDF
 12818                           postinc2	equ	0xFDE
 12819                           postdec2	equ	0xFDD
 12820                           fsr2h	equ	0xFDA
 12821                           fsr2l	equ	0xFD9
 12822                           status	equ	0xFD8
 12823                           
 12824 ;; *************** function _enter_sleep_mode *****************
 12825 ;; Defined at:
 12826 ;;		line 202 in file "../src/messages.c"
 12827 ;; Parameters:    Size  Location     Type
 12828 ;;		None
 12829 ;; Auto vars:     Size  Location     Type
 12830 ;;		None
 12831 ;; Return value:  Size  Location     Type
 12832 ;;		None               void
 12833 ;; Registers used:
 12834 ;;		None
 12835 ;; Tracked objects:
 12836 ;;		On entry : 0/0
 12837 ;;		On exit  : 0/0
 12838 ;;		Unchanged: 0/0
 12839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12840 ;;      Params:         0       0       0       0       0
 12841 ;;      Locals:         0       0       0       0       0
 12842 ;;      Temps:          0       0       0       0       0
 12843 ;;      Totals:         0       0       0       0       0
 12844 ;;Total ram usage:        0 bytes
 12845 ;; Hardware stack levels used:    1
 12846 ;; This function calls:
 12847 ;;		Nothing
 12848 ;; This function is called by:
 12849 ;;		_SleepIfOkay
 12850 ;; This function uses a non-reentrant model
 12851 ;;
 12852                           
 12853                           	psect	text71
 12854  002DD0                     __ptext71:
 12855                           	opt stack 0
 12856  002DD0                     _enter_sleep_mode:
 12857                           	opt stack 19
 12858                           
 12859                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 12860                           
 12861                           ; BSR set to: 0
 12862                           ;incstack = 0
 12863  002DD0  8ED3               	bsf	4051,7,c	;volatile
 12864  002DD2  0003               	sleep		;# 
 12865  002DD4  0012               	return	
 12866  002DD6                     __end_of_enter_sleep_mode:
 12867                           	opt stack 0
 12868  0000                     pclatu	equ	0xFFB
 12869                           pclath	equ	0xFFA
 12870                           tblptru	equ	0xFF8
 12871                           tblptrh	equ	0xFF7
 12872                           tblptrl	equ	0xFF6
 12873                           tablat	equ	0xFF5
 12874                           prodh	equ	0xFF4
 12875                           prodl	equ	0xFF3
 12876                           intcon	equ	0xFF2
 12877                           intcon2	equ	0xFF1
 12878                           postinc0	equ	0xFEE
 12879                           fsr0h	equ	0xFEA
 12880                           fsr0l	equ	0xFE9
 12881                           wreg	equ	0xFE8
 12882                           indf1	equ	0xFE7
 12883                           postinc1	equ	0xFE6
 12884                           postdec1	equ	0xFE5
 12885                           fsr1h	equ	0xFE2
 12886                           fsr1l	equ	0xFE1
 12887                           bsr	equ	0xFE0
 12888                           indf2	equ	0xFDF
 12889                           postinc2	equ	0xFDE
 12890                           postdec2	equ	0xFDD
 12891                           fsr2h	equ	0xFDA
 12892                           fsr2l	equ	0xFD9
 12893                           status	equ	0xFD8
 12894                           pclatu	equ	0xFFB
 12895                           pclath	equ	0xFFA
 12896                           tblptru	equ	0xFF8
 12897                           tblptrh	equ	0xFF7
 12898                           tblptrl	equ	0xFF6
 12899                           tablat	equ	0xFF5
 12900                           prodh	equ	0xFF4
 12901                           prodl	equ	0xFF3
 12902                           intcon	equ	0xFF2
 12903                           intcon2	equ	0xFF1
 12904                           postinc0	equ	0xFEE
 12905                           fsr0h	equ	0xFEA
 12906                           fsr0l	equ	0xFE9
 12907                           wreg	equ	0xFE8
 12908                           indf1	equ	0xFE7
 12909                           postinc1	equ	0xFE6
 12910                           postdec1	equ	0xFE5
 12911                           fsr1h	equ	0xFE2
 12912                           fsr1l	equ	0xFE1
 12913                           bsr	equ	0xFE0
 12914                           indf2	equ	0xFDF
 12915                           postinc2	equ	0xFDE
 12916                           postdec2	equ	0xFDD
 12917                           fsr2h	equ	0xFDA
 12918                           fsr2l	equ	0xFD9
 12919                           status	equ	0xFD8
 12920                           
 12921                           	psect	param0
 12922  0000                     pclatu	equ	0xFFB
 12923                           pclath	equ	0xFFA
 12924                           tblptru	equ	0xFF8
 12925                           tblptrh	equ	0xFF7
 12926                           tblptrl	equ	0xFF6
 12927                           tablat	equ	0xFF5
 12928                           prodh	equ	0xFF4
 12929                           prodl	equ	0xFF3
 12930                           intcon	equ	0xFF2
 12931                           intcon2	equ	0xFF1
 12932                           postinc0	equ	0xFEE
 12933                           fsr0h	equ	0xFEA
 12934                           fsr0l	equ	0xFE9
 12935                           wreg	equ	0xFE8
 12936                           indf1	equ	0xFE7
 12937                           postinc1	equ	0xFE6
 12938                           postdec1	equ	0xFE5
 12939                           fsr1h	equ	0xFE2
 12940                           fsr1l	equ	0xFE1
 12941                           bsr	equ	0xFE0
 12942                           indf2	equ	0xFDF
 12943                           postinc2	equ	0xFDE
 12944                           postdec2	equ	0xFDD
 12945                           fsr2h	equ	0xFDA
 12946                           fsr2l	equ	0xFD9
 12947                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         318
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     83      95
    BANK0           128     80     102
    BANK1           256    102     201
    BANK2           256      0     201
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK2[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK2[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[15]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK2[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK2[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[15]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> motorMove@direction(COMRAM[2]), main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 15
		 -> main@uc(BANK1[15]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 15
		 -> NULL(NULL[0]), main@uc(BANK1[15]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 6
		 -> i2c_slave_int_handler@ack_1696(BANK0[6]), i2c_slave_int_handler@dist(BANK0[6]), i2c_slave_int_handler@ack(BANK0[6]), i2c_slave_int_handler@message(BANK0[6]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 15
		 -> NULL(NULL[0]), main@uc(BANK1[15]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 
		 -> main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), 
		 -> main@uc(BANK1[15]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK2[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK2[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_adc_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_motorMove
    _timer0_int_handler->_motorMove
    _motorMove->i1_uart_trans
    _adc_int_handler->___ftdiv
    ___fttol->___ftpack
    ___ftmul->___awtoft
    ___ftdiv->___ftadd
    ___ftadd->___fttol
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_ToMainHigh_sendmsg
    i2_motorMove->i2_uart_trans
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                70    70      0   10504
                                             36 BANK1     66    66      0
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     124
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2619
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     211
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2107
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1935
                                             10 BANK1     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     346
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     346
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      7     3      4     428
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     226
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2337
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2337
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2165
                                             10 BANK1     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     438
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     524
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     260
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0   16858
                                             66 COMRAM    17    17      0
                    _adc_int_handler
                 _timer0_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3117
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3094
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2816
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   5     5      0    1432
                                             12 COMRAM     5     5      0
                        _WriteTimer1
                          _motorMove
 ---------------------------------------------------------------------------------
 (6) _timer0_int_handler                                   5     5      0    1432
                                             12 COMRAM     5     5      0
                        _WriteTimer0
                          _motorMove
 ---------------------------------------------------------------------------------
 (7) _motorMove                                            7     4      3    1255
                                              5 COMRAM     7     4      3
                        _WriteTimer0
                        _WriteTimer1
                       i1_uart_trans
 ---------------------------------------------------------------------------------
 (8) i1_uart_trans                                         5     3      2     191
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (8) _WriteTimer1                                          4     2      2     176
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _WriteTimer0                                          4     2      2     176
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                     16    16      0   10877
                                             50 COMRAM    16    16      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                       i1_SetChanADC
                          i1___awmod
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     873
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) i1_SetChanADC                                         2     2      0      73
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             15    11      4     305
                                              8 COMRAM    15    11      4
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             15     9      6    2197
                                             13 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftge                                               9     3      6     242
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (7) ___ftdiv                                             15     9      6    2257
                                             35 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             12     6      6    2897
                                             23 COMRAM    12     6      6
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    1685
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             5     2      3    1829
                                              8 COMRAM     5     2      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    6532
                                             66 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    6296
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              40    40      0    6296
                                             26 BANK0     40    40      0
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
                        i2_motorMove
 ---------------------------------------------------------------------------------
 (13) i2_motorMove                                         7     4      3    1857
                                              5 BANK0      7     4      3
                      i2_WriteTimer0
                      i2_WriteTimer1
                       i2_uart_trans
 ---------------------------------------------------------------------------------
 (14) i2_uart_trans                                        5     3      2     235
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (14) i2_WriteTimer1                                       4     2      2     310
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (14) i2_WriteTimer0                                       4     2      2     310
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     278
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    3242
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2752
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     662
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4     809
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftpack
       ___fttol (ARG)
         ___ftpack (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftpack
         ___fttol (ARG)
           ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___ftpack (ARG)
     i1_SetChanADC
     i1___awmod
   _timer0_int_handler
     _WriteTimer0
     _motorMove
       _WriteTimer0
       _WriteTimer1
       i1_uart_trans
   _timer1_int_handler
     _WriteTimer1
     _motorMove
       _WriteTimer0
       _WriteTimer1
       i1_uart_trans
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_slave_int_handler
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
       i2_motorMove
         i2_WriteTimer0
         i2_WriteTimer1
         i2_uart_trans

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      C9       8       78.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100     66      C9       6       78.5%
BITBANK0            80      0       0       3        0.0%
BANK0               80     50      66       4       79.7%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     53      5F       1       74.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     257      11        0.0%
DATA                 0      0     257      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Fri May 02 21:47:18 2014

     i2c_slave_int_handler@ack_1696 00A2            _MQ_Main_Willing_to_block 00DC  
                       _SSPSTATbits 000FC7           __end_of_ToMainLow_recvmsg 2A98  
                                bsr 000FE0           __end_of_ToMainLow_sendmsg 2CA2  
              __end_ofi1_uart_trans 203E                        __CFG_CP0$OFF 000000  
      i2c_slave_int_handler@bitmask 00AF                        ___ftadd@exp1 0023  
                      ___ftadd@exp2 0022                 __end_ofi2_motorMove 1E46  
           i2motorMove@leftDistance 0086                        ___ftadd@sign 0021  
                               l160 0AE8                                 l610 2C4E  
                               l611 2C50                                 l634 2B34  
                               l636 2B4C                                 l637 2B4E  
                               l591 2422                                 l671 21A0  
                               l904 2D1A                                 l675 21C0  
                               l676 21C2                                 l677 21D0  
                               l678 21D2     __size_of_uart_trans_int_handler 0068  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
      i2c_slave_int_handler@message 00B6                        ___awmod@sign 0106  
                    _FromMainLow_MQ 0243       i2c_slave_int_handler@checksum 00B0  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
         i2c_slave_int_handler@dist 00A8                        ?_in_high_int 0100  
                  ??_init_uart_recv 0102          i2c_slave_int_handler@F5143 00D0  
        i2c_slave_int_handler@F5145 00E0          i2c_slave_int_handler@F5147 00D6  
                      ___ftdiv@cntr 002D                        ___ftdiv@sign 0032  
                              l1216 230E                                l3300 29BC  
                              l4130 151E                                l4122 14DA  
                              l3314 2A46                                l4132 1530  
                              l4134 1538                                l4142 1580  
                              l4126 1500                                l3430 0B0E  
                              l3440 0BBE                                l3424 0A96  
                              l3432 0B2E                                l3416 0A54  
                              l4146 1598                                l4138 156C  
                              l3610 239A                                l3426 0AEE  
                              l3292 299A                                l3604 236A  
                              l4180 22FA                                l4172 22AC  
                              l3620 1CF4                                l3444 0C06  
                              l3452 0C50                                l3702 2800  
                              l4174 22BE                                l3438 0B6C  
                              l4176 22C6                                l3624 1D5E  
                              l3448 0C4C                                l3546 21A2  
                              l3538 218C                                l3716 100C  
                              l3732 10FA                                l3644 111A  
                              l3648 119E                                l3664 24EC  
                              l3498 2B36                                l3682 1298  
                              l3598 233A                                l3696 27DC  
                              _LATA 000F89                                _LATB 000F8A  
                              u4217 2D1C                                i1l71 0092  
                              i2l62 2558                     _FromMainHigh_MQ 0200  
              __end_ofi2_uart_trans 1EFA                       __CFG_FCMEN$ON 000000  
            ?_block_on_To_msgqueues 0001                                _main 097C  
                      ___ftpack@arg 0001                        ___ftpack@exp 0004  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 0138                          i1_send_msg 1C1E  
            __size_ofi2_WriteTimer0 0012              __size_ofi2_WriteTimer1 0012  
                              pclat 000FFA                         i2_check_msg 2BF4  
                              prodh 000FF4                                prodl 000FF3  
             handle_start@data_read 0080                                start 00D8  
                     __CFG_FOSC2$ON 000000                    ?_adc_int_handler 0001  
                i1uart_trans@length 0005                          i2_send_msg 1368  
                      ___ftmul@cntr 001B           ToMainHigh_recvmsg@msgtype 0118  
                      ___ftmul@sign 001C                      send_msg@length 010C  
                   __end_of_OpenADC 2426                        ___fttol@exp1 0017  
       __size_of_timer0_int_handler 005E                        ___fttol@lval 0013  
           ??_i2c_slave_int_handler 009A                         _Delay1KTCYx 2D16  
                             ?_main 0001                     __end_of___ftadd 0E22  
                   __end_of___awmod 15A2                     __end_of___ftdiv 1A92  
                   __end_of___ftmul 18B6                               _T0CON 000FD5  
                             _T1CON 000FCD                     __end_of___fttol 19AC  
                   __end_of___lwmod 2318                          i1memcpy@d1 0001  
                             i2l400 04B0                               i1l546 0F94  
                             i1l474 27B6                               i2l406 0550  
                             i2l335 1B12                               i2l372 053E  
                             i2l374 01A4                               i2l392 0378  
                             i1l689 2CEE                               i2l378 01E8  
                        i1memcpy@s1 0003                               _RCREG 000FAE  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR1H 000FCF                               _TMR0L 000FD6  
                             _TMR1L 000FCE                               _SPBRG 000FAF  
                             _PORTA 000F80                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 0080                          i2memcpy@s1 0082  
                      ?_init_queues 0001           __size_of_enter_sleep_mode 0006  
                    i1___awmod@sign 0007                     __end_of_in_main 2A56  
                     ___awtoft@sign 000D          ToMainLow_recvmsg@maxlength 011C  
                     ___ftpack@sign 0005             timer0_lthread@msgbuffer 0106  
           i2c_configure_slave@addr 0100                               tablat 000FF5  
                             status 000FD8              _uart_trans_int_handler 2752  
                  __end_ofi1_memcpy 2B1A                  __size_ofi1___awmod 009C  
                  __end_ofi2_memcpy 2932                  __size_ofi2___awmod 010E  
                   __initialization 20DA                         i2_motorMove 1D92  
                      __end_of_main 0C6A         __size_of_timer1_int_handler 005E  
        __size_of_ToMainLow_recvmsg 0042          __size_of_ToMainLow_sendmsg 0026  
             __size_ofi2_in_low_int 0046       __size_of_FromMainHigh_sendmsg 0036  
                            ??_main 0124                       ___fttol@sign1 0012  
                     i2_WriteTimer0 2D98                       i2_WriteTimer1 2D86  
                   send_msg@msgtype 010D                       __activetblptr 000002  
                   send_msg@tlength 0111                          _SetChanADC 2CA2  
              __end_of_handle_start 1B5E                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ADRESH 000FC4             ??_uart_recv_int_handler 001B  
                  __end_of___awtoft 2986                    __end_of___ftpack 1FA2  
                   _leftDistDesired 0058                              i1l1031 0CB0  
                            i1l1035 0CDC                              i1l1046 0D8C  
                            i1l1055 0DA8                              i1l1065 1A3A  
                            i1l1066 1A60                              i1l4100 1F7E  
                            i1l4300 2B08                              i1l4320 206A  
                            i1l4090 1F22                              i1l4154 222E  
                            i1l4330 20A0                              i1l4242 2012  
                            i1l4092 1F40                              i1l4084 1F0A  
                            i1l4164 228A                              i1l4332 20A4  
                            i1l4340 20C2                              i1l4324 2086  
                            i1l4158 225E                              i1l4238 1FB8  
                            i1l4096 1F56                              i1l4088 1F18  
                            i1l4440 0D1E                              i1l4424 0CEA  
                            i1l4600 19D2                              i1l4520 195C  
                            i1l4344 20D0                              i1l4336 20B8  
                            i1l4328 2098                              i1l4098 1F74  
                            i1l4450 0D52                              i1l4418 0CBE  
                            i1l4530 1984                              i1l4460 0D86  
                            i1l4452 0D5A                              i1l4516 194C  
                            i1l4700 0F48                              i1l4446 0D40  
                            i1l4606 19F8                              i1l4534 199A  
                            i1l4526 1974                              i1l4710 0F80  
                            i1l4702 0F50                              i1l4294 2AEC  
                            i1l4550 1C56                              i1l4448 0D4A  
                            i1l4528 1980                              i1l4392 2456  
                            i1l4466 0DC4                              i1l4458 0D7C  
                            i1l4650 180A                              i1l4730 1BBA  
                            i1l4476 0DFC                              i1l4644 17E4  
                            i1l4398 2468                              i1l4488 295E  
                            i1l4664 1840                              i1l4736 1BFE  
                        _OpenTimer0 2C2A                              i2l3330 2684  
                            i1l4674 186C                              i1l4498 18E0  
                            i1l4690 0E3C                          _OpenTimer1 2B1A  
                            i2l4204 2A02                              i2l4220 13C4  
                            i1l4668 1850                              i1l4692 0E48  
                            i1l4764 0082                              i1l4756 0074  
                            i1l4748 0066                              i2l4310 291A  
                            i1l4678 187C                      __CFG_WDTEN$OFF 000000  
                            i2l4304 28F6                              i2l4250 1E5C  
                            i2l4254 1EC6                              i2l4360 171C  
                            i2l3800 1B46                              i2l4274 1DEE  
                            i2l4196 29E0                              i2l4380 17B4  
                            i2l4372 1788                              i2l4364 173A  
                            i2l4356 16F6                              i2l4268 1DD2  
                            i2l4366 174C                              i2l3910 0512  
                            i2l3822 019A                              i2l4368 1754  
                            i2l4376 179C                              i2l3840 0220  
                            i2l3816 0182                              i2l3930 064E  
                            i2l3922 05B4                              i2l3842 024C  
                            i2l3916 0554                              i2l3860 02E0  
                            i2l3852 0288                              i2l3782 1642  
                            i2l3960 07A4                              i2l3778 15BE  
                            i2l3938 06F4                              i2l3882 03EC  
                            i2l3858 02A0                              i2l3964 07C2  
                            i2l3884 042E                              i2l3798 1B2E  
                            i2l3974 087A                              i2l3888 0440  
                            u402_21 17CE                              i2l3986 08C6  
                            i2l3994 096A                              u404_21 17F4  
       __end_of_i2c_configure_slave 2C7C                              u362_21 0C7A  
                     ??_SleepIfOkay 0084                              u363_21 0C8E  
                __size_of_ReadUSART 001E                              u384_21 18C6  
                            _OSCCON 000FD3                              u397_21 19BC  
                            u399_21 19E2                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
    __size_of_start_i2c_slave_reply 010E                         ?i1_send_msg 000B  
     __end_of_start_i2c_slave_reply 16B0                  timer0_lthread@tptr 0100  
                         ??_OpenADC 0102                        i2_in_low_int 29CC  
                       ?i2_send_msg 008A                      __CFG_XINST$OFF 000000  
             __size_ofi1_uart_trans 009C                  __size_of_OpenUSART 0092  
                            ___ftge 21FE                     _i2c_int_handler 2DCA  
                         ??___ftadd 001E                           ??___awmod 0104  
                         ??___ftdiv 002A   i2c_slave_int_handler@data_written 00B4  
                   _i2c_master_send 10FE                           ??___ftmul 0014  
                         ??___fttol 000D                    OpenTimer0@config 0100  
                            _ic_ptr 01C5                           ??___lwmod 0104  
                     main@msgbuffer 0129                    __end_of_init_i2c 2752  
                  OpenTimer1@config 0100                              _memcpy 27BA  
                            clear_0 20E0                              clear_1 20EC  
                            clear_2 20F8                     ___awmod@divisor 0102  
                            _uc_ptr 005E                      ?i2_WriteTimer0 0080  
                    ?i2_WriteTimer1 0080                     ___awmod@counter 0105  
          i2c_slave_int_handler@ack 009C                              main@ic 0149  
                            main@uc 013A                    __end_of_recv_msg 10FE  
       start_i2c_slave_reply@length 0084               ___ftmul@f3_as_product 0018  
                         ??_in_main 0106                   __end_ofi1___awmod 20DA  
                  __end_of_send_msg 1368                        __pdataCOMRAM 005A  
                 __end_ofi2___awmod 17BE              motorMove@rightDistance 0008  
                i2uart_trans@length 0084                 adc_int_handler@dist 0037  
                            tblptrh 000FF7             timer1_int_handler@F5120 005C  
                            tblptrl 000FF6                              tblptru 000FF8  
                       init_queue@i 0103               __size_ofi2_uart_trans 00B4  
                    i2___awmod@sign 0086            ToMainLow_recvmsg@msgtype 0118  
              __size_of_in_high_int 0012                     __CFG_FOSC$HSPLL 000000  
                   i2motorMove@left 008B                          __accesstop 0080  
                      i1_uart_trans 1FA2             __end_of__initialization 2162  
        __end_of_ToMainHigh_recvmsg 2ADA          __end_of_ToMainHigh_sendmsg 2BF4  
                        ___ftadd@f1 0018                          ___ftadd@f2 001B  
                        ___ftge@ff1 0001                          ___ftge@ff2 0004  
                        ___ftdiv@f1 0024                          ___ftdiv@f2 0027  
                        ___ftdiv@f3 002E                          ___awtoft@c 0009  
                  i1uart_trans@data 0001                          ___ftmul@f1 000E  
                        ___ftmul@f2 0011         __end_of_init_timer1_lthread 2D50  
               __end_of_SleepIfOkay 26E8                          ___fttol@f1 0009  
                    __pcstackCOMRAM 0001                        __pidataBANK0 2DC4  
                      __pidataBANK1 2DDA              __size_ofi2_in_high_int 0012  
                __size_of_check_msg 0036                   __end_of_ReadUSART 2CFE  
                      i2_uart_trans 1E46                 i1SetChanADC@channel 0002  
                       ?_SetChanADC 0001                 __size_ofi1_send_msg 00C0  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 258E  
       __end_of_InterruptHandlerLow 00D8                           ?i2_memcpy 0080  
                     _ToMainHigh_MQ 0286                    _enter_sleep_mode 2DD0  
               __size_ofi2_send_msg 012C                timer1_lthread@length 011E  
                     ReadUSART@data 0001                   __end_of_OpenUSART 21FE  
                     check_msg@qptr 0100                timer1_lthread@retval 0123  
           ??_block_on_To_msgqueues 0106                __size_of_init_queues 0072  
                        __pbssBANK0 00D0                          __pbssBANK1 0166  
                        __pbssBANK2 0200                         ?_OpenTimer0 0001  
                       ?_OpenTimer1 0001                          __pnvCOMRAM 005E  
           __end_of_i2c_int_handler 2DD0                        ?i2_check_msg 0080  
           __end_of_i2c_master_send 123C                  timer1_lthread@tptr 011A  
                           ?___ftge 0001         timer0_int_handler@motorcomm 0010  
                 recv_msg@maxlength 010C                     recv_msg@msgtype 010D  
                   ??i2_WriteTimer0 0082                     ??i2_WriteTimer1 0082  
                   recv_msg@tlength 0114               __size_of_handle_start 00CC  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 0003  
                           ?_memcpy 0100                    WriteTimer1@timer 0003  
                     ??_WriteTimer0 0003                       ??_WriteTimer1 0003  
                         ?___awtoft 0009                           ?___ftpack 0001  
    __size_of_i2c_slave_int_handler 08A0             __size_of_timer0_lthread 0012  
     __end_of_i2c_slave_int_handler 097C                  __size_of_motorMove 007E  
           __size_of_timer1_lthread 0072                          ??i1_memcpy 0007  
                        ??i2_memcpy 0086                    i1send_msg@length 000D  
                     i2_in_high_int 2DAA                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
           ?_uart_trans_int_handler 0001                   __end_of_check_msg 2BBE  
                         ?_init_i2c 0100                         _SleepIfOkay 267A  
               i2WriteTimer0@timer0 0080                 i2WriteTimer1@timer1 0080  
                         ?_recv_msg 010A                             _OpenADC 23A2  
                        _in_low_int 2986                        _handle_start 1A92  
                           __Hparam 0000                 __size_of_SetChanADC 0020  
                         ?_send_msg 010A                             __Lparam 0000  
        __end_of_timer0_int_handler 28D4                        ?i2_motorMove 0085  
                  adc_int_handler@k 003A                    init_uart_recv@uc 0100  
                   __size_of___ftge 0090                             ___ftadd 0C6A  
                           ___awmod 1494                             ___ftdiv 19AC  
                           ___ftmul 17BE                             ___fttol 18B6  
                           ___lwmod 228E                     __CFG_STVREN$OFF 000000  
i2c_slave_int_handler@overrun_error 00B5                             __pcinit 20DA  
                   __size_of_memcpy 005E                          ??___awtoft 000C  
                        ??___ftpack 0006            __size_of_adc_int_handler 017E  
                        _init_queue 24A4                             __ramtop 0400  
               __size_of_OpenTimer0 002A                 __size_of_OpenTimer1 0038  
                           __ptext0 097C                             __ptext1 1CDE  
                           __ptext2 2596                             __ptext3 228E  
                           __ptext4 2B52                             __ptext5 123C  
                           __ptext6 2D2C                             __ptext7 2CC2  
                           __ptext8 2D3E                             __ptext9 2608  
                         _T0CONbits 000FD5                             _in_main 2A12  
                         _T1CONbits 000FCD                    ___awmod@dividend 0100  
               __end_of_WriteTimer0 2D86                 __end_of_WriteTimer1 2D74  
                    ?i2_in_high_int 0080      __end_of_uart_trans_int_handler 27BA  
                    OpenADC@config2 0100                             main@msg 0126  
                    __pintcode_body 251E                end_of_initialization 2162  
           timer1_lthread@msgbuffer 0120        __end_of_FromMainHigh_sendmsg 2B88  
    __size_of_uart_recv_int_handler 00C0          FromMainHigh_sendmsg@length 0119  
                           memcpy@d 0106                             memcpy@n 0104  
                           memcpy@s 0108       __end_of_uart_recv_int_handler 1C1E  
                        ??_init_i2c 0102                       __Lmediumconst 0000  
                           int_func 251E                        ??i1_send_msg 0011  
                 __end_of_motorMove 24A4            adc_int_handler@roundDist 0041  
           __size_of_init_uart_recv 001E                    ?_i2c_int_handler 0001  
                     ?i1_SetChanADC 0001                    ?_i2c_master_send 0100  
                        ??_recv_msg 0111                        ??i2_send_msg 0090  
                        ??_send_msg 0110          __end_of_timer1_int_handler 2876  
                         _RCSTAbits 000FAB                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
         ToMainHigh_sendmsg@msgtype 0096                          _uart_trans 1CDE  
                         _PORTAbits 000F80                  __end_ofi1_send_msg 1CDE  
       FromMainHigh_sendmsg@msgtype 0116                           _TRISCbits 000F94  
                  i2motorMove@right 0085                           i1___awmod 203E  
                __end_ofi2_send_msg 1494                           i2___awmod 16B0  
                       ___ftdiv@exp 0031                      ??i1_SetChanADC 0001  
                         _TXSTAbits 000FAC                          main@length 0139  
                       ?_in_low_int 0102               timer0_lthread@msgtype 0102  
             _start_i2c_slave_reply 15A2                         ___ftmul@exp 0017  
      __size_of_i2c_configure_slave 0028                __size_ofi2_check_msg 0036  
          __end_of_enter_sleep_mode 2DD6                      __end_of___ftge 228E  
                _ToMainHigh_recvmsg 2A98                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 2BBE                           i1memcpy@n 0005  
                         i1memcpy@s 0009           i2c_master_send@recvlength 0100  
                     __pidataCOMRAM 2DD6                      _timer0_lthread 2D2C  
                       ?_init_queue 0100                           i2memcpy@d 0086  
                       _WriteTimer0 2D74                         _WriteTimer1 2D62  
                         i2memcpy@n 0084                           i2memcpy@s 0088  
                    _timer1_lthread 2596                      __end_of_memcpy 2818  
                 _enable_interrupts 2DBC                __size_of_Delay1KTCYx 0016  
                      ??_SetChanADC 0100           i2c_master_send@sendlength 0106  
               ?_ToMainHigh_recvmsg 0118                     ??i2_in_high_int 0082  
               ?_ToMainHigh_sendmsg 0096                  ?_enable_interrupts 0001  
               start_initialization 20DA                       ??_in_high_int 0102  
                         _ReadUSART 2CE0                   ??_adc_int_handler 0033  
                        ?i1___awmod 0001                   __size_ofi1_memcpy 0040  
                 __size_ofi2_memcpy 005E           i2c_master_send@slave_addr 0103  
                        ?i2___awmod 0080                 ??_enable_interrupts 0100  
                      ??_OpenTimer0 0100                        ??_OpenTimer1 0100  
    __size_of_block_on_To_msgqueues 008A       __end_of_block_on_To_msgqueues 23A2  
                         _OpenUSART 216C        __end_of_InterruptHandlerHigh 2596  
                        init_i2c@ic 0100                  motorMove@direction 000A  
              ??_ToMainHigh_recvmsg 011C                ??_ToMainHigh_sendmsg 0099  
                __end_of_SetChanADC 2CC2                            ??___ftge 0007  
            __end_of_timer0_lthread 2D3E                         __pdataBANK0 00E0  
                       __pdataBANK1 01C7              __end_of_timer1_lthread 2608  
                i1___awmod@dividend 0001                __size_ofi2_motorMove 00B4  
         __end_of_enable_interrupts 2DC4                            ??_memcpy 0106  
             timer1_lthread@msgtype 011C                         ?_uart_trans 0100  
              _FromMainHigh_sendmsg 2B52            i2motorMove@rightDistance 0087  
      __size_of_init_timer1_lthread 0012                  __end_of_OpenTimer0 2C54  
                __end_of_OpenTimer1 2B52                   __size_of___awtoft 0054  
                 __size_of___ftpack 00A8                         __pbssCOMRAM 0054  
                        ?_ReadUSART 0001                       ??_init_queues 0104  
                     __pcstackBANK0 0080                       __pcstackBANK1 0100  
               __size_of_in_low_int 0046            start_i2c_slave_reply@msg 0080  
                         _adcbuffer 0166                 __CFG_CCP2MX$DEFAULT 000000  
                   Delay1KTCYx@unit 0100            ToMainLow_sendmsg@msgtype 0017  
      __size_of_InterruptHandlerLow 00C0      i2c_slave_int_handler@data_read 00C1  
               __end_of_in_high_int 2D62                          ?_OpenUSART 0100  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 011A  
                      _ToMainLow_MQ 0182                 __size_of_init_queue 007A  
                    _init_uart_recv 2CC2                           _check_msg 2B88  
                         __pnvBANK1 01C5              ?_start_i2c_slave_reply 0080  
                 __size_of_init_i2c 006A                   OpenADC@portconfig 0101  
                          ?_OpenADC 0100                      motorMove@right 0006  
                      recv_msg@data 010F                        recv_msg@qmsg 0116  
                      recv_msg@slot 0113                        recv_msg@qptr 010A  
                 __size_of_recv_msg 015E                           __pintcode 0008  
                 __size_of_send_msg 012C                            ?___ftadd 0018  
                          ?___awmod 0100                            ?___ftdiv 0024  
                   ?_timer0_lthread 0100                            ?___ftmul 000E  
                          ?___fttol 0009         timer1_int_handler@motorcomm 0010  
                          ?___lwmod 0100                     ?_timer1_lthread 011A  
             ?_FromMainHigh_sendmsg 0116                         __pintcodelo 0018  
                         _distMoved 0057              ToMainHigh_recvmsg@data 011A  
             __end_ofi2_WriteTimer0 2DAA               __end_ofi2_WriteTimer1 2D98  
                          ?_in_main 0104                   WriteTimer0@timer0 0001  
              __end_ofi1_SetChanADC 2D16                  _timer0_int_handler 2876  
                 WriteTimer1@timer1 0001               _i2c_slave_int_handler 00DC  
                i2WriteTimer0@timer 0082                  i2WriteTimer1@timer 0082  
    i2c_slave_int_handler@error_buf 00B1                         ??i1___awmod 0005  
             ToMainLow_sendmsg@data 0018                         ??i2___awmod 0084  
               ?_timer0_int_handler 0001      i2c_slave_int_handler@msg_ready 00BE  
            __end_of_init_uart_recv 2CE0                 __end_of_init_queues 267A  
       i2c_slave_int_handler@length 00BF                 __size_of_uart_trans 00B4  
                     OpenADC@config 0104                            _LATBbits 000F8A  
                   i2check_msg@qptr 0080                          ?_check_msg 0100  
                          _IPR1bits 000F9F                            _PIE1bits 000F9D  
                     ?i2_in_low_int 0082                            i2u301_41 0892  
                          i2u303_41 08DE                            i1u386_20 18FE  
                          i1u386_25 18F6                            _PIR1bits 000F9E  
            ToMainHigh_sendmsg@data 0097                            i2u299_41 07CC  
                          _RCONbits 000FD0                           _motorMove 2426  
                  __CFG_WDTPS$32768 000000                           main@F5223 01C7  
              ??_timer0_int_handler 000D          __size_of_enable_interrupts 0008  
                 i1send_msg@msgtype 000E                   i1send_msg@tlength 0012  
                        _ADCON0bits 000FC2                timer0_lthread@length 0104  
                _timer1_int_handler 2818                            i1_memcpy 2ADA  
              _InterruptHandlerHigh 0008                         _leftEncoder 00DD  
                       ??_ReadUSART 0001                            i2_memcpy 28D4  
              timer0_lthread@msgval 0108                         _in_high_int 2D50  
                      send_msg@data 010E                 _i2c_configure_slave 2C54  
                      send_msg@qmsg 0114                        send_msg@slot 0113  
                      send_msg@qptr 010A                         _INTCON2bits 000FF1  
                         copy_data0 2136                           copy_data1 2156  
               ?_timer1_int_handler 0001                  i2___awmod@dividend 0080  
                   ?_init_uart_recv 0100                       ?i1_uart_trans 0001  
                       ??_OpenUSART 0102                     OpenUSART@config 0105  
                    ??i2_in_low_int 0084                            __Hparam0 0000  
             _uart_recv_int_handler 1B5E                        ??_in_low_int 0104  
                          __Lparam0 0000                    __size_of_OpenADC 0084  
              ?_i2c_configure_slave 0001                          ?_motorMove 0006  
                 ?_enter_sleep_mode 0001                    i2uart_trans@data 0080  
            ??_FromMainHigh_sendmsg 0119                   i1___awmod@divisor 0003  
              ??_timer1_int_handler 000D                   i1___awmod@counter 0006  
                   _adc_int_handler 0E22    i2c_slave_int_handler@messageType 00AE  
                  __size_of___ftadd 01B8            __size_of_i2c_int_handler 0006  
                  __size_of___awmod 010E                        _rightEncoder 00DE  
                  __size_of___ftdiv 00E6                  ??_enter_sleep_mode 0080  
                  __size_of___ftmul 00F8            __size_of_i2c_master_send 013E  
                  __size_of___fttol 00F6                    __size_of___lwmod 008A  
                      ??_init_queue 0102                        ?_WriteTimer0 0001  
                      ?_WriteTimer1 0001            FromMainHigh_sendmsg@data 0117  
                          ___awtoft 2932                            ___ftpack 1EFA  
                     ?i2_uart_trans 0080             ToMainLow_sendmsg@length 001A  
            ?_i2c_slave_int_handler 0001                   main@t0thread_data 0134  
             ?_InterruptHandlerHigh 0001               motorMove@leftDistance 0007  
                  __size_of_in_main 0044                   i2send_msg@msgtype 008D  
       ToMainHigh_recvmsg@maxlength 011C                       motorMove@left 000C  
                 i2send_msg@tlength 0091             init_timer1_lthread@tptr 0100  
                       _init_queues 2608                  __end_of_in_low_int 29CC  
                          __ptext10 24A4                            __ptext11 26E8  
                          __ptext20 2D16                            __ptext12 10FE  
                          __ptext21 2A56                            __ptext13 2C54  
                          __ptext30 23A2                            __ptext22 2A98  
                          __ptext14 2DBC                            __ptext23 0FA0  
                          __ptext15 2318                            __ptext40 2426  
                          __ptext32 2752                            __ptext24 27BA  
                          __ptext16 2A12                            __ptext41 1FA2  
                          __ptext33 1B5E                            __ptext25 1494  
                          __ptext17 2986                            __ptext50 19AC  
                          __ptext42 2D62                            __ptext34 2C7C  
                          __ptext26 2CA2                            __ptext18 2D50  
                          __ptext51 0C6A                            __ptext43 2D74  
                          __ptext35 1C1E                            __ptext27 216C  
                          __ptext19 2B88                            __ptext60 2D98  
                          __ptext52 1EFA                            __ptext44 0E22  
                          __ptext36 2ADA                            __ptext28 2B1A  
                          __ptext61 15A2                            __ptext53 2932  
                          __ptext45 203E                            __ptext37 2CE0  
                          __ptext29 2C2A                            __ptext70 2BF4  
                          __ptext62 1A92                            __ptext46 2CFE  
                          __ptext38 2818                            __ptext71 2DD0  
                          __ptext63 2BBE                            __ptext55 2DCA  
                          __ptext47 18B6                            __ptext39 2876  
                          __ptext64 1368                            __ptext56 00DC  
                          __ptext48 17BE                            __ptext65 28D4  
                          __ptext57 1D92                            __ptext49 21FE  
                          __ptext66 16B0                            __ptext58 1E46  
                          __ptext67 267A                            __ptext59 2D86  
                          __ptext68 29CC                            __ptext69 2DAA  
                    i1send_msg@data 000F              adc_int_handler@channel 003F  
                    i1send_msg@qmsg 0015                      i1send_msg@slot 0014  
                    i1send_msg@qptr 000B                      ??i1_uart_trans 0003  
                          _init_i2c 26E8                 _init_timer1_lthread 2D3E  
                     __size_of_main 02EE                       ??i2_check_msg 0082  
                 main@t1thread_data 0136                         ??_check_msg 0102  
                __end_of_init_queue 251E                __size_of_SleepIfOkay 006E  
                          _recv_msg 0FA0    i2c_slave_int_handler@msg_to_send 00BD  
             ??_i2c_configure_slave 0100                            _send_msg 123C  
            adc_int_handler@voltage 003C                      init_queue@qptr 0100  
                     ??_Delay1KTCYx 0100               __size_ofi1_SetChanADC 0018  
                    ??i2_uart_trans 0082                            _stopCond 00DF  
                  uart_trans@length 0104                        ??_uart_trans 0102  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 0100  
          ??_uart_trans_int_handler 0001                   i2___awmod@divisor 0082  
                 i2___awmod@counter 0085                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2                        _UART_timeout 0054  
                    OpenUSART@spbrg 0100                            memcpy@d1 0100  
                          memcpy@s1 0102             timer0_int_handler@F5118 005A  
             __end_ofi2_in_high_int 2DBC                    i2send_msg@length 008C  
                          intlevel1 0000                            intlevel2 0000  
              ?_InterruptHandlerLow 0001             ??_start_i2c_slave_reply 0082  
                  ___lwmod@dividend 0100              ?_uart_recv_int_handler 0001  
                __end_of_uart_trans 1D92                   SetChanADC@channel 0101  
             _block_on_To_msgqueues 2318                       ?_handle_start 0001  
                  ??_timer0_lthread 0108         __size_of_ToMainHigh_recvmsg 0042  
                      i1_SetChanADC 2CFE             __end_of_adc_int_handler 0FA0  
       __size_of_ToMainHigh_sendmsg 0036                          _OSCCONbits 000FD3  
                  ??_timer1_lthread 0122                       ??i2_motorMove 0088  
                       ??_motorMove 0009            ToMainHigh_sendmsg@length 0099  
               __end_ofi2_check_msg 2C2A               ??_init_timer1_lthread 0102  
            ??_InterruptHandlerHigh 00C2                   _ToMainLow_recvmsg 2A56  
                 _ToMainLow_sendmsg 2C7C                  main@last_reg_recvd 0128  
                   ___lwmod@divisor 0102                __end_ofi2_in_low_int 2A12  
                ?_ToMainLow_recvmsg 0118                 __end_of_Delay1KTCYx 2D2C  
                 ??_i2c_int_handler 00C2                     ___lwmod@counter 0105  
                ?_ToMainLow_sendmsg 0017                   ??_i2c_master_send 0104  
                i2c_master_send@msg 0101                      uart_trans@data 0100  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 008E               ??_InterruptHandlerLow 0043  
               ??_ToMainLow_recvmsg 011C                      i2send_msg@qmsg 0094  
                    i2send_msg@slot 0093                      i2send_msg@qptr 008A  
               ??_ToMainLow_sendmsg 001A       i2c_slave_int_handler@i2c_data 00BC  
                  _rightDistDesired 0059                      ??_handle_start 0080  
              i2motorMove@direction 0089                        _USART_Status 0056  
